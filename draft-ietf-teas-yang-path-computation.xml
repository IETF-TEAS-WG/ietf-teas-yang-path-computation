<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.17 (Ruby 2.7.0) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc comments="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-teas-yang-path-computation-19" category="std" consensus="true" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="Yang for Path Computation">A YANG Data Model for requesting path computation</title>

    <author initials="I." surname="Busi" fullname="Italo Busi" role="editor">
      <organization>Huawei Technologies</organization>
      <address>
        <email>italo.busi@huawei.com</email>
      </address>
    </author>
    <author initials="S." surname="Belotti" fullname="Sergio Belotti" role="editor">
      <organization>Nokia</organization>
      <address>
        <email>sergio.belotti@nokia.com</email>
      </address>
    </author>
    <author initials="O." surname="Gonzalez de Dios" fullname="Oscar Gonzalez de Dios">
      <organization>Telefonica</organization>
      <address>
        <email>oscar.gonzalezdedios@telefonica.com</email>
      </address>
    </author>
    <author initials="A." surname="Sharma" fullname="Anurag Sharma">
      <organization>Google</organization>
      <address>
        <email>ansha@google.com</email>
      </address>
    </author>
    <author initials="Y." surname="Shi" fullname="Yan Shi">
      <organization>China Unicom</organization>
      <address>
        <email>shiyan49@chinaunicom.cn</email>
      </address>
    </author>
    <author initials="D." surname="Ceccarelli" fullname="Daniele Ceccarelli">
      <organization>Ericsson</organization>
      <address>
        <email>daniele.ceccarelli@ericsson.com</email>
      </address>
    </author>

    <date year="2022" month="October" day="17"/>

    
    <workgroup>TEAS Working Group</workgroup>
    

    <abstract>


<t>There are scenarios, typically in a hierarchical Software-Defined
   Networking (SDN) context, where the topology information provided by
   a Traffic Engineering (TE) network provider may be insufficient for
   its client to perform multi-domain path computation. In these cases the
   client would need to request the TE network provider to compute some
   intra-domain paths to be used by the client to choose the optimal multi-domain paths.</t>

<t>This document provides a mechanism to request path computation by augmenting the Remote Procedure Calls (RPCs) defined in RFC YYYY.</t>

<t>[RFC EDITOR NOTE: Please replace RFC YYYY with the RFC number of
   draft-ietf-teas-yang-te once it has been published.</t>

<t>Moreover, this document describes some use cases where the path
   computation request, via YANG-based protocols (e.g., NETCONF or
   RESTCONF), can be needed.</t>



    </abstract>



  </front>

  <middle>


<section anchor="intro"><name>Introduction</name>

<t anchor="pc-model">There are scenarios, typically in a hierarchical Software-Defined
   Networking (SDN) context, where the topology information provided by
   a Traffic Engineering (TE) network provider may be insufficient for
   its client to perform multi-domain path computation. In these cases the
   client would need to request the TE network provider to compute some
   intra-domain paths that could be used together with its topology information
   to compute the multi-domain path.</t>

<t>These types of scenarios can be applied to different interfaces in
   different reference architectures:</t>

<t><list style="symbols">
  <t>Application-Based Network Operations (ABNO) control interface
<xref target="RFC7491"/>, in which an Application Service Coordinator can request the
ABNO controller to take in charge path calculation (see Figure 1
in <xref target="RFC7491"/>).</t>
  <t>Abstraction and Control of TE Networks (ACTN) <xref target="RFC8453"/>, where a
controller hierarchy is defined.
In the ACTN context, path computation is needed on the interface
between Customer Network Controller (CNC)  and Multi-Domain
Service Coordinator (MDSC), called CNC-MDSC Interface (CMI),
and on the interface between MSDC and Provisioning Network
Controller (PNC), called MDSC-PNC Interface  (MPI). 
<xref target="RFC8454"/> describes an information model for the Path
Computation request.  <vspace blankLines='1'/>
Multiple protocol solutions can be used for communication between
different controller hierarchical levels. This document assumes that
the controllers are communicating using YANG-based protocols (e.g.,
NETCONF <xref target="RFC6241"/> or RESTCONF <xref target="RFC8040"/>).  <vspace blankLines='1'/>
Path Computation Elements (PCEs), controllers and orchestrators
perform their operations based on Traffic Engineering Databases
(TED). Such TEDs can be described, in a technology agnostic way, with
the YANG data model for TE Topologies <xref target="RFC8795"/>. Furthermore, the
technology specific details of the TED are modelled in the technology
specific topology models, e.g., the <xref target="I-D.ietf-ccamp-otn-topo-yang"/> for Optical Transport
Network (OTN) Optical Data Unit (ODU) technologies, which augment the
common TE topology model in <xref target="RFC8795"/>.  <vspace blankLines='1'/>
The availability of such topology models allows the provisioning of
the TED using YANG-based protocols (e.g., NETCONF or RESTCONF).
Furthermore, it enables a PCE/controller performing the necessary
abstractions or modifications and offering this customized topology
to another PCE/controller or high level orchestrator.  <vspace blankLines='1'/>
The tunnels that can be provided over the networks described with the
topology models can be also set-up, deleted and modified via YANG-
based protocols (e.g., NETCONF or RESTCONF) using the TE tunnel YANG
data model <xref target="I-D.ietf-teas-yang-te"/>.  <vspace blankLines='1'/>
This document defines a YANG data model <xref target="RFC7950"/> that augments the RPC defined in <xref target="I-D.ietf-teas-yang-te"/>. The use of this RPC is complimentary to the configuration of a TE tunnel path in "compute-only" mode, as described in <xref target="I-D.ietf-teas-yang-te"/>.  <vspace blankLines='1'/>
The YANG data model definition does not make any assumption about
whether that the client or the server implement a "PCE"
functionality, as defined in <xref target="RFC4655"/>, and the Path Computation
Element Communication Protocol (PCEP) protocol, as defined in
<xref target="RFC5440"/>.  <vspace blankLines='1'/>
Moreover, this document describes some use cases where a path
computation request, via YANG-based protocols (e.g., NETCONF or
RESTCONF), can be needed.  <vspace blankLines='1'/>
The YANG data model defined in this document conforms to the Network
Management Datastore Architecture <xref target="RFC8342"/>.</t>
</list></t>

<section anchor="terminology"><name>Terminology</name>

<t>TED:</t>

<ul empty="true"><li>
  <t>The traffic engineering database is a collection of all TE
   information about all TE nodes and TE links in a given network.</t>
</li></ul>

<t>PCE:</t>

<ul empty="true"><li>
  <t>A Path Computation Element (PCE) is an entity that is capable of
   computing a network path or route based on a network graph, and of
   applying computational constraints during the computation.  The PCE
   entity is an application that can be located within a network node or
   component, on an out-of-network server, etc.  For example, a PCE
   would be able to compute the path of a TE Label Switched Path (LSP)
   by operating on the TED and considering bandwidth and other
   constraints applicable to the TE LSP service request. <xref target="RFC4655"/>.</t>
</li></ul>

<t>Domain:</t>

<ul empty="true"><li>
  <t>TE information is the data relating to nodes and TE links
   that is used in the process of selecting a TE path.  TE information
   is usually only available within a network.  We call such a zone of
   visibility of TE information a domain.  An example of a domain may be
   an IGP area or an Autonomous System. <xref target="RFC7926"/></t>
</li></ul>

<t>The terminology for describing YANG data models is found in
   <xref target="RFC7950"/>.</t>

</section>
<section anchor="tree-diagram"><name>Tree Diagram</name>

<t>Tree diagrams used in this document follow the notation defined in
   <xref target="RFC8340"/>.</t>

</section>
<section anchor="prefixes-in-data-node-names"><name>Prefixes in Data Node Names</name>

<t>In this document, names of data nodes and other data model objects
   are prefixed using the standard prefix associated with the
   corresponding YANG imported modules, as shown in <xref target="tab-prefix"/>.</t>

<texttable title="Prefixes and corresponding YANG modules" anchor="tab-prefix">
      <ttcol align='left'>Prefix</ttcol>
      <ttcol align='left'>YANG module</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>te-types</c>
      <c>ietf-te-types</c>
      <c>[RFCZZZZ]</c>
      <c>te</c>
      <c>ietf-te</c>
      <c>[RFCYYYY]</c>
      <c>te-pc</c>
      <c>ietf-te-path-computation</c>
      <c>RFCXXXX</c>
</texttable>

<t>RFC Editor Note:
Please replace XXXX with the RFC number assigned to this document.
Please replace YYYY with the RFC number of <xref target="I-D.ietf-teas-yang-te"/> once it has been published.
Please replace ZZZZ with the RFC number of <xref target="I-D.ietf-teas-rfc8776-update"/> once it has been published.
Please remove this note.</t>

</section>
</section>
<section anchor="use-cases"><name>Use Cases</name>

<t>This section presents some use cases, where a client needs to request
   underlying SDN controllers for path computation.</t>

<t>The use of the YANG data model defined in this document is not
   restricted to these use cases but can be used in any other use case
   when deemed useful.</t>

<t>The presented uses cases have been grouped, depending on the
   different underlying topologies: Packet/Optical Integration (<xref target="poi-uc"/>);
   multi-domain Traffic Engineered (TE) Networks (<xref target="md-uc"/>); and Data Center
   Interconnections (<xref target="dci-uc"/>). Use cases in <xref target="brpc-uc"/> and <xref target="hpce-uc"/>
   respectively present how to
   apply this YANG data model for standard multi-domain PCE i.e.
   Backward Recursive Path Computation <xref target="RFC5441"/> and Hierarchical PCE
   <xref target="RFC6805"/>.</t>

<section anchor="poi-uc"><name>Packet/Optical Integration</name>

<t>In this use case, an optical domain is used to provide connectivity
   to some nodes of a packet domain (see <xref target="fig-poi-uc"/>).</t>

<figure title="Packet/Optical Integration use case" anchor="fig-poi-uc"><artwork type="ascii-art" name="poi-use-case.txt"><![CDATA[
                                +----------------+
                                |                |
                                | Packet/Optical |
                                |  Coordinator   |
                                |                |
                                +---+------+-----+
                                    |      |
                       +------------+      |
                       |                   +-----------+
                +------V-----+                         |
                |            |                  +------V-----+
                | Packet     |                  |            |
                | Domain     |                  | Optical    |
                | Controller |                  | Domain     |
                |            |                  | Controller |
                +------+-----+                  +-------+----+
                       |                                |
              .........V.........................       |
              :          packet domain          :       |
          +----+                               +----+   |
          | R1 |= = = = = = = = = = = = = = = =| R2 |   |
          +-+--+                               +--+-+   |
            | :                                 : |     |
            | :................................ : |     |
            |                                     |     |
            |               +-----+               |     |
            |    ...........| Opt |...........    |     |
            |    :          |  C  |          :    |     |
            |    :         /+--+--+\         :    |     |
            |    :        /    |    \        :    |     |
            |    :       /     |     \       :    |     |
            |   +-----+ /   +--+--+   \ +-----+   |     |
            |   | Opt |/    | Opt |    \| Opt |   |     |
            +---|  A  |     |  D  |     |  B  |---+     |
                +-----+\    +--+--+    /+-----+         |
                 :      \      |      /      :          |
                 :       \     |     /       :          |
                 :        \ +--+--+  / optical<---------+
                 :         \| Opt |/  domain :
                 :..........|  E  |..........:
                            +-----+
]]></artwork></figure>

<t><xref target="fig-poi-uc"/> as well as <xref target="fig-poi-abstraction"/> describe two different
   examples of packet/optical topologies and only show a partial view of the
   packet network connectivity, before additional packet connectivity is
   provided by the optical network.</t>

<t>It is assumed that the Optical Domain Controller provides to the
   Packet/Optical Coordinator an abstracted view of the optical network.
   A possible abstraction could be to represent the whole optical
   network as one "virtual node" with "virtual ports" connected to the
   access links, as shown in <xref target="fig-poi-abstraction"/>.</t>

<t>It is also assumed that Packet Domain Controller can provide the
   Packet/Optical Coordinator the information it needs to set up
   connectivity between packet nodes through the optical network (e.g.,
   the access links).</t>

<t>The path computation request helps the Packet/Optical Coordinator to
   know the real connections that can be provided by the optical
   network.</t>

<figure title="Packet and Optical Topology Abstractions" anchor="fig-poi-abstraction"><artwork type="ascii-art" name="poi-topology-abstraction.txt"><![CDATA[
                       ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,.
                      ,  Packet/Optical Coordinator view          ,
                     ,                              +----+       , .
                    ,                               |    |      ,
                   ,                                | R2 |     ,   .
                  ,  +----+  +------------ +       /+----+    ,
                 ,   |    |  |             |/-----/ / /      ,     .
                ,    | R1 |--O VP1     VP4 O       / /      ,
               ,     |    |\ |             | /----/ /      ,       .
              ,      +----+ \|             |/      /      ,
             ,        /      O VP2     VP5 O      /      ,         .
            ,        /       |             |  +----+    ,
           ,        /        |             |  |    |   ,           .
          ,        /         O VP3     VP6 O--| R4 |  ,
         ,     +----+ /-----/|_____________|  +----+ ,             .
        ,      |    |/       +------------ +        ,
       ,       | R3 |                              ,               .
      ,        +----+                             ,,,,,,,,,,,,,,,,,
     ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,                ,.
     . Packet Domain Controller view                +----+       ,
       only packet nodes and packet links           |    |      ,  .
     . with access links to the optical network     | R2 |     ,
                  ,  +----+                        /+----+    ,    .
     .           ,   |    |                 /-----/ / /      ,
                ,    | R1 |---                     / /      ,      .
     .         ,     +----+\                 /----/ /      ,
              ,        /    \               /      /      ,        .
     .       ,        /                           /      ,
            ,        /                        +----+    ,          .
     .     ,        /                         |    |   ,
          ,        /                       ---| R4 |  ,            .
     .   ,     +----+ /-----/                 +----+ ,
        ,      |    |/                              ,              .
     . ,       | R3 |                              ,
      ,        +----+                             ,,,,,,,,,,,,,,,,,.
     .,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,                ,
       Optical Domain Controller view                            , .
     . only optical nodes,        +--+                          ,
       optical links and         /|OF|                         ,   .
     . access links from the  +--++--+             /          ,
       packet network         |OA|    \     /-----/ /        ,     .
     .          ,          ---+--+--\  +--+/       /        ,
               ,           \   |  \  \-|OE|-------/        ,       .
     .        ,             \  |   \ /-+--+               ,
             ,               \+--+  X    |               ,         .
     .      ,                 |OB|-/ \   |              ,
           ,                  +--+-\  \+--+            ,           .
     .    ,                  /   \  \--|OD|---        ,
         ,            /-----/     +--+ +--+          ,             .
     .  ,            /            |OC|/             ,
       ,                          +--+             ,               .
     .,                                           ,,,,,,,,,,,,,,,,,,
      ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,                ,
     . Actual Physical View                         +----+       ,
                    ,             +--+              |    |      ,
     .             ,             /|OF|              | R2 |     ,
                  ,  +----+   +--++--+             /+----+    ,
     .           ,   |    |   |OA|    \     /-----/ / /      ,
                ,    | R1 |---+--+--\  +--+/       / /      ,
     .         ,     +----+\   |  \  \-|OE|-------/ /      ,
              ,        /    \  |   \ /-+--+        /      ,
     .       ,        /      \+--+  X    |        /      ,
            ,        /        |OB|-/ \   |    +----+    ,
     .     ,        /         +--+-\  \+--+   |    |   ,
          ,        /         /   \  \--|OD|---| R4 |  ,
     .   ,     +----+ /-----/     +--+ +--+   +----+ ,
        ,      |    |/            |OC|/             ,
     . ,       | R3 |             +--+             ,
      ,        +----+                             ,
     .,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
]]></artwork></figure>

<t>In this use case, the Packet/Optical Coordinator needs to set up an
   optimal underlying path for an IP link between R1 and R2.</t>

<t>As depicted in <xref target="fig-poi-abstraction"/>, the Packet/Optical Coordinator has only an
   "abstracted view" of the physical network, and it does not know the
   feasibility or the cost of the possible optical paths (e.g., VP1-VP4
   and VP2-VP5), which depend on the current status of the physical
   resources within the optical network and on vendor-specific optical
   attributes.</t>

<t>The Packet/Optical Coordinator can request the underlying Optical
   Domain Controller to compute a set of potential optimal paths, taking
   into account optical constraints. Then, based on its own constraints,
   policy and knowledge (e.g. cost of the access links), it can choose
   which one of these potential paths to use to set up the optimal end-
   to-end path crossing optical network.</t>

<figure title="Packet/Optical Integration path computation example" anchor="fig-poi-example"><artwork type="ascii-art" name="poi-example.txt"><![CDATA[
                    ............................
                    :                          :
                    O VP1                  VP4 O
           cost=10 /:\                        /:\ cost=10
                  / : \----------------------/ : \
          +----+ /  :         cost=50          :  \ +----+
          |    |/   :                          :   \|    |
          | R1 |    :                          :    | R2 |
          |    |\   :                          :   /|    |
          +----+ \  :  /--------------------\  :  / +----+
                  \ : /       cost=55        \ : /
            cost=5 \:/                        \:/ cost=5
                    O VP2                  VP5 O
                    :                          :
                    :..........................:
]]></artwork></figure>

<t>For example, in <xref target="fig-poi-example"/>, the Packet/Optical Coordinator can request
   the Optical Domain Controller to compute the paths between VP1-VP4
   and VP2-VP5 and then decide to set up the optimal end-to-end path
   using the VP2-VP5 optical path even if this is not the optimal path
   from the optical domain perspective.</t>

<t>Considering the dynamicity of the connectivity constraints of an
   optical domain, it is possible that a path computed by the Optical
   Domain Controller when requested by the Packet/Optical Coordinator is
   no longer valid/available when the Packet/Optical Coordinator
   requests it to be set up. This is further discussed in <xref target="rpc-motivation"/>.</t>

</section>
<section anchor="md-uc"><name>Multi-domain TE networks</name>

<t>In this use case there are two TE domains which are interconnected
   together by multiple inter-domains links.</t>

<t>A possible example could be a multi-domain optical network.</t>

<figure title="Multi-domain multi-link interconnection" anchor="md-ml-connection"><artwork type="ascii-art" name="multi-domain-use-case.txt"><![CDATA[
                            +--------------+
                            | Multi-Domain |
                            | Controller   |
                            +---+------+---+
                                |      |
                   +------------+      |
                   |                   +-----------+
            +------V-----+                         |
            |            |                         |
            | TE Domain  |                  +------V-----+
            | Controller |                  |            |
            |      1     |                  | TE Domain  |
            +------+-----+                  | Controller |
                   |                        |      2     |
                   |                        +------+-----+
          .........V..........                     |
          :                  :                     |
         +-----+             :                     |
         |     |             :            .........V..........
         |  X  |             :            :                  :
         |     |          +-----+      +-----+                :
         +-----+          |     |      |     |               :
          :               |  C  |------|  E  |               :
      +-----+    +-----+ /|     |      |     |\ +-----+    +-----+
      |     |    |     |/ +-----+      +-----+ \|     |    |     |
      |  A  |----|  B  |     :            :     |  G  |----|  H  |
      |     |    |     |\    :            :    /|     |    |     |
      +-----+    +-----+ \+-----+      +-----+/ +-----+    +-----+
          :               |     |      |     |               :
          :               |  D  |------|  F  |               :
          :               |     |      |     |          +-----+
          :               +-----+      +-----+          |     |
          :                  :            :             |  Y  |
          :                  :            :             |     |
          :   TE domain 1    :            : TE domain 2 +-----+
          :..................:            :.................:
]]></artwork></figure>

<t>In order to set up an end-to-end multi-domain TE path (e.g., between
   nodes A and H), the Multi-Domain Controller needs to know the
   feasibility or the cost of the possible TE paths within the two TE
   domains, which depend on the current status of the physical resources
   within each TE domain. This is more challenging in case of optical
   networks because the optimal paths depend also on vendor-specific
   optical attributes (which may be different in the two domains if they
   are provided by different vendors).</t>

<t>In order to set up a multi-domain TE path (e.g., between nodes A and
   H), the Multi-Domain Controller can request the TE Domain Controllers
   to compute a set of intra-domain optimal paths and take decisions
   based on the information received. For example:</t>

<t><list style="symbols">
  <t>The Multi-Domain Controller asks TE Domain Controllers to provide
set of paths between A-C, A-D, E-H and F-H</t>
  <t>TE Domain Controllers return a set of feasible paths with the
associated costs: the path A-C is not part of this set (in optical
networks, it is typical to have some paths not being feasible due
to optical constraints that are known only by the Optical Domain
Controller)</t>
  <t>The Multi-Domain Controller will select the path A-D-F-H since it
is the only feasible multi-domain path and then request the TE
Domain Controllers to set up the A-D and F-H intra-domain paths</t>
  <t>If there are multiple feasible paths, the Multi-Domain Controller
can select the optimal path knowing the cost of the intra-domain
paths (provided by the TE domain controllers) and the cost of the
inter-domain links (known by the Multi-Domain Controller)  <vspace blankLines='1'/>
This approach may have some scalability issues when the number of TE
domains is quite big (e.g. 20).  <vspace blankLines='1'/>
In this case, it would be worthwhile using the abstract TE topology
information provided by the TE Domain Controllers to limit the number
of potential optimal end-to-end paths and then request path
computation from fewer TE Domain Controllers in order to decide what
the optimal path within this limited set is.  <vspace blankLines='1'/>
For more details, see <xref target="topo-pc-complement"/>.</t>
</list></t>

</section>
<section anchor="dci-uc"><name>Data Center Interconnections</name>

<t>In these use case, there is a TE domain which is used to provide
   connectivity between Data Centers which are connected with the TE
   domain using access links.</t>

<figure title="Data Center Interconnection use case" anchor="fig-dci-uc"><artwork type="ascii-art" name="dci-use-case.txt"><![CDATA[
                        +--------------+
                        | Cloud Network|
                        | Orchestrator |
                        +--------------+
                          |  |  |  |
            +-------------+  |  |  +------------------------+
            |                |  +------------------+        |
            |       +--------V---+                 |        |
            |       |            |                 |        |
            |       | TE Network |                 |        |
     +------V-----+ | Controller |          +------V-----+  |
     | DC         | +------------+          | DC         |  |
     | Controller |     |                   | Controller |  |
     +------------+     |   +-----+         +------------+  |
          |         ....V...|     |........         |       |
          |         :       |  P  |       :         |       |
     .....V.....    :      /+-----+\      :    .....V.....  |
     :         :  +-----+ /    |    \ +-----+  :         :  |
     :  DC1 || :  |     |/     |     \|     |  :  DC2 || :  |
     :    ||||----| PE1 |      |      | PE2 |----   |||| :  |
     : _|||||| :  |     |\     |     /|     |  : _|||||| :  |
     :         :  +-----+ \ +-----+ / +-----+  :         :  |
     :.........:    :      \|     |/      :    :.........:  |
                    :.......| PE3 |.......:                 |
                            |     |                         |
                            +-----+               +---------V--+
                          .....|.....             | DC         |
                          :         :             | Controller |
                          :  DC3 || :             +------------+
                          :    |||| :                  |
                          : _|||||| <------------------+
                          :         :
                          :.........:
]]></artwork></figure>

<t>In this use case, there is the need to transfer data from Data Center
   1 (DC1) to either DC2 or DC3 (e.g. workload migration).</t>

<t>The optimal decision depends both on the cost of the TE path (DC1-DC2
   or DC1-DC3) and of the Data Center resources within DC2 or DC3.</t>

<t>The Cloud Network Orchestrator needs to make a decision for optimal
   connection based on TE network constraints and Data Center resources.</t>

<t>It may not be able to make this decision because it has only an
   abstract view of the TE network (as in <xref target="poi-uc"/>).</t>

<t>The Cloud Network Orchestrator can request to the TE Network
   Controller to compute the cost of the possible TE paths (e.g., DC1-
   DC2 and DC1-DC3) and to the DC Controller to provide the information
   it needs about the required Data Center resources within DC2 and DC3
   and then it can take the decision about the optimal solution based on
   this information and its policy.</t>

</section>
<section anchor="brpc-uc"><name>Backward Recursive Path Computation scenario</name>

<t><xref target="RFC5441"/> has defined the Virtual Source Path Tree (VSPT) flag within the RP (Request Parameters) object in order to compute inter-domain paths following a
   "Backward Recursive Path Computation" (BRPC) method. The main
   principle is to forward the PCReq message up to the destination
   domain. Then, each PCE involved in the computation will compute its
   part of the path and send it back to the requester through PCE
   Response message. The resulting computation is spread from
   destination PCE to source PCE. Each PCE is in charge of merging the
   path it received with the one it calculated. At the end, the source
   PCE merges its local part of the path with the received one to
   achieve the end-to-end path.</t>

<t><xref target="fig-brpc-example"/> below show a typical BRPC scenario where 3 PCEs cooperate to
   compute inter-domain paths.</t>

<figure title="BRPC Scenario" anchor="fig-brpc-example"><artwork type="ascii-art" name="brpc-scenario.txt"><![CDATA[
                   +----------------+          +----------------+
                   |  Domain (B)    |          |  Domain (C)    |
                   |                |          |                |
                   |        /-------|---PCEP---|--------\       |
                   |       /        |          |         \      |
                   |   (PCE)        |          |   -    (PCE)   |
                   |    /           <---------->  |D|           |
                   |   /            |  Inter   |   -            |
                   +---|----^-------+  Domain  +----------------+
                       |    |          Link
                     PCEP   |
                       |    | Inter-domain Link
                       |    |
                   +---|----v-------+
                   |   |            |
                   |   | Domain (A) |
                   |   \            |
                   |  (PCE)    -    |
                   |          |S|   |
                   |           -    |
                   +----------------+
]]></artwork></figure>

<t>In this use case, a client can use the YANG data model defined in
   this document to request path computation from the PCE that controls
   the source of the tunnel. For example, a client can request to the
   PCE of domain A to compute a path from a source S, within domain A,
   to a destination D, within domain C. Then PCE of domain A will use
   PCEP protocol, as per <xref target="RFC5441"/>, to compute the path from S to D and
   in turn gives the final answer to the requester.</t>

</section>
<section anchor="hpce-uc"><name>Hierarchical PCE scenario</name>

<t><xref target="RFC6805"/> has defined an architecture and extensions to the PCE
   standard to compute inter-domain path following a hierarchical
   method. Two new roles have been defined: parent PCE and child PCE.
   The parent PCE is in charge to coordinate the end-to-end path
   computation. For that purpose it sends to each child PCE involved in
   the multi-domain path computation a PCE Request message to obtain the
   local part of the path. Once received all answer through PCE Response
   message, the parent PCE will merge the different local parts of the
   path to achieve the end-to-end path.</t>

<t><xref target="fig-hpce-example"/> below shows a typical hierarchical scenario where a parent
   PCE request end-to-end path to the different child PCE. Note that a
   PCE could take independently the role of child or parent PCE
   depending of which PCE will request the path.</t>

<figure title="Hierarchical domain topology from RFC6805" anchor="fig-hpce-example"><artwork type="ascii-art" name="hierarchical-domain-topology.txt"><![CDATA[
    -----------------------------------------------------------------
    |   Domain 5                                                      |
    |                              -----                              |
    |                             |PCE 5|                             |
    |                              -----                              |
    |                                                                 |
    |    ----------------     ----------------     ----------------   |
    |   | Domain 1       |   | Domain 2       |   | Domain 3       |  |
    |   |                |   |                |   |                |  |
    |   |        -----   |   |        -----   |   |        -----   |  |
    |   |       |PCE 1|  |   |       |PCE 2|  |   |       |PCE 3|  |  |
    |   |        -----   |   |        -----   |   |        -----   |  |
    |   |                |   |                |   |                |  |
    |   |            ----|   |----        ----|   |----            |  |
    |   |           |BN11+---+BN21|      |BN23+---+BN31|           |  |
    |   |   -        ----|   |----        ----|   |----        -   |  |
    |   |  |S|           |   |                |   |           |D|  |  |
    |   |   -        ----|   |----        ----|   |----        -   |  |
    |   |           |BN12+---+BN22|      |BN24+---+BN32|           |  |
    |   |            ----|   |----        ----|   |----            |  |
    |   |                |   |                |   |                |  |
    |   |         ----   |   |                |   |   ----         |  |
    |   |        |BN13|  |   |                |   |  |BN33|        |  |
    |    -----------+----     ----------------     ----+-----------   |
    |                \                                /               |
    |                 \       ----------------       /                |
    |                  \     |                |     /                 |
    |                   \    |----        ----|    /                  |
    |                    ----+BN41|      |BN42+----                   |
    |                        |----        ----|                       |
    |                        |                |                       |
    |                        |        -----   |                       |
    |                        |       |PCE 4|  |                       |
    |                        |        -----   |                       |
    |                        |                |                       |
    |                        | Domain 4       |                       |
    |                         ----------------                        |
    |                                                                 |
     -----------------------------------------------------------------
]]></artwork></figure>

<t>In this use case, a client can use the YANG data model defined in
   this document to request to the parent PCE a path from a source S to
   a destination D. The parent PCE will in turn contact the child PCEs
   through PCEP protocol to compute the end-to-end path and then return
   the computed path to the client, using the YANG data model defined in
   this document. For example the YANG data model can be used to request
   to PCE5 acting as parent PCE to compute a path from source S, within
   domain 1, to destination D, within domain 3. PCE5 will contact child
   PCEs of domain 1, 2 and 3 to obtain local part of the end-to-end path
   through the PCEP protocol. Once received the PCRep message, it
   merges the answers to compute the end-to-end path and send it back to
   the client.</t>

</section>
</section>
<section anchor="motivations"><name>Motivations</name>

<t>This section provides the motivation for the YANG data model defined
   in this document.</t>

<t><xref target="yang-motivation"/> describes the motivation for a YANG data model to request
   path computation.</t>

<t><xref target="topo-interaction"/> describes the motivation for a YANG data model which
   complements the TE topology YANG data model defined in <xref target="RFC8795"/>.</t>

<t><xref target="rpc-motivation"/> describes the motivation for a YANG RPC which complements
   the TE tunnel YANG data model defined in <xref target="I-D.ietf-teas-yang-te"/>.</t>

<section anchor="yang-motivation"><name>Motivation for a YANG Model</name>

<section anchor="benefits-of-common-data-models"><name>Benefits of common data models</name>

<t>The YANG data model for requesting path computation is closely
   aligned with the YANG data models that provide (abstract) TE topology
   information, i.e., <xref target="RFC8795"/> as well as that are used to configure
   and manage TE tunnels, i.e., <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>There are many benefits in aligning the data model used for path
   computation requests with the YANG data models used for TE topology
   information and for TE tunnels configuration and management:</t>

<t><list style="symbols">
  <t>There is no need for an error-prone mapping or correlation of
information.</t>
  <t>It is possible to use the same endpoint identifiers in path
computation requests and in the topology modeling.</t>
  <t>The attributes used for path computation constraints are the same
as those used when setting up a TE tunnel.</t>
</list></t>

</section>
<section anchor="benefits-of-a-single-interface"><name>Benefits of a single interface</name>

<t>The system integration effort is typically lower if a single,
   consistent interface is used by controllers, i.e., one data modeling
   language (i.e., YANG) and a common protocol (e.g., NETCONF or
   RESTCONF).</t>

<t>Practical benefits of using a single, consistent interface include:</t>

<t><list style="numbers">
  <t>Simple authentication and authorization: The interface between
different components has to be secured. If different protocols
have different security mechanisms, ensuring a common access
control model may result in overhead. For instance, there may be a
need to deal with different security mechanisms, e.g., different
credentials or keys. This can result in increased integration
effort.</t>
  <t>Consistency: Keeping data consistent over multiple different
interfaces or protocols is not trivial. For instance, the sequence
of actions can matter in certain use cases, or transaction
semantics could be desired. While ensuring consistency within one
protocol can already be challenging, it is typically cumbersome to
achieve that across different protocols.</t>
  <t>Testing: System integration requires comprehensive testing,
including corner cases. The more different technologies are
involved, the more difficult it is to run comprehensive test cases
and ensure proper integration.</t>
  <t>Middle-box friendliness: Provider and consumer of path computation
requests may be located in different networks, and middle-boxes
such as firewalls, NATs, or load balancers may be deployed. In
such environments it is simpler to deploy a single protocol. Also,
it may be easier to debug connectivity problems.</t>
  <t>Tooling reuse: Implementers may want to implement path computation
requests with tools and libraries that already exist in
controllers and/or orchestrators, e.g., leveraging the rapidly
growing eco-system for YANG tooling.</t>
</list></t>

</section>
<section anchor="extensibility"><name>Extensibility</name>

<t>Path computation is only a subset of the typical functionality of a
   controller. In many use cases, issuing path computation requests
   comes along with the need to access other functionality on the same
   system. In addition to obtaining TE topology, for instance also
   configuration of services (set-up/modification/deletion) may be
   required, as well as:</t>

<t><list style="numbers">
  <t>Receiving notifications for topology changes as well as
integration with fault management</t>
  <t>Performance management such as retrieving monitoring and telemetry
data</t>
  <t>Service assurance, e.g., by triggering OAM functionality</t>
  <t>Other fulfilment and provisioning actions beyond tunnels and
services, such as changing QoS configurations  <vspace blankLines='1'/>
YANG is a very extensible and flexible data modeling language that
can be used for all these use cases.</t>
</list></t>

</section>
</section>
<section anchor="topo-interaction"><name>Interactions with TE topology</name>

<t>The use cases described in <xref target="use-cases"/> have been described assuming
   that the topology view exported by each underlying controller to its
   client is aggregated using the "virtual node model", defined in
   <xref target="RFC7926"/>.</t>

<t>TE topology information, e.g., as provided by <xref target="RFC8795"/>, could in
   theory be used by an underlying controller to provide TE information
   to its client thus allowing a PCE available within its client to
   perform multi-domain path computation on its own, without requesting
   path computations to the underlying controllers.</t>

<t>In case the client does not implement a PCE function, as discussed in
   <xref target="intro"/>, it could not perform path computation based on TE topology
   information and would instead need to request path computation from
   the underlying controllers to get the information it needs to find
   the optimal end-to-end path.</t>

<t>In case the client implements a PCE function, as discussed in 
   <xref target="intro"/>, the TE topology information needs to be complete and accurate,
   which would bring to scalability issues.</t>

<t>Using TE topology to provide a "virtual link model" aggregation, as
   described in <xref target="RFC7926"/>, may be insufficient, unless the aggregation
   provides complete and accurate information, which would still cause
   scalability issues, as described in <xref target="topo-aggregation"/> below.</t>

<t>Using TE topology abstraction, as described in <xref target="RFC7926"/>, may lead to
   compute an unfeasible path, as described in <xref target="RFC7926"/> in 
   <xref target="topo-abstraction"/> below.</t>

<t>Therefore when computing an optimal multi-domain path, there is a
   scalability trade-off between providing complete and accurate TE
   information and the number of path computation requests to the
   underlying controllers.</t>

<t>The TE topology information used, in a complimentary way, to reduce
   the number for path computation requests to the underlying
   controllers, are described in <xref target="topo-pc-complement"/> below.</t>

<section anchor="topo-aggregation"><name>TE topology aggregation</name>

<t>Using the TE topology model, as defined in <xref target="RFC8795"/>, the underlying
   controller can export the whole TE domain as a single TE node with a
   "detailed connectivity matrix" (which provides specific TE
   attributes, such as delay, Shared Risk Link Groups (SRLGs) and other
   TE metrics, between each ingress and egress links).</t>

<t>The information provided by the "detailed connectivity matrix" would
   be equivalent to the information that should be provided by "virtual
   link model" as defined in <xref target="RFC7926"/>.</t>

<t>For example, in the Packet/Optical Integration use case, described in
   <xref target="poi-uc"/>, the Optical Domain Controller can make the information
   shown in <xref target="fig-poi-example"/> available to the Packet/Optical Coordinator as part
   of the TE topology information and the Packet/Optical Coordinator
   could use this information to calculate on its own the optimal path
   between R1 and R2, without requesting any additional information to
   the Optical Domain Controller.</t>

<t>However, when designing the amount of information to provide within
   the "detailed connectivity matrix", there is a tradeoff to be
   considered between accuracy (i.e., providing "all" the information
   that might be needed by the PCE available within the client) and
   scalability.</t>

<t><xref target="poi-multi-path"/> below shows another example, similar to <xref target="fig-poi-example"/>, where
   there are two possible Optical paths between VP1 and VP4 with
   different properties (e.g., available bandwidth and cost).</t>

<figure title="Packet/Optical Integration path computation Example with multiple choices" anchor="poi-multi-path"><artwork type="ascii-art" name="poi-example-multiple.txt"><![CDATA[
                    ............................
                    :  /--------------------\  :
                    : /       cost=65        \ :
                    :/    available-bw=10G    \:
                    O VP1                  VP4 O
           cost=10 /:\                        /:\ cost=10
                  / : \----------------------/ : \
          +----+ /  :         cost=50          :  \ +----+
          |    |/   :     available-bw=2G      :   \|    |
          | R1 |    :                          :    | R2 |
          |    |\   :                          :   /|    |
          +----+ \  :  /--------------------\  :  / +----+
                  \ : /       cost=55        \ : /
            cost=5 \:/    available-bw=3G     \:/ cost=5
                    O VP2                  VP5 O
                    :                          :
                    :..........................:
]]></artwork></figure>

<t>If the information in the "detailed connectivity matrix" is not
   complete/accurate, we can have the following drawbacks:</t>

<t><list style="symbols">
  <t>If only the VP1-VP4 path with available bandwidth of 2 Gb/s and
cost 50 is reported, the client's PCE will fail to compute a 5
Gb/s path between routers R1 and R2, although this would be
feasible;</t>
  <t>If only the VP1-VP4 path with available bandwidth of 10 Gb/s and
cost 65 is reported, the client's PCE will compute, as optimal,
the 1 Gb/s path between R1 and R2 going through the VP2-VP5 path
within the optical domain while the optimal path would actually be
the one going thought the VP1-VP4 sub-path (with cost 50) within
the optical domain.  <vspace blankLines='1'/>
Reporting all the information, as in <xref target="poi-multi-path"/>, using the "detailed
 connectivity matrix", is quite challenging from a scalability
 perspective. The amount of this information is not just based on
 number of end points (which would scale as N-square), but also on
 many other parameters, including client rate, user
 constraints/policies for the service, e.g. max latency &lt; N ms, max
 cost, etc., exclusion policies to route around busy links, min
 Optical Signal to Noise Ratio (OSNR) margin, max pre-Forward Error
 Correction (FEC) Bit Error Rate (BER) etc. All these constraints
 could be different based on connectivity requirements.  <vspace blankLines='1'/>
It is also worth noting that the "connectivity matrix" has been
 originally defined in Wavelength Switched Optical Networks (WSON),
 <xref target="RFC7446"/>, to report the connectivity constrains of a physical node
 within the Wavelength Division Multiplexing (WDM) network: the
 information it contains is pretty "static" and therefore, once taken
 and stored in the TE data base, it can be always being considered
 valid and up-to-date in path computation request.  <vspace blankLines='1'/>
The "connectivity matrix" is sometimes confused with "optical reach
 table" that contain multiple (e.g. k-shortest) regen-free reachable
 paths for every A-Z node combination in the network. Optical reach
 tables can be calculated offline, utilizing vendor optical design and
 planning tools, and periodically uploaded to the Controller: these
 optical path reach tables are fairly static. However, to get the
 connectivity matrix, between any two sites, either a regen free path
 can be used, if one is available, or multiple regen free paths are
 concatenated to get from the source to the destination, which can be
 a very large combination. Additionally, when the optical path within
 optical domain needs to be computed, it can result in different paths
 based on input objective, constraints, and network conditions. In
 summary, even though "optical reach table" is fairly static, which
 regen free paths to build the connectivity matrix between any source
 and destination is very dynamic, and is done using very sophisticated
 routing algorithms.  <vspace blankLines='1'/>
Using the "basic connectivity matrix" with an abstract node to
 abstract the information regarding the connectivity constraints of an
 Optical domain, would make this information more "dynamic" since the
 connectivity constraints of an optical domain can change over time
 because some optical paths that are feasible at a given time may
 become unfeasible at a later time when e.g., another optical path is
 established.  <vspace blankLines='1'/>
The information in the "detailed connectivity matrix" is even more
 dynamic since the establishment of another optical path may change
 some of the parameters (e.g., delay or available bandwidth) in the
 "detailed connectivity matrix" while not changing the feasibility of
 the path.  <vspace blankLines='1'/>
There is therefore the need to keep the information in the "detailed
 connectivity matrix" updated which means that there another tradeoff
 between the accuracy (i.e., providing "all" the information that
 might be needed by the client's PCE) and having up-to-date
 information. The more the information is provided and the longer it
 takes to keep it up-to-date which increases the likelihood that the
 client's PCE computes paths using not updated information.  <vspace blankLines='1'/>
It seems therefore quite challenging to have a "detailed connectivity
 matrix" that provides accurate, scalable and updated information to
 allow the client's PCE to take optimal decisions by its own.  <vspace blankLines='1'/>
Considering the example in <xref target="poi-multi-path"/> with the approach defined in this
 document, the client, when it needs to set up an end-to-end path, it
 can request the Optical Domain Controller to compute a set of optimal
 paths (e.g., for VP1-VP4 and VP2-VP5) and take decisions based on the
 information received:</t>
  <t>When setting up a 5 Gb/s path between routers R1 and R2, the
Optical Domain Controller may report only the VP1-VP4 path as the
only feasible path: the Packet/Optical Coordinator can
successfully set up the end-to-end path passing though this
optical path;</t>
  <t>When setting up a 1 Gb/s path between routers R1 and R2, the
Optical Domain Controller (knowing that the path requires only 1
Gb/s) can report both the VP1-VP4 path, with cost 50, and the VP2-
VP5 path, with cost 65. The Packet/Optical Coordinator can then
compute the optimal path which is passing thought the VP1-VP4 sub-
path (with cost 50) within the optical domain.</t>
</list></t>

</section>
<section anchor="topo-abstraction"><name>TE topology abstraction</name>

<t>Using the TE topology model, as defined in <xref target="RFC8795"/>, the underlying
   controller can export to its client an abstract TE topology, composed
   by a set of TE nodes and TE links, representing the abstract view of
   the topology under its control.</t>

<t>For example, in the multi-domain TE network use case, described in
   <xref target="md-uc"/>, the TE Domain Controller 1 can export a TE topology
   encompassing the TE nodes A, B, C and D and the TE links
   interconnecting them. In a similar way, the TE Domain Controller 2
   can export a TE topology encompassing the TE nodes E, F, G and H and
   the TE links interconnecting them.</t>

<t>In this example, for simplicity reasons, each abstract TE node maps
   with each physical node, but this is not necessary.</t>

<t>In order to set up a multi-domain TE path (e.g., between nodes A and
   H), the Multi-Domain Controller can compute by its own an optimal
   end-to-end path based on the abstract TE topology information
   provided by the domain controllers. For example:</t>

<t><list style="symbols">
  <t>Multi-Domain Controller can compute, based on its own TED data,
the optimal multi-domain path being A-B-C-E-G-H, and then request
the TE Domain Controllers to set up the A-B-C and E-G-H intra-
domain paths</t>
  <t>But, during path set-up, the TE Domain Controller may find out
that A-B-C intra-domain path is not feasible (as discussed in
<xref target="md-uc"/>, in optical networks it is typical to have some paths
not being feasible due to optical constraints that are known only
by the Optical Domain Controller), while only the path A-B-D is
feasible</t>
  <t>So what the Multi-Domain Controller has computed is not good and
it needs to re-start the path computation from scratch  <vspace blankLines='1'/>
As discussed in <xref target="topo-aggregation"/>, providing more extensive abstract
information from the TE Domain Controllers to the Multi-Domain
Controller may lead to scalability problems.  <vspace blankLines='1'/>
In a sense this is similar to the problem of routing and wavelength
assignment within an optical domain. It is possible to do first
routing (step 1) and then wavelength assignment (step 2), but the
chances of ending up with a good path is low. Alternatively, it is
possible to do combined routing and wavelength assignment, which is
known to be a more optimal and effective way for optical path set-up.
Similarly, it is possible to first compute an abstract end-to-end
path within the Multi-Domain Controller (step 1) and then compute an
intra-domain path within each optical domain (step 2), but there are
more chances not to find a path or to get a suboptimal path than by
performing multiple per-domain path computations and then stitching
them together.</t>
</list></t>

</section>
<section anchor="topo-pc-complement"><name>Complementary use of the TE topology</name>

<t>As discussed in <xref target="md-uc"/>, there are some scalability issues with
   path computation requests in a multi-domain TE network with many TE
   domains, in terms of the number of requests to send to the TE Domain
   Controllers. It would therefore be worthwhile using the abstract TE
   topology information provided by the TE Domain Controllers to limit
   the number of requests.</t>

<t>An example can be described considering the multi-domain abstract TE
   topology shown in <xref target="fig-topo-many-domains"/>. In this example, an end-to-end TE path
   between domains A and F needs to be set up. The transit TE domain
   should be selected between domains B, C, D and E.</t>

<figure title="Multi-domain with many domains (Topology information)" anchor="fig-topo-many-domains"><artwork type="ascii-art" name="many-domains-topology.txt"><![CDATA[
                          .........B.........
                          : _ _ _ _ _ _ _ _ :
                          :/               \:
                      +---O  NOT FEASIBLE   O---+
                cost=5|   :                 :   |
    ......A......     |   :.................:   |     ......F......
    :           :     |                         |     :           :
    :           O-----+   .........C.........   +-----O           :
    :           :         : /-------------\ :         :           :
    :           :         :/               \:         :           :
    :  cost<=20 O---------O   cost <= 30    O---------O cost<=20  :
    :          /: cost=5  :                 : cost=5  :\          :
    :  /------/ :         :.................:         : \------\  :
    : /         :                                     :         \ :
    :/ cost<=25 :         .........D.........         : cost<=25 \:
    O-----------O-------+ : /-------------\ : +-------O-----------O
    :\          : cost=5| :/               \: |cost=5 :          /:
    : \         :       +-O   cost <= 30    O-+       :         / :
    :  \------\ :         :                 :         : /------/  :
    : cost>=30 \:         :.................:         :/ cost>=30 :
    :           O-----+                         +-----O           :
    :...........:     |   .........E.........   |     :...........:
                      |   : /-------------\ :   |
                cost=5|   :/               \:   |cost=5
                      +---O   cost >= 30    O---+
                          :                 :
                          :.................:
]]></artwork></figure>

<t>The actual cost of each intra-domain path is not known a priori from
   the abstract topology information. The Multi-Domain Controller only
   knows, from the TE topology provided by the underlying domain
   controllers, the feasibility of some intra-domain paths and some
   upper-bound and/or lower-bound cost information. With this
   information, together with the cost of inter-domain links, the Multi-
   Domain Controller can understand by its own that:</t>

<t><list style="symbols">
  <t>Domain B cannot be selected as the path connecting domains A and F
is not feasible;</t>
  <t>Domain E cannot be selected as a transit domain since it is known
from the abstract topology information provided by domain
controllers that the cost of the multi-domain path A-E-F (which is
100, in the best case) will be always be higher than the cost of
the multi-domain paths A-D-F (which is 90, in the worst case) and
A-C-F (which is 80, in the worst case).  <vspace blankLines='1'/>
Therefore, the Multi-Domain Controller can understand by its own that
 the optimal multi-domain path could be either A-D-F or A-C-F but it
 cannot know which one of the two possible option actually provides
 the optimal end-to-end path.  <vspace blankLines='1'/>
The Multi-Domain Controller can therefore request path computation
 only to the TE Domain Controllers A, D, C and F (and not to all the
 possible TE Domain Controllers).</t>
</list></t>

<figure title="Multi-domain with many domains (Path Computation information)" anchor="fig-pc-many-domains"><artwork type="ascii-art" name="many-domain-path-computation.txt"><![CDATA[
                          .........B.........
                          :                 :
                      +---O                 O---+
    ......A......     |   :.................:   |     ......F......
    :           :     |                         |     :           :
    :           O-----+   .........C.........   +-----O           :
    :           :         : /-------------\ :         :           :
    :           :         :/               \:         :           :
    :  cost=15  O---------O    cost = 25    O---------O  cost=10  :
    :          /: cost=5  :                 : cost=5  :\          :
    :  /------/ :         :.................:         : \------\  :
    : /         :                                     :         \ :
    :/ cost=10  :         .........D.........         : cost=15  \:
    O-----------O-------+ : /-------------\ : +-------O-----------O
    :           : cost=5| :/               \: |cost=5 :           :
    :           :       +-O    cost = 15    O-+       :           :
    :           :         :                 :         :           :
    :           :         :.................:         :           :
    :           O-----+                         +-----O           :
    :...........:     |   .........E.........   |     :...........:
                      |   :                 :   |
                      +---O                 O---+
                          :.................:
]]></artwork></figure>

<t>Based on these requests, the Multi-Domain Controller can know the
   actual cost of each intra-domain paths which belongs to potential
   optimal end-to-end paths, as shown in <xref target="fig-pc-many-domains"/>, and then compute the
   optimal end-to-end path (e.g., A-D-F, having total cost of 50,
   instead of A-C-F having a total cost of 70).</t>

</section>
</section>
<section anchor="rpc-motivation"><name>Path Computation RPC</name>

<t>The TE tunnel YANG data model, defined in <xref target="I-D.ietf-teas-yang-te"/>, can support
   the need to request path computation, as described in section 5.1.2
   of <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>This solution is stateful since the state of each created "compute-
   only" TE tunnel path needs to be maintained, in the YANG datastores
   (at least in the running datastore and operational datastore), and
   updated, when underlying network conditions change.</t>

<t>The RPC mechanism allows requesting path computation using a simple
   atomic operation, without creating any state in the YANG datastores,
   and it is the natural option/choice, especially with stateless PCE.</t>

<t>It is very useful to provide both the options of using an RPC as well
   as of setting up TE tunnel paths in "compute-only" mode. It is
   suggested to use the RPC as much as possible and to rely on
   "compute-only" TE tunnel paths, when really needed.</t>

<t>Using the RPC solution would imply that the underlying controller
   (e.g., a PNC) computes a path twice during the process to set up an
   LSP: at time T1, when its client (e.g., an MDSC) sends a path
   computation RPC request to it, and later, at time T2, when the same
   client (MDSC) creates a TE tunnel requesting the set-up of the LSP.
   The underlying assumption is that, if network conditions have not
   changed, the same path that has been computed at time T1 is also
   computed at time T2 by the underlying controller (e.g. PNC) and
   therefore the path that is set up at time T2 is exactly the same path
   that has been computed at time T1.</t>

<t>However, since the operation is stateless, there is no guarantee that
   the returned path would still be available when path set-up is
   requested: this does not cause major issues when the time between
   path computation and path set-up is short (especially if compared
   with the time that would be needed to update the information of a
   very detailed connectivity matrix).</t>

<t>In most of the cases, there is even no need to guarantee that the
   path that has been set up is the exactly same as the path that has
   been returned by path computation, especially if it has the same or
   even better metrics. Depending on the abstraction level applied by
   the server, the client may also not know the actual computed path.</t>

<t>The most important requirement is that the required global objectives
   (e.g., multi-domain path metrics and constraints) are met. For this
   reason a path verification phase is always necessary to verify that
   the actual path that has been set up meets the global objectives (for
   example in a multi-domain network, the resulting end-to-end path
   meets the required end-to-end metrics and constraints).</t>

<t>In most of the cases, even if the path being set up is not exactly
   the same as the path returned by path computation, its metrics and
   constraints are "good enough" and the path verification passes
   successfully. In the few corner cases where the path verification
   fails, it is possible repeat the whole process (path computation,
   path set-up and path verification).</t>

<t>In case it is required to set up at T2 exactly the same path computed
   at T1, the RPC solution should not be used and, instead, a "compute-
   only" TE tunnel path should be set up, allowing also notifications in
   case the computed path has been changed.</t>

<t>In this case, at time T1, the client (MDSC) creates a TE tunnel in a
   compute-only mode in the running datastore and later, at time T2,
   changes the configuration of that TE tunnel (not to be any more in a
   compute-only mode) to trigger the set-up of the LSP over the path
   which have been computed at time T1 and reported in the operational
   datastore.</t>

<t>It is worth noting that also using the "compute-only" TE tunnel path,
   although increasing the likelihood that the computed path is
   available at path set-up, does not guarantee that because
   notifications may not be reliable or delivered on time. Path
   verification is needed also in this case.</t>

<t>The solution based on "compute-only" TE tunnel path has also the
   following drawbacks:</t>

<t><list style="symbols">
  <t>Several messages required for any path computation</t>
  <t>Requires persistent storage in the underlying controller</t>
  <t>Need for garbage collection for stranded paths</t>
  <t>Process burden to detect changes on the computed paths in order to
provide notifications update</t>
</list></t>

<section anchor="temp-state"><name>Temporary reporting of the computed path state</name>

<t>This section describes an optional extension to the stateless
   behavior of the path computation RPC, where the underlying
   controller, after having received a path computation RPC request,
   maintains some "transient state" associated with the computed path,
   allowing the client to request the set-up of exactly that path, if
   still available.</t>

<t>This is similar to the "compute-only" TE tunnel path solution but, to
   avoid the drawbacks of the stateful approach, is leveraging the path
   computation RPC and the separation between configuration and
   operational datastore, as defined in the NMDA architecture <xref target="RFC8342"/>.</t>

<t>The underlying controller, after having computed a path, as requested
   by a path computation RPC, also creates a TE tunnel instance within
   the operational datastore, to store that computed path. This would be
   similar to a "compute-only" TE tunnel path, with the only difference
   that there is no associated TE tunnel instance within the running
   datastore.</t>

<t>Since the underlying controller stores in the operational datastore
   the computed path based on an abstract topology it exposes, it also
   remembers, internally, which is the actual native path (physical
   path), within its native topology (physical topology), associated
   with that compute-only TE tunnel instance.</t>

<t>Afterwards, the client (e.g., MDSC) can request the set-up of that
   specific path by creating a TE tunnel instance (not in compute-only
   mode) in the running datastore using the same tunnel-name of
   the existing TE tunnel in the operational datastore: this will
   trigger the underlying controller to set up that path, if still
   available.</t>

<t>There are still cases where the path being set up is not exactly the
   same as the path that has been computed:</t>

<t><list style="symbols">
  <t>When the tunnel is configured with path constraints which are not
compatible with the computed path;</t>
  <t>When the tunnel set-up is requested after the resources of the
computed path are no longer available;</t>
  <t>When the tunnel set-up is requested after the computed path is no
longer known (e.g. due to a server reboot) by the underlying
controller.  <vspace blankLines='1'/>
In all these cases, the underlying controller should compute and set
 up a new path.  <vspace blankLines='1'/>
Therefore the "path verification" phase, as described in <xref target="rpc-motivation"/>
 above, is always needed to check that the path that has been set up
 is still "good enough".  <vspace blankLines='1'/>
Since this new approach is not completely stateless, garbage
 collection is implemented using a timeout that, when it expires,
 triggers the removal of the computed path from the operational
 datastore. This operation is fully controlled by the underlying
 controller without the need for any action to be taken by the client
 that is not able to act on the operational datastore. The default
 value of this timeout is 10 minutes but a different value may be
 configured by the client.  <vspace blankLines='1'/>
In addition, it is possible for the client to tag each path
 computation request with a transaction-id allowing for a faster
 removal of all the paths associated with a transaction-id, without
 waiting for their timers to expire.  <vspace blankLines='1'/>
The underlying controller can remove from the operational datastore
 all the paths computed with a given transaction-id which have not
 been set up either when it receives a Path Delete RPC request for
 that transaction-id or, automatically, right after the set-up up of a
 path that has been previously computed with that transaction-id.  <vspace blankLines='1'/>
This possibility is useful when multiple paths are computed but, at
 most, only one is set up (e.g., in multi-domain path computation
 scenario scenarios). After the selected path has been set up (e.g, in
 one domain during multi-domain path set-up), all the other
 alternative computed paths can be automatically deleted by the
 underlying controller (since no longer needed). The client can also
 request, using the Path Delete RPC request, the underlying controller
 to remove all the computed paths, if none of them is going to be set
 up (e.g., in a transit domain not being selected by multi-domain path
 computation and so not being automatically deleted).  <vspace blankLines='1'/>
This approach is complimentary and not alternative to the timer which
 is always needed to avoid stranded computed paths being stored in the
 operational datastore when no path is set up and no explicit Path
 Delete RPC request is received.</t>
</list></t>

</section>
</section>
</section>
<section anchor="path-computation-and-optimization-for-multiple-paths"><name>Path computation and optimization for multiple paths</name>

<t>There are use cases, where it is advantageous to request path
   computation for a set of paths, through a network or through a
   network domain, using a single request <xref target="RFC5440"/>.</t>

<t>In this case, sending a single request for multiple path
   computations, instead of sending multiple requests for each path
   computation, would reduce the protocol overhead and it would consume
   less resources (e.g., threads in the client and server).</t>

<t>In the context of a typical multi-domain TE network, there could
   multiple choices for the ingress/egress points of a domain and the
   Multi-Domain Controller needs to request path computation between all
   the ingress/egress pairs to select the best pair. For example, in the
   example of <xref target="md-uc"/>, the Multi-Domain Controller needs to request
   the TE Network Controller 1 to compute the A-C and the A-D paths and
   to the TE Network Controller 2 to compute the E-H and the F-H paths.</t>

<t>It is also possible that the Multi-Domain Controller receives a
   request to set up a group of multiple end to end connections. The
   Multi-Domain Controller needs to request each TE domain Controller to
   compute multiple paths, one (or more) for each end to end connection.</t>

<t>There are also scenarios where it can be needed to request path
   computation for a set of paths in a synchronized fashion.</t>

<t>One example could be computing multiple diverse paths. Computing a
   set of diverse paths in an unsynchronized fashion, leads to the
   possibility of not being able to satisfy the diversity requirement.
   In this case, it is preferable to compute a sub-optimal primary path
   for which a diversely routed secondary path exists.</t>

<t>There are also scenarios where it is needed to request optimizing a
   set of paths using objective functions that apply to the whole set of
   paths, see <xref target="RFC5541"/>, e.g. to minimize the sum of the costs of all
   the computed paths in the set.</t>

</section>
<section anchor="yang-data-model-for-requesting-path-computation"><name>YANG data model for requesting Path Computation</name>

<t>This document define a YANG RPC to request path computation as an
   "augmentation" of tunnel-rpc, defined in <xref target="I-D.ietf-teas-yang-te"/>. This model
   provides the RPC input attributes that are needed to request path
   computation and the RPC output attributes that are needed to report
   the computed paths.</t>

<figure><artwork type="ascii-art" name="overview.txt"><![CDATA[
     augment /te:tunnels-path-compute/te:input/te:path-compute-info:
       +-- path-request* [request-id]
       |  +-- request-id                            uint32
       |  ...........

     augment /te:tunnels-path-compute/te:output/te:path-compute-result:
       +--ro response* [response-id]
          +--ro response-id                         uint32
          +--ro computed-paths-properties
          |  +--ro computed-path-properties* [k-index]
          |     +--ro k-index            uint8
          |     +--ro path-properties
          |     ...........
]]></artwork></figure>

<t>This model extensively re-uses the grouping defined in <xref target="I-D.ietf-teas-yang-te"/>
   and <xref target="RFC8776"/> to ensure maximal syntax and semantics commonality.</t>

<t>This YANG data model allows one RPC to include multiple path
   requests, each path request being identified by a request-id.
   Therefore, one RPC can return multiple responses, one for each path
   request, being identified by a response-id equal to the corresponding
   request-id. Each response reports one or more computed paths, as
   requested by the k-requested-paths attribute. By default, each
   response reports one computed path.</t>

<section anchor="synchronization-of-multiple-path-computation-requests"><name>Synchronization of multiple path computation requests</name>

<t>The YANG data model permits the synchronization of a set of multiple
   path requests (identified by specific request-id) all related to a
   "svec" container emulating the syntax of the Synchronization VECtor
   (SVEC) PCEP object, defined in <xref target="RFC5440"/>.</t>

<figure><artwork type="ascii-art" name="synchronization.txt"><![CDATA[
       +-- synchronization* []
          +-- svec
          |  +-- relaxable?           boolean
          |  +-- disjointness?        te-path-disjointness
          |  +-- request-id-number*   uint32
          +-- svec-constraints
          |  +-- path-metric-bound* [metric-type]
          |     +-- metric-type    identityref
          |     +-- upper-bound?   uint64
          +-- path-srlgs-lists
          |  +-- path-srlgs-list* [usage]
          |     +-- usage     identityref
          |     +-- values*   srlg
          +-- path-srlgs-names
          |  +-- path-srlgs-name* [usage]
          |     +-- usage    identityref
          |     +-- names*   string
          +-- exclude-objects
          |  +-- excludes* []
          |     +-- (type)?
          |        +--:(numbered-node-hop)
          |        |  +-- numbered-node-hop
          |        |     +-- node-id     te-node-id
          |        |     +-- hop-type?   te-hop-type
          |        +--:(numbered-link-hop)
          |        |  +-- numbered-link-hop
          |        |     +-- link-tp-id    te-tp-id
          |        |     +-- hop-type?     te-hop-type
          |        |     +-- direction?    te-link-direction
          |        +--:(unnumbered-link-hop)
          |        |  +-- unnumbered-link-hop
          |        |     +-- link-tp-id    te-tp-id
          |        |     +-- node-id       te-node-id
          |        |     +-- hop-type?     te-hop-type
          |        |     +-- direction?    te-link-direction
          |        +--:(as-number)
          |        |  +-- as-number-hop
          |        |     +-- as-number    inet:as-number
          |        |     +-- hop-type?    te-hop-type
          |        +--:(label)
          |           +-- label-hop
          |              +-- te-label
          |                 +-- (technology)?
          |                 |  +--:(generic)
          |                 |     +-- generic?
          |                 |             rt-types:generalized-label
          |                 +-- direction?       te-label-direction
          +-- optimizations
             +-- (algorithm)?
                +--:(metric) {te-types:path-optimization-metric}?
                |  +-- optimization-metric* [metric-type]
                |     +-- metric-type    identityref
                |     +-- weight?        uint8
                +--:(objective-function)
                         {te-types:path-optimization-objective-
   function}?
                   +-- objective-function
                      +-- objective-function-type?   identityref
]]></artwork></figure>

<t>The model, in addition to the metric types, defined in <xref target="RFC8776"/>,
   which can be applied to each individual path request, supports also
   additional metric types, which apply to a set of synchronized
   requests, as referenced in <xref target="RFC5541"/>. These additional metric types
   are defined by the following YANG identities:</t>

<t><list style="symbols">
  <t>svec-metric-type: base YANG identity from which cumulative metric
types identities are derived.</t>
  <t>svec-metric-cumul-te: cumulative TE cost metric type, as defined
in <xref target="RFC5541"/>.</t>
  <t>svec-metric-cumul-igp: cumulative IGP cost metric type, as defined
in <xref target="RFC5541"/>.</t>
  <t>svec-metric-cumul-hop: cumulative Hop metric type, representing
the cumulative version of the Hop metric type defined in
<xref target="RFC8776"/>.</t>
  <t>svec-metric-aggregate-bandwidth-consumption: aggregate bandwidth
consumption metric type, as defined in <xref target="RFC5541"/>.</t>
  <t>svec-metric-load-of-the-most-loaded-link: load of the most loaded
link metric type, as defined in <xref target="RFC5541"/>.</t>
</list></t>

</section>
<section anchor="returned-metric-values"><name>Returned metric values</name>

<t>This YANG data model provides a way to return the values of the
   metrics computed by the path computation in the output of RPC,
   together with other important information (e.g. SRLG, affinities,
   explicit route), emulating the syntax of the "C" flag of the "METRIC"
   PCEP object <xref target="RFC5440"/>:</t>

<figure><artwork type="ascii-art" name="returned-metrics.txt"><![CDATA[
          |     +--ro path-properties
          |        +--ro path-metric* [metric-type]
          |        |  +--ro metric-type           identityref
          |        |  +--ro accumulative-value?   uint64
          |        +--ro path-affinities-values
          |        |  +--ro path-affinities-value* [usage]
          |        |     +--ro usage    identityref
          |        |     +--ro value?   admin-groups
          |        +--ro path-affinity-names
          |        |  +--ro path-affinity-name* [usage]
          |        |     +--ro usage            identityref
          |        |     +--ro affinity-name* [name]
          |        |        +--ro name    string
          |        +--ro path-srlgs-lists
          |        |  +--ro path-srlgs-list* [usage]
          |        |     +--ro usage     identityref
          |        |     +--ro values*   srlg
          |        +--ro path-srlgs-names
          |        |  +--ro path-srlgs-name* [usage]
          |        |     +--ro usage    identityref
          |        |     +--ro names*   string
          |        +--ro path-route-objects
          |        ...........
          |        +--ro te-bandwidth
          |        |  +--ro (technology)?
          |        |     +--:(generic)
          |        |        +--ro generic?   te-bandwidth
          |        +--ro disjointness-type?
          |                te-types:te-path-disjointness
]]></artwork></figure>

<t>It also allows the client to request which information (metrics, SRLG
   and/or affinities) should be returned:</t>

<figure><artwork type="ascii-art" name="requested-metrics.txt"><![CDATA[
       |  +-- request-id                            uint32
       |  ...........
       |  +-- requested-metrics* [metric-type]
       |  |  +-- metric-type    identityref
       |  +-- return-srlgs?                         boolean
       |  +-- return-affinities?                    boolean
       |  ...........
]]></artwork></figure>

<t>This feature is essential for path computation in a multi-domain TE
   network as described in <xref target="md-uc"/>. In this case, the metrics
   returned by a path computation requested to a given underlying
   controller must be used by the client to compute the best end-to-end
   path. If they are missing, the client cannot compare different paths
   calculated by the underlying controllers and choose the best one for
   the optimal end-to-end (e2e) path.</t>

</section>
<section anchor="multiple-paths-requests-for-the-same-te-tunnel"><name>Multiple Paths Requests for the same TE tunnel</name>

<t>The YANG data model allows including multiple requests for different
   paths intended to be used within the same tunnel or within different
   tunnels.</t>

<t>When multiple requested paths are intended to be used within the same
   tunnel (e.g., requesting path computation for the primary and
   secondary paths of a protected tunnel), the set of attributes that
   are intended to be configured on per-tunnel basis rather than on per-
   path basis are common to all these path requests. These attributes
   includes both attributes which can be configured only a per-tunnel
   basis (e.g., tunnel-name, source/destination TTP, encoding and
   switching-type) as well attributes which can be configured both on a
   per-tunnel and on a per-path basis (e.g., the te-bandwidth or the
   associations).</t>

<t>Therefore, a tunnel-attributes list is defined, within the path
   computation request RPC:</t>

<figure><artwork type="ascii-art" name="tunnel-attributes-list.txt"><![CDATA[
       +-- tunnel-attributes* [tunnel-name]
       |  +-- tunnel-name               string
       |  +-- encoding?                 identityref
       |  +-- switching-type?           identityref
       |  +-- source?                   te-types:te-node-id
       |  +-- destination?              te-types:te-node-id
       |  +-- src-tunnel-tp-id?         binary
       |  +-- dst-tunnel-tp-id?         binary
       |  +-- bidirectional?            boolean
       |  +-- association-objects
       |  ...........
       |  +-- protection-type?          identityref
       |  +-- restoration-type?         identityref
       |  +-- restoration-scheme?       identityref
       |  +-- te-topology-identifier
       |  |  +-- provider-id?   te-global-id
       |  |  +-- client-id?     te-global-id
       |  |  +-- topology-id?   te-topology-id
       |  +-- te-bandwidth
       |  |  +-- (technology)?
       |  |     +--:(generic)
       |  |        +-- generic?   te-bandwidth
       |  +-- link-protection?          identityref
       |  +-- setup-priority?           uint8
       |  +-- hold-priority?            uint8
       |  +-- signaling-type?           identityref
       |  +-- hierarchy
       |     +-- dependency-tunnels
       |     ............ 
       |     +-- hierarchical-link
       |     ............ 
]]></artwork></figure>

<t>The path requests that are intended to be used within the same tunnel
   should reference the same entry in the tunnel-attributes list. This
   allows:</t>

<t><list style="symbols">
  <t>avoiding repeating the same set of per-tunnel parameters on
multiple requested paths;</t>
  <t>the server to understand what attributes are intended to be
configured on a per-tunnel basis (e.g., the te-bandwidth
configured in the tunnel-attributes) and what attributes are
intended to be configured on a per-path basis(e.g., the te-
bandwidth configured in the path-request). This could be useful
especially when the server also creates a TE tunnel instance
within the operational datastore to report the computed paths, as
described in <xref target="temp-state"/>: in this case, the tunnel-name is also
used as the suggested name for that TE tunnel instance.  <vspace blankLines='1'/>
The YANG data model allows also including requests for paths intended
 to modify existing tunnels (e.g., adding a protection path for an
 existing un-protected tunnel). In this case, the per-tunnel
 attributes are already provided in an existing TE tunnel instance and
 do not need to be re-configured in the path computation request RPC.
 Therefore, these requests should reference an existing TE tunnel
 instance.  <vspace blankLines='1'/>
It is also possible to request computing paths without indicating in
 which tunnel they are intended to be used (e.g., in case of an
 unprotected tunnel). In this case, the per-tunnel attributes could be
 provided together with the per-path attributes in the path request,
 without using the tunnel-attributes list.  <vspace blankLines='1'/>
The choices below are defined to distinguish the cases above:</t>
  <t>whether the per-tunnel attributes are configured by reference
(providing a leafref), to:  <list style="symbols">
      <t>either a TE tunnel instance, if it exists;</t>
      <t>or to an entry of the tunnel-attributes list, if the TE tunnel
instance does not exist;</t>
    </list></t>
  <t>or by value, providing the set of tunnel attributes within the
path request:</t>
</list></t>

<figure><artwork type="ascii-art" name="tunnel-attributes.txt"><![CDATA[
       |  +-- (tunnel-attributes)?
       |  |  +--:(reference)
       |  |  |  +-- tunnel-reference
       |  |  |     +-- (tunnel-exist)?
       |  |  |     |  +--:(tunnel-ref)
       |  |  |     |  |  +-- tunnel-ref                te:tunnel-ref
       |  |  |     |  +--:(tunnel-attributes-ref)
       |  |  |     |     +-- tunnel-attributes-ref     leafref
       |  |  |     +-- path-name?                      string
       |  |  |     +-- (path-role)
       |  |  |        +--:(primary-path)
       |  |  |         ...........
       |  |  +--:(value)
       |  |     +-- tunnel-name?                    string
       |  |     ...........
       |  |     +-- encoding?                       identityref
       |  |     +-- switching-type?                 identityref
       |  |     ...........
]]></artwork></figure>

<section anchor="tunnel-attributes-specified-by-value"><name>Tunnel attributes specified by value</name>

<t>The (value) case provides the set of attributes that are configured
   only on per-tunnel basis (e.g., tunnel-name, source/destination TTP,
   encoding and switching-type).</t>

<t>In this case, it is assumed that the requested path will be the only
   path within a tunnel.</t>

<t>If the only path within a tunnel is the transit segment of a multi-domain end-to-end path, it can be of any type (primary, secondary, reverse-primary
   or reverse-secondary). The (path-role) choice is used to specify its role in the path request:</t>

<figure><artwork type="ascii-art" name="tunnel-by-value.txt"><![CDATA[
       |  |     +-- (path-role)?
       |  |     |  +--:(primary-path)
       |  |     |  +--:(secondary-path)
       |  |     |  |  +-- secondary-path!
       |  |     |  |     +-- primary-path-name?   string
       |  |     |  +--:(primary-reverse-path)
       |  |     |  |  +-- primary-reverse-path!
       |  |     |  |     +-- primary-path-name?   string
       |  |     |  +--:(secondary-reverse-path)
       |  |     |     +-- secondary-reverse-path
       |  |     |        +-- primary-path-name?           string
       |  |     |        +-- primary-reverse-path-name?   string
       |  |     ...........
]]></artwork></figure>

<t>In all the other cases, the only path within a tunnel is a primary path.</t>

<t>The secondary-path, the primary-reverse-path and the secondary-
   reverse-path are presence container used to indicate the role of the
   path: by default, the path is assumed to be a primary path.</t>

<t>They optionally can contain the name of the primary-path under which
   the requested path could be associated within the YANG tree structure
   defined in <xref target="I-D.ietf-teas-yang-te"/>, which could be useful when the server also
   creates a TE tunnel instance within the operational datastore to
   report the computed paths, as described in <xref target="temp-state"/>: in this
   case, the tunnel-name and the path names are also used as the
   suggested name for that TE tunnel and path instances.</t>

</section>
<section anchor="tunnel-attributes-specified-by-reference"><name>Tunnel attributes specified by reference</name>

<t>The (reference) case provides the information needed to associate
   multiple path requests that are intended to be used within the same
   tunnel.</t>

<t>In order to indicate the role of the path being requested within the
   intended tunnel (e.g., primary or secondary path), the (path-role)
   choice is defined:</t>

<figure><artwork type="ascii-art" name="tunnel-by-reference.txt"><![CDATA[
       |  |  |     +-- (path-role)
       |  |  |        +--:(primary-path)
       |  |  |        |  +-- primary-path!
       |  |  |        |     ...........
       |  |  |        +--:(secondary-path)
       |  |  |        |  +-- secondary-path
       |  |  |        |     ...........
       |  |  |        +--:(primary-reverse-path)
       |  |  |        |  +-- primary-reverse-path
       |  |  |        |     ...........
       |  |  |        +--:(secondary-reverse-path)
       |  |  |           +-- secondary-reverse-path
       |  |  |              +-- preference?                 uint8
       |  |  |              +-- protection-type?            identityref
       |  |  |              +-- restoration-type?           identityref
       |  |  |              +-- restoration-scheme?         identityref
       |  |  |              +-- primary-reverse-path-ref* []
       |  |  |                 +-- (primary-reverse-path-exist)?
       |  |  |                    +--:(path-ref)
       |  |  |                    |  +-- primary-path-ref    leafref
       |  |  |                    +--:(path-request-ref)
       |  |  |                       +-- path-request-ref    leafref
]]></artwork></figure>

<t>The primary-path is a presence container used to indicate that the
   requested path is intended to be used as a primary path. It can also
   contain some attributes which are configured only on primary paths
   (e.g., the k-requested-paths).</t>

<t>The secondary-path container indicates that the requested path is
   intended to be used as a secondary path and it contains at least
   references to one or more primary paths which can use it as a
   candidate secondary path:</t>

<figure><artwork type="ascii-art" name="secondary-path.txt"><![CDATA[
       |  |  |        |  +-- secondary-path
       |  |  |        |     ...........
       |  |  |        |     +-- primary-path-ref* []
       |  |  |        |        +-- (primary-path-exist)?
       |  |  |        |           +--:(path-ref)
       |  |  |        |           |  +-- primary-path-ref    leafref
       |  |  |        |           +--:(path-request-ref)
       |  |  |        |              +-- path-request-ref    leafref
]]></artwork></figure>

<t>A requested secondary path can reference any requested primary paths,
   and, in case they are intended to be used within an existing TE
   tunnel, it could also reference any existing primary-paths.</t>

<t>The secondary-path container can also contain some attributes which
   are configured only on secondary paths (e.g., the protection-type).</t>

<t>The primary-reverse-path container indicates that the requested path
   is intended to be used as a primary reverse path and it contains only
   the reference to the primary path which is intended to use it as a
   reverse path:</t>

<figure><artwork type="ascii-art" name="primary-reverse-path.txt"><![CDATA[
       |  |  |        |  +-- primary-reverse-path
       |  |  |        |     +-- (primary-path-exist)?
       |  |  |        |        +--:(path-ref)
       |  |  |        |        |  +-- primary-path-ref    leafref
       |  |  |        |        +--:(path-request-ref)
       |  |  |        |           +-- path-request-ref    leafref
]]></artwork></figure>

<t>A requested primary reverse path can reference either a requested
   primary path, or, in case it is intended to be used within an
   existing TE tunnel, an existing primary-path.</t>

<t>The secondary-reverse-path container indicates that the requested
   path is intended to be used as a secondary reverse path and it
   contains at least references to one or more primary paths, whose
   primary reverse path can use it as a candidate secondary reverse
   path:</t>

<figure><artwork type="ascii-art" name="secondary-reverse-path.txt"><![CDATA[
       |  |  |           +-- secondary-reverse-path
       |  |  |              ...........
       |  |  |              +-- primary-reverse-path-ref* []
       |  |  |                 +-- (primary-reverse-path-exist)?
       |  |  |                    +--:(path-ref)
       |  |  |                    |  +-- primary-path-ref    leafref
       |  |  |                    +--:(path-request-ref)
       |  |  |                       +-- path-request-ref    leafref
]]></artwork></figure>

<t>A requested secondary reverse path can reference any requested
   primary paths, and, in case they are intended to be used within an
   existing TE tunnel, it could reference also existing primary-paths.</t>

<t>The secondary-reverse-path container can also contain some attributes
   which are configured only on secondary reverse paths (e.g., the
   protection-type).</t>

<t>In case the requested path is a transit segment of a multi-domain
   end-to-end path, the primary-path may not be needed to be
   setup/computed. However, the request for path computation of a
   secondary-path or a primary-reverse or of a secondary-reverse-path
   requires that the primary-path exists or it is requested within the
   same RPC request. In the latter case, the path request for the
   primary-path should have an empty 'route-object-include-exclude' list,
   as described in section 5.1.1 of <xref target="I-D.ietf-teas-yang-te"/>, to indicate to the server that
   path computation is not requested and no path properties will
   therefore be returned in the RPC response.</t>

</section>
</section>
<section anchor="multi-layer-path-computation"><name>Multi-Layer Path Computation</name>

<t>The models supports requesting multi-layer path computation following
   the same approach based on dependency tunnels, as defined in <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>The tunnel-attributes of a given client-layer path request can
   reference server-layer TE tunnels which can already exist in the YANG
   datastore or be specified in the tunnel-attributes list, within the
   same RPC request:</t>

<figure><artwork type="ascii-art" name="dependency-tunnels.txt"><![CDATA[
       |     +-- dependency-tunnels
       |     |  +-- dependency-tunnel* [name]
       |     |  |  +-- name              -> /te:te/tunnels/tunnel/name
       |     |  |  +-- encoding?         identityref
       |     |  |  +-- switching-type?   identityref
       |     |  +-- dependency-tunnel-attributes* [name]
       |     |     +-- name              leafref
       |     |     +-- encoding?         identityref
       |     |     +-- switching-type?   identityref
]]></artwork></figure>

<t>In a similar way as in <xref target="I-D.ietf-teas-yang-te"/>, the server-layer tunnel
   attributes should provide the information of what would be the
   dynamic link in the client layer topology supported by that tunnel,
   if instantiated:</t>

<figure><artwork type="ascii-art" name="hierarchical-link.txt"><![CDATA[
       |     +-- hierarchical-link
       |        +-- local-te-node-id?         te-types:te-node-id
       |        +-- local-te-link-tp-id?      te-types:te-tp-id
       |        +-- remote-te-node-id?        te-types:te-node-id
       |        +-- te-topology-identifier
       |           +-- provider-id?   te-global-id
       |           +-- client-id?     te-global-id
       |           +-- topology-id?   te-topology-id
]]></artwork></figure>

<t>It is worth noting that since path computation RPC is stateless, the
   dynamic hierarchical links configured for the server-layer tunnel
   attributes cannot be used for path computation of any client-layer
   path unless explicitly referenced in the dependency-tunnel-attributes
   list within the same RPC request.</t>

</section>
</section>
<section anchor="yang-data-model-for-te-path-computation"><name>YANG data model for TE path computation</name>

<section anchor="pc-tree"><name>Tree diagram</name>

<t><xref target="fig-pc-tree"/> below shows the tree diagram of the YANG data model defined
   in module ietf-te-path-computation.yang, defined in <xref target="pc-yang"/>.</t>

<figure title="TE path computation tree diagram" anchor="fig-pc-tree"><artwork type="ascii-art" name="ietf-te-path-computation.tree"><![CDATA[
module: ietf-te-path-computation

  augment /te:tunnels-path-compute/te:input/te:path-compute-info:
    +-- path-request* [request-id]
    |  +-- request-id                            uint32
    |  +-- (tunnel-attributes)?
    |  |  +--:(reference)
    |  |  |  +-- tunnel-reference
    |  |  |     +-- (tunnel-exist)?
    |  |  |     |  +--:(tunnel-ref)
    |  |  |     |  |  +-- tunnel-ref                te:tunnel-ref
    |  |  |     |  +--:(tunnel-attributes-ref)
    |  |  |     |     +-- tunnel-attributes-ref     leafref
    |  |  |     +-- path-name?                      string
    |  |  |     +-- (path-role)
    |  |  |        +--:(primary-path)
    |  |  |        |  +-- primary-path!
    |  |  |        |     +-- preference?          uint8
    |  |  |        |     +-- co-routed?           empty
    |  |  |        |     +-- k-requested-paths?   uint8
    |  |  |        +--:(secondary-path)
    |  |  |        |  +-- secondary-path
    |  |  |        |     +-- preference?           uint8
    |  |  |        |     +-- co-routed?            empty
    |  |  |        |     +-- protection-type?      identityref
    |  |  |        |     +-- restoration-type?     identityref
    |  |  |        |     +-- restoration-scheme?   identityref
    |  |  |        |     +-- primary-path-ref* []
    |  |  |        |        +-- (primary-path-exist)?
    |  |  |        |           +--:(path-ref)
    |  |  |        |           |  +-- primary-path-ref    leafref
    |  |  |        |           +--:(path-request-ref)
    |  |  |        |              +-- path-request-ref    leafref
    |  |  |        +--:(primary-reverse-path)
    |  |  |        |  +-- primary-reverse-path
    |  |  |        |     +-- (primary-path-exist)?
    |  |  |        |        +--:(path-ref)
    |  |  |        |        |  +-- primary-path-ref    leafref
    |  |  |        |        +--:(path-request-ref)
    |  |  |        |           +-- path-request-ref    leafref
    |  |  |        +--:(secondary-reverse-path)
    |  |  |           +-- secondary-reverse-path
    |  |  |              +-- protection-type?            identityref
    |  |  |              +-- restoration-type?           identityref
    |  |  |              +-- restoration-scheme?         identityref
    |  |  |              +-- primary-reverse-path-ref* []
    |  |  |                 +-- (primary-reverse-path-exist)?
    |  |  |                    +--:(path-ref)
    |  |  |                    |  +-- primary-path-ref    leafref
    |  |  |                    +--:(path-request-ref)
    |  |  |                       +-- path-request-ref    leafref
    |  |  +--:(value)
    |  |     +-- tunnel-name?                    string
    |  |     +-- path-name?                      string
    |  |     +-- (path-role)?
    |  |     |  +--:(primary-path)
    |  |     |  +--:(secondary-path)
    |  |     |  |  +-- secondary-path!
    |  |     |  |     +-- primary-path-name?   string
    |  |     |  +--:(primary-reverse-path)
    |  |     |  |  +-- primary-reverse-path!
    |  |     |  |     +-- primary-path-name?   string
    |  |     |  +--:(secondary-reverse-path)
    |  |     |     +-- secondary-reverse-path!
    |  |     |        +-- primary-path-name?           string
    |  |     |        +-- primary-reverse-path-name?   string
    |  |     +-- k-requested-paths?              uint8
    |  |     +-- encoding?                       identityref
    |  |     +-- switching-type?                 identityref
    |  |     +-- source?                         te-types:te-node-id
    |  |     +-- destination?                    te-types:te-node-id
    |  |     +-- src-tunnel-tp-id?               binary
    |  |     +-- dst-tunnel-tp-id?               binary
    |  |     +-- bidirectional?                  boolean
    |  |     +-- te-topology-identifier
    |  |        +-- provider-id?   te-global-id
    |  |        +-- client-id?     te-global-id
    |  |        +-- topology-id?   te-topology-id
    |  +-- association-objects
    |  |  +-- association-object* [association-key]
    |  |  |  +-- association-key    string
    |  |  |  +-- type?              identityref
    |  |  |  +-- id?                uint16
    |  |  |  +-- source
    |  |  |     +-- id?     te-gen-node-id
    |  |  |     +-- type?   enumeration
    |  |  +-- association-object-extended* [association-key]
    |  |     +-- association-key    string
    |  |     +-- type?              identityref
    |  |     +-- id?                uint16
    |  |     +-- source
    |  |     |  +-- id?     te-gen-node-id
    |  |     |  +-- type?   enumeration
    |  |     +-- global-source?     uint32
    |  |     +-- extended-id?       yang:hex-string
    |  +-- optimizations
    |  |  +-- (algorithm)?
    |  |     +--:(metric) {path-optimization-metric}?
    |  |     |  +-- optimization-metric* [metric-type]
    |  |     |  |  +-- metric-type                       identityref
    |  |     |  |  +-- weight?                           uint8
    |  |     |  |  +-- explicit-route-exclude-objects
    |  |     |  |  |  +-- route-object-exclude-object* [index]
    |  |     |  |  |     +-- index                        uint32
    |  |     |  |  |     +-- (type)?
    |  |     |  |  |        +--:(numbered-node-hop)
    |  |     |  |  |        |  +-- numbered-node-hop
    |  |     |  |  |        |     +-- node-id     te-node-id
    |  |     |  |  |        |     +-- hop-type?   te-hop-type
    |  |     |  |  |        +--:(numbered-link-hop)
    |  |     |  |  |        |  +-- numbered-link-hop
    |  |     |  |  |        |     +-- link-tp-id    te-tp-id
    |  |     |  |  |        |     +-- hop-type?     te-hop-type
    |  |     |  |  |        |     +-- direction?    te-link-direction
    |  |     |  |  |        +--:(unnumbered-link-hop)
    |  |     |  |  |        |  +-- unnumbered-link-hop
    |  |     |  |  |        |     +-- link-tp-id    te-tp-id
    |  |     |  |  |        |     +-- node-id       te-node-id
    |  |     |  |  |        |     +-- hop-type?     te-hop-type
    |  |     |  |  |        |     +-- direction?    te-link-direction
    |  |     |  |  |        +--:(as-number)
    |  |     |  |  |        |  +-- as-number-hop
    |  |     |  |  |        |     +-- as-number    inet:as-number
    |  |     |  |  |        |     +-- hop-type?    te-hop-type
    |  |     |  |  |        +--:(label)
    |  |     |  |  |        |  +-- label-hop
    |  |     |  |  |        |     +-- te-label
    |  |     |  |  |        |        +-- (technology)?
    |  |     |  |  |        |        |  +--:(generic)
    |  |     |  |  |        |        |     +-- generic?
    |  |     |  |  |        |        |             rt-types:generalized-label
    |  |     |  |  |        |        +-- direction?
    |  |     |  |  |        |                te-label-direction
    |  |     |  |  |        +--:(srlg)
    |  |     |  |  |           +-- srlg
    |  |     |  |  |              +-- srlg?   uint32
    |  |     |  |  +-- explicit-route-include-objects
    |  |     |  |     +-- route-object-include-object* [index]
    |  |     |  |        +-- index                        uint32
    |  |     |  |        +-- (type)?
    |  |     |  |           +--:(numbered-node-hop)
    |  |     |  |           |  +-- numbered-node-hop
    |  |     |  |           |     +-- node-id     te-node-id
    |  |     |  |           |     +-- hop-type?   te-hop-type
    |  |     |  |           +--:(numbered-link-hop)
    |  |     |  |           |  +-- numbered-link-hop
    |  |     |  |           |     +-- link-tp-id    te-tp-id
    |  |     |  |           |     +-- hop-type?     te-hop-type
    |  |     |  |           |     +-- direction?    te-link-direction
    |  |     |  |           +--:(unnumbered-link-hop)
    |  |     |  |           |  +-- unnumbered-link-hop
    |  |     |  |           |     +-- link-tp-id    te-tp-id
    |  |     |  |           |     +-- node-id       te-node-id
    |  |     |  |           |     +-- hop-type?     te-hop-type
    |  |     |  |           |     +-- direction?    te-link-direction
    |  |     |  |           +--:(as-number)
    |  |     |  |           |  +-- as-number-hop
    |  |     |  |           |     +-- as-number    inet:as-number
    |  |     |  |           |     +-- hop-type?    te-hop-type
    |  |     |  |           +--:(label)
    |  |     |  |              +-- label-hop
    |  |     |  |                 +-- te-label
    |  |     |  |                    +-- (technology)?
    |  |     |  |                    |  +--:(generic)
    |  |     |  |                    |     +-- generic?
    |  |     |  |                    |             rt-types:generalized-label
    |  |     |  |                    +-- direction?
    |  |     |  |                            te-label-direction
    |  |     |  +-- tiebreakers
    |  |     |     +-- tiebreaker* [tiebreaker-type]
    |  |     |        +-- tiebreaker-type    identityref
    |  |     +--:(objective-function)
    |  |              {path-optimization-objective-function}?
    |  |        +-- objective-function
    |  |           +-- objective-function-type?   identityref
    |  +-- named-path-constraint?                leafref
    |  |       {te-types:named-path-constraints}?
    |  +-- te-bandwidth
    |  |  +-- (technology)?
    |  |     +--:(generic)
    |  |        +-- generic?   te-bandwidth
    |  +-- link-protection?                      identityref
    |  +-- setup-priority?                       uint8
    |  +-- hold-priority?                        uint8
    |  +-- signaling-type?                       identityref
    |  +-- path-metric-bounds
    |  |  +-- path-metric-bound* [metric-type]
    |  |     +-- metric-type    identityref
    |  |     +-- upper-bound?   uint64
    |  +-- path-affinities-values
    |  |  +-- path-affinities-value* [usage]
    |  |     +-- usage    identityref
    |  |     +-- value?   admin-groups
    |  +-- path-affinity-names
    |  |  +-- path-affinity-name* [usage]
    |  |     +-- usage            identityref
    |  |     +-- affinity-name* [name]
    |  |        +-- name    string
    |  +-- path-srlgs-lists
    |  |  +-- path-srlgs-list* [usage]
    |  |     +-- usage     identityref
    |  |     +-- values*   srlg
    |  +-- path-srlgs-names
    |  |  +-- path-srlgs-name* [usage]
    |  |     +-- usage    identityref
    |  |     +-- names*   string
    |  +-- disjointness?                         te-path-disjointness
    |  +-- explicit-route-objects-always
    |  |  +-- route-object-exclude-always* [index]
    |  |  |  +-- index                        uint32
    |  |  |  +-- (type)?
    |  |  |     +--:(numbered-node-hop)
    |  |  |     |  +-- numbered-node-hop
    |  |  |     |     +-- node-id     te-node-id
    |  |  |     |     +-- hop-type?   te-hop-type
    |  |  |     +--:(numbered-link-hop)
    |  |  |     |  +-- numbered-link-hop
    |  |  |     |     +-- link-tp-id    te-tp-id
    |  |  |     |     +-- hop-type?     te-hop-type
    |  |  |     |     +-- direction?    te-link-direction
    |  |  |     +--:(unnumbered-link-hop)
    |  |  |     |  +-- unnumbered-link-hop
    |  |  |     |     +-- link-tp-id    te-tp-id
    |  |  |     |     +-- node-id       te-node-id
    |  |  |     |     +-- hop-type?     te-hop-type
    |  |  |     |     +-- direction?    te-link-direction
    |  |  |     +--:(as-number)
    |  |  |     |  +-- as-number-hop
    |  |  |     |     +-- as-number    inet:as-number
    |  |  |     |     +-- hop-type?    te-hop-type
    |  |  |     +--:(label)
    |  |  |        +-- label-hop
    |  |  |           +-- te-label
    |  |  |              +-- (technology)?
    |  |  |              |  +--:(generic)
    |  |  |              |     +-- generic?
    |  |  |              |             rt-types:generalized-label
    |  |  |              +-- direction?       te-label-direction
    |  |  +-- route-object-include-exclude* [index]
    |  |     +-- explicit-route-usage?        identityref
    |  |     +-- index                        uint32
    |  |     +-- (type)?
    |  |        +--:(numbered-node-hop)
    |  |        |  +-- numbered-node-hop
    |  |        |     +-- node-id     te-node-id
    |  |        |     +-- hop-type?   te-hop-type
    |  |        +--:(numbered-link-hop)
    |  |        |  +-- numbered-link-hop
    |  |        |     +-- link-tp-id    te-tp-id
    |  |        |     +-- hop-type?     te-hop-type
    |  |        |     +-- direction?    te-link-direction
    |  |        +--:(unnumbered-link-hop)
    |  |        |  +-- unnumbered-link-hop
    |  |        |     +-- link-tp-id    te-tp-id
    |  |        |     +-- node-id       te-node-id
    |  |        |     +-- hop-type?     te-hop-type
    |  |        |     +-- direction?    te-link-direction
    |  |        +--:(as-number)
    |  |        |  +-- as-number-hop
    |  |        |     +-- as-number    inet:as-number
    |  |        |     +-- hop-type?    te-hop-type
    |  |        +--:(label)
    |  |        |  +-- label-hop
    |  |        |     +-- te-label
    |  |        |        +-- (technology)?
    |  |        |        |  +--:(generic)
    |  |        |        |     +-- generic?
    |  |        |        |             rt-types:generalized-label
    |  |        |        +-- direction?       te-label-direction
    |  |        +--:(srlg)
    |  |           +-- srlg
    |  |              +-- srlg?   uint32
    |  +-- path-in-segment!
    |  |  +-- label-restrictions
    |  |     +-- label-restriction* [index]
    |  |        +-- restriction?    enumeration
    |  |        +-- index           uint32
    |  |        +-- label-start
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-end
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-step
    |  |        |  +-- (technology)?
    |  |        |     +--:(generic)
    |  |        |        +-- generic?   int32
    |  |        +-- range-bitmap?   yang:hex-string
    |  +-- path-out-segment!
    |  |  +-- label-restrictions
    |  |     +-- label-restriction* [index]
    |  |        +-- restriction?    enumeration
    |  |        +-- index           uint32
    |  |        +-- label-start
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-end
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-step
    |  |        |  +-- (technology)?
    |  |        |     +--:(generic)
    |  |        |        +-- generic?   int32
    |  |        +-- range-bitmap?   yang:hex-string
    |  +-- requested-metrics* [metric-type]
    |  |  +-- metric-type    identityref
    |  +-- return-srlgs?                         boolean
    |  +-- return-affinities?                    boolean
    |  +-- requested-state!
    |     +-- timer?            uint16
    |     +-- transaction-id?   string
    +-- tunnel-attributes* [tunnel-name]
    |  +-- tunnel-name               string
    |  +-- encoding?                 identityref
    |  +-- switching-type?           identityref
    |  +-- source?                   te-types:te-node-id
    |  +-- destination?              te-types:te-node-id
    |  +-- src-tunnel-tp-id?         binary
    |  +-- dst-tunnel-tp-id?         binary
    |  +-- bidirectional?            boolean
    |  +-- association-objects
    |  |  +-- association-object* [association-key]
    |  |  |  +-- association-key    string
    |  |  |  +-- type?              identityref
    |  |  |  +-- id?                uint16
    |  |  |  +-- source
    |  |  |     +-- id?     te-gen-node-id
    |  |  |     +-- type?   enumeration
    |  |  +-- association-object-extended* [association-key]
    |  |     +-- association-key    string
    |  |     +-- type?              identityref
    |  |     +-- id?                uint16
    |  |     +-- source
    |  |     |  +-- id?     te-gen-node-id
    |  |     |  +-- type?   enumeration
    |  |     +-- global-source?     uint32
    |  |     +-- extended-id?       yang:hex-string
    |  +-- protection-type?          identityref
    |  +-- restoration-type?         identityref
    |  +-- restoration-scheme?       identityref
    |  +-- te-topology-identifier
    |  |  +-- provider-id?   te-global-id
    |  |  +-- client-id?     te-global-id
    |  |  +-- topology-id?   te-topology-id
    |  +-- te-bandwidth
    |  |  +-- (technology)?
    |  |     +--:(generic)
    |  |        +-- generic?   te-bandwidth
    |  +-- link-protection?          identityref
    |  +-- setup-priority?           uint8
    |  +-- hold-priority?            uint8
    |  +-- signaling-type?           identityref
    |  +-- hierarchy
    |     +-- dependency-tunnels
    |     |  +-- dependency-tunnel* [name]
    |     |  |  +-- name              -> /te:te/tunnels/tunnel/name
    |     |  |  +-- encoding?         identityref
    |     |  |  +-- switching-type?   identityref
    |     |  +-- dependency-tunnel-attributes* [name]
    |     |     +-- name              leafref
    |     |     +-- encoding?         identityref
    |     |     +-- switching-type?   identityref
    |     +-- hierarchical-link
    |        +-- local-te-node-id?         te-types:te-node-id
    |        +-- local-te-link-tp-id?      te-types:te-tp-id
    |        +-- remote-te-node-id?        te-types:te-node-id
    |        +-- te-topology-identifier
    |           +-- provider-id?   te-global-id
    |           +-- client-id?     te-global-id
    |           +-- topology-id?   te-topology-id
    +-- synchronization* []
       +-- svec
       |  +-- relaxable?      boolean
       |  +-- disjointness?   te-path-disjointness
       |  +-- request-id*     uint32
       +-- svec-constraints
       |  +-- path-metric-bound* [metric-type]
       |     +-- metric-type    identityref
       |     +-- upper-bound?   uint64
       +-- path-srlgs-lists
       |  +-- path-srlgs-list* [usage]
       |     +-- usage     identityref
       |     +-- values*   srlg
       +-- path-srlgs-names
       |  +-- path-srlgs-name* [usage]
       |     +-- usage    identityref
       |     +-- names*   string
       +-- exclude-objects
       |  +-- excludes* []
       |     +-- (type)?
       |        +--:(numbered-node-hop)
       |        |  +-- numbered-node-hop
       |        |     +-- node-id     te-node-id
       |        |     +-- hop-type?   te-hop-type
       |        +--:(numbered-link-hop)
       |        |  +-- numbered-link-hop
       |        |     +-- link-tp-id    te-tp-id
       |        |     +-- hop-type?     te-hop-type
       |        |     +-- direction?    te-link-direction
       |        +--:(unnumbered-link-hop)
       |        |  +-- unnumbered-link-hop
       |        |     +-- link-tp-id    te-tp-id
       |        |     +-- node-id       te-node-id
       |        |     +-- hop-type?     te-hop-type
       |        |     +-- direction?    te-link-direction
       |        +--:(as-number)
       |        |  +-- as-number-hop
       |        |     +-- as-number    inet:as-number
       |        |     +-- hop-type?    te-hop-type
       |        +--:(label)
       |           +-- label-hop
       |              +-- te-label
       |                 +-- (technology)?
       |                 |  +--:(generic)
       |                 |     +-- generic?
       |                 |             rt-types:generalized-label
       |                 +-- direction?       te-label-direction
       +-- optimizations
          +-- (algorithm)?
             +--:(metric) {te-types:path-optimization-metric}?
             |  +-- optimization-metric* [metric-type]
             |     +-- metric-type    identityref
             |     +-- weight?        uint8
             +--:(objective-function)
                      {te-types:path-optimization-objective-function}?
                +-- objective-function
                   +-- objective-function-type?   identityref
  augment /te:tunnels-path-compute/te:output/te:path-compute-result:
    +--ro response* [response-id]
       +--ro response-id                         uint32
       +--ro computed-paths-properties
       |  +--ro computed-path-properties* [k-index]
       |     +--ro k-index            uint8
       |     +--ro path-properties
       |        +--ro path-metric* [metric-type]
       |        |  +--ro metric-type           identityref
       |        |  +--ro accumulative-value?   uint64
       |        +--ro path-affinities-values
       |        |  +--ro path-affinities-value* [usage]
       |        |     +--ro usage    identityref
       |        |     +--ro value?   admin-groups
       |        +--ro path-affinity-names
       |        |  +--ro path-affinity-name* [usage]
       |        |     +--ro usage            identityref
       |        |     +--ro affinity-name* [name]
       |        |        +--ro name    string
       |        +--ro path-srlgs-lists
       |        |  +--ro path-srlgs-list* [usage]
       |        |     +--ro usage     identityref
       |        |     +--ro values*   srlg
       |        +--ro path-srlgs-names
       |        |  +--ro path-srlgs-name* [usage]
       |        |     +--ro usage    identityref
       |        |     +--ro names*   string
       |        +--ro path-route-objects
       |        |  +--ro path-route-object* [index]
       |        |     +--ro index                        uint32
       |        |     +--ro (type)?
       |        |        +--:(numbered-node-hop)
       |        |        |  +--ro numbered-node-hop
       |        |        |     +--ro node-id     te-node-id
       |        |        |     +--ro hop-type?   te-hop-type
       |        |        +--:(numbered-link-hop)
       |        |        |  +--ro numbered-link-hop
       |        |        |     +--ro link-tp-id    te-tp-id
       |        |        |     +--ro hop-type?     te-hop-type
       |        |        |     +--ro direction?    te-link-direction
       |        |        +--:(unnumbered-link-hop)
       |        |        |  +--ro unnumbered-link-hop
       |        |        |     +--ro link-tp-id    te-tp-id
       |        |        |     +--ro node-id       te-node-id
       |        |        |     +--ro hop-type?     te-hop-type
       |        |        |     +--ro direction?    te-link-direction
       |        |        +--:(as-number)
       |        |        |  +--ro as-number-hop
       |        |        |     +--ro as-number    inet:as-number
       |        |        |     +--ro hop-type?    te-hop-type
       |        |        +--:(label)
       |        |           +--ro label-hop
       |        |              +--ro te-label
       |        |                 +--ro (technology)?
       |        |                 |  +--:(generic)
       |        |                 |     +--ro generic?
       |        |                 |             rt-types:generalized-label
       |        |                 +--ro direction?
       |        |                         te-label-direction
       |        +--ro te-bandwidth
       |        |  +--ro (technology)?
       |        |     +--:(generic)
       |        |        +--ro generic?   te-bandwidth
       |        +--ro disjointness-type?
       |                te-types:te-path-disjointness
       +--ro computed-path-error-infos
       |  +--ro computed-path-error-info* []
       |     +--ro error-description?   string
       |     +--ro error-timestamp?     yang:date-and-time
       |     +--ro error-reason?        identityref
       +--ro tunnel-ref?                         te:tunnel-ref
       +--ro (path-role)?
          +--:(primary)
          |  +--ro primary-path-ref?             leafref
          +--:(primary-reverse)
          |  +--ro primary-reverse-path-ref?     leafref
          +--:(secondary)
          |  +--ro secondary-path-ref?           leafref
          +--:(secondary-reverse)
             +--ro secondary-reverse-path-ref?   leafref
  augment /te:tunnels-actions/te:input/te:tunnel-info/te:filter-type:
    +--:(path-compute-transactions)
       +-- path-compute-transaction-id*   string
  augment /te:tunnels-actions/te:output:
    +--ro path-computed-delete-result
       +--ro path-compute-transaction-id*   string
]]></artwork></figure>

</section>
<section anchor="pc-yang"><name>YANG module</name>

<figure title="TE path computation YANG module" anchor="fig-pc-yang"><sourcecode type="yang" markers="true" name="ietf-te-path-computation@2022-01-24.yang"><![CDATA[
module ietf-te-path-computation {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-te-path-computation";
  prefix te-pc;

  import ietf-te {
    prefix te;
    reference
      "RFCYYYY: A YANG Data Model for Traffic Engineering Tunnels
       and Interfaces";
  }

  /* Note: The RFC Editor will replace YYYY with the number assigned
     to the RFC once draft-ietf-teas-yang-te becomes an RFC.*/

  import ietf-te-types {
    prefix te-types;
    reference
      "RFC8776: Common YANG Data Types for Traffic Engineering.
      
      RFCZZZZ: Updated Common YANG Data Types for Traffic 
      Engineering";
  }

  /* Note: The RFC Editor will replace YYYY with the number assigned
     to the RFC once ietf-teas-rfc8776-update becomes an RFC.*/

  organization
    "Traffic Engineering Architecture and Signaling (TEAS)
     Working Group";
  contact
    "WG Web: <https://datatracker.ietf.org/wg/teas/>
     WG List:  <mailto:teas@ietf.org>

     Editor:   Italo Busi
               <mailto:italo.busi@huawei.com>

     Editor:   Sergio Belotti
               <mailto:sergio.belotti@nokia.com>

     Editor:   Victor Lopez
               <mailto:victor.lopez@nokia.com>

     Editor:   Oscar Gonzalez de Dios
               <mailto:oscar.gonzalezdedios@telefonica.com>

     Editor:   Anurag Sharma
               <mailto:ansha@google.com>

     Editor:   Yan Shi
               <mailto:shiyan49@chinaunicom.cn>

     Editor:   Ricard Vilalta
               <mailto:ricard.vilalta@cttc.es>

     Editor:   Karthik Sethuraman
               <mailto:karthik.sethuraman@necam.com>

     Editor:   Michael Scharf
               <mailto:michael.scharf@gmail.com>

     Editor:   Daniele Ceccarelli
               <mailto:daniele.ceccarelli@ericsson.com>
     
    ";
  description
    "This module defines a YANG data model for requesting Traffic
     Engineering (TE) path computation. The YANG data model defined
     in this document augments the RPCs defined in the generic TE
     module (ietf-te).

     The model fully conforms to the
     Network Management Datastore Architecture (NMDA).

     Copyright (c) 2022 IETF Trust and the persons
     identified as authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with
     or without modification, is permitted pursuant to, and
     subject to the license terms contained in, the Revised
     BSD License set forth in Section 4.c of the IETF Trust's
     Legal Provisions Relating to IETF Documents
     (https://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC XXXX; see
     the RFC itself for full legal notices.

     The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL', 'SHALL
     NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'NOT RECOMMENDED',
     'MAY', and 'OPTIONAL' in this document are to be interpreted as
     described in BCP 14 (RFC 2119) (RFC 8174) when, and only when,
     they appear in all capitals, as shown here.";

  // RFC Ed.: replace XXXX with actual RFC number and remove
  // this note
  // replace the revision date with the module publication date
  // the format is (year-month-day)

  revision 2022-10-17 {
    description
      "Initial revision";
    reference
      "RFC XXXX: A YANG Data Model for requesting path computation";
  }

  // RFC Ed.: replace XXXX with actual RFC number and remove
  // this note

  /*
   * Identities
   */

  identity svec-metric-type {
    description
      "Base identity for SVEC metric type.";
    reference
      "RFC5541: Encoding of Objective Functions in the Path
       Computation Element Communication Protocol (PCEP).";
  }

  identity svec-metric-cumul-te {
    base svec-metric-type;
    description
      "Cumulative TE cost.";
    reference
      "RFC5541: Encoding of Objective Functions in the Path
       Computation Element Communication Protocol (PCEP).";
  }

  identity svec-metric-cumul-igp {
    base svec-metric-type;
    description
      "Cumulative IGP cost.";
    reference
      "RFC5541: Encoding of Objective Functions in the Path
       Computation Element Communication Protocol (PCEP).";
  }

  identity svec-metric-cumul-hop {
    base svec-metric-type;
    description
      "Cumulative Hop path metric.";
    reference
      "RFC5541: Encoding of Objective Functions in the Path
       Computation Element Communication Protocol (PCEP).";
  }

  identity svec-metric-aggregate-bandwidth-consumption {
    base svec-metric-type;
    description
      "Aggregate bandwidth consumption.";
    reference
      "RFC5541: Encoding of Objective Functions in the Path
       Computation Element Communication Protocol (PCEP).";
  }

  identity svec-metric-load-of-the-most-loaded-link {
    base svec-metric-type;
    description
      "Load of the most loaded link.";
    reference
      "RFC5541: Encoding of Objective Functions in the Path
       Computation Element Communication Protocol (PCEP).";
  }

  identity tunnel-action-path-compute-delete {
    base te-types:tunnel-actions-type;
    description
      "Action type to delete the transient states
       of computed paths, as described in section 3.3.1 of
       RFC XXXX.";
    reference
      "RFC XXXX: A YANG Data Model for requesting path computation";
  }

  /*
   * Groupings
   */

  grouping protection-restoration-properties {
    description
      "This grouping defines the restoration and protection types
       for a path in the path computation request.";
    leaf protection-type {
      type identityref {
        base te-types:lsp-protection-type;
      }
      default "te-types:lsp-protection-unprotected";
      description
        "LSP protection type.";
    }
    leaf restoration-type {
      type identityref {
        base te-types:lsp-restoration-type;
      }
      default "te-types:lsp-restoration-restore-any";
      description
        "LSP restoration type.";
    }
    leaf restoration-scheme {
      type identityref {
        base te-types:restoration-scheme-type;
      }
      default "te-types:restoration-scheme-preconfigured";
      description
        "LSP restoration scheme.";
    }
  } // grouping protection-restoration-properties

  grouping requested-info {
    description
      "This grouping defines the information which is requested
       (e.g., metrics), in the path computation request, to be
       returned in the path computation response.";
    list requested-metrics {
      key "metric-type";
      description
        "The list of the requested metrics.

         The metrics listed here MUST be returned in the response.
         Returning other metrics in the response is OPTIONAL.";
      leaf metric-type {
        type identityref {
          base te-types:path-metric-type;
        }
        description
          "The metric requested to be returned in the response";
      }
    }
    leaf return-srlgs {
      type boolean;
      default "false";
      description
        "If true, path Shared Risk Link Groups (SRLGs) MUST be
         returned in the response.
         If false, returning path SRLGs in the response OPTIONAL.";
    }
    leaf return-affinities {
      type boolean;
      default "false";
      description
        "If true, path affinities MUST be returned in the response.
         If false, returning path affinities in the response is
         OPTIONAL.";
    }
  } // grouping requested-info

  grouping requested-state {
    description
      "Configuration for the transient state used
       to report the computed path";
    container requested-state {
      presence
        "Request temporary reporting of the computed path state";
      description
        "Configures attributes for the temporary reporting of the
         computed path state (e.g., expiration timer).";
      leaf timer {
        type uint16;
        units "minutes";
        default "10";
        description
          "The timeout after which the transient state reporting
          the computed path SHOULD be removed.";
      }
      leaf transaction-id {
        type string;
        description
          "The transaction-id associated with this path computation
          to be used for fast deletion of the transient states
          associated with multiple path computations.

          This transaction-id can be used to explicitly delete all
          the transient states of all the computed paths associated
          with the same transaction-id.

          When one path associated with a transaction-id is setup,
          the transient states of all the other computed paths
          with the same transaction-id are automatically removed.

          If not specified, the transient state is removed only
          when the timer expires (when the timer is specified)
          or not created at all (stateless path computation,
          when the timer is not specified).";
      }
    }
  } // grouping requested-state

  grouping reported-state {
    description
      "This grouping defines the information, returned in the path
       computation response, reporting the transient state related
       to the computed path";
    leaf tunnel-ref {
      type te:tunnel-ref;
      description
        "
         Reference to the tunnel that reports the transient state
         of the computed path.

         If no transient state is created, this attribute is
         omitted.
        ";
    }
    choice path-role {
      description
        "The transient state of the computed path can be reported
         as a primary, primary-reverse, secondary or
         a secondary-reverse path of a te-tunnel";
      case primary {
        leaf primary-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:primary-paths/te:primary-path/"
               + "te:name";
          }
          must '../tunnel-ref' {
            description
              "The primary-path name can only be reported
               if the tunnel name is also reported.";
          }
          description
            "
             Reference to the primary-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case primary
      case primary-reverse {
        leaf primary-reverse-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:primary-paths/te:primary-path/"
               + "te:name";
          }
          must '../tunnel-ref' {
            description
              "The primary-reverse-path name can only be reported
               if the tunnel name is also reported.";
          }
          description
            "
             Reference to the primary-reverse-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case primary-reverse
      case secondary {
        leaf secondary-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:secondary-paths/te:secondary-path/"
               + "te:name";
          }
          must '../tunnel-ref' {
            description
              "The secondary-path name can only be reported
               if the tunnel name is also reported.";
          }
          description
            "
             Reference to the secondary-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case secondary
      case secondary-reverse {
        leaf secondary-reverse-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:secondary-reverse-paths/"
               + "te:secondary-reverse-path/te:name";
          }
          must '../tunnel-ref' {
            description
              "The secondary-reverse-path name can only be reported
               if the tunnel name is also reported.";
          }
          description
            "
             Reference to the secondary-reverse-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case secondary
    } // choice path
  } // grouping reported-state

  grouping synchronization-constraints {
    description
      "Global constraints applicable to synchronized path
       computation requests.";
    container svec-constraints {
      description
        "global svec constraints";
      list path-metric-bound {
        key "metric-type";
        description
          "list of bound metrics";
        leaf metric-type {
          type identityref {
            base svec-metric-type;
          }
          description
            "SVEC metric type.";
          reference
            "RFC5541: Encoding of Objective Functions in the Path
            Computation Element Communication Protocol (PCEP).";
        }
        leaf upper-bound {
          type uint64;
          description
            "Upper bound on SVEC metric";
        }
      }
    }
    uses te-types:generic-path-srlgs;
    container exclude-objects {
      description
        "Resources to be excluded";
      list excludes {
        description
          "List of Explicit Route Objects to always exclude
           from synchronized path computation";
        uses te-types:explicit-route-hop;
      }
    }
  } // grouping synchronization-constraints

  grouping synchronization-optimization {
    description
      "Optimizations applicable to synchronized path
       computation requests.";
    container optimizations {
      description
        "The objective function container that includes attributes
         to impose when computing a synchronized set of paths";
      choice algorithm {
        description
          "Optimizations algorithm.";
        case metric {
          if-feature "te-types:path-optimization-metric";
          list optimization-metric {
            key "metric-type";
            description
              "svec path metric type";
            leaf metric-type {
              type identityref {
                base svec-metric-type;
              }
              description
                "TE path metric type usable for computing a set of
                synchronized requests";
            }
            leaf weight {
              type uint8;
              description
                "Metric normalization weight";
            }
          }
        }
        case objective-function {
          if-feature
            "te-types:path-optimization-objective-function";
          container objective-function {
            description
              "The objective function container that includes
               attributes to impose when computing a TE path";
            leaf objective-function-type {
              type identityref {
                base te-types:objective-function-type;
              }
              description
                "Objective function entry";
            }
          }
        }
      }
    }
  } // grouping synchronization-optimization

  grouping synchronization-info {
    description
      "Information for synchronized path computation requests.";
    list synchronization {
      description
        "List of Synchronization VECtors.";
      container svec {
        description
          "Synchronization VECtor";
        leaf relaxable {
          type boolean;
          default "true";
          description
            "If this leaf is true, taking into account this svec is
             OPTIONAL and the path computation process is
             free to ignore svec content.
             Otherwise, it MUST take into account this svec.";
        }
        uses te-types:generic-path-disjointness;
        leaf-list request-id {
          type uint32;
          description
            "This list reports the set of path computation
             requests that are requested to be synchronized.";
        }
      }
      uses synchronization-constraints;
      uses synchronization-optimization;
    }
  } // grouping synchronization-info

  /*
   * Augment TE RPCs
   */

  augment "/te:tunnels-path-compute/te:input/te:path-compute-info" {
    description
      "Augments Path Computation RPC input";
    list path-request {
      key "request-id";
      description
        "The list of the requested paths to be computed";
      leaf request-id {
        type uint32;
        mandatory true;
        description
          "Each path computation request is uniquely identified
           within the RPC request by the request-id.";
      }
      choice tunnel-attributes {
        default "value";
        description
          "Whether the tunnel attributes are specified by value
           within this path computation request or by reference.
           The reference could be either to an existing te-tunnel
           or to an entry in the tunnel-attributes list";
        case reference {
          container tunnel-reference {
            description
              "Attributes for a requested path that belongs to
              either an exiting te-tunnel or to an entry in the
              tunnel-attributes list.";
            choice tunnel-exist {
              description
                "Whether the tunnel reference is to an existing
                te-tunnel or to an entry in the tunnel-attributes
                list";
              case tunnel-ref {
                leaf tunnel-ref {
                  type te:tunnel-ref;
                  mandatory true;
                  description
                    "The referenced te-tunnel instance";
                }
              } // case tunnel-ref
              case tunnel-attributes-ref {
                leaf tunnel-attributes-ref {
                  type leafref {
                    path "/te:tunnels-path-compute/"
                      + "te:path-compute-info/"
                      + "te-pc:tunnel-attributes/te-pc:tunnel-name";
                  }
                  mandatory true;
                  description
                    "The referenced te-tunnel instance";
                }
              } // case tunnel-attributes-ref 
            } // choice tunnel-exist
            leaf path-name {
              type string;
              description
                "TE path name.";
            }
            choice path-role {
              mandatory true;
              description
                "Whether this path is a primary, or a reverse
                primary, or a secondary, or a reverse secondary
                path.";
              case primary-path {
                container primary-path {
                  presence "Indicates that the requested path
                            is a primary path";
                  description
                    "TE primary path";
                  uses te:path-forward-properties;
                  uses te:k-requested-paths;
                } // container primary-path
              } // case primary-path
              case secondary-path {
                container secondary-path {
                  description
                    "TE secondary path";
                  uses te:path-forward-properties;
                  uses protection-restoration-properties;
                  list primary-path-ref {
                    min-elements 1;
                    description
                      "The list of primary paths that reference
                      this path as a candidate secondary path";
                    choice primary-path-exist {
                      description
                        "Whether the path reference is to an existing
                        te-tunnel path or to another path request";
                      case path-ref {
                        leaf primary-path-ref {
                          type leafref {
                            path "/te:te/te:tunnels/te:tunnel"
                              + "[te:name=current()/../../../"
                              + "tunnel-ref]/te:primary-paths/"
                              + "te:primary-path/te:name";
                          }
                          must '../../../tunnel-ref' {
                            description
                              "The primary-path can be referenced
                              if also the tunnel is referenced.";
                          }
                          mandatory true;
                          description
                            "The referenced primary path";
                        }
                      } // case path-ref
                      case path-request-ref {
                        leaf path-request-ref {
                          type leafref {
                            path "/te:tunnels-path-compute/"
                              + "te:path-compute-info/"
                              + "te-pc:path-request/"
                              + "te-pc:request-id";
                          }
                          mandatory true;
                          description
                            "The referenced primary path request";
                        }
                      } // case path-request-ref 
                    } // choice primary-path-exist
                  } // list primary-path-ref
                } // container secondary-path
              } // case secondary-path
              case primary-reverse-path {
                container primary-reverse-path {
                  description
                    "TE primary reverse path";
                  choice primary-path-exist {
                    description
                      "Whether the path reference to the primary
                      paths for which this path is the reverse-path
                      is to an existing te-tunnel path or to
                      another path request.";
                    case path-ref {
                      leaf primary-path-ref {
                        type leafref {
                          path "/te:te/te:tunnels/te:tunnel[te:name"
                            + "=current()/../../tunnel-ref]/"
                            + "te:primary-paths/te:primary-path/"
                            + "te:name";
                        }
                        must '../../tunnel-ref' {
                          description
                            "The primary-path can be referenced
                            if also the tunnel is referenced.";
                        }
                        mandatory true;
                        description
                          "The referenced primary path";
                      }
                    } // case path-ref
                    case path-request-ref {
                      leaf path-request-ref {
                        type leafref {
                          path "/te:tunnels-path-compute/"
                            + "te:path-compute-info/"
                            + "te-pc:path-request/"
                            + "te-pc:request-id";
                        }
                        mandatory true;
                        description
                          "The referenced primary path request";
                      }
                    } // case path-request-ref 
                  } // choice primary-path-exist
                } // container primary-reverse-path
              } // case primary-reverse-path
              case secondary-reverse-path {
                container secondary-reverse-path {
                  description
                    "TE secondary reverse path";
                  // uses te:path-preference;
                  uses protection-restoration-properties;
                  list primary-reverse-path-ref {
                    min-elements 1;
                    description
                      "The list of primary reverse paths that
                      reference this path as a candidate
                      secondary reverse path";
                    choice primary-reverse-path-exist {
                      description
                        "Whether the path reference is to an existing
                        te-tunnel path or to another path request";
                      case path-ref {
                        leaf primary-path-ref {
                          type leafref {
                            path "/te:te/te:tunnels/te:tunnel"
                              + "[te:name=current()/../../../"
                              + "tunnel-ref]/te:primary-paths/"
                              + "te:primary-path/te:name";
                          }
                          must '../../../tunnel-ref' {
                            description
                              "The primary-path can be referenced
                              if also the tunnel is referenced.";
                          }
                          mandatory true;
                          description
                            "The referenced primary path";
                        }
                      } // case path-ref
                      case path-request-ref {
                        leaf path-request-ref {
                          type leafref {
                            path "/te:tunnels-path-compute/"
                              + "te:path-compute-info/"
                              + "te-pc:path-request/"
                              + "te-pc:request-id";
                          }
                          mandatory true;
                          description
                            "The referenced primary reverse path
                            request";
                        }
                      } // case path-request-ref 
                    } // choice primary-reverse-path-exist
                  } // list primary-reverse-path-ref
                } // container secondary-reverse-path
              } // case secondary-reverse-path
            } // choice tunnel-path-role
          }
        } // case reference
        case value {
          leaf tunnel-name {
            type string;
            description
              "TE tunnel name.";
          }
          leaf path-name {
            type string;
            description
              "TE path name.";
          }
          choice path-role {
            when 'not (./source) and not (./destination) and
                  not (./src-tunnel-tp-id) and
                  not (./dst-tunnel-tp-id)' {
              description
                "When the tunnel attributes are specified by value
                within this path computation, it is assumed that the
                requested path will be the only path of a tunnel.

                If the requested path is a transit segment path
                (i.e., the source, src-tp-id, destination and
                dst-tp-id attributes are empty), it
                could be of any type. Otherwise it could only be a
                primary path.";
            }
            default primary-path;
            description
              "Indicates whether the requested path is a primary
              path, a secondary path, a reverse primary path or a
              reverse secondary path.";
            case primary-path {
              description
                "The requested path is a primary path.";
            }
            container secondary-path {
              presence
                "Indicates that the requested path is a secondary
                path.";
              description
                "The name of the primary path which the requested
                secondary path belongs to.";
              leaf primary-path-name {
                type string;
                description
                  "TE primary path name.";
              }
            } // container secondary-path
            container primary-reverse-path {
              presence
                "Indicates that the requested path is a primary
                reverse path.";
              description
                "The name of the primary path which the requested
                primary reverse path belongs to.";
              leaf primary-path-name {
                type string;
                description
                  "TE primary path name.";
              }
            } // container primary-reverse-path
            container secondary-reverse-path {
              presence
                "Indicates that the requested path is a secondary
                reverse path.";
              description
                "The names of the primary path and of the primary
                reverse path which the requested secondary reverse
                path belongs to.";
              leaf primary-path-name {
                type string;
                description
                  "TE primary path name.";
              }
              leaf primary-reverse-path-name {
                type string;
                description
                  "TE primary reverse path name.";
              }
            } // container primary-reverse-path
          } // choice path-role
          uses te:k-requested-paths;
          uses te:encoding-and-switching-type;
          uses te:tunnel-common-attributes;
          uses te-types:te-topology-identifier;
        } // case value
      } // choice tunnel-attributes
      uses te:path-compute-info;
      uses requested-info;
      uses requested-state;
    }
    list tunnel-attributes {
      key "tunnel-name";
      description
        "Tunnel attributes common to multiple request paths";
      leaf tunnel-name {
        type string;
        description
          "TE tunnel name.";
      }
      uses te:encoding-and-switching-type;
      uses te:tunnel-common-attributes;
      uses te:tunnel-associations-properties;
      uses protection-restoration-properties;
      uses te-types:tunnel-constraints;
      uses te:tunnel-hierarchy-properties {
        augment "hierarchy/dependency-tunnels" {
          description
            "Augment with the list of dependency tunnel requests.";
          list dependency-tunnel-attributes {
            key "name";
            description
              "A tunnel request entry that this tunnel request can
               potentially depend on.";
            leaf name {
              type leafref {
                path "/te:tunnels-path-compute/"
                   + "te:path-compute-info/te-pc:tunnel-attributes/"
                   + "te-pc:tunnel-name";
              }
              description
                "Dependency tunnel request name.";
            }
            uses te:encoding-and-switching-type;
          }
        }
      }
    }
    uses synchronization-info;
  } // path-compute rpc input

  augment "/te:tunnels-path-compute/te:output/"
        + "te:path-compute-result" {
    description
      "Auguments Path Computation RPC output";
    list response {
      key "response-id";
      config false;
      description
        "response";
      leaf response-id {
        type uint32;
        description
          "The response-id has the same value of the
           corresponding request-id.";
      }
      uses te:path-computation-response;
      uses reported-state;
    }
  } // path-compute rpc output

  augment "/te:tunnels-actions/te:input/te:tunnel-info/"
        + "te:filter-type" {
    description
      "Augment Tunnels Action RPC input filter types";
    case path-compute-transactions {
      when "derived-from-or-self(../te:action-info/te:action, "
         + "'tunnel-action-path-compute-delete')";
      description
        "Path Delete RPC input";
      leaf-list path-compute-transaction-id {
        type string;
        description
          "The list of the transaction-id values of the
           transient states to be deleted";
      }
    }
  } // path-delete rpc input

  augment "/te:tunnels-actions/te:output" {
    description
      "Augment Tunnels Action RPC output with path delete result";
    container path-computed-delete-result {
      description
        "Path Delete RPC output";
      leaf-list path-compute-transaction-id {
        type string;
        description
          "The list of the transaction-id values of the
           transient states that have been successfully deleted";
      }
    }
  } // path-delete rpc output
}
]]></sourcecode></figure>

</section>
</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>This document describes use cases of requesting Path Computation
   using YANG data models, which could be used at the ABNO Control
   Interface <xref target="RFC7491"/> and/or between controllers in ACTN <xref target="RFC8453"/>. As
   such, it does not introduce any new security considerations compared
   to the ones related to YANG specification, ABNO specification and
   ACTN Framework defined in <xref target="RFC7950"/>, <xref target="RFC7491"/> and <xref target="RFC8453"/>.</t>

<t>The YANG module defined in this document is designed to be accessed via
   the NETCONF protocol <xref target="RFC6241"/> or RESTCONF protocol <xref target="RFC8040"/>. The
   lowest NETCONF layer is the secure transport layer, and the
   mandatory-to-implement secure transport is Secure Shell (SSH)
   <xref target="RFC6242"/>. The lowest RESTCONF layer is HTTPS, and the mandatory-to-
   implement secure transport is TLS <xref target="RFC8446"/>.</t>

<t>The Network Configuration Access Control Model (NACM) 
   <xref target="RFC8341"/> provides the means to
   restrict access for particular NETCONF or RESTCONF users to a
   preconfigured subset of all available NETCONF or RESTCONF protocol
   operations and content.</t>

<t>The YANG module defined in this document augments the "tunnels-path-compute" and the "tunnel-actions" RPCs defined in <xref target="I-D.ietf-teas-yang-te"/>. The security considerations provided in <xref target="I-D.ietf-teas-yang-te"/> are also applicable to the YANG module
   defined in this document.</t>

<t>Some of the RPC operations defined in this YANG module may be considered
   sensitive or vulnerable in some network environments.  It is thus
   important to control access to these operations. These are the
   operations and their sensitivity/vulnerability:</t>

<t>"te-pc:response/computed-paths-properties": provides the same information provided by the "te:computed-paths-properties" defined in <xref target="I-D.ietf-teas-yang-te"/>. The security considerations provided in <xref target="I-D.ietf-teas-yang-te"/> for the TE tunnel state apply also to this subtree.</t>

<t>"te-pc:response/te-pc:tunnel-ref", "te-pc:response/te-pc:primary-path-ref", "te-pc:response/te-pc:primary-reverse-path-ref", "te-pc:response/te-pc:secondary-path-ref" and "te-pc:response/te-pc:secondary-reverse-path-ref" provides a reference where the same information provided in "te-pc:response/computed-paths-properties" is temporarly stored with the operational datastore (see <xref target="temp-state"/>). Therefore access to this information does not provide any additional security issue that the information provided with "te-pc:response/computed-paths-properties".</t>

<t>"/te:tunnels-actions": the YANG model defined in this document augments this action with a new action type that allows deleting the transient states of computed paths (see <xref target="temp-state"/>). A malicious use of this action would have no impact on the paths carrying live traffic but it would preclude the client from using the "transient states" to request the set-up of exactly that path, if still available.</t>

<t>The security considerations spelled out in the
   YANG specification <xref target="RFC7950"/> apply for this document as well.</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>This document registers the following URIs in the "ns" subregistry
   within the "IETF XML registry" <xref target="RFC3688"/>.</t>

<figure><artwork><![CDATA[
      URI: urn:ietf:params:xml:ns:yang:ietf-te-path-computation
      Registrant Contact:  The IESG.
      XML: N/A, the requested URI is an XML namespace.
]]></artwork></figure>

<t>This document registers a YANG module in the "YANG Module Names"
   registry <xref target="RFC7950"/>.</t>

<figure><artwork><![CDATA[
      name:      ietf-te-path-computation
      namespace: urn:ietf:params:xml:ns:yang:ietf-te-path-computation
      prefix:    te-pc
      reference: this document
]]></artwork></figure>

</section>


  </middle>

  <back>


    <references title='Normative References'>





<reference anchor='RFC6241' target='https://www.rfc-editor.org/info/rfc6241'>
<front>
<title>Network Configuration Protocol (NETCONF)</title>
<author fullname='R. Enns' initials='R.' role='editor' surname='Enns'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'><organization/></author>
<author fullname='A. Bierman' initials='A.' role='editor' surname='Bierman'><organization/></author>
<date month='June' year='2011'/>
<abstract><t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices.  It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages.  The NETCONF protocol operations are realized as remote procedure calls (RPCs).  This document obsoletes RFC 4741.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6241'/>
<seriesInfo name='DOI' value='10.17487/RFC6241'/>
</reference>



<reference anchor='RFC8040' target='https://www.rfc-editor.org/info/rfc8040'>
<front>
<title>RESTCONF Protocol</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<date month='January' year='2017'/>
<abstract><t>This document describes an HTTP-based protocol that provides a programmatic interface for accessing data defined in YANG, using the datastore concepts defined in the Network Configuration Protocol (NETCONF).</t></abstract>
</front>
<seriesInfo name='RFC' value='8040'/>
<seriesInfo name='DOI' value='10.17487/RFC8040'/>
</reference>



<reference anchor='RFC8795' target='https://www.rfc-editor.org/info/rfc8795'>
<front>
<title>YANG Data Model for Traffic Engineering (TE) Topologies</title>
<author fullname='X. Liu' initials='X.' surname='Liu'><organization/></author>
<author fullname='I. Bryskin' initials='I.' surname='Bryskin'><organization/></author>
<author fullname='V. Beeram' initials='V.' surname='Beeram'><organization/></author>
<author fullname='T. Saad' initials='T.' surname='Saad'><organization/></author>
<author fullname='H. Shah' initials='H.' surname='Shah'><organization/></author>
<author fullname='O. Gonzalez de Dios' initials='O.' surname='Gonzalez de Dios'><organization/></author>
<date month='August' year='2020'/>
<abstract><t>This document defines a YANG data model for representing, retrieving, and manipulating Traffic Engineering (TE) Topologies. The model serves as a base model that other technology-specific TE topology models can augment.</t></abstract>
</front>
<seriesInfo name='RFC' value='8795'/>
<seriesInfo name='DOI' value='10.17487/RFC8795'/>
</reference>


<reference anchor='I-D.ietf-teas-yang-te'>
   <front>
      <title>A YANG Data Model for Traffic Engineering Tunnels, Label Switched Paths and Interfaces</title>
      <author fullname='Tarek Saad' initials='T.' surname='Saad'>
         <organization>Juniper Networks</organization>
      </author>
      <author fullname='Rakesh Gandhi' initials='R.' surname='Gandhi'>
         <organization>Cisco Systems Inc</organization>
      </author>
      <author fullname='Xufeng Liu' initials='X.' surname='Liu'>
         <organization>IBM Corporation</organization>
      </author>
      <author fullname='Vishnu Pavan Beeram' initials='V. P.' surname='Beeram'>
         <organization>Juniper Networks</organization>
      </author>
      <author fullname='Igor Bryskin' initials='I.' surname='Bryskin'>
         <organization>Individual</organization>
      </author>
      <author fullname='Oscar Gonzalez de Dios' initials='O. G.' surname='de Dios'>
         <organization>Telefonica</organization>
      </author>
      <date day='11' month='July' year='2022'/>
      <abstract>
	 <t>   This document defines a YANG data model for the provisioning and
   management of Traffic Engineering (TE) tunnels, Label Switched Paths
   (LSPs), and interfaces.  The model covers data that is independent of
   any technology or dataplane encapsulation and is divided into two
   YANG modules that cover device-specific, and device independent data.

   This model covers data for configuration, operational state, remote
   procedural calls, and event notifications.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-teas-yang-te-30'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-teas-yang-te-30.txt' type='TXT'/>
</reference>



<reference anchor='RFC7950' target='https://www.rfc-editor.org/info/rfc7950'>
<front>
<title>The YANG 1.1 Data Modeling Language</title>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<date month='August' year='2016'/>
<abstract><t>YANG is a data modeling language used to model configuration data, state data, Remote Procedure Calls, and notifications for network management protocols.  This document describes the syntax and semantics of version 1.1 of the YANG language.  YANG version 1.1 is a maintenance release of the YANG language, addressing ambiguities and defects in the original specification.  There are a small number of backward incompatibilities from YANG version 1.  This document also specifies the YANG mappings to the Network Configuration Protocol (NETCONF).</t></abstract>
</front>
<seriesInfo name='RFC' value='7950'/>
<seriesInfo name='DOI' value='10.17487/RFC7950'/>
</reference>



<reference anchor='RFC5440' target='https://www.rfc-editor.org/info/rfc5440'>
<front>
<title>Path Computation Element (PCE) Communication Protocol (PCEP)</title>
<author fullname='JP. Vasseur' initials='JP.' role='editor' surname='Vasseur'><organization/></author>
<author fullname='JL. Le Roux' initials='JL.' role='editor' surname='Le Roux'><organization/></author>
<date month='March' year='2009'/>
<abstract><t>This document specifies the Path Computation Element (PCE) Communication Protocol (PCEP) for communications between a Path Computation Client (PCC) and a PCE, or between two PCEs.  Such interactions include path computation requests and path computation replies as well as notifications of specific states related to the use of a PCE in the context of Multiprotocol Label Switching (MPLS) and Generalized MPLS (GMPLS) Traffic Engineering.  PCEP is designed to be flexible and extensible so as to easily allow for the addition of further messages and objects, should further requirements be expressed in the future.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5440'/>
<seriesInfo name='DOI' value='10.17487/RFC5440'/>
</reference>



<reference anchor='RFC7926' target='https://www.rfc-editor.org/info/rfc7926'>
<front>
<title>Problem Statement and Architecture for Information Exchange between Interconnected Traffic-Engineered Networks</title>
<author fullname='A. Farrel' initials='A.' role='editor' surname='Farrel'><organization/></author>
<author fullname='J. Drake' initials='J.' surname='Drake'><organization/></author>
<author fullname='N. Bitar' initials='N.' surname='Bitar'><organization/></author>
<author fullname='G. Swallow' initials='G.' surname='Swallow'><organization/></author>
<author fullname='D. Ceccarelli' initials='D.' surname='Ceccarelli'><organization/></author>
<author fullname='X. Zhang' initials='X.' surname='Zhang'><organization/></author>
<date month='July' year='2016'/>
<abstract><t>In Traffic-Engineered (TE) systems, it is sometimes desirable to establish an end-to-end TE path with a set of constraints (such as bandwidth) across one or more networks from a source to a destination.  TE information is the data relating to nodes and TE links that is used in the process of selecting a TE path.  TE information is usually only available within a network.  We call such a zone of visibility of TE information a domain.  An example of a domain may be an IGP area or an Autonomous System.</t><t>In order to determine the potential to establish a TE path through a series of connected networks, it is necessary to have available a certain amount of TE information about each network.  This need not be the full set of TE information available within each network but does need to express the potential of providing TE connectivity. This subset of TE information is called TE reachability information.</t><t>This document sets out the problem statement for the exchange of TE information between interconnected TE networks in support of end-to-end TE path establishment and describes the best current practice architecture to meet this problem statement.  For reasons that are explained in this document, this work is limited to simple TE constraints and information that determine TE reachability.</t></abstract>
</front>
<seriesInfo name='BCP' value='206'/>
<seriesInfo name='RFC' value='7926'/>
<seriesInfo name='DOI' value='10.17487/RFC7926'/>
</reference>



<reference anchor='RFC8340' target='https://www.rfc-editor.org/info/rfc8340'>
<front>
<title>YANG Tree Diagrams</title>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='L. Berger' initials='L.' role='editor' surname='Berger'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>This document captures the current syntax used in YANG module tree diagrams.  The purpose of this document is to provide a single location for this definition.  This syntax may be updated from time to time based on the evolution of the YANG language.</t></abstract>
</front>
<seriesInfo name='BCP' value='215'/>
<seriesInfo name='RFC' value='8340'/>
<seriesInfo name='DOI' value='10.17487/RFC8340'/>
</reference>


<reference anchor='I-D.ietf-teas-rfc8776-update'>
   <front>
      <title>Updated Common YANG Data Types for Traffic Engineering</title>
      <author fullname='Italo Busi' initials='I.' surname='Busi'>
         <organization>Huawei</organization>
      </author>
      <author fullname='Aihua Guo' initials='A.' surname='Guo'>
         <organization>Futurewei Technologies</organization>
      </author>
      <author fullname='Xufeng Liu' initials='X.' surname='Liu'>
         <organization>IBM Corporation</organization>
      </author>
      <author fullname='Tarek Saad' initials='T.' surname='Saad'>
         <organization>Juniper Networks</organization>
      </author>
      <author fullname='Rakesh Gandhi' initials='R.' surname='Gandhi'>
         <organization>Cisco Systems, Inc.</organization>
      </author>
      <author fullname='Vishnu Pavan Beeram' initials='V. P.' surname='Beeram'>
         <organization>Juniper Networks</organization>
      </author>
      <author fullname='Igor Bryskin' initials='I.' surname='Bryskin'>
         <organization>Individual</organization>
      </author>
      <date day='11' month='July' year='2022'/>
      <abstract>
	 <t>   This document defines few additional common data types and groupings
   in YANG data modeling language to be imported by modules that model
   Traffic Engineering (TE) configuration and state capabilities.

   This document updates RFC 8776 with a new revision of the module
   ietf-te-types.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-teas-rfc8776-update-00'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-teas-rfc8776-update-00.txt' type='TXT'/>
</reference>



<reference anchor='RFC5441' target='https://www.rfc-editor.org/info/rfc5441'>
<front>
<title>A Backward-Recursive PCE-Based Computation (BRPC) Procedure to Compute Shortest Constrained Inter-Domain Traffic Engineering Label Switched Paths</title>
<author fullname='JP. Vasseur' initials='JP.' role='editor' surname='Vasseur'><organization/></author>
<author fullname='R. Zhang' initials='R.' surname='Zhang'><organization/></author>
<author fullname='N. Bitar' initials='N.' surname='Bitar'><organization/></author>
<author fullname='JL. Le Roux' initials='JL.' surname='Le Roux'><organization/></author>
<date month='April' year='2009'/>
<abstract><t>The ability to compute shortest constrained Traffic Engineering Label Switched Paths (TE LSPs) in Multiprotocol Label Switching (MPLS) and Generalized MPLS (GMPLS) networks across multiple domains has been identified as a key requirement.  In this context, a domain is a collection of network elements within a common sphere of address management or path computational responsibility such as an IGP area or an Autonomous Systems.  This document specifies a procedure relying on the use of multiple Path Computation Elements (PCEs) to compute such inter-domain shortest constrained paths across a predetermined sequence of domains, using a backward-recursive path computation technique.  This technique preserves confidentiality across domains, which is sometimes required when domains are managed by different service providers.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5441'/>
<seriesInfo name='DOI' value='10.17487/RFC5441'/>
</reference>



<reference anchor='RFC5541' target='https://www.rfc-editor.org/info/rfc5541'>
<front>
<title>Encoding of Objective Functions in the Path Computation Element Communication Protocol (PCEP)</title>
<author fullname='JL. Le Roux' initials='JL.' surname='Le Roux'><organization/></author>
<author fullname='JP. Vasseur' initials='JP.' surname='Vasseur'><organization/></author>
<author fullname='Y. Lee' initials='Y.' surname='Lee'><organization/></author>
<date month='June' year='2009'/>
<abstract><t>The computation of one or a set of Traffic Engineering Label Switched Paths (TE LSPs) in MultiProtocol Label Switching (MPLS) and Generalized MPLS (GMPLS) networks is subject to a set of one or more specific optimization criteria, referred to as objective functions (e.g., minimum cost path, widest path, etc.).</t><t>In the Path Computation Element (PCE) architecture, a Path Computation Client (PCC) may want a path to be computed for one or more TE LSPs according to a specific objective function.  Thus, the PCC needs to instruct the PCE to use the correct objective function. Furthermore, it is possible that not all PCEs support the same set of objective functions; therefore, it is useful for the PCC to be able to automatically discover the set of objective functions supported by each PCE.</t><t>This document defines extensions to the PCE communication Protocol (PCEP) to allow a PCE to indicate the set of objective functions it supports.  Extensions are also defined so that a PCC can indicate in a path computation request the required objective function, and a PCE can report in a path computation reply the objective function that was used for path computation.</t><t>This document defines objective function code types for six objective functions previously listed in the PCE requirements work, and provides the definition of four new metric types that apply to a set of synchronized requests.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5541'/>
<seriesInfo name='DOI' value='10.17487/RFC5541'/>
</reference>



<reference anchor='RFC8776' target='https://www.rfc-editor.org/info/rfc8776'>
<front>
<title>Common YANG Data Types for Traffic Engineering</title>
<author fullname='T. Saad' initials='T.' surname='Saad'><organization/></author>
<author fullname='R. Gandhi' initials='R.' surname='Gandhi'><organization/></author>
<author fullname='X. Liu' initials='X.' surname='Liu'><organization/></author>
<author fullname='V. Beeram' initials='V.' surname='Beeram'><organization/></author>
<author fullname='I. Bryskin' initials='I.' surname='Bryskin'><organization/></author>
<date month='June' year='2020'/>
<abstract><t>This document defines a collection of common data types and groupings in YANG data modeling language. These derived common types and groupings are intended to be imported by modules that model Traffic Engineering (TE) configuration and state capabilities.</t></abstract>
</front>
<seriesInfo name='RFC' value='8776'/>
<seriesInfo name='DOI' value='10.17487/RFC8776'/>
</reference>



<reference anchor='RFC6242' target='https://www.rfc-editor.org/info/rfc6242'>
<front>
<title>Using the NETCONF Protocol over Secure Shell (SSH)</title>
<author fullname='M. Wasserman' initials='M.' surname='Wasserman'><organization/></author>
<date month='June' year='2011'/>
<abstract><t>This document describes a method for invoking and running the Network Configuration Protocol (NETCONF) within a Secure Shell (SSH) session as an SSH subsystem.  This document obsoletes RFC 4742.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6242'/>
<seriesInfo name='DOI' value='10.17487/RFC6242'/>
</reference>



<reference anchor='RFC8446' target='https://www.rfc-editor.org/info/rfc8446'>
<front>
<title>The Transport Layer Security (TLS) Protocol Version 1.3</title>
<author fullname='E. Rescorla' initials='E.' surname='Rescorla'><organization/></author>
<date month='August' year='2018'/>
<abstract><t>This document specifies version 1.3 of the Transport Layer Security (TLS) protocol.  TLS allows client/server applications to communicate over the Internet in a way that is designed to prevent eavesdropping, tampering, and message forgery.</t><t>This document updates RFCs 5705 and 6066, and obsoletes RFCs 5077, 5246, and 6961.  This document also specifies new requirements for TLS 1.2 implementations.</t></abstract>
</front>
<seriesInfo name='RFC' value='8446'/>
<seriesInfo name='DOI' value='10.17487/RFC8446'/>
</reference>



<reference anchor='RFC8341' target='https://www.rfc-editor.org/info/rfc8341'>
<front>
<title>Network Configuration Access Control Model</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>The standardization of network configuration interfaces for use with the Network Configuration Protocol (NETCONF) or the RESTCONF protocol requires a structured and secure operating environment that promotes human usability and multi-vendor interoperability.  There is a need for standard mechanisms to restrict NETCONF or RESTCONF protocol access for particular users to a preconfigured subset of all available NETCONF or RESTCONF protocol operations and content.  This document defines such an access control model.</t><t>This document obsoletes RFC 6536.</t></abstract>
</front>
<seriesInfo name='STD' value='91'/>
<seriesInfo name='RFC' value='8341'/>
<seriesInfo name='DOI' value='10.17487/RFC8341'/>
</reference>



<reference anchor='RFC3688' target='https://www.rfc-editor.org/info/rfc3688'>
<front>
<title>The IETF XML Registry</title>
<author fullname='M. Mealling' initials='M.' surname='Mealling'><organization/></author>
<date month='January' year='2004'/>
<abstract><t>This document describes an IANA maintained registry for IETF standards which use Extensible Markup Language (XML) related items such as Namespaces, Document Type Declarations (DTDs), Schemas, and Resource Description Framework (RDF) Schemas.</t></abstract>
</front>
<seriesInfo name='BCP' value='81'/>
<seriesInfo name='RFC' value='3688'/>
<seriesInfo name='DOI' value='10.17487/RFC3688'/>
</reference>




    </references>

    <references title='Informative References'>





<reference anchor='RFC7491' target='https://www.rfc-editor.org/info/rfc7491'>
<front>
<title>A PCE-Based Architecture for Application-Based Network Operations</title>
<author fullname='D. King' initials='D.' surname='King'><organization/></author>
<author fullname='A. Farrel' initials='A.' surname='Farrel'><organization/></author>
<date month='March' year='2015'/>
<abstract><t>Services such as content distribution, distributed databases, or inter-data center connectivity place a set of new requirements on the operation of networks.  They need on-demand and application-specific reservation of network connectivity, reliability, and resources (such as bandwidth) in a variety of network applications (such as point-to-point connectivity, network virtualization, or mobile back-haul) and in a range of network technologies from packet (IP/MPLS) down to optical.  An environment that operates to meet these types of requirements is said to have Application-Based Network Operations (ABNO).  ABNO brings together many existing technologies and may be seen as the use of a toolbox of existing components enhanced with a few new elements.</t><t>This document describes an architecture and framework for ABNO, showing how these components fit together.  It provides a cookbook of existing technologies to satisfy the architecture and meet the needs of the applications.</t></abstract>
</front>
<seriesInfo name='RFC' value='7491'/>
<seriesInfo name='DOI' value='10.17487/RFC7491'/>
</reference>



<reference anchor='RFC8453' target='https://www.rfc-editor.org/info/rfc8453'>
<front>
<title>Framework for Abstraction and Control of TE Networks (ACTN)</title>
<author fullname='D. Ceccarelli' initials='D.' role='editor' surname='Ceccarelli'><organization/></author>
<author fullname='Y. Lee' initials='Y.' role='editor' surname='Lee'><organization/></author>
<date month='August' year='2018'/>
<abstract><t>Traffic Engineered (TE) networks have a variety of mechanisms to facilitate the separation of the data plane and control plane.  They also have a range of management and provisioning protocols to configure and activate network resources.  These mechanisms represent key technologies for enabling flexible and dynamic networking.  The term &quot;Traffic Engineered network&quot; refers to a network that uses any connection-oriented technology under the control of a distributed or centralized control plane to support dynamic provisioning of end-to- end connectivity.</t><t>Abstraction of network resources is a technique that can be applied to a single network domain or across multiple domains to create a single virtualized network that is under the control of a network operator or the customer of the operator that actually owns the network resources.</t><t>This document provides a framework for Abstraction and Control of TE Networks (ACTN) to support virtual network services and connectivity services.</t></abstract>
</front>
<seriesInfo name='RFC' value='8453'/>
<seriesInfo name='DOI' value='10.17487/RFC8453'/>
</reference>



<reference anchor='RFC8454' target='https://www.rfc-editor.org/info/rfc8454'>
<front>
<title>Information Model for Abstraction and Control of TE Networks (ACTN)</title>
<author fullname='Y. Lee' initials='Y.' surname='Lee'><organization/></author>
<author fullname='S. Belotti' initials='S.' surname='Belotti'><organization/></author>
<author fullname='D. Dhody' initials='D.' surname='Dhody'><organization/></author>
<author fullname='D. Ceccarelli' initials='D.' surname='Ceccarelli'><organization/></author>
<author fullname='B. Yoon' initials='B.' surname='Yoon'><organization/></author>
<date month='September' year='2018'/>
<abstract><t>This document provides an information model for Abstraction and Control of TE Networks (ACTN).</t></abstract>
</front>
<seriesInfo name='RFC' value='8454'/>
<seriesInfo name='DOI' value='10.17487/RFC8454'/>
</reference>


<reference anchor='I-D.ietf-ccamp-otn-topo-yang'>
   <front>
      <title>A YANG Data Model for Optical Transport Network Topology</title>
      <author fullname='Haomian Zheng' initials='H.' surname='Zheng'>
         <organization>Huawei Technologies</organization>
      </author>
      <author fullname='Italo Busi' initials='I.' surname='Busi'>
         <organization>Huawei Technologies</organization>
      </author>
      <author fullname='Xufeng Liu' initials='X.' surname='Liu'>
         <organization>IBM Corporation</organization>
      </author>
      <author fullname='Sergio Belotti' initials='S.' surname='Belotti'>
         <organization>Nokia</organization>
      </author>
      <author fullname='Oscar Gonzalez de Dios' initials='O. G.' surname='de Dios'>
         <organization>Telefonica</organization>
      </author>
      <date day='11' month='July' year='2022'/>
      <abstract>
	 <t>   This document describes a YANG data model to describe the topologies
   of an Optical Transport Network (OTN).  It is independent of control
   plane protocols and captures topological and resource related
   information pertaining to OTN.  This model enables clients, which
   interact with a transport domain controller, for OTN topology related
   operations such as obtaining the relevant topology resource
   information.


	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-ccamp-otn-topo-yang-15'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-ccamp-otn-topo-yang-15.txt' type='TXT'/>
</reference>



<reference anchor='RFC4655' target='https://www.rfc-editor.org/info/rfc4655'>
<front>
<title>A Path Computation Element (PCE)-Based Architecture</title>
<author fullname='A. Farrel' initials='A.' surname='Farrel'><organization/></author>
<author fullname='J.-P. Vasseur' initials='J.-P.' surname='Vasseur'><organization/></author>
<author fullname='J. Ash' initials='J.' surname='Ash'><organization/></author>
<date month='August' year='2006'/>
<abstract><t>Constraint-based path computation is a fundamental building block for traffic engineering systems such as Multiprotocol Label Switching (MPLS) and Generalized Multiprotocol Label Switching (GMPLS) networks.  Path computation in large, multi-domain, multi-region, or multi-layer networks is complex and may require special computational components and cooperation between the different network domains.</t><t>This document specifies the architecture for a Path Computation Element (PCE)-based model to address this problem space.  This document does not attempt to provide a detailed description of all the architectural components, but rather it describes a set of building blocks for the PCE architecture from which solutions may be constructed.  This memo provides information for the Internet community.</t></abstract>
</front>
<seriesInfo name='RFC' value='4655'/>
<seriesInfo name='DOI' value='10.17487/RFC4655'/>
</reference>



<reference anchor='RFC8342' target='https://www.rfc-editor.org/info/rfc8342'>
<front>
<title>Network Management Datastore Architecture (NMDA)</title>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' surname='Schoenwaelder'><organization/></author>
<author fullname='P. Shafer' initials='P.' surname='Shafer'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<author fullname='R. Wilton' initials='R.' surname='Wilton'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>Datastores are a fundamental concept binding the data models written in the YANG data modeling language to network management protocols such as the Network Configuration Protocol (NETCONF) and RESTCONF. This document defines an architectural framework for datastores based on the experience gained with the initial simpler model, addressing requirements that were not well supported in the initial model.  This document updates RFC 7950.</t></abstract>
</front>
<seriesInfo name='RFC' value='8342'/>
<seriesInfo name='DOI' value='10.17487/RFC8342'/>
</reference>



<reference anchor='RFC6805' target='https://www.rfc-editor.org/info/rfc6805'>
<front>
<title>The Application of the Path Computation Element Architecture to the Determination of a Sequence of Domains in MPLS and GMPLS</title>
<author fullname='D. King' initials='D.' role='editor' surname='King'><organization/></author>
<author fullname='A. Farrel' initials='A.' role='editor' surname='Farrel'><organization/></author>
<date month='November' year='2012'/>
<abstract><t>Computing optimum routes for Label Switched Paths (LSPs) across multiple domains in MPLS Traffic Engineering (MPLS-TE) and GMPLS networks presents a problem because no single point of path computation is aware of all of the links and resources in each domain.  A solution may be achieved using the Path Computation Element (PCE) architecture.</t><t>Where the sequence of domains is known a priori, various techniques can be employed to derive an optimum path.  If the domains are simply connected, or if the preferred points of interconnection are also known, the Per-Domain Path Computation technique can be used.  Where there are multiple connections between domains and there is no preference for the choice of points of interconnection, the Backward-Recursive PCE-based Computation (BRPC) procedure can be used to derive an optimal path.</t><t>This document examines techniques to establish the optimum path when the sequence of domains is not known in advance.  The document shows how the PCE architecture can be extended to allow the optimum sequence of domains to be selected, and the optimum end-to-end path to be derived through the use of a hierarchical relationship between domains.  This document is not an Internet Standards Track  specification; it is published for informational purposes.</t></abstract>
</front>
<seriesInfo name='RFC' value='6805'/>
<seriesInfo name='DOI' value='10.17487/RFC6805'/>
</reference>



<reference anchor='RFC7446' target='https://www.rfc-editor.org/info/rfc7446'>
<front>
<title>Routing and Wavelength Assignment Information Model for Wavelength Switched Optical Networks</title>
<author fullname='Y. Lee' initials='Y.' role='editor' surname='Lee'><organization/></author>
<author fullname='G. Bernstein' initials='G.' role='editor' surname='Bernstein'><organization/></author>
<author fullname='D. Li' initials='D.' surname='Li'><organization/></author>
<author fullname='W. Imajuku' initials='W.' surname='Imajuku'><organization/></author>
<date month='February' year='2015'/>
<abstract><t>This document provides a model of information needed by the Routing and Wavelength Assignment (RWA) process in Wavelength Switched Optical Networks (WSONs).  The purpose of the information described in this model is to facilitate constrained optical path computation in WSONs.  This model takes into account compatibility constraints between WSON signal attributes and network elements but does not include constraints due to optical impairments.  Aspects of this information that may be of use to other technologies utilizing a GMPLS control plane are discussed.</t></abstract>
</front>
<seriesInfo name='RFC' value='7446'/>
<seriesInfo name='DOI' value='10.17487/RFC7446'/>
</reference>




    </references>


<section anchor="examples"><name>Examples</name>

<t>This section contains examples of use of the model with RESTCONF
<xref target="RFC8040"/> and JSON encoding.</t>

<t>These examples show how path computation can be requested for the tunnels configuration provided in Appendix A of <xref target="I-D.ietf-teas-yang-te"/>.</t>

<section anchor="basic-example"><name>Basic Path Computation</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 13.1 of of <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>In this case, the TE Tunnel has only one primary path with no specific constraints.</t>

<figure><artwork type="ascii-art"><![CDATA[
POST /restconf/operations/ietf-te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="basic.json"><![CDATA[
{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 1,
          "tunnel-name": "Example_LSP_Tunnel_A_2",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "10.0.0.1",
          "destination": "10.0.0.4",
          "bidirectional": "false",
          "signaling-type": "te-types:path-setup-rsvp"
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="transient-state-example"><name>Path Computation with transient state</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 13.1 of of <xref target="I-D.ietf-teas-yang-te"/> requesting some transient state to be reported within the operational datastore, as described <xref target="temp-state"/>.</t>

<t>In this case, the TE Tunnel has only one primary path with no specific constraints.</t>

<figure><artwork type="ascii-art"><![CDATA[
POST /restconf/operations/ietf-te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="transient-state.json"><![CDATA[
{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 2,
          "tunnel-name": "Example_LSP_Tunnel_A_2",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "10.0.0.1",
          "destination": "10.0.0.4",
          "bidirectional": "false",
          "signaling-type": "te-types:path-setup-rsvp",
          "requested-state": {
            "transaction-id": "example"
          }
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="global-path-constraint-example"><name>Path Computation with Global Path Constraint</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 13.3 of of <xref target="I-D.ietf-teas-yang-te"/>. The 'named path constraint' is created in section 13.2 of <xref target="I-D.ietf-teas-yang-te"/> applies to this path computation request.</t>

<figure><artwork type="ascii-art"><![CDATA[
POST /restconf/operations/ietf-te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="global-path-constraint.json"><![CDATA[
{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 3,
          "tunnel-name": "Example_LSP_Tunnel_A_4_1",
          "path-name": "Simple_LSP_1",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "10.0.0.1",
          "destination": "10.0.0.4",
          "bidirectional": "false",
          "signaling-type": "path-setup-rsvp",
          "named-path-constraint": "max-hop-3",
          "requested-state": {}
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="tunnel-path-constraint-example"><name>Path Computation with Per-tunnel Path Constraint</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 13.4 of of <xref target="I-D.ietf-teas-yang-te"/>, using a per tunnel path constraint.</t>

<figure><artwork type="ascii-art"><![CDATA[
POST /restconf/operations/ietf-te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="tunnel-path-constraint.json"><![CDATA[
{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 4,
          "tunnel-name": "Example_LSP_Tunnel_A_4_2",
          "path-name": "path1",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "10.0.0.1",
          "destination": "10.0.0.4",
          "bidirectional": "false",
          "signaling-type": "te-types:path-setup-rsvp",
          "path-metric-bounds": {
            "path-metric-bound": [
              {
                "metric-type": "te-types:path-metric-hop",
                "upper-bound": "3"
              }
            ]
          }
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="path-computation-result"><name>Path Computation result</name>

<t>This example reports the output of the path computation RPC request described in <xref target="tunnel-path-constraint-example"/>.</t>

<figure><artwork type="ascii-art"><![CDATA[
HTTP/1.1 200 OK
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="tunnel-path-constraint.json"><![CDATA[
{
  "ietf-te:output": {
    "path-compute-result": {
      "ietf-te-path-computation:response": [
        {
          "response-id": 3,
          "computed-paths-properties": {
            "computed-path-properties": [
              {
                "k-index": "1",
                "path-properties": {
                  "path-route-objects": {
                    "path-route-object": [
                      {
                        "index": "1",
                        "numbered-node-hop": {
                          "node-id": "10.0.0.2"
                        }
                      },
                      {
                        "index": "2",
                        "numbered-node-hop": {
                          "node-id": "10.0.0.4"
                        }
                      }
                    ]
                  }
                }
              }
            ]
          },
          "tunnel-ref": "Example_LSP_Tunnel_A_4_1",
          "primary-path-ref": "path1"
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
</section>
<section numbered="false" anchor="acknowledgments"><name>Acknowledgments</name>

<t>The authors would like to thank Igor Bryskin and Xian Zhang for
   participating in the initial discussions that have triggered this
   work and providing valuable insights.</t>

<t>The authors would like to thank the authors of the TE tunnel YANG
   data model <xref target="I-D.ietf-teas-yang-te"/>, in particular Igor Bryskin, Vishnu Pavan
   Beeram, Tarek Saad and Xufeng Liu, for their inputs to the
   discussions and support in having consistency between the Path
   Computation and TE tunnel YANG data models.</t>

<t>The authors would like to thank Adrian Farrel, Dhruv Dhody, Igor
   Bryskin, Julien Meuric and Lou Berger for their valuable input to the
   discussions that has clarified that the path being set up is not
   necessarily the same as the path that has been previously computed
   and, in particular to Dhruv Dhody, for his suggestion to describe the
   need for a path verification phase to check that the actual path
   being set up meets the required end-to-end metrics and constraints.</t>

<t>The authors would like to thank Aihua Guo, Lou Berger, Shaolong Gan,
   Martin Bjorklund and Tom Petch for their useful comments on how to
   define XPath statements in YANG RPCs.</t>

<t>The authors would like to thank Haomian Zheng, Yanlei Zheng, Tom
   Petch, Aihua Guo and Martin Bjorklund for their review and valuable
   comments to this document.</t>

<t>Previous versions of document were prepared using 2-Word-v2.0.template.dot.</t>

<t>This document was prepared using kramdown.</t>

</section>

    <section anchor="contributors" numbered="false" toc="include" removeInRFC="false">
        <name>Contributors</name>
    <contact initials="V." surname="Lopez" fullname="Victor Lopez">
      <organization>Nokia</organization>
      <address>
        <email>victor.lopez@nokia.com</email>
      </address>
    </contact>
    <contact initials="R." surname="Vilalta" fullname="Ricard Vilalta">
      <organization>CTTC</organization>
      <address>
        <email>ricard.vilalta@cttc.es</email>
      </address>
    </contact>
    <contact initials="K." surname="Sethuraman" fullname="Karthik Sethuraman">
      <organization>NEC</organization>
      <address>
        <email>karthik.sethuraman@necam.com</email>
      </address>
    </contact>
    <contact initials="M." surname="Scharf" fullname="Michael Scharf">
      <organization>Nokia</organization>
      <address>
        <email>michael.scharf@gmail.com</email>
      </address>
    </contact>
    <contact initials="D." surname="Beller" fullname="Dieter Beller">
      <organization>Nokia</organization>
      <address>
        <email>dieter.beller@nokia.com</email>
      </address>
    </contact>
    <contact initials="G." surname="Bruno" fullname="Gianmarco Bruno">
      <organization>Ericsson</organization>
      <address>
        <email>gianmarco.bruno@ericsson.com</email>
      </address>
    </contact>
    <contact initials="F." surname="Lazzeri" fullname="Francesco Lazzeri">
      <organization>Ericsson</organization>
      <address>
        <email>francesco.lazzeri@ericsson.com</email>
      </address>
    </contact>
    <contact initials="Y." surname="Lee" fullname="Young Lee">
      <organization>Samsung Electronics</organization>
      <address>
        <email>younglee.tx@gmail.com</email>
      </address>
    </contact>
    <contact initials="C." surname="Perocchio" fullname="Carlo Perocchio">
      <organization>Ericsson</organization>
      <address>
        <email>carlo.perocchio@ericsson.com</email>
      </address>
    </contact>
    <contact initials="O." surname="Dugeon" fullname="Olivier Dugeon">
      <organization>Orange Labs</organization>
      <address>
        <email>olivier.dugeon@orange.com</email>
      </address>
    </contact>
    <contact initials="J." surname="Meuric" fullname="Julien Meuric">
      <organization>Orange Labs</organization>
      <address>
        <email>julien.meuric@orange.com</email>
      </address>
    </contact>
    </section>

  </back>

<!-- ##markdown-source:
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
0jCoRXOqgOZCq4QHjKc3imLOWGrQNhWGSnrXZ8OzICWGz39qyNUtfYKHovVW
FT60w/Oci2sRoAPOQkFZb5QdBevSVN8d2MRJbpe77OfCNd6L6NU3mA+u2uur
Al+yvarabyla33zR1LstqNivX335hWRGIYXf6g2ol1bL1udGIk0GMG9Q+JC5
zH/2S0oOZRYZmSGJIwKEtiXo9O+KtVyOxscOKV/tlfWQ6IGs6GXPoRa/iXUN
NaY4qTFdmI3Xrp0FjCvyxr6aZJ7JpzVmB9G36XeJiaKlPmLW60o29nqgkCtd
eLKq7Z96JgWAlTgjSXlZXWEPefRSEa8u7Lsvnb9eqwXuSqFXPSGlrxm0c1Xl
3HA0J4uyVLYL/Of6PRr4M5bx6FfzFx/FNSfkv4jnYk91dQs8zsxBjhc6CfAg
IC3E+8ZBjiDPCgX4GFjeWC+3Py0OQEs+SDII7YPr6vKKHgKjqqNSM6f0aa9v
HbmXBerQ8veHyGt83uFSxQHaG/YPuM3SVtcwDun/yUzgFLFtSaeyJ7vblhdb
XWRCpfWWdN6PaAKsMmk3JOjKHfp9xO3v53sO/d5XK7mqxnfFR3/bygPZtPW5
HkGy+l/rZPWZHtTBzXB+/v4PDz76grr831vdICDHwy9c31+qG/jqBgGNPmYa
/TNVNwhF0V2KG5xJ1BBpW+7WZ3lVo7droOTB3LYNA8AuevqISNYRBYfvkFSs
R1ceOyvUvC9JGSDHEz3vco+jVk3xHoNsWrn8BgTIeYytpPKBeiGdkoFwqj00
X5wfi6OP0izAbqvQQcn+qpk6Gj5ofeTYBQALI6SAYwgSjWglNSiU5MlXx3ix
xmOcApNgHJuo7v49a799+hMmA7Iqmg0I0AmzkVmQki+qCJj/2PaB6U/KTcZc
1qwm+EgrWxWCFZlEzSKf1W3dz54q5CioQt6aPdn22bwdC4fqArK0u3PeAodE
G1nFI6eZ9Ie35/krogtpUuxYDd0BOtWHPvR1rJ7jbau/JHQel7xQZ5i1cYte
y7B+PFcAg8MgnALW0yjl8vU/d20XZsnwZjE5mGoKjzgMvBswLLrTzfN5+392
oHccgVWz62zaWg5/Q/WSNZqty1kxM+pekj1UvE9B522cDichGceUlQMVERu4
Jr509rbCCN8ZVIfxqvb35rnBW3D4TsC0HTTrlqC/lN/BkJQnxAFEk7umnQf/
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
xIECAA==

-->

</rfc>

