<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.17 (Ruby 2.7.0) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc comments="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-teas-yang-path-computation-22" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="Yang for Path Computation">A YANG Data Model for requesting path computation</title>

    <author initials="I." surname="Busi" fullname="Italo Busi" role="editor">
      <organization>Huawei Technologies</organization>
      <address>
        <email>italo.busi@huawei.com</email>
      </address>
    </author>
    <author initials="S." surname="Belotti" fullname="Sergio Belotti" role="editor">
      <organization>Nokia</organization>
      <address>
        <email>sergio.belotti@nokia.com</email>
      </address>
    </author>
    <author initials="O." surname="Gonzalez de Dios" fullname="Oscar Gonzalez de Dios">
      <organization>Telefonica</organization>
      <address>
        <email>oscar.gonzalezdedios@telefonica.com</email>
      </address>
    </author>
    <author initials="A." surname="Sharma" fullname="Anurag Sharma">
      <organization>Google</organization>
      <address>
        <email>ansha@google.com</email>
      </address>
    </author>
    <author initials="Y." surname="Shi" fullname="Yan Shi">
      <organization>China Unicom</organization>
      <address>
        <email>shiyan49@chinaunicom.cn</email>
      </address>
    </author>

    <date year="2024" month="February" day="12"/>

    
    <workgroup>TEAS Working Group</workgroup>
    

    <abstract>


<t>There are scenarios, typically in a hierarchical Software-Defined
   Networking (SDN) context, where the topology information provided by
   a Traffic Engineering (TE) network provider may be insufficient for
   its client to perform multi-domain path computation. In these cases the
   client would need to request the TE network provider to compute some
   intra-domain paths to be used by the client to choose the optimal multi-domain paths.</t>

<t>This document provides a mechanism to request path computation by augmenting the Remote Procedure Calls (RPCs) defined in RFC YYYY.</t>

<t>[RFC EDITOR NOTE: Please replace RFC YYYY with the RFC number of
   draft-ietf-teas-yang-te once it has been published.</t>

<t>Moreover, this document describes some use cases where the path
   computation request, via YANG-based protocols (e.g., NETCONF or
   RESTCONF), can be needed.</t>



    </abstract>



  </front>

  <middle>


<section anchor="intro"><name>Introduction</name>

<t anchor="pc-model">There are scenarios, typically in a hierarchical Software-Defined
   Networking (SDN) context, where the topology information provided by
   a Traffic Engineering (TE) network provider may be insufficient for
   its client to perform multi-domain path computation. In these cases the
   client would need to request the TE network provider to compute some
   intra-domain paths that could be used together with its topology information
   to compute the multi-domain path.</t>

<t>These types of scenarios can be applied to different interfaces in
   different reference architectures:</t>

<t><list style="symbols">
  <t>Application-Based Network Operations (ABNO) control interface
<xref target="RFC7491"/>, in which an Application Service Coordinator can request the
ABNO controller to take in charge path calculation (see Figure 1
in <xref target="RFC7491"/>).</t>
  <t>Abstraction and Control of TE Networks (ACTN) <xref target="RFC8453"/>, where a
controller hierarchy is defined.
In the ACTN context, path computation is needed on the interface
between Customer Network Controller (CNC)  and Multi-Domain
Service Coordinator (MDSC), called CNC-MDSC Interface (CMI),
and on the interface between MSDC and Provisioning Network
Controller (PNC), called MDSC-PNC Interface  (MPI). 
<xref target="RFC8454"/> describes an information model for the Path
Computation request.  <vspace blankLines='1'/>
Multiple protocol solutions can be used for communication between
different controller hierarchical levels. This document assumes that
the controllers are communicating using YANG-based protocols (e.g.,
NETCONF <xref target="RFC6241"/> or RESTCONF <xref target="RFC8040"/>).  <vspace blankLines='1'/>
Path Computation Elements (PCEs), controllers and orchestrators
perform their operations based on Traffic Engineering Databases
(TED). Such TEDs can be described, in a technology agnostic way, with
the YANG data model for TE Topologies <xref target="RFC8795"/>. Furthermore, the
technology specific details of the TED are modelled in the technology
specific topology models, e.g., the <xref target="I-D.ietf-ccamp-otn-topo-yang"/> for Optical Transport
Network (OTN) Optical Data Unit (ODU) technologies, which augment the
common TE topology model in <xref target="RFC8795"/>.  <vspace blankLines='1'/>
The availability of such topology models allows the provisioning of
the TED using YANG-based protocols (e.g., NETCONF or RESTCONF).
Furthermore, it enables a PCE/controller performing the necessary
abstractions or modifications and offering this customized topology
to another PCE/controller or high level orchestrator.  <vspace blankLines='1'/>
The tunnels that can be provided over the networks described with the
topology models can be also set-up, deleted and modified via YANG-
based protocols (e.g., NETCONF or RESTCONF) using the TE tunnel YANG
data model <xref target="I-D.ietf-teas-yang-te"/>.  <vspace blankLines='1'/>
This document defines a YANG data model <xref target="RFC7950"/> that augments the RPC defined in <xref target="I-D.ietf-teas-yang-te"/>. The use of this RPC is complimentary to the configuration of a TE tunnel path in "compute-only" mode, as described in <xref target="I-D.ietf-teas-yang-te"/>.  <vspace blankLines='1'/>
The YANG data model definition does not make any assumption about
whether that the client or the server implement a "PCE"
functionality, as defined in <xref target="RFC4655"/>, and the Path Computation
Element Communication Protocol (PCEP) protocol, as defined in
<xref target="RFC5440"/>.  <vspace blankLines='1'/>
Moreover, this document describes some use cases where a path
computation request, via YANG-based protocols (e.g., NETCONF or
RESTCONF), can be needed.  <vspace blankLines='1'/>
The YANG data model defined in this document conforms to the Network
Management Datastore Architecture <xref target="RFC8342"/>.</t>
</list></t>

<section anchor="terminology"><name>Terminology</name>

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED",
"MAY", and "OPTIONAL" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

<t>TED:</t>

<ul empty="true"><li>
  <t>The traffic engineering database is a collection of all TE
   information about all TE nodes and TE links in a given network.</t>
</li></ul>

<t>PCE:</t>

<ul empty="true"><li>
  <t>A Path Computation Element (PCE) is an entity that is capable of
   computing a network path or route based on a network graph, and of
   applying computational constraints during the computation.  The PCE
   entity is an application that can be located within a network node or
   component, on an out-of-network server, etc.  For example, a PCE
   would be able to compute the path of a TE Label Switched Path (LSP)
   by operating on the TED and considering bandwidth and other
   constraints applicable to the TE LSP service request. <xref target="RFC4655"/>.</t>
</li></ul>

<t>Domain:</t>

<ul empty="true"><li>
  <t>TE information is the data relating to nodes and TE links
   that is used in the process of selecting a TE path.  TE information
   is usually only available within a network.  We call such a zone of
   visibility of TE information a domain.  An example of a domain may be
   an IGP area or an Autonomous System. <xref target="RFC7926"/></t>
</li></ul>

<t>The terminology for describing YANG data models is found in
   <xref target="RFC7950"/>.</t>

</section>
<section anchor="tree-diagram"><name>Tree Diagram</name>

<t>Tree diagrams used in this document follow the notation defined in
   <xref target="RFC8340"/>.</t>

</section>
<section anchor="prefixes-in-data-node-names"><name>Prefixes in Data Node Names</name>

<t>In this document, names of data nodes and other data model objects
   are prefixed using the standard prefix associated with the
   corresponding YANG imported modules, as shown in <xref target="tab-prefix"/>.</t>

<texttable title="Prefixes and corresponding YANG modules" anchor="tab-prefix">
      <ttcol align='left'>Prefix</ttcol>
      <ttcol align='left'>YANG module</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>te-types</c>
      <c>ietf-te-types</c>
      <c>[RFCZZZZ]</c>
      <c>te</c>
      <c>ietf-te</c>
      <c>[RFCYYYY]</c>
      <c>te-pc</c>
      <c>ietf-te-path-computation</c>
      <c>RFCXXXX</c>
</texttable>

<t>RFC Editor Note:
Please replace XXXX with the RFC number assigned to this document.
Please replace YYYY with the RFC number of <xref target="I-D.ietf-teas-yang-te"/> once it has been published.
Please replace ZZZZ with the RFC number of <xref target="I-D.ietf-teas-rfc8776-update"/> once it has been published.
Please remove this note.</t>

</section>
</section>
<section anchor="use-cases"><name>Use Cases</name>

<t>This section presents some use cases, where a client needs to request
   underlying SDN controllers for path computation.</t>

<t>The use of the YANG data model defined in this document is not
   restricted to these use cases but can be used in any other use case
   when deemed useful.</t>

<t>The presented uses cases have been grouped, depending on the
   different underlying topologies: Packet/Optical Integration (<xref target="poi-uc"/>);
   multi-domain Traffic Engineered (TE) Networks (<xref target="md-uc"/>); and Data Center
   Interconnections (<xref target="dci-uc"/>). Use cases in <xref target="brpc-uc"/> and <xref target="hpce-uc"/>
   respectively present how to
   apply this YANG data model for standard multi-domain PCE i.e.
   Backward Recursive Path Computation <xref target="RFC5441"/> and Hierarchical PCE
   <xref target="RFC6805"/>.</t>

<section anchor="poi-uc"><name>Packet/Optical Integration</name>

<t>In this use case, an optical domain is used to provide connectivity
   to some nodes of a packet domain (see <xref target="fig-poi-uc"/>).</t>

<figure title="Packet/Optical Integration use case" anchor="fig-poi-uc"><artwork type="ascii-art" name="poi-use-case.txt"><![CDATA[
                                +----------------+
                                |                |
                                | Packet/Optical |
                                |  Coordinator   |
                                |                |
                                +---+------+-----+
                                    |      |
                       +------------+      |
                       |                   +-----------+
                +------V-----+                         |
                |            |                  +------V-----+
                | Packet     |                  |            |
                | Domain     |                  | Optical    |
                | Controller |                  | Domain     |
                |            |                  | Controller |
                +------+-----+                  +-------+----+
                       |                                |
              .........V.........................       |
              :          packet domain          :       |
          +----+                               +----+   |
          | R1 |= = = = = = = = = = = = = = = =| R2 |   |
          +-+--+                               +--+-+   |
            | :                                 : |     |
            | :................................ : |     |
            |                                     |     |
            |               +-----+               |     |
            |    ...........| Opt |...........    |     |
            |    :          |  C  |          :    |     |
            |    :         /+--+--+\         :    |     |
            |    :        /    |    \        :    |     |
            |    :       /     |     \       :    |     |
            |   +-----+ /   +--+--+   \ +-----+   |     |
            |   | Opt |/    | Opt |    \| Opt |   |     |
            +---|  A  |     |  D  |     |  B  |---+     |
                +-----+\    +--+--+    /+-----+         |
                 :      \      |      /      :          |
                 :       \     |     /       :          |
                 :        \ +--+--+  / optical<---------+
                 :         \| Opt |/  domain :
                 :..........|  E  |..........:
                            +-----+
]]></artwork></figure>

<t><xref target="fig-poi-uc"/> as well as <xref target="fig-poi-abstraction"/> describe two different
   examples of packet/optical topologies and only show a partial view of the
   packet network connectivity, before additional packet connectivity is
   provided by the optical network.</t>

<t>It is assumed that the Optical Domain Controller provides to the
   Packet/Optical Coordinator an abstracted view of the optical network.
   A possible abstraction could be to represent the whole optical
   network as one "virtual node" with "virtual ports" connected to the
   access links, as shown in <xref target="fig-poi-abstraction"/>.</t>

<t>It is also assumed that Packet Domain Controller can provide the
   Packet/Optical Coordinator the information it needs to set up
   connectivity between packet nodes through the optical network (e.g.,
   the access links).</t>

<t>The path computation request helps the Packet/Optical Coordinator to
   know the real connections that can be provided by the optical
   network.</t>

<figure title="Packet and Optical Topology Abstractions" anchor="fig-poi-abstraction"><artwork type="ascii-art" name="poi-topology-abstraction.txt"><![CDATA[
                       ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,.
                      ,  Packet/Optical Coordinator view          ,
                     ,                              +----+       , .
                    ,                               |    |      ,
                   ,                                | R2 |     ,   .
                  ,  +----+  +------------ +       /+----+    ,
                 ,   |    |  |             |/-----/ / /      ,     .
                ,    | R1 |--O VP1     VP4 O       / /      ,
               ,     |    |\ |             | /----/ /      ,       .
              ,      +----+ \|             |/      /      ,
             ,        /      O VP2     VP5 O      /      ,         .
            ,        /       |             |  +----+    ,
           ,        /        |             |  |    |   ,           .
          ,        /         O VP3     VP6 O--| R4 |  ,
         ,     +----+ /-----/|_____________|  +----+ ,             .
        ,      |    |/       +------------ +        ,
       ,       | R3 |                              ,               .
      ,        +----+                             ,,,,,,,,,,,,,,,,,
     ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,                ,.
     . Packet Domain Controller view                +----+       ,
       only packet nodes and packet links           |    |      ,  .
     . with access links to the optical network     | R2 |     ,
                  ,  +----+                        /+----+    ,    .
     .           ,   |    |                 /-----/ / /      ,
                ,    | R1 |---                     / /      ,      .
     .         ,     +----+\                 /----/ /      ,
              ,        /    \               /      /      ,        .
     .       ,        /                           /      ,
            ,        /                        +----+    ,          .
     .     ,        /                         |    |   ,
          ,        /                       ---| R4 |  ,            .
     .   ,     +----+ /-----/                 +----+ ,
        ,      |    |/                              ,              .
     . ,       | R3 |                              ,
      ,        +----+                             ,,,,,,,,,,,,,,,,,.
     .,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,                ,
       Optical Domain Controller view                            , .
     . only optical nodes,        +--+                          ,
       optical links and         /|OF|                         ,   .
     . access links from the  +--++--+             /          ,
       packet network         |OA|    \     /-----/ /        ,     .
     .          ,          ---+--+--\  +--+/       /        ,
               ,           \   |  \  \-|OE|-------/        ,       .
     .        ,             \  |   \ /-+--+               ,
             ,               \+--+  X    |               ,         .
     .      ,                 |OB|-/ \   |              ,
           ,                  +--+-\  \+--+            ,           .
     .    ,                  /   \  \--|OD|---        ,
         ,            /-----/     +--+ +--+          ,             .
     .  ,            /            |OC|/             ,
       ,                          +--+             ,               .
     .,                                           ,,,,,,,,,,,,,,,,,,
      ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,                ,
     . Actual Physical View                         +----+       ,
                    ,             +--+              |    |      ,
     .             ,             /|OF|              | R2 |     ,
                  ,  +----+   +--++--+             /+----+    ,
     .           ,   |    |   |OA|    \     /-----/ / /      ,
                ,    | R1 |---+--+--\  +--+/       / /      ,
     .         ,     +----+\   |  \  \-|OE|-------/ /      ,
              ,        /    \  |   \ /-+--+        /      ,
     .       ,        /      \+--+  X    |        /      ,
            ,        /        |OB|-/ \   |    +----+    ,
     .     ,        /         +--+-\  \+--+   |    |   ,
          ,        /         /   \  \--|OD|---| R4 |  ,
     .   ,     +----+ /-----/     +--+ +--+   +----+ ,
        ,      |    |/            |OC|/             ,
     . ,       | R3 |             +--+             ,
      ,        +----+                             ,
     .,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
]]></artwork></figure>

<t>In this use case, the Packet/Optical Coordinator needs to set up an
   optimal underlying path for an IP link between R1 and R2.</t>

<t>As depicted in <xref target="fig-poi-abstraction"/>, the Packet/Optical Coordinator has only an
   "abstracted view" of the physical network, and it does not know the
   feasibility or the cost of the possible optical paths (e.g., VP1-VP4
   and VP2-VP5), which depend on the current status of the physical
   resources within the optical network and on vendor-specific optical
   attributes.</t>

<t>The Packet/Optical Coordinator can request the underlying Optical
   Domain Controller to compute a set of potential optimal paths, taking
   into account optical constraints. Then, based on its own constraints,
   policy and knowledge (e.g. cost of the access links), it can choose
   which one of these potential paths to use to set up the optimal end-
   to-end path crossing optical network.</t>

<figure title="Packet/Optical Integration path computation example" anchor="fig-poi-example"><artwork type="ascii-art" name="poi-example.txt"><![CDATA[
                    ............................
                    :                          :
                    O VP1                  VP4 O
           cost=10 /:\                        /:\ cost=10
                  / : \----------------------/ : \
          +----+ /  :         cost=50          :  \ +----+
          |    |/   :                          :   \|    |
          | R1 |    :                          :    | R2 |
          |    |\   :                          :   /|    |
          +----+ \  :  /--------------------\  :  / +----+
                  \ : /       cost=55        \ : /
            cost=5 \:/                        \:/ cost=5
                    O VP2                  VP5 O
                    :                          :
                    :..........................:
]]></artwork></figure>

<t>For example, in <xref target="fig-poi-example"/>, the Packet/Optical Coordinator can request
   the Optical Domain Controller to compute the paths between VP1-VP4
   and VP2-VP5 and then decide to set up the optimal end-to-end path
   using the VP2-VP5 optical path even if this is not the optimal path
   from the optical domain perspective.</t>

<t>Considering the dynamicity of the connectivity constraints of an
   optical domain, it is possible that a path computed by the Optical
   Domain Controller when requested by the Packet/Optical Coordinator is
   no longer valid/available when the Packet/Optical Coordinator
   requests it to be set up. This is further discussed in <xref target="rpc-motivation"/>.</t>

</section>
<section anchor="md-uc"><name>Multi-domain TE networks</name>

<t>In this use case there are two TE domains which are interconnected
   together by multiple inter-domains links.</t>

<t>A possible example could be a multi-domain optical network.</t>

<figure title="Multi-domain multi-link interconnection" anchor="md-ml-connection"><artwork type="ascii-art" name="multi-domain-use-case.txt"><![CDATA[
                            +--------------+
                            | Multi-Domain |
                            | Controller   |
                            +---+------+---+
                                |      |
                   +------------+      |
                   |                   +-----------+
            +------V-----+                         |
            |            |                         |
            | TE Domain  |                  +------V-----+
            | Controller |                  |            |
            |      1     |                  | TE Domain  |
            +------+-----+                  | Controller |
                   |                        |      2     |
                   |                        +------+-----+
          .........V..........                     |
          :                  :                     |
         +-----+             :                     |
         |     |             :            .........V..........
         |  X  |             :            :                  :
         |     |          +-----+      +-----+                :
         +-----+          |     |      |     |               :
          :               |  C  |------|  E  |               :
      +-----+    +-----+ /|     |      |     |\ +-----+    +-----+
      |     |    |     |/ +-----+      +-----+ \|     |    |     |
      |  A  |----|  B  |     :            :     |  G  |----|  H  |
      |     |    |     |\    :            :    /|     |    |     |
      +-----+    +-----+ \+-----+      +-----+/ +-----+    +-----+
          :               |     |      |     |               :
          :               |  D  |------|  F  |               :
          :               |     |      |     |          +-----+
          :               +-----+      +-----+          |     |
          :                  :            :             |  Y  |
          :                  :            :             |     |
          :   TE domain 1    :            : TE domain 2 +-----+
          :..................:            :.................:
]]></artwork></figure>

<t>In order to set up an end-to-end multi-domain TE path (e.g., between
   nodes A and H), the Multi-Domain Controller needs to know the
   feasibility or the cost of the possible TE paths within the two TE
   domains, which depend on the current status of the physical resources
   within each TE domain. This is more challenging in case of optical
   networks because the optimal paths depend also on vendor-specific
   optical attributes (which may be different in the two domains if they
   are provided by different vendors).</t>

<t>In order to set up a multi-domain TE path (e.g., between nodes A and
   H), the Multi-Domain Controller can request the TE Domain Controllers
   to compute a set of intra-domain optimal paths and take decisions
   based on the information received. For example:</t>

<t><list style="symbols">
  <t>The Multi-Domain Controller asks TE Domain Controllers to provide
set of paths between A-C, A-D, E-H and F-H</t>
  <t>TE Domain Controllers return a set of feasible paths with the
associated costs: the path A-C is not part of this set (in optical
networks, it is typical to have some paths not being feasible due
to optical constraints that are known only by the Optical Domain
Controller)</t>
  <t>The Multi-Domain Controller will select the path A-D-F-H since it
is the only feasible multi-domain path and then request the TE
Domain Controllers to set up the A-D and F-H intra-domain paths</t>
  <t>If there are multiple feasible paths, the Multi-Domain Controller
can select the optimal path knowing the cost of the intra-domain
paths (provided by the TE domain controllers) and the cost of the
inter-domain links (known by the Multi-Domain Controller)  <vspace blankLines='1'/>
This approach may have some scalability issues when the number of TE
domains is quite big (e.g. 20).  <vspace blankLines='1'/>
In this case, it would be worthwhile using the abstract TE topology
information provided by the TE Domain Controllers to limit the number
of potential optimal end-to-end paths and then request path
computation from fewer TE Domain Controllers in order to decide what
the optimal path within this limited set is.  <vspace blankLines='1'/>
For more details, see <xref target="topo-pc-complement"/>.</t>
</list></t>

</section>
<section anchor="dci-uc"><name>Data Center Interconnections</name>

<t>In these use case, there is a TE domain which is used to provide
   connectivity between Data Centers which are connected with the TE
   domain using access links.</t>

<figure title="Data Center Interconnection use case" anchor="fig-dci-uc"><artwork type="ascii-art" name="dci-use-case.txt"><![CDATA[
                        +--------------+
                        | Cloud Network|
                        | Orchestrator |
                        +--------------+
                          |  |  |  |
            +-------------+  |  |  +------------------------+
            |                |  +------------------+        |
            |       +--------V---+                 |        |
            |       |            |                 |        |
            |       | TE Network |                 |        |
     +------V-----+ | Controller |          +------V-----+  |
     | DC         | +------------+          | DC         |  |
     | Controller |     |                   | Controller |  |
     +------------+     |   +-----+         +------------+  |
          |         ....V...|     |........         |       |
          |         :       |  P  |       :         |       |
     .....V.....    :      /+-----+\      :    .....V.....  |
     :         :  +-----+ /    |    \ +-----+  :         :  |
     :  DC1 || :  |     |/     |     \|     |  :  DC2 || :  |
     :    ||||----| PE1 |      |      | PE2 |----   |||| :  |
     : _|||||| :  |     |\     |     /|     |  : _|||||| :  |
     :         :  +-----+ \ +-----+ / +-----+  :         :  |
     :.........:    :      \|     |/      :    :.........:  |
                    :.......| PE3 |.......:                 |
                            |     |                         |
                            +-----+               +---------V--+
                          .....|.....             | DC         |
                          :         :             | Controller |
                          :  DC3 || :             +------------+
                          :    |||| :                  |
                          : _|||||| <------------------+
                          :         :
                          :.........:
]]></artwork></figure>

<t>In this use case, there is the need to transfer data from Data Center
   1 (DC1) to either DC2 or DC3 (e.g. workload migration).</t>

<t>The optimal decision depends both on the cost of the TE path (DC1-DC2
   or DC1-DC3) and of the Data Center resources within DC2 or DC3.</t>

<t>The Cloud Network Orchestrator needs to make a decision for optimal
   connection based on TE network constraints and Data Center resources.</t>

<t>It may not be able to make this decision because it has only an
   abstract view of the TE network (as in <xref target="poi-uc"/>).</t>

<t>The Cloud Network Orchestrator can request to the TE Network
   Controller to compute the cost of the possible TE paths (e.g., DC1-
   DC2 and DC1-DC3) and to the DC Controller to provide the information
   it needs about the required Data Center resources within DC2 and DC3
   and then it can take the decision about the optimal solution based on
   this information and its policy.</t>

</section>
<section anchor="brpc-uc"><name>Backward Recursive Path Computation scenario</name>

<t><xref target="RFC5441"/> has defined the Virtual Source Path Tree (VSPT) flag within the RP (Request Parameters) object in order to compute inter-domain paths following a
   "Backward Recursive Path Computation" (BRPC) method. The main
   principle is to forward the PCReq message up to the destination
   domain. Then, each PCE involved in the computation will compute its
   part of the path and send it back to the requester through PCE
   Response message. The resulting computation is spread from
   destination PCE to source PCE. Each PCE is in charge of merging the
   path it received with the one it calculated. At the end, the source
   PCE merges its local part of the path with the received one to
   achieve the end-to-end path.</t>

<t><xref target="fig-brpc-example"/> below show a typical BRPC scenario where 3 PCEs cooperate to
   compute inter-domain paths.</t>

<figure title="BRPC Scenario" anchor="fig-brpc-example"><artwork type="ascii-art" name="brpc-scenario.txt"><![CDATA[
                   +----------------+          +----------------+
                   |  Domain (B)    |          |  Domain (C)    |
                   |                |          |                |
                   |        /-------|---PCEP---|--------\       |
                   |       /        |          |         \      |
                   |   (PCE)        |          |   -    (PCE)   |
                   |    /           <---------->  |D|           |
                   |   /            |  Inter   |   -            |
                   +---|----^-------+  Domain  +----------------+
                       |    |          Link
                     PCEP   |
                       |    | Inter-domain Link
                       |    |
                   +---|----v-------+
                   |   |            |
                   |   | Domain (A) |
                   |   \            |
                   |  (PCE)    -    |
                   |          |S|   |
                   |           -    |
                   +----------------+
]]></artwork></figure>

<t>In this use case, a client can use the YANG data model defined in
   this document to request path computation from the PCE that controls
   the source of the tunnel. For example, a client can request to the
   PCE of domain A to compute a path from a source S, within domain A,
   to a destination D, within domain C. Then PCE of domain A will use
   PCEP protocol, as per <xref target="RFC5441"/>, to compute the path from S to D and
   in turn gives the final answer to the requester.</t>

</section>
<section anchor="hpce-uc"><name>Hierarchical PCE scenario</name>

<t><xref target="RFC6805"/> has defined an architecture and extensions to the PCE
   standard to compute inter-domain path following a hierarchical
   method. Two new roles have been defined: parent PCE and child PCE.
   The parent PCE is in charge to coordinate the end-to-end path
   computation. For that purpose it sends to each child PCE involved in
   the multi-domain path computation a PCE Request message to obtain the
   local part of the path. Once received all answer through PCE Response
   message, the parent PCE will merge the different local parts of the
   path to achieve the end-to-end path.</t>

<t><xref target="fig-hpce-example"/> below shows a typical hierarchical scenario where a parent
   PCE request end-to-end path to the different child PCE. Note that a
   PCE could take independently the role of child or parent PCE
   depending of which PCE will request the path.</t>

<figure title="Hierarchical domain topology from RFC6805" anchor="fig-hpce-example"><artwork type="ascii-art" name="hierarchical-domain-topology.txt"><![CDATA[
    -----------------------------------------------------------------
    |   Domain 5                                                      |
    |                              -----                              |
    |                             |PCE 5|                             |
    |                              -----                              |
    |                                                                 |
    |    ----------------     ----------------     ----------------   |
    |   | Domain 1       |   | Domain 2       |   | Domain 3       |  |
    |   |                |   |                |   |                |  |
    |   |        -----   |   |        -----   |   |        -----   |  |
    |   |       |PCE 1|  |   |       |PCE 2|  |   |       |PCE 3|  |  |
    |   |        -----   |   |        -----   |   |        -----   |  |
    |   |                |   |                |   |                |  |
    |   |            ----|   |----        ----|   |----            |  |
    |   |           |BN11+---+BN21|      |BN23+---+BN31|           |  |
    |   |   -        ----|   |----        ----|   |----        -   |  |
    |   |  |S|           |   |                |   |           |D|  |  |
    |   |   -        ----|   |----        ----|   |----        -   |  |
    |   |           |BN12+---+BN22|      |BN24+---+BN32|           |  |
    |   |            ----|   |----        ----|   |----            |  |
    |   |                |   |                |   |                |  |
    |   |         ----   |   |                |   |   ----         |  |
    |   |        |BN13|  |   |                |   |  |BN33|        |  |
    |    -----------+----     ----------------     ----+-----------   |
    |                \                                /               |
    |                 \       ----------------       /                |
    |                  \     |                |     /                 |
    |                   \    |----        ----|    /                  |
    |                    ----+BN41|      |BN42+----                   |
    |                        |----        ----|                       |
    |                        |                |                       |
    |                        |        -----   |                       |
    |                        |       |PCE 4|  |                       |
    |                        |        -----   |                       |
    |                        |                |                       |
    |                        | Domain 4       |                       |
    |                         ----------------                        |
    |                                                                 |
     -----------------------------------------------------------------
]]></artwork></figure>

<t>In this use case, a client can use the YANG data model defined in
   this document to request to the parent PCE a path from a source S to
   a destination D. The parent PCE will in turn contact the child PCEs
   through PCEP protocol to compute the end-to-end path and then return
   the computed path to the client, using the YANG data model defined in
   this document. For example the YANG data model can be used to request
   to PCE5 acting as parent PCE to compute a path from source S, within
   domain 1, to destination D, within domain 3. PCE5 will contact child
   PCEs of domain 1, 2 and 3 to obtain local part of the end-to-end path
   through the PCEP protocol. Once received the PCRep message, it
   merges the answers to compute the end-to-end path and send it back to
   the client.</t>

</section>
</section>
<section anchor="motivations"><name>Motivations</name>

<t>This section provides the motivation for the YANG data model defined
   in this document.</t>

<t><xref target="yang-motivation"/> describes the motivation for a YANG data model to request
   path computation.</t>

<t><xref target="topo-interaction"/> describes the motivation for a YANG data model which
   complements the TE topology YANG data model defined in <xref target="RFC8795"/>.</t>

<t><xref target="rpc-motivation"/> describes the motivation for a YANG RPC which complements
   the TE tunnel YANG data model defined in <xref target="I-D.ietf-teas-yang-te"/>.</t>

<section anchor="yang-motivation"><name>Motivation for a YANG Model</name>

<section anchor="benefits-of-common-data-models"><name>Benefits of common data models</name>

<t>The YANG data model for requesting path computation is closely
   aligned with the YANG data models that provide (abstract) TE topology
   information, i.e., <xref target="RFC8795"/> as well as that are used to configure
   and manage TE tunnels, i.e., <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>There are many benefits in aligning the data model used for path
   computation requests with the YANG data models used for TE topology
   information and for TE tunnels configuration and management:</t>

<t><list style="symbols">
  <t>There is no need for an error-prone mapping or correlation of
information.</t>
  <t>It is possible to use the same endpoint identifiers in path
computation requests and in the topology modeling.</t>
  <t>The attributes used for path computation constraints are the same
as those used when setting up a TE tunnel.</t>
</list></t>

</section>
<section anchor="benefits-of-a-single-interface"><name>Benefits of a single interface</name>

<t>The system integration effort is typically lower if a single,
   consistent interface is used by controllers, i.e., one data modeling
   language (i.e., YANG) and a common protocol (e.g., NETCONF or
   RESTCONF).</t>

<t>Practical benefits of using a single, consistent interface include:</t>

<t><list style="numbers">
  <t>Simple authentication and authorization: The interface between
different components has to be secured. If different protocols
have different security mechanisms, ensuring a common access
control model may result in overhead. For instance, there may be a
need to deal with different security mechanisms, e.g., different
credentials or keys. This can result in increased integration
effort.</t>
  <t>Consistency: Keeping data consistent over multiple different
interfaces or protocols is not trivial. For instance, the sequence
of actions can matter in certain use cases, or transaction
semantics could be desired. While ensuring consistency within one
protocol can already be challenging, it is typically cumbersome to
achieve that across different protocols.</t>
  <t>Testing: System integration requires comprehensive testing,
including corner cases. The more different technologies are
involved, the more difficult it is to run comprehensive test cases
and ensure proper integration.</t>
  <t>Middle-box friendliness: Provider and consumer of path computation
requests may be located in different networks, and middle-boxes
such as firewalls, NATs, or load balancers may be deployed. In
such environments it is simpler to deploy a single protocol. Also,
it may be easier to debug connectivity problems.</t>
  <t>Tooling reuse: Implementers may want to implement path computation
requests with tools and libraries that already exist in
controllers and/or orchestrators, e.g., leveraging the rapidly
growing eco-system for YANG tooling.</t>
</list></t>

</section>
<section anchor="extensibility"><name>Extensibility</name>

<t>Path computation is only a subset of the typical functionality of a
   controller. In many use cases, issuing path computation requests
   comes along with the need to access other functionality on the same
   system. In addition to obtaining TE topology, for instance also
   configuration of services (set-up/modification/deletion) may be
   required, as well as:</t>

<t><list style="numbers">
  <t>Receiving notifications for topology changes as well as
integration with fault management</t>
  <t>Performance management such as retrieving monitoring and telemetry
data</t>
  <t>Service assurance, e.g., by triggering OAM functionality</t>
  <t>Other fulfilment and provisioning actions beyond tunnels and
services, such as changing QoS configurations  <vspace blankLines='1'/>
YANG is a very extensible and flexible data modeling language that
can be used for all these use cases.</t>
</list></t>

</section>
</section>
<section anchor="topo-interaction"><name>Interactions with TE topology</name>

<t>The use cases described in <xref target="use-cases"/> have been described assuming
   that the topology view exported by each underlying controller to its
   client is aggregated using the "virtual node model", defined in
   <xref target="RFC7926"/>.</t>

<t>TE topology information, e.g., as provided by <xref target="RFC8795"/>, could in
   theory be used by an underlying controller to provide TE information
   to its client thus allowing a PCE available within its client to
   perform multi-domain path computation on its own, without requesting
   path computations to the underlying controllers.</t>

<t>In case the client does not implement a PCE function, as discussed in
   <xref target="intro"/>, it could not perform path computation based on TE topology
   information and would instead need to request path computation from
   the underlying controllers to get the information it needs to find
   the optimal end-to-end path.</t>

<t>In case the client implements a PCE function, as discussed in 
   <xref target="intro"/>, the TE topology information needs to be complete and accurate,
   which would bring to scalability issues.</t>

<t>Using TE topology to provide a "virtual link model" aggregation, as
   described in <xref target="RFC7926"/>, may be insufficient, unless the aggregation
   provides complete and accurate information, which would still cause
   scalability issues, as described in <xref target="topo-aggregation"/> below.</t>

<t>Using TE topology abstraction, as described in <xref target="RFC7926"/>, may lead to
   compute an unfeasible path, as described in <xref target="RFC7926"/> in 
   <xref target="topo-abstraction"/> below.</t>

<t>Therefore when computing an optimal multi-domain path, there is a
   scalability trade-off between providing complete and accurate TE
   information and the number of path computation requests to the
   underlying controllers.</t>

<t>The TE topology information used, in a complimentary way, to reduce
   the number for path computation requests to the underlying
   controllers, are described in <xref target="topo-pc-complement"/> below.</t>

<section anchor="topo-aggregation"><name>TE topology aggregation</name>

<t>Using the TE topology model, as defined in <xref target="RFC8795"/>, the underlying
   controller can export the whole TE domain as a single TE node with a
   "detailed connectivity matrix" (which provides specific TE
   attributes, such as delay, Shared Risk Link Groups (SRLGs) and other
   TE metrics, between each ingress and egress links).</t>

<t>The information provided by the "detailed connectivity matrix" would
   be equivalent to the information that should be provided by "virtual
   link model" as defined in <xref target="RFC7926"/>.</t>

<t>For example, in the Packet/Optical Integration use case, described in
   <xref target="poi-uc"/>, the Optical Domain Controller can make the information
   shown in <xref target="fig-poi-example"/> available to the Packet/Optical Coordinator as part
   of the TE topology information and the Packet/Optical Coordinator
   could use this information to calculate on its own the optimal path
   between R1 and R2, without requesting any additional information to
   the Optical Domain Controller.</t>

<t>However, when designing the amount of information to provide within
   the "detailed connectivity matrix", there is a tradeoff to be
   considered between accuracy (i.e., providing "all" the information
   that might be needed by the PCE available within the client) and
   scalability.</t>

<t><xref target="poi-multi-path"/> below shows another example, similar to <xref target="fig-poi-example"/>, where
   there are two possible Optical paths between VP1 and VP4 with
   different properties (e.g., available bandwidth and cost).</t>

<figure title="Packet/Optical Integration path computation Example with multiple choices" anchor="poi-multi-path"><artwork type="ascii-art" name="poi-example-multiple.txt"><![CDATA[
                    ............................
                    :  /--------------------\  :
                    : /       cost=65        \ :
                    :/    available-bw=10G    \:
                    O VP1                  VP4 O
           cost=10 /:\                        /:\ cost=10
                  / : \----------------------/ : \
          +----+ /  :         cost=50          :  \ +----+
          |    |/   :     available-bw=2G      :   \|    |
          | R1 |    :                          :    | R2 |
          |    |\   :                          :   /|    |
          +----+ \  :  /--------------------\  :  / +----+
                  \ : /       cost=55        \ : /
            cost=5 \:/    available-bw=3G     \:/ cost=5
                    O VP2                  VP5 O
                    :                          :
                    :..........................:
]]></artwork></figure>

<t>If the information in the "detailed connectivity matrix" is not
   complete/accurate, we can have the following drawbacks:</t>

<t><list style="symbols">
  <t>If only the VP1-VP4 path with available bandwidth of 2 Gb/s and
cost 50 is reported, the client's PCE will fail to compute a 5
Gb/s path between routers R1 and R2, although this would be
feasible;</t>
  <t>If only the VP1-VP4 path with available bandwidth of 10 Gb/s and
cost 65 is reported, the client's PCE will compute, as optimal,
the 1 Gb/s path between R1 and R2 going through the VP2-VP5 path
within the optical domain while the optimal path would actually be
the one going thought the VP1-VP4 sub-path (with cost 50) within
the optical domain.  <vspace blankLines='1'/>
Reporting all the information, as in <xref target="poi-multi-path"/>, using the "detailed
 connectivity matrix", is quite challenging from a scalability
 perspective. The amount of this information is not just based on
 number of end points (which would scale as N-square), but also on
 many other parameters, including client rate, user
 constraints/policies for the service, e.g. max latency &lt; N ms, max
 cost, etc., exclusion policies to route around busy links, min
 Optical Signal to Noise Ratio (OSNR) margin, max pre-Forward Error
 Correction (FEC) Bit Error Rate (BER) etc. All these constraints
 could be different based on connectivity requirements.  <vspace blankLines='1'/>
It is also worth noting that the "connectivity matrix" has been
 originally defined in Wavelength Switched Optical Networks (WSON),
 <xref target="RFC7446"/>, to report the connectivity constrains of a physical node
 within the Wavelength Division Multiplexing (WDM) network: the
 information it contains is pretty "static" and therefore, once taken
 and stored in the TE data base, it can be always being considered
 valid and up-to-date in path computation request.  <vspace blankLines='1'/>
The "connectivity matrix" is sometimes confused with "optical reach
 table" that contain multiple (e.g. k-shortest) regen-free reachable
 paths for every A-Z node combination in the network. Optical reach
 tables can be calculated offline, utilizing vendor optical design and
 planning tools, and periodically uploaded to the Controller: these
 optical path reach tables are fairly static. However, to get the
 connectivity matrix, between any two sites, either a regen free path
 can be used, if one is available, or multiple regen free paths are
 concatenated to get from the source to the destination, which can be
 a very large combination. Additionally, when the optical path within
 optical domain needs to be computed, it can result in different paths
 based on input objective, constraints, and network conditions. In
 summary, even though "optical reach table" is fairly static, which
 regen free paths to build the connectivity matrix between any source
 and destination is very dynamic, and is done using very sophisticated
 routing algorithms.  <vspace blankLines='1'/>
Using the "basic connectivity matrix" with an abstract node to
 abstract the information regarding the connectivity constraints of an
 Optical domain, would make this information more "dynamic" since the
 connectivity constraints of an optical domain can change over time
 because some optical paths that are feasible at a given time may
 become unfeasible at a later time when e.g., another optical path is
 established.  <vspace blankLines='1'/>
The information in the "detailed connectivity matrix" is even more
 dynamic since the establishment of another optical path may change
 some of the parameters (e.g., delay or available bandwidth) in the
 "detailed connectivity matrix" while not changing the feasibility of
 the path.  <vspace blankLines='1'/>
There is therefore the need to keep the information in the "detailed
 connectivity matrix" updated which means that there another tradeoff
 between the accuracy (i.e., providing "all" the information that
 might be needed by the client's PCE) and having up-to-date
 information. The more the information is provided and the longer it
 takes to keep it up-to-date which increases the likelihood that the
 client's PCE computes paths using not updated information.  <vspace blankLines='1'/>
It seems therefore quite challenging to have a "detailed connectivity
 matrix" that provides accurate, scalable and updated information to
 allow the client's PCE to take optimal decisions by its own.  <vspace blankLines='1'/>
Considering the example in <xref target="poi-multi-path"/> with the approach defined in this
 document, the client, when it needs to set up an end-to-end path, it
 can request the Optical Domain Controller to compute a set of optimal
 paths (e.g., for VP1-VP4 and VP2-VP5) and take decisions based on the
 information received:</t>
  <t>When setting up a 5 Gb/s path between routers R1 and R2, the
Optical Domain Controller may report only the VP1-VP4 path as the
only feasible path: the Packet/Optical Coordinator can
successfully set up the end-to-end path passing though this
optical path;</t>
  <t>When setting up a 1 Gb/s path between routers R1 and R2, the
Optical Domain Controller (knowing that the path requires only 1
Gb/s) can report both the VP1-VP4 path, with cost 50, and the VP2-
VP5 path, with cost 65. The Packet/Optical Coordinator can then
compute the optimal path which is passing thought the VP1-VP4 sub-
path (with cost 50) within the optical domain.</t>
</list></t>

</section>
<section anchor="topo-abstraction"><name>TE topology abstraction</name>

<t>Using the TE topology model, as defined in <xref target="RFC8795"/>, the underlying
   controller can export to its client an abstract TE topology, composed
   by a set of TE nodes and TE links, representing the abstract view of
   the topology under its control.</t>

<t>For example, in the multi-domain TE network use case, described in
   <xref target="md-uc"/>, the TE Domain Controller 1 can export a TE topology
   encompassing the TE nodes A, B, C and D and the TE links
   interconnecting them. In a similar way, the TE Domain Controller 2
   can export a TE topology encompassing the TE nodes E, F, G and H and
   the TE links interconnecting them.</t>

<t>In this example, for simplicity reasons, each abstract TE node maps
   with each physical node, but this is not necessary.</t>

<t>In order to set up a multi-domain TE path (e.g., between nodes A and
   H), the Multi-Domain Controller can compute by its own an optimal
   end-to-end path based on the abstract TE topology information
   provided by the domain controllers. For example:</t>

<t><list style="symbols">
  <t>Multi-Domain Controller can compute, based on its own TED data,
the optimal multi-domain path being A-B-C-E-G-H, and then request
the TE Domain Controllers to set up the A-B-C and E-G-H intra-
domain paths</t>
  <t>But, during path set-up, the TE Domain Controller may find out
that A-B-C intra-domain path is not feasible (as discussed in
<xref target="md-uc"/>, in optical networks it is typical to have some paths
not being feasible due to optical constraints that are known only
by the Optical Domain Controller), while only the path A-B-D is
feasible</t>
  <t>So what the Multi-Domain Controller has computed is not good and
it needs to re-start the path computation from scratch  <vspace blankLines='1'/>
As discussed in <xref target="topo-aggregation"/>, providing more extensive abstract
information from the TE Domain Controllers to the Multi-Domain
Controller may lead to scalability problems.  <vspace blankLines='1'/>
In a sense this is similar to the problem of routing and wavelength
assignment within an optical domain. It is possible to do first
routing (step 1) and then wavelength assignment (step 2), but the
chances of ending up with a good path is low. Alternatively, it is
possible to do combined routing and wavelength assignment, which is
known to be a more optimal and effective way for optical path set-up.
Similarly, it is possible to first compute an abstract end-to-end
path within the Multi-Domain Controller (step 1) and then compute an
intra-domain path within each optical domain (step 2), but there are
more chances not to find a path or to get a suboptimal path than by
performing multiple per-domain path computations and then stitching
them together.</t>
</list></t>

</section>
<section anchor="topo-pc-complement"><name>Complementary use of the TE topology</name>

<t>As discussed in <xref target="md-uc"/>, there are some scalability issues with
   path computation requests in a multi-domain TE network with many TE
   domains, in terms of the number of requests to send to the TE Domain
   Controllers. It would therefore be worthwhile using the abstract TE
   topology information provided by the TE Domain Controllers to limit
   the number of requests.</t>

<t>An example can be described considering the multi-domain abstract TE
   topology shown in <xref target="fig-topo-many-domains"/>. In this example, an end-to-end TE path
   between domains A and F needs to be set up. The transit TE domain
   should be selected between domains B, C, D and E.</t>

<figure title="Multi-domain with many domains (Topology information)" anchor="fig-topo-many-domains"><artwork type="ascii-art" name="many-domains-topology.txt"><![CDATA[
                          .........B.........
                          : _ _ _ _ _ _ _ _ :
                          :/               \:
                      +---O  NOT FEASIBLE   O---+
                cost=5|   :                 :   |
    ......A......     |   :.................:   |     ......F......
    :           :     |                         |     :           :
    :           O-----+   .........C.........   +-----O           :
    :           :         : /-------------\ :         :           :
    :           :         :/               \:         :           :
    :  cost<=20 O---------O   cost <= 30    O---------O cost<=20  :
    :          /: cost=5  :                 : cost=5  :\          :
    :  /------/ :         :.................:         : \------\  :
    : /         :                                     :         \ :
    :/ cost<=25 :         .........D.........         : cost<=25 \:
    O-----------O-------+ : /-------------\ : +-------O-----------O
    :\          : cost=5| :/               \: |cost=5 :          /:
    : \         :       +-O   cost <= 30    O-+       :         / :
    :  \------\ :         :                 :         : /------/  :
    : cost>=30 \:         :.................:         :/ cost>=30 :
    :           O-----+                         +-----O           :
    :...........:     |   .........E.........   |     :...........:
                      |   : /-------------\ :   |
                cost=5|   :/               \:   |cost=5
                      +---O   cost >= 30    O---+
                          :                 :
                          :.................:
]]></artwork></figure>

<t>The actual cost of each intra-domain path is not known a priori from
   the abstract topology information. The Multi-Domain Controller only
   knows, from the TE topology provided by the underlying domain
   controllers, the feasibility of some intra-domain paths and some
   upper-bound and/or lower-bound cost information. With this
   information, together with the cost of inter-domain links, the Multi-
   Domain Controller can understand by its own that:</t>

<t><list style="symbols">
  <t>Domain B cannot be selected as the path connecting domains A and F
is not feasible;</t>
  <t>Domain E cannot be selected as a transit domain since it is known
from the abstract topology information provided by domain
controllers that the cost of the multi-domain path A-E-F (which is
100, in the best case) will be always be higher than the cost of
the multi-domain paths A-D-F (which is 90, in the worst case) and
A-C-F (which is 80, in the worst case).  <vspace blankLines='1'/>
Therefore, the Multi-Domain Controller can understand by its own that
 the optimal multi-domain path could be either A-D-F or A-C-F but it
 cannot know which one of the two possible option actually provides
 the optimal end-to-end path.  <vspace blankLines='1'/>
The Multi-Domain Controller can therefore request path computation
 only to the TE Domain Controllers A, D, C and F (and not to all the
 possible TE Domain Controllers).</t>
</list></t>

<figure title="Multi-domain with many domains (Path Computation information)" anchor="fig-pc-many-domains"><artwork type="ascii-art" name="many-domain-path-computation.txt"><![CDATA[
                          .........B.........
                          :                 :
                      +---O                 O---+
    ......A......     |   :.................:   |     ......F......
    :           :     |                         |     :           :
    :           O-----+   .........C.........   +-----O           :
    :           :         : /-------------\ :         :           :
    :           :         :/               \:         :           :
    :  cost=15  O---------O    cost = 25    O---------O  cost=10  :
    :          /: cost=5  :                 : cost=5  :\          :
    :  /------/ :         :.................:         : \------\  :
    : /         :                                     :         \ :
    :/ cost=10  :         .........D.........         : cost=15  \:
    O-----------O-------+ : /-------------\ : +-------O-----------O
    :           : cost=5| :/               \: |cost=5 :           :
    :           :       +-O    cost = 15    O-+       :           :
    :           :         :                 :         :           :
    :           :         :.................:         :           :
    :           O-----+                         +-----O           :
    :...........:     |   .........E.........   |     :...........:
                      |   :                 :   |
                      +---O                 O---+
                          :.................:
]]></artwork></figure>

<t>Based on these requests, the Multi-Domain Controller can know the
   actual cost of each intra-domain paths which belongs to potential
   optimal end-to-end paths, as shown in <xref target="fig-pc-many-domains"/>, and then compute the
   optimal end-to-end path (e.g., A-D-F, having total cost of 50,
   instead of A-C-F having a total cost of 70).</t>

</section>
</section>
<section anchor="rpc-motivation"><name>Path Computation RPC</name>

<t>The TE tunnel YANG data model, defined in <xref target="I-D.ietf-teas-yang-te"/>, can support
   the need to request path computation, as described in section 5.1.2
   of <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>This solution is stateful since the state of each created "compute-
   only" TE tunnel path needs to be maintained, in the YANG datastores
   (at least in the running datastore and operational datastore), and
   updated, when underlying network conditions change.</t>

<t>The RPC mechanism allows requesting path computation using a simple
   atomic operation, without creating any state in the YANG datastores,
   and it is the natural option/choice, especially with stateless PCE.</t>

<t>It is very useful to provide both the options of using an RPC as well
   as of setting up TE tunnel paths in "compute-only" mode. It is
   suggested to use the RPC as much as possible and to rely on
   "compute-only" TE tunnel paths, when really needed.</t>

<t>Using the RPC solution would imply that the underlying controller
   (e.g., a PNC) computes a path twice during the process to set up an
   LSP: at time T1, when its client (e.g., an MDSC) sends a path
   computation RPC request to it, and later, at time T2, when the same
   client (MDSC) creates a TE tunnel requesting the set-up of the LSP.
   The underlying assumption is that, if network conditions have not
   changed, the same path that has been computed at time T1 is also
   computed at time T2 by the underlying controller (e.g. PNC) and
   therefore the path that is set up at time T2 is exactly the same path
   that has been computed at time T1.</t>

<t>However, since the operation is stateless, there is no guarantee that
   the returned path would still be available when path set-up is
   requested: this does not cause major issues when the time between
   path computation and path set-up is short (especially if compared
   with the time that would be needed to update the information of a
   very detailed connectivity matrix).</t>

<t>In most of the cases, there is even no need to guarantee that the
   path that has been set up is the exactly same as the path that has
   been returned by path computation, especially if it has the same or
   even better metrics. Depending on the abstraction level applied by
   the server, the client may also not know the actual computed path.</t>

<t>The most important requirement is that the required global objectives
   (e.g., multi-domain path metrics and constraints) are met. For this
   reason a path verification phase is always necessary to verify that
   the actual path that has been set up meets the global objectives (for
   example in a multi-domain network, the resulting end-to-end path
   meets the required end-to-end metrics and constraints).</t>

<t>In most of the cases, even if the path being set up is not exactly
   the same as the path returned by path computation, its metrics and
   constraints are "good enough" and the path verification passes
   successfully. In the few corner cases where the path verification
   fails, it is possible repeat the whole process (path computation,
   path set-up and path verification).</t>

<t>In case it is required to set up at T2 exactly the same path computed
   at T1, the RPC solution should not be used and, instead, a "compute-
   only" TE tunnel path should be set up, allowing also notifications in
   case the computed path has been changed.</t>

<t>In this case, at time T1, the client (MDSC) creates a TE tunnel in a
   compute-only mode in the running datastore and later, at time T2,
   changes the configuration of that TE tunnel (not to be any more in a
   compute-only mode) to trigger the set-up of the LSP over the path
   which have been computed at time T1 and reported in the operational
   datastore.</t>

<t>It is worth noting that also using the "compute-only" TE tunnel path,
   although increasing the likelihood that the computed path is
   available at path set-up, does not guarantee that because
   notifications may not be reliable or delivered on time. Path
   verification is needed also in this case.</t>

<t>The solution based on "compute-only" TE tunnel path has also the
   following drawbacks:</t>

<t><list style="symbols">
  <t>Several messages required for any path computation</t>
  <t>Requires persistent storage in the underlying controller</t>
  <t>Need for garbage collection for stranded paths</t>
  <t>Process burden to detect changes on the computed paths in order to
provide notifications update</t>
</list></t>

<section anchor="temp-state"><name>Temporary reporting of the computed path state</name>

<t>This section describes an optional extension to the stateless
   behavior of the path computation RPC, where the underlying
   controller, after having received a path computation RPC request,
   maintains some "transient state" associated with the computed path,
   allowing the client to request the set-up of exactly that path, if
   still available.</t>

<t>This is similar to the "compute-only" TE tunnel path solution but, to
   avoid the drawbacks of the stateful approach, is leveraging the path
   computation RPC and the separation between configuration and
   operational datastore, as defined in the NMDA architecture <xref target="RFC8342"/>.</t>

<t>The underlying controller, after having computed a path, as requested
   by a path computation RPC, also creates a TE tunnel instance within
   the operational datastore, to store that computed path. This would be
   similar to a "compute-only" TE tunnel path, with the only difference
   that there is no associated TE tunnel instance within the running
   datastore.</t>

<t>Since the underlying controller stores in the operational datastore
   the computed path based on an abstract topology it exposes, it also
   remembers, internally, which is the actual native path (physical
   path), within its native topology (physical topology), associated
   with that compute-only TE tunnel instance.</t>

<t>Afterwards, the client (e.g., MDSC) can request the set-up of that
   specific path by creating a TE tunnel instance (not in compute-only
   mode) in the running datastore using the same tunnel-name of
   the existing TE tunnel in the operational datastore: this will
   trigger the underlying controller to set up that path, if still
   available.</t>

<t>There are still cases where the path being set up is not exactly the
   same as the path that has been computed:</t>

<t><list style="symbols">
  <t>When the tunnel is configured with path constraints which are not
compatible with the computed path;</t>
  <t>When the tunnel set-up is requested after the resources of the
computed path are no longer available;</t>
  <t>When the tunnel set-up is requested after the computed path is no
longer known (e.g. due to a server reboot) by the underlying
controller.  <vspace blankLines='1'/>
In all these cases, the underlying controller should compute and set
 up a new path.  <vspace blankLines='1'/>
Therefore the "path verification" phase, as described in <xref target="rpc-motivation"/>
 above, is always needed to check that the path that has been set up
 is still "good enough".  <vspace blankLines='1'/>
Since this new approach is not completely stateless, garbage
 collection is implemented using a timeout that, when it expires,
 triggers the removal of the computed path from the operational
 datastore. This operation is fully controlled by the underlying
 controller without the need for any action to be taken by the client
 that is not able to act on the operational datastore. The default
 value of this timeout is 10 minutes but a different value may be
 configured by the client.  <vspace blankLines='1'/>
In addition, it is possible for the client to tag each path
 computation request with a transaction-id allowing for a faster
 removal of all the paths associated with a transaction-id, without
 waiting for their timers to expire.  <vspace blankLines='1'/>
The underlying controller can remove from the operational datastore
 all the paths computed with a given transaction-id which have not
 been set up either when it receives a Path Delete RPC request for
 that transaction-id or, automatically, right after the set-up up of a
 path that has been previously computed with that transaction-id.  <vspace blankLines='1'/>
This possibility is useful when multiple paths are computed but, at
 most, only one is set up (e.g., in multi-domain path computation
 scenario scenarios). After the selected path has been set up (e.g, in
 one domain during multi-domain path set-up), all the other
 alternative computed paths can be automatically deleted by the
 underlying controller (since no longer needed). The client can also
 request, using the Path Delete RPC request, the underlying controller
 to remove all the computed paths, if none of them is going to be set
 up (e.g., in a transit domain not being selected by multi-domain path
 computation and so not being automatically deleted).  <vspace blankLines='1'/>
This approach is complimentary and not alternative to the timer which
 is always needed to avoid stranded computed paths being stored in the
 operational datastore when no path is set up and no explicit Path
 Delete RPC request is received.</t>
</list></t>

</section>
</section>
</section>
<section anchor="path-computation-and-optimization-for-multiple-paths"><name>Path computation and optimization for multiple paths</name>

<t>There are use cases, where it is advantageous to request path
   computation for a set of paths, through a network or through a
   network domain, using a single request <xref target="RFC5440"/>.</t>

<t>In this case, sending a single request for multiple path
   computations, instead of sending multiple requests for each path
   computation, would reduce the protocol overhead and it would consume
   less resources (e.g., threads in the client and server).</t>

<t>In the context of a typical multi-domain TE network, there could
   multiple choices for the ingress/egress points of a domain and the
   Multi-Domain Controller needs to request path computation between all
   the ingress/egress pairs to select the best pair. For example, in the
   example of <xref target="md-uc"/>, the Multi-Domain Controller needs to request
   the TE Network Controller 1 to compute the A-C and the A-D paths and
   to the TE Network Controller 2 to compute the E-H and the F-H paths.</t>

<t>It is also possible that the Multi-Domain Controller receives a
   request to set up a group of multiple end to end connections. The
   Multi-Domain Controller needs to request each TE domain Controller to
   compute multiple paths, one (or more) for each end to end connection.</t>

<t>There are also scenarios where it can be needed to request path
   computation for a set of paths in a synchronized fashion.</t>

<t>One example could be computing multiple diverse paths. Computing a
   set of diverse paths in an unsynchronized fashion, leads to the
   possibility of not being able to satisfy the diversity requirement.
   In this case, it is preferable to compute a sub-optimal primary path
   for which a diversely routed secondary path exists.</t>

<t>There are also scenarios where it is needed to request optimizing a
   set of paths using objective functions that apply to the whole set of
   paths, see <xref target="RFC5541"/>, e.g. to minimize the sum of the costs of all
   the computed paths in the set.</t>

</section>
<section anchor="yang-data-model-for-requesting-path-computation"><name>YANG data model for requesting Path Computation</name>

<t>This document define a YANG RPC to request path computation as an
   "augmentation" of tunnel-rpc, defined in <xref target="I-D.ietf-teas-yang-te"/>. This model
   provides the RPC input attributes that are needed to request path
   computation and the RPC output attributes that are needed to report
   the computed paths.</t>

<figure><artwork type="ascii-art" name="overview.txt"><![CDATA[
  augment /te:tunnels-path-compute/te:input/te:path-compute-info:
    +-- path-request* [request-id]
    |  ...

  augment /te:tunnels-path-compute/te:output/te:path-compute-result:
    +--ro response* [response-id]
       +--ro response-id                         uint32
       +--ro computed-paths-properties
       |  +--ro computed-path-properties* [k-index]
       |     ...
]]></artwork></figure>

<t>This model extensively re-uses the grouping defined in <xref target="I-D.ietf-teas-yang-te"/>
   and <xref target="I-D.ietf-teas-rfc8776-update"/> to ensure maximal syntax and semantics commonality.</t>

<t>This YANG data model allows one RPC to include multiple path
   requests, each path request being identified by a request-id.
   Therefore, one RPC can return multiple responses, one for each path
   request, being identified by a response-id equal to the corresponding
   request-id. Each response reports one or more computed paths, as
   requested by the k-requested-paths attribute. By default, each
   response reports one computed path.</t>

<section anchor="synchronization-of-multiple-path-computation-requests"><name>Synchronization of multiple path computation requests</name>

<t>The YANG data model permits the synchronization of a set of multiple
   path requests (identified by specific request-id) all related to a
   "svec" container emulating the syntax of the Synchronization VECtor
   (SVEC) PCEP object, defined in <xref target="RFC5440"/>.</t>

<figure><artwork type="ascii-art" name="synchronization.txt"><![CDATA[
    +-- synchronization* []
       +-- svec
       |  +-- relaxable?      boolean
       |  +-- disjointness?   te-path-disjointness
       |  +-- request-id*     uint32
       +-- svec-constraints
       |  +-- path-metric-bound* [metric-type]
       |     +-- metric-type    identityref
       |     +-- upper-bound?   uint64
       +-- path-srlgs-lists
       |  +-- path-srlgs-list* [usage]
       |     +-- usage     identityref
       |     +-- values*   srlg
       +-- path-srlgs-names
       |  +-- path-srlgs-name* [usage]
       |     +-- usage    identityref
       |     +-- names*   string
       +-- exclude-objects
       |  +-- excludes* []
       |     +-- (type)?
       |        +--:(numbered-node-hop)
       |        |  +-- numbered-node-hop
       |        |     +-- node-id     te-node-id
       |        |     +-- hop-type?   te-hop-type
       |        +--:(numbered-link-hop)
       |        |  +-- numbered-link-hop
       |        |     +-- link-tp-id    te-tp-id
       |        |     +-- hop-type?     te-hop-type
       |        |     +-- direction?    te-link-direction
       |        +--:(unnumbered-link-hop)
       |        |  +-- unnumbered-link-hop
       |        |     +-- link-tp-id    te-tp-id
       |        |     +-- node-id       te-node-id
       |        |     +-- hop-type?     te-hop-type
       |        |     +-- direction?    te-link-direction
       |        +--:(as-number)
       |        |  +-- as-number-hop
       |        |     +-- as-number    inet:as-number
       |        |     +-- hop-type?    te-hop-type
       |        +--:(label)
       |           +-- label-hop
       |              +-- te-label
       |                 ...
       +-- optimizations
          +-- (algorithm)?
             +--:(metric) {te-types:path-optimization-metric}?
             |  +-- optimization-metric* [metric-type]
             |     +-- metric-type    identityref
             |     +-- weight?        uint8
             +--:(objective-function)
                      {te-types:path-optimization-objective-function}?
                +-- objective-function
                   +-- objective-function-type?   identityref
]]></artwork></figure>

<t>The model, in addition to the metric types, defined in <xref target="I-D.ietf-teas-rfc8776-update"/>,
   which can be applied to each individual path request, supports also
   additional metric types, which apply to a set of synchronized
   requests, as referenced in <xref target="RFC5541"/>. These additional metric types
   are defined by the following YANG identities:</t>

<t><list style="symbols">
  <t>svec-metric-type: base YANG identity from which cumulative metric
types identities are derived.</t>
  <t>svec-metric-cumul-te: cumulative TE cost metric type, as defined
in <xref target="RFC5541"/>.</t>
  <t>svec-metric-cumul-igp: cumulative IGP cost metric type, as defined
in <xref target="RFC5541"/>.</t>
  <t>svec-metric-cumul-hop: cumulative Hop metric type, representing
the cumulative version of the Hop metric type defined in
<xref target="I-D.ietf-teas-rfc8776-update"/>.</t>
  <t>svec-metric-aggregate-bandwidth-consumption: aggregate bandwidth
consumption metric type, as defined in <xref target="RFC5541"/>.</t>
  <t>svec-metric-load-of-the-most-loaded-link: load of the most loaded
link metric type, as defined in <xref target="RFC5541"/>.</t>
</list></t>

</section>
<section anchor="returned-metric-values"><name>Returned metric values</name>

<t>This YANG data model provides a way to return the values of the
   metrics computed by the path computation in the output of RPC,
   together with other important information (e.g. SRLG, affinities,
   explicit route), emulating the syntax of the "C" flag of the "METRIC"
   PCEP object <xref target="RFC5440"/>:</t>

<figure><artwork type="ascii-art" name="returned-metrics.txt"><![CDATA[
       |     +--ro path-properties
       |        +--ro path-metric* [metric-type]
       |        |  +--ro metric-type           identityref
       |        |  +--ro accumulative-value?   uint64
       |        +--ro path-affinities-values
       |        |  +--ro path-affinities-value* [usage]
       |        |     +--ro usage    identityref
       |        |     +--ro value?   admin-groups
       |        +--ro path-affinity-names
       |        |  +--ro path-affinity-name* [usage]
       |        |     +--ro usage            identityref
       |        |     +--ro affinity-name* [name]
       |        |        +--ro name    string
       |        +--ro path-srlgs-lists
       |        |  +--ro path-srlgs-list* [usage]
       |        |     +--ro usage     identityref
       |        |     +--ro values*   srlg
       |        +--ro path-srlgs-names
       |        |  +--ro path-srlgs-name* [usage]
       |        |     +--ro usage    identityref
       |        |     +--ro names*   string
       |        +--ro path-route-objects
       |        |  ...
       |        +--ro te-bandwidth
       |        |  ...
       |        +--ro disjointness-type?
       |                te-types:te-path-disjointness
]]></artwork></figure>

<t>It also allows the client to request which information (metrics, SRLG
   and/or affinities) should be returned:</t>

<figure><artwork type="ascii-art" name="requested-metrics.txt"><![CDATA[
    |  +-- request-id                            uint32
    |  ...
    |  +-- requested-metrics* [metric-type]
    |  |  +-- metric-type    identityref
    |  +-- return-srlgs?                         boolean
    |  +-- return-affinities?                    boolean
    |  ...
]]></artwork></figure>

<t>This feature is essential for path computation in a multi-domain TE
   network as described in <xref target="md-uc"/>. In this case, the metrics
   returned by a path computation requested to a given underlying
   controller must be used by the client to compute the best end-to-end
   path. If they are missing, the client cannot compare different paths
   calculated by the underlying controllers and choose the best one for
   the optimal end-to-end (e2e) path.</t>

</section>
<section anchor="multiple-paths-requests-for-the-same-te-tunnel"><name>Multiple Paths Requests for the same TE tunnel</name>

<t>The YANG data model allows including multiple requests for different
   paths intended to be used within the same tunnel or within different
   tunnels.</t>

<t>When multiple requested paths are intended to be used within the same
   tunnel (e.g., requesting path computation for the primary and
   secondary paths of a protected tunnel), the set of attributes that
   are intended to be configured on per-tunnel basis rather than on per-
   path basis are common to all these path requests. These attributes
   includes both attributes which can be configured only a per-tunnel
   basis (e.g., tunnel-name, source/destination TTP, encoding and
   switching-type) as well attributes which can be configured both on a
   per-tunnel and on a per-path basis (e.g., the te-bandwidth or the
   associations).</t>

<t>Therefore, a tunnel-attributes list is defined, within the path
   computation request RPC:</t>

<figure><artwork type="ascii-art" name="tunnel-attributes-list.txt"><![CDATA[
    +-- tunnel-attributes* [tunnel-name]
    |  +-- tunnel-name               string
    |  +-- encoding?                 identityref
    |  +-- switching-type?           identityref
    |  +-- source?                   te-types:te-node-id
    |  +-- destination?              te-types:te-node-id
    |  +-- src-tunnel-tp-id?         binary
    |  +-- dst-tunnel-tp-id?         binary
    |  +-- bidirectional?            boolean
    |  +-- association-objects
    |  |  ...
    |  +-- protection-type?          identityref
    |  +-- restoration-type?         identityref
    |  +-- restoration-scheme?       identityref
    |  +-- te-topology-identifier
    |  |  +-- provider-id?   te-global-id
    |  |  +-- client-id?     te-global-id
    |  |  +-- topology-id?   te-topology-id
    |  +-- te-bandwidth
    |  |  ...
    |  +-- link-protection?          identityref
    |  +-- setup-priority?           uint8
    |  +-- hold-priority?            uint8
    |  +-- signaling-type?           identityref
    |  +-- hierarchy
    |     +-- dependency-tunnels
    |     |  ...
    |     +-- hierarchical-link
    |        ...
]]></artwork></figure>

<t>The path requests that are intended to be used within the same tunnel
   should reference the same entry in the tunnel-attributes list. This
   allows:</t>

<t><list style="symbols">
  <t>avoiding repeating the same set of per-tunnel parameters on
multiple requested paths;</t>
  <t>the server to understand what attributes are intended to be
configured on a per-tunnel basis (e.g., the te-bandwidth
configured in the tunnel-attributes) and what attributes are
intended to be configured on a per-path basis(e.g., the te-
bandwidth configured in the path-request). This could be useful
especially when the server also creates a TE tunnel instance
within the operational datastore to report the computed paths, as
described in <xref target="temp-state"/>: in this case, the tunnel-name is also
used as the suggested name for that TE tunnel instance.  <vspace blankLines='1'/>
The YANG data model allows also including requests for paths intended
 to modify existing tunnels (e.g., adding a protection path for an
 existing un-protected tunnel). In this case, the per-tunnel
 attributes are already provided in an existing TE tunnel instance and
 do not need to be re-configured in the path computation request RPC.
 Therefore, these requests should reference an existing TE tunnel
 instance.  <vspace blankLines='1'/>
It is also possible to request computing paths without indicating in
 which tunnel they are intended to be used (e.g., in case of an
 unprotected tunnel). In this case, the per-tunnel attributes could be
 provided together with the per-path attributes in the path request,
 without using the tunnel-attributes list.  <vspace blankLines='1'/>
The choices below are defined to distinguish the cases above:</t>
  <t>whether the per-tunnel attributes are configured by reference
(providing a leafref), to:  <list style="symbols">
      <t>either a TE tunnel instance, if it exists;</t>
      <t>or to an entry of the tunnel-attributes list, if the TE tunnel
instance does not exist;</t>
    </list></t>
  <t>or by value, providing the set of tunnel attributes within the
path request:</t>
</list></t>

<figure><artwork type="ascii-art" name="tunnel-attributes.txt"><![CDATA[
    |  +-- (tunnel-attributes)?
    |  |  +--:(reference)
    |  |  |  +-- tunnel-reference
    |  |  |     +-- (tunnel-exist)
    |  |  |     |  +--:(tunnel-ref)
    |  |  |     |  |  +-- tunnel-ref                te:tunnel-ref
    |  |  |     |  +--:(tunnel-attributes-ref)
    |  |  |     |     +-- tunnel-attributes-ref     leafref
    |  |  |     +-- path-name?                      string
    |  |  |     +-- (path-role)
    |  |  |        ...
    |  |  +--:(value)
    |  |     +-- tunnel-name?                    string
    |  |     +-- path-name?                      string
    |  |     +-- (path-role)?
    |  |     |  ...
    |  |     ...
    |  |     +-- encoding?                       identityref
    |  |     +-- switching-type?                 identityref
    |  |     ...
]]></artwork></figure>

<section anchor="tunnel-attributes-specified-by-value"><name>Tunnel attributes specified by value</name>

<t>The (value) case provides the set of attributes that are configured
   only on per-tunnel basis (e.g., tunnel-name, source/destination TTP,
   encoding and switching-type).</t>

<t>In this case, it is assumed that the requested path will be the only
   path within a tunnel.</t>

<t>If the only path within a tunnel is the transit segment of a multi-domain end-to-end path, it can be of any type (primary, secondary, reverse-primary
   or reverse-secondary). The (path-role) choice is used to specify its role in the path request:</t>

<figure><artwork type="ascii-art" name="tunnel-by-value.txt"><![CDATA[
    |  |     +-- (path-role)?
    |  |     |  +--:(primary-path)
    |  |     |  +--:(secondary-path)
    |  |     |  |  +-- secondary-path!
    |  |     |  |     +-- primary-path-name?   string
    |  |     |  +--:(primary-reverse-path)
    |  |     |  |  +-- primary-reverse-path!
    |  |     |  |     +-- primary-path-name?   string
    |  |     |  +--:(secondary-reverse-path)
    |  |     |     +-- secondary-reverse-path!
    |  |     |        +-- primary-path-name?           string
    |  |     |        +-- primary-reverse-path-name?   string
]]></artwork></figure>

<t>In all the other cases, the only path within a tunnel is a primary path.</t>

<t>The secondary-path, the primary-reverse-path and the secondary-
   reverse-path are presence container used to indicate the role of the
   path: by default, the path is assumed to be a primary path.</t>

<t>They optionally can contain the name of the primary-path under which
   the requested path could be associated within the YANG tree structure
   defined in <xref target="I-D.ietf-teas-yang-te"/>, which could be useful when the server also
   creates a TE tunnel instance within the operational datastore to
   report the computed paths, as described in <xref target="temp-state"/>: in this
   case, the tunnel-name and the path names are also used as the
   suggested name for that TE tunnel and path instances.</t>

</section>
<section anchor="tunnel-attributes-specified-by-reference"><name>Tunnel attributes specified by reference</name>

<t>The (reference) case provides the information needed to associate
   multiple path requests that are intended to be used within the same
   tunnel.</t>

<t>In order to indicate the role of the path being requested within the
   intended tunnel (e.g., primary or secondary path), the (path-role)
   choice is defined:</t>

<figure><artwork type="ascii-art" name="tunnel-by-reference.txt"><![CDATA[
    |  |  |     +-- (path-role)
    |  |  |        +--:(primary-path)
    |  |  |        |  +-- primary-path!
    |  |  |        |     ...
    |  |  |        +--:(secondary-path)
    |  |  |        |  +-- secondary-path
    |  |  |        |     ...
    |  |  |        +--:(primary-reverse-path)
    |  |  |        |  +-- primary-reverse-path
    |  |  |        |     ...
    |  |  |        +--:(secondary-reverse-path)
    |  |  |           +-- secondary-reverse-path
    |  |  |              ...
]]></artwork></figure>

<t>The primary-path is a presence container used to indicate that the
   requested path is intended to be used as a primary path. It can also
   contain some attributes which are configured only on primary paths
   (e.g., the k-requested-paths).</t>

<t>The secondary-path container indicates that the requested path is
   intended to be used as a secondary path and it contains at least
   references to one or more primary paths which can use it as a
   candidate secondary path:</t>

<figure><artwork type="ascii-art" name="secondary-path.txt"><![CDATA[
    |  |  |        |  +-- secondary-path
    |  |  |        |     ...
    |  |  |        |     +-- primary-path-ref* []
    |  |  |        |        +-- (primary-path-exist)
    |  |  |        |           +--:(path-ref)
    |  |  |        |           |  +-- primary-path-ref    leafref
    |  |  |        |           +--:(path-request-ref)
    |  |  |        |              +-- path-request-ref    leafref
]]></artwork></figure>

<t>A requested secondary path can reference any requested primary paths,
   and, in case they are intended to be used within an existing TE
   tunnel, it could also reference any existing primary-paths.</t>

<t>The secondary-path container can also contain some attributes which
   are configured only on secondary paths (e.g., the protection-type).</t>

<t>The primary-reverse-path container indicates that the requested path
   is intended to be used as a primary reverse path and it contains only
   the reference to the primary path which is intended to use it as a
   reverse path:</t>

<figure><artwork type="ascii-art" name="primary-reverse-path.txt"><![CDATA[
    |  |  |        |  +-- primary-reverse-path
    |  |  |        |     +-- (primary-path-exist)
    |  |  |        |        +--:(path-ref)
    |  |  |        |        |  +-- primary-path-ref    leafref
    |  |  |        |        +--:(path-request-ref)
    |  |  |        |           +-- path-request-ref    leafref
]]></artwork></figure>

<t>A requested primary reverse path can reference either a requested
   primary path, or, in case it is intended to be used within an
   existing TE tunnel, an existing primary-path.</t>

<t>The secondary-reverse-path container indicates that the requested
   path is intended to be used as a secondary reverse path and it
   contains at least references to one or more primary paths, whose
   primary reverse path can use it as a candidate secondary reverse
   path:</t>

<figure><artwork type="ascii-art" name="secondary-reverse-path.txt"><![CDATA[
    |  |  |           +-- secondary-reverse-path
    |  |  |              ...
    |  |  |              +-- primary-reverse-path* []
    |  |  |                 +-- (primary-reverse-path-exist)
    |  |  |                    +--:(path-ref)
    |  |  |                    |  +-- primary-path-ref    leafref
    |  |  |                    +--:(path-request-ref)
    |  |  |                       +-- path-request-ref    leafref
]]></artwork></figure>

<t>A requested secondary reverse path can reference any requested
   primary paths, and, in case they are intended to be used within an
   existing TE tunnel, it could reference also existing primary-paths.</t>

<t>The secondary-reverse-path container can also contain some attributes
   which are configured only on secondary reverse paths (e.g., the
   protection-type).</t>

<t>In case the requested path is a transit segment of a multi-domain
   end-to-end path, the primary-path may not be needed to be
   setup/computed. However, the request for path computation of a
   secondary-path or a primary-reverse or of a secondary-reverse-path
   requires that the primary-path exists or it is requested within the
   same RPC request. In the latter case, the path request for the
   primary-path should have an empty 'route-object-include-exclude' list,
   as described in section 5.1.1 of <xref target="I-D.ietf-teas-yang-te"/>, to indicate to the server that
   path computation is not requested and no path properties will
   therefore be returned in the RPC response.</t>

</section>
</section>
<section anchor="multi-layer-path-computation"><name>Multi-Layer Path Computation</name>

<t>The models supports requesting multi-layer path computation following
   the same approach based on dependency tunnels, as defined in <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>The tunnel-attributes of a given client-layer path request can
   reference server-layer TE tunnels which can already exist in the YANG
   datastore or be specified in the tunnel-attributes list, within the
   same RPC request:</t>

<figure><artwork type="ascii-art" name="dependency-tunnels.txt"><![CDATA[
    |     +-- dependency-tunnels
    |     |  +-- dependency-tunnel* [name]
    |     |  |  +-- name              -> /te:te/tunnels/tunnel/name
    |     |  |  +-- encoding?         identityref
    |     |  |  +-- switching-type?   identityref
    |     |  +-- dependency-tunnel-attributes* [name]
    |     |     +-- name              leafref
    |     |     +-- encoding?         identityref
    |     |     +-- switching-type?   identityref
]]></artwork></figure>

<t>In a similar way as in <xref target="I-D.ietf-teas-yang-te"/>, the server-layer tunnel
   attributes should provide the information of what would be the
   dynamic link in the client layer topology supported by that tunnel,
   if instantiated:</t>

<figure><artwork type="ascii-art" name="hierarchical-link.txt"><![CDATA[
    |     +-- hierarchical-link
    |        +-- enable?                   boolean
    |        +-- local-te-node-id?         te-types:te-node-id
    |        +-- local-te-link-tp-id?      te-types:te-tp-id
    |        +-- remote-te-node-id?        te-types:te-node-id
    |        +-- te-topology-identifier
    |           +-- provider-id?   te-global-id
    |           +-- client-id?     te-global-id
    |           +-- topology-id?   te-topology-id
]]></artwork></figure>

<t>It is worth noting that since path computation RPC is stateless, the
   dynamic hierarchical links configured for the server-layer tunnel
   attributes cannot be used for path computation of any client-layer
   path unless explicitly referenced in the dependency-tunnel-attributes
   list within the same RPC request.</t>

</section>
</section>
<section anchor="yang-data-model-for-te-path-computation"><name>YANG data model for TE path computation</name>

<section anchor="pc-tree"><name>Tree diagram</name>

<t><xref target="fig-pc-tree"/> below shows the tree diagram of the YANG data model defined
   in module ietf-te-path-computation.yang, defined in <xref target="pc-yang"/>.</t>

<figure title="TE path computation tree diagram" anchor="fig-pc-tree"><artwork type="ascii-art" name="ietf-te-path-computation.tree"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

module: ietf-te-path-computation

  augment /te:tunnels-path-compute/te:input/te:path-compute-info:
    +-- path-request* [request-id]
    |  +-- request-id                            uint32
    |  +-- compute-priority?                     uint8
    |  |       {compute-priority}?
    |  +-- (tunnel-attributes)?
    |  |  +--:(reference)
    |  |  |  +-- tunnel-reference
    |  |  |     +-- (tunnel-exist)
    |  |  |     |  +--:(tunnel-ref)
    |  |  |     |  |  +-- tunnel-ref                te:tunnel-ref
    |  |  |     |  +--:(tunnel-attributes-ref)
    |  |  |     |     +-- tunnel-attributes-ref     leafref
    |  |  |     +-- path-name?                      string
    |  |  |     +-- (path-role)
    |  |  |        +--:(primary-path)
    |  |  |        |  +-- primary-path!
    |  |  |        |     +-- preference?          uint8
    |  |  |        |     +-- co-routed?           boolean
    |  |  |        |     +-- k-requested-paths?   uint8
    |  |  |        +--:(secondary-path)
    |  |  |        |  +-- secondary-path
    |  |  |        |     +-- secondary-reverse-path?   leafref
    |  |  |        |     +-- preference?               uint8
    |  |  |        |     +-- protection-type?          identityref
    |  |  |        |     +-- restoration-type?         identityref
    |  |  |        |     +-- restoration-scheme?       identityref
    |  |  |        |     +-- primary-path-ref* []
    |  |  |        |        +-- (primary-path-exist)
    |  |  |        |           +--:(path-ref)
    |  |  |        |           |  +-- primary-path-ref    leafref
    |  |  |        |           +--:(path-request-ref)
    |  |  |        |              +-- path-request-ref    leafref
    |  |  |        +--:(primary-reverse-path)
    |  |  |        |  +-- primary-reverse-path
    |  |  |        |     +-- (primary-path-exist)
    |  |  |        |        +--:(path-ref)
    |  |  |        |        |  +-- primary-path-ref    leafref
    |  |  |        |        +--:(path-request-ref)
    |  |  |        |           +-- path-request-ref    leafref
    |  |  |        +--:(secondary-reverse-path)
    |  |  |           +-- secondary-reverse-path
    |  |  |              +-- preference?             uint8
    |  |  |              +-- protection-type?        identityref
    |  |  |              +-- restoration-type?       identityref
    |  |  |              +-- restoration-scheme?     identityref
    |  |  |              +-- primary-reverse-path* []
    |  |  |                 +-- (primary-reverse-path-exist)
    |  |  |                    +--:(path-ref)
    |  |  |                    |  +-- primary-path-ref    leafref
    |  |  |                    +--:(path-request-ref)
    |  |  |                       +-- path-request-ref    leafref
    |  |  +--:(value)
    |  |     +-- tunnel-name?                    string
    |  |     +-- path-name?                      string
    |  |     +-- (path-role)?
    |  |     |  +--:(primary-path)
    |  |     |  +--:(secondary-path)
    |  |     |  |  +-- secondary-path!
    |  |     |  |     +-- primary-path-name?   string
    |  |     |  +--:(primary-reverse-path)
    |  |     |  |  +-- primary-reverse-path!
    |  |     |  |     +-- primary-path-name?   string
    |  |     |  +--:(secondary-reverse-path)
    |  |     |     +-- secondary-reverse-path!
    |  |     |        +-- primary-path-name?           string
    |  |     |        +-- primary-reverse-path-name?   string
    |  |     +-- k-requested-paths?              uint8
    |  |     +-- encoding?                       identityref
    |  |     +-- switching-type?                 identityref
    |  |     +-- source
    |  |     |  +-- node-id?        nw:node-id
    |  |     |  +-- te-node-id?     te-types:te-node-id
    |  |     |  +-- tunnel-tp-id?   binary
    |  |     +-- destination
    |  |     |  +-- node-id?        nw:node-id
    |  |     |  +-- te-node-id?     te-types:te-node-id
    |  |     |  +-- tunnel-tp-id?   binary
    |  |     +-- bidirectional?                  boolean
    |  |     +-- te-topology-identifier
    |  |        +-- provider-id?   te-global-id
    |  |        +-- client-id?     te-global-id
    |  |        +-- topology-id?   te-topology-id
    |  +-- association-objects
    |  |  +-- association-object* [association-key]
    |  |  |  +-- association-key    string
    |  |  |  +-- type?              identityref
    |  |  |  +-- id?                uint16
    |  |  |  +-- source
    |  |  |     +-- id?     te-gen-node-id
    |  |  |     +-- type?   enumeration
    |  |  +-- association-object-extended* [association-key]
    |  |     +-- association-key    string
    |  |     +-- type?              identityref
    |  |     +-- id?                uint16
    |  |     +-- source
    |  |     |  +-- id?     te-gen-node-id
    |  |     |  +-- type?   enumeration
    |  |     +-- global-source?     uint32
    |  |     +-- extended-id?       yang:hex-string
    |  +-- optimizations
    |  |  +-- (algorithm)?
    |  |     +--:(metric) {path-optimization-metric}?
    |  |     |  +-- optimization-metric* [metric-type]
    |  |     |  |  +-- metric-type                       identityref
    |  |     |  |  +-- weight?                           uint8
    |  |     |  |  +-- explicit-route-exclude-objects
    |  |     |  |  |  +-- route-object-exclude-object* [index]
    |  |     |  |  |     +-- index                        uint32
    |  |     |  |  |     +-- (type)?
    |  |     |  |  |        +--:(numbered-node-hop)
    |  |     |  |  |        |  +-- numbered-node-hop
    |  |     |  |  |        |     +-- node-id-uri?   nw:node-id
    |  |     |  |  |        |     +-- node-id?       te-node-id
    |  |     |  |  |        |     +-- hop-type?      te-hop-type
    |  |     |  |  |        +--:(numbered-link-hop)
    |  |     |  |  |        |  +-- numbered-link-hop
    |  |     |  |  |        |     +-- link-tp-id    te-tp-id
    |  |     |  |  |        |     +-- hop-type?     te-hop-type
    |  |     |  |  |        |     +-- direction?    te-link-direction
    |  |     |  |  |        +--:(unnumbered-link-hop)
    |  |     |  |  |        |  +-- unnumbered-link-hop
    |  |     |  |  |        |     +-- link-tp-id-uri?   nt:tp-id
    |  |     |  |  |        |     +-- link-tp-id?       te-tp-id
    |  |     |  |  |        |     +-- node-id-uri?      nw:node-id
    |  |     |  |  |        |     +-- node-id?          te-node-id
    |  |     |  |  |        |     +-- hop-type?         te-hop-type
    |  |     |  |  |        |     +-- direction?
    |  |     |  |  |        |             te-link-direction
    |  |     |  |  |        +--:(as-number)
    |  |     |  |  |        |  +-- as-number-hop
    |  |     |  |  |        |     +-- as-number    inet:as-number
    |  |     |  |  |        |     +-- hop-type?    te-hop-type
    |  |     |  |  |        +--:(label)
    |  |     |  |  |        |  +-- label-hop
    |  |     |  |  |        |     +-- te-label
    |  |     |  |  |        |        +-- (technology)?
    |  |     |  |  |        |        |  +--:(generic)
    |  |     |  |  |        |        |     +-- generic?
    |  |     |  |  |        |        |             rt-types:generali\
zed-label
    |  |     |  |  |        |        +-- direction?
    |  |     |  |  |        |                te-label-direction
    |  |     |  |  |        +--:(srlg)
    |  |     |  |  |           +-- srlg
    |  |     |  |  |              +-- srlg?   uint32
    |  |     |  |  +-- explicit-route-include-objects
    |  |     |  |     +-- route-object-include-object* [index]
    |  |     |  |        +-- index                        uint32
    |  |     |  |        +-- (type)?
    |  |     |  |           +--:(numbered-node-hop)
    |  |     |  |           |  +-- numbered-node-hop
    |  |     |  |           |     +-- node-id-uri?   nw:node-id
    |  |     |  |           |     +-- node-id?       te-node-id
    |  |     |  |           |     +-- hop-type?      te-hop-type
    |  |     |  |           +--:(numbered-link-hop)
    |  |     |  |           |  +-- numbered-link-hop
    |  |     |  |           |     +-- link-tp-id    te-tp-id
    |  |     |  |           |     +-- hop-type?     te-hop-type
    |  |     |  |           |     +-- direction?    te-link-direction
    |  |     |  |           +--:(unnumbered-link-hop)
    |  |     |  |           |  +-- unnumbered-link-hop
    |  |     |  |           |     +-- link-tp-id-uri?   nt:tp-id
    |  |     |  |           |     +-- link-tp-id?       te-tp-id
    |  |     |  |           |     +-- node-id-uri?      nw:node-id
    |  |     |  |           |     +-- node-id?          te-node-id
    |  |     |  |           |     +-- hop-type?         te-hop-type
    |  |     |  |           |     +-- direction?
    |  |     |  |           |             te-link-direction
    |  |     |  |           +--:(as-number)
    |  |     |  |           |  +-- as-number-hop
    |  |     |  |           |     +-- as-number    inet:as-number
    |  |     |  |           |     +-- hop-type?    te-hop-type
    |  |     |  |           +--:(label)
    |  |     |  |              +-- label-hop
    |  |     |  |                 +-- te-label
    |  |     |  |                    +-- (technology)?
    |  |     |  |                    |  +--:(generic)
    |  |     |  |                    |     +-- generic?
    |  |     |  |                    |             rt-types:generali\
zed-label
    |  |     |  |                    +-- direction?
    |  |     |  |                            te-label-direction
    |  |     |  +-- tiebreakers
    |  |     |     +-- tiebreaker* [tiebreaker-type]
    |  |     |        +-- tiebreaker-type    identityref
    |  |     +--:(objective-function)
    |  |              {path-optimization-objective-function}?
    |  |        +-- objective-function
    |  |           +-- objective-function-type?   identityref
    |  +-- named-path-constraint?                leafref
    |  |       {te-types:named-path-constraints}?
    |  +-- te-bandwidth
    |  |  +-- (technology)?
    |  |     +--:(generic)
    |  |        +-- generic?   te-bandwidth
    |  +-- link-protection?                      identityref
    |  +-- setup-priority?                       uint8
    |  +-- hold-priority?                        uint8
    |  +-- signaling-type?                       identityref
    |  +-- path-metric-bounds
    |  |  +-- path-metric-bound* [metric-type]
    |  |     +-- metric-type    identityref
    |  |     +-- upper-bound?   uint64
    |  +-- path-affinities-values
    |  |  +-- path-affinities-value* [usage]
    |  |     +-- usage    identityref
    |  |     +-- value?   admin-groups
    |  +-- path-affinity-names
    |  |  +-- path-affinity-name* [usage]
    |  |     +-- usage            identityref
    |  |     +-- affinity-name* [name]
    |  |        +-- name    string
    |  +-- path-srlgs-lists
    |  |  +-- path-srlgs-list* [usage]
    |  |     +-- usage     identityref
    |  |     +-- values*   srlg
    |  +-- path-srlgs-names
    |  |  +-- path-srlgs-name* [usage]
    |  |     +-- usage    identityref
    |  |     +-- names*   string
    |  +-- disjointness?                         te-path-disjointness
    |  +-- explicit-route-objects-always
    |  |  +-- route-object-exclude-always* [index]
    |  |  |  +-- index                        uint32
    |  |  |  +-- (type)?
    |  |  |     +--:(numbered-node-hop)
    |  |  |     |  +-- numbered-node-hop
    |  |  |     |     +-- node-id-uri?   nw:node-id
    |  |  |     |     +-- node-id?       te-node-id
    |  |  |     |     +-- hop-type?      te-hop-type
    |  |  |     +--:(numbered-link-hop)
    |  |  |     |  +-- numbered-link-hop
    |  |  |     |     +-- link-tp-id    te-tp-id
    |  |  |     |     +-- hop-type?     te-hop-type
    |  |  |     |     +-- direction?    te-link-direction
    |  |  |     +--:(unnumbered-link-hop)
    |  |  |     |  +-- unnumbered-link-hop
    |  |  |     |     +-- link-tp-id-uri?   nt:tp-id
    |  |  |     |     +-- link-tp-id?       te-tp-id
    |  |  |     |     +-- node-id-uri?      nw:node-id
    |  |  |     |     +-- node-id?          te-node-id
    |  |  |     |     +-- hop-type?         te-hop-type
    |  |  |     |     +-- direction?        te-link-direction
    |  |  |     +--:(as-number)
    |  |  |     |  +-- as-number-hop
    |  |  |     |     +-- as-number    inet:as-number
    |  |  |     |     +-- hop-type?    te-hop-type
    |  |  |     +--:(label)
    |  |  |        +-- label-hop
    |  |  |           +-- te-label
    |  |  |              +-- (technology)?
    |  |  |              |  +--:(generic)
    |  |  |              |     +-- generic?
    |  |  |              |             rt-types:generalized-label
    |  |  |              +-- direction?       te-label-direction
    |  |  +-- route-object-include-exclude* [index]
    |  |     +-- explicit-route-usage?        identityref
    |  |     +-- index                        uint32
    |  |     +-- (type)?
    |  |        +--:(numbered-node-hop)
    |  |        |  +-- numbered-node-hop
    |  |        |     +-- node-id-uri?   nw:node-id
    |  |        |     +-- node-id?       te-node-id
    |  |        |     +-- hop-type?      te-hop-type
    |  |        +--:(numbered-link-hop)
    |  |        |  +-- numbered-link-hop
    |  |        |     +-- link-tp-id    te-tp-id
    |  |        |     +-- hop-type?     te-hop-type
    |  |        |     +-- direction?    te-link-direction
    |  |        +--:(unnumbered-link-hop)
    |  |        |  +-- unnumbered-link-hop
    |  |        |     +-- link-tp-id-uri?   nt:tp-id
    |  |        |     +-- link-tp-id?       te-tp-id
    |  |        |     +-- node-id-uri?      nw:node-id
    |  |        |     +-- node-id?          te-node-id
    |  |        |     +-- hop-type?         te-hop-type
    |  |        |     +-- direction?        te-link-direction
    |  |        +--:(as-number)
    |  |        |  +-- as-number-hop
    |  |        |     +-- as-number    inet:as-number
    |  |        |     +-- hop-type?    te-hop-type
    |  |        +--:(label)
    |  |        |  +-- label-hop
    |  |        |     +-- te-label
    |  |        |        +-- (technology)?
    |  |        |        |  +--:(generic)
    |  |        |        |     +-- generic?
    |  |        |        |             rt-types:generalized-label
    |  |        |        +-- direction?       te-label-direction
    |  |        +--:(srlg)
    |  |           +-- srlg
    |  |              +-- srlg?   uint32
    |  +-- path-in-segment!
    |  |  +-- label-restrictions
    |  |     +-- label-restriction* [index]
    |  |        +-- restriction?    enumeration
    |  |        +-- index           uint32
    |  |        +-- label-start
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-end
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-step
    |  |        |  +-- (technology)?
    |  |        |     +--:(generic)
    |  |        |        +-- generic?   int32
    |  |        +-- range-bitmap?   yang:hex-string
    |  +-- path-out-segment!
    |  |  +-- label-restrictions
    |  |     +-- label-restriction* [index]
    |  |        +-- restriction?    enumeration
    |  |        +-- index           uint32
    |  |        +-- label-start
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-end
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-step
    |  |        |  +-- (technology)?
    |  |        |     +--:(generic)
    |  |        |        +-- generic?   int32
    |  |        +-- range-bitmap?   yang:hex-string
    |  +-- requested-metrics* [metric-type]
    |  |  +-- metric-type    identityref
    |  +-- return-srlgs?                         boolean
    |  +-- return-affinities?                    boolean
    |  +-- requested-state!
    |     +-- timer?            uint16
    |     +-- transaction-id?   string
    +-- tunnel-attributes* [tunnel-name]
    |  +-- tunnel-name               string
    |  +-- encoding?                 identityref
    |  +-- switching-type?           identityref
    |  +-- source
    |  |  +-- node-id?        nw:node-id
    |  |  +-- te-node-id?     te-types:te-node-id
    |  |  +-- tunnel-tp-id?   binary
    |  +-- destination
    |  |  +-- node-id?        nw:node-id
    |  |  +-- te-node-id?     te-types:te-node-id
    |  |  +-- tunnel-tp-id?   binary
    |  +-- bidirectional?            boolean
    |  +-- association-objects
    |  |  +-- association-object* [association-key]
    |  |  |  +-- association-key    string
    |  |  |  +-- type?              identityref
    |  |  |  +-- id?                uint16
    |  |  |  +-- source
    |  |  |     +-- id?     te-gen-node-id
    |  |  |     +-- type?   enumeration
    |  |  +-- association-object-extended* [association-key]
    |  |     +-- association-key    string
    |  |     +-- type?              identityref
    |  |     +-- id?                uint16
    |  |     +-- source
    |  |     |  +-- id?     te-gen-node-id
    |  |     |  +-- type?   enumeration
    |  |     +-- global-source?     uint32
    |  |     +-- extended-id?       yang:hex-string
    |  +-- protection-type?          identityref
    |  +-- restoration-type?         identityref
    |  +-- restoration-scheme?       identityref
    |  +-- network-id?               nw:network-id
    |  +-- te-topology-identifier
    |  |  +-- provider-id?   te-global-id
    |  |  +-- client-id?     te-global-id
    |  |  +-- topology-id?   te-topology-id
    |  +-- te-bandwidth
    |  |  +-- (technology)?
    |  |     +--:(generic)
    |  |        +-- generic?   te-bandwidth
    |  +-- link-protection?          identityref
    |  +-- setup-priority?           uint8
    |  +-- hold-priority?            uint8
    |  +-- signaling-type?           identityref
    |  +-- hierarchy
    |     +-- dependency-tunnels
    |     |  +-- dependency-tunnel* [name]
    |     |  |  +-- name              -> /te:te/tunnels/tunnel/name
    |     |  |  +-- encoding?         identityref
    |     |  |  +-- switching-type?   identityref
    |     |  +-- dependency-tunnel-attributes* [name]
    |     |     +-- name              leafref
    |     |     +-- encoding?         identityref
    |     |     +-- switching-type?   identityref
    |     +-- hierarchical-link
    |        +-- enable?                   boolean
    |        +-- local-node-id?            nw:node-id
    |        +-- local-te-node-id?         te-types:te-node-id
    |        +-- local-link-tp-id?         nt:tp-id
    |        +-- local-te-link-tp-id?      te-types:te-tp-id
    |        +-- remote-link-tp-id?        nt:tp-id
    |        +-- remote-te-node-id?        te-types:te-node-id
    |        +-- network-id?               nw:network-id
    |        +-- te-topology-identifier
    |           +-- provider-id?   te-global-id
    |           +-- client-id?     te-global-id
    |           +-- topology-id?   te-topology-id
    +-- synchronization* [] {svec}?
       +-- svec
       |  +-- relaxable?      boolean
       |  +-- disjointness?   te-path-disjointness
       |  +-- request-id*     uint32
       +-- svec-constraints
       |  +-- path-metric-bound* [metric-type]
       |     +-- metric-type    identityref
       |     +-- upper-bound?   uint64
       +-- path-srlgs-lists
       |  +-- path-srlgs-list* [usage]
       |     +-- usage     identityref
       |     +-- values*   srlg
       +-- path-srlgs-names
       |  +-- path-srlgs-name* [usage]
       |     +-- usage    identityref
       |     +-- names*   string
       +-- exclude-objects
       |  +-- excludes* []
       |     +-- (type)?
       |        +--:(numbered-node-hop)
       |        |  +-- numbered-node-hop
       |        |     +-- node-id-uri?   nw:node-id
       |        |     +-- node-id?       te-node-id
       |        |     +-- hop-type?      te-hop-type
       |        +--:(numbered-link-hop)
       |        |  +-- numbered-link-hop
       |        |     +-- link-tp-id    te-tp-id
       |        |     +-- hop-type?     te-hop-type
       |        |     +-- direction?    te-link-direction
       |        +--:(unnumbered-link-hop)
       |        |  +-- unnumbered-link-hop
       |        |     +-- link-tp-id-uri?   nt:tp-id
       |        |     +-- link-tp-id?       te-tp-id
       |        |     +-- node-id-uri?      nw:node-id
       |        |     +-- node-id?          te-node-id
       |        |     +-- hop-type?         te-hop-type
       |        |     +-- direction?        te-link-direction
       |        +--:(as-number)
       |        |  +-- as-number-hop
       |        |     +-- as-number    inet:as-number
       |        |     +-- hop-type?    te-hop-type
       |        +--:(label)
       |           +-- label-hop
       |              +-- te-label
       |                 +-- (technology)?
       |                 |  +--:(generic)
       |                 |     +-- generic?
       |                 |             rt-types:generalized-label
       |                 +-- direction?       te-label-direction
       +-- optimizations
          +-- (algorithm)?
             +--:(metric) {te-types:path-optimization-metric}?
             |  +-- optimization-metric* [metric-type]
             |     +-- metric-type    identityref
             |     +-- weight?        uint8
             +--:(objective-function)
                      {te-types:path-optimization-objective-function\
}?
                +-- objective-function
                   +-- objective-function-type?   identityref
  augment /te:tunnels-path-compute/te:output/te:path-compute-result:
    +--ro response* [response-id]
       +--ro response-id                         uint32
       +--ro computed-paths-properties
       |  +--ro computed-path-properties* [k-index]
       |     +--ro k-index            uint8
       |     +--ro path-properties
       |        +--ro path-metric* [metric-type]
       |        |  +--ro metric-type           identityref
       |        |  +--ro accumulative-value?   uint64
       |        +--ro path-affinities-values
       |        |  +--ro path-affinities-value* [usage]
       |        |     +--ro usage    identityref
       |        |     +--ro value?   admin-groups
       |        +--ro path-affinity-names
       |        |  +--ro path-affinity-name* [usage]
       |        |     +--ro usage            identityref
       |        |     +--ro affinity-name* [name]
       |        |        +--ro name    string
       |        +--ro path-srlgs-lists
       |        |  +--ro path-srlgs-list* [usage]
       |        |     +--ro usage     identityref
       |        |     +--ro values*   srlg
       |        +--ro path-srlgs-names
       |        |  +--ro path-srlgs-name* [usage]
       |        |     +--ro usage    identityref
       |        |     +--ro names*   string
       |        +--ro path-route-objects
       |        |  +--ro path-route-object* [index]
       |        |     +--ro index                        uint32
       |        |     +--ro (type)?
       |        |        +--:(numbered-node-hop)
       |        |        |  +--ro numbered-node-hop
       |        |        |     +--ro node-id-uri?   nw:node-id
       |        |        |     +--ro node-id?       te-node-id
       |        |        |     +--ro hop-type?      te-hop-type
       |        |        +--:(numbered-link-hop)
       |        |        |  +--ro numbered-link-hop
       |        |        |     +--ro link-tp-id    te-tp-id
       |        |        |     +--ro hop-type?     te-hop-type
       |        |        |     +--ro direction?    te-link-direction
       |        |        +--:(unnumbered-link-hop)
       |        |        |  +--ro unnumbered-link-hop
       |        |        |     +--ro link-tp-id-uri?   nt:tp-id
       |        |        |     +--ro link-tp-id?       te-tp-id
       |        |        |     +--ro node-id-uri?      nw:node-id
       |        |        |     +--ro node-id?          te-node-id
       |        |        |     +--ro hop-type?         te-hop-type
       |        |        |     +--ro direction?
       |        |        |             te-link-direction
       |        |        +--:(as-number)
       |        |        |  +--ro as-number-hop
       |        |        |     +--ro as-number    inet:as-number
       |        |        |     +--ro hop-type?    te-hop-type
       |        |        +--:(label)
       |        |           +--ro label-hop
       |        |              +--ro te-label
       |        |                 +--ro (technology)?
       |        |                 |  +--:(generic)
       |        |                 |     +--ro generic?
       |        |                 |             rt-types:generalized\
-label
       |        |                 +--ro direction?
       |        |                         te-label-direction
       |        +--ro te-bandwidth
       |        |  +--ro (technology)?
       |        |     +--:(generic)
       |        |        +--ro generic?   te-bandwidth
       |        +--ro disjointness-type?
       |                te-types:te-path-disjointness
       +--ro computed-path-error-infos
       |  +--ro computed-path-error-info* []
       |     +--ro error-description?   string
       |     +--ro error-timestamp?     yang:date-and-time
       |     +--ro error-reason?        identityref
       +--ro tunnel-ref?                         te:tunnel-ref
       +--ro (path-role)?
          +--:(primary)
          |  +--ro primary-path-ref?             leafref
          +--:(primary-reverse)
          |  +--ro primary-reverse-path-ref?     leafref
          +--:(secondary)
          |  +--ro secondary-path-ref?           leafref
          +--:(secondary-reverse)
             +--ro secondary-reverse-path-ref?   leafref
  augment /te:tunnels-actions/te:input/te:tunnel-info/te:filter-type:
    +--:(path-compute-transactions)
       +-- path-compute-transaction-id*   string
  augment /te:tunnels-actions/te:output:
    +--ro path-computed-delete-result
       +--ro path-compute-transaction-id*   string
]]></artwork></figure>

</section>
<section anchor="pc-yang"><name>YANG module</name>

<figure title="TE path computation YANG module" anchor="fig-pc-yang"><sourcecode type="yang" markers="true" name="ietf-te-path-computation@2023-06-27.yang"><![CDATA[
module ietf-te-path-computation {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-te-path-computation";
  prefix te-pc;

  import ietf-te {
    prefix te;
    reference
      "RFCYYYY: A YANG Data Model for Traffic Engineering Tunnels
       and Interfaces";
  }

  /* Note: The RFC Editor will replace YYYY with the number assigned
     to the RFC once draft-ietf-teas-yang-te becomes an RFC.*/

  import ietf-te-types {
    prefix te-types;
    reference
      "RFCZZZZ: Updated Common YANG Data Types for Traffic 
      Engineering";
  }

  /* Note: The RFC Editor will replace ZZZZ with the number assigned
     to the RFC once draft-ietf-teas-rfc8776-update becomes an RFC.*/

  organization
    "Traffic Engineering Architecture and Signaling (TEAS)
     Working Group";
  contact
    "WG Web: <https://datatracker.ietf.org/wg/teas/>
     WG List:  <mailto:teas@ietf.org>

     Editor:   Italo Busi
               <mailto:italo.busi@huawei.com>

     Editor:   Sergio Belotti
               <mailto:sergio.belotti@nokia.com>

     Editor:   Victor Lopez
               <mailto:victor.lopez@nokia.com>

     Editor:   Oscar Gonzalez de Dios
               <mailto:oscar.gonzalezdedios@telefonica.com>

     Editor:   Anurag Sharma
               <mailto:ansha@google.com>

     Editor:   Yan Shi
               <mailto:shiyan49@chinaunicom.cn>

     Editor:   Ricard Vilalta
               <mailto:ricard.vilalta@cttc.es>

     Editor:   Karthik Sethuraman
               <mailto:karthik.sethuraman@necam.com>

     Editor:   Michael Scharf
               <mailto:michael.scharf@gmail.com>

     Editor:   Daniele Ceccarelli
               <mailto:daniele.ceccarelli@ericsson.com>
     
    ";
  description
    "This module defines a YANG data model for requesting Traffic
     Engineering (TE) path computation. The YANG data model defined
     in this document augments the RPCs defined in the generic TE
     module (ietf-te).

     The model fully conforms to the
     Network Management Datastore Architecture (NMDA).

     Copyright (c) 2023 IETF Trust and the persons
     identified as authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with
     or without modification, is permitted pursuant to, and
     subject to the license terms contained in, the Revised
     BSD License set forth in Section 4.c of the IETF Trust's
     Legal Provisions Relating to IETF Documents
     (https://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC XXXX; see
     the RFC itself for full legal notices.

     The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL', 'SHALL
     NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'NOT RECOMMENDED',
     'MAY', and 'OPTIONAL' in this document are to be interpreted as
     described in BCP 14 (RFC 2119) (RFC 8174) when, and only when,
     they appear in all capitals, as shown here.";

  // RFC Ed.: replace XXXX with actual RFC number and remove
  // this note
  // replace the revision date with the module publication date
  // the format is (year-month-day)

  revision 2023-06-27 {
    description
      "Initial revision";
    reference
      "RFC XXXX: A YANG Data Model for requesting path computation";
  }

  // RFC Ed.: replace XXXX with actual RFC number and remove
  // this note

  /*
   * Features
   */
  
  feature svec {
    description
      "This feature indicates that the server supports synchronized 
      path computation requests.";
    reference
      "Section 7.13 of RFC5440: Path Computation Element (PCE) 
      Communication Protocol (PCEP).";
  }

  feature compute-priority {
    description
      "This feature indicates that the server supports path 
      computation request's priority";
    reference
      "Section 7.4.1 of RFC5440: Path Computation Element (PCE) 
      Communication Protocol (PCEP).";
  }

  /*
   * Identities
   */

  identity tunnel-action-path-compute-delete {
    base te-types:tunnel-action-type;
    description
      "Action type to delete the transient states
      of computed paths, as described in section 3.3.1 of
      RFC XXXX.";
    reference
      "RFC XXXX: A YANG Data Model for requesting path computation";
  }

  /*
   * Groupings
   */

  grouping protection-restoration-properties {
    description
      "This grouping defines the restoration and protection types
       for a path in the path computation request.";
    leaf protection-type {
      type identityref {
        base te-types:lsp-protection-type;
      }
      default "te-types:lsp-protection-unprotected";
      description
        "LSP protection type.";
    }
    leaf restoration-type {
      type identityref {
        base te-types:lsp-restoration-type;
      }
      default "te-types:lsp-restoration-restore-any";
      description
        "LSP restoration type.";
    }
    leaf restoration-scheme {
      type identityref {
        base te-types:restoration-scheme-type;
      }
      default "te-types:restoration-scheme-preconfigured";
      description
        "LSP restoration scheme.";
    }
  } // grouping protection-restoration-properties

  grouping requested-info {
    description
      "This grouping defines the information which is requested
       (e.g., metrics), in the path computation request, to be
       returned in the path computation response.";
    list requested-metrics {
      key "metric-type";
      description
        "The list of the requested metrics.

         The metrics listed here MUST be returned in the response.
         Returning other metrics in the response is OPTIONAL.";
      leaf metric-type {
        type identityref {
          base te-types:path-metric-type;
        }
        description
          "The metric requested to be returned in the response";
      }
    }
    leaf return-srlgs {
      type boolean;
      default "false";
      description
        "If true, path Shared Risk Link Groups (SRLGs) MUST be
         returned in the response.
         If false, returning path SRLGs in the response OPTIONAL.";
    }
    leaf return-affinities {
      type boolean;
      default "false";
      description
        "If true, path affinities MUST be returned in the response.
         If false, returning path affinities in the response is
         OPTIONAL.";
    }
  } // grouping requested-info

  grouping requested-state {
    description
      "Configuration for the transient state used
       to report the computed path";
    container requested-state {
      presence
        "Request temporary reporting of the computed path state";
      description
        "Configures attributes for the temporary reporting of the
         computed path state (e.g., expiration timer).";
      leaf timer {
        type uint16;
        units "minutes";
        default "10";
        description
          "The timeout after which the transient state reporting
          the computed path SHOULD be removed.";
      }
      leaf transaction-id {
        type string;
        description
          "The transaction-id associated with this path computation
          to be used for fast deletion of the transient states
          associated with multiple path computations.

          This transaction-id can be used to explicitly delete all
          the transient states of all the computed paths associated
          with the same transaction-id.

          When one path associated with a transaction-id is setup,
          the transient states of all the other computed paths
          with the same transaction-id are automatically removed.

          If not specified, the transient state is removed only
          when the timer expires (when the timer is specified)
          or not created at all (stateless path computation,
          when the timer is not specified).";
      }
    }
  } // grouping requested-state

  grouping reported-state {
    description
      "This grouping defines the information, returned in the path
       computation response, reporting the transient state related
       to the computed path";
    leaf tunnel-ref {
      type te:tunnel-ref;
      description
        "
         Reference to the tunnel that reports the transient state
         of the computed path.

         If no transient state is created, this attribute is
         omitted.
        ";
    }
    choice path-role {
      description
        "The transient state of the computed path can be reported
         as a primary, primary-reverse, secondary or
         a secondary-reverse path of a te-tunnel";
      case primary {
        leaf primary-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:primary-paths/te:primary-path/"
               + "te:name";
          }
          must '../tunnel-ref' {
            description
              "The primary-path name can only be reported
               if the tunnel name is also reported.";
          }
          description
            "
             Reference to the primary-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case primary
      case primary-reverse {
        leaf primary-reverse-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:primary-paths/te:primary-path/"
               + "te:name";
          }
          must '../tunnel-ref' {
            description
              "The primary-reverse-path name can only be reported
               if the tunnel name is also reported.";
          }
          description
            "
             Reference to the primary-reverse-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case primary-reverse
      case secondary {
        leaf secondary-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:secondary-paths/te:secondary-path/"
               + "te:name";
          }
          must '../tunnel-ref' {
            description
              "The secondary-path name can only be reported
               if the tunnel name is also reported.";
          }
          description
            "
             Reference to the secondary-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case secondary
      case secondary-reverse {
        leaf secondary-reverse-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:secondary-reverse-paths/"
               + "te:secondary-reverse-path/te:name";
          }
          must '../tunnel-ref' {
            description
              "The secondary-reverse-path name can only be reported
               if the tunnel name is also reported.";
          }
          description
            "
             Reference to the secondary-reverse-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case secondary
    } // choice path
  } // grouping reported-state

  grouping synchronization-constraints {
    description
      "Global constraints applicable to synchronized path
       computation requests.";
    container svec-constraints {
      description
        "global svec constraints";
      list path-metric-bound {
        key "metric-type";
        description
          "list of bound metrics";
        leaf metric-type {
          type identityref {
            base te-types:svec-metric-type;
          }
          description
            "SVEC metric type.";
          reference
            "RFC5541: Encoding of Objective Functions in the Path
            Computation Element Communication Protocol (PCEP).";
        }
        leaf upper-bound {
          type uint64;
          description
            "Upper bound on SVEC metric";
        }
      }
    }
    uses te-types:generic-path-srlgs;
    container exclude-objects {
      description
        "Resources to be excluded";
      list excludes {
        description
          "List of Explicit Route Objects to always exclude
           from synchronized path computation";
        uses te-types:explicit-route-hop;
      }
    }
  } // grouping synchronization-constraints

  grouping synchronization-optimization {
    description
      "Optimizations applicable to synchronized path
       computation requests.";
    container optimizations {
      description
        "The objective function container that includes attributes
         to impose when computing a synchronized set of paths";
      choice algorithm {
        description
          "Optimizations algorithm.";
        case metric {
          if-feature "te-types:path-optimization-metric";
          list optimization-metric {
            key "metric-type";
            description
              "svec path metric type";
            leaf metric-type {
              type identityref {
                base te-types:svec-metric-type;
              }
              description
                "TE path metric type usable for computing a set of
                synchronized requests";
            }
            leaf weight {
              type uint8;
              description
                "Metric normalization weight";
            }
          }
        }
        case objective-function {
          if-feature
            "te-types:path-optimization-objective-function";
          container objective-function {
            description
              "The objective function container that includes
               attributes to impose when computing a TE path";
            leaf objective-function-type {
              type identityref {
                base te-types:svec-objective-function-type;
              }
              description
                "Objective function entry";
            }
          }
        }
      }
    }
  } // grouping synchronization-optimization

  grouping synchronization-info {
    description
      "Information for synchronized path computation requests.";
    list synchronization {
      description
        "List of Synchronization VECtors.";
      container svec {
        description
          "Synchronization VECtor";
        leaf relaxable {
          type boolean;
          default "true";
          description
            "If this leaf is true, taking into account this svec is
             OPTIONAL and the path computation process is
             free to ignore svec content.
             Otherwise, it MUST take into account this svec.";
        }
        uses te-types:generic-path-disjointness;
        leaf-list request-id {
          type uint32;
          description
            "This list reports the set of path computation
             requests that are requested to be synchronized.";
        }
      }
      uses synchronization-constraints;
      uses synchronization-optimization;
    }
  } // grouping synchronization-info

  /*
   * Augment TE RPCs
   */

  augment "/te:tunnels-path-compute/te:input/te:path-compute-info" {
    description
      "Augments Path Computation RPC input";
    list path-request {
      key "request-id";
      description
        "The list of the requested paths to be computed";
      leaf request-id {
        type uint32;
        mandatory true;
        description
          "Each path computation request is uniquely identified
           within the RPC request by the request-id.";
      }
      leaf compute-priority {
        if-feature compute-priority;
        type uint8;
        default 0;
        description
          "The path computation request's priority (from 1 to 7) 
          which can be used to constraint the order by which the 
          path computation server processes the path computation 
          requests.

          A higher numerical value of the priority field reflects a 
          higher priority.

          It MUST be set to the default value (i.e., 0) when 
          unused.";
        reference
          "Section 7.4.1 of RFC5440: Path Computation Element (PCE) 
          Communication Protocol (PCEP).";
      }
      choice tunnel-attributes {
        default "value";
        description
          "Whether the tunnel attributes are specified by value
           within this path computation request or by reference.
           The reference could be either to an existing te-tunnel
           or to an entry in the tunnel-attributes list";
        case reference {
          container tunnel-reference {
            description
              "Attributes for a requested path that belongs to
              either an exiting te-tunnel or to an entry in the
              tunnel-attributes list.";
            choice tunnel-exist {
              mandatory true;
              description
                "Whether the tunnel reference is to an existing
                te-tunnel or to an entry in the tunnel-attributes
                list";
              case tunnel-ref {
                leaf tunnel-ref {
                  type te:tunnel-ref;
                  mandatory true;
                  description
                    "The referenced te-tunnel instance";
                }
              } // case tunnel-ref
              case tunnel-attributes-ref {
                leaf tunnel-attributes-ref {
                  type leafref {
                    path "/te:tunnels-path-compute/"
                      + "te:path-compute-info/"
                      + "te-pc:tunnel-attributes/te-pc:tunnel-name";
                  }
                  mandatory true;
                  description
                    "The referenced te-tunnel instance";
                }
              } // case tunnel-attributes-ref 
            } // choice tunnel-exist
            leaf path-name {
              type string;
              description
                "TE path name.";
            }
            choice path-role {
              mandatory true;
              description
                "Whether this path is a primary, or a reverse
                primary, or a secondary, or a reverse secondary
                path.";
              case primary-path {
                container primary-path {
                  presence "Indicates that the requested path
                            is a primary path";
                  description
                    "TE primary path";
                  uses te:path-forward-properties;
                  uses te:k-requested-paths;
                } // container primary-path
              } // case primary-path
              case secondary-path {
                container secondary-path {
                  description
                    "TE secondary path";
                  leaf secondary-reverse-path {
                    type leafref {
                      path "/te:tunnels-path-compute/"
                        + "te:path-compute-info/te-pc:path-request/"
                        + "te-pc:request-id";
                    }
                    description
                      "A reference to the reverse secondary path 
                      when co-routed with the secondary path.";
                  }
                  leaf preference {
                    type uint8 {
                      range "1..255";
                    }
                    default "1";
                    description
                      "Specifies a preference for this path. The 
                      lower the number higher the preference.";
                  }
                  uses protection-restoration-properties;
                  list primary-path-ref {
                    min-elements 1;
                    description
                      "The list of primary paths that reference
                      this path as a candidate secondary path";
                    choice primary-path-exist {
                      mandatory true;
                      description
                        "Whether the path reference is to an existing
                        te-tunnel path or to another path request";
                      case path-ref {
                        leaf primary-path-ref {
                          type leafref {
                            path "/te:te/te:tunnels/te:tunnel"
                              + "[te:name=current()/../../../"
                              + "tunnel-ref]/te:primary-paths/"
                              + "te:primary-path/te:name";
                          }
                          must '../../../tunnel-ref' {
                            description
                              "The primary-path can be referenced
                              if also the tunnel is referenced.";
                          }
                          mandatory true;
                          description
                            "The referenced primary path";
                        }
                      } // case path-ref
                      case path-request-ref {
                        leaf path-request-ref {
                          type leafref {
                            path "/te:tunnels-path-compute/"
                              + "te:path-compute-info/"
                              + "te-pc:path-request/"
                              + "te-pc:request-id";
                          }
                          mandatory true;
                          description
                            "The referenced primary path request";
                        }
                      } // case path-request-ref 
                    } // choice primary-path-exist
                  } // list primary-path-ref
                } // container secondary-path
              } // case secondary-path
              case primary-reverse-path {
                container primary-reverse-path {
                  description
                    "TE primary reverse path";
                  choice primary-path-exist {
                    mandatory true;
                    description
                      "Whether the path reference to the primary
                      paths for which this path is the reverse-path
                      is to an existing te-tunnel path or to
                      another path request.";
                    case path-ref {
                      leaf primary-path-ref {
                        type leafref {
                          path "/te:te/te:tunnels/te:tunnel[te:name"
                            + "=current()/../../tunnel-ref]/"
                            + "te:primary-paths/te:primary-path/"
                            + "te:name";
                        }
                        must '../../tunnel-ref' {
                          description
                            "The primary-path can be referenced
                            if also the tunnel is referenced.";
                        }
                        mandatory true;
                        description
                          "The referenced primary path";
                      }
                    } // case path-ref
                    case path-request-ref {
                      leaf path-request-ref {
                        type leafref {
                          path "/te:tunnels-path-compute/"
                            + "te:path-compute-info/"
                            + "te-pc:path-request/"
                            + "te-pc:request-id";
                        }
                        mandatory true;
                        description
                          "The referenced primary path request";
                      }
                    } // case path-request-ref 
                  } // choice primary-path-exist
                } // container primary-reverse-path
              } // case primary-reverse-path
              case secondary-reverse-path {
                container secondary-reverse-path {
                  description
                    "TE secondary reverse path";
                  // uses te:path-preference;
                  leaf preference {
                    type uint8 {
                      range "1..255";
                    }
                    default "1";
                    description
                      "Specifies a preference for this path. The 
                      lower the number higher the preference.";
                  }
                  uses protection-restoration-properties;
                  list primary-reverse-path {
                    min-elements 1;
                    description
                      "The list of primary reverse paths that
                      reference this path as a candidate
                      secondary reverse path";
                    choice primary-reverse-path-exist {
                      mandatory true;
                      description
                        "Whether the path reference is to an existing
                        te-tunnel path or to another path request";
                      case path-ref {
                        leaf primary-path-ref {
                          type leafref {
                            path "/te:te/te:tunnels/te:tunnel"
                              + "[te:name=current()/../../../"
                              + "tunnel-ref]/te:primary-paths/"
                              + "te:primary-path/te:name";
                          }
                          must '../../../tunnel-ref' {
                            description
                              "The primary-path can be referenced
                              if also the tunnel is referenced.";
                          }
                          mandatory true;
                          description
                            "The referenced primary path";
                        }
                      } // case path-ref
                      case path-request-ref {
                        leaf path-request-ref {
                          type leafref {
                            path "/te:tunnels-path-compute/"
                              + "te:path-compute-info/"
                              + "te-pc:path-request/"
                              + "te-pc:request-id";
                          }
                          mandatory true;
                          description
                            "The referenced primary reverse path
                            request";
                        }
                      } // case path-request-ref 
                    } // choice primary-reverse-path-exist
                  } // list primary-reverse-path-ref
                } // container secondary-reverse-path
              } // case secondary-reverse-path
            } // choice tunnel-path-role
          }
        } // case reference
        case value {
          leaf tunnel-name {
            type string;
            description
              "TE tunnel name.";
          }
          leaf path-name {
            type string;
            description
              "TE path name.";
          }
          choice path-role {
            when 'not (./source) and not (./destination)' {
              description
                "When the tunnel attributes are specified by value
                within this path computation, it is assumed that the
                requested path will be the only path of a tunnel.

                If the requested path is a transit segment path
                (i.e., the source and destination containers are 
                not present), it could be of any type. Otherwise it 
                could only be a primary path.";
            }
            default primary-path;
            description
              "Indicates whether the requested path is a primary
              path, a secondary path, a reverse primary path or a
              reverse secondary path.";
            case primary-path {
              description
                "The requested path is a primary path.";
            }
            container secondary-path {
              presence
                "Indicates that the requested path is a secondary
                path.";
              description
                "The name of the primary path which the requested
                secondary path belongs to.";
              leaf primary-path-name {
                type string;
                description
                  "TE primary path name.";
              }
            } // container secondary-path
            container primary-reverse-path {
              presence
                "Indicates that the requested path is a primary
                reverse path.";
              description
                "The name of the primary path which the requested
                primary reverse path belongs to.";
              leaf primary-path-name {
                type string;
                description
                  "TE primary path name.";
              }
            } // container primary-reverse-path
            container secondary-reverse-path {
              presence
                "Indicates that the requested path is a secondary
                reverse path.";
              description
                "The names of the primary path and of the primary
                reverse path which the requested secondary reverse
                path belongs to.";
              leaf primary-path-name {
                type string;
                description
                  "TE primary path name.";
              }
              leaf primary-reverse-path-name {
                type string;
                description
                  "TE primary reverse path name.";
              }
            } // container primary-reverse-path
          } // choice path-role
          uses te:k-requested-paths;
          uses te-types:encoding-and-switching-type;
          uses te:tunnel-common-attributes;
          uses te-types:te-topology-identifier;
        } // case value
      } // choice tunnel-attributes
      uses te:path-compute-info;
      uses requested-info;
      uses requested-state;
    }
    list tunnel-attributes {
      key "tunnel-name";
      description
        "Tunnel attributes common to multiple request paths";
      leaf tunnel-name {
        type string;
        description
          "TE tunnel name.";
      }
      uses te-types:encoding-and-switching-type;
      uses te:tunnel-common-attributes;
      uses te:tunnel-associations-properties;
      uses protection-restoration-properties;
      uses te-types:tunnel-constraints;
      uses te:tunnel-hierarchy-properties {
        augment "hierarchy/dependency-tunnels" {
          description
            "Augment with the list of dependency tunnel requests.";
          list dependency-tunnel-attributes {
            key "name";
            description
              "A tunnel request entry that this tunnel request can
               potentially depend on.";
            leaf name {
              type leafref {
                path "/te:tunnels-path-compute/"
                   + "te:path-compute-info/te-pc:tunnel-attributes/"
                   + "te-pc:tunnel-name";
              }
              description
                "Dependency tunnel request name.";
            }
            uses te-types:encoding-and-switching-type;
          }
        }
      }
    }
    uses synchronization-info {
      if-feature svec;
    }
  } // path-compute rpc input

  augment "/te:tunnels-path-compute/te:output/"
        + "te:path-compute-result" {
    description
      "Auguments Path Computation RPC output";
    list response {
      key "response-id";
      config false;
      description
        "response";
      leaf response-id {
        type uint32;
        description
          "The response-id has the same value of the
           corresponding request-id.";
      }
      uses te:path-computation-response;
      uses reported-state;
    }
  } // path-compute rpc output

  augment "/te:tunnels-actions/te:input/te:tunnel-info/"
        + "te:filter-type" {
    description
      "Augment Tunnels Action RPC input filter types";
    case path-compute-transactions {
      when "derived-from-or-self(../te:action-info/te:action, "
         + "'tunnel-action-path-compute-delete')";
      description
        "Path Delete RPC input";
      leaf-list path-compute-transaction-id {
        type string;
        description
          "The list of the transaction-id values of the
           transient states to be deleted";
      }
    }
  } // path-delete rpc input

  augment "/te:tunnels-actions/te:output" {
    description
      "Augment Tunnels Action RPC output with path delete result";
    container path-computed-delete-result {
      description
        "Path Delete RPC output";
      leaf-list path-compute-transaction-id {
        type string;
        description
          "The list of the transaction-id values of the
           transient states that have been successfully deleted";
      }
    }
  } // path-delete rpc output
}
]]></sourcecode></figure>

</section>
</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>This document describes use cases of requesting Path Computation
   using YANG data models, which could be used at the ABNO Control
   Interface <xref target="RFC7491"/> and/or between controllers in ACTN <xref target="RFC8453"/>. As
   such, it does not introduce any new security considerations compared
   to the ones related to YANG specification, ABNO specification and
   ACTN Framework defined in <xref target="RFC7950"/>, <xref target="RFC7491"/> and <xref target="RFC8453"/>.</t>

<t>The YANG module defined in this document is designed to be accessed via
   the NETCONF protocol <xref target="RFC6241"/> or RESTCONF protocol <xref target="RFC8040"/>. The
   lowest NETCONF layer is the secure transport layer, and the
   mandatory-to-implement secure transport is Secure Shell (SSH)
   <xref target="RFC6242"/>. The lowest RESTCONF layer is HTTPS, and the mandatory-to-
   implement secure transport is TLS <xref target="RFC8446"/>.</t>

<t>The Network Configuration Access Control Model (NACM) 
   <xref target="RFC8341"/> provides the means to
   restrict access for particular NETCONF or RESTCONF users to a
   preconfigured subset of all available NETCONF or RESTCONF protocol
   operations and content.</t>

<t>The YANG module defined in this document augments the "tunnels-path-compute" and the "tunnel-actions" RPCs defined in <xref target="I-D.ietf-teas-yang-te"/>. The security considerations provided in <xref target="I-D.ietf-teas-yang-te"/> are also applicable to the YANG module
   defined in this document.</t>

<t>The RPC defined in this document can also be used for Denial-of-service (DoS) attacks. The security considerations defines in section 10.7.2 of <xref target="RFC5440"/> also applies to the use of this RPC.</t>

<t>The definition of the input shaping/policing mechanisms and of their configuration is outside the scope of this document.</t>

<t>Some of the RPC operations defined in this YANG module may be considered
   sensitive or vulnerable in some network environments.  It is thus
   important to control access to these operations. These are the
   operations and their sensitivity/vulnerability:</t>

<t>"te-pc:response/computed-paths-properties": provides the same information provided by the "te:computed-paths-properties" defined in <xref target="I-D.ietf-teas-yang-te"/>. The security considerations provided in <xref target="I-D.ietf-teas-yang-te"/> for the TE tunnel state apply also to this subtree.</t>

<t>"te-pc:response/te-pc:tunnel-ref", "te-pc:response/te-pc:primary-path-ref", "te-pc:response/te-pc:primary-reverse-path-ref", "te-pc:response/te-pc:secondary-path-ref" and "te-pc:response/te-pc:secondary-reverse-path-ref" provides a reference where the same information provided in "te-pc:response/computed-paths-properties" is temporarly stored with the operational datastore (see <xref target="temp-state"/>). Therefore access to this information does not provide any additional security issue that the information provided with "te-pc:response/computed-paths-properties".</t>

<t>"/te:tunnels-actions": the YANG model defined in this document augments this action with a new action type that allows deleting the transient states of computed paths (see <xref target="temp-state"/>). A malicious use of this action would have no impact on the paths carrying live traffic but it would preclude the client from using the "transient states" to request the set-up of exactly that path, if still available.</t>

<t>The security considerations spelled out in the
   YANG specification <xref target="RFC7950"/> apply for this document as well.</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>This document registers the following URIs in the "ns" subregistry
   within the "IETF XML registry" <xref target="RFC3688"/>.</t>

<figure><artwork><![CDATA[
      URI: urn:ietf:params:xml:ns:yang:ietf-te-path-computation
      Registrant Contact:  The IESG.
      XML: N/A, the requested URI is an XML namespace.
]]></artwork></figure>

<t>This document registers a YANG module in the "YANG Module Names"
   registry <xref target="RFC7950"/>.</t>

<figure><artwork><![CDATA[
      name:      ietf-te-path-computation
      namespace: urn:ietf:params:xml:ns:yang:ietf-te-path-computation
      prefix:    te-pc
      reference: this document
]]></artwork></figure>

</section>


  </middle>

  <back>


    <references title='Normative References'>



<reference anchor='RFC6241' target='https://www.rfc-editor.org/info/rfc6241'>
  <front>
    <title>Network Configuration Protocol (NETCONF)</title>
    <author fullname='R. Enns' initials='R.' role='editor' surname='Enns'/>
    <author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'/>
    <author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'/>
    <author fullname='A. Bierman' initials='A.' role='editor' surname='Bierman'/>
    <date month='June' year='2011'/>
    <abstract>
      <t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices. It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages. The NETCONF protocol operations are realized as remote procedure calls (RPCs). This document obsoletes RFC 4741. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='6241'/>
  <seriesInfo name='DOI' value='10.17487/RFC6241'/>
</reference>

<reference anchor='RFC8040' target='https://www.rfc-editor.org/info/rfc8040'>
  <front>
    <title>RESTCONF Protocol</title>
    <author fullname='A. Bierman' initials='A.' surname='Bierman'/>
    <author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'/>
    <author fullname='K. Watsen' initials='K.' surname='Watsen'/>
    <date month='January' year='2017'/>
    <abstract>
      <t>This document describes an HTTP-based protocol that provides a programmatic interface for accessing data defined in YANG, using the datastore concepts defined in the Network Configuration Protocol (NETCONF).</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8040'/>
  <seriesInfo name='DOI' value='10.17487/RFC8040'/>
</reference>

<reference anchor='RFC8795' target='https://www.rfc-editor.org/info/rfc8795'>
  <front>
    <title>YANG Data Model for Traffic Engineering (TE) Topologies</title>
    <author fullname='X. Liu' initials='X.' surname='Liu'/>
    <author fullname='I. Bryskin' initials='I.' surname='Bryskin'/>
    <author fullname='V. Beeram' initials='V.' surname='Beeram'/>
    <author fullname='T. Saad' initials='T.' surname='Saad'/>
    <author fullname='H. Shah' initials='H.' surname='Shah'/>
    <author fullname='O. Gonzalez de Dios' initials='O.' surname='Gonzalez de Dios'/>
    <date month='August' year='2020'/>
    <abstract>
      <t>This document defines a YANG data model for representing, retrieving, and manipulating Traffic Engineering (TE) Topologies. The model serves as a base model that other technology-specific TE topology models can augment.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8795'/>
  <seriesInfo name='DOI' value='10.17487/RFC8795'/>
</reference>


<reference anchor='I-D.ietf-teas-yang-te' target='https://datatracker.ietf.org/doc/html/draft-ietf-teas-yang-te-36'>
   <front>
      <title>A YANG Data Model for Traffic Engineering Tunnels, Label Switched Paths and Interfaces</title>
      <author fullname='Tarek Saad' initials='T.' surname='Saad'>
         <organization>Cisco Systems Inc</organization>
      </author>
      <author fullname='Rakesh Gandhi' initials='R.' surname='Gandhi'>
         <organization>Cisco Systems Inc</organization>
      </author>
      <author fullname='Xufeng Liu' initials='X.' surname='Liu'>
         <organization>Alef Edge</organization>
      </author>
      <author fullname='Vishnu Pavan Beeram' initials='V. P.' surname='Beeram'>
         <organization>Juniper Networks</organization>
      </author>
      <author fullname='Igor Bryskin' initials='I.' surname='Bryskin'>
         <organization>Individual</organization>
      </author>
      <date day='2' month='February' year='2024'/>
      <abstract>
	 <t>   This document defines a YANG data model for the provisioning and
   management of Traffic Engineering (TE) tunnels, Label Switched Paths
   (LSPs), and interfaces.  The model covers data that is independent of
   any technology or dataplane encapsulation and is divided into two
   YANG modules that cover device-specific, and device independent data.

   This model covers data for configuration, operational state, remote
   procedural calls, and event notifications.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-teas-yang-te-36'/>
   
</reference>

<reference anchor='RFC7950' target='https://www.rfc-editor.org/info/rfc7950'>
  <front>
    <title>The YANG 1.1 Data Modeling Language</title>
    <author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'/>
    <date month='August' year='2016'/>
    <abstract>
      <t>YANG is a data modeling language used to model configuration data, state data, Remote Procedure Calls, and notifications for network management protocols. This document describes the syntax and semantics of version 1.1 of the YANG language. YANG version 1.1 is a maintenance release of the YANG language, addressing ambiguities and defects in the original specification. There are a small number of backward incompatibilities from YANG version 1. This document also specifies the YANG mappings to the Network Configuration Protocol (NETCONF).</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='7950'/>
  <seriesInfo name='DOI' value='10.17487/RFC7950'/>
</reference>

<reference anchor='RFC5440' target='https://www.rfc-editor.org/info/rfc5440'>
  <front>
    <title>Path Computation Element (PCE) Communication Protocol (PCEP)</title>
    <author fullname='JP. Vasseur' initials='JP.' role='editor' surname='Vasseur'/>
    <author fullname='JL. Le Roux' initials='JL.' role='editor' surname='Le Roux'/>
    <date month='March' year='2009'/>
    <abstract>
      <t>This document specifies the Path Computation Element (PCE) Communication Protocol (PCEP) for communications between a Path Computation Client (PCC) and a PCE, or between two PCEs. Such interactions include path computation requests and path computation replies as well as notifications of specific states related to the use of a PCE in the context of Multiprotocol Label Switching (MPLS) and Generalized MPLS (GMPLS) Traffic Engineering. PCEP is designed to be flexible and extensible so as to easily allow for the addition of further messages and objects, should further requirements be expressed in the future. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='5440'/>
  <seriesInfo name='DOI' value='10.17487/RFC5440'/>
</reference>

<reference anchor='RFC2119' target='https://www.rfc-editor.org/info/rfc2119'>
  <front>
    <title>Key words for use in RFCs to Indicate Requirement Levels</title>
    <author fullname='S. Bradner' initials='S.' surname='Bradner'/>
    <date month='March' year='1997'/>
    <abstract>
      <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
    </abstract>
  </front>
  <seriesInfo name='BCP' value='14'/>
  <seriesInfo name='RFC' value='2119'/>
  <seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>

<reference anchor='RFC8174' target='https://www.rfc-editor.org/info/rfc8174'>
  <front>
    <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
    <author fullname='B. Leiba' initials='B.' surname='Leiba'/>
    <date month='May' year='2017'/>
    <abstract>
      <t>RFC 2119 specifies common key words that may be used in protocol specifications. This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</t>
    </abstract>
  </front>
  <seriesInfo name='BCP' value='14'/>
  <seriesInfo name='RFC' value='8174'/>
  <seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>

<reference anchor='RFC7926' target='https://www.rfc-editor.org/info/rfc7926'>
  <front>
    <title>Problem Statement and Architecture for Information Exchange between Interconnected Traffic-Engineered Networks</title>
    <author fullname='A. Farrel' initials='A.' role='editor' surname='Farrel'/>
    <author fullname='J. Drake' initials='J.' surname='Drake'/>
    <author fullname='N. Bitar' initials='N.' surname='Bitar'/>
    <author fullname='G. Swallow' initials='G.' surname='Swallow'/>
    <author fullname='D. Ceccarelli' initials='D.' surname='Ceccarelli'/>
    <author fullname='X. Zhang' initials='X.' surname='Zhang'/>
    <date month='July' year='2016'/>
    <abstract>
      <t>In Traffic-Engineered (TE) systems, it is sometimes desirable to establish an end-to-end TE path with a set of constraints (such as bandwidth) across one or more networks from a source to a destination. TE information is the data relating to nodes and TE links that is used in the process of selecting a TE path. TE information is usually only available within a network. We call such a zone of visibility of TE information a domain. An example of a domain may be an IGP area or an Autonomous System.</t>
      <t>In order to determine the potential to establish a TE path through a series of connected networks, it is necessary to have available a certain amount of TE information about each network. This need not be the full set of TE information available within each network but does need to express the potential of providing TE connectivity. This subset of TE information is called TE reachability information.</t>
      <t>This document sets out the problem statement for the exchange of TE information between interconnected TE networks in support of end-to-end TE path establishment and describes the best current practice architecture to meet this problem statement. For reasons that are explained in this document, this work is limited to simple TE constraints and information that determine TE reachability.</t>
    </abstract>
  </front>
  <seriesInfo name='BCP' value='206'/>
  <seriesInfo name='RFC' value='7926'/>
  <seriesInfo name='DOI' value='10.17487/RFC7926'/>
</reference>

<reference anchor='RFC8340' target='https://www.rfc-editor.org/info/rfc8340'>
  <front>
    <title>YANG Tree Diagrams</title>
    <author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'/>
    <author fullname='L. Berger' initials='L.' role='editor' surname='Berger'/>
    <date month='March' year='2018'/>
    <abstract>
      <t>This document captures the current syntax used in YANG module tree diagrams. The purpose of this document is to provide a single location for this definition. This syntax may be updated from time to time based on the evolution of the YANG language.</t>
    </abstract>
  </front>
  <seriesInfo name='BCP' value='215'/>
  <seriesInfo name='RFC' value='8340'/>
  <seriesInfo name='DOI' value='10.17487/RFC8340'/>
</reference>


<reference anchor='I-D.ietf-teas-rfc8776-update' target='https://datatracker.ietf.org/doc/html/draft-ietf-teas-rfc8776-update-09'>
   <front>
      <title>Common YANG Data Types for Traffic Engineering</title>
      <author fullname='Italo Busi' initials='I.' surname='Busi'>
         <organization>Huawei</organization>
      </author>
      <author fullname='Aihua Guo' initials='A.' surname='Guo'>
         <organization>Futurewei Technologies</organization>
      </author>
      <author fullname='Xufeng Liu' initials='X.' surname='Liu'>
         <organization>Alef Edge</organization>
      </author>
      <author fullname='Tarek Saad' initials='T.' surname='Saad'>
         <organization>Cisco Systems Inc.</organization>
      </author>
      <author fullname='Igor Bryskin' initials='I.' surname='Bryskin'>
         <organization>Individual</organization>
      </author>
      <date day='29' month='January' year='2024'/>
      <abstract>
	 <t>   This document defines a collection of common data types and groupings
   in YANG data modeling language.  These derived common types and
   groupings are intended to be imported by modules that model Traffic
   Engineering (TE) configuration and state capabilities.  This document
   obsoletes RFC 8776.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-teas-rfc8776-update-09'/>
   
</reference>

<reference anchor='RFC5441' target='https://www.rfc-editor.org/info/rfc5441'>
  <front>
    <title>A Backward-Recursive PCE-Based Computation (BRPC) Procedure to Compute Shortest Constrained Inter-Domain Traffic Engineering Label Switched Paths</title>
    <author fullname='JP. Vasseur' initials='JP.' role='editor' surname='Vasseur'/>
    <author fullname='R. Zhang' initials='R.' surname='Zhang'/>
    <author fullname='N. Bitar' initials='N.' surname='Bitar'/>
    <author fullname='JL. Le Roux' initials='JL.' surname='Le Roux'/>
    <date month='April' year='2009'/>
    <abstract>
      <t>The ability to compute shortest constrained Traffic Engineering Label Switched Paths (TE LSPs) in Multiprotocol Label Switching (MPLS) and Generalized MPLS (GMPLS) networks across multiple domains has been identified as a key requirement. In this context, a domain is a collection of network elements within a common sphere of address management or path computational responsibility such as an IGP area or an Autonomous Systems. This document specifies a procedure relying on the use of multiple Path Computation Elements (PCEs) to compute such inter-domain shortest constrained paths across a predetermined sequence of domains, using a backward-recursive path computation technique. This technique preserves confidentiality across domains, which is sometimes required when domains are managed by different service providers. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='5441'/>
  <seriesInfo name='DOI' value='10.17487/RFC5441'/>
</reference>

<reference anchor='RFC5541' target='https://www.rfc-editor.org/info/rfc5541'>
  <front>
    <title>Encoding of Objective Functions in the Path Computation Element Communication Protocol (PCEP)</title>
    <author fullname='JL. Le Roux' initials='JL.' surname='Le Roux'/>
    <author fullname='JP. Vasseur' initials='JP.' surname='Vasseur'/>
    <author fullname='Y. Lee' initials='Y.' surname='Lee'/>
    <date month='June' year='2009'/>
    <abstract>
      <t>The computation of one or a set of Traffic Engineering Label Switched Paths (TE LSPs) in MultiProtocol Label Switching (MPLS) and Generalized MPLS (GMPLS) networks is subject to a set of one or more specific optimization criteria, referred to as objective functions (e.g., minimum cost path, widest path, etc.).</t>
      <t>In the Path Computation Element (PCE) architecture, a Path Computation Client (PCC) may want a path to be computed for one or more TE LSPs according to a specific objective function. Thus, the PCC needs to instruct the PCE to use the correct objective function. Furthermore, it is possible that not all PCEs support the same set of objective functions; therefore, it is useful for the PCC to be able to automatically discover the set of objective functions supported by each PCE.</t>
      <t>This document defines extensions to the PCE communication Protocol (PCEP) to allow a PCE to indicate the set of objective functions it supports. Extensions are also defined so that a PCC can indicate in a path computation request the required objective function, and a PCE can report in a path computation reply the objective function that was used for path computation.</t>
      <t>This document defines objective function code types for six objective functions previously listed in the PCE requirements work, and provides the definition of four new metric types that apply to a set of synchronized requests. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='5541'/>
  <seriesInfo name='DOI' value='10.17487/RFC5541'/>
</reference>

<reference anchor='RFC6242' target='https://www.rfc-editor.org/info/rfc6242'>
  <front>
    <title>Using the NETCONF Protocol over Secure Shell (SSH)</title>
    <author fullname='M. Wasserman' initials='M.' surname='Wasserman'/>
    <date month='June' year='2011'/>
    <abstract>
      <t>This document describes a method for invoking and running the Network Configuration Protocol (NETCONF) within a Secure Shell (SSH) session as an SSH subsystem. This document obsoletes RFC 4742. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='6242'/>
  <seriesInfo name='DOI' value='10.17487/RFC6242'/>
</reference>

<reference anchor='RFC8446' target='https://www.rfc-editor.org/info/rfc8446'>
  <front>
    <title>The Transport Layer Security (TLS) Protocol Version 1.3</title>
    <author fullname='E. Rescorla' initials='E.' surname='Rescorla'/>
    <date month='August' year='2018'/>
    <abstract>
      <t>This document specifies version 1.3 of the Transport Layer Security (TLS) protocol. TLS allows client/server applications to communicate over the Internet in a way that is designed to prevent eavesdropping, tampering, and message forgery.</t>
      <t>This document updates RFCs 5705 and 6066, and obsoletes RFCs 5077, 5246, and 6961. This document also specifies new requirements for TLS 1.2 implementations.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8446'/>
  <seriesInfo name='DOI' value='10.17487/RFC8446'/>
</reference>

<reference anchor='RFC8341' target='https://www.rfc-editor.org/info/rfc8341'>
  <front>
    <title>Network Configuration Access Control Model</title>
    <author fullname='A. Bierman' initials='A.' surname='Bierman'/>
    <author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'/>
    <date month='March' year='2018'/>
    <abstract>
      <t>The standardization of network configuration interfaces for use with the Network Configuration Protocol (NETCONF) or the RESTCONF protocol requires a structured and secure operating environment that promotes human usability and multi-vendor interoperability. There is a need for standard mechanisms to restrict NETCONF or RESTCONF protocol access for particular users to a preconfigured subset of all available NETCONF or RESTCONF protocol operations and content. This document defines such an access control model.</t>
      <t>This document obsoletes RFC 6536.</t>
    </abstract>
  </front>
  <seriesInfo name='STD' value='91'/>
  <seriesInfo name='RFC' value='8341'/>
  <seriesInfo name='DOI' value='10.17487/RFC8341'/>
</reference>

<reference anchor='RFC3688' target='https://www.rfc-editor.org/info/rfc3688'>
  <front>
    <title>The IETF XML Registry</title>
    <author fullname='M. Mealling' initials='M.' surname='Mealling'/>
    <date month='January' year='2004'/>
    <abstract>
      <t>This document describes an IANA maintained registry for IETF standards which use Extensible Markup Language (XML) related items such as Namespaces, Document Type Declarations (DTDs), Schemas, and Resource Description Framework (RDF) Schemas.</t>
    </abstract>
  </front>
  <seriesInfo name='BCP' value='81'/>
  <seriesInfo name='RFC' value='3688'/>
  <seriesInfo name='DOI' value='10.17487/RFC3688'/>
</reference>




    </references>

    <references title='Informative References'>



<reference anchor='RFC7491' target='https://www.rfc-editor.org/info/rfc7491'>
  <front>
    <title>A PCE-Based Architecture for Application-Based Network Operations</title>
    <author fullname='D. King' initials='D.' surname='King'/>
    <author fullname='A. Farrel' initials='A.' surname='Farrel'/>
    <date month='March' year='2015'/>
    <abstract>
      <t>Services such as content distribution, distributed databases, or inter-data center connectivity place a set of new requirements on the operation of networks. They need on-demand and application-specific reservation of network connectivity, reliability, and resources (such as bandwidth) in a variety of network applications (such as point-to-point connectivity, network virtualization, or mobile back-haul) and in a range of network technologies from packet (IP/MPLS) down to optical. An environment that operates to meet these types of requirements is said to have Application-Based Network Operations (ABNO). ABNO brings together many existing technologies and may be seen as the use of a toolbox of existing components enhanced with a few new elements.</t>
      <t>This document describes an architecture and framework for ABNO, showing how these components fit together. It provides a cookbook of existing technologies to satisfy the architecture and meet the needs of the applications.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='7491'/>
  <seriesInfo name='DOI' value='10.17487/RFC7491'/>
</reference>

<reference anchor='RFC8453' target='https://www.rfc-editor.org/info/rfc8453'>
  <front>
    <title>Framework for Abstraction and Control of TE Networks (ACTN)</title>
    <author fullname='D. Ceccarelli' initials='D.' role='editor' surname='Ceccarelli'/>
    <author fullname='Y. Lee' initials='Y.' role='editor' surname='Lee'/>
    <date month='August' year='2018'/>
    <abstract>
      <t>Traffic Engineered (TE) networks have a variety of mechanisms to facilitate the separation of the data plane and control plane. They also have a range of management and provisioning protocols to configure and activate network resources. These mechanisms represent key technologies for enabling flexible and dynamic networking. The term "Traffic Engineered network" refers to a network that uses any connection-oriented technology under the control of a distributed or centralized control plane to support dynamic provisioning of end-to- end connectivity.</t>
      <t>Abstraction of network resources is a technique that can be applied to a single network domain or across multiple domains to create a single virtualized network that is under the control of a network operator or the customer of the operator that actually owns the network resources.</t>
      <t>This document provides a framework for Abstraction and Control of TE Networks (ACTN) to support virtual network services and connectivity services.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8453'/>
  <seriesInfo name='DOI' value='10.17487/RFC8453'/>
</reference>

<reference anchor='RFC8454' target='https://www.rfc-editor.org/info/rfc8454'>
  <front>
    <title>Information Model for Abstraction and Control of TE Networks (ACTN)</title>
    <author fullname='Y. Lee' initials='Y.' surname='Lee'/>
    <author fullname='S. Belotti' initials='S.' surname='Belotti'/>
    <author fullname='D. Dhody' initials='D.' surname='Dhody'/>
    <author fullname='D. Ceccarelli' initials='D.' surname='Ceccarelli'/>
    <author fullname='B. Yoon' initials='B.' surname='Yoon'/>
    <date month='September' year='2018'/>
    <abstract>
      <t>This document provides an information model for Abstraction and Control of TE Networks (ACTN).</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8454'/>
  <seriesInfo name='DOI' value='10.17487/RFC8454'/>
</reference>


<reference anchor='I-D.ietf-ccamp-otn-topo-yang' target='https://datatracker.ietf.org/doc/html/draft-ietf-ccamp-otn-topo-yang-17'>
   <front>
      <title>A YANG Data Model for Optical Transport Network Topology</title>
      <author fullname='Haomian Zheng' initials='H.' surname='Zheng'>
         <organization>Huawei Technologies</organization>
      </author>
      <author fullname='Italo Busi' initials='I.' surname='Busi'>
         <organization>Huawei Technologies</organization>
      </author>
      <author fullname='Xufeng Liu' initials='X.' surname='Liu'>
         <organization>IBM Corporation</organization>
      </author>
      <author fullname='Sergio Belotti' initials='S.' surname='Belotti'>
         <organization>Nokia</organization>
      </author>
      <author fullname='Oscar Gonzalez de Dios' initials='O. G.' surname='de Dios'>
         <organization>Telefonica</organization>
      </author>
      <date day='10' month='July' year='2023'/>
      <abstract>
	 <t>   This document describes a YANG data model to describe the topologies
   of an Optical Transport Network (OTN).  It is independent of control
   plane protocols and captures topological and resource-related
   information pertaining to OTN.  This model enables clients, which
   interact with a transport domain controller, for OTN topology-related
   operations such as obtaining the relevant topology resource
   information.


	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-ccamp-otn-topo-yang-17'/>
   
</reference>

<reference anchor='RFC4655' target='https://www.rfc-editor.org/info/rfc4655'>
  <front>
    <title>A Path Computation Element (PCE)-Based Architecture</title>
    <author fullname='A. Farrel' initials='A.' surname='Farrel'/>
    <author fullname='J.-P. Vasseur' initials='J.-P.' surname='Vasseur'/>
    <author fullname='J. Ash' initials='J.' surname='Ash'/>
    <date month='August' year='2006'/>
    <abstract>
      <t>Constraint-based path computation is a fundamental building block for traffic engineering systems such as Multiprotocol Label Switching (MPLS) and Generalized Multiprotocol Label Switching (GMPLS) networks. Path computation in large, multi-domain, multi-region, or multi-layer networks is complex and may require special computational components and cooperation between the different network domains.</t>
      <t>This document specifies the architecture for a Path Computation Element (PCE)-based model to address this problem space. This document does not attempt to provide a detailed description of all the architectural components, but rather it describes a set of building blocks for the PCE architecture from which solutions may be constructed. This memo provides information for the Internet community.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='4655'/>
  <seriesInfo name='DOI' value='10.17487/RFC4655'/>
</reference>

<reference anchor='RFC8342' target='https://www.rfc-editor.org/info/rfc8342'>
  <front>
    <title>Network Management Datastore Architecture (NMDA)</title>
    <author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'/>
    <author fullname='J. Schoenwaelder' initials='J.' surname='Schoenwaelder'/>
    <author fullname='P. Shafer' initials='P.' surname='Shafer'/>
    <author fullname='K. Watsen' initials='K.' surname='Watsen'/>
    <author fullname='R. Wilton' initials='R.' surname='Wilton'/>
    <date month='March' year='2018'/>
    <abstract>
      <t>Datastores are a fundamental concept binding the data models written in the YANG data modeling language to network management protocols such as the Network Configuration Protocol (NETCONF) and RESTCONF. This document defines an architectural framework for datastores based on the experience gained with the initial simpler model, addressing requirements that were not well supported in the initial model. This document updates RFC 7950.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8342'/>
  <seriesInfo name='DOI' value='10.17487/RFC8342'/>
</reference>

<reference anchor='RFC6805' target='https://www.rfc-editor.org/info/rfc6805'>
  <front>
    <title>The Application of the Path Computation Element Architecture to the Determination of a Sequence of Domains in MPLS and GMPLS</title>
    <author fullname='D. King' initials='D.' role='editor' surname='King'/>
    <author fullname='A. Farrel' initials='A.' role='editor' surname='Farrel'/>
    <date month='November' year='2012'/>
    <abstract>
      <t>Computing optimum routes for Label Switched Paths (LSPs) across multiple domains in MPLS Traffic Engineering (MPLS-TE) and GMPLS networks presents a problem because no single point of path computation is aware of all of the links and resources in each domain. A solution may be achieved using the Path Computation Element (PCE) architecture.</t>
      <t>Where the sequence of domains is known a priori, various techniques can be employed to derive an optimum path. If the domains are simply connected, or if the preferred points of interconnection are also known, the Per-Domain Path Computation technique can be used. Where there are multiple connections between domains and there is no preference for the choice of points of interconnection, the Backward-Recursive PCE-based Computation (BRPC) procedure can be used to derive an optimal path.</t>
      <t>This document examines techniques to establish the optimum path when the sequence of domains is not known in advance. The document shows how the PCE architecture can be extended to allow the optimum sequence of domains to be selected, and the optimum end-to-end path to be derived through the use of a hierarchical relationship between domains. This document is not an Internet Standards Track specification; it is published for informational purposes.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='6805'/>
  <seriesInfo name='DOI' value='10.17487/RFC6805'/>
</reference>

<reference anchor='RFC7446' target='https://www.rfc-editor.org/info/rfc7446'>
  <front>
    <title>Routing and Wavelength Assignment Information Model for Wavelength Switched Optical Networks</title>
    <author fullname='Y. Lee' initials='Y.' role='editor' surname='Lee'/>
    <author fullname='G. Bernstein' initials='G.' role='editor' surname='Bernstein'/>
    <author fullname='D. Li' initials='D.' surname='Li'/>
    <author fullname='W. Imajuku' initials='W.' surname='Imajuku'/>
    <date month='February' year='2015'/>
    <abstract>
      <t>This document provides a model of information needed by the Routing and Wavelength Assignment (RWA) process in Wavelength Switched Optical Networks (WSONs). The purpose of the information described in this model is to facilitate constrained optical path computation in WSONs. This model takes into account compatibility constraints between WSON signal attributes and network elements but does not include constraints due to optical impairments. Aspects of this information that may be of use to other technologies utilizing a GMPLS control plane are discussed.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='7446'/>
  <seriesInfo name='DOI' value='10.17487/RFC7446'/>
</reference>




    </references>


<section anchor="examples"><name>Examples</name>

<t>This section contains examples of use of the model with RESTCONF
<xref target="RFC8040"/> and JSON encoding.</t>

<t>These examples show how path computation can be requested for the tunnels configuration provided in Appendix A of <xref target="I-D.ietf-teas-yang-te"/>.</t>

<section anchor="basic-example"><name>Basic Path Computation</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 12.1 of of <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>In this case, the TE Tunnel has only one primary path with no specific constraints.</t>

<figure><artwork type="ascii-art"><![CDATA[
POST /restconf/operations/ietf-te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="basic.json"><![CDATA[
{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 1,
          "tunnel-name": "Example_LSP_Tunnel_A_2",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "192.0.2.1",
          "destination": "192.0.2.4",
          "bidirectional": "false",
          "signaling-type": "te-types:path-setup-rsvp"
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="transient-state-example"><name>Path Computation with transient state</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 12.1 of of <xref target="I-D.ietf-teas-yang-te"/> requesting some transient state to be reported within the operational datastore, as described <xref target="temp-state"/>.</t>

<t>In this case, the TE Tunnel has only one primary path with no specific constraints.</t>

<figure><artwork type="ascii-art"><![CDATA[
POST /restconf/operations/ietf-te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="transient-state.json"><![CDATA[
{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 2,
          "tunnel-name": "Example_LSP_Tunnel_A_2",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "192.0.2.1",
          "destination": "192.0.2.4",
          "bidirectional": "false",
          "signaling-type": "te-types:path-setup-rsvp",
          "requested-state": {
            "transaction-id": "example"
          }
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="global-path-constraint-example"><name>Path Computation with Global Path Constraint</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 12.3 of of <xref target="I-D.ietf-teas-yang-te"/>. The 'named path constraint' is created in section 12.2 of <xref target="I-D.ietf-teas-yang-te"/> applies to this path computation request.</t>

<figure><artwork type="ascii-art"><![CDATA[
POST /restconf/operations/ietf-te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="global-path-constraint.json"><![CDATA[
{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 3,
          "tunnel-name": "Example_LSP_Tunnel_A_4_1",
          "path-name": "Simple_LSP_1",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "192.0.2.1",
          "destination": "192.0.2.4",
          "bidirectional": "false",
          "signaling-type": "path-setup-rsvp",
          "named-path-constraint": "max-hop-3",
          "requested-state": {}
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="tunnel-path-constraint-example"><name>Path Computation with Per-tunnel Path Constraint</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 12.4 of of <xref target="I-D.ietf-teas-yang-te"/>, using a per tunnel path constraint.</t>

<figure><artwork type="ascii-art"><![CDATA[
POST /restconf/operations/ietf-te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="tunnel-path-constraint.json"><![CDATA[
{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 4,
          "tunnel-name": "Example_LSP_Tunnel_A_4_2",
          "path-name": "path1",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "192.0.2.1",
          "destination": "192.0.2.4",
          "bidirectional": "false",
          "signaling-type": "te-types:path-setup-rsvp",
          "path-metric-bounds": {
            "path-metric-bound": [
              {
                "metric-type": "te-types:path-metric-hop",
                "upper-bound": "3"
              }
            ]
          }
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="path-computation-result"><name>Path Computation result</name>

<t>This example reports the output of the path computation RPC request described in <xref target="tunnel-path-constraint-example"/>.</t>

<figure><artwork type="ascii-art"><![CDATA[
HTTP/1.1 200 OK
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="computed-path.json"><![CDATA[
{
  "ietf-te:output": {
    "path-compute-result": {
      "ietf-te-path-computation:response": [
        {
          "response-id": 3,
          "computed-paths-properties": {
            "computed-path-properties": [
              {
                "k-index": "1",
                "path-properties": {
                  "path-route-objects": {
                    "path-route-object": [
                      {
                        "index": "1",
                        "numbered-node-hop": {
                          "node-id": "192.0.2.2"
                        }
                      },
                      {
                        "index": "2",
                        "numbered-node-hop": {
                          "node-id": "192.0.2.4"
                        }
                      }
                    ]
                  }
                }
              }
            ]
          },
          "tunnel-ref": "Example_LSP_Tunnel_A_4_1",
          "primary-path-ref": "path1"
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="path-computation-with-primary-and-secondary-paths"><name>Path Computation with Primary and Secondary Paths</name>

<t>This section contains examples of use of the model to compute primary and secondary paths described in section 12.6 of <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>These examples consider the cases where:
- primary and reverse paths are unidirectional and not co-routed (example-1);
- primary and reverse paths are bidirectional (example-3);
- primary and reverse paths are unidirectional and co-routed (example-4).</t>

<figure><artwork type="ascii-art"><![CDATA[
POST /restconf/operations/ietf-te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>

<figure><sourcecode type="json" markers="false" name="primary-secondary-paths.json"><![CDATA[
{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 1,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "primary-1 (fwd)",
            "primary-path": {}
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 2,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "primary-2 (rev)",
            "primary-reverse-path": {
              "primary-path-request-ref": 1
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.3",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 3,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-1 (fwd)",
            "secondary-path": {
              "primary-path": [
                {
                  "path-request-ref": 1
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.1"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 4,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-2 (fwd)",
            "secondary-path": {
              "primary-path": [
                {
                  "path-request-ref": 1
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.5",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 5,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-3 (rev)",
            "secondary-reverse-path": {
              "primary-reverse-path": [
                {
                  "path-request-ref": 2
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.5"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.4",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 6,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-4 (rev)",
            "secondary-reverse-path": {
              "primary-reverse-path": [
                {
                  "path-request-ref": 2
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.4"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.3",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 7,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-5 (rev)",
            "secondary-reverse-path": {
              "primary-reverse-path": [
                {
                  "path-request-ref": 2
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.3"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.1",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 8,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-3",
            "path-name": "primary-1 (bidir)",
            "primary-path": {}
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 9,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-3",
            "path-name": "secondary-1 (bidir)",
            "secondary-path": {
              "primary-path": [
                {
                  "path-request-ref": 8
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.1"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 10,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-3",
            "path-name": "secondary-2 (bidir)",
            "secondary-path": {
              "primary-path": [
                {
                  "path-request-ref": 8
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.5",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 11,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-4",
            "path-name": "primary-1 (fwd)",
            "primary-path": {
              "co-routed": [null]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 12,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-4",
            "path-name": "primary-2 (rev)",
            "primary-reverse-path": {
              "primary-path-request-ref": 11
            }
          }
        },
        {
          "request-id": 13,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-4",
            "path-name": "secondary-1 (fwd)",
            "secondary-path": {
              "primary-path": [
                {
                  "co-routed": [null],
                  "path-request-ref": 11
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.1"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 14,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-4",
            "path-name": "secondary-2 (fwd)",
            "secondary-path": {
              "primary-path": [
                {
                  "co-routed": [null],
                  "path-request-ref": 11
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.5",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 15,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-3 (rev)",
            "secondary-reverse-path": {
              "primary-reverse-path": [
                {
                  "path-request-ref": 12
                }
              ]
            }
          }
        },
        {
          "request-id": 16,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-4 (rev)",
            "secondary-reverse-path": {
              "primary-reverse-path": [
                {
                  "path-request-ref": 12
                }
              ]
            }
          }
        }
      ],
      "ietf-te-path-computation:tunnel-attributes": [
        {
          "tunnel-name": "example-1",
          "source": "192.0.2.1",
          "destination": "192.0.2.5",
          "bidirectional": "false"
        },
        {
          "tunnel-name": "example-3",
          "source": "192.0.2.1",
          "destination": "192.0.2.5",
          "bidirectional": "true"
        },
        {
          "tunnel-name": "example-4",
          "source": "192.0.2.1",
          "destination": "192.0.2.5",
          "bidirectional": "false"
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
</section>
<section numbered="false" anchor="acknowledgments"><name>Acknowledgments</name>

<t>The authors would like to thank Karthik Sethuraman, Igor Bryskin and Xian Zhang for
participating in the initial discussions that have triggered this
work and providing valuable insights.</t>

<t>The authors would like to thank the authors of the TE tunnel YANG
data model <xref target="I-D.ietf-teas-yang-te"/>, in particular Igor Bryskin, Vishnu Pavan
Beeram, Tarek Saad and Xufeng Liu, for their inputs to the
discussions and support in having consistency between the Path
Computation and TE tunnel YANG data models.</t>

<t>The authors would like to thank Adrian Farrel, Dhruv Dhody, Igor
Bryskin, Julien Meuric and Lou Berger for their valuable input to the
discussions that has clarified that the path being set up is not
necessarily the same as the path that has been previously computed
and, in particular to Dhruv Dhody, for his suggestion to describe the
need for a path verification phase to check that the actual path
being set up meets the required end-to-end metrics and constraints.</t>

<t>The authors would like to thank Aihua Guo, Lou Berger, Shaolong Gan,
Martin Bjorklund and Tom Petch for their useful comments on how to
define XPath statements in YANG RPCs.</t>

<t>The authors would like to thank Haomian Zheng, Yanlei Zheng, Tom
Petch, Aihua Guo and Martin Bjorklund for their review and valuable
comments to this document.</t>

<t>Previous versions of document were prepared using 2-Word-v2.0.template.dot.</t>

<t>This document was prepared using kramdown.</t>

</section>

    <section anchor="contributors" numbered="false" toc="include" removeInRFC="false">
        <name>Contributors</name>
    <contact initials="D." surname="Ceccarelli" fullname="Daniele Ceccarelli">
      <organization>Cisco</organization>
      <address>
        <email>daniele.ietf@gmail.com</email>
      </address>
    </contact>
    <contact initials="V." surname="Lopez" fullname="Victor Lopez">
      <organization>Nokia</organization>
      <address>
        <email>victor.lopez@nokia.com</email>
      </address>
    </contact>
    <contact initials="R." surname="Vilalta" fullname="Ricard Vilalta">
      <organization>CTTC</organization>
      <address>
        <email>ricard.vilalta@cttc.es</email>
      </address>
    </contact>
    <contact initials="M." surname="Scharf" fullname="Michael Scharf">
      <organization>Nokia</organization>
      <address>
        <email>michael.scharf@gmail.com</email>
      </address>
    </contact>
    <contact initials="D." surname="Beller" fullname="Dieter Beller">
      <organization>Nokia</organization>
      <address>
        <email>dieter.beller@nokia.com</email>
      </address>
    </contact>
    <contact initials="F." surname="Lazzeri" fullname="Francesco Lazzeri">
      <organization>Individual</organization>
      <address>
      </address>
    </contact>
    <contact initials="G." surname="Bruno" fullname="Gianmarco Bruno">
      <organization>Ericsson</organization>
      <address>
        <email>gianmarco.bruno@ericsson.com</email>
      </address>
    </contact>
    <contact initials="Y." surname="Lee" fullname="Young Lee">
      <organization>Samsung Electronics</organization>
      <address>
        <email>younglee.tx@gmail.com</email>
      </address>
    </contact>
    <contact initials="C." surname="Perocchio" fullname="Carlo Perocchio">
      <organization>Ericsson</organization>
      <address>
        <email>carlo.perocchio@ericsson.com</email>
      </address>
    </contact>
    <contact initials="O." surname="Dugeon" fullname="Olivier Dugeon">
      <organization>Orange Labs</organization>
      <address>
        <email>olivier.dugeon@orange.com</email>
      </address>
    </contact>
    <contact initials="J." surname="Meuric" fullname="Julien Meuric">
      <organization>Orange Labs</organization>
      <address>
        <email>julien.meuric@orange.com</email>
      </address>
    </contact>
    </section>

  </back>

<!-- ##markdown-source:
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
1mB6GFkNW3q5YS6WHUQ7FwGiWYs2jZyHPNdg90RWnUTrsnhXLJtZ5h/CedPA
HywqeNfj2W5BNCS81bBARDB04X97DhkW2nLQ/PzzvwDNPr3/ENgbTh174sgP
n3/y8BPD99Ar9EGgLk2GPCzT0UmD66RxQw6A+RW4WYB5WMM08hhmUsJR7WQC
YwtAY6cAOk+wAcOAM+EYlvx0A5IB/rQrYRZ9MeHDqzVOAVBNLlZV0wLU6/xm
QuLV0pO8Mwv0zjjegG38miVvCeQXYnz2h0fv38+yJ5saZfQVKAkTe1CooZp1
MS9xAouiBWWaxC4fFce0XjTKkjUfOhxtV4Jku1vRTx3gaGYdAbsAqz+dHpN9
OwWL+Go9rdrVFDuQlgNriZN4Afoe8hYQdNWsq7rV53W2+wKFk2lD3imw2Fv4
/vjPew4pmP/ECGFW79zhCIyH63USoJqR3FQkc0dRlr8DkuRn5bJsb+g8wjUM
ZprBZq+uG9antIAQxc4Qc5DVlT7ldKkZwfAWEWYNp+LZkrRd4OR9tUuFX41O
uyrgUGzyWlQWdxA0OAjgj0snHE0bADc+d4aNPSc5XP5E5+3arTkcTfmqopM/
GL5COXFxyfLB206aqu1mtULCsUrBm8GqV6jJCu5yMNl9YtVnwcJfBqMhLJsq
a4p2ullPoOuyaKEjzo1nC/+wai2B2WItZAlFkeJZECSWmm5PAjtZhtfKvGYu
X1PHQxSXM9zdzJjAlyDYmF7C1sxvYJtoy6RnXCI8mgC0vWFw7IprDPJxWSJE
4BJSOlhmn6NawWITeuRqwnSkw2A7otBNq9XyZofwncARoJarHyPFEOGsaUol
Db6ogC7AbKBDgzKUr274lFmzNnNWbVhMgJ5C/EgkUialHJwNKAfwawlzLfio
ynaAdXeo7/lmRXsix10uU1AkxWP64aePHqE6hHxkDmLfvQ1w5HjB79XB+tKc
xHjovNyznBYMRBB4tR89xGPsF1p3+d/QtutbRXNwaNSRvUBINYbdrCaF081X
+QXTEYU8CCCYzKFS3Y2C+uDhfSHS736XvS5Q5omEQt9Akb0tbsAQqhdNtvPs
z6evdyb8XzTQ8e9XJ//656evTo7x79NvD7/7zv5xR1qcfvviz98du79cz6MX
z56dPD/mzvBt5n11Z+fZ4V92mFd2Xrx8/fTF88PvdrpUwMOVXSGkca5rllTN
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
YUeghzo3QYvdSfMC+JiSEFYomBCuNIFU1usYwHDqS2TdIMae5I6XZKIfkuIV
xterC+nhS/4kqtBIHhQekc9qy8sdkaNf8ndoByMtiml1fu7q99EKmfcZ3SWS
V/rhbvbzRSR1Ox0H2y/CXvdsFxTxlNE1ZyRL3JF5jfr5zYSlyGIjzzYUYlGf
VYCZwipQZpHDKA1Dl8WCNAxq0awqoLnQKOEe4+mNopgzlBq0TYWhot71Sf8s
SInh858acnVLl+Ahb5xVhQ/t8Dzn4loEaIezUFDWG2VHwbrU5Y87JnGS3eU2
+7lwjfMiOvUN5oOrdnqZ40u2V2XzlqL1s2/qarMGFfv01XffSGYUUviN3oB6
aTlvXG4k0mQA8xqFD5nL/Ge3pGRfZpGBGZI4IkBoW4JO/y5fyuVoeOyQ8tVc
Gg+JHsiIXvYcavEbWVdfYwqTGtOF2XDt2onHuCJvzKtJ5pl0WmN2EL2Nv0uM
FC11EbNOVzKx1z2FXOnCk1Vt99QzKgCMxBlIysvqCnvIg5eKeHVh3n3p/PVa
LbBXCp3qCTF9LUM7V1XO9UezsihJZbPA31bXaOBPWMajX81dfORXnJD/PJyL
OdXVLfAwM3s5XugkwIOAtBDnGwc5gjwrFOBjYH5jvNzutNgBLXknyiC0D67K
i0t6CIyqjkrNHNOnnb61Z18WqEPL3R8ir/F5h0sVBmiv2D9gN0tTXsE4pP9H
M4FTxLYhncqebG9bXqx1kQmV1lvSeT+kCbDKpN2QoCu36PcRt7+b7xn0uy4X
clWN74r3/rqVB5Jp61M9vGT1n+pk9Yke1MHOcHp2/eW9T76hLv/nVjfwyHH/
G9v3t+oGrrqBR6MHTKN/pOoGvij6kOIGJxI1RNqWvfWZX1bo7eopeTA1bf0A
sPOOPiKSdUDB4TskFevRFvvWCs2uC1IGyPFEz7vs46hFnV9jkE0jl9+AADmP
sZVUPlAvpGMyEE61+9k3Z/vi6KM0C7DbSnRQsr9qoo6GjxoXOXYOwPwIKeAY
gkQjGkkNCiV58tUxni/xGKfAJBjHJKq7e8fYb1/8gsmArApmAwJ0xGxkFqTk
iyoC5j+2vZd1J2Unk11UrCa4SCtTFYIVmUjNIpfVbdnNnirkyKlC3pI92ebZ
vBkLh2o9sjSbM94Cu0QbWcU9q5l0hzfn+SuiC2lS7Fj13QE61Yc+9HWsnuVt
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
3Lwr7CNW0w6+sl/YY3CZ/6gY2ONZ1ywMaEmHrmjQJn3d7+lrrR0ojHRcXwhi
XCxZprfskP3oNe6JJcsUBp0opwDDZJSTP1g6yslrF4ty6mKjopyi2ESinOLY
9CMTjXLKjFYXeW3jkJGfG5eQx4Ps3ehm/j5M3+jqhuZUjN/oBi3NfPpvdHs7
pW50452GbnTTUw6uNvum7F9sxhHpu9Edg3ov5krhGXOj25l0+kY3Mu3kje7Q
xOM3ukO94je68V7DN7q9/XpudOP9RtzoxjuOvtHNwqUKb3Sz7gJFbnTjWAze
6I6Y9fCO0je6+sdMO1ijmLpGvuu52yZLmknRtrdRqynVNPONqMHG5jPkqU5O
Y7SzWtpHknAomnSScOifVRIOq9UNZeMIyDg6G0eEpiP0hLBLkHpDmY/+vJIv
OLqfvql3wby5e6dDCbMQidcco5qmTKExCY+rTRvLeFwXzWbZupzHdWXLV1DG
Y/5zalMed1pNe7IedzXJurL1cTnr19RV2Aj0krCpagmYgV2g7gf18kM/+TFE
5fNo4wB2VESZZv2sG0hZ6BRPJZPW5HTffD7fXG2WOXGAfawQqL4xJBMvKqKD
jHlckcVEfF2N0UyDHj1PLvrnctNVo3smEn2IMTiLsatje/Y8z+h2sb1iLzUS
k0+YM7GZD1s2yWlvt3pdeyeN+ag1G7aCUpiPRjxlG8Uw915wDOGuGwcRCylc
RkfVpgAkzbEPssuCWY020UIKb2utxfuPN9yC/tvYcB9kzKXoNGTeBHhuZ+L1
TnLcHHX/rQ2/D7QAA1ptYQwmqTXWLkwCGGsiZlG+3MpajIPYynDM+hZeQHzw
4g92UINsxyEDhqf9Q47PMTZoMIsPMEezHlpuISdSJmpgqyLTpa3VrtkK7dOG
a9T0oyOg14aNGp0DxmzKUOUB03Ztqp/5xAxcsI62nfEo7u18emzi4OjvXnlm
MZYdRfixlPZJm8XuXbvNtR+f+TjtKNB3MOlLgJilVdR1VVMxnEGjzDWNu4+h
Azfhoo5rc/5EVTHdHoO0mja/WrPUozAELMw7zbF8Z3kV7ljdty7yRjnOYoqi
rLstKNP3+rdTd8b272Y+t7/aVOKeT8Hpj0GSeX987zK1C9Kk2u4H7eXjtkOk
QNu84XGgftL1EONBoFGMsy7wGM4KeMzRwQF6jVfUSRYM2RL/eV4uW0ns4Twd
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
cF7j9QFTYthmPAADtldrwNoiluV7U1UFwjZkKyszn5XZu42VsR0gw8rgH38S
89LQQ6Jv9RrLqcNJKjQyp8gxUeJBvZBngSbxJRgzkybxrFY0GJ/dLSS7Wjmm
n76Vw+a0aprpc9k0TpMqmC69dJpIx9Jtj23LpL3Kt2V00lVjZ2+cdkUaCK+3
ve29/23RdkJkfJUYCpFy1shUqPTUSjORp8AWvJGqI01b8o22ZtNGCnAGNnAU
XJF+O6W82K8TVqIlLtcgs0Qx6rKmrsYucivIVh1VE6+aMUITcClCNUGFLqVN
PoENeb8l7V6vAqGiHJShlKxGw+otflh7txqW+4tPro8dbYvFWqpMpXMVxSPh
OVx1+3xbraWLs8OGataYX3YpRRgKzy0G6uYhtr3t6QjlZrC/NdU6N29Bp6a5
1rzGJw1i+tZxijygZJeV8ivpiL6/vtYxaDAxwjAvJIt0R0JhRuS1ITbEWzo7
mz/Vd2e4Jfmzu02edZDiIGNvc4kd4iV1id0HEOrQ0BUAc1Vv0uJgnYLpt1xm
ofo73sbJ5Wiz2FgzDdamtGB7gitkfDgzF7qOP7n0r12rs96sI0pmg9tD/zZd
oeVasONanRuvAO4Fzbm4tHD3Lj3iSRynLnzh+Sy4ZmTbjcTEHTj+FmLS8zbA
HpSLiZ6X5GK2vdQoECacQrPx9yNpu8srae5I4CIlLc9xKzNJZs5crZS5necq
N71KKi028s+n71VydxpJZOG1VUT2vidD7g6BfRv16q3Ua9nVy7WnXjr1ery8
6vX4HtVrt8RTcudwV6qZ1fAu6tZbqZts6ZLkB6Bue8urbk/uUd32Vur20NTN
FVpdOnVb4r3Zj/eobo9X6vbQ1K14AruE6lZyULUM6vb066tbwbiUxmYpXL+K
zj6ITf2zby4oRsysRFS+7bb+6coSy5arqNnXVrCd7XvUsN5Kw7yl17BV4OyO
GraAg+hC4OJuB9EF3VIpCCh+UTaZfMfSv7yCtYCj64aCtdCj68qz6/m5tIBj
1xou3euxa1F13QLcgPPE5dU6uPI0+eeu5moBB7SNFfEeDmhXirhySItNl0ER
V0e5BYW7c7R7/llYnfAtdBbkr7nVLc8vLjC2VZFkbN2tK+H97S+9WZaj7NJb
E4ErIdW+L7s4Ugl3+Q6U2hcAvyFTlfzwL3e9oiHVxXQ4Uu2yBnUp1xzZEV/j
8PaHZ1F8OQlGDH8nbkN4fjYbx0kqoOMm4ZlAUPWjM+83P5mNwzNvEMzGWeKf
+1HbOziNE+95cp2ehYSn7P0e+pH3nzHia5/EyfoaY9+GQBpe0BWYKARGingo
YTrM0pTg4HLwb1CZ01Mkme4Ur68Roif2zShV2A+CigvgzzQ8HQtwk7oBzLTv
xVWTHKYSIczW13KE7MrrxjAODdRXZ0Lb+2eYjqPM++BfYGmU50EArGp7R34S
AOt8f8Rsyk4CGMfbMGvLS9BhwqisEoMUiNHYQ1dfsikDHEfIKOQD3VhJZ1Q5
RKJw47Dw3g1evMgv6eDz5mB1NPBG7NsfJTi5r/0kCSZt7+U4yS7g//HomuUA
Bit58GuGOIPeuyBLwiG9+22cec+DBOZVG682jXg70zVuIRapNwROc31UBSNJ
1ziPAwLlCWZeNkWsiiiera9FAWJWwgOT6xxf09cusqtuCWl+CksOYjBOrhVs
4/oaUG1PNBBojBpHwkimILApA0XG6kYSDyYKBPqaz2+GtS1HNpyOsYQE3nQa
B8OzfGT+cJb5E1E51RjheRCIK6240oWoJUE0QlhsLLPDt34V4rMB/VM7veE4
871fsritTVbbG4z9GAvEeb+Avq+vvUNuRN7zP0ApJ1nE0nwUn3sfgtlwrM1t
lgYn2YSKXRG+JowWkeoQJpuv+Xu/000yAlTgJqEA3kfY6EYkv/Hjc7Y3oExt
799+NAlC+dcR3j0iqtr52IjcwhhyqlEQEPUzGinhXF9TY5BIJgbG8QchPDiz
LLNY1UkCIVwixCvIF2HWC5iCXudfcTLqXOBCgsBPiFvfHcWzrroplz/up/bT
Z2BPRvFlBK3/D79FIe54uwIA

-->

</rfc>

