<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.17 (Ruby 2.7.0) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc comments="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-teas-yang-path-computation-21" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="Yang for Path Computation">A YANG Data Model for requesting path computation</title>

    <author initials="I." surname="Busi" fullname="Italo Busi" role="editor">
      <organization>Huawei Technologies</organization>
      <address>
        <email>italo.busi@huawei.com</email>
      </address>
    </author>
    <author initials="S." surname="Belotti" fullname="Sergio Belotti" role="editor">
      <organization>Nokia</organization>
      <address>
        <email>sergio.belotti@nokia.com</email>
      </address>
    </author>
    <author initials="O." surname="Gonzalez de Dios" fullname="Oscar Gonzalez de Dios">
      <organization>Telefonica</organization>
      <address>
        <email>oscar.gonzalezdedios@telefonica.com</email>
      </address>
    </author>
    <author initials="A." surname="Sharma" fullname="Anurag Sharma">
      <organization>Google</organization>
      <address>
        <email>ansha@google.com</email>
      </address>
    </author>
    <author initials="Y." surname="Shi" fullname="Yan Shi">
      <organization>China Unicom</organization>
      <address>
        <email>shiyan49@chinaunicom.cn</email>
      </address>
    </author>

    <date year="2023" month="May" day="18"/>

    
    <workgroup>TEAS Working Group</workgroup>
    

    <abstract>


<t>There are scenarios, typically in a hierarchical Software-Defined
   Networking (SDN) context, where the topology information provided by
   a Traffic Engineering (TE) network provider may be insufficient for
   its client to perform multi-domain path computation. In these cases the
   client would need to request the TE network provider to compute some
   intra-domain paths to be used by the client to choose the optimal multi-domain paths.</t>

<t>This document provides a mechanism to request path computation by augmenting the Remote Procedure Calls (RPCs) defined in RFC YYYY.</t>

<t>[RFC EDITOR NOTE: Please replace RFC YYYY with the RFC number of
   draft-ietf-teas-yang-te once it has been published.</t>

<t>Moreover, this document describes some use cases where the path
   computation request, via YANG-based protocols (e.g., NETCONF or
   RESTCONF), can be needed.</t>



    </abstract>



  </front>

  <middle>


<section anchor="intro"><name>Introduction</name>

<t anchor="pc-model">There are scenarios, typically in a hierarchical Software-Defined
   Networking (SDN) context, where the topology information provided by
   a Traffic Engineering (TE) network provider may be insufficient for
   its client to perform multi-domain path computation. In these cases the
   client would need to request the TE network provider to compute some
   intra-domain paths that could be used together with its topology information
   to compute the multi-domain path.</t>

<t>These types of scenarios can be applied to different interfaces in
   different reference architectures:</t>

<t><list style="symbols">
  <t>Application-Based Network Operations (ABNO) control interface
<xref target="RFC7491"/>, in which an Application Service Coordinator can request the
ABNO controller to take in charge path calculation (see Figure 1
in <xref target="RFC7491"/>).</t>
  <t>Abstraction and Control of TE Networks (ACTN) <xref target="RFC8453"/>, where a
controller hierarchy is defined.
In the ACTN context, path computation is needed on the interface
between Customer Network Controller (CNC)  and Multi-Domain
Service Coordinator (MDSC), called CNC-MDSC Interface (CMI),
and on the interface between MSDC and Provisioning Network
Controller (PNC), called MDSC-PNC Interface  (MPI). 
<xref target="RFC8454"/> describes an information model for the Path
Computation request.  <vspace blankLines='1'/>
Multiple protocol solutions can be used for communication between
different controller hierarchical levels. This document assumes that
the controllers are communicating using YANG-based protocols (e.g.,
NETCONF <xref target="RFC6241"/> or RESTCONF <xref target="RFC8040"/>).  <vspace blankLines='1'/>
Path Computation Elements (PCEs), controllers and orchestrators
perform their operations based on Traffic Engineering Databases
(TED). Such TEDs can be described, in a technology agnostic way, with
the YANG data model for TE Topologies <xref target="RFC8795"/>. Furthermore, the
technology specific details of the TED are modelled in the technology
specific topology models, e.g., the <xref target="I-D.ietf-ccamp-otn-topo-yang"/> for Optical Transport
Network (OTN) Optical Data Unit (ODU) technologies, which augment the
common TE topology model in <xref target="RFC8795"/>.  <vspace blankLines='1'/>
The availability of such topology models allows the provisioning of
the TED using YANG-based protocols (e.g., NETCONF or RESTCONF).
Furthermore, it enables a PCE/controller performing the necessary
abstractions or modifications and offering this customized topology
to another PCE/controller or high level orchestrator.  <vspace blankLines='1'/>
The tunnels that can be provided over the networks described with the
topology models can be also set-up, deleted and modified via YANG-
based protocols (e.g., NETCONF or RESTCONF) using the TE tunnel YANG
data model <xref target="I-D.ietf-teas-yang-te"/>.  <vspace blankLines='1'/>
This document defines a YANG data model <xref target="RFC7950"/> that augments the RPC defined in <xref target="I-D.ietf-teas-yang-te"/>. The use of this RPC is complimentary to the configuration of a TE tunnel path in "compute-only" mode, as described in <xref target="I-D.ietf-teas-yang-te"/>.  <vspace blankLines='1'/>
The YANG data model definition does not make any assumption about
whether that the client or the server implement a "PCE"
functionality, as defined in <xref target="RFC4655"/>, and the Path Computation
Element Communication Protocol (PCEP) protocol, as defined in
<xref target="RFC5440"/>.  <vspace blankLines='1'/>
Moreover, this document describes some use cases where a path
computation request, via YANG-based protocols (e.g., NETCONF or
RESTCONF), can be needed.  <vspace blankLines='1'/>
The YANG data model defined in this document conforms to the Network
Management Datastore Architecture <xref target="RFC8342"/>.</t>
</list></t>

<section anchor="terminology"><name>Terminology</name>

<t>TED:</t>

<ul empty="true"><li>
  <t>The traffic engineering database is a collection of all TE
   information about all TE nodes and TE links in a given network.</t>
</li></ul>

<t>PCE:</t>

<ul empty="true"><li>
  <t>A Path Computation Element (PCE) is an entity that is capable of
   computing a network path or route based on a network graph, and of
   applying computational constraints during the computation.  The PCE
   entity is an application that can be located within a network node or
   component, on an out-of-network server, etc.  For example, a PCE
   would be able to compute the path of a TE Label Switched Path (LSP)
   by operating on the TED and considering bandwidth and other
   constraints applicable to the TE LSP service request. <xref target="RFC4655"/>.</t>
</li></ul>

<t>Domain:</t>

<ul empty="true"><li>
  <t>TE information is the data relating to nodes and TE links
   that is used in the process of selecting a TE path.  TE information
   is usually only available within a network.  We call such a zone of
   visibility of TE information a domain.  An example of a domain may be
   an IGP area or an Autonomous System. <xref target="RFC7926"/></t>
</li></ul>

<t>The terminology for describing YANG data models is found in
   <xref target="RFC7950"/>.</t>

</section>
<section anchor="tree-diagram"><name>Tree Diagram</name>

<t>Tree diagrams used in this document follow the notation defined in
   <xref target="RFC8340"/>.</t>

</section>
<section anchor="prefixes-in-data-node-names"><name>Prefixes in Data Node Names</name>

<t>In this document, names of data nodes and other data model objects
   are prefixed using the standard prefix associated with the
   corresponding YANG imported modules, as shown in <xref target="tab-prefix"/>.</t>

<texttable title="Prefixes and corresponding YANG modules" anchor="tab-prefix">
      <ttcol align='left'>Prefix</ttcol>
      <ttcol align='left'>YANG module</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>te-types</c>
      <c>ietf-te-types</c>
      <c>[RFCZZZZ]</c>
      <c>te</c>
      <c>ietf-te</c>
      <c>[RFCYYYY]</c>
      <c>te-pc</c>
      <c>ietf-te-path-computation</c>
      <c>RFCXXXX</c>
</texttable>

<t>RFC Editor Note:
Please replace XXXX with the RFC number assigned to this document.
Please replace YYYY with the RFC number of <xref target="I-D.ietf-teas-yang-te"/> once it has been published.
Please replace ZZZZ with the RFC number of <xref target="I-D.ietf-teas-rfc8776-update"/> once it has been published.
Please remove this note.</t>

</section>
</section>
<section anchor="use-cases"><name>Use Cases</name>

<t>This section presents some use cases, where a client needs to request
   underlying SDN controllers for path computation.</t>

<t>The use of the YANG data model defined in this document is not
   restricted to these use cases but can be used in any other use case
   when deemed useful.</t>

<t>The presented uses cases have been grouped, depending on the
   different underlying topologies: Packet/Optical Integration (<xref target="poi-uc"/>);
   multi-domain Traffic Engineered (TE) Networks (<xref target="md-uc"/>); and Data Center
   Interconnections (<xref target="dci-uc"/>). Use cases in <xref target="brpc-uc"/> and <xref target="hpce-uc"/>
   respectively present how to
   apply this YANG data model for standard multi-domain PCE i.e.
   Backward Recursive Path Computation <xref target="RFC5441"/> and Hierarchical PCE
   <xref target="RFC6805"/>.</t>

<section anchor="poi-uc"><name>Packet/Optical Integration</name>

<t>In this use case, an optical domain is used to provide connectivity
   to some nodes of a packet domain (see <xref target="fig-poi-uc"/>).</t>

<figure title="Packet/Optical Integration use case" anchor="fig-poi-uc"><artwork type="ascii-art" name="poi-use-case.txt"><![CDATA[
                                +----------------+
                                |                |
                                | Packet/Optical |
                                |  Coordinator   |
                                |                |
                                +---+------+-----+
                                    |      |
                       +------------+      |
                       |                   +-----------+
                +------V-----+                         |
                |            |                  +------V-----+
                | Packet     |                  |            |
                | Domain     |                  | Optical    |
                | Controller |                  | Domain     |
                |            |                  | Controller |
                +------+-----+                  +-------+----+
                       |                                |
              .........V.........................       |
              :          packet domain          :       |
          +----+                               +----+   |
          | R1 |= = = = = = = = = = = = = = = =| R2 |   |
          +-+--+                               +--+-+   |
            | :                                 : |     |
            | :................................ : |     |
            |                                     |     |
            |               +-----+               |     |
            |    ...........| Opt |...........    |     |
            |    :          |  C  |          :    |     |
            |    :         /+--+--+\         :    |     |
            |    :        /    |    \        :    |     |
            |    :       /     |     \       :    |     |
            |   +-----+ /   +--+--+   \ +-----+   |     |
            |   | Opt |/    | Opt |    \| Opt |   |     |
            +---|  A  |     |  D  |     |  B  |---+     |
                +-----+\    +--+--+    /+-----+         |
                 :      \      |      /      :          |
                 :       \     |     /       :          |
                 :        \ +--+--+  / optical<---------+
                 :         \| Opt |/  domain :
                 :..........|  E  |..........:
                            +-----+
]]></artwork></figure>

<t><xref target="fig-poi-uc"/> as well as <xref target="fig-poi-abstraction"/> describe two different
   examples of packet/optical topologies and only show a partial view of the
   packet network connectivity, before additional packet connectivity is
   provided by the optical network.</t>

<t>It is assumed that the Optical Domain Controller provides to the
   Packet/Optical Coordinator an abstracted view of the optical network.
   A possible abstraction could be to represent the whole optical
   network as one "virtual node" with "virtual ports" connected to the
   access links, as shown in <xref target="fig-poi-abstraction"/>.</t>

<t>It is also assumed that Packet Domain Controller can provide the
   Packet/Optical Coordinator the information it needs to set up
   connectivity between packet nodes through the optical network (e.g.,
   the access links).</t>

<t>The path computation request helps the Packet/Optical Coordinator to
   know the real connections that can be provided by the optical
   network.</t>

<figure title="Packet and Optical Topology Abstractions" anchor="fig-poi-abstraction"><artwork type="ascii-art" name="poi-topology-abstraction.txt"><![CDATA[
                       ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,.
                      ,  Packet/Optical Coordinator view          ,
                     ,                              +----+       , .
                    ,                               |    |      ,
                   ,                                | R2 |     ,   .
                  ,  +----+  +------------ +       /+----+    ,
                 ,   |    |  |             |/-----/ / /      ,     .
                ,    | R1 |--O VP1     VP4 O       / /      ,
               ,     |    |\ |             | /----/ /      ,       .
              ,      +----+ \|             |/      /      ,
             ,        /      O VP2     VP5 O      /      ,         .
            ,        /       |             |  +----+    ,
           ,        /        |             |  |    |   ,           .
          ,        /         O VP3     VP6 O--| R4 |  ,
         ,     +----+ /-----/|_____________|  +----+ ,             .
        ,      |    |/       +------------ +        ,
       ,       | R3 |                              ,               .
      ,        +----+                             ,,,,,,,,,,,,,,,,,
     ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,                ,.
     . Packet Domain Controller view                +----+       ,
       only packet nodes and packet links           |    |      ,  .
     . with access links to the optical network     | R2 |     ,
                  ,  +----+                        /+----+    ,    .
     .           ,   |    |                 /-----/ / /      ,
                ,    | R1 |---                     / /      ,      .
     .         ,     +----+\                 /----/ /      ,
              ,        /    \               /      /      ,        .
     .       ,        /                           /      ,
            ,        /                        +----+    ,          .
     .     ,        /                         |    |   ,
          ,        /                       ---| R4 |  ,            .
     .   ,     +----+ /-----/                 +----+ ,
        ,      |    |/                              ,              .
     . ,       | R3 |                              ,
      ,        +----+                             ,,,,,,,,,,,,,,,,,.
     .,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,                ,
       Optical Domain Controller view                            , .
     . only optical nodes,        +--+                          ,
       optical links and         /|OF|                         ,   .
     . access links from the  +--++--+             /          ,
       packet network         |OA|    \     /-----/ /        ,     .
     .          ,          ---+--+--\  +--+/       /        ,
               ,           \   |  \  \-|OE|-------/        ,       .
     .        ,             \  |   \ /-+--+               ,
             ,               \+--+  X    |               ,         .
     .      ,                 |OB|-/ \   |              ,
           ,                  +--+-\  \+--+            ,           .
     .    ,                  /   \  \--|OD|---        ,
         ,            /-----/     +--+ +--+          ,             .
     .  ,            /            |OC|/             ,
       ,                          +--+             ,               .
     .,                                           ,,,,,,,,,,,,,,,,,,
      ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,                ,
     . Actual Physical View                         +----+       ,
                    ,             +--+              |    |      ,
     .             ,             /|OF|              | R2 |     ,
                  ,  +----+   +--++--+             /+----+    ,
     .           ,   |    |   |OA|    \     /-----/ / /      ,
                ,    | R1 |---+--+--\  +--+/       / /      ,
     .         ,     +----+\   |  \  \-|OE|-------/ /      ,
              ,        /    \  |   \ /-+--+        /      ,
     .       ,        /      \+--+  X    |        /      ,
            ,        /        |OB|-/ \   |    +----+    ,
     .     ,        /         +--+-\  \+--+   |    |   ,
          ,        /         /   \  \--|OD|---| R4 |  ,
     .   ,     +----+ /-----/     +--+ +--+   +----+ ,
        ,      |    |/            |OC|/             ,
     . ,       | R3 |             +--+             ,
      ,        +----+                             ,
     .,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
]]></artwork></figure>

<t>In this use case, the Packet/Optical Coordinator needs to set up an
   optimal underlying path for an IP link between R1 and R2.</t>

<t>As depicted in <xref target="fig-poi-abstraction"/>, the Packet/Optical Coordinator has only an
   "abstracted view" of the physical network, and it does not know the
   feasibility or the cost of the possible optical paths (e.g., VP1-VP4
   and VP2-VP5), which depend on the current status of the physical
   resources within the optical network and on vendor-specific optical
   attributes.</t>

<t>The Packet/Optical Coordinator can request the underlying Optical
   Domain Controller to compute a set of potential optimal paths, taking
   into account optical constraints. Then, based on its own constraints,
   policy and knowledge (e.g. cost of the access links), it can choose
   which one of these potential paths to use to set up the optimal end-
   to-end path crossing optical network.</t>

<figure title="Packet/Optical Integration path computation example" anchor="fig-poi-example"><artwork type="ascii-art" name="poi-example.txt"><![CDATA[
                    ............................
                    :                          :
                    O VP1                  VP4 O
           cost=10 /:\                        /:\ cost=10
                  / : \----------------------/ : \
          +----+ /  :         cost=50          :  \ +----+
          |    |/   :                          :   \|    |
          | R1 |    :                          :    | R2 |
          |    |\   :                          :   /|    |
          +----+ \  :  /--------------------\  :  / +----+
                  \ : /       cost=55        \ : /
            cost=5 \:/                        \:/ cost=5
                    O VP2                  VP5 O
                    :                          :
                    :..........................:
]]></artwork></figure>

<t>For example, in <xref target="fig-poi-example"/>, the Packet/Optical Coordinator can request
   the Optical Domain Controller to compute the paths between VP1-VP4
   and VP2-VP5 and then decide to set up the optimal end-to-end path
   using the VP2-VP5 optical path even if this is not the optimal path
   from the optical domain perspective.</t>

<t>Considering the dynamicity of the connectivity constraints of an
   optical domain, it is possible that a path computed by the Optical
   Domain Controller when requested by the Packet/Optical Coordinator is
   no longer valid/available when the Packet/Optical Coordinator
   requests it to be set up. This is further discussed in <xref target="rpc-motivation"/>.</t>

</section>
<section anchor="md-uc"><name>Multi-domain TE networks</name>

<t>In this use case there are two TE domains which are interconnected
   together by multiple inter-domains links.</t>

<t>A possible example could be a multi-domain optical network.</t>

<figure title="Multi-domain multi-link interconnection" anchor="md-ml-connection"><artwork type="ascii-art" name="multi-domain-use-case.txt"><![CDATA[
                            +--------------+
                            | Multi-Domain |
                            | Controller   |
                            +---+------+---+
                                |      |
                   +------------+      |
                   |                   +-----------+
            +------V-----+                         |
            |            |                         |
            | TE Domain  |                  +------V-----+
            | Controller |                  |            |
            |      1     |                  | TE Domain  |
            +------+-----+                  | Controller |
                   |                        |      2     |
                   |                        +------+-----+
          .........V..........                     |
          :                  :                     |
         +-----+             :                     |
         |     |             :            .........V..........
         |  X  |             :            :                  :
         |     |          +-----+      +-----+                :
         +-----+          |     |      |     |               :
          :               |  C  |------|  E  |               :
      +-----+    +-----+ /|     |      |     |\ +-----+    +-----+
      |     |    |     |/ +-----+      +-----+ \|     |    |     |
      |  A  |----|  B  |     :            :     |  G  |----|  H  |
      |     |    |     |\    :            :    /|     |    |     |
      +-----+    +-----+ \+-----+      +-----+/ +-----+    +-----+
          :               |     |      |     |               :
          :               |  D  |------|  F  |               :
          :               |     |      |     |          +-----+
          :               +-----+      +-----+          |     |
          :                  :            :             |  Y  |
          :                  :            :             |     |
          :   TE domain 1    :            : TE domain 2 +-----+
          :..................:            :.................:
]]></artwork></figure>

<t>In order to set up an end-to-end multi-domain TE path (e.g., between
   nodes A and H), the Multi-Domain Controller needs to know the
   feasibility or the cost of the possible TE paths within the two TE
   domains, which depend on the current status of the physical resources
   within each TE domain. This is more challenging in case of optical
   networks because the optimal paths depend also on vendor-specific
   optical attributes (which may be different in the two domains if they
   are provided by different vendors).</t>

<t>In order to set up a multi-domain TE path (e.g., between nodes A and
   H), the Multi-Domain Controller can request the TE Domain Controllers
   to compute a set of intra-domain optimal paths and take decisions
   based on the information received. For example:</t>

<t><list style="symbols">
  <t>The Multi-Domain Controller asks TE Domain Controllers to provide
set of paths between A-C, A-D, E-H and F-H</t>
  <t>TE Domain Controllers return a set of feasible paths with the
associated costs: the path A-C is not part of this set (in optical
networks, it is typical to have some paths not being feasible due
to optical constraints that are known only by the Optical Domain
Controller)</t>
  <t>The Multi-Domain Controller will select the path A-D-F-H since it
is the only feasible multi-domain path and then request the TE
Domain Controllers to set up the A-D and F-H intra-domain paths</t>
  <t>If there are multiple feasible paths, the Multi-Domain Controller
can select the optimal path knowing the cost of the intra-domain
paths (provided by the TE domain controllers) and the cost of the
inter-domain links (known by the Multi-Domain Controller)  <vspace blankLines='1'/>
This approach may have some scalability issues when the number of TE
domains is quite big (e.g. 20).  <vspace blankLines='1'/>
In this case, it would be worthwhile using the abstract TE topology
information provided by the TE Domain Controllers to limit the number
of potential optimal end-to-end paths and then request path
computation from fewer TE Domain Controllers in order to decide what
the optimal path within this limited set is.  <vspace blankLines='1'/>
For more details, see <xref target="topo-pc-complement"/>.</t>
</list></t>

</section>
<section anchor="dci-uc"><name>Data Center Interconnections</name>

<t>In these use case, there is a TE domain which is used to provide
   connectivity between Data Centers which are connected with the TE
   domain using access links.</t>

<figure title="Data Center Interconnection use case" anchor="fig-dci-uc"><artwork type="ascii-art" name="dci-use-case.txt"><![CDATA[
                        +--------------+
                        | Cloud Network|
                        | Orchestrator |
                        +--------------+
                          |  |  |  |
            +-------------+  |  |  +------------------------+
            |                |  +------------------+        |
            |       +--------V---+                 |        |
            |       |            |                 |        |
            |       | TE Network |                 |        |
     +------V-----+ | Controller |          +------V-----+  |
     | DC         | +------------+          | DC         |  |
     | Controller |     |                   | Controller |  |
     +------------+     |   +-----+         +------------+  |
          |         ....V...|     |........         |       |
          |         :       |  P  |       :         |       |
     .....V.....    :      /+-----+\      :    .....V.....  |
     :         :  +-----+ /    |    \ +-----+  :         :  |
     :  DC1 || :  |     |/     |     \|     |  :  DC2 || :  |
     :    ||||----| PE1 |      |      | PE2 |----   |||| :  |
     : _|||||| :  |     |\     |     /|     |  : _|||||| :  |
     :         :  +-----+ \ +-----+ / +-----+  :         :  |
     :.........:    :      \|     |/      :    :.........:  |
                    :.......| PE3 |.......:                 |
                            |     |                         |
                            +-----+               +---------V--+
                          .....|.....             | DC         |
                          :         :             | Controller |
                          :  DC3 || :             +------------+
                          :    |||| :                  |
                          : _|||||| <------------------+
                          :         :
                          :.........:
]]></artwork></figure>

<t>In this use case, there is the need to transfer data from Data Center
   1 (DC1) to either DC2 or DC3 (e.g. workload migration).</t>

<t>The optimal decision depends both on the cost of the TE path (DC1-DC2
   or DC1-DC3) and of the Data Center resources within DC2 or DC3.</t>

<t>The Cloud Network Orchestrator needs to make a decision for optimal
   connection based on TE network constraints and Data Center resources.</t>

<t>It may not be able to make this decision because it has only an
   abstract view of the TE network (as in <xref target="poi-uc"/>).</t>

<t>The Cloud Network Orchestrator can request to the TE Network
   Controller to compute the cost of the possible TE paths (e.g., DC1-
   DC2 and DC1-DC3) and to the DC Controller to provide the information
   it needs about the required Data Center resources within DC2 and DC3
   and then it can take the decision about the optimal solution based on
   this information and its policy.</t>

</section>
<section anchor="brpc-uc"><name>Backward Recursive Path Computation scenario</name>

<t><xref target="RFC5441"/> has defined the Virtual Source Path Tree (VSPT) flag within the RP (Request Parameters) object in order to compute inter-domain paths following a
   "Backward Recursive Path Computation" (BRPC) method. The main
   principle is to forward the PCReq message up to the destination
   domain. Then, each PCE involved in the computation will compute its
   part of the path and send it back to the requester through PCE
   Response message. The resulting computation is spread from
   destination PCE to source PCE. Each PCE is in charge of merging the
   path it received with the one it calculated. At the end, the source
   PCE merges its local part of the path with the received one to
   achieve the end-to-end path.</t>

<t><xref target="fig-brpc-example"/> below show a typical BRPC scenario where 3 PCEs cooperate to
   compute inter-domain paths.</t>

<figure title="BRPC Scenario" anchor="fig-brpc-example"><artwork type="ascii-art" name="brpc-scenario.txt"><![CDATA[
                   +----------------+          +----------------+
                   |  Domain (B)    |          |  Domain (C)    |
                   |                |          |                |
                   |        /-------|---PCEP---|--------\       |
                   |       /        |          |         \      |
                   |   (PCE)        |          |   -    (PCE)   |
                   |    /           <---------->  |D|           |
                   |   /            |  Inter   |   -            |
                   +---|----^-------+  Domain  +----------------+
                       |    |          Link
                     PCEP   |
                       |    | Inter-domain Link
                       |    |
                   +---|----v-------+
                   |   |            |
                   |   | Domain (A) |
                   |   \            |
                   |  (PCE)    -    |
                   |          |S|   |
                   |           -    |
                   +----------------+
]]></artwork></figure>

<t>In this use case, a client can use the YANG data model defined in
   this document to request path computation from the PCE that controls
   the source of the tunnel. For example, a client can request to the
   PCE of domain A to compute a path from a source S, within domain A,
   to a destination D, within domain C. Then PCE of domain A will use
   PCEP protocol, as per <xref target="RFC5441"/>, to compute the path from S to D and
   in turn gives the final answer to the requester.</t>

</section>
<section anchor="hpce-uc"><name>Hierarchical PCE scenario</name>

<t><xref target="RFC6805"/> has defined an architecture and extensions to the PCE
   standard to compute inter-domain path following a hierarchical
   method. Two new roles have been defined: parent PCE and child PCE.
   The parent PCE is in charge to coordinate the end-to-end path
   computation. For that purpose it sends to each child PCE involved in
   the multi-domain path computation a PCE Request message to obtain the
   local part of the path. Once received all answer through PCE Response
   message, the parent PCE will merge the different local parts of the
   path to achieve the end-to-end path.</t>

<t><xref target="fig-hpce-example"/> below shows a typical hierarchical scenario where a parent
   PCE request end-to-end path to the different child PCE. Note that a
   PCE could take independently the role of child or parent PCE
   depending of which PCE will request the path.</t>

<figure title="Hierarchical domain topology from RFC6805" anchor="fig-hpce-example"><artwork type="ascii-art" name="hierarchical-domain-topology.txt"><![CDATA[
    -----------------------------------------------------------------
    |   Domain 5                                                      |
    |                              -----                              |
    |                             |PCE 5|                             |
    |                              -----                              |
    |                                                                 |
    |    ----------------     ----------------     ----------------   |
    |   | Domain 1       |   | Domain 2       |   | Domain 3       |  |
    |   |                |   |                |   |                |  |
    |   |        -----   |   |        -----   |   |        -----   |  |
    |   |       |PCE 1|  |   |       |PCE 2|  |   |       |PCE 3|  |  |
    |   |        -----   |   |        -----   |   |        -----   |  |
    |   |                |   |                |   |                |  |
    |   |            ----|   |----        ----|   |----            |  |
    |   |           |BN11+---+BN21|      |BN23+---+BN31|           |  |
    |   |   -        ----|   |----        ----|   |----        -   |  |
    |   |  |S|           |   |                |   |           |D|  |  |
    |   |   -        ----|   |----        ----|   |----        -   |  |
    |   |           |BN12+---+BN22|      |BN24+---+BN32|           |  |
    |   |            ----|   |----        ----|   |----            |  |
    |   |                |   |                |   |                |  |
    |   |         ----   |   |                |   |   ----         |  |
    |   |        |BN13|  |   |                |   |  |BN33|        |  |
    |    -----------+----     ----------------     ----+-----------   |
    |                \                                /               |
    |                 \       ----------------       /                |
    |                  \     |                |     /                 |
    |                   \    |----        ----|    /                  |
    |                    ----+BN41|      |BN42+----                   |
    |                        |----        ----|                       |
    |                        |                |                       |
    |                        |        -----   |                       |
    |                        |       |PCE 4|  |                       |
    |                        |        -----   |                       |
    |                        |                |                       |
    |                        | Domain 4       |                       |
    |                         ----------------                        |
    |                                                                 |
     -----------------------------------------------------------------
]]></artwork></figure>

<t>In this use case, a client can use the YANG data model defined in
   this document to request to the parent PCE a path from a source S to
   a destination D. The parent PCE will in turn contact the child PCEs
   through PCEP protocol to compute the end-to-end path and then return
   the computed path to the client, using the YANG data model defined in
   this document. For example the YANG data model can be used to request
   to PCE5 acting as parent PCE to compute a path from source S, within
   domain 1, to destination D, within domain 3. PCE5 will contact child
   PCEs of domain 1, 2 and 3 to obtain local part of the end-to-end path
   through the PCEP protocol. Once received the PCRep message, it
   merges the answers to compute the end-to-end path and send it back to
   the client.</t>

</section>
</section>
<section anchor="motivations"><name>Motivations</name>

<t>This section provides the motivation for the YANG data model defined
   in this document.</t>

<t><xref target="yang-motivation"/> describes the motivation for a YANG data model to request
   path computation.</t>

<t><xref target="topo-interaction"/> describes the motivation for a YANG data model which
   complements the TE topology YANG data model defined in <xref target="RFC8795"/>.</t>

<t><xref target="rpc-motivation"/> describes the motivation for a YANG RPC which complements
   the TE tunnel YANG data model defined in <xref target="I-D.ietf-teas-yang-te"/>.</t>

<section anchor="yang-motivation"><name>Motivation for a YANG Model</name>

<section anchor="benefits-of-common-data-models"><name>Benefits of common data models</name>

<t>The YANG data model for requesting path computation is closely
   aligned with the YANG data models that provide (abstract) TE topology
   information, i.e., <xref target="RFC8795"/> as well as that are used to configure
   and manage TE tunnels, i.e., <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>There are many benefits in aligning the data model used for path
   computation requests with the YANG data models used for TE topology
   information and for TE tunnels configuration and management:</t>

<t><list style="symbols">
  <t>There is no need for an error-prone mapping or correlation of
information.</t>
  <t>It is possible to use the same endpoint identifiers in path
computation requests and in the topology modeling.</t>
  <t>The attributes used for path computation constraints are the same
as those used when setting up a TE tunnel.</t>
</list></t>

</section>
<section anchor="benefits-of-a-single-interface"><name>Benefits of a single interface</name>

<t>The system integration effort is typically lower if a single,
   consistent interface is used by controllers, i.e., one data modeling
   language (i.e., YANG) and a common protocol (e.g., NETCONF or
   RESTCONF).</t>

<t>Practical benefits of using a single, consistent interface include:</t>

<t><list style="numbers">
  <t>Simple authentication and authorization: The interface between
different components has to be secured. If different protocols
have different security mechanisms, ensuring a common access
control model may result in overhead. For instance, there may be a
need to deal with different security mechanisms, e.g., different
credentials or keys. This can result in increased integration
effort.</t>
  <t>Consistency: Keeping data consistent over multiple different
interfaces or protocols is not trivial. For instance, the sequence
of actions can matter in certain use cases, or transaction
semantics could be desired. While ensuring consistency within one
protocol can already be challenging, it is typically cumbersome to
achieve that across different protocols.</t>
  <t>Testing: System integration requires comprehensive testing,
including corner cases. The more different technologies are
involved, the more difficult it is to run comprehensive test cases
and ensure proper integration.</t>
  <t>Middle-box friendliness: Provider and consumer of path computation
requests may be located in different networks, and middle-boxes
such as firewalls, NATs, or load balancers may be deployed. In
such environments it is simpler to deploy a single protocol. Also,
it may be easier to debug connectivity problems.</t>
  <t>Tooling reuse: Implementers may want to implement path computation
requests with tools and libraries that already exist in
controllers and/or orchestrators, e.g., leveraging the rapidly
growing eco-system for YANG tooling.</t>
</list></t>

</section>
<section anchor="extensibility"><name>Extensibility</name>

<t>Path computation is only a subset of the typical functionality of a
   controller. In many use cases, issuing path computation requests
   comes along with the need to access other functionality on the same
   system. In addition to obtaining TE topology, for instance also
   configuration of services (set-up/modification/deletion) may be
   required, as well as:</t>

<t><list style="numbers">
  <t>Receiving notifications for topology changes as well as
integration with fault management</t>
  <t>Performance management such as retrieving monitoring and telemetry
data</t>
  <t>Service assurance, e.g., by triggering OAM functionality</t>
  <t>Other fulfilment and provisioning actions beyond tunnels and
services, such as changing QoS configurations  <vspace blankLines='1'/>
YANG is a very extensible and flexible data modeling language that
can be used for all these use cases.</t>
</list></t>

</section>
</section>
<section anchor="topo-interaction"><name>Interactions with TE topology</name>

<t>The use cases described in <xref target="use-cases"/> have been described assuming
   that the topology view exported by each underlying controller to its
   client is aggregated using the "virtual node model", defined in
   <xref target="RFC7926"/>.</t>

<t>TE topology information, e.g., as provided by <xref target="RFC8795"/>, could in
   theory be used by an underlying controller to provide TE information
   to its client thus allowing a PCE available within its client to
   perform multi-domain path computation on its own, without requesting
   path computations to the underlying controllers.</t>

<t>In case the client does not implement a PCE function, as discussed in
   <xref target="intro"/>, it could not perform path computation based on TE topology
   information and would instead need to request path computation from
   the underlying controllers to get the information it needs to find
   the optimal end-to-end path.</t>

<t>In case the client implements a PCE function, as discussed in 
   <xref target="intro"/>, the TE topology information needs to be complete and accurate,
   which would bring to scalability issues.</t>

<t>Using TE topology to provide a "virtual link model" aggregation, as
   described in <xref target="RFC7926"/>, may be insufficient, unless the aggregation
   provides complete and accurate information, which would still cause
   scalability issues, as described in <xref target="topo-aggregation"/> below.</t>

<t>Using TE topology abstraction, as described in <xref target="RFC7926"/>, may lead to
   compute an unfeasible path, as described in <xref target="RFC7926"/> in 
   <xref target="topo-abstraction"/> below.</t>

<t>Therefore when computing an optimal multi-domain path, there is a
   scalability trade-off between providing complete and accurate TE
   information and the number of path computation requests to the
   underlying controllers.</t>

<t>The TE topology information used, in a complimentary way, to reduce
   the number for path computation requests to the underlying
   controllers, are described in <xref target="topo-pc-complement"/> below.</t>

<section anchor="topo-aggregation"><name>TE topology aggregation</name>

<t>Using the TE topology model, as defined in <xref target="RFC8795"/>, the underlying
   controller can export the whole TE domain as a single TE node with a
   "detailed connectivity matrix" (which provides specific TE
   attributes, such as delay, Shared Risk Link Groups (SRLGs) and other
   TE metrics, between each ingress and egress links).</t>

<t>The information provided by the "detailed connectivity matrix" would
   be equivalent to the information that should be provided by "virtual
   link model" as defined in <xref target="RFC7926"/>.</t>

<t>For example, in the Packet/Optical Integration use case, described in
   <xref target="poi-uc"/>, the Optical Domain Controller can make the information
   shown in <xref target="fig-poi-example"/> available to the Packet/Optical Coordinator as part
   of the TE topology information and the Packet/Optical Coordinator
   could use this information to calculate on its own the optimal path
   between R1 and R2, without requesting any additional information to
   the Optical Domain Controller.</t>

<t>However, when designing the amount of information to provide within
   the "detailed connectivity matrix", there is a tradeoff to be
   considered between accuracy (i.e., providing "all" the information
   that might be needed by the PCE available within the client) and
   scalability.</t>

<t><xref target="poi-multi-path"/> below shows another example, similar to <xref target="fig-poi-example"/>, where
   there are two possible Optical paths between VP1 and VP4 with
   different properties (e.g., available bandwidth and cost).</t>

<figure title="Packet/Optical Integration path computation Example with multiple choices" anchor="poi-multi-path"><artwork type="ascii-art" name="poi-example-multiple.txt"><![CDATA[
                    ............................
                    :  /--------------------\  :
                    : /       cost=65        \ :
                    :/    available-bw=10G    \:
                    O VP1                  VP4 O
           cost=10 /:\                        /:\ cost=10
                  / : \----------------------/ : \
          +----+ /  :         cost=50          :  \ +----+
          |    |/   :     available-bw=2G      :   \|    |
          | R1 |    :                          :    | R2 |
          |    |\   :                          :   /|    |
          +----+ \  :  /--------------------\  :  / +----+
                  \ : /       cost=55        \ : /
            cost=5 \:/    available-bw=3G     \:/ cost=5
                    O VP2                  VP5 O
                    :                          :
                    :..........................:
]]></artwork></figure>

<t>If the information in the "detailed connectivity matrix" is not
   complete/accurate, we can have the following drawbacks:</t>

<t><list style="symbols">
  <t>If only the VP1-VP4 path with available bandwidth of 2 Gb/s and
cost 50 is reported, the client's PCE will fail to compute a 5
Gb/s path between routers R1 and R2, although this would be
feasible;</t>
  <t>If only the VP1-VP4 path with available bandwidth of 10 Gb/s and
cost 65 is reported, the client's PCE will compute, as optimal,
the 1 Gb/s path between R1 and R2 going through the VP2-VP5 path
within the optical domain while the optimal path would actually be
the one going thought the VP1-VP4 sub-path (with cost 50) within
the optical domain.  <vspace blankLines='1'/>
Reporting all the information, as in <xref target="poi-multi-path"/>, using the "detailed
 connectivity matrix", is quite challenging from a scalability
 perspective. The amount of this information is not just based on
 number of end points (which would scale as N-square), but also on
 many other parameters, including client rate, user
 constraints/policies for the service, e.g. max latency &lt; N ms, max
 cost, etc., exclusion policies to route around busy links, min
 Optical Signal to Noise Ratio (OSNR) margin, max pre-Forward Error
 Correction (FEC) Bit Error Rate (BER) etc. All these constraints
 could be different based on connectivity requirements.  <vspace blankLines='1'/>
It is also worth noting that the "connectivity matrix" has been
 originally defined in Wavelength Switched Optical Networks (WSON),
 <xref target="RFC7446"/>, to report the connectivity constrains of a physical node
 within the Wavelength Division Multiplexing (WDM) network: the
 information it contains is pretty "static" and therefore, once taken
 and stored in the TE data base, it can be always being considered
 valid and up-to-date in path computation request.  <vspace blankLines='1'/>
The "connectivity matrix" is sometimes confused with "optical reach
 table" that contain multiple (e.g. k-shortest) regen-free reachable
 paths for every A-Z node combination in the network. Optical reach
 tables can be calculated offline, utilizing vendor optical design and
 planning tools, and periodically uploaded to the Controller: these
 optical path reach tables are fairly static. However, to get the
 connectivity matrix, between any two sites, either a regen free path
 can be used, if one is available, or multiple regen free paths are
 concatenated to get from the source to the destination, which can be
 a very large combination. Additionally, when the optical path within
 optical domain needs to be computed, it can result in different paths
 based on input objective, constraints, and network conditions. In
 summary, even though "optical reach table" is fairly static, which
 regen free paths to build the connectivity matrix between any source
 and destination is very dynamic, and is done using very sophisticated
 routing algorithms.  <vspace blankLines='1'/>
Using the "basic connectivity matrix" with an abstract node to
 abstract the information regarding the connectivity constraints of an
 Optical domain, would make this information more "dynamic" since the
 connectivity constraints of an optical domain can change over time
 because some optical paths that are feasible at a given time may
 become unfeasible at a later time when e.g., another optical path is
 established.  <vspace blankLines='1'/>
The information in the "detailed connectivity matrix" is even more
 dynamic since the establishment of another optical path may change
 some of the parameters (e.g., delay or available bandwidth) in the
 "detailed connectivity matrix" while not changing the feasibility of
 the path.  <vspace blankLines='1'/>
There is therefore the need to keep the information in the "detailed
 connectivity matrix" updated which means that there another tradeoff
 between the accuracy (i.e., providing "all" the information that
 might be needed by the client's PCE) and having up-to-date
 information. The more the information is provided and the longer it
 takes to keep it up-to-date which increases the likelihood that the
 client's PCE computes paths using not updated information.  <vspace blankLines='1'/>
It seems therefore quite challenging to have a "detailed connectivity
 matrix" that provides accurate, scalable and updated information to
 allow the client's PCE to take optimal decisions by its own.  <vspace blankLines='1'/>
Considering the example in <xref target="poi-multi-path"/> with the approach defined in this
 document, the client, when it needs to set up an end-to-end path, it
 can request the Optical Domain Controller to compute a set of optimal
 paths (e.g., for VP1-VP4 and VP2-VP5) and take decisions based on the
 information received:</t>
  <t>When setting up a 5 Gb/s path between routers R1 and R2, the
Optical Domain Controller may report only the VP1-VP4 path as the
only feasible path: the Packet/Optical Coordinator can
successfully set up the end-to-end path passing though this
optical path;</t>
  <t>When setting up a 1 Gb/s path between routers R1 and R2, the
Optical Domain Controller (knowing that the path requires only 1
Gb/s) can report both the VP1-VP4 path, with cost 50, and the VP2-
VP5 path, with cost 65. The Packet/Optical Coordinator can then
compute the optimal path which is passing thought the VP1-VP4 sub-
path (with cost 50) within the optical domain.</t>
</list></t>

</section>
<section anchor="topo-abstraction"><name>TE topology abstraction</name>

<t>Using the TE topology model, as defined in <xref target="RFC8795"/>, the underlying
   controller can export to its client an abstract TE topology, composed
   by a set of TE nodes and TE links, representing the abstract view of
   the topology under its control.</t>

<t>For example, in the multi-domain TE network use case, described in
   <xref target="md-uc"/>, the TE Domain Controller 1 can export a TE topology
   encompassing the TE nodes A, B, C and D and the TE links
   interconnecting them. In a similar way, the TE Domain Controller 2
   can export a TE topology encompassing the TE nodes E, F, G and H and
   the TE links interconnecting them.</t>

<t>In this example, for simplicity reasons, each abstract TE node maps
   with each physical node, but this is not necessary.</t>

<t>In order to set up a multi-domain TE path (e.g., between nodes A and
   H), the Multi-Domain Controller can compute by its own an optimal
   end-to-end path based on the abstract TE topology information
   provided by the domain controllers. For example:</t>

<t><list style="symbols">
  <t>Multi-Domain Controller can compute, based on its own TED data,
the optimal multi-domain path being A-B-C-E-G-H, and then request
the TE Domain Controllers to set up the A-B-C and E-G-H intra-
domain paths</t>
  <t>But, during path set-up, the TE Domain Controller may find out
that A-B-C intra-domain path is not feasible (as discussed in
<xref target="md-uc"/>, in optical networks it is typical to have some paths
not being feasible due to optical constraints that are known only
by the Optical Domain Controller), while only the path A-B-D is
feasible</t>
  <t>So what the Multi-Domain Controller has computed is not good and
it needs to re-start the path computation from scratch  <vspace blankLines='1'/>
As discussed in <xref target="topo-aggregation"/>, providing more extensive abstract
information from the TE Domain Controllers to the Multi-Domain
Controller may lead to scalability problems.  <vspace blankLines='1'/>
In a sense this is similar to the problem of routing and wavelength
assignment within an optical domain. It is possible to do first
routing (step 1) and then wavelength assignment (step 2), but the
chances of ending up with a good path is low. Alternatively, it is
possible to do combined routing and wavelength assignment, which is
known to be a more optimal and effective way for optical path set-up.
Similarly, it is possible to first compute an abstract end-to-end
path within the Multi-Domain Controller (step 1) and then compute an
intra-domain path within each optical domain (step 2), but there are
more chances not to find a path or to get a suboptimal path than by
performing multiple per-domain path computations and then stitching
them together.</t>
</list></t>

</section>
<section anchor="topo-pc-complement"><name>Complementary use of the TE topology</name>

<t>As discussed in <xref target="md-uc"/>, there are some scalability issues with
   path computation requests in a multi-domain TE network with many TE
   domains, in terms of the number of requests to send to the TE Domain
   Controllers. It would therefore be worthwhile using the abstract TE
   topology information provided by the TE Domain Controllers to limit
   the number of requests.</t>

<t>An example can be described considering the multi-domain abstract TE
   topology shown in <xref target="fig-topo-many-domains"/>. In this example, an end-to-end TE path
   between domains A and F needs to be set up. The transit TE domain
   should be selected between domains B, C, D and E.</t>

<figure title="Multi-domain with many domains (Topology information)" anchor="fig-topo-many-domains"><artwork type="ascii-art" name="many-domains-topology.txt"><![CDATA[
                          .........B.........
                          : _ _ _ _ _ _ _ _ :
                          :/               \:
                      +---O  NOT FEASIBLE   O---+
                cost=5|   :                 :   |
    ......A......     |   :.................:   |     ......F......
    :           :     |                         |     :           :
    :           O-----+   .........C.........   +-----O           :
    :           :         : /-------------\ :         :           :
    :           :         :/               \:         :           :
    :  cost<=20 O---------O   cost <= 30    O---------O cost<=20  :
    :          /: cost=5  :                 : cost=5  :\          :
    :  /------/ :         :.................:         : \------\  :
    : /         :                                     :         \ :
    :/ cost<=25 :         .........D.........         : cost<=25 \:
    O-----------O-------+ : /-------------\ : +-------O-----------O
    :\          : cost=5| :/               \: |cost=5 :          /:
    : \         :       +-O   cost <= 30    O-+       :         / :
    :  \------\ :         :                 :         : /------/  :
    : cost>=30 \:         :.................:         :/ cost>=30 :
    :           O-----+                         +-----O           :
    :...........:     |   .........E.........   |     :...........:
                      |   : /-------------\ :   |
                cost=5|   :/               \:   |cost=5
                      +---O   cost >= 30    O---+
                          :                 :
                          :.................:
]]></artwork></figure>

<t>The actual cost of each intra-domain path is not known a priori from
   the abstract topology information. The Multi-Domain Controller only
   knows, from the TE topology provided by the underlying domain
   controllers, the feasibility of some intra-domain paths and some
   upper-bound and/or lower-bound cost information. With this
   information, together with the cost of inter-domain links, the Multi-
   Domain Controller can understand by its own that:</t>

<t><list style="symbols">
  <t>Domain B cannot be selected as the path connecting domains A and F
is not feasible;</t>
  <t>Domain E cannot be selected as a transit domain since it is known
from the abstract topology information provided by domain
controllers that the cost of the multi-domain path A-E-F (which is
100, in the best case) will be always be higher than the cost of
the multi-domain paths A-D-F (which is 90, in the worst case) and
A-C-F (which is 80, in the worst case).  <vspace blankLines='1'/>
Therefore, the Multi-Domain Controller can understand by its own that
 the optimal multi-domain path could be either A-D-F or A-C-F but it
 cannot know which one of the two possible option actually provides
 the optimal end-to-end path.  <vspace blankLines='1'/>
The Multi-Domain Controller can therefore request path computation
 only to the TE Domain Controllers A, D, C and F (and not to all the
 possible TE Domain Controllers).</t>
</list></t>

<figure title="Multi-domain with many domains (Path Computation information)" anchor="fig-pc-many-domains"><artwork type="ascii-art" name="many-domain-path-computation.txt"><![CDATA[
                          .........B.........
                          :                 :
                      +---O                 O---+
    ......A......     |   :.................:   |     ......F......
    :           :     |                         |     :           :
    :           O-----+   .........C.........   +-----O           :
    :           :         : /-------------\ :         :           :
    :           :         :/               \:         :           :
    :  cost=15  O---------O    cost = 25    O---------O  cost=10  :
    :          /: cost=5  :                 : cost=5  :\          :
    :  /------/ :         :.................:         : \------\  :
    : /         :                                     :         \ :
    :/ cost=10  :         .........D.........         : cost=15  \:
    O-----------O-------+ : /-------------\ : +-------O-----------O
    :           : cost=5| :/               \: |cost=5 :           :
    :           :       +-O    cost = 15    O-+       :           :
    :           :         :                 :         :           :
    :           :         :.................:         :           :
    :           O-----+                         +-----O           :
    :...........:     |   .........E.........   |     :...........:
                      |   :                 :   |
                      +---O                 O---+
                          :.................:
]]></artwork></figure>

<t>Based on these requests, the Multi-Domain Controller can know the
   actual cost of each intra-domain paths which belongs to potential
   optimal end-to-end paths, as shown in <xref target="fig-pc-many-domains"/>, and then compute the
   optimal end-to-end path (e.g., A-D-F, having total cost of 50,
   instead of A-C-F having a total cost of 70).</t>

</section>
</section>
<section anchor="rpc-motivation"><name>Path Computation RPC</name>

<t>The TE tunnel YANG data model, defined in <xref target="I-D.ietf-teas-yang-te"/>, can support
   the need to request path computation, as described in section 5.1.2
   of <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>This solution is stateful since the state of each created "compute-
   only" TE tunnel path needs to be maintained, in the YANG datastores
   (at least in the running datastore and operational datastore), and
   updated, when underlying network conditions change.</t>

<t>The RPC mechanism allows requesting path computation using a simple
   atomic operation, without creating any state in the YANG datastores,
   and it is the natural option/choice, especially with stateless PCE.</t>

<t>It is very useful to provide both the options of using an RPC as well
   as of setting up TE tunnel paths in "compute-only" mode. It is
   suggested to use the RPC as much as possible and to rely on
   "compute-only" TE tunnel paths, when really needed.</t>

<t>Using the RPC solution would imply that the underlying controller
   (e.g., a PNC) computes a path twice during the process to set up an
   LSP: at time T1, when its client (e.g., an MDSC) sends a path
   computation RPC request to it, and later, at time T2, when the same
   client (MDSC) creates a TE tunnel requesting the set-up of the LSP.
   The underlying assumption is that, if network conditions have not
   changed, the same path that has been computed at time T1 is also
   computed at time T2 by the underlying controller (e.g. PNC) and
   therefore the path that is set up at time T2 is exactly the same path
   that has been computed at time T1.</t>

<t>However, since the operation is stateless, there is no guarantee that
   the returned path would still be available when path set-up is
   requested: this does not cause major issues when the time between
   path computation and path set-up is short (especially if compared
   with the time that would be needed to update the information of a
   very detailed connectivity matrix).</t>

<t>In most of the cases, there is even no need to guarantee that the
   path that has been set up is the exactly same as the path that has
   been returned by path computation, especially if it has the same or
   even better metrics. Depending on the abstraction level applied by
   the server, the client may also not know the actual computed path.</t>

<t>The most important requirement is that the required global objectives
   (e.g., multi-domain path metrics and constraints) are met. For this
   reason a path verification phase is always necessary to verify that
   the actual path that has been set up meets the global objectives (for
   example in a multi-domain network, the resulting end-to-end path
   meets the required end-to-end metrics and constraints).</t>

<t>In most of the cases, even if the path being set up is not exactly
   the same as the path returned by path computation, its metrics and
   constraints are "good enough" and the path verification passes
   successfully. In the few corner cases where the path verification
   fails, it is possible repeat the whole process (path computation,
   path set-up and path verification).</t>

<t>In case it is required to set up at T2 exactly the same path computed
   at T1, the RPC solution should not be used and, instead, a "compute-
   only" TE tunnel path should be set up, allowing also notifications in
   case the computed path has been changed.</t>

<t>In this case, at time T1, the client (MDSC) creates a TE tunnel in a
   compute-only mode in the running datastore and later, at time T2,
   changes the configuration of that TE tunnel (not to be any more in a
   compute-only mode) to trigger the set-up of the LSP over the path
   which have been computed at time T1 and reported in the operational
   datastore.</t>

<t>It is worth noting that also using the "compute-only" TE tunnel path,
   although increasing the likelihood that the computed path is
   available at path set-up, does not guarantee that because
   notifications may not be reliable or delivered on time. Path
   verification is needed also in this case.</t>

<t>The solution based on "compute-only" TE tunnel path has also the
   following drawbacks:</t>

<t><list style="symbols">
  <t>Several messages required for any path computation</t>
  <t>Requires persistent storage in the underlying controller</t>
  <t>Need for garbage collection for stranded paths</t>
  <t>Process burden to detect changes on the computed paths in order to
provide notifications update</t>
</list></t>

<section anchor="temp-state"><name>Temporary reporting of the computed path state</name>

<t>This section describes an optional extension to the stateless
   behavior of the path computation RPC, where the underlying
   controller, after having received a path computation RPC request,
   maintains some "transient state" associated with the computed path,
   allowing the client to request the set-up of exactly that path, if
   still available.</t>

<t>This is similar to the "compute-only" TE tunnel path solution but, to
   avoid the drawbacks of the stateful approach, is leveraging the path
   computation RPC and the separation between configuration and
   operational datastore, as defined in the NMDA architecture <xref target="RFC8342"/>.</t>

<t>The underlying controller, after having computed a path, as requested
   by a path computation RPC, also creates a TE tunnel instance within
   the operational datastore, to store that computed path. This would be
   similar to a "compute-only" TE tunnel path, with the only difference
   that there is no associated TE tunnel instance within the running
   datastore.</t>

<t>Since the underlying controller stores in the operational datastore
   the computed path based on an abstract topology it exposes, it also
   remembers, internally, which is the actual native path (physical
   path), within its native topology (physical topology), associated
   with that compute-only TE tunnel instance.</t>

<t>Afterwards, the client (e.g., MDSC) can request the set-up of that
   specific path by creating a TE tunnel instance (not in compute-only
   mode) in the running datastore using the same tunnel-name of
   the existing TE tunnel in the operational datastore: this will
   trigger the underlying controller to set up that path, if still
   available.</t>

<t>There are still cases where the path being set up is not exactly the
   same as the path that has been computed:</t>

<t><list style="symbols">
  <t>When the tunnel is configured with path constraints which are not
compatible with the computed path;</t>
  <t>When the tunnel set-up is requested after the resources of the
computed path are no longer available;</t>
  <t>When the tunnel set-up is requested after the computed path is no
longer known (e.g. due to a server reboot) by the underlying
controller.  <vspace blankLines='1'/>
In all these cases, the underlying controller should compute and set
 up a new path.  <vspace blankLines='1'/>
Therefore the "path verification" phase, as described in <xref target="rpc-motivation"/>
 above, is always needed to check that the path that has been set up
 is still "good enough".  <vspace blankLines='1'/>
Since this new approach is not completely stateless, garbage
 collection is implemented using a timeout that, when it expires,
 triggers the removal of the computed path from the operational
 datastore. This operation is fully controlled by the underlying
 controller without the need for any action to be taken by the client
 that is not able to act on the operational datastore. The default
 value of this timeout is 10 minutes but a different value may be
 configured by the client.  <vspace blankLines='1'/>
In addition, it is possible for the client to tag each path
 computation request with a transaction-id allowing for a faster
 removal of all the paths associated with a transaction-id, without
 waiting for their timers to expire.  <vspace blankLines='1'/>
The underlying controller can remove from the operational datastore
 all the paths computed with a given transaction-id which have not
 been set up either when it receives a Path Delete RPC request for
 that transaction-id or, automatically, right after the set-up up of a
 path that has been previously computed with that transaction-id.  <vspace blankLines='1'/>
This possibility is useful when multiple paths are computed but, at
 most, only one is set up (e.g., in multi-domain path computation
 scenario scenarios). After the selected path has been set up (e.g, in
 one domain during multi-domain path set-up), all the other
 alternative computed paths can be automatically deleted by the
 underlying controller (since no longer needed). The client can also
 request, using the Path Delete RPC request, the underlying controller
 to remove all the computed paths, if none of them is going to be set
 up (e.g., in a transit domain not being selected by multi-domain path
 computation and so not being automatically deleted).  <vspace blankLines='1'/>
This approach is complimentary and not alternative to the timer which
 is always needed to avoid stranded computed paths being stored in the
 operational datastore when no path is set up and no explicit Path
 Delete RPC request is received.</t>
</list></t>

</section>
</section>
</section>
<section anchor="path-computation-and-optimization-for-multiple-paths"><name>Path computation and optimization for multiple paths</name>

<t>There are use cases, where it is advantageous to request path
   computation for a set of paths, through a network or through a
   network domain, using a single request <xref target="RFC5440"/>.</t>

<t>In this case, sending a single request for multiple path
   computations, instead of sending multiple requests for each path
   computation, would reduce the protocol overhead and it would consume
   less resources (e.g., threads in the client and server).</t>

<t>In the context of a typical multi-domain TE network, there could
   multiple choices for the ingress/egress points of a domain and the
   Multi-Domain Controller needs to request path computation between all
   the ingress/egress pairs to select the best pair. For example, in the
   example of <xref target="md-uc"/>, the Multi-Domain Controller needs to request
   the TE Network Controller 1 to compute the A-C and the A-D paths and
   to the TE Network Controller 2 to compute the E-H and the F-H paths.</t>

<t>It is also possible that the Multi-Domain Controller receives a
   request to set up a group of multiple end to end connections. The
   Multi-Domain Controller needs to request each TE domain Controller to
   compute multiple paths, one (or more) for each end to end connection.</t>

<t>There are also scenarios where it can be needed to request path
   computation for a set of paths in a synchronized fashion.</t>

<t>One example could be computing multiple diverse paths. Computing a
   set of diverse paths in an unsynchronized fashion, leads to the
   possibility of not being able to satisfy the diversity requirement.
   In this case, it is preferable to compute a sub-optimal primary path
   for which a diversely routed secondary path exists.</t>

<t>There are also scenarios where it is needed to request optimizing a
   set of paths using objective functions that apply to the whole set of
   paths, see <xref target="RFC5541"/>, e.g. to minimize the sum of the costs of all
   the computed paths in the set.</t>

</section>
<section anchor="yang-data-model-for-requesting-path-computation"><name>YANG data model for requesting Path Computation</name>

<t>This document define a YANG RPC to request path computation as an
   "augmentation" of tunnel-rpc, defined in <xref target="I-D.ietf-teas-yang-te"/>. This model
   provides the RPC input attributes that are needed to request path
   computation and the RPC output attributes that are needed to report
   the computed paths.</t>

<figure><artwork type="ascii-art" name="overview.txt"><![CDATA[
  augment /te:tunnels-path-compute/te:input/te:path-compute-info:
    +-- path-request* [request-id]
    |  ...

  augment /te:tunnels-path-compute/te:output/te:path-compute-result:
    +--ro response* [response-id]
       +--ro response-id                         uint32
       +--ro computed-paths-properties
       |  +--ro computed-path-properties* [k-index]
       |     ...
]]></artwork></figure>

<t>This model extensively re-uses the grouping defined in <xref target="I-D.ietf-teas-yang-te"/>
   and <xref target="RFC8776"/> to ensure maximal syntax and semantics commonality.</t>

<t>This YANG data model allows one RPC to include multiple path
   requests, each path request being identified by a request-id.
   Therefore, one RPC can return multiple responses, one for each path
   request, being identified by a response-id equal to the corresponding
   request-id. Each response reports one or more computed paths, as
   requested by the k-requested-paths attribute. By default, each
   response reports one computed path.</t>

<section anchor="synchronization-of-multiple-path-computation-requests"><name>Synchronization of multiple path computation requests</name>

<t>The YANG data model permits the synchronization of a set of multiple
   path requests (identified by specific request-id) all related to a
   "svec" container emulating the syntax of the Synchronization VECtor
   (SVEC) PCEP object, defined in <xref target="RFC5440"/>.</t>

<figure><artwork type="ascii-art" name="synchronization.txt"><![CDATA[
    +-- synchronization* []
       +-- svec
       |  +-- relaxable?      boolean
       |  +-- disjointness?   te-path-disjointness
       |  +-- request-id*     uint32
       +-- svec-constraints
       |  +-- path-metric-bound* [metric-type]
       |     +-- metric-type    identityref
       |     +-- upper-bound?   uint64
       +-- path-srlgs-lists
       |  +-- path-srlgs-list* [usage]
       |     +-- usage     identityref
       |     +-- values*   srlg
       +-- path-srlgs-names
       |  +-- path-srlgs-name* [usage]
       |     +-- usage    identityref
       |     +-- names*   string
       +-- exclude-objects
       |  +-- excludes* []
       |     +-- (type)?
       |        +--:(numbered-node-hop)
       |        |  +-- numbered-node-hop
       |        |     +-- node-id     te-node-id
       |        |     +-- hop-type?   te-hop-type
       |        +--:(numbered-link-hop)
       |        |  +-- numbered-link-hop
       |        |     +-- link-tp-id    te-tp-id
       |        |     +-- hop-type?     te-hop-type
       |        |     +-- direction?    te-link-direction
       |        +--:(unnumbered-link-hop)
       |        |  +-- unnumbered-link-hop
       |        |     +-- link-tp-id    te-tp-id
       |        |     +-- node-id       te-node-id
       |        |     +-- hop-type?     te-hop-type
       |        |     +-- direction?    te-link-direction
       |        +--:(as-number)
       |        |  +-- as-number-hop
       |        |     +-- as-number    inet:as-number
       |        |     +-- hop-type?    te-hop-type
       |        +--:(label)
       |           +-- label-hop
       |              +-- te-label
       |                 ...
       +-- optimizations
          +-- (algorithm)?
             +--:(metric) {te-types:path-optimization-metric}?
             |  +-- optimization-metric* [metric-type]
             |     +-- metric-type    identityref
             |     +-- weight?        uint8
             +--:(objective-function)
                      {te-types:path-optimization-objective-function}?
                +-- objective-function
                   +-- objective-function-type?   identityref
]]></artwork></figure>

<t>The model, in addition to the metric types, defined in <xref target="RFC8776"/>,
   which can be applied to each individual path request, supports also
   additional metric types, which apply to a set of synchronized
   requests, as referenced in <xref target="RFC5541"/>. These additional metric types
   are defined by the following YANG identities:</t>

<t><list style="symbols">
  <t>svec-metric-type: base YANG identity from which cumulative metric
types identities are derived.</t>
  <t>svec-metric-cumul-te: cumulative TE cost metric type, as defined
in <xref target="RFC5541"/>.</t>
  <t>svec-metric-cumul-igp: cumulative IGP cost metric type, as defined
in <xref target="RFC5541"/>.</t>
  <t>svec-metric-cumul-hop: cumulative Hop metric type, representing
the cumulative version of the Hop metric type defined in
<xref target="RFC8776"/>.</t>
  <t>svec-metric-aggregate-bandwidth-consumption: aggregate bandwidth
consumption metric type, as defined in <xref target="RFC5541"/>.</t>
  <t>svec-metric-load-of-the-most-loaded-link: load of the most loaded
link metric type, as defined in <xref target="RFC5541"/>.</t>
</list></t>

</section>
<section anchor="returned-metric-values"><name>Returned metric values</name>

<t>This YANG data model provides a way to return the values of the
   metrics computed by the path computation in the output of RPC,
   together with other important information (e.g. SRLG, affinities,
   explicit route), emulating the syntax of the "C" flag of the "METRIC"
   PCEP object <xref target="RFC5440"/>:</t>

<figure><artwork type="ascii-art" name="returned-metrics.txt"><![CDATA[
       |     +--ro path-properties
       |        +--ro path-metric* [metric-type]
       |        |  +--ro metric-type           identityref
       |        |  +--ro accumulative-value?   uint64
       |        +--ro path-affinities-values
       |        |  +--ro path-affinities-value* [usage]
       |        |     +--ro usage    identityref
       |        |     +--ro value?   admin-groups
       |        +--ro path-affinity-names
       |        |  +--ro path-affinity-name* [usage]
       |        |     +--ro usage            identityref
       |        |     +--ro affinity-name* [name]
       |        |        +--ro name    string
       |        +--ro path-srlgs-lists
       |        |  +--ro path-srlgs-list* [usage]
       |        |     +--ro usage     identityref
       |        |     +--ro values*   srlg
       |        +--ro path-srlgs-names
       |        |  +--ro path-srlgs-name* [usage]
       |        |     +--ro usage    identityref
       |        |     +--ro names*   string
       |        +--ro path-route-objects
       |        |  ...
       |        +--ro te-bandwidth
       |        |  ...
       |        +--ro disjointness-type?
       |                te-types:te-path-disjointness
]]></artwork></figure>

<t>It also allows the client to request which information (metrics, SRLG
   and/or affinities) should be returned:</t>

<figure><artwork type="ascii-art" name="requested-metrics.txt"><![CDATA[
    |  +-- request-id                            uint32
    |  ...
    |  +-- requested-metrics* [metric-type]
    |  |  +-- metric-type    identityref
    |  +-- return-srlgs?                         boolean
    |  +-- return-affinities?                    boolean
    |  ...
]]></artwork></figure>

<t>This feature is essential for path computation in a multi-domain TE
   network as described in <xref target="md-uc"/>. In this case, the metrics
   returned by a path computation requested to a given underlying
   controller must be used by the client to compute the best end-to-end
   path. If they are missing, the client cannot compare different paths
   calculated by the underlying controllers and choose the best one for
   the optimal end-to-end (e2e) path.</t>

</section>
<section anchor="multiple-paths-requests-for-the-same-te-tunnel"><name>Multiple Paths Requests for the same TE tunnel</name>

<t>The YANG data model allows including multiple requests for different
   paths intended to be used within the same tunnel or within different
   tunnels.</t>

<t>When multiple requested paths are intended to be used within the same
   tunnel (e.g., requesting path computation for the primary and
   secondary paths of a protected tunnel), the set of attributes that
   are intended to be configured on per-tunnel basis rather than on per-
   path basis are common to all these path requests. These attributes
   includes both attributes which can be configured only a per-tunnel
   basis (e.g., tunnel-name, source/destination TTP, encoding and
   switching-type) as well attributes which can be configured both on a
   per-tunnel and on a per-path basis (e.g., the te-bandwidth or the
   associations).</t>

<t>Therefore, a tunnel-attributes list is defined, within the path
   computation request RPC:</t>

<figure><artwork type="ascii-art" name="tunnel-attributes-list.txt"><![CDATA[
    +-- tunnel-attributes* [tunnel-name]
    |  +-- tunnel-name               string
    |  +-- encoding?                 identityref
    |  +-- switching-type?           identityref
    |  +-- source?                   te-types:te-node-id
    |  +-- destination?              te-types:te-node-id
    |  +-- src-tunnel-tp-id?         binary
    |  +-- dst-tunnel-tp-id?         binary
    |  +-- bidirectional?            boolean
    |  +-- association-objects
    |  |  ...
    |  +-- protection-type?          identityref
    |  +-- restoration-type?         identityref
    |  +-- restoration-scheme?       identityref
    |  +-- te-topology-identifier
    |  |  +-- provider-id?   te-global-id
    |  |  +-- client-id?     te-global-id
    |  |  +-- topology-id?   te-topology-id
    |  +-- te-bandwidth
    |  |  ...
    |  +-- link-protection?          identityref
    |  +-- setup-priority?           uint8
    |  +-- hold-priority?            uint8
    |  +-- signaling-type?           identityref
    |  +-- hierarchy
    |     +-- dependency-tunnels
    |     |  ...
    |     +-- hierarchical-link
    |        ...
]]></artwork></figure>

<t>The path requests that are intended to be used within the same tunnel
   should reference the same entry in the tunnel-attributes list. This
   allows:</t>

<t><list style="symbols">
  <t>avoiding repeating the same set of per-tunnel parameters on
multiple requested paths;</t>
  <t>the server to understand what attributes are intended to be
configured on a per-tunnel basis (e.g., the te-bandwidth
configured in the tunnel-attributes) and what attributes are
intended to be configured on a per-path basis(e.g., the te-
bandwidth configured in the path-request). This could be useful
especially when the server also creates a TE tunnel instance
within the operational datastore to report the computed paths, as
described in <xref target="temp-state"/>: in this case, the tunnel-name is also
used as the suggested name for that TE tunnel instance.  <vspace blankLines='1'/>
The YANG data model allows also including requests for paths intended
 to modify existing tunnels (e.g., adding a protection path for an
 existing un-protected tunnel). In this case, the per-tunnel
 attributes are already provided in an existing TE tunnel instance and
 do not need to be re-configured in the path computation request RPC.
 Therefore, these requests should reference an existing TE tunnel
 instance.  <vspace blankLines='1'/>
It is also possible to request computing paths without indicating in
 which tunnel they are intended to be used (e.g., in case of an
 unprotected tunnel). In this case, the per-tunnel attributes could be
 provided together with the per-path attributes in the path request,
 without using the tunnel-attributes list.  <vspace blankLines='1'/>
The choices below are defined to distinguish the cases above:</t>
  <t>whether the per-tunnel attributes are configured by reference
(providing a leafref), to:  <list style="symbols">
      <t>either a TE tunnel instance, if it exists;</t>
      <t>or to an entry of the tunnel-attributes list, if the TE tunnel
instance does not exist;</t>
    </list></t>
  <t>or by value, providing the set of tunnel attributes within the
path request:</t>
</list></t>

<figure><artwork type="ascii-art" name="tunnel-attributes.txt"><![CDATA[
    |  +-- (tunnel-attributes)?
    |  |  +--:(reference)
    |  |  |  +-- tunnel-reference
    |  |  |     +-- (tunnel-exist)
    |  |  |     |  +--:(tunnel-ref)
    |  |  |     |  |  +-- tunnel-ref                te:tunnel-ref
    |  |  |     |  +--:(tunnel-attributes-ref)
    |  |  |     |     +-- tunnel-attributes-ref     leafref
    |  |  |     +-- path-name?                      string
    |  |  |     +-- (path-role)
    |  |  |        ...
    |  |  +--:(value)
    |  |     +-- tunnel-name?                    string
    |  |     +-- path-name?                      string
    |  |     +-- (path-role)?
    |  |     |  ...
    |  |     ...
    |  |     +-- encoding?                       identityref
    |  |     +-- switching-type?                 identityref
    |  |     ...
]]></artwork></figure>

<section anchor="tunnel-attributes-specified-by-value"><name>Tunnel attributes specified by value</name>

<t>The (value) case provides the set of attributes that are configured
   only on per-tunnel basis (e.g., tunnel-name, source/destination TTP,
   encoding and switching-type).</t>

<t>In this case, it is assumed that the requested path will be the only
   path within a tunnel.</t>

<t>If the only path within a tunnel is the transit segment of a multi-domain end-to-end path, it can be of any type (primary, secondary, reverse-primary
   or reverse-secondary). The (path-role) choice is used to specify its role in the path request:</t>

<figure><artwork type="ascii-art" name="tunnel-by-value.txt"><![CDATA[
    |  |     +-- (path-role)?
    |  |     |  +--:(primary-path)
    |  |     |  +--:(secondary-path)
    |  |     |  |  +-- secondary-path!
    |  |     |  |     +-- primary-path-name?   string
    |  |     |  +--:(primary-reverse-path)
    |  |     |  |  +-- primary-reverse-path!
    |  |     |  |     +-- primary-path-name?   string
    |  |     |  +--:(secondary-reverse-path)
    |  |     |     +-- secondary-reverse-path!
    |  |     |        +-- primary-path-name?           string
    |  |     |        +-- primary-reverse-path-name?   string
]]></artwork></figure>

<t>In all the other cases, the only path within a tunnel is a primary path.</t>

<t>The secondary-path, the primary-reverse-path and the secondary-
   reverse-path are presence container used to indicate the role of the
   path: by default, the path is assumed to be a primary path.</t>

<t>They optionally can contain the name of the primary-path under which
   the requested path could be associated within the YANG tree structure
   defined in <xref target="I-D.ietf-teas-yang-te"/>, which could be useful when the server also
   creates a TE tunnel instance within the operational datastore to
   report the computed paths, as described in <xref target="temp-state"/>: in this
   case, the tunnel-name and the path names are also used as the
   suggested name for that TE tunnel and path instances.</t>

</section>
<section anchor="tunnel-attributes-specified-by-reference"><name>Tunnel attributes specified by reference</name>

<t>The (reference) case provides the information needed to associate
   multiple path requests that are intended to be used within the same
   tunnel.</t>

<t>In order to indicate the role of the path being requested within the
   intended tunnel (e.g., primary or secondary path), the (path-role)
   choice is defined:</t>

<figure><artwork type="ascii-art" name="tunnel-by-reference.txt"><![CDATA[
    |  |  |     +-- (path-role)
    |  |  |        +--:(primary-path)
    |  |  |        |  +-- primary-path!
    |  |  |        |     ...
    |  |  |        +--:(secondary-path)
    |  |  |        |  +-- secondary-path
    |  |  |        |     ...
    |  |  |        +--:(primary-reverse-path)
    |  |  |        |  +-- primary-reverse-path
    |  |  |        |     ...
    |  |  |        +--:(secondary-reverse-path)
    |  |  |           +-- secondary-reverse-path
    |  |  |              ...
]]></artwork></figure>

<t>The primary-path is a presence container used to indicate that the
   requested path is intended to be used as a primary path. It can also
   contain some attributes which are configured only on primary paths
   (e.g., the k-requested-paths).</t>

<t>The secondary-path container indicates that the requested path is
   intended to be used as a secondary path and it contains at least
   references to one or more primary paths which can use it as a
   candidate secondary path:</t>

<figure><artwork type="ascii-art" name="secondary-path.txt"><![CDATA[
    |  |  |        |  +-- secondary-path
    |  |  |        |     ...
    |  |  |        |     +-- primary-path-ref* []
    |  |  |        |        +-- (primary-path-exist)
    |  |  |        |           +--:(path-ref)
    |  |  |        |           |  +-- primary-path-ref    leafref
    |  |  |        |           +--:(path-request-ref)
    |  |  |        |              +-- path-request-ref    leafref
]]></artwork></figure>

<t>A requested secondary path can reference any requested primary paths,
   and, in case they are intended to be used within an existing TE
   tunnel, it could also reference any existing primary-paths.</t>

<t>The secondary-path container can also contain some attributes which
   are configured only on secondary paths (e.g., the protection-type).</t>

<t>The primary-reverse-path container indicates that the requested path
   is intended to be used as a primary reverse path and it contains only
   the reference to the primary path which is intended to use it as a
   reverse path:</t>

<figure><artwork type="ascii-art" name="primary-reverse-path.txt"><![CDATA[
    |  |  |        |  +-- primary-reverse-path
    |  |  |        |     +-- (primary-path-exist)
    |  |  |        |        +--:(path-ref)
    |  |  |        |        |  +-- primary-path-ref    leafref
    |  |  |        |        +--:(path-request-ref)
    |  |  |        |           +-- path-request-ref    leafref
]]></artwork></figure>

<t>A requested primary reverse path can reference either a requested
   primary path, or, in case it is intended to be used within an
   existing TE tunnel, an existing primary-path.</t>

<t>The secondary-reverse-path container indicates that the requested
   path is intended to be used as a secondary reverse path and it
   contains at least references to one or more primary paths, whose
   primary reverse path can use it as a candidate secondary reverse
   path:</t>

<figure><artwork type="ascii-art" name="secondary-reverse-path.txt"><![CDATA[
    |  |  |           +-- secondary-reverse-path
    |  |  |              ...
    |  |  |              +-- primary-reverse-path* []
    |  |  |                 +-- (primary-reverse-path-exist)
    |  |  |                    +--:(path-ref)
    |  |  |                    |  +-- primary-path-ref    leafref
    |  |  |                    +--:(path-request-ref)
    |  |  |                       +-- path-request-ref    leafref
]]></artwork></figure>

<t>A requested secondary reverse path can reference any requested
   primary paths, and, in case they are intended to be used within an
   existing TE tunnel, it could reference also existing primary-paths.</t>

<t>The secondary-reverse-path container can also contain some attributes
   which are configured only on secondary reverse paths (e.g., the
   protection-type).</t>

<t>In case the requested path is a transit segment of a multi-domain
   end-to-end path, the primary-path may not be needed to be
   setup/computed. However, the request for path computation of a
   secondary-path or a primary-reverse or of a secondary-reverse-path
   requires that the primary-path exists or it is requested within the
   same RPC request. In the latter case, the path request for the
   primary-path should have an empty 'route-object-include-exclude' list,
   as described in section 5.1.1 of <xref target="I-D.ietf-teas-yang-te"/>, to indicate to the server that
   path computation is not requested and no path properties will
   therefore be returned in the RPC response.</t>

</section>
</section>
<section anchor="multi-layer-path-computation"><name>Multi-Layer Path Computation</name>

<t>The models supports requesting multi-layer path computation following
   the same approach based on dependency tunnels, as defined in <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>The tunnel-attributes of a given client-layer path request can
   reference server-layer TE tunnels which can already exist in the YANG
   datastore or be specified in the tunnel-attributes list, within the
   same RPC request:</t>

<figure><artwork type="ascii-art" name="dependency-tunnels.txt"><![CDATA[
    |     +-- dependency-tunnels
    |     |  +-- dependency-tunnel* [name]
    |     |  |  +-- name              -> /te:te/tunnels/tunnel/name
    |     |  |  +-- encoding?         identityref
    |     |  |  +-- switching-type?   identityref
    |     |  +-- dependency-tunnel-attributes* [name]
    |     |     +-- name              leafref
    |     |     +-- encoding?         identityref
    |     |     +-- switching-type?   identityref
]]></artwork></figure>

<t>In a similar way as in <xref target="I-D.ietf-teas-yang-te"/>, the server-layer tunnel
   attributes should provide the information of what would be the
   dynamic link in the client layer topology supported by that tunnel,
   if instantiated:</t>

<figure><artwork type="ascii-art" name="hierarchical-link.txt"><![CDATA[
    |     +-- hierarchical-link
    |        +-- enable?                   boolean
    |        +-- local-te-node-id?         te-types:te-node-id
    |        +-- local-te-link-tp-id?      te-types:te-tp-id
    |        +-- remote-te-node-id?        te-types:te-node-id
    |        +-- te-topology-identifier
    |           +-- provider-id?   te-global-id
    |           +-- client-id?     te-global-id
    |           +-- topology-id?   te-topology-id
]]></artwork></figure>

<t>It is worth noting that since path computation RPC is stateless, the
   dynamic hierarchical links configured for the server-layer tunnel
   attributes cannot be used for path computation of any client-layer
   path unless explicitly referenced in the dependency-tunnel-attributes
   list within the same RPC request.</t>

</section>
</section>
<section anchor="yang-data-model-for-te-path-computation"><name>YANG data model for TE path computation</name>

<section anchor="pc-tree"><name>Tree diagram</name>

<t><xref target="fig-pc-tree"/> below shows the tree diagram of the YANG data model defined
   in module ietf-te-path-computation.yang, defined in <xref target="pc-yang"/>.</t>

<figure title="TE path computation tree diagram" anchor="fig-pc-tree"><artwork type="ascii-art" name="ietf-te-path-computation.tree"><![CDATA[
module: ietf-te-path-computation

  augment /te:tunnels-path-compute/te:input/te:path-compute-info:
    +-- path-request* [request-id]
    |  +-- request-id                            uint32
    |  +-- (tunnel-attributes)?
    |  |  +--:(reference)
    |  |  |  +-- tunnel-reference
    |  |  |     +-- (tunnel-exist)
    |  |  |     |  +--:(tunnel-ref)
    |  |  |     |  |  +-- tunnel-ref                te:tunnel-ref
    |  |  |     |  +--:(tunnel-attributes-ref)
    |  |  |     |     +-- tunnel-attributes-ref     leafref
    |  |  |     +-- path-name?                      string
    |  |  |     +-- (path-role)
    |  |  |        +--:(primary-path)
    |  |  |        |  +-- primary-path!
    |  |  |        |     +-- preference?          uint8
    |  |  |        |     +-- co-routed?           empty
    |  |  |        |     +-- k-requested-paths?   uint8
    |  |  |        +--:(secondary-path)
    |  |  |        |  +-- secondary-path
    |  |  |        |     +-- preference?           uint8
    |  |  |        |     +-- co-routed?            empty
    |  |  |        |     +-- protection-type?      identityref
    |  |  |        |     +-- restoration-type?     identityref
    |  |  |        |     +-- restoration-scheme?   identityref
    |  |  |        |     +-- primary-path-ref* []
    |  |  |        |        +-- (primary-path-exist)
    |  |  |        |           +--:(path-ref)
    |  |  |        |           |  +-- primary-path-ref    leafref
    |  |  |        |           +--:(path-request-ref)
    |  |  |        |              +-- path-request-ref    leafref
    |  |  |        +--:(primary-reverse-path)
    |  |  |        |  +-- primary-reverse-path
    |  |  |        |     +-- (primary-path-exist)
    |  |  |        |        +--:(path-ref)
    |  |  |        |        |  +-- primary-path-ref    leafref
    |  |  |        |        +--:(path-request-ref)
    |  |  |        |           +-- path-request-ref    leafref
    |  |  |        +--:(secondary-reverse-path)
    |  |  |           +-- secondary-reverse-path
    |  |  |              +-- protection-type?        identityref
    |  |  |              +-- restoration-type?       identityref
    |  |  |              +-- restoration-scheme?     identityref
    |  |  |              +-- primary-reverse-path* []
    |  |  |                 +-- (primary-reverse-path-exist)
    |  |  |                    +--:(path-ref)
    |  |  |                    |  +-- primary-path-ref    leafref
    |  |  |                    +--:(path-request-ref)
    |  |  |                       +-- path-request-ref    leafref
    |  |  +--:(value)
    |  |     +-- tunnel-name?                    string
    |  |     +-- path-name?                      string
    |  |     +-- (path-role)?
    |  |     |  +--:(primary-path)
    |  |     |  +--:(secondary-path)
    |  |     |  |  +-- secondary-path!
    |  |     |  |     +-- primary-path-name?   string
    |  |     |  +--:(primary-reverse-path)
    |  |     |  |  +-- primary-reverse-path!
    |  |     |  |     +-- primary-path-name?   string
    |  |     |  +--:(secondary-reverse-path)
    |  |     |     +-- secondary-reverse-path!
    |  |     |        +-- primary-path-name?           string
    |  |     |        +-- primary-reverse-path-name?   string
    |  |     +-- k-requested-paths?              uint8
    |  |     +-- encoding?                       identityref
    |  |     +-- switching-type?                 identityref
    |  |     +-- source?                         te-types:te-node-id
    |  |     +-- destination?                    te-types:te-node-id
    |  |     +-- src-tunnel-tp-id?               binary
    |  |     +-- dst-tunnel-tp-id?               binary
    |  |     +-- bidirectional?                  boolean
    |  |     +-- te-topology-identifier
    |  |        +-- provider-id?   te-global-id
    |  |        +-- client-id?     te-global-id
    |  |        +-- topology-id?   te-topology-id
    |  +-- association-objects
    |  |  +-- association-object* [association-key]
    |  |  |  +-- association-key    string
    |  |  |  +-- type?              identityref
    |  |  |  +-- id?                uint16
    |  |  |  +-- source
    |  |  |     +-- id?     te-gen-node-id
    |  |  |     +-- type?   enumeration
    |  |  +-- association-object-extended* [association-key]
    |  |     +-- association-key    string
    |  |     +-- type?              identityref
    |  |     +-- id?                uint16
    |  |     +-- source
    |  |     |  +-- id?     te-gen-node-id
    |  |     |  +-- type?   enumeration
    |  |     +-- global-source?     uint32
    |  |     +-- extended-id?       yang:hex-string
    |  +-- optimizations
    |  |  +-- (algorithm)?
    |  |     +--:(metric) {path-optimization-metric}?
    |  |     |  +-- optimization-metric* [metric-type]
    |  |     |  |  +-- metric-type                       identityref
    |  |     |  |  +-- weight?                           uint8
    |  |     |  |  +-- explicit-route-exclude-objects
    |  |     |  |  |  +-- route-object-exclude-object* [index]
    |  |     |  |  |     +-- index                        uint32
    |  |     |  |  |     +-- (type)?
    |  |     |  |  |        +--:(numbered-node-hop)
    |  |     |  |  |        |  +-- numbered-node-hop
    |  |     |  |  |        |     +-- node-id     te-node-id
    |  |     |  |  |        |     +-- hop-type?   te-hop-type
    |  |     |  |  |        +--:(numbered-link-hop)
    |  |     |  |  |        |  +-- numbered-link-hop
    |  |     |  |  |        |     +-- link-tp-id    te-tp-id
    |  |     |  |  |        |     +-- hop-type?     te-hop-type
    |  |     |  |  |        |     +-- direction?    te-link-direction
    |  |     |  |  |        +--:(unnumbered-link-hop)
    |  |     |  |  |        |  +-- unnumbered-link-hop
    |  |     |  |  |        |     +-- link-tp-id    te-tp-id
    |  |     |  |  |        |     +-- node-id       te-node-id
    |  |     |  |  |        |     +-- hop-type?     te-hop-type
    |  |     |  |  |        |     +-- direction?    te-link-direction
    |  |     |  |  |        +--:(as-number)
    |  |     |  |  |        |  +-- as-number-hop
    |  |     |  |  |        |     +-- as-number    inet:as-number
    |  |     |  |  |        |     +-- hop-type?    te-hop-type
    |  |     |  |  |        +--:(label)
    |  |     |  |  |        |  +-- label-hop
    |  |     |  |  |        |     +-- te-label
    |  |     |  |  |        |        +-- (technology)?
    |  |     |  |  |        |        |  +--:(generic)
    |  |     |  |  |        |        |     +-- generic?
    |  |     |  |  |        |        |             rt-types:generalized-label
    |  |     |  |  |        |        +-- direction?
    |  |     |  |  |        |                te-label-direction
    |  |     |  |  |        +--:(srlg)
    |  |     |  |  |           +-- srlg
    |  |     |  |  |              +-- srlg?   uint32
    |  |     |  |  +-- explicit-route-include-objects
    |  |     |  |     +-- route-object-include-object* [index]
    |  |     |  |        +-- index                        uint32
    |  |     |  |        +-- (type)?
    |  |     |  |           +--:(numbered-node-hop)
    |  |     |  |           |  +-- numbered-node-hop
    |  |     |  |           |     +-- node-id     te-node-id
    |  |     |  |           |     +-- hop-type?   te-hop-type
    |  |     |  |           +--:(numbered-link-hop)
    |  |     |  |           |  +-- numbered-link-hop
    |  |     |  |           |     +-- link-tp-id    te-tp-id
    |  |     |  |           |     +-- hop-type?     te-hop-type
    |  |     |  |           |     +-- direction?    te-link-direction
    |  |     |  |           +--:(unnumbered-link-hop)
    |  |     |  |           |  +-- unnumbered-link-hop
    |  |     |  |           |     +-- link-tp-id    te-tp-id
    |  |     |  |           |     +-- node-id       te-node-id
    |  |     |  |           |     +-- hop-type?     te-hop-type
    |  |     |  |           |     +-- direction?    te-link-direction
    |  |     |  |           +--:(as-number)
    |  |     |  |           |  +-- as-number-hop
    |  |     |  |           |     +-- as-number    inet:as-number
    |  |     |  |           |     +-- hop-type?    te-hop-type
    |  |     |  |           +--:(label)
    |  |     |  |              +-- label-hop
    |  |     |  |                 +-- te-label
    |  |     |  |                    +-- (technology)?
    |  |     |  |                    |  +--:(generic)
    |  |     |  |                    |     +-- generic?
    |  |     |  |                    |             rt-types:generalized-label
    |  |     |  |                    +-- direction?
    |  |     |  |                            te-label-direction
    |  |     |  +-- tiebreakers
    |  |     |     +-- tiebreaker* [tiebreaker-type]
    |  |     |        +-- tiebreaker-type    identityref
    |  |     +--:(objective-function)
    |  |              {path-optimization-objective-function}?
    |  |        +-- objective-function
    |  |           +-- objective-function-type?   identityref
    |  +-- named-path-constraint?                leafref
    |  |       {te-types:named-path-constraints}?
    |  +-- te-bandwidth
    |  |  +-- (technology)?
    |  |     +--:(generic)
    |  |        +-- generic?   te-bandwidth
    |  +-- link-protection?                      identityref
    |  +-- setup-priority?                       uint8
    |  +-- hold-priority?                        uint8
    |  +-- signaling-type?                       identityref
    |  +-- path-metric-bounds
    |  |  +-- path-metric-bound* [metric-type]
    |  |     +-- metric-type    identityref
    |  |     +-- upper-bound?   uint64
    |  +-- path-affinities-values
    |  |  +-- path-affinities-value* [usage]
    |  |     +-- usage    identityref
    |  |     +-- value?   admin-groups
    |  +-- path-affinity-names
    |  |  +-- path-affinity-name* [usage]
    |  |     +-- usage            identityref
    |  |     +-- affinity-name* [name]
    |  |        +-- name    string
    |  +-- path-srlgs-lists
    |  |  +-- path-srlgs-list* [usage]
    |  |     +-- usage     identityref
    |  |     +-- values*   srlg
    |  +-- path-srlgs-names
    |  |  +-- path-srlgs-name* [usage]
    |  |     +-- usage    identityref
    |  |     +-- names*   string
    |  +-- disjointness?                         te-path-disjointness
    |  +-- explicit-route-objects-always
    |  |  +-- route-object-exclude-always* [index]
    |  |  |  +-- index                        uint32
    |  |  |  +-- (type)?
    |  |  |     +--:(numbered-node-hop)
    |  |  |     |  +-- numbered-node-hop
    |  |  |     |     +-- node-id     te-node-id
    |  |  |     |     +-- hop-type?   te-hop-type
    |  |  |     +--:(numbered-link-hop)
    |  |  |     |  +-- numbered-link-hop
    |  |  |     |     +-- link-tp-id    te-tp-id
    |  |  |     |     +-- hop-type?     te-hop-type
    |  |  |     |     +-- direction?    te-link-direction
    |  |  |     +--:(unnumbered-link-hop)
    |  |  |     |  +-- unnumbered-link-hop
    |  |  |     |     +-- link-tp-id    te-tp-id
    |  |  |     |     +-- node-id       te-node-id
    |  |  |     |     +-- hop-type?     te-hop-type
    |  |  |     |     +-- direction?    te-link-direction
    |  |  |     +--:(as-number)
    |  |  |     |  +-- as-number-hop
    |  |  |     |     +-- as-number    inet:as-number
    |  |  |     |     +-- hop-type?    te-hop-type
    |  |  |     +--:(label)
    |  |  |        +-- label-hop
    |  |  |           +-- te-label
    |  |  |              +-- (technology)?
    |  |  |              |  +--:(generic)
    |  |  |              |     +-- generic?
    |  |  |              |             rt-types:generalized-label
    |  |  |              +-- direction?       te-label-direction
    |  |  +-- route-object-include-exclude* [index]
    |  |     +-- explicit-route-usage?        identityref
    |  |     +-- index                        uint32
    |  |     +-- (type)?
    |  |        +--:(numbered-node-hop)
    |  |        |  +-- numbered-node-hop
    |  |        |     +-- node-id     te-node-id
    |  |        |     +-- hop-type?   te-hop-type
    |  |        +--:(numbered-link-hop)
    |  |        |  +-- numbered-link-hop
    |  |        |     +-- link-tp-id    te-tp-id
    |  |        |     +-- hop-type?     te-hop-type
    |  |        |     +-- direction?    te-link-direction
    |  |        +--:(unnumbered-link-hop)
    |  |        |  +-- unnumbered-link-hop
    |  |        |     +-- link-tp-id    te-tp-id
    |  |        |     +-- node-id       te-node-id
    |  |        |     +-- hop-type?     te-hop-type
    |  |        |     +-- direction?    te-link-direction
    |  |        +--:(as-number)
    |  |        |  +-- as-number-hop
    |  |        |     +-- as-number    inet:as-number
    |  |        |     +-- hop-type?    te-hop-type
    |  |        +--:(label)
    |  |        |  +-- label-hop
    |  |        |     +-- te-label
    |  |        |        +-- (technology)?
    |  |        |        |  +--:(generic)
    |  |        |        |     +-- generic?
    |  |        |        |             rt-types:generalized-label
    |  |        |        +-- direction?       te-label-direction
    |  |        +--:(srlg)
    |  |           +-- srlg
    |  |              +-- srlg?   uint32
    |  +-- path-in-segment!
    |  |  +-- label-restrictions
    |  |     +-- label-restriction* [index]
    |  |        +-- restriction?    enumeration
    |  |        +-- index           uint32
    |  |        +-- label-start
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-end
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-step
    |  |        |  +-- (technology)?
    |  |        |     +--:(generic)
    |  |        |        +-- generic?   int32
    |  |        +-- range-bitmap?   yang:hex-string
    |  +-- path-out-segment!
    |  |  +-- label-restrictions
    |  |     +-- label-restriction* [index]
    |  |        +-- restriction?    enumeration
    |  |        +-- index           uint32
    |  |        +-- label-start
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-end
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-step
    |  |        |  +-- (technology)?
    |  |        |     +--:(generic)
    |  |        |        +-- generic?   int32
    |  |        +-- range-bitmap?   yang:hex-string
    |  +-- requested-metrics* [metric-type]
    |  |  +-- metric-type    identityref
    |  +-- return-srlgs?                         boolean
    |  +-- return-affinities?                    boolean
    |  +-- requested-state!
    |     +-- timer?            uint16
    |     +-- transaction-id?   string
    +-- tunnel-attributes* [tunnel-name]
    |  +-- tunnel-name               string
    |  +-- encoding?                 identityref
    |  +-- switching-type?           identityref
    |  +-- source?                   te-types:te-node-id
    |  +-- destination?              te-types:te-node-id
    |  +-- src-tunnel-tp-id?         binary
    |  +-- dst-tunnel-tp-id?         binary
    |  +-- bidirectional?            boolean
    |  +-- association-objects
    |  |  +-- association-object* [association-key]
    |  |  |  +-- association-key    string
    |  |  |  +-- type?              identityref
    |  |  |  +-- id?                uint16
    |  |  |  +-- source
    |  |  |     +-- id?     te-gen-node-id
    |  |  |     +-- type?   enumeration
    |  |  +-- association-object-extended* [association-key]
    |  |     +-- association-key    string
    |  |     +-- type?              identityref
    |  |     +-- id?                uint16
    |  |     +-- source
    |  |     |  +-- id?     te-gen-node-id
    |  |     |  +-- type?   enumeration
    |  |     +-- global-source?     uint32
    |  |     +-- extended-id?       yang:hex-string
    |  +-- protection-type?          identityref
    |  +-- restoration-type?         identityref
    |  +-- restoration-scheme?       identityref
    |  +-- te-topology-identifier
    |  |  +-- provider-id?   te-global-id
    |  |  +-- client-id?     te-global-id
    |  |  +-- topology-id?   te-topology-id
    |  +-- te-bandwidth
    |  |  +-- (technology)?
    |  |     +--:(generic)
    |  |        +-- generic?   te-bandwidth
    |  +-- link-protection?          identityref
    |  +-- setup-priority?           uint8
    |  +-- hold-priority?            uint8
    |  +-- signaling-type?           identityref
    |  +-- hierarchy
    |     +-- dependency-tunnels
    |     |  +-- dependency-tunnel* [name]
    |     |  |  +-- name              -> /te:te/tunnels/tunnel/name
    |     |  |  +-- encoding?         identityref
    |     |  |  +-- switching-type?   identityref
    |     |  +-- dependency-tunnel-attributes* [name]
    |     |     +-- name              leafref
    |     |     +-- encoding?         identityref
    |     |     +-- switching-type?   identityref
    |     +-- hierarchical-link
    |        +-- enable?                   boolean
    |        +-- local-te-node-id?         te-types:te-node-id
    |        +-- local-te-link-tp-id?      te-types:te-tp-id
    |        +-- remote-te-node-id?        te-types:te-node-id
    |        +-- te-topology-identifier
    |           +-- provider-id?   te-global-id
    |           +-- client-id?     te-global-id
    |           +-- topology-id?   te-topology-id
    +-- synchronization* []
       +-- svec
       |  +-- relaxable?      boolean
       |  +-- disjointness?   te-path-disjointness
       |  +-- request-id*     uint32
       +-- svec-constraints
       |  +-- path-metric-bound* [metric-type]
       |     +-- metric-type    identityref
       |     +-- upper-bound?   uint64
       +-- path-srlgs-lists
       |  +-- path-srlgs-list* [usage]
       |     +-- usage     identityref
       |     +-- values*   srlg
       +-- path-srlgs-names
       |  +-- path-srlgs-name* [usage]
       |     +-- usage    identityref
       |     +-- names*   string
       +-- exclude-objects
       |  +-- excludes* []
       |     +-- (type)?
       |        +--:(numbered-node-hop)
       |        |  +-- numbered-node-hop
       |        |     +-- node-id     te-node-id
       |        |     +-- hop-type?   te-hop-type
       |        +--:(numbered-link-hop)
       |        |  +-- numbered-link-hop
       |        |     +-- link-tp-id    te-tp-id
       |        |     +-- hop-type?     te-hop-type
       |        |     +-- direction?    te-link-direction
       |        +--:(unnumbered-link-hop)
       |        |  +-- unnumbered-link-hop
       |        |     +-- link-tp-id    te-tp-id
       |        |     +-- node-id       te-node-id
       |        |     +-- hop-type?     te-hop-type
       |        |     +-- direction?    te-link-direction
       |        +--:(as-number)
       |        |  +-- as-number-hop
       |        |     +-- as-number    inet:as-number
       |        |     +-- hop-type?    te-hop-type
       |        +--:(label)
       |           +-- label-hop
       |              +-- te-label
       |                 +-- (technology)?
       |                 |  +--:(generic)
       |                 |     +-- generic?
       |                 |             rt-types:generalized-label
       |                 +-- direction?       te-label-direction
       +-- optimizations
          +-- (algorithm)?
             +--:(metric) {te-types:path-optimization-metric}?
             |  +-- optimization-metric* [metric-type]
             |     +-- metric-type    identityref
             |     +-- weight?        uint8
             +--:(objective-function)
                      {te-types:path-optimization-objective-function}?
                +-- objective-function
                   +-- objective-function-type?   identityref
  augment /te:tunnels-path-compute/te:output/te:path-compute-result:
    +--ro response* [response-id]
       +--ro response-id                         uint32
       +--ro computed-paths-properties
       |  +--ro computed-path-properties* [k-index]
       |     +--ro k-index            uint8
       |     +--ro path-properties
       |        +--ro path-metric* [metric-type]
       |        |  +--ro metric-type           identityref
       |        |  +--ro accumulative-value?   uint64
       |        +--ro path-affinities-values
       |        |  +--ro path-affinities-value* [usage]
       |        |     +--ro usage    identityref
       |        |     +--ro value?   admin-groups
       |        +--ro path-affinity-names
       |        |  +--ro path-affinity-name* [usage]
       |        |     +--ro usage            identityref
       |        |     +--ro affinity-name* [name]
       |        |        +--ro name    string
       |        +--ro path-srlgs-lists
       |        |  +--ro path-srlgs-list* [usage]
       |        |     +--ro usage     identityref
       |        |     +--ro values*   srlg
       |        +--ro path-srlgs-names
       |        |  +--ro path-srlgs-name* [usage]
       |        |     +--ro usage    identityref
       |        |     +--ro names*   string
       |        +--ro path-route-objects
       |        |  +--ro path-route-object* [index]
       |        |     +--ro index                        uint32
       |        |     +--ro (type)?
       |        |        +--:(numbered-node-hop)
       |        |        |  +--ro numbered-node-hop
       |        |        |     +--ro node-id     te-node-id
       |        |        |     +--ro hop-type?   te-hop-type
       |        |        +--:(numbered-link-hop)
       |        |        |  +--ro numbered-link-hop
       |        |        |     +--ro link-tp-id    te-tp-id
       |        |        |     +--ro hop-type?     te-hop-type
       |        |        |     +--ro direction?    te-link-direction
       |        |        +--:(unnumbered-link-hop)
       |        |        |  +--ro unnumbered-link-hop
       |        |        |     +--ro link-tp-id    te-tp-id
       |        |        |     +--ro node-id       te-node-id
       |        |        |     +--ro hop-type?     te-hop-type
       |        |        |     +--ro direction?    te-link-direction
       |        |        +--:(as-number)
       |        |        |  +--ro as-number-hop
       |        |        |     +--ro as-number    inet:as-number
       |        |        |     +--ro hop-type?    te-hop-type
       |        |        +--:(label)
       |        |           +--ro label-hop
       |        |              +--ro te-label
       |        |                 +--ro (technology)?
       |        |                 |  +--:(generic)
       |        |                 |     +--ro generic?
       |        |                 |             rt-types:generalized-label
       |        |                 +--ro direction?
       |        |                         te-label-direction
       |        +--ro te-bandwidth
       |        |  +--ro (technology)?
       |        |     +--:(generic)
       |        |        +--ro generic?   te-bandwidth
       |        +--ro disjointness-type?
       |                te-types:te-path-disjointness
       +--ro computed-path-error-infos
       |  +--ro computed-path-error-info* []
       |     +--ro error-description?   string
       |     +--ro error-timestamp?     yang:date-and-time
       |     +--ro error-reason?        identityref
       +--ro tunnel-ref?                         te:tunnel-ref
       +--ro (path-role)?
          +--:(primary)
          |  +--ro primary-path-ref?             leafref
          +--:(primary-reverse)
          |  +--ro primary-reverse-path-ref?     leafref
          +--:(secondary)
          |  +--ro secondary-path-ref?           leafref
          +--:(secondary-reverse)
             +--ro secondary-reverse-path-ref?   leafref
  augment /te:tunnels-actions/te:input/te:tunnel-info/te:filter-type:
    +--:(path-compute-transactions)
       +-- path-compute-transaction-id*   string
  augment /te:tunnels-actions/te:output:
    +--ro path-computed-delete-result
       +--ro path-compute-transaction-id*   string
]]></artwork></figure>

</section>
<section anchor="pc-yang"><name>YANG module</name>

<figure title="TE path computation YANG module" anchor="fig-pc-yang"><sourcecode type="yang" markers="true" name="ietf-te-path-computation@2022-10-21.yang"><![CDATA[
module ietf-te-path-computation {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-te-path-computation";
  prefix te-pc;

  import ietf-te {
    prefix te;
    reference
      "RFCYYYY: A YANG Data Model for Traffic Engineering Tunnels
       and Interfaces";
  }

  /* Note: The RFC Editor will replace YYYY with the number assigned
     to the RFC once draft-ietf-teas-yang-te becomes an RFC.*/

  import ietf-te-types {
    prefix te-types;
    reference
      "RFCZZZZ: Updated Common YANG Data Types for Traffic 
      Engineering";
  }

  /* Note: The RFC Editor will replace ZZZZ with the number assigned
     to the RFC once draft-ietf-teas-rfc8776-update becomes an RFC.*/

  organization
    "Traffic Engineering Architecture and Signaling (TEAS)
     Working Group";
  contact
    "WG Web: <https://datatracker.ietf.org/wg/teas/>
     WG List:  <mailto:teas@ietf.org>

     Editor:   Italo Busi
               <mailto:italo.busi@huawei.com>

     Editor:   Sergio Belotti
               <mailto:sergio.belotti@nokia.com>

     Editor:   Victor Lopez
               <mailto:victor.lopez@nokia.com>

     Editor:   Oscar Gonzalez de Dios
               <mailto:oscar.gonzalezdedios@telefonica.com>

     Editor:   Anurag Sharma
               <mailto:ansha@google.com>

     Editor:   Yan Shi
               <mailto:shiyan49@chinaunicom.cn>

     Editor:   Ricard Vilalta
               <mailto:ricard.vilalta@cttc.es>

     Editor:   Karthik Sethuraman
               <mailto:karthik.sethuraman@necam.com>

     Editor:   Michael Scharf
               <mailto:michael.scharf@gmail.com>

     Editor:   Daniele Ceccarelli
               <mailto:daniele.ceccarelli@ericsson.com>
     
    ";
  description
    "This module defines a YANG data model for requesting Traffic
     Engineering (TE) path computation. The YANG data model defined
     in this document augments the RPCs defined in the generic TE
     module (ietf-te).

     The model fully conforms to the
     Network Management Datastore Architecture (NMDA).

     Copyright (c) 2023 IETF Trust and the persons
     identified as authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with
     or without modification, is permitted pursuant to, and
     subject to the license terms contained in, the Revised
     BSD License set forth in Section 4.c of the IETF Trust's
     Legal Provisions Relating to IETF Documents
     (https://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC XXXX; see
     the RFC itself for full legal notices.

     The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL', 'SHALL
     NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'NOT RECOMMENDED',
     'MAY', and 'OPTIONAL' in this document are to be interpreted as
     described in BCP 14 (RFC 2119) (RFC 8174) when, and only when,
     they appear in all capitals, as shown here.";

  // RFC Ed.: replace XXXX with actual RFC number and remove
  // this note
  // replace the revision date with the module publication date
  // the format is (year-month-day)

  revision 2023-01-12 {
    description
      "Initial revision";
    reference
      "RFC XXXX: A YANG Data Model for requesting path computation";
  }

  // RFC Ed.: replace XXXX with actual RFC number and remove
  // this note

  /*
   * Identities
   */

  identity tunnel-action-path-compute-delete {
    base te-types:tunnel-actions-type;
    description
      "Action type to delete the transient states
      of computed paths, as described in section 3.3.1 of
      RFC XXXX.";
    reference
      "RFC XXXX: A YANG Data Model for requesting path computation";
  }

  /*
   * Groupings
   */

  grouping protection-restoration-properties {
    description
      "This grouping defines the restoration and protection types
       for a path in the path computation request.";
    leaf protection-type {
      type identityref {
        base te-types:lsp-protection-type;
      }
      default "te-types:lsp-protection-unprotected";
      description
        "LSP protection type.";
    }
    leaf restoration-type {
      type identityref {
        base te-types:lsp-restoration-type;
      }
      default "te-types:lsp-restoration-restore-any";
      description
        "LSP restoration type.";
    }
    leaf restoration-scheme {
      type identityref {
        base te-types:restoration-scheme-type;
      }
      default "te-types:restoration-scheme-preconfigured";
      description
        "LSP restoration scheme.";
    }
  } // grouping protection-restoration-properties

  grouping requested-info {
    description
      "This grouping defines the information which is requested
       (e.g., metrics), in the path computation request, to be
       returned in the path computation response.";
    list requested-metrics {
      key "metric-type";
      description
        "The list of the requested metrics.

         The metrics listed here MUST be returned in the response.
         Returning other metrics in the response is OPTIONAL.";
      leaf metric-type {
        type identityref {
          base te-types:path-metric-type;
        }
        description
          "The metric requested to be returned in the response";
      }
    }
    leaf return-srlgs {
      type boolean;
      default "false";
      description
        "If true, path Shared Risk Link Groups (SRLGs) MUST be
         returned in the response.
         If false, returning path SRLGs in the response OPTIONAL.";
    }
    leaf return-affinities {
      type boolean;
      default "false";
      description
        "If true, path affinities MUST be returned in the response.
         If false, returning path affinities in the response is
         OPTIONAL.";
    }
  } // grouping requested-info

  grouping requested-state {
    description
      "Configuration for the transient state used
       to report the computed path";
    container requested-state {
      presence
        "Request temporary reporting of the computed path state";
      description
        "Configures attributes for the temporary reporting of the
         computed path state (e.g., expiration timer).";
      leaf timer {
        type uint16;
        units "minutes";
        default "10";
        description
          "The timeout after which the transient state reporting
          the computed path SHOULD be removed.";
      }
      leaf transaction-id {
        type string;
        description
          "The transaction-id associated with this path computation
          to be used for fast deletion of the transient states
          associated with multiple path computations.

          This transaction-id can be used to explicitly delete all
          the transient states of all the computed paths associated
          with the same transaction-id.

          When one path associated with a transaction-id is setup,
          the transient states of all the other computed paths
          with the same transaction-id are automatically removed.

          If not specified, the transient state is removed only
          when the timer expires (when the timer is specified)
          or not created at all (stateless path computation,
          when the timer is not specified).";
      }
    }
  } // grouping requested-state

  grouping reported-state {
    description
      "This grouping defines the information, returned in the path
       computation response, reporting the transient state related
       to the computed path";
    leaf tunnel-ref {
      type te:tunnel-ref;
      description
        "
         Reference to the tunnel that reports the transient state
         of the computed path.

         If no transient state is created, this attribute is
         omitted.
        ";
    }
    choice path-role {
      description
        "The transient state of the computed path can be reported
         as a primary, primary-reverse, secondary or
         a secondary-reverse path of a te-tunnel";
      case primary {
        leaf primary-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:primary-paths/te:primary-path/"
               + "te:name";
          }
          must '../tunnel-ref' {
            description
              "The primary-path name can only be reported
               if the tunnel name is also reported.";
          }
          description
            "
             Reference to the primary-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case primary
      case primary-reverse {
        leaf primary-reverse-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:primary-paths/te:primary-path/"
               + "te:name";
          }
          must '../tunnel-ref' {
            description
              "The primary-reverse-path name can only be reported
               if the tunnel name is also reported.";
          }
          description
            "
             Reference to the primary-reverse-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case primary-reverse
      case secondary {
        leaf secondary-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:secondary-paths/te:secondary-path/"
               + "te:name";
          }
          must '../tunnel-ref' {
            description
              "The secondary-path name can only be reported
               if the tunnel name is also reported.";
          }
          description
            "
             Reference to the secondary-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case secondary
      case secondary-reverse {
        leaf secondary-reverse-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:secondary-reverse-paths/"
               + "te:secondary-reverse-path/te:name";
          }
          must '../tunnel-ref' {
            description
              "The secondary-reverse-path name can only be reported
               if the tunnel name is also reported.";
          }
          description
            "
             Reference to the secondary-reverse-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case secondary
    } // choice path
  } // grouping reported-state

  grouping synchronization-constraints {
    description
      "Global constraints applicable to synchronized path
       computation requests.";
    container svec-constraints {
      description
        "global svec constraints";
      list path-metric-bound {
        key "metric-type";
        description
          "list of bound metrics";
        leaf metric-type {
          type identityref {
            base te-types:svec-metric-type;
          }
          description
            "SVEC metric type.";
          reference
            "RFC5541: Encoding of Objective Functions in the Path
            Computation Element Communication Protocol (PCEP).";
        }
        leaf upper-bound {
          type uint64;
          description
            "Upper bound on SVEC metric";
        }
      }
    }
    uses te-types:generic-path-srlgs;
    container exclude-objects {
      description
        "Resources to be excluded";
      list excludes {
        description
          "List of Explicit Route Objects to always exclude
           from synchronized path computation";
        uses te-types:explicit-route-hop;
      }
    }
  } // grouping synchronization-constraints

  grouping synchronization-optimization {
    description
      "Optimizations applicable to synchronized path
       computation requests.";
    container optimizations {
      description
        "The objective function container that includes attributes
         to impose when computing a synchronized set of paths";
      choice algorithm {
        description
          "Optimizations algorithm.";
        case metric {
          if-feature "te-types:path-optimization-metric";
          list optimization-metric {
            key "metric-type";
            description
              "svec path metric type";
            leaf metric-type {
              type identityref {
                base te-types:svec-metric-type;
              }
              description
                "TE path metric type usable for computing a set of
                synchronized requests";
            }
            leaf weight {
              type uint8;
              description
                "Metric normalization weight";
            }
          }
        }
        case objective-function {
          if-feature
            "te-types:path-optimization-objective-function";
          container objective-function {
            description
              "The objective function container that includes
               attributes to impose when computing a TE path";
            leaf objective-function-type {
              type identityref {
                base te-types:svec-objective-function-type;
              }
              description
                "Objective function entry";
            }
          }
        }
      }
    }
  } // grouping synchronization-optimization

  grouping synchronization-info {
    description
      "Information for synchronized path computation requests.";
    list synchronization {
      description
        "List of Synchronization VECtors.";
      container svec {
        description
          "Synchronization VECtor";
        leaf relaxable {
          type boolean;
          default "true";
          description
            "If this leaf is true, taking into account this svec is
             OPTIONAL and the path computation process is
             free to ignore svec content.
             Otherwise, it MUST take into account this svec.";
        }
        uses te-types:generic-path-disjointness;
        leaf-list request-id {
          type uint32;
          description
            "This list reports the set of path computation
             requests that are requested to be synchronized.";
        }
      }
      uses synchronization-constraints;
      uses synchronization-optimization;
    }
  } // grouping synchronization-info

  /*
   * Augment TE RPCs
   */

  augment "/te:tunnels-path-compute/te:input/te:path-compute-info" {
    description
      "Augments Path Computation RPC input";
    list path-request {
      key "request-id";
      description
        "The list of the requested paths to be computed";
      leaf request-id {
        type uint32;
        mandatory true;
        description
          "Each path computation request is uniquely identified
           within the RPC request by the request-id.";
      }
      choice tunnel-attributes {
        default "value";
        description
          "Whether the tunnel attributes are specified by value
           within this path computation request or by reference.
           The reference could be either to an existing te-tunnel
           or to an entry in the tunnel-attributes list";
        case reference {
          container tunnel-reference {
            description
              "Attributes for a requested path that belongs to
              either an exiting te-tunnel or to an entry in the
              tunnel-attributes list.";
            choice tunnel-exist {
              mandatory true;
              description
                "Whether the tunnel reference is to an existing
                te-tunnel or to an entry in the tunnel-attributes
                list";
              case tunnel-ref {
                leaf tunnel-ref {
                  type te:tunnel-ref;
                  mandatory true;
                  description
                    "The referenced te-tunnel instance";
                }
              } // case tunnel-ref
              case tunnel-attributes-ref {
                leaf tunnel-attributes-ref {
                  type leafref {
                    path "/te:tunnels-path-compute/"
                      + "te:path-compute-info/"
                      + "te-pc:tunnel-attributes/te-pc:tunnel-name";
                  }
                  mandatory true;
                  description
                    "The referenced te-tunnel instance";
                }
              } // case tunnel-attributes-ref 
            } // choice tunnel-exist
            leaf path-name {
              type string;
              description
                "TE path name.";
            }
            choice path-role {
              mandatory true;
              description
                "Whether this path is a primary, or a reverse
                primary, or a secondary, or a reverse secondary
                path.";
              case primary-path {
                container primary-path {
                  presence "Indicates that the requested path
                            is a primary path";
                  description
                    "TE primary path";
                  uses te:path-forward-properties;
                  uses te:k-requested-paths;
                } // container primary-path
              } // case primary-path
              case secondary-path {
                container secondary-path {
                  description
                    "TE secondary path";
                  uses te:path-forward-properties;
                  uses protection-restoration-properties;
                  list primary-path-ref {
                    min-elements 1;
                    description
                      "The list of primary paths that reference
                      this path as a candidate secondary path";
                    choice primary-path-exist {
                      mandatory true;
                      description
                        "Whether the path reference is to an existing
                        te-tunnel path or to another path request";
                      case path-ref {
                        leaf primary-path-ref {
                          type leafref {
                            path "/te:te/te:tunnels/te:tunnel"
                              + "[te:name=current()/../../../"
                              + "tunnel-ref]/te:primary-paths/"
                              + "te:primary-path/te:name";
                          }
                          must '../../../tunnel-ref' {
                            description
                              "The primary-path can be referenced
                              if also the tunnel is referenced.";
                          }
                          mandatory true;
                          description
                            "The referenced primary path";
                        }
                      } // case path-ref
                      case path-request-ref {
                        leaf path-request-ref {
                          type leafref {
                            path "/te:tunnels-path-compute/"
                              + "te:path-compute-info/"
                              + "te-pc:path-request/"
                              + "te-pc:request-id";
                          }
                          mandatory true;
                          description
                            "The referenced primary path request";
                        }
                      } // case path-request-ref 
                    } // choice primary-path-exist
                  } // list primary-path-ref
                } // container secondary-path
              } // case secondary-path
              case primary-reverse-path {
                container primary-reverse-path {
                  description
                    "TE primary reverse path";
                  choice primary-path-exist {
                    mandatory true;
                    description
                      "Whether the path reference to the primary
                      paths for which this path is the reverse-path
                      is to an existing te-tunnel path or to
                      another path request.";
                    case path-ref {
                      leaf primary-path-ref {
                        type leafref {
                          path "/te:te/te:tunnels/te:tunnel[te:name"
                            + "=current()/../../tunnel-ref]/"
                            + "te:primary-paths/te:primary-path/"
                            + "te:name";
                        }
                        must '../../tunnel-ref' {
                          description
                            "The primary-path can be referenced
                            if also the tunnel is referenced.";
                        }
                        mandatory true;
                        description
                          "The referenced primary path";
                      }
                    } // case path-ref
                    case path-request-ref {
                      leaf path-request-ref {
                        type leafref {
                          path "/te:tunnels-path-compute/"
                            + "te:path-compute-info/"
                            + "te-pc:path-request/"
                            + "te-pc:request-id";
                        }
                        mandatory true;
                        description
                          "The referenced primary path request";
                      }
                    } // case path-request-ref 
                  } // choice primary-path-exist
                } // container primary-reverse-path
              } // case primary-reverse-path
              case secondary-reverse-path {
                container secondary-reverse-path {
                  description
                    "TE secondary reverse path";
                  // uses te:path-preference;
                  uses protection-restoration-properties;
                  list primary-reverse-path {
                    min-elements 1;
                    description
                      "The list of primary reverse paths that
                      reference this path as a candidate
                      secondary reverse path";
                    choice primary-reverse-path-exist {
                      mandatory true;
                      description
                        "Whether the path reference is to an existing
                        te-tunnel path or to another path request";
                      case path-ref {
                        leaf primary-path-ref {
                          type leafref {
                            path "/te:te/te:tunnels/te:tunnel"
                              + "[te:name=current()/../../../"
                              + "tunnel-ref]/te:primary-paths/"
                              + "te:primary-path/te:name";
                          }
                          must '../../../tunnel-ref' {
                            description
                              "The primary-path can be referenced
                              if also the tunnel is referenced.";
                          }
                          mandatory true;
                          description
                            "The referenced primary path";
                        }
                      } // case path-ref
                      case path-request-ref {
                        leaf path-request-ref {
                          type leafref {
                            path "/te:tunnels-path-compute/"
                              + "te:path-compute-info/"
                              + "te-pc:path-request/"
                              + "te-pc:request-id";
                          }
                          mandatory true;
                          description
                            "The referenced primary reverse path
                            request";
                        }
                      } // case path-request-ref 
                    } // choice primary-reverse-path-exist
                  } // list primary-reverse-path-ref
                } // container secondary-reverse-path
              } // case secondary-reverse-path
            } // choice tunnel-path-role
          }
        } // case reference
        case value {
          leaf tunnel-name {
            type string;
            description
              "TE tunnel name.";
          }
          leaf path-name {
            type string;
            description
              "TE path name.";
          }
          choice path-role {
            when 'not (./source) and not (./destination) and
                  not (./src-tunnel-tp-id) and
                  not (./dst-tunnel-tp-id)' {
              description
                "When the tunnel attributes are specified by value
                within this path computation, it is assumed that the
                requested path will be the only path of a tunnel.

                If the requested path is a transit segment path
                (i.e., the source, src-tp-id, destination and
                dst-tp-id attributes are empty), it
                could be of any type. Otherwise it could only be a
                primary path.";
            }
            default primary-path;
            description
              "Indicates whether the requested path is a primary
              path, a secondary path, a reverse primary path or a
              reverse secondary path.";
            case primary-path {
              description
                "The requested path is a primary path.";
            }
            container secondary-path {
              presence
                "Indicates that the requested path is a secondary
                path.";
              description
                "The name of the primary path which the requested
                secondary path belongs to.";
              leaf primary-path-name {
                type string;
                description
                  "TE primary path name.";
              }
            } // container secondary-path
            container primary-reverse-path {
              presence
                "Indicates that the requested path is a primary
                reverse path.";
              description
                "The name of the primary path which the requested
                primary reverse path belongs to.";
              leaf primary-path-name {
                type string;
                description
                  "TE primary path name.";
              }
            } // container primary-reverse-path
            container secondary-reverse-path {
              presence
                "Indicates that the requested path is a secondary
                reverse path.";
              description
                "The names of the primary path and of the primary
                reverse path which the requested secondary reverse
                path belongs to.";
              leaf primary-path-name {
                type string;
                description
                  "TE primary path name.";
              }
              leaf primary-reverse-path-name {
                type string;
                description
                  "TE primary reverse path name.";
              }
            } // container primary-reverse-path
          } // choice path-role
          uses te:k-requested-paths;
          uses te-types:encoding-and-switching-type;
          uses te:tunnel-common-attributes;
          uses te-types:te-topology-identifier;
        } // case value
      } // choice tunnel-attributes
      uses te:path-compute-info;
      uses requested-info;
      uses requested-state;
    }
    list tunnel-attributes {
      key "tunnel-name";
      description
        "Tunnel attributes common to multiple request paths";
      leaf tunnel-name {
        type string;
        description
          "TE tunnel name.";
      }
      uses te-types:encoding-and-switching-type;
      uses te:tunnel-common-attributes;
      uses te:tunnel-associations-properties;
      uses protection-restoration-properties;
      uses te-types:tunnel-constraints;
      uses te:tunnel-hierarchy-properties {
        augment "hierarchy/dependency-tunnels" {
          description
            "Augment with the list of dependency tunnel requests.";
          list dependency-tunnel-attributes {
            key "name";
            description
              "A tunnel request entry that this tunnel request can
               potentially depend on.";
            leaf name {
              type leafref {
                path "/te:tunnels-path-compute/"
                   + "te:path-compute-info/te-pc:tunnel-attributes/"
                   + "te-pc:tunnel-name";
              }
              description
                "Dependency tunnel request name.";
            }
            uses te-types:encoding-and-switching-type;
          }
        }
      }
    }
    uses synchronization-info;
  } // path-compute rpc input

  augment "/te:tunnels-path-compute/te:output/"
        + "te:path-compute-result" {
    description
      "Auguments Path Computation RPC output";
    list response {
      key "response-id";
      config false;
      description
        "response";
      leaf response-id {
        type uint32;
        description
          "The response-id has the same value of the
           corresponding request-id.";
      }
      uses te:path-computation-response;
      uses reported-state;
    }
  } // path-compute rpc output

  augment "/te:tunnels-actions/te:input/te:tunnel-info/"
        + "te:filter-type" {
    description
      "Augment Tunnels Action RPC input filter types";
    case path-compute-transactions {
      when "derived-from-or-self(../te:action-info/te:action, "
         + "'tunnel-action-path-compute-delete')";
      description
        "Path Delete RPC input";
      leaf-list path-compute-transaction-id {
        type string;
        description
          "The list of the transaction-id values of the
           transient states to be deleted";
      }
    }
  } // path-delete rpc input

  augment "/te:tunnels-actions/te:output" {
    description
      "Augment Tunnels Action RPC output with path delete result";
    container path-computed-delete-result {
      description
        "Path Delete RPC output";
      leaf-list path-compute-transaction-id {
        type string;
        description
          "The list of the transaction-id values of the
           transient states that have been successfully deleted";
      }
    }
  } // path-delete rpc output
}
]]></sourcecode></figure>

</section>
</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>This document describes use cases of requesting Path Computation
   using YANG data models, which could be used at the ABNO Control
   Interface <xref target="RFC7491"/> and/or between controllers in ACTN <xref target="RFC8453"/>. As
   such, it does not introduce any new security considerations compared
   to the ones related to YANG specification, ABNO specification and
   ACTN Framework defined in <xref target="RFC7950"/>, <xref target="RFC7491"/> and <xref target="RFC8453"/>.</t>

<t>The YANG module defined in this document is designed to be accessed via
   the NETCONF protocol <xref target="RFC6241"/> or RESTCONF protocol <xref target="RFC8040"/>. The
   lowest NETCONF layer is the secure transport layer, and the
   mandatory-to-implement secure transport is Secure Shell (SSH)
   <xref target="RFC6242"/>. The lowest RESTCONF layer is HTTPS, and the mandatory-to-
   implement secure transport is TLS <xref target="RFC8446"/>.</t>

<t>The Network Configuration Access Control Model (NACM) 
   <xref target="RFC8341"/> provides the means to
   restrict access for particular NETCONF or RESTCONF users to a
   preconfigured subset of all available NETCONF or RESTCONF protocol
   operations and content.</t>

<t>The YANG module defined in this document augments the "tunnels-path-compute" and the "tunnel-actions" RPCs defined in <xref target="I-D.ietf-teas-yang-te"/>. The security considerations provided in <xref target="I-D.ietf-teas-yang-te"/> are also applicable to the YANG module
   defined in this document.</t>

<t>Some of the RPC operations defined in this YANG module may be considered
   sensitive or vulnerable in some network environments.  It is thus
   important to control access to these operations. These are the
   operations and their sensitivity/vulnerability:</t>

<t>"te-pc:response/computed-paths-properties": provides the same information provided by the "te:computed-paths-properties" defined in <xref target="I-D.ietf-teas-yang-te"/>. The security considerations provided in <xref target="I-D.ietf-teas-yang-te"/> for the TE tunnel state apply also to this subtree.</t>

<t>"te-pc:response/te-pc:tunnel-ref", "te-pc:response/te-pc:primary-path-ref", "te-pc:response/te-pc:primary-reverse-path-ref", "te-pc:response/te-pc:secondary-path-ref" and "te-pc:response/te-pc:secondary-reverse-path-ref" provides a reference where the same information provided in "te-pc:response/computed-paths-properties" is temporarly stored with the operational datastore (see <xref target="temp-state"/>). Therefore access to this information does not provide any additional security issue that the information provided with "te-pc:response/computed-paths-properties".</t>

<t>"/te:tunnels-actions": the YANG model defined in this document augments this action with a new action type that allows deleting the transient states of computed paths (see <xref target="temp-state"/>). A malicious use of this action would have no impact on the paths carrying live traffic but it would preclude the client from using the "transient states" to request the set-up of exactly that path, if still available.</t>

<t>The security considerations spelled out in the
   YANG specification <xref target="RFC7950"/> apply for this document as well.</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>This document registers the following URIs in the "ns" subregistry
   within the "IETF XML registry" <xref target="RFC3688"/>.</t>

<figure><artwork><![CDATA[
      URI: urn:ietf:params:xml:ns:yang:ietf-te-path-computation
      Registrant Contact:  The IESG.
      XML: N/A, the requested URI is an XML namespace.
]]></artwork></figure>

<t>This document registers a YANG module in the "YANG Module Names"
   registry <xref target="RFC7950"/>.</t>

<figure><artwork><![CDATA[
      name:      ietf-te-path-computation
      namespace: urn:ietf:params:xml:ns:yang:ietf-te-path-computation
      prefix:    te-pc
      reference: this document
]]></artwork></figure>

</section>


  </middle>

  <back>


    <references title='Normative References'>





<reference anchor='RFC6241' target='https://www.rfc-editor.org/info/rfc6241'>
<front>
<title>Network Configuration Protocol (NETCONF)</title>
<author fullname='R. Enns' initials='R.' role='editor' surname='Enns'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'><organization/></author>
<author fullname='A. Bierman' initials='A.' role='editor' surname='Bierman'><organization/></author>
<date month='June' year='2011'/>
<abstract><t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices.  It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages.  The NETCONF protocol operations are realized as remote procedure calls (RPCs).  This document obsoletes RFC 4741.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6241'/>
<seriesInfo name='DOI' value='10.17487/RFC6241'/>
</reference>



<reference anchor='RFC8040' target='https://www.rfc-editor.org/info/rfc8040'>
<front>
<title>RESTCONF Protocol</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<date month='January' year='2017'/>
<abstract><t>This document describes an HTTP-based protocol that provides a programmatic interface for accessing data defined in YANG, using the datastore concepts defined in the Network Configuration Protocol (NETCONF).</t></abstract>
</front>
<seriesInfo name='RFC' value='8040'/>
<seriesInfo name='DOI' value='10.17487/RFC8040'/>
</reference>



<reference anchor='RFC8795' target='https://www.rfc-editor.org/info/rfc8795'>
<front>
<title>YANG Data Model for Traffic Engineering (TE) Topologies</title>
<author fullname='X. Liu' initials='X.' surname='Liu'><organization/></author>
<author fullname='I. Bryskin' initials='I.' surname='Bryskin'><organization/></author>
<author fullname='V. Beeram' initials='V.' surname='Beeram'><organization/></author>
<author fullname='T. Saad' initials='T.' surname='Saad'><organization/></author>
<author fullname='H. Shah' initials='H.' surname='Shah'><organization/></author>
<author fullname='O. Gonzalez de Dios' initials='O.' surname='Gonzalez de Dios'><organization/></author>
<date month='August' year='2020'/>
<abstract><t>This document defines a YANG data model for representing, retrieving, and manipulating Traffic Engineering (TE) Topologies. The model serves as a base model that other technology-specific TE topology models can augment.</t></abstract>
</front>
<seriesInfo name='RFC' value='8795'/>
<seriesInfo name='DOI' value='10.17487/RFC8795'/>
</reference>


<reference anchor='I-D.ietf-teas-yang-te' target='https://datatracker.ietf.org/doc/html/draft-ietf-teas-yang-te-32'>
   <front>
      <title>A YANG Data Model for Traffic Engineering Tunnels, Label Switched Paths and Interfaces</title>
      <author fullname='Tarek Saad' initials='T.' surname='Saad'>
         <organization>Cisco Systems Inc</organization>
      </author>
      <author fullname='Rakesh Gandhi' initials='R.' surname='Gandhi'>
         <organization>Cisco Systems Inc</organization>
      </author>
      <author fullname='Xufeng Liu' initials='X.' surname='Liu'>
         <organization>IBM Corporation</organization>
      </author>
      <author fullname='Vishnu Pavan Beeram' initials='V. P.' surname='Beeram'>
         <organization>Juniper Networks</organization>
      </author>
      <author fullname='Igor Bryskin' initials='I.' surname='Bryskin'>
         <organization>Individual</organization>
      </author>
      <author fullname='Oscar Gonzalez de Dios' initials='O. G.' surname='de Dios'>
         <organization>Telefonica</organization>
      </author>
      <date day='12' month='March' year='2023'/>
      <abstract>
	 <t>   This document defines a YANG data model for the provisioning and
   management of Traffic Engineering (TE) tunnels, Label Switched Paths
   (LSPs), and interfaces.  The model covers data that is independent of
   any technology or dataplane encapsulation and is divided into two
   YANG modules that cover device-specific, and device independent data.

   This model covers data for configuration, operational state, remote
   procedural calls, and event notifications.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-teas-yang-te-32'/>
   
</reference>



<reference anchor='RFC7950' target='https://www.rfc-editor.org/info/rfc7950'>
<front>
<title>The YANG 1.1 Data Modeling Language</title>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<date month='August' year='2016'/>
<abstract><t>YANG is a data modeling language used to model configuration data, state data, Remote Procedure Calls, and notifications for network management protocols.  This document describes the syntax and semantics of version 1.1 of the YANG language.  YANG version 1.1 is a maintenance release of the YANG language, addressing ambiguities and defects in the original specification.  There are a small number of backward incompatibilities from YANG version 1.  This document also specifies the YANG mappings to the Network Configuration Protocol (NETCONF).</t></abstract>
</front>
<seriesInfo name='RFC' value='7950'/>
<seriesInfo name='DOI' value='10.17487/RFC7950'/>
</reference>



<reference anchor='RFC5440' target='https://www.rfc-editor.org/info/rfc5440'>
<front>
<title>Path Computation Element (PCE) Communication Protocol (PCEP)</title>
<author fullname='JP. Vasseur' initials='JP.' role='editor' surname='Vasseur'><organization/></author>
<author fullname='JL. Le Roux' initials='JL.' role='editor' surname='Le Roux'><organization/></author>
<date month='March' year='2009'/>
<abstract><t>This document specifies the Path Computation Element (PCE) Communication Protocol (PCEP) for communications between a Path Computation Client (PCC) and a PCE, or between two PCEs.  Such interactions include path computation requests and path computation replies as well as notifications of specific states related to the use of a PCE in the context of Multiprotocol Label Switching (MPLS) and Generalized MPLS (GMPLS) Traffic Engineering.  PCEP is designed to be flexible and extensible so as to easily allow for the addition of further messages and objects, should further requirements be expressed in the future.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5440'/>
<seriesInfo name='DOI' value='10.17487/RFC5440'/>
</reference>



<reference anchor='RFC7926' target='https://www.rfc-editor.org/info/rfc7926'>
<front>
<title>Problem Statement and Architecture for Information Exchange between Interconnected Traffic-Engineered Networks</title>
<author fullname='A. Farrel' initials='A.' role='editor' surname='Farrel'><organization/></author>
<author fullname='J. Drake' initials='J.' surname='Drake'><organization/></author>
<author fullname='N. Bitar' initials='N.' surname='Bitar'><organization/></author>
<author fullname='G. Swallow' initials='G.' surname='Swallow'><organization/></author>
<author fullname='D. Ceccarelli' initials='D.' surname='Ceccarelli'><organization/></author>
<author fullname='X. Zhang' initials='X.' surname='Zhang'><organization/></author>
<date month='July' year='2016'/>
<abstract><t>In Traffic-Engineered (TE) systems, it is sometimes desirable to establish an end-to-end TE path with a set of constraints (such as bandwidth) across one or more networks from a source to a destination.  TE information is the data relating to nodes and TE links that is used in the process of selecting a TE path.  TE information is usually only available within a network.  We call such a zone of visibility of TE information a domain.  An example of a domain may be an IGP area or an Autonomous System.</t><t>In order to determine the potential to establish a TE path through a series of connected networks, it is necessary to have available a certain amount of TE information about each network.  This need not be the full set of TE information available within each network but does need to express the potential of providing TE connectivity. This subset of TE information is called TE reachability information.</t><t>This document sets out the problem statement for the exchange of TE information between interconnected TE networks in support of end-to-end TE path establishment and describes the best current practice architecture to meet this problem statement.  For reasons that are explained in this document, this work is limited to simple TE constraints and information that determine TE reachability.</t></abstract>
</front>
<seriesInfo name='BCP' value='206'/>
<seriesInfo name='RFC' value='7926'/>
<seriesInfo name='DOI' value='10.17487/RFC7926'/>
</reference>



<reference anchor='RFC8340' target='https://www.rfc-editor.org/info/rfc8340'>
<front>
<title>YANG Tree Diagrams</title>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='L. Berger' initials='L.' role='editor' surname='Berger'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>This document captures the current syntax used in YANG module tree diagrams.  The purpose of this document is to provide a single location for this definition.  This syntax may be updated from time to time based on the evolution of the YANG language.</t></abstract>
</front>
<seriesInfo name='BCP' value='215'/>
<seriesInfo name='RFC' value='8340'/>
<seriesInfo name='DOI' value='10.17487/RFC8340'/>
</reference>


<reference anchor='I-D.ietf-teas-rfc8776-update' target='https://datatracker.ietf.org/doc/html/draft-ietf-teas-rfc8776-update-02'>
   <front>
      <title>Common YANG Data Types for Traffic Engineering</title>
      <author fullname='Italo Busi' initials='I.' surname='Busi'>
         <organization>Huawei</organization>
      </author>
      <author fullname='Aihua Guo' initials='A.' surname='Guo'>
         <organization>Futurewei Technologies</organization>
      </author>
      <author fullname='Xufeng Liu' initials='X.' surname='Liu'>
         <organization>IBM Corporation</organization>
      </author>
      <author fullname='Tarek Saad' initials='T.' surname='Saad'>
         <organization>Cisco Systems Inc.</organization>
      </author>
      <author fullname='Rakesh Gandhi' initials='R.' surname='Gandhi'>
         <organization>Cisco Systems, Inc.</organization>
      </author>
      <author fullname='Vishnu Pavan Beeram' initials='V. P.' surname='Beeram'>
         <organization>Juniper Networks</organization>
      </author>
      <author fullname='Igor Bryskin' initials='I.' surname='Bryskin'>
         <organization>Individual</organization>
      </author>
      <date day='10' month='March' year='2023'/>
      <abstract>
	 <t>   This document defines a collection of common data types and groupings
   in YANG data modeling language.  These derived common types and
   groupings are intended to be imported by modules that model Traffic
   Engineering (TE) configuration and state capabilities.  This document
   obsoletes RFC 8776.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-teas-rfc8776-update-02'/>
   
</reference>



<reference anchor='RFC5441' target='https://www.rfc-editor.org/info/rfc5441'>
<front>
<title>A Backward-Recursive PCE-Based Computation (BRPC) Procedure to Compute Shortest Constrained Inter-Domain Traffic Engineering Label Switched Paths</title>
<author fullname='JP. Vasseur' initials='JP.' role='editor' surname='Vasseur'><organization/></author>
<author fullname='R. Zhang' initials='R.' surname='Zhang'><organization/></author>
<author fullname='N. Bitar' initials='N.' surname='Bitar'><organization/></author>
<author fullname='JL. Le Roux' initials='JL.' surname='Le Roux'><organization/></author>
<date month='April' year='2009'/>
<abstract><t>The ability to compute shortest constrained Traffic Engineering Label Switched Paths (TE LSPs) in Multiprotocol Label Switching (MPLS) and Generalized MPLS (GMPLS) networks across multiple domains has been identified as a key requirement.  In this context, a domain is a collection of network elements within a common sphere of address management or path computational responsibility such as an IGP area or an Autonomous Systems.  This document specifies a procedure relying on the use of multiple Path Computation Elements (PCEs) to compute such inter-domain shortest constrained paths across a predetermined sequence of domains, using a backward-recursive path computation technique.  This technique preserves confidentiality across domains, which is sometimes required when domains are managed by different service providers.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5441'/>
<seriesInfo name='DOI' value='10.17487/RFC5441'/>
</reference>



<reference anchor='RFC5541' target='https://www.rfc-editor.org/info/rfc5541'>
<front>
<title>Encoding of Objective Functions in the Path Computation Element Communication Protocol (PCEP)</title>
<author fullname='JL. Le Roux' initials='JL.' surname='Le Roux'><organization/></author>
<author fullname='JP. Vasseur' initials='JP.' surname='Vasseur'><organization/></author>
<author fullname='Y. Lee' initials='Y.' surname='Lee'><organization/></author>
<date month='June' year='2009'/>
<abstract><t>The computation of one or a set of Traffic Engineering Label Switched Paths (TE LSPs) in MultiProtocol Label Switching (MPLS) and Generalized MPLS (GMPLS) networks is subject to a set of one or more specific optimization criteria, referred to as objective functions (e.g., minimum cost path, widest path, etc.).</t><t>In the Path Computation Element (PCE) architecture, a Path Computation Client (PCC) may want a path to be computed for one or more TE LSPs according to a specific objective function.  Thus, the PCC needs to instruct the PCE to use the correct objective function. Furthermore, it is possible that not all PCEs support the same set of objective functions; therefore, it is useful for the PCC to be able to automatically discover the set of objective functions supported by each PCE.</t><t>This document defines extensions to the PCE communication Protocol (PCEP) to allow a PCE to indicate the set of objective functions it supports.  Extensions are also defined so that a PCC can indicate in a path computation request the required objective function, and a PCE can report in a path computation reply the objective function that was used for path computation.</t><t>This document defines objective function code types for six objective functions previously listed in the PCE requirements work, and provides the definition of four new metric types that apply to a set of synchronized requests.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5541'/>
<seriesInfo name='DOI' value='10.17487/RFC5541'/>
</reference>



<reference anchor='RFC8776' target='https://www.rfc-editor.org/info/rfc8776'>
<front>
<title>Common YANG Data Types for Traffic Engineering</title>
<author fullname='T. Saad' initials='T.' surname='Saad'><organization/></author>
<author fullname='R. Gandhi' initials='R.' surname='Gandhi'><organization/></author>
<author fullname='X. Liu' initials='X.' surname='Liu'><organization/></author>
<author fullname='V. Beeram' initials='V.' surname='Beeram'><organization/></author>
<author fullname='I. Bryskin' initials='I.' surname='Bryskin'><organization/></author>
<date month='June' year='2020'/>
<abstract><t>This document defines a collection of common data types and groupings in YANG data modeling language. These derived common types and groupings are intended to be imported by modules that model Traffic Engineering (TE) configuration and state capabilities.</t></abstract>
</front>
<seriesInfo name='RFC' value='8776'/>
<seriesInfo name='DOI' value='10.17487/RFC8776'/>
</reference>



<reference anchor='RFC6242' target='https://www.rfc-editor.org/info/rfc6242'>
<front>
<title>Using the NETCONF Protocol over Secure Shell (SSH)</title>
<author fullname='M. Wasserman' initials='M.' surname='Wasserman'><organization/></author>
<date month='June' year='2011'/>
<abstract><t>This document describes a method for invoking and running the Network Configuration Protocol (NETCONF) within a Secure Shell (SSH) session as an SSH subsystem.  This document obsoletes RFC 4742.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6242'/>
<seriesInfo name='DOI' value='10.17487/RFC6242'/>
</reference>



<reference anchor='RFC8446' target='https://www.rfc-editor.org/info/rfc8446'>
<front>
<title>The Transport Layer Security (TLS) Protocol Version 1.3</title>
<author fullname='E. Rescorla' initials='E.' surname='Rescorla'><organization/></author>
<date month='August' year='2018'/>
<abstract><t>This document specifies version 1.3 of the Transport Layer Security (TLS) protocol.  TLS allows client/server applications to communicate over the Internet in a way that is designed to prevent eavesdropping, tampering, and message forgery.</t><t>This document updates RFCs 5705 and 6066, and obsoletes RFCs 5077, 5246, and 6961.  This document also specifies new requirements for TLS 1.2 implementations.</t></abstract>
</front>
<seriesInfo name='RFC' value='8446'/>
<seriesInfo name='DOI' value='10.17487/RFC8446'/>
</reference>



<reference anchor='RFC8341' target='https://www.rfc-editor.org/info/rfc8341'>
<front>
<title>Network Configuration Access Control Model</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>The standardization of network configuration interfaces for use with the Network Configuration Protocol (NETCONF) or the RESTCONF protocol requires a structured and secure operating environment that promotes human usability and multi-vendor interoperability.  There is a need for standard mechanisms to restrict NETCONF or RESTCONF protocol access for particular users to a preconfigured subset of all available NETCONF or RESTCONF protocol operations and content.  This document defines such an access control model.</t><t>This document obsoletes RFC 6536.</t></abstract>
</front>
<seriesInfo name='STD' value='91'/>
<seriesInfo name='RFC' value='8341'/>
<seriesInfo name='DOI' value='10.17487/RFC8341'/>
</reference>



<reference anchor='RFC3688' target='https://www.rfc-editor.org/info/rfc3688'>
<front>
<title>The IETF XML Registry</title>
<author fullname='M. Mealling' initials='M.' surname='Mealling'><organization/></author>
<date month='January' year='2004'/>
<abstract><t>This document describes an IANA maintained registry for IETF standards which use Extensible Markup Language (XML) related items such as Namespaces, Document Type Declarations (DTDs), Schemas, and Resource Description Framework (RDF) Schemas.</t></abstract>
</front>
<seriesInfo name='BCP' value='81'/>
<seriesInfo name='RFC' value='3688'/>
<seriesInfo name='DOI' value='10.17487/RFC3688'/>
</reference>




    </references>

    <references title='Informative References'>





<reference anchor='RFC7491' target='https://www.rfc-editor.org/info/rfc7491'>
<front>
<title>A PCE-Based Architecture for Application-Based Network Operations</title>
<author fullname='D. King' initials='D.' surname='King'><organization/></author>
<author fullname='A. Farrel' initials='A.' surname='Farrel'><organization/></author>
<date month='March' year='2015'/>
<abstract><t>Services such as content distribution, distributed databases, or inter-data center connectivity place a set of new requirements on the operation of networks.  They need on-demand and application-specific reservation of network connectivity, reliability, and resources (such as bandwidth) in a variety of network applications (such as point-to-point connectivity, network virtualization, or mobile back-haul) and in a range of network technologies from packet (IP/MPLS) down to optical.  An environment that operates to meet these types of requirements is said to have Application-Based Network Operations (ABNO).  ABNO brings together many existing technologies and may be seen as the use of a toolbox of existing components enhanced with a few new elements.</t><t>This document describes an architecture and framework for ABNO, showing how these components fit together.  It provides a cookbook of existing technologies to satisfy the architecture and meet the needs of the applications.</t></abstract>
</front>
<seriesInfo name='RFC' value='7491'/>
<seriesInfo name='DOI' value='10.17487/RFC7491'/>
</reference>



<reference anchor='RFC8453' target='https://www.rfc-editor.org/info/rfc8453'>
<front>
<title>Framework for Abstraction and Control of TE Networks (ACTN)</title>
<author fullname='D. Ceccarelli' initials='D.' role='editor' surname='Ceccarelli'><organization/></author>
<author fullname='Y. Lee' initials='Y.' role='editor' surname='Lee'><organization/></author>
<date month='August' year='2018'/>
<abstract><t>Traffic Engineered (TE) networks have a variety of mechanisms to facilitate the separation of the data plane and control plane.  They also have a range of management and provisioning protocols to configure and activate network resources.  These mechanisms represent key technologies for enabling flexible and dynamic networking.  The term &quot;Traffic Engineered network&quot; refers to a network that uses any connection-oriented technology under the control of a distributed or centralized control plane to support dynamic provisioning of end-to- end connectivity.</t><t>Abstraction of network resources is a technique that can be applied to a single network domain or across multiple domains to create a single virtualized network that is under the control of a network operator or the customer of the operator that actually owns the network resources.</t><t>This document provides a framework for Abstraction and Control of TE Networks (ACTN) to support virtual network services and connectivity services.</t></abstract>
</front>
<seriesInfo name='RFC' value='8453'/>
<seriesInfo name='DOI' value='10.17487/RFC8453'/>
</reference>



<reference anchor='RFC8454' target='https://www.rfc-editor.org/info/rfc8454'>
<front>
<title>Information Model for Abstraction and Control of TE Networks (ACTN)</title>
<author fullname='Y. Lee' initials='Y.' surname='Lee'><organization/></author>
<author fullname='S. Belotti' initials='S.' surname='Belotti'><organization/></author>
<author fullname='D. Dhody' initials='D.' surname='Dhody'><organization/></author>
<author fullname='D. Ceccarelli' initials='D.' surname='Ceccarelli'><organization/></author>
<author fullname='B. Yoon' initials='B.' surname='Yoon'><organization/></author>
<date month='September' year='2018'/>
<abstract><t>This document provides an information model for Abstraction and Control of TE Networks (ACTN).</t></abstract>
</front>
<seriesInfo name='RFC' value='8454'/>
<seriesInfo name='DOI' value='10.17487/RFC8454'/>
</reference>


<reference anchor='I-D.ietf-ccamp-otn-topo-yang' target='https://datatracker.ietf.org/doc/html/draft-ietf-ccamp-otn-topo-yang-16'>
   <front>
      <title>A YANG Data Model for Optical Transport Network Topology</title>
      <author fullname='Haomian Zheng' initials='H.' surname='Zheng'>
         <organization>Huawei Technologies</organization>
      </author>
      <author fullname='Italo Busi' initials='I.' surname='Busi'>
         <organization>Huawei Technologies</organization>
      </author>
      <author fullname='Xufeng Liu' initials='X.' surname='Liu'>
         <organization>IBM Corporation</organization>
      </author>
      <author fullname='Sergio Belotti' initials='S.' surname='Belotti'>
         <organization>Nokia</organization>
      </author>
      <author fullname='Oscar Gonzalez de Dios' initials='O. G.' surname='de Dios'>
         <organization>Telefonica</organization>
      </author>
      <date day='23' month='November' year='2022'/>
      <abstract>
	 <t>   This document describes a YANG data model to describe the topologies
   of an Optical Transport Network (OTN).  It is independent of control
   plane protocols and captures topological and resource-related
   information pertaining to OTN.  This model enables clients, which
   interact with a transport domain controller, for OTN topology-related
   operations such as obtaining the relevant topology resource
   information.


	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-ccamp-otn-topo-yang-16'/>
   
</reference>



<reference anchor='RFC4655' target='https://www.rfc-editor.org/info/rfc4655'>
<front>
<title>A Path Computation Element (PCE)-Based Architecture</title>
<author fullname='A. Farrel' initials='A.' surname='Farrel'><organization/></author>
<author fullname='J.-P. Vasseur' initials='J.-P.' surname='Vasseur'><organization/></author>
<author fullname='J. Ash' initials='J.' surname='Ash'><organization/></author>
<date month='August' year='2006'/>
<abstract><t>Constraint-based path computation is a fundamental building block for traffic engineering systems such as Multiprotocol Label Switching (MPLS) and Generalized Multiprotocol Label Switching (GMPLS) networks.  Path computation in large, multi-domain, multi-region, or multi-layer networks is complex and may require special computational components and cooperation between the different network domains.</t><t>This document specifies the architecture for a Path Computation Element (PCE)-based model to address this problem space.  This document does not attempt to provide a detailed description of all the architectural components, but rather it describes a set of building blocks for the PCE architecture from which solutions may be constructed.  This memo provides information for the Internet community.</t></abstract>
</front>
<seriesInfo name='RFC' value='4655'/>
<seriesInfo name='DOI' value='10.17487/RFC4655'/>
</reference>



<reference anchor='RFC8342' target='https://www.rfc-editor.org/info/rfc8342'>
<front>
<title>Network Management Datastore Architecture (NMDA)</title>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' surname='Schoenwaelder'><organization/></author>
<author fullname='P. Shafer' initials='P.' surname='Shafer'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<author fullname='R. Wilton' initials='R.' surname='Wilton'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>Datastores are a fundamental concept binding the data models written in the YANG data modeling language to network management protocols such as the Network Configuration Protocol (NETCONF) and RESTCONF. This document defines an architectural framework for datastores based on the experience gained with the initial simpler model, addressing requirements that were not well supported in the initial model.  This document updates RFC 7950.</t></abstract>
</front>
<seriesInfo name='RFC' value='8342'/>
<seriesInfo name='DOI' value='10.17487/RFC8342'/>
</reference>



<reference anchor='RFC6805' target='https://www.rfc-editor.org/info/rfc6805'>
<front>
<title>The Application of the Path Computation Element Architecture to the Determination of a Sequence of Domains in MPLS and GMPLS</title>
<author fullname='D. King' initials='D.' role='editor' surname='King'><organization/></author>
<author fullname='A. Farrel' initials='A.' role='editor' surname='Farrel'><organization/></author>
<date month='November' year='2012'/>
<abstract><t>Computing optimum routes for Label Switched Paths (LSPs) across multiple domains in MPLS Traffic Engineering (MPLS-TE) and GMPLS networks presents a problem because no single point of path computation is aware of all of the links and resources in each domain.  A solution may be achieved using the Path Computation Element (PCE) architecture.</t><t>Where the sequence of domains is known a priori, various techniques can be employed to derive an optimum path.  If the domains are simply connected, or if the preferred points of interconnection are also known, the Per-Domain Path Computation technique can be used.  Where there are multiple connections between domains and there is no preference for the choice of points of interconnection, the Backward-Recursive PCE-based Computation (BRPC) procedure can be used to derive an optimal path.</t><t>This document examines techniques to establish the optimum path when the sequence of domains is not known in advance.  The document shows how the PCE architecture can be extended to allow the optimum sequence of domains to be selected, and the optimum end-to-end path to be derived through the use of a hierarchical relationship between domains.  This document is not an Internet Standards Track  specification; it is published for informational purposes.</t></abstract>
</front>
<seriesInfo name='RFC' value='6805'/>
<seriesInfo name='DOI' value='10.17487/RFC6805'/>
</reference>



<reference anchor='RFC7446' target='https://www.rfc-editor.org/info/rfc7446'>
<front>
<title>Routing and Wavelength Assignment Information Model for Wavelength Switched Optical Networks</title>
<author fullname='Y. Lee' initials='Y.' role='editor' surname='Lee'><organization/></author>
<author fullname='G. Bernstein' initials='G.' role='editor' surname='Bernstein'><organization/></author>
<author fullname='D. Li' initials='D.' surname='Li'><organization/></author>
<author fullname='W. Imajuku' initials='W.' surname='Imajuku'><organization/></author>
<date month='February' year='2015'/>
<abstract><t>This document provides a model of information needed by the Routing and Wavelength Assignment (RWA) process in Wavelength Switched Optical Networks (WSONs).  The purpose of the information described in this model is to facilitate constrained optical path computation in WSONs.  This model takes into account compatibility constraints between WSON signal attributes and network elements but does not include constraints due to optical impairments.  Aspects of this information that may be of use to other technologies utilizing a GMPLS control plane are discussed.</t></abstract>
</front>
<seriesInfo name='RFC' value='7446'/>
<seriesInfo name='DOI' value='10.17487/RFC7446'/>
</reference>




    </references>


<section anchor="examples"><name>Examples</name>

<t>This section contains examples of use of the model with RESTCONF
<xref target="RFC8040"/> and JSON encoding.</t>

<t>These examples show how path computation can be requested for the tunnels configuration provided in Appendix A of <xref target="I-D.ietf-teas-yang-te"/>.</t>

<section anchor="basic-example"><name>Basic Path Computation</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 12.1 of of <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>In this case, the TE Tunnel has only one primary path with no specific constraints.</t>

<figure><artwork type="ascii-art"><![CDATA[
POST /restconf/operations/ietf-te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="basic.json"><![CDATA[
{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 1,
          "tunnel-name": "Example_LSP_Tunnel_A_2",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "192.0.2.1",
          "destination": "192.0.2.4",
          "bidirectional": "false",
          "signaling-type": "te-types:path-setup-rsvp"
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="transient-state-example"><name>Path Computation with transient state</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 12.1 of of <xref target="I-D.ietf-teas-yang-te"/> requesting some transient state to be reported within the operational datastore, as described <xref target="temp-state"/>.</t>

<t>In this case, the TE Tunnel has only one primary path with no specific constraints.</t>

<figure><artwork type="ascii-art"><![CDATA[
POST /restconf/operations/ietf-te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="transient-state.json"><![CDATA[
{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 2,
          "tunnel-name": "Example_LSP_Tunnel_A_2",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "192.0.2.1",
          "destination": "192.0.2.4",
          "bidirectional": "false",
          "signaling-type": "te-types:path-setup-rsvp",
          "requested-state": {
            "transaction-id": "example"
          }
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="global-path-constraint-example"><name>Path Computation with Global Path Constraint</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 12.3 of of <xref target="I-D.ietf-teas-yang-te"/>. The 'named path constraint' is created in section 12.2 of <xref target="I-D.ietf-teas-yang-te"/> applies to this path computation request.</t>

<figure><artwork type="ascii-art"><![CDATA[
POST /restconf/operations/ietf-te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="global-path-constraint.json"><![CDATA[
{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 3,
          "tunnel-name": "Example_LSP_Tunnel_A_4_1",
          "path-name": "Simple_LSP_1",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "192.0.2.1",
          "destination": "192.0.2.4",
          "bidirectional": "false",
          "signaling-type": "path-setup-rsvp",
          "named-path-constraint": "max-hop-3",
          "requested-state": {}
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="tunnel-path-constraint-example"><name>Path Computation with Per-tunnel Path Constraint</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 12.4 of of <xref target="I-D.ietf-teas-yang-te"/>, using a per tunnel path constraint.</t>

<figure><artwork type="ascii-art"><![CDATA[
POST /restconf/operations/ietf-te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="tunnel-path-constraint.json"><![CDATA[
{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 4,
          "tunnel-name": "Example_LSP_Tunnel_A_4_2",
          "path-name": "path1",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "192.0.2.1",
          "destination": "192.0.2.4",
          "bidirectional": "false",
          "signaling-type": "te-types:path-setup-rsvp",
          "path-metric-bounds": {
            "path-metric-bound": [
              {
                "metric-type": "te-types:path-metric-hop",
                "upper-bound": "3"
              }
            ]
          }
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="path-computation-result"><name>Path Computation result</name>

<t>This example reports the output of the path computation RPC request described in <xref target="tunnel-path-constraint-example"/>.</t>

<figure><artwork type="ascii-art"><![CDATA[
HTTP/1.1 200 OK
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="computed-path.json"><![CDATA[
{
  "ietf-te:output": {
    "path-compute-result": {
      "ietf-te-path-computation:response": [
        {
          "response-id": 3,
          "computed-paths-properties": {
            "computed-path-properties": [
              {
                "k-index": "1",
                "path-properties": {
                  "path-route-objects": {
                    "path-route-object": [
                      {
                        "index": "1",
                        "numbered-node-hop": {
                          "node-id": "192.0.2.2"
                        }
                      },
                      {
                        "index": "2",
                        "numbered-node-hop": {
                          "node-id": "192.0.2.4"
                        }
                      }
                    ]
                  }
                }
              }
            ]
          },
          "tunnel-ref": "Example_LSP_Tunnel_A_4_1",
          "primary-path-ref": "path1"
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="path-computation-with-primary-and-secondary-paths"><name>Path Computation with Primary and Secondary Paths</name>

<t>This section contains examples of use of the model to compute primary and secondary paths described in section 12.6 of <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>These examples consider the cases where:
- primary and reverse paths are unidirectional and not co-routed (example-1);
- primary and reverse paths are bidirectional (example-3);
- primary and reverse paths are unidirectional and co-routed (example-4).</t>

<figure><artwork type="ascii-art"><![CDATA[
POST /restconf/operations/ietf-te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="primary-secondary-paths.json"><![CDATA[
{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 1,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "primary-1 (fwd)",
            "primary-path": {}
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 2,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "primary-2 (rev)",
            "primary-reverse-path": {
              "primary-path-request-ref": 1
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.3",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 3,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-1 (fwd)",
            "secondary-path": {
              "primary-path": [
                {
                  "path-request-ref": 1
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.1"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 4,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-2 (fwd)",
            "secondary-path": {
              "primary-path": [
                {
                  "path-request-ref": 1
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.5",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 5,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-3 (rev)",
            "secondary-reverse-path": {
              "primary-reverse-path": [
                {
                  "path-request-ref": 2
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.5"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.4",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 6,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-4 (rev)",
            "secondary-reverse-path": {
              "primary-reverse-path": [
                {
                  "path-request-ref": 2
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.4"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.3",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 7,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-5 (rev)",
            "secondary-reverse-path": {
              "primary-reverse-path": [
                {
                  "path-request-ref": 2
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.3"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.1",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 8,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-3",
            "path-name": "primary-1 (bidir)",
            "primary-path": {}
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 9,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-3",
            "path-name": "secondary-1 (bidir)",
            "secondary-path": {
              "primary-path": [
                {
                  "path-request-ref": 8
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.1"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 10,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-3",
            "path-name": "secondary-2 (bidir)",
            "secondary-path": {
              "primary-path": [
                {
                  "path-request-ref": 8
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.5",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 11,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-4",
            "path-name": "primary-1 (fwd)",
            "primary-path": {
              "co-routed": [null]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 12,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-4",
            "path-name": "primary-2 (rev)",
            "primary-reverse-path": {
              "primary-path-request-ref": 11
            }
          }
        },
        {
          "request-id": 13,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-4",
            "path-name": "secondary-1 (fwd)",
            "secondary-path": {
              "primary-path": [
                {
                  "co-routed": [null],
                  "path-request-ref": 11
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.1"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 14,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-4",
            "path-name": "secondary-2 (fwd)",
            "secondary-path": {
              "primary-path": [
                {
                  "co-routed": [null],
                  "path-request-ref": 11
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.5",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 15,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-3 (rev)",
            "secondary-reverse-path": {
              "primary-reverse-path": [
                {
                  "path-request-ref": 12
                }
              ]
            }
          }
        },
        {
          "request-id": 16,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-4 (rev)",
            "secondary-reverse-path": {
              "primary-reverse-path": [
                {
                  "path-request-ref": 12
                }
              ]
            }
          }
        }
      ],
      "ietf-te-path-computation:tunnel-attributes": [
        {
          "tunnel-name": "example-1",
          "source": "192.0.2.1",
          "destination": "192.0.2.5",
          "bidirectional": "false"
        },
        {
          "tunnel-name": "example-3",
          "source": "192.0.2.1",
          "destination": "192.0.2.5",
          "bidirectional": "true"
        },
        {
          "tunnel-name": "example-4",
          "source": "192.0.2.1",
          "destination": "192.0.2.5",
          "bidirectional": "false"
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
</section>
<section numbered="false" anchor="acknowledgments"><name>Acknowledgments</name>

<t>The authors would like to thank Igor Bryskin and Xian Zhang for
   participating in the initial discussions that have triggered this
   work and providing valuable insights.</t>

<t>The authors would like to thank the authors of the TE tunnel YANG
   data model <xref target="I-D.ietf-teas-yang-te"/>, in particular Igor Bryskin, Vishnu Pavan
   Beeram, Tarek Saad and Xufeng Liu, for their inputs to the
   discussions and support in having consistency between the Path
   Computation and TE tunnel YANG data models.</t>

<t>The authors would like to thank Adrian Farrel, Dhruv Dhody, Igor
   Bryskin, Julien Meuric and Lou Berger for their valuable input to the
   discussions that has clarified that the path being set up is not
   necessarily the same as the path that has been previously computed
   and, in particular to Dhruv Dhody, for his suggestion to describe the
   need for a path verification phase to check that the actual path
   being set up meets the required end-to-end metrics and constraints.</t>

<t>The authors would like to thank Aihua Guo, Lou Berger, Shaolong Gan,
   Martin Bjorklund and Tom Petch for their useful comments on how to
   define XPath statements in YANG RPCs.</t>

<t>The authors would like to thank Haomian Zheng, Yanlei Zheng, Tom
   Petch, Aihua Guo and Martin Bjorklund for their review and valuable
   comments to this document.</t>

<t>Previous versions of document were prepared using 2-Word-v2.0.template.dot.</t>

<t>This document was prepared using kramdown.</t>

</section>

    <section anchor="contributors" numbered="false" toc="include" removeInRFC="false">
        <name>Contributors</name>
    <contact initials="D." surname="Ceccarelli" fullname="Daniele Ceccarelli">
      <organization>Cisco</organization>
      <address>
        <email>daniele.ietf@gmail.com</email>
      </address>
    </contact>
    <contact initials="V." surname="Lopez" fullname="Victor Lopez">
      <organization>Nokia</organization>
      <address>
        <email>victor.lopez@nokia.com</email>
      </address>
    </contact>
    <contact initials="R." surname="Vilalta" fullname="Ricard Vilalta">
      <organization>CTTC</organization>
      <address>
        <email>ricard.vilalta@cttc.es</email>
      </address>
    </contact>
    <contact initials="K." surname="Sethuraman" fullname="Karthik Sethuraman">
      <organization>NEC</organization>
      <address>
        <email>karthik.sethuraman@necam.com</email>
      </address>
    </contact>
    <contact initials="M." surname="Scharf" fullname="Michael Scharf">
      <organization>Nokia</organization>
      <address>
        <email>michael.scharf@gmail.com</email>
      </address>
    </contact>
    <contact initials="D." surname="Beller" fullname="Dieter Beller">
      <organization>Nokia</organization>
      <address>
        <email>dieter.beller@nokia.com</email>
      </address>
    </contact>
    <contact initials="G." surname="Bruno" fullname="Gianmarco Bruno">
      <organization>Ericsson</organization>
      <address>
        <email>gianmarco.bruno@ericsson.com</email>
      </address>
    </contact>
    <contact initials="F." surname="Lazzeri" fullname="Francesco Lazzeri">
      <organization>Ericsson</organization>
      <address>
        <email>francesco.lazzeri@ericsson.com</email>
      </address>
    </contact>
    <contact initials="Y." surname="Lee" fullname="Young Lee">
      <organization>Samsung Electronics</organization>
      <address>
        <email>younglee.tx@gmail.com</email>
      </address>
    </contact>
    <contact initials="C." surname="Perocchio" fullname="Carlo Perocchio">
      <organization>Ericsson</organization>
      <address>
        <email>carlo.perocchio@ericsson.com</email>
      </address>
    </contact>
    <contact initials="O." surname="Dugeon" fullname="Olivier Dugeon">
      <organization>Orange Labs</organization>
      <address>
        <email>olivier.dugeon@orange.com</email>
      </address>
    </contact>
    <contact initials="J." surname="Meuric" fullname="Julien Meuric">
      <organization>Orange Labs</organization>
      <address>
        <email>julien.meuric@orange.com</email>
      </address>
    </contact>
    </section>

  </back>

<!-- ##markdown-source:
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
1f3crn3M7U+QniW89P8ADyP7WmqmAgA=

-->

</rfc>

