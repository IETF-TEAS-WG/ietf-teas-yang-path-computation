<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.17 (Ruby 2.7.0) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc comments="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-teas-yang-path-computation-21" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="Yang for Path Computation">A YANG Data Model for requesting path computation</title>

    <author initials="I." surname="Busi" fullname="Italo Busi" role="editor">
      <organization>Huawei Technologies</organization>
      <address>
        <email>italo.busi@huawei.com</email>
      </address>
    </author>
    <author initials="S." surname="Belotti" fullname="Sergio Belotti" role="editor">
      <organization>Nokia</organization>
      <address>
        <email>sergio.belotti@nokia.com</email>
      </address>
    </author>
    <author initials="O." surname="Gonzalez de Dios" fullname="Oscar Gonzalez de Dios">
      <organization>Telefonica</organization>
      <address>
        <email>oscar.gonzalezdedios@telefonica.com</email>
      </address>
    </author>
    <author initials="A." surname="Sharma" fullname="Anurag Sharma">
      <organization>Google</organization>
      <address>
        <email>ansha@google.com</email>
      </address>
    </author>
    <author initials="Y." surname="Shi" fullname="Yan Shi">
      <organization>China Unicom</organization>
      <address>
        <email>shiyan49@chinaunicom.cn</email>
      </address>
    </author>
    <author initials="D." surname="Ceccarelli" fullname="Daniele Ceccarelli">
      <organization>Cisco</organization>
      <address>
        <email>daniele.ietf@gmail.com</email>
      </address>
    </author>

    <date year="2023" month="March" day="10"/>

    
    <workgroup>TEAS Working Group</workgroup>
    

    <abstract>


<t>There are scenarios, typically in a hierarchical Software-Defined
   Networking (SDN) context, where the topology information provided by
   a Traffic Engineering (TE) network provider may be insufficient for
   its client to perform multi-domain path computation. In these cases the
   client would need to request the TE network provider to compute some
   intra-domain paths to be used by the client to choose the optimal multi-domain paths.</t>

<t>This document provides a mechanism to request path computation by augmenting the Remote Procedure Calls (RPCs) defined in RFC YYYY.</t>

<t>[RFC EDITOR NOTE: Please replace RFC YYYY with the RFC number of
   draft-ietf-teas-yang-te once it has been published.</t>

<t>Moreover, this document describes some use cases where the path
   computation request, via YANG-based protocols (e.g., NETCONF or
   RESTCONF), can be needed.</t>



    </abstract>



  </front>

  <middle>


<section anchor="intro"><name>Introduction</name>

<t anchor="pc-model">There are scenarios, typically in a hierarchical Software-Defined
   Networking (SDN) context, where the topology information provided by
   a Traffic Engineering (TE) network provider may be insufficient for
   its client to perform multi-domain path computation. In these cases the
   client would need to request the TE network provider to compute some
   intra-domain paths that could be used together with its topology information
   to compute the multi-domain path.</t>

<t>These types of scenarios can be applied to different interfaces in
   different reference architectures:</t>

<t><list style="symbols">
  <t>Application-Based Network Operations (ABNO) control interface
<xref target="RFC7491"/>, in which an Application Service Coordinator can request the
ABNO controller to take in charge path calculation (see Figure 1
in <xref target="RFC7491"/>).</t>
  <t>Abstraction and Control of TE Networks (ACTN) <xref target="RFC8453"/>, where a
controller hierarchy is defined.
In the ACTN context, path computation is needed on the interface
between Customer Network Controller (CNC)  and Multi-Domain
Service Coordinator (MDSC), called CNC-MDSC Interface (CMI),
and on the interface between MSDC and Provisioning Network
Controller (PNC), called MDSC-PNC Interface  (MPI). 
<xref target="RFC8454"/> describes an information model for the Path
Computation request.  <vspace blankLines='1'/>
Multiple protocol solutions can be used for communication between
different controller hierarchical levels. This document assumes that
the controllers are communicating using YANG-based protocols (e.g.,
NETCONF <xref target="RFC6241"/> or RESTCONF <xref target="RFC8040"/>).  <vspace blankLines='1'/>
Path Computation Elements (PCEs), controllers and orchestrators
perform their operations based on Traffic Engineering Databases
(TED). Such TEDs can be described, in a technology agnostic way, with
the YANG data model for TE Topologies <xref target="RFC8795"/>. Furthermore, the
technology specific details of the TED are modelled in the technology
specific topology models, e.g., the <xref target="I-D.ietf-ccamp-otn-topo-yang"/> for Optical Transport
Network (OTN) Optical Data Unit (ODU) technologies, which augment the
common TE topology model in <xref target="RFC8795"/>.  <vspace blankLines='1'/>
The availability of such topology models allows the provisioning of
the TED using YANG-based protocols (e.g., NETCONF or RESTCONF).
Furthermore, it enables a PCE/controller performing the necessary
abstractions or modifications and offering this customized topology
to another PCE/controller or high level orchestrator.  <vspace blankLines='1'/>
The tunnels that can be provided over the networks described with the
topology models can be also set-up, deleted and modified via YANG-
based protocols (e.g., NETCONF or RESTCONF) using the TE tunnel YANG
data model <xref target="I-D.ietf-teas-yang-te"/>.  <vspace blankLines='1'/>
This document defines a YANG data model <xref target="RFC7950"/> that augments the RPC defined in <xref target="I-D.ietf-teas-yang-te"/>. The use of this RPC is complimentary to the configuration of a TE tunnel path in "compute-only" mode, as described in <xref target="I-D.ietf-teas-yang-te"/>.  <vspace blankLines='1'/>
The YANG data model definition does not make any assumption about
whether that the client or the server implement a "PCE"
functionality, as defined in <xref target="RFC4655"/>, and the Path Computation
Element Communication Protocol (PCEP) protocol, as defined in
<xref target="RFC5440"/>.  <vspace blankLines='1'/>
Moreover, this document describes some use cases where a path
computation request, via YANG-based protocols (e.g., NETCONF or
RESTCONF), can be needed.  <vspace blankLines='1'/>
The YANG data model defined in this document conforms to the Network
Management Datastore Architecture <xref target="RFC8342"/>.</t>
</list></t>

<section anchor="terminology"><name>Terminology</name>

<t>TED:</t>

<ul empty="true"><li>
  <t>The traffic engineering database is a collection of all TE
   information about all TE nodes and TE links in a given network.</t>
</li></ul>

<t>PCE:</t>

<ul empty="true"><li>
  <t>A Path Computation Element (PCE) is an entity that is capable of
   computing a network path or route based on a network graph, and of
   applying computational constraints during the computation.  The PCE
   entity is an application that can be located within a network node or
   component, on an out-of-network server, etc.  For example, a PCE
   would be able to compute the path of a TE Label Switched Path (LSP)
   by operating on the TED and considering bandwidth and other
   constraints applicable to the TE LSP service request. <xref target="RFC4655"/>.</t>
</li></ul>

<t>Domain:</t>

<ul empty="true"><li>
  <t>TE information is the data relating to nodes and TE links
   that is used in the process of selecting a TE path.  TE information
   is usually only available within a network.  We call such a zone of
   visibility of TE information a domain.  An example of a domain may be
   an IGP area or an Autonomous System. <xref target="RFC7926"/></t>
</li></ul>

<t>The terminology for describing YANG data models is found in
   <xref target="RFC7950"/>.</t>

</section>
<section anchor="tree-diagram"><name>Tree Diagram</name>

<t>Tree diagrams used in this document follow the notation defined in
   <xref target="RFC8340"/>.</t>

</section>
<section anchor="prefixes-in-data-node-names"><name>Prefixes in Data Node Names</name>

<t>In this document, names of data nodes and other data model objects
   are prefixed using the standard prefix associated with the
   corresponding YANG imported modules, as shown in <xref target="tab-prefix"/>.</t>

<texttable title="Prefixes and corresponding YANG modules" anchor="tab-prefix">
      <ttcol align='left'>Prefix</ttcol>
      <ttcol align='left'>YANG module</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>te-types</c>
      <c>ietf-te-types</c>
      <c>[RFCZZZZ]</c>
      <c>te</c>
      <c>ietf-te</c>
      <c>[RFCYYYY]</c>
      <c>te-pc</c>
      <c>ietf-te-path-computation</c>
      <c>RFCXXXX</c>
</texttable>

<t>RFC Editor Note:
Please replace XXXX with the RFC number assigned to this document.
Please replace YYYY with the RFC number of <xref target="I-D.ietf-teas-yang-te"/> once it has been published.
Please replace ZZZZ with the RFC number of <xref target="I-D.ietf-teas-rfc8776-update"/> once it has been published.
Please remove this note.</t>

</section>
</section>
<section anchor="use-cases"><name>Use Cases</name>

<t>This section presents some use cases, where a client needs to request
   underlying SDN controllers for path computation.</t>

<t>The use of the YANG data model defined in this document is not
   restricted to these use cases but can be used in any other use case
   when deemed useful.</t>

<t>The presented uses cases have been grouped, depending on the
   different underlying topologies: Packet/Optical Integration (<xref target="poi-uc"/>);
   multi-domain Traffic Engineered (TE) Networks (<xref target="md-uc"/>); and Data Center
   Interconnections (<xref target="dci-uc"/>). Use cases in <xref target="brpc-uc"/> and <xref target="hpce-uc"/>
   respectively present how to
   apply this YANG data model for standard multi-domain PCE i.e.
   Backward Recursive Path Computation <xref target="RFC5441"/> and Hierarchical PCE
   <xref target="RFC6805"/>.</t>

<section anchor="poi-uc"><name>Packet/Optical Integration</name>

<t>In this use case, an optical domain is used to provide connectivity
   to some nodes of a packet domain (see <xref target="fig-poi-uc"/>).</t>

<figure title="Packet/Optical Integration use case" anchor="fig-poi-uc"><artwork type="ascii-art" name="poi-use-case.txt"><![CDATA[
                                +----------------+
                                |                |
                                | Packet/Optical |
                                |  Coordinator   |
                                |                |
                                +---+------+-----+
                                    |      |
                       +------------+      |
                       |                   +-----------+
                +------V-----+                         |
                |            |                  +------V-----+
                | Packet     |                  |            |
                | Domain     |                  | Optical    |
                | Controller |                  | Domain     |
                |            |                  | Controller |
                +------+-----+                  +-------+----+
                       |                                |
              .........V.........................       |
              :          packet domain          :       |
          +----+                               +----+   |
          | R1 |= = = = = = = = = = = = = = = =| R2 |   |
          +-+--+                               +--+-+   |
            | :                                 : |     |
            | :................................ : |     |
            |                                     |     |
            |               +-----+               |     |
            |    ...........| Opt |...........    |     |
            |    :          |  C  |          :    |     |
            |    :         /+--+--+\         :    |     |
            |    :        /    |    \        :    |     |
            |    :       /     |     \       :    |     |
            |   +-----+ /   +--+--+   \ +-----+   |     |
            |   | Opt |/    | Opt |    \| Opt |   |     |
            +---|  A  |     |  D  |     |  B  |---+     |
                +-----+\    +--+--+    /+-----+         |
                 :      \      |      /      :          |
                 :       \     |     /       :          |
                 :        \ +--+--+  / optical<---------+
                 :         \| Opt |/  domain :
                 :..........|  E  |..........:
                            +-----+
]]></artwork></figure>

<t><xref target="fig-poi-uc"/> as well as <xref target="fig-poi-abstraction"/> describe two different
   examples of packet/optical topologies and only show a partial view of the
   packet network connectivity, before additional packet connectivity is
   provided by the optical network.</t>

<t>It is assumed that the Optical Domain Controller provides to the
   Packet/Optical Coordinator an abstracted view of the optical network.
   A possible abstraction could be to represent the whole optical
   network as one "virtual node" with "virtual ports" connected to the
   access links, as shown in <xref target="fig-poi-abstraction"/>.</t>

<t>It is also assumed that Packet Domain Controller can provide the
   Packet/Optical Coordinator the information it needs to set up
   connectivity between packet nodes through the optical network (e.g.,
   the access links).</t>

<t>The path computation request helps the Packet/Optical Coordinator to
   know the real connections that can be provided by the optical
   network.</t>

<figure title="Packet and Optical Topology Abstractions" anchor="fig-poi-abstraction"><artwork type="ascii-art" name="poi-topology-abstraction.txt"><![CDATA[
                       ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,.
                      ,  Packet/Optical Coordinator view          ,
                     ,                              +----+       , .
                    ,                               |    |      ,
                   ,                                | R2 |     ,   .
                  ,  +----+  +------------ +       /+----+    ,
                 ,   |    |  |             |/-----/ / /      ,     .
                ,    | R1 |--O VP1     VP4 O       / /      ,
               ,     |    |\ |             | /----/ /      ,       .
              ,      +----+ \|             |/      /      ,
             ,        /      O VP2     VP5 O      /      ,         .
            ,        /       |             |  +----+    ,
           ,        /        |             |  |    |   ,           .
          ,        /         O VP3     VP6 O--| R4 |  ,
         ,     +----+ /-----/|_____________|  +----+ ,             .
        ,      |    |/       +------------ +        ,
       ,       | R3 |                              ,               .
      ,        +----+                             ,,,,,,,,,,,,,,,,,
     ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,                ,.
     . Packet Domain Controller view                +----+       ,
       only packet nodes and packet links           |    |      ,  .
     . with access links to the optical network     | R2 |     ,
                  ,  +----+                        /+----+    ,    .
     .           ,   |    |                 /-----/ / /      ,
                ,    | R1 |---                     / /      ,      .
     .         ,     +----+\                 /----/ /      ,
              ,        /    \               /      /      ,        .
     .       ,        /                           /      ,
            ,        /                        +----+    ,          .
     .     ,        /                         |    |   ,
          ,        /                       ---| R4 |  ,            .
     .   ,     +----+ /-----/                 +----+ ,
        ,      |    |/                              ,              .
     . ,       | R3 |                              ,
      ,        +----+                             ,,,,,,,,,,,,,,,,,.
     .,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,                ,
       Optical Domain Controller view                            , .
     . only optical nodes,        +--+                          ,
       optical links and         /|OF|                         ,   .
     . access links from the  +--++--+             /          ,
       packet network         |OA|    \     /-----/ /        ,     .
     .          ,          ---+--+--\  +--+/       /        ,
               ,           \   |  \  \-|OE|-------/        ,       .
     .        ,             \  |   \ /-+--+               ,
             ,               \+--+  X    |               ,         .
     .      ,                 |OB|-/ \   |              ,
           ,                  +--+-\  \+--+            ,           .
     .    ,                  /   \  \--|OD|---        ,
         ,            /-----/     +--+ +--+          ,             .
     .  ,            /            |OC|/             ,
       ,                          +--+             ,               .
     .,                                           ,,,,,,,,,,,,,,,,,,
      ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,                ,
     . Actual Physical View                         +----+       ,
                    ,             +--+              |    |      ,
     .             ,             /|OF|              | R2 |     ,
                  ,  +----+   +--++--+             /+----+    ,
     .           ,   |    |   |OA|    \     /-----/ / /      ,
                ,    | R1 |---+--+--\  +--+/       / /      ,
     .         ,     +----+\   |  \  \-|OE|-------/ /      ,
              ,        /    \  |   \ /-+--+        /      ,
     .       ,        /      \+--+  X    |        /      ,
            ,        /        |OB|-/ \   |    +----+    ,
     .     ,        /         +--+-\  \+--+   |    |   ,
          ,        /         /   \  \--|OD|---| R4 |  ,
     .   ,     +----+ /-----/     +--+ +--+   +----+ ,
        ,      |    |/            |OC|/             ,
     . ,       | R3 |             +--+             ,
      ,        +----+                             ,
     .,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
]]></artwork></figure>

<t>In this use case, the Packet/Optical Coordinator needs to set up an
   optimal underlying path for an IP link between R1 and R2.</t>

<t>As depicted in <xref target="fig-poi-abstraction"/>, the Packet/Optical Coordinator has only an
   "abstracted view" of the physical network, and it does not know the
   feasibility or the cost of the possible optical paths (e.g., VP1-VP4
   and VP2-VP5), which depend on the current status of the physical
   resources within the optical network and on vendor-specific optical
   attributes.</t>

<t>The Packet/Optical Coordinator can request the underlying Optical
   Domain Controller to compute a set of potential optimal paths, taking
   into account optical constraints. Then, based on its own constraints,
   policy and knowledge (e.g. cost of the access links), it can choose
   which one of these potential paths to use to set up the optimal end-
   to-end path crossing optical network.</t>

<figure title="Packet/Optical Integration path computation example" anchor="fig-poi-example"><artwork type="ascii-art" name="poi-example.txt"><![CDATA[
                    ............................
                    :                          :
                    O VP1                  VP4 O
           cost=10 /:\                        /:\ cost=10
                  / : \----------------------/ : \
          +----+ /  :         cost=50          :  \ +----+
          |    |/   :                          :   \|    |
          | R1 |    :                          :    | R2 |
          |    |\   :                          :   /|    |
          +----+ \  :  /--------------------\  :  / +----+
                  \ : /       cost=55        \ : /
            cost=5 \:/                        \:/ cost=5
                    O VP2                  VP5 O
                    :                          :
                    :..........................:
]]></artwork></figure>

<t>For example, in <xref target="fig-poi-example"/>, the Packet/Optical Coordinator can request
   the Optical Domain Controller to compute the paths between VP1-VP4
   and VP2-VP5 and then decide to set up the optimal end-to-end path
   using the VP2-VP5 optical path even if this is not the optimal path
   from the optical domain perspective.</t>

<t>Considering the dynamicity of the connectivity constraints of an
   optical domain, it is possible that a path computed by the Optical
   Domain Controller when requested by the Packet/Optical Coordinator is
   no longer valid/available when the Packet/Optical Coordinator
   requests it to be set up. This is further discussed in <xref target="rpc-motivation"/>.</t>

</section>
<section anchor="md-uc"><name>Multi-domain TE networks</name>

<t>In this use case there are two TE domains which are interconnected
   together by multiple inter-domains links.</t>

<t>A possible example could be a multi-domain optical network.</t>

<figure title="Multi-domain multi-link interconnection" anchor="md-ml-connection"><artwork type="ascii-art" name="multi-domain-use-case.txt"><![CDATA[
                            +--------------+
                            | Multi-Domain |
                            | Controller   |
                            +---+------+---+
                                |      |
                   +------------+      |
                   |                   +-----------+
            +------V-----+                         |
            |            |                         |
            | TE Domain  |                  +------V-----+
            | Controller |                  |            |
            |      1     |                  | TE Domain  |
            +------+-----+                  | Controller |
                   |                        |      2     |
                   |                        +------+-----+
          .........V..........                     |
          :                  :                     |
         +-----+             :                     |
         |     |             :            .........V..........
         |  X  |             :            :                  :
         |     |          +-----+      +-----+                :
         +-----+          |     |      |     |               :
          :               |  C  |------|  E  |               :
      +-----+    +-----+ /|     |      |     |\ +-----+    +-----+
      |     |    |     |/ +-----+      +-----+ \|     |    |     |
      |  A  |----|  B  |     :            :     |  G  |----|  H  |
      |     |    |     |\    :            :    /|     |    |     |
      +-----+    +-----+ \+-----+      +-----+/ +-----+    +-----+
          :               |     |      |     |               :
          :               |  D  |------|  F  |               :
          :               |     |      |     |          +-----+
          :               +-----+      +-----+          |     |
          :                  :            :             |  Y  |
          :                  :            :             |     |
          :   TE domain 1    :            : TE domain 2 +-----+
          :..................:            :.................:
]]></artwork></figure>

<t>In order to set up an end-to-end multi-domain TE path (e.g., between
   nodes A and H), the Multi-Domain Controller needs to know the
   feasibility or the cost of the possible TE paths within the two TE
   domains, which depend on the current status of the physical resources
   within each TE domain. This is more challenging in case of optical
   networks because the optimal paths depend also on vendor-specific
   optical attributes (which may be different in the two domains if they
   are provided by different vendors).</t>

<t>In order to set up a multi-domain TE path (e.g., between nodes A and
   H), the Multi-Domain Controller can request the TE Domain Controllers
   to compute a set of intra-domain optimal paths and take decisions
   based on the information received. For example:</t>

<t><list style="symbols">
  <t>The Multi-Domain Controller asks TE Domain Controllers to provide
set of paths between A-C, A-D, E-H and F-H</t>
  <t>TE Domain Controllers return a set of feasible paths with the
associated costs: the path A-C is not part of this set (in optical
networks, it is typical to have some paths not being feasible due
to optical constraints that are known only by the Optical Domain
Controller)</t>
  <t>The Multi-Domain Controller will select the path A-D-F-H since it
is the only feasible multi-domain path and then request the TE
Domain Controllers to set up the A-D and F-H intra-domain paths</t>
  <t>If there are multiple feasible paths, the Multi-Domain Controller
can select the optimal path knowing the cost of the intra-domain
paths (provided by the TE domain controllers) and the cost of the
inter-domain links (known by the Multi-Domain Controller)  <vspace blankLines='1'/>
This approach may have some scalability issues when the number of TE
domains is quite big (e.g. 20).  <vspace blankLines='1'/>
In this case, it would be worthwhile using the abstract TE topology
information provided by the TE Domain Controllers to limit the number
of potential optimal end-to-end paths and then request path
computation from fewer TE Domain Controllers in order to decide what
the optimal path within this limited set is.  <vspace blankLines='1'/>
For more details, see <xref target="topo-pc-complement"/>.</t>
</list></t>

</section>
<section anchor="dci-uc"><name>Data Center Interconnections</name>

<t>In these use case, there is a TE domain which is used to provide
   connectivity between Data Centers which are connected with the TE
   domain using access links.</t>

<figure title="Data Center Interconnection use case" anchor="fig-dci-uc"><artwork type="ascii-art" name="dci-use-case.txt"><![CDATA[
                        +--------------+
                        | Cloud Network|
                        | Orchestrator |
                        +--------------+
                          |  |  |  |
            +-------------+  |  |  +------------------------+
            |                |  +------------------+        |
            |       +--------V---+                 |        |
            |       |            |                 |        |
            |       | TE Network |                 |        |
     +------V-----+ | Controller |          +------V-----+  |
     | DC         | +------------+          | DC         |  |
     | Controller |     |                   | Controller |  |
     +------------+     |   +-----+         +------------+  |
          |         ....V...|     |........         |       |
          |         :       |  P  |       :         |       |
     .....V.....    :      /+-----+\      :    .....V.....  |
     :         :  +-----+ /    |    \ +-----+  :         :  |
     :  DC1 || :  |     |/     |     \|     |  :  DC2 || :  |
     :    ||||----| PE1 |      |      | PE2 |----   |||| :  |
     : _|||||| :  |     |\     |     /|     |  : _|||||| :  |
     :         :  +-----+ \ +-----+ / +-----+  :         :  |
     :.........:    :      \|     |/      :    :.........:  |
                    :.......| PE3 |.......:                 |
                            |     |                         |
                            +-----+               +---------V--+
                          .....|.....             | DC         |
                          :         :             | Controller |
                          :  DC3 || :             +------------+
                          :    |||| :                  |
                          : _|||||| <------------------+
                          :         :
                          :.........:
]]></artwork></figure>

<t>In this use case, there is the need to transfer data from Data Center
   1 (DC1) to either DC2 or DC3 (e.g. workload migration).</t>

<t>The optimal decision depends both on the cost of the TE path (DC1-DC2
   or DC1-DC3) and of the Data Center resources within DC2 or DC3.</t>

<t>The Cloud Network Orchestrator needs to make a decision for optimal
   connection based on TE network constraints and Data Center resources.</t>

<t>It may not be able to make this decision because it has only an
   abstract view of the TE network (as in <xref target="poi-uc"/>).</t>

<t>The Cloud Network Orchestrator can request to the TE Network
   Controller to compute the cost of the possible TE paths (e.g., DC1-
   DC2 and DC1-DC3) and to the DC Controller to provide the information
   it needs about the required Data Center resources within DC2 and DC3
   and then it can take the decision about the optimal solution based on
   this information and its policy.</t>

</section>
<section anchor="brpc-uc"><name>Backward Recursive Path Computation scenario</name>

<t><xref target="RFC5441"/> has defined the Virtual Source Path Tree (VSPT) flag within the RP (Request Parameters) object in order to compute inter-domain paths following a
   "Backward Recursive Path Computation" (BRPC) method. The main
   principle is to forward the PCReq message up to the destination
   domain. Then, each PCE involved in the computation will compute its
   part of the path and send it back to the requester through PCE
   Response message. The resulting computation is spread from
   destination PCE to source PCE. Each PCE is in charge of merging the
   path it received with the one it calculated. At the end, the source
   PCE merges its local part of the path with the received one to
   achieve the end-to-end path.</t>

<t><xref target="fig-brpc-example"/> below show a typical BRPC scenario where 3 PCEs cooperate to
   compute inter-domain paths.</t>

<figure title="BRPC Scenario" anchor="fig-brpc-example"><artwork type="ascii-art" name="brpc-scenario.txt"><![CDATA[
                   +----------------+          +----------------+
                   |  Domain (B)    |          |  Domain (C)    |
                   |                |          |                |
                   |        /-------|---PCEP---|--------\       |
                   |       /        |          |         \      |
                   |   (PCE)        |          |   -    (PCE)   |
                   |    /           <---------->  |D|           |
                   |   /            |  Inter   |   -            |
                   +---|----^-------+  Domain  +----------------+
                       |    |          Link
                     PCEP   |
                       |    | Inter-domain Link
                       |    |
                   +---|----v-------+
                   |   |            |
                   |   | Domain (A) |
                   |   \            |
                   |  (PCE)    -    |
                   |          |S|   |
                   |           -    |
                   +----------------+
]]></artwork></figure>

<t>In this use case, a client can use the YANG data model defined in
   this document to request path computation from the PCE that controls
   the source of the tunnel. For example, a client can request to the
   PCE of domain A to compute a path from a source S, within domain A,
   to a destination D, within domain C. Then PCE of domain A will use
   PCEP protocol, as per <xref target="RFC5441"/>, to compute the path from S to D and
   in turn gives the final answer to the requester.</t>

</section>
<section anchor="hpce-uc"><name>Hierarchical PCE scenario</name>

<t><xref target="RFC6805"/> has defined an architecture and extensions to the PCE
   standard to compute inter-domain path following a hierarchical
   method. Two new roles have been defined: parent PCE and child PCE.
   The parent PCE is in charge to coordinate the end-to-end path
   computation. For that purpose it sends to each child PCE involved in
   the multi-domain path computation a PCE Request message to obtain the
   local part of the path. Once received all answer through PCE Response
   message, the parent PCE will merge the different local parts of the
   path to achieve the end-to-end path.</t>

<t><xref target="fig-hpce-example"/> below shows a typical hierarchical scenario where a parent
   PCE request end-to-end path to the different child PCE. Note that a
   PCE could take independently the role of child or parent PCE
   depending of which PCE will request the path.</t>

<figure title="Hierarchical domain topology from RFC6805" anchor="fig-hpce-example"><artwork type="ascii-art" name="hierarchical-domain-topology.txt"><![CDATA[
    -----------------------------------------------------------------
    |   Domain 5                                                      |
    |                              -----                              |
    |                             |PCE 5|                             |
    |                              -----                              |
    |                                                                 |
    |    ----------------     ----------------     ----------------   |
    |   | Domain 1       |   | Domain 2       |   | Domain 3       |  |
    |   |                |   |                |   |                |  |
    |   |        -----   |   |        -----   |   |        -----   |  |
    |   |       |PCE 1|  |   |       |PCE 2|  |   |       |PCE 3|  |  |
    |   |        -----   |   |        -----   |   |        -----   |  |
    |   |                |   |                |   |                |  |
    |   |            ----|   |----        ----|   |----            |  |
    |   |           |BN11+---+BN21|      |BN23+---+BN31|           |  |
    |   |   -        ----|   |----        ----|   |----        -   |  |
    |   |  |S|           |   |                |   |           |D|  |  |
    |   |   -        ----|   |----        ----|   |----        -   |  |
    |   |           |BN12+---+BN22|      |BN24+---+BN32|           |  |
    |   |            ----|   |----        ----|   |----            |  |
    |   |                |   |                |   |                |  |
    |   |         ----   |   |                |   |   ----         |  |
    |   |        |BN13|  |   |                |   |  |BN33|        |  |
    |    -----------+----     ----------------     ----+-----------   |
    |                \                                /               |
    |                 \       ----------------       /                |
    |                  \     |                |     /                 |
    |                   \    |----        ----|    /                  |
    |                    ----+BN41|      |BN42+----                   |
    |                        |----        ----|                       |
    |                        |                |                       |
    |                        |        -----   |                       |
    |                        |       |PCE 4|  |                       |
    |                        |        -----   |                       |
    |                        |                |                       |
    |                        | Domain 4       |                       |
    |                         ----------------                        |
    |                                                                 |
     -----------------------------------------------------------------
]]></artwork></figure>

<t>In this use case, a client can use the YANG data model defined in
   this document to request to the parent PCE a path from a source S to
   a destination D. The parent PCE will in turn contact the child PCEs
   through PCEP protocol to compute the end-to-end path and then return
   the computed path to the client, using the YANG data model defined in
   this document. For example the YANG data model can be used to request
   to PCE5 acting as parent PCE to compute a path from source S, within
   domain 1, to destination D, within domain 3. PCE5 will contact child
   PCEs of domain 1, 2 and 3 to obtain local part of the end-to-end path
   through the PCEP protocol. Once received the PCRep message, it
   merges the answers to compute the end-to-end path and send it back to
   the client.</t>

</section>
</section>
<section anchor="motivations"><name>Motivations</name>

<t>This section provides the motivation for the YANG data model defined
   in this document.</t>

<t><xref target="yang-motivation"/> describes the motivation for a YANG data model to request
   path computation.</t>

<t><xref target="topo-interaction"/> describes the motivation for a YANG data model which
   complements the TE topology YANG data model defined in <xref target="RFC8795"/>.</t>

<t><xref target="rpc-motivation"/> describes the motivation for a YANG RPC which complements
   the TE tunnel YANG data model defined in <xref target="I-D.ietf-teas-yang-te"/>.</t>

<section anchor="yang-motivation"><name>Motivation for a YANG Model</name>

<section anchor="benefits-of-common-data-models"><name>Benefits of common data models</name>

<t>The YANG data model for requesting path computation is closely
   aligned with the YANG data models that provide (abstract) TE topology
   information, i.e., <xref target="RFC8795"/> as well as that are used to configure
   and manage TE tunnels, i.e., <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>There are many benefits in aligning the data model used for path
   computation requests with the YANG data models used for TE topology
   information and for TE tunnels configuration and management:</t>

<t><list style="symbols">
  <t>There is no need for an error-prone mapping or correlation of
information.</t>
  <t>It is possible to use the same endpoint identifiers in path
computation requests and in the topology modeling.</t>
  <t>The attributes used for path computation constraints are the same
as those used when setting up a TE tunnel.</t>
</list></t>

</section>
<section anchor="benefits-of-a-single-interface"><name>Benefits of a single interface</name>

<t>The system integration effort is typically lower if a single,
   consistent interface is used by controllers, i.e., one data modeling
   language (i.e., YANG) and a common protocol (e.g., NETCONF or
   RESTCONF).</t>

<t>Practical benefits of using a single, consistent interface include:</t>

<t><list style="numbers">
  <t>Simple authentication and authorization: The interface between
different components has to be secured. If different protocols
have different security mechanisms, ensuring a common access
control model may result in overhead. For instance, there may be a
need to deal with different security mechanisms, e.g., different
credentials or keys. This can result in increased integration
effort.</t>
  <t>Consistency: Keeping data consistent over multiple different
interfaces or protocols is not trivial. For instance, the sequence
of actions can matter in certain use cases, or transaction
semantics could be desired. While ensuring consistency within one
protocol can already be challenging, it is typically cumbersome to
achieve that across different protocols.</t>
  <t>Testing: System integration requires comprehensive testing,
including corner cases. The more different technologies are
involved, the more difficult it is to run comprehensive test cases
and ensure proper integration.</t>
  <t>Middle-box friendliness: Provider and consumer of path computation
requests may be located in different networks, and middle-boxes
such as firewalls, NATs, or load balancers may be deployed. In
such environments it is simpler to deploy a single protocol. Also,
it may be easier to debug connectivity problems.</t>
  <t>Tooling reuse: Implementers may want to implement path computation
requests with tools and libraries that already exist in
controllers and/or orchestrators, e.g., leveraging the rapidly
growing eco-system for YANG tooling.</t>
</list></t>

</section>
<section anchor="extensibility"><name>Extensibility</name>

<t>Path computation is only a subset of the typical functionality of a
   controller. In many use cases, issuing path computation requests
   comes along with the need to access other functionality on the same
   system. In addition to obtaining TE topology, for instance also
   configuration of services (set-up/modification/deletion) may be
   required, as well as:</t>

<t><list style="numbers">
  <t>Receiving notifications for topology changes as well as
integration with fault management</t>
  <t>Performance management such as retrieving monitoring and telemetry
data</t>
  <t>Service assurance, e.g., by triggering OAM functionality</t>
  <t>Other fulfilment and provisioning actions beyond tunnels and
services, such as changing QoS configurations  <vspace blankLines='1'/>
YANG is a very extensible and flexible data modeling language that
can be used for all these use cases.</t>
</list></t>

</section>
</section>
<section anchor="topo-interaction"><name>Interactions with TE topology</name>

<t>The use cases described in <xref target="use-cases"/> have been described assuming
   that the topology view exported by each underlying controller to its
   client is aggregated using the "virtual node model", defined in
   <xref target="RFC7926"/>.</t>

<t>TE topology information, e.g., as provided by <xref target="RFC8795"/>, could in
   theory be used by an underlying controller to provide TE information
   to its client thus allowing a PCE available within its client to
   perform multi-domain path computation on its own, without requesting
   path computations to the underlying controllers.</t>

<t>In case the client does not implement a PCE function, as discussed in
   <xref target="intro"/>, it could not perform path computation based on TE topology
   information and would instead need to request path computation from
   the underlying controllers to get the information it needs to find
   the optimal end-to-end path.</t>

<t>In case the client implements a PCE function, as discussed in 
   <xref target="intro"/>, the TE topology information needs to be complete and accurate,
   which would bring to scalability issues.</t>

<t>Using TE topology to provide a "virtual link model" aggregation, as
   described in <xref target="RFC7926"/>, may be insufficient, unless the aggregation
   provides complete and accurate information, which would still cause
   scalability issues, as described in <xref target="topo-aggregation"/> below.</t>

<t>Using TE topology abstraction, as described in <xref target="RFC7926"/>, may lead to
   compute an unfeasible path, as described in <xref target="RFC7926"/> in 
   <xref target="topo-abstraction"/> below.</t>

<t>Therefore when computing an optimal multi-domain path, there is a
   scalability trade-off between providing complete and accurate TE
   information and the number of path computation requests to the
   underlying controllers.</t>

<t>The TE topology information used, in a complimentary way, to reduce
   the number for path computation requests to the underlying
   controllers, are described in <xref target="topo-pc-complement"/> below.</t>

<section anchor="topo-aggregation"><name>TE topology aggregation</name>

<t>Using the TE topology model, as defined in <xref target="RFC8795"/>, the underlying
   controller can export the whole TE domain as a single TE node with a
   "detailed connectivity matrix" (which provides specific TE
   attributes, such as delay, Shared Risk Link Groups (SRLGs) and other
   TE metrics, between each ingress and egress links).</t>

<t>The information provided by the "detailed connectivity matrix" would
   be equivalent to the information that should be provided by "virtual
   link model" as defined in <xref target="RFC7926"/>.</t>

<t>For example, in the Packet/Optical Integration use case, described in
   <xref target="poi-uc"/>, the Optical Domain Controller can make the information
   shown in <xref target="fig-poi-example"/> available to the Packet/Optical Coordinator as part
   of the TE topology information and the Packet/Optical Coordinator
   could use this information to calculate on its own the optimal path
   between R1 and R2, without requesting any additional information to
   the Optical Domain Controller.</t>

<t>However, when designing the amount of information to provide within
   the "detailed connectivity matrix", there is a tradeoff to be
   considered between accuracy (i.e., providing "all" the information
   that might be needed by the PCE available within the client) and
   scalability.</t>

<t><xref target="poi-multi-path"/> below shows another example, similar to <xref target="fig-poi-example"/>, where
   there are two possible Optical paths between VP1 and VP4 with
   different properties (e.g., available bandwidth and cost).</t>

<figure title="Packet/Optical Integration path computation Example with multiple choices" anchor="poi-multi-path"><artwork type="ascii-art" name="poi-example-multiple.txt"><![CDATA[
                    ............................
                    :  /--------------------\  :
                    : /       cost=65        \ :
                    :/    available-bw=10G    \:
                    O VP1                  VP4 O
           cost=10 /:\                        /:\ cost=10
                  / : \----------------------/ : \
          +----+ /  :         cost=50          :  \ +----+
          |    |/   :     available-bw=2G      :   \|    |
          | R1 |    :                          :    | R2 |
          |    |\   :                          :   /|    |
          +----+ \  :  /--------------------\  :  / +----+
                  \ : /       cost=55        \ : /
            cost=5 \:/    available-bw=3G     \:/ cost=5
                    O VP2                  VP5 O
                    :                          :
                    :..........................:
]]></artwork></figure>

<t>If the information in the "detailed connectivity matrix" is not
   complete/accurate, we can have the following drawbacks:</t>

<t><list style="symbols">
  <t>If only the VP1-VP4 path with available bandwidth of 2 Gb/s and
cost 50 is reported, the client's PCE will fail to compute a 5
Gb/s path between routers R1 and R2, although this would be
feasible;</t>
  <t>If only the VP1-VP4 path with available bandwidth of 10 Gb/s and
cost 65 is reported, the client's PCE will compute, as optimal,
the 1 Gb/s path between R1 and R2 going through the VP2-VP5 path
within the optical domain while the optimal path would actually be
the one going thought the VP1-VP4 sub-path (with cost 50) within
the optical domain.  <vspace blankLines='1'/>
Reporting all the information, as in <xref target="poi-multi-path"/>, using the "detailed
 connectivity matrix", is quite challenging from a scalability
 perspective. The amount of this information is not just based on
 number of end points (which would scale as N-square), but also on
 many other parameters, including client rate, user
 constraints/policies for the service, e.g. max latency &lt; N ms, max
 cost, etc., exclusion policies to route around busy links, min
 Optical Signal to Noise Ratio (OSNR) margin, max pre-Forward Error
 Correction (FEC) Bit Error Rate (BER) etc. All these constraints
 could be different based on connectivity requirements.  <vspace blankLines='1'/>
It is also worth noting that the "connectivity matrix" has been
 originally defined in Wavelength Switched Optical Networks (WSON),
 <xref target="RFC7446"/>, to report the connectivity constrains of a physical node
 within the Wavelength Division Multiplexing (WDM) network: the
 information it contains is pretty "static" and therefore, once taken
 and stored in the TE data base, it can be always being considered
 valid and up-to-date in path computation request.  <vspace blankLines='1'/>
The "connectivity matrix" is sometimes confused with "optical reach
 table" that contain multiple (e.g. k-shortest) regen-free reachable
 paths for every A-Z node combination in the network. Optical reach
 tables can be calculated offline, utilizing vendor optical design and
 planning tools, and periodically uploaded to the Controller: these
 optical path reach tables are fairly static. However, to get the
 connectivity matrix, between any two sites, either a regen free path
 can be used, if one is available, or multiple regen free paths are
 concatenated to get from the source to the destination, which can be
 a very large combination. Additionally, when the optical path within
 optical domain needs to be computed, it can result in different paths
 based on input objective, constraints, and network conditions. In
 summary, even though "optical reach table" is fairly static, which
 regen free paths to build the connectivity matrix between any source
 and destination is very dynamic, and is done using very sophisticated
 routing algorithms.  <vspace blankLines='1'/>
Using the "basic connectivity matrix" with an abstract node to
 abstract the information regarding the connectivity constraints of an
 Optical domain, would make this information more "dynamic" since the
 connectivity constraints of an optical domain can change over time
 because some optical paths that are feasible at a given time may
 become unfeasible at a later time when e.g., another optical path is
 established.  <vspace blankLines='1'/>
The information in the "detailed connectivity matrix" is even more
 dynamic since the establishment of another optical path may change
 some of the parameters (e.g., delay or available bandwidth) in the
 "detailed connectivity matrix" while not changing the feasibility of
 the path.  <vspace blankLines='1'/>
There is therefore the need to keep the information in the "detailed
 connectivity matrix" updated which means that there another tradeoff
 between the accuracy (i.e., providing "all" the information that
 might be needed by the client's PCE) and having up-to-date
 information. The more the information is provided and the longer it
 takes to keep it up-to-date which increases the likelihood that the
 client's PCE computes paths using not updated information.  <vspace blankLines='1'/>
It seems therefore quite challenging to have a "detailed connectivity
 matrix" that provides accurate, scalable and updated information to
 allow the client's PCE to take optimal decisions by its own.  <vspace blankLines='1'/>
Considering the example in <xref target="poi-multi-path"/> with the approach defined in this
 document, the client, when it needs to set up an end-to-end path, it
 can request the Optical Domain Controller to compute a set of optimal
 paths (e.g., for VP1-VP4 and VP2-VP5) and take decisions based on the
 information received:</t>
  <t>When setting up a 5 Gb/s path between routers R1 and R2, the
Optical Domain Controller may report only the VP1-VP4 path as the
only feasible path: the Packet/Optical Coordinator can
successfully set up the end-to-end path passing though this
optical path;</t>
  <t>When setting up a 1 Gb/s path between routers R1 and R2, the
Optical Domain Controller (knowing that the path requires only 1
Gb/s) can report both the VP1-VP4 path, with cost 50, and the VP2-
VP5 path, with cost 65. The Packet/Optical Coordinator can then
compute the optimal path which is passing thought the VP1-VP4 sub-
path (with cost 50) within the optical domain.</t>
</list></t>

</section>
<section anchor="topo-abstraction"><name>TE topology abstraction</name>

<t>Using the TE topology model, as defined in <xref target="RFC8795"/>, the underlying
   controller can export to its client an abstract TE topology, composed
   by a set of TE nodes and TE links, representing the abstract view of
   the topology under its control.</t>

<t>For example, in the multi-domain TE network use case, described in
   <xref target="md-uc"/>, the TE Domain Controller 1 can export a TE topology
   encompassing the TE nodes A, B, C and D and the TE links
   interconnecting them. In a similar way, the TE Domain Controller 2
   can export a TE topology encompassing the TE nodes E, F, G and H and
   the TE links interconnecting them.</t>

<t>In this example, for simplicity reasons, each abstract TE node maps
   with each physical node, but this is not necessary.</t>

<t>In order to set up a multi-domain TE path (e.g., between nodes A and
   H), the Multi-Domain Controller can compute by its own an optimal
   end-to-end path based on the abstract TE topology information
   provided by the domain controllers. For example:</t>

<t><list style="symbols">
  <t>Multi-Domain Controller can compute, based on its own TED data,
the optimal multi-domain path being A-B-C-E-G-H, and then request
the TE Domain Controllers to set up the A-B-C and E-G-H intra-
domain paths</t>
  <t>But, during path set-up, the TE Domain Controller may find out
that A-B-C intra-domain path is not feasible (as discussed in
<xref target="md-uc"/>, in optical networks it is typical to have some paths
not being feasible due to optical constraints that are known only
by the Optical Domain Controller), while only the path A-B-D is
feasible</t>
  <t>So what the Multi-Domain Controller has computed is not good and
it needs to re-start the path computation from scratch  <vspace blankLines='1'/>
As discussed in <xref target="topo-aggregation"/>, providing more extensive abstract
information from the TE Domain Controllers to the Multi-Domain
Controller may lead to scalability problems.  <vspace blankLines='1'/>
In a sense this is similar to the problem of routing and wavelength
assignment within an optical domain. It is possible to do first
routing (step 1) and then wavelength assignment (step 2), but the
chances of ending up with a good path is low. Alternatively, it is
possible to do combined routing and wavelength assignment, which is
known to be a more optimal and effective way for optical path set-up.
Similarly, it is possible to first compute an abstract end-to-end
path within the Multi-Domain Controller (step 1) and then compute an
intra-domain path within each optical domain (step 2), but there are
more chances not to find a path or to get a suboptimal path than by
performing multiple per-domain path computations and then stitching
them together.</t>
</list></t>

</section>
<section anchor="topo-pc-complement"><name>Complementary use of the TE topology</name>

<t>As discussed in <xref target="md-uc"/>, there are some scalability issues with
   path computation requests in a multi-domain TE network with many TE
   domains, in terms of the number of requests to send to the TE Domain
   Controllers. It would therefore be worthwhile using the abstract TE
   topology information provided by the TE Domain Controllers to limit
   the number of requests.</t>

<t>An example can be described considering the multi-domain abstract TE
   topology shown in <xref target="fig-topo-many-domains"/>. In this example, an end-to-end TE path
   between domains A and F needs to be set up. The transit TE domain
   should be selected between domains B, C, D and E.</t>

<figure title="Multi-domain with many domains (Topology information)" anchor="fig-topo-many-domains"><artwork type="ascii-art" name="many-domains-topology.txt"><![CDATA[
                          .........B.........
                          : _ _ _ _ _ _ _ _ :
                          :/               \:
                      +---O  NOT FEASIBLE   O---+
                cost=5|   :                 :   |
    ......A......     |   :.................:   |     ......F......
    :           :     |                         |     :           :
    :           O-----+   .........C.........   +-----O           :
    :           :         : /-------------\ :         :           :
    :           :         :/               \:         :           :
    :  cost<=20 O---------O   cost <= 30    O---------O cost<=20  :
    :          /: cost=5  :                 : cost=5  :\          :
    :  /------/ :         :.................:         : \------\  :
    : /         :                                     :         \ :
    :/ cost<=25 :         .........D.........         : cost<=25 \:
    O-----------O-------+ : /-------------\ : +-------O-----------O
    :\          : cost=5| :/               \: |cost=5 :          /:
    : \         :       +-O   cost <= 30    O-+       :         / :
    :  \------\ :         :                 :         : /------/  :
    : cost>=30 \:         :.................:         :/ cost>=30 :
    :           O-----+                         +-----O           :
    :...........:     |   .........E.........   |     :...........:
                      |   : /-------------\ :   |
                cost=5|   :/               \:   |cost=5
                      +---O   cost >= 30    O---+
                          :                 :
                          :.................:
]]></artwork></figure>

<t>The actual cost of each intra-domain path is not known a priori from
   the abstract topology information. The Multi-Domain Controller only
   knows, from the TE topology provided by the underlying domain
   controllers, the feasibility of some intra-domain paths and some
   upper-bound and/or lower-bound cost information. With this
   information, together with the cost of inter-domain links, the Multi-
   Domain Controller can understand by its own that:</t>

<t><list style="symbols">
  <t>Domain B cannot be selected as the path connecting domains A and F
is not feasible;</t>
  <t>Domain E cannot be selected as a transit domain since it is known
from the abstract topology information provided by domain
controllers that the cost of the multi-domain path A-E-F (which is
100, in the best case) will be always be higher than the cost of
the multi-domain paths A-D-F (which is 90, in the worst case) and
A-C-F (which is 80, in the worst case).  <vspace blankLines='1'/>
Therefore, the Multi-Domain Controller can understand by its own that
 the optimal multi-domain path could be either A-D-F or A-C-F but it
 cannot know which one of the two possible option actually provides
 the optimal end-to-end path.  <vspace blankLines='1'/>
The Multi-Domain Controller can therefore request path computation
 only to the TE Domain Controllers A, D, C and F (and not to all the
 possible TE Domain Controllers).</t>
</list></t>

<figure title="Multi-domain with many domains (Path Computation information)" anchor="fig-pc-many-domains"><artwork type="ascii-art" name="many-domain-path-computation.txt"><![CDATA[
                          .........B.........
                          :                 :
                      +---O                 O---+
    ......A......     |   :.................:   |     ......F......
    :           :     |                         |     :           :
    :           O-----+   .........C.........   +-----O           :
    :           :         : /-------------\ :         :           :
    :           :         :/               \:         :           :
    :  cost=15  O---------O    cost = 25    O---------O  cost=10  :
    :          /: cost=5  :                 : cost=5  :\          :
    :  /------/ :         :.................:         : \------\  :
    : /         :                                     :         \ :
    :/ cost=10  :         .........D.........         : cost=15  \:
    O-----------O-------+ : /-------------\ : +-------O-----------O
    :           : cost=5| :/               \: |cost=5 :           :
    :           :       +-O    cost = 15    O-+       :           :
    :           :         :                 :         :           :
    :           :         :.................:         :           :
    :           O-----+                         +-----O           :
    :...........:     |   .........E.........   |     :...........:
                      |   :                 :   |
                      +---O                 O---+
                          :.................:
]]></artwork></figure>

<t>Based on these requests, the Multi-Domain Controller can know the
   actual cost of each intra-domain paths which belongs to potential
   optimal end-to-end paths, as shown in <xref target="fig-pc-many-domains"/>, and then compute the
   optimal end-to-end path (e.g., A-D-F, having total cost of 50,
   instead of A-C-F having a total cost of 70).</t>

</section>
</section>
<section anchor="rpc-motivation"><name>Path Computation RPC</name>

<t>The TE tunnel YANG data model, defined in <xref target="I-D.ietf-teas-yang-te"/>, can support
   the need to request path computation, as described in section 5.1.2
   of <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>This solution is stateful since the state of each created "compute-
   only" TE tunnel path needs to be maintained, in the YANG datastores
   (at least in the running datastore and operational datastore), and
   updated, when underlying network conditions change.</t>

<t>The RPC mechanism allows requesting path computation using a simple
   atomic operation, without creating any state in the YANG datastores,
   and it is the natural option/choice, especially with stateless PCE.</t>

<t>It is very useful to provide both the options of using an RPC as well
   as of setting up TE tunnel paths in "compute-only" mode. It is
   suggested to use the RPC as much as possible and to rely on
   "compute-only" TE tunnel paths, when really needed.</t>

<t>Using the RPC solution would imply that the underlying controller
   (e.g., a PNC) computes a path twice during the process to set up an
   LSP: at time T1, when its client (e.g., an MDSC) sends a path
   computation RPC request to it, and later, at time T2, when the same
   client (MDSC) creates a TE tunnel requesting the set-up of the LSP.
   The underlying assumption is that, if network conditions have not
   changed, the same path that has been computed at time T1 is also
   computed at time T2 by the underlying controller (e.g. PNC) and
   therefore the path that is set up at time T2 is exactly the same path
   that has been computed at time T1.</t>

<t>However, since the operation is stateless, there is no guarantee that
   the returned path would still be available when path set-up is
   requested: this does not cause major issues when the time between
   path computation and path set-up is short (especially if compared
   with the time that would be needed to update the information of a
   very detailed connectivity matrix).</t>

<t>In most of the cases, there is even no need to guarantee that the
   path that has been set up is the exactly same as the path that has
   been returned by path computation, especially if it has the same or
   even better metrics. Depending on the abstraction level applied by
   the server, the client may also not know the actual computed path.</t>

<t>The most important requirement is that the required global objectives
   (e.g., multi-domain path metrics and constraints) are met. For this
   reason a path verification phase is always necessary to verify that
   the actual path that has been set up meets the global objectives (for
   example in a multi-domain network, the resulting end-to-end path
   meets the required end-to-end metrics and constraints).</t>

<t>In most of the cases, even if the path being set up is not exactly
   the same as the path returned by path computation, its metrics and
   constraints are "good enough" and the path verification passes
   successfully. In the few corner cases where the path verification
   fails, it is possible repeat the whole process (path computation,
   path set-up and path verification).</t>

<t>In case it is required to set up at T2 exactly the same path computed
   at T1, the RPC solution should not be used and, instead, a "compute-
   only" TE tunnel path should be set up, allowing also notifications in
   case the computed path has been changed.</t>

<t>In this case, at time T1, the client (MDSC) creates a TE tunnel in a
   compute-only mode in the running datastore and later, at time T2,
   changes the configuration of that TE tunnel (not to be any more in a
   compute-only mode) to trigger the set-up of the LSP over the path
   which have been computed at time T1 and reported in the operational
   datastore.</t>

<t>It is worth noting that also using the "compute-only" TE tunnel path,
   although increasing the likelihood that the computed path is
   available at path set-up, does not guarantee that because
   notifications may not be reliable or delivered on time. Path
   verification is needed also in this case.</t>

<t>The solution based on "compute-only" TE tunnel path has also the
   following drawbacks:</t>

<t><list style="symbols">
  <t>Several messages required for any path computation</t>
  <t>Requires persistent storage in the underlying controller</t>
  <t>Need for garbage collection for stranded paths</t>
  <t>Process burden to detect changes on the computed paths in order to
provide notifications update</t>
</list></t>

<section anchor="temp-state"><name>Temporary reporting of the computed path state</name>

<t>This section describes an optional extension to the stateless
   behavior of the path computation RPC, where the underlying
   controller, after having received a path computation RPC request,
   maintains some "transient state" associated with the computed path,
   allowing the client to request the set-up of exactly that path, if
   still available.</t>

<t>This is similar to the "compute-only" TE tunnel path solution but, to
   avoid the drawbacks of the stateful approach, is leveraging the path
   computation RPC and the separation between configuration and
   operational datastore, as defined in the NMDA architecture <xref target="RFC8342"/>.</t>

<t>The underlying controller, after having computed a path, as requested
   by a path computation RPC, also creates a TE tunnel instance within
   the operational datastore, to store that computed path. This would be
   similar to a "compute-only" TE tunnel path, with the only difference
   that there is no associated TE tunnel instance within the running
   datastore.</t>

<t>Since the underlying controller stores in the operational datastore
   the computed path based on an abstract topology it exposes, it also
   remembers, internally, which is the actual native path (physical
   path), within its native topology (physical topology), associated
   with that compute-only TE tunnel instance.</t>

<t>Afterwards, the client (e.g., MDSC) can request the set-up of that
   specific path by creating a TE tunnel instance (not in compute-only
   mode) in the running datastore using the same tunnel-name of
   the existing TE tunnel in the operational datastore: this will
   trigger the underlying controller to set up that path, if still
   available.</t>

<t>There are still cases where the path being set up is not exactly the
   same as the path that has been computed:</t>

<t><list style="symbols">
  <t>When the tunnel is configured with path constraints which are not
compatible with the computed path;</t>
  <t>When the tunnel set-up is requested after the resources of the
computed path are no longer available;</t>
  <t>When the tunnel set-up is requested after the computed path is no
longer known (e.g. due to a server reboot) by the underlying
controller.  <vspace blankLines='1'/>
In all these cases, the underlying controller should compute and set
 up a new path.  <vspace blankLines='1'/>
Therefore the "path verification" phase, as described in <xref target="rpc-motivation"/>
 above, is always needed to check that the path that has been set up
 is still "good enough".  <vspace blankLines='1'/>
Since this new approach is not completely stateless, garbage
 collection is implemented using a timeout that, when it expires,
 triggers the removal of the computed path from the operational
 datastore. This operation is fully controlled by the underlying
 controller without the need for any action to be taken by the client
 that is not able to act on the operational datastore. The default
 value of this timeout is 10 minutes but a different value may be
 configured by the client.  <vspace blankLines='1'/>
In addition, it is possible for the client to tag each path
 computation request with a transaction-id allowing for a faster
 removal of all the paths associated with a transaction-id, without
 waiting for their timers to expire.  <vspace blankLines='1'/>
The underlying controller can remove from the operational datastore
 all the paths computed with a given transaction-id which have not
 been set up either when it receives a Path Delete RPC request for
 that transaction-id or, automatically, right after the set-up up of a
 path that has been previously computed with that transaction-id.  <vspace blankLines='1'/>
This possibility is useful when multiple paths are computed but, at
 most, only one is set up (e.g., in multi-domain path computation
 scenario scenarios). After the selected path has been set up (e.g, in
 one domain during multi-domain path set-up), all the other
 alternative computed paths can be automatically deleted by the
 underlying controller (since no longer needed). The client can also
 request, using the Path Delete RPC request, the underlying controller
 to remove all the computed paths, if none of them is going to be set
 up (e.g., in a transit domain not being selected by multi-domain path
 computation and so not being automatically deleted).  <vspace blankLines='1'/>
This approach is complimentary and not alternative to the timer which
 is always needed to avoid stranded computed paths being stored in the
 operational datastore when no path is set up and no explicit Path
 Delete RPC request is received.</t>
</list></t>

</section>
</section>
</section>
<section anchor="path-computation-and-optimization-for-multiple-paths"><name>Path computation and optimization for multiple paths</name>

<t>There are use cases, where it is advantageous to request path
   computation for a set of paths, through a network or through a
   network domain, using a single request <xref target="RFC5440"/>.</t>

<t>In this case, sending a single request for multiple path
   computations, instead of sending multiple requests for each path
   computation, would reduce the protocol overhead and it would consume
   less resources (e.g., threads in the client and server).</t>

<t>In the context of a typical multi-domain TE network, there could
   multiple choices for the ingress/egress points of a domain and the
   Multi-Domain Controller needs to request path computation between all
   the ingress/egress pairs to select the best pair. For example, in the
   example of <xref target="md-uc"/>, the Multi-Domain Controller needs to request
   the TE Network Controller 1 to compute the A-C and the A-D paths and
   to the TE Network Controller 2 to compute the E-H and the F-H paths.</t>

<t>It is also possible that the Multi-Domain Controller receives a
   request to set up a group of multiple end to end connections. The
   Multi-Domain Controller needs to request each TE domain Controller to
   compute multiple paths, one (or more) for each end to end connection.</t>

<t>There are also scenarios where it can be needed to request path
   computation for a set of paths in a synchronized fashion.</t>

<t>One example could be computing multiple diverse paths. Computing a
   set of diverse paths in an unsynchronized fashion, leads to the
   possibility of not being able to satisfy the diversity requirement.
   In this case, it is preferable to compute a sub-optimal primary path
   for which a diversely routed secondary path exists.</t>

<t>There are also scenarios where it is needed to request optimizing a
   set of paths using objective functions that apply to the whole set of
   paths, see <xref target="RFC5541"/>, e.g. to minimize the sum of the costs of all
   the computed paths in the set.</t>

</section>
<section anchor="yang-data-model-for-requesting-path-computation"><name>YANG data model for requesting Path Computation</name>

<t>This document define a YANG RPC to request path computation as an
   "augmentation" of tunnel-rpc, defined in <xref target="I-D.ietf-teas-yang-te"/>. This model
   provides the RPC input attributes that are needed to request path
   computation and the RPC output attributes that are needed to report
   the computed paths.</t>

<figure><artwork type="ascii-art" name="overview.txt"><![CDATA[
  augment /te:tunnels-path-compute/te:input/te:path-compute-info:
    +-- path-request* [request-id]
    |  ...

  augment /te:tunnels-path-compute/te:output/te:path-compute-result:
    +--ro response* [response-id]
       +--ro response-id                         uint32
       +--ro computed-paths-properties
       |  +--ro computed-path-properties* [k-index]
       |     ...
]]></artwork></figure>

<t>This model extensively re-uses the grouping defined in <xref target="I-D.ietf-teas-yang-te"/>
   and <xref target="RFC8776"/> to ensure maximal syntax and semantics commonality.</t>

<t>This YANG data model allows one RPC to include multiple path
   requests, each path request being identified by a request-id.
   Therefore, one RPC can return multiple responses, one for each path
   request, being identified by a response-id equal to the corresponding
   request-id. Each response reports one or more computed paths, as
   requested by the k-requested-paths attribute. By default, each
   response reports one computed path.</t>

<section anchor="synchronization-of-multiple-path-computation-requests"><name>Synchronization of multiple path computation requests</name>

<t>The YANG data model permits the synchronization of a set of multiple
   path requests (identified by specific request-id) all related to a
   "svec" container emulating the syntax of the Synchronization VECtor
   (SVEC) PCEP object, defined in <xref target="RFC5440"/>.</t>

<figure><artwork type="ascii-art" name="synchronization.txt"><![CDATA[
    +-- synchronization* []
       +-- svec
       |  +-- relaxable?      boolean
       |  +-- disjointness?   te-path-disjointness
       |  +-- request-id*     uint32
       +-- svec-constraints
       |  +-- path-metric-bound* [metric-type]
       |     +-- metric-type    identityref
       |     +-- upper-bound?   uint64
       +-- path-srlgs-lists
       |  +-- path-srlgs-list* [usage]
       |     +-- usage     identityref
       |     +-- values*   srlg
       +-- path-srlgs-names
       |  +-- path-srlgs-name* [usage]
       |     +-- usage    identityref
       |     +-- names*   string
       +-- exclude-objects
       |  +-- excludes* []
       |     +-- (type)?
       |        +--:(numbered-node-hop)
       |        |  +-- numbered-node-hop
       |        |     +-- node-id     te-node-id
       |        |     +-- hop-type?   te-hop-type
       |        +--:(numbered-link-hop)
       |        |  +-- numbered-link-hop
       |        |     +-- link-tp-id    te-tp-id
       |        |     +-- hop-type?     te-hop-type
       |        |     +-- direction?    te-link-direction
       |        +--:(unnumbered-link-hop)
       |        |  +-- unnumbered-link-hop
       |        |     +-- link-tp-id    te-tp-id
       |        |     +-- node-id       te-node-id
       |        |     +-- hop-type?     te-hop-type
       |        |     +-- direction?    te-link-direction
       |        +--:(as-number)
       |        |  +-- as-number-hop
       |        |     +-- as-number    inet:as-number
       |        |     +-- hop-type?    te-hop-type
       |        +--:(label)
       |           +-- label-hop
       |              +-- te-label
       |                 ...
       +-- optimizations
          +-- (algorithm)?
             +--:(metric) {te-types:path-optimization-metric}?
             |  +-- optimization-metric* [metric-type]
             |     +-- metric-type    identityref
             |     +-- weight?        uint8
             +--:(objective-function)
                      {te-types:path-optimization-objective-function}?
                +-- objective-function
                   +-- objective-function-type?   identityref
]]></artwork></figure>

<t>The model, in addition to the metric types, defined in <xref target="RFC8776"/>,
   which can be applied to each individual path request, supports also
   additional metric types, which apply to a set of synchronized
   requests, as referenced in <xref target="RFC5541"/>. These additional metric types
   are defined by the following YANG identities:</t>

<t><list style="symbols">
  <t>svec-metric-type: base YANG identity from which cumulative metric
types identities are derived.</t>
  <t>svec-metric-cumul-te: cumulative TE cost metric type, as defined
in <xref target="RFC5541"/>.</t>
  <t>svec-metric-cumul-igp: cumulative IGP cost metric type, as defined
in <xref target="RFC5541"/>.</t>
  <t>svec-metric-cumul-hop: cumulative Hop metric type, representing
the cumulative version of the Hop metric type defined in
<xref target="RFC8776"/>.</t>
  <t>svec-metric-aggregate-bandwidth-consumption: aggregate bandwidth
consumption metric type, as defined in <xref target="RFC5541"/>.</t>
  <t>svec-metric-load-of-the-most-loaded-link: load of the most loaded
link metric type, as defined in <xref target="RFC5541"/>.</t>
</list></t>

</section>
<section anchor="returned-metric-values"><name>Returned metric values</name>

<t>This YANG data model provides a way to return the values of the
   metrics computed by the path computation in the output of RPC,
   together with other important information (e.g. SRLG, affinities,
   explicit route), emulating the syntax of the "C" flag of the "METRIC"
   PCEP object <xref target="RFC5440"/>:</t>

<figure><artwork type="ascii-art" name="returned-metrics.txt"><![CDATA[
       |     +--ro path-properties
       |        +--ro path-metric* [metric-type]
       |        |  +--ro metric-type           identityref
       |        |  +--ro accumulative-value?   uint64
       |        +--ro path-affinities-values
       |        |  +--ro path-affinities-value* [usage]
       |        |     +--ro usage    identityref
       |        |     +--ro value?   admin-groups
       |        +--ro path-affinity-names
       |        |  +--ro path-affinity-name* [usage]
       |        |     +--ro usage            identityref
       |        |     +--ro affinity-name* [name]
       |        |        +--ro name    string
       |        +--ro path-srlgs-lists
       |        |  +--ro path-srlgs-list* [usage]
       |        |     +--ro usage     identityref
       |        |     +--ro values*   srlg
       |        +--ro path-srlgs-names
       |        |  +--ro path-srlgs-name* [usage]
       |        |     +--ro usage    identityref
       |        |     +--ro names*   string
       |        +--ro path-route-objects
       |        |  ...
       |        +--ro te-bandwidth
       |        |  ...
       |        +--ro disjointness-type?
       |                te-types:te-path-disjointness
]]></artwork></figure>

<t>It also allows the client to request which information (metrics, SRLG
   and/or affinities) should be returned:</t>

<figure><artwork type="ascii-art" name="requested-metrics.txt"><![CDATA[
    |  +-- request-id                            uint32
    |  ...
    |  +-- requested-metrics* [metric-type]
    |  |  +-- metric-type    identityref
    |  +-- return-srlgs?                         boolean
    |  +-- return-affinities?                    boolean
    |  ...
]]></artwork></figure>

<t>This feature is essential for path computation in a multi-domain TE
   network as described in <xref target="md-uc"/>. In this case, the metrics
   returned by a path computation requested to a given underlying
   controller must be used by the client to compute the best end-to-end
   path. If they are missing, the client cannot compare different paths
   calculated by the underlying controllers and choose the best one for
   the optimal end-to-end (e2e) path.</t>

</section>
<section anchor="multiple-paths-requests-for-the-same-te-tunnel"><name>Multiple Paths Requests for the same TE tunnel</name>

<t>The YANG data model allows including multiple requests for different
   paths intended to be used within the same tunnel or within different
   tunnels.</t>

<t>When multiple requested paths are intended to be used within the same
   tunnel (e.g., requesting path computation for the primary and
   secondary paths of a protected tunnel), the set of attributes that
   are intended to be configured on per-tunnel basis rather than on per-
   path basis are common to all these path requests. These attributes
   includes both attributes which can be configured only a per-tunnel
   basis (e.g., tunnel-name, source/destination TTP, encoding and
   switching-type) as well attributes which can be configured both on a
   per-tunnel and on a per-path basis (e.g., the te-bandwidth or the
   associations).</t>

<t>Therefore, a tunnel-attributes list is defined, within the path
   computation request RPC:</t>

<figure><artwork type="ascii-art" name="tunnel-attributes-list.txt"><![CDATA[
    +-- tunnel-attributes* [tunnel-name]
    |  +-- tunnel-name               string
    |  +-- encoding?                 identityref
    |  +-- switching-type?           identityref
    |  +-- source?                   te-types:te-node-id
    |  +-- destination?              te-types:te-node-id
    |  +-- src-tunnel-tp-id?         binary
    |  +-- dst-tunnel-tp-id?         binary
    |  +-- bidirectional?            boolean
    |  +-- association-objects
    |  |  ...
    |  +-- protection-type?          identityref
    |  +-- restoration-type?         identityref
    |  +-- restoration-scheme?       identityref
    |  +-- te-topology-identifier
    |  |  +-- provider-id?   te-global-id
    |  |  +-- client-id?     te-global-id
    |  |  +-- topology-id?   te-topology-id
    |  +-- te-bandwidth
    |  |  ...
    |  +-- link-protection?          identityref
    |  +-- setup-priority?           uint8
    |  +-- hold-priority?            uint8
    |  +-- signaling-type?           identityref
    |  +-- hierarchy
    |     +-- dependency-tunnels
    |     |  ...
    |     +-- hierarchical-link
    |        ...
]]></artwork></figure>

<t>The path requests that are intended to be used within the same tunnel
   should reference the same entry in the tunnel-attributes list. This
   allows:</t>

<t><list style="symbols">
  <t>avoiding repeating the same set of per-tunnel parameters on
multiple requested paths;</t>
  <t>the server to understand what attributes are intended to be
configured on a per-tunnel basis (e.g., the te-bandwidth
configured in the tunnel-attributes) and what attributes are
intended to be configured on a per-path basis(e.g., the te-
bandwidth configured in the path-request). This could be useful
especially when the server also creates a TE tunnel instance
within the operational datastore to report the computed paths, as
described in <xref target="temp-state"/>: in this case, the tunnel-name is also
used as the suggested name for that TE tunnel instance.  <vspace blankLines='1'/>
The YANG data model allows also including requests for paths intended
 to modify existing tunnels (e.g., adding a protection path for an
 existing un-protected tunnel). In this case, the per-tunnel
 attributes are already provided in an existing TE tunnel instance and
 do not need to be re-configured in the path computation request RPC.
 Therefore, these requests should reference an existing TE tunnel
 instance.  <vspace blankLines='1'/>
It is also possible to request computing paths without indicating in
 which tunnel they are intended to be used (e.g., in case of an
 unprotected tunnel). In this case, the per-tunnel attributes could be
 provided together with the per-path attributes in the path request,
 without using the tunnel-attributes list.  <vspace blankLines='1'/>
The choices below are defined to distinguish the cases above:</t>
  <t>whether the per-tunnel attributes are configured by reference
(providing a leafref), to:  <list style="symbols">
      <t>either a TE tunnel instance, if it exists;</t>
      <t>or to an entry of the tunnel-attributes list, if the TE tunnel
instance does not exist;</t>
    </list></t>
  <t>or by value, providing the set of tunnel attributes within the
path request:</t>
</list></t>

<figure><artwork type="ascii-art" name="tunnel-attributes.txt"><![CDATA[
    |  +-- (tunnel-attributes)?
    |  |  +--:(reference)
    |  |  |  +-- tunnel-reference
    |  |  |     +-- (tunnel-exist)
    |  |  |     |  +--:(tunnel-ref)
    |  |  |     |  |  +-- tunnel-ref                te:tunnel-ref
    |  |  |     |  +--:(tunnel-attributes-ref)
    |  |  |     |     +-- tunnel-attributes-ref     leafref
    |  |  |     +-- path-name?                      string
    |  |  |     +-- (path-role)
    |  |  |        ...
    |  |  +--:(value)
    |  |     +-- tunnel-name?                    string
    |  |     +-- path-name?                      string
    |  |     +-- (path-role)?
    |  |     |  ...
    |  |     ...
    |  |     +-- encoding?                       identityref
    |  |     +-- switching-type?                 identityref
    |  |     ...
]]></artwork></figure>

<section anchor="tunnel-attributes-specified-by-value"><name>Tunnel attributes specified by value</name>

<t>The (value) case provides the set of attributes that are configured
   only on per-tunnel basis (e.g., tunnel-name, source/destination TTP,
   encoding and switching-type).</t>

<t>In this case, it is assumed that the requested path will be the only
   path within a tunnel.</t>

<t>If the only path within a tunnel is the transit segment of a multi-domain end-to-end path, it can be of any type (primary, secondary, reverse-primary
   or reverse-secondary). The (path-role) choice is used to specify its role in the path request:</t>

<figure><artwork type="ascii-art" name="tunnel-by-value.txt"><![CDATA[
    |  |     +-- (path-role)?
    |  |     |  +--:(primary-path)
    |  |     |  +--:(secondary-path)
    |  |     |  |  +-- secondary-path!
    |  |     |  |     +-- primary-path-name?   string
    |  |     |  +--:(primary-reverse-path)
    |  |     |  |  +-- primary-reverse-path!
    |  |     |  |     +-- primary-path-name?   string
    |  |     |  +--:(secondary-reverse-path)
    |  |     |     +-- secondary-reverse-path!
    |  |     |        +-- primary-path-name?           string
    |  |     |        +-- primary-reverse-path-name?   string
]]></artwork></figure>

<t>In all the other cases, the only path within a tunnel is a primary path.</t>

<t>The secondary-path, the primary-reverse-path and the secondary-
   reverse-path are presence container used to indicate the role of the
   path: by default, the path is assumed to be a primary path.</t>

<t>They optionally can contain the name of the primary-path under which
   the requested path could be associated within the YANG tree structure
   defined in <xref target="I-D.ietf-teas-yang-te"/>, which could be useful when the server also
   creates a TE tunnel instance within the operational datastore to
   report the computed paths, as described in <xref target="temp-state"/>: in this
   case, the tunnel-name and the path names are also used as the
   suggested name for that TE tunnel and path instances.</t>

</section>
<section anchor="tunnel-attributes-specified-by-reference"><name>Tunnel attributes specified by reference</name>

<t>The (reference) case provides the information needed to associate
   multiple path requests that are intended to be used within the same
   tunnel.</t>

<t>In order to indicate the role of the path being requested within the
   intended tunnel (e.g., primary or secondary path), the (path-role)
   choice is defined:</t>

<figure><artwork type="ascii-art" name="tunnel-by-reference.txt"><![CDATA[
    |  |  |     +-- (path-role)
    |  |  |        +--:(primary-path)
    |  |  |        |  +-- primary-path!
    |  |  |        |     ...
    |  |  |        +--:(secondary-path)
    |  |  |        |  +-- secondary-path
    |  |  |        |     ...
    |  |  |        +--:(primary-reverse-path)
    |  |  |        |  +-- primary-reverse-path
    |  |  |        |     ...
    |  |  |        +--:(secondary-reverse-path)
    |  |  |           +-- secondary-reverse-path
    |  |  |              ...
]]></artwork></figure>

<t>The primary-path is a presence container used to indicate that the
   requested path is intended to be used as a primary path. It can also
   contain some attributes which are configured only on primary paths
   (e.g., the k-requested-paths).</t>

<t>The secondary-path container indicates that the requested path is
   intended to be used as a secondary path and it contains at least
   references to one or more primary paths which can use it as a
   candidate secondary path:</t>

<figure><artwork type="ascii-art" name="secondary-path.txt"><![CDATA[
    |  |  |        |  +-- secondary-path
    |  |  |        |     ...
    |  |  |        |     +-- primary-path-ref* []
    |  |  |        |        +-- (primary-path-exist)
    |  |  |        |           +--:(path-ref)
    |  |  |        |           |  +-- primary-path-ref    leafref
    |  |  |        |           +--:(path-request-ref)
    |  |  |        |              +-- path-request-ref    leafref
]]></artwork></figure>

<t>A requested secondary path can reference any requested primary paths,
   and, in case they are intended to be used within an existing TE
   tunnel, it could also reference any existing primary-paths.</t>

<t>The secondary-path container can also contain some attributes which
   are configured only on secondary paths (e.g., the protection-type).</t>

<t>The primary-reverse-path container indicates that the requested path
   is intended to be used as a primary reverse path and it contains only
   the reference to the primary path which is intended to use it as a
   reverse path:</t>

<figure><artwork type="ascii-art" name="primary-reverse-path.txt"><![CDATA[
    |  |  |        |  +-- primary-reverse-path
    |  |  |        |     +-- (primary-path-exist)
    |  |  |        |        +--:(path-ref)
    |  |  |        |        |  +-- primary-path-ref    leafref
    |  |  |        |        +--:(path-request-ref)
    |  |  |        |           +-- path-request-ref    leafref
]]></artwork></figure>

<t>A requested primary reverse path can reference either a requested
   primary path, or, in case it is intended to be used within an
   existing TE tunnel, an existing primary-path.</t>

<t>The secondary-reverse-path container indicates that the requested
   path is intended to be used as a secondary reverse path and it
   contains at least references to one or more primary paths, whose
   primary reverse path can use it as a candidate secondary reverse
   path:</t>

<figure><artwork type="ascii-art" name="secondary-reverse-path.txt"><![CDATA[
    |  |  |           +-- secondary-reverse-path
    |  |  |              ...
    |  |  |              +-- primary-reverse-path* []
    |  |  |                 +-- (primary-reverse-path-exist)
    |  |  |                    +--:(path-ref)
    |  |  |                    |  +-- primary-path-ref    leafref
    |  |  |                    +--:(path-request-ref)
    |  |  |                       +-- path-request-ref    leafref
]]></artwork></figure>

<t>A requested secondary reverse path can reference any requested
   primary paths, and, in case they are intended to be used within an
   existing TE tunnel, it could reference also existing primary-paths.</t>

<t>The secondary-reverse-path container can also contain some attributes
   which are configured only on secondary reverse paths (e.g., the
   protection-type).</t>

<t>In case the requested path is a transit segment of a multi-domain
   end-to-end path, the primary-path may not be needed to be
   setup/computed. However, the request for path computation of a
   secondary-path or a primary-reverse or of a secondary-reverse-path
   requires that the primary-path exists or it is requested within the
   same RPC request. In the latter case, the path request for the
   primary-path should have an empty 'route-object-include-exclude' list,
   as described in section 5.1.1 of <xref target="I-D.ietf-teas-yang-te"/>, to indicate to the server that
   path computation is not requested and no path properties will
   therefore be returned in the RPC response.</t>

</section>
</section>
<section anchor="multi-layer-path-computation"><name>Multi-Layer Path Computation</name>

<t>The models supports requesting multi-layer path computation following
   the same approach based on dependency tunnels, as defined in <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>The tunnel-attributes of a given client-layer path request can
   reference server-layer TE tunnels which can already exist in the YANG
   datastore or be specified in the tunnel-attributes list, within the
   same RPC request:</t>

<figure><artwork type="ascii-art" name="dependency-tunnels.txt"><![CDATA[
    |     +-- dependency-tunnels
    |     |  +-- dependency-tunnel* [name]
    |     |  |  +-- name              -> /te:te/tunnels/tunnel/name
    |     |  |  +-- encoding?         identityref
    |     |  |  +-- switching-type?   identityref
    |     |  +-- dependency-tunnel-attributes* [name]
    |     |     +-- name              leafref
    |     |     +-- encoding?         identityref
    |     |     +-- switching-type?   identityref
]]></artwork></figure>

<t>In a similar way as in <xref target="I-D.ietf-teas-yang-te"/>, the server-layer tunnel
   attributes should provide the information of what would be the
   dynamic link in the client layer topology supported by that tunnel,
   if instantiated:</t>

<figure><artwork type="ascii-art" name="hierarchical-link.txt"><![CDATA[
    |     +-- hierarchical-link
    |        +-- enable?                   boolean
    |        +-- local-te-node-id?         te-types:te-node-id
    |        +-- local-te-link-tp-id?      te-types:te-tp-id
    |        +-- remote-te-node-id?        te-types:te-node-id
    |        +-- te-topology-identifier
    |           +-- provider-id?   te-global-id
    |           +-- client-id?     te-global-id
    |           +-- topology-id?   te-topology-id
]]></artwork></figure>

<t>It is worth noting that since path computation RPC is stateless, the
   dynamic hierarchical links configured for the server-layer tunnel
   attributes cannot be used for path computation of any client-layer
   path unless explicitly referenced in the dependency-tunnel-attributes
   list within the same RPC request.</t>

</section>
</section>
<section anchor="yang-data-model-for-te-path-computation"><name>YANG data model for TE path computation</name>

<section anchor="pc-tree"><name>Tree diagram</name>

<t><xref target="fig-pc-tree"/> below shows the tree diagram of the YANG data model defined
   in module ietf-te-path-computation.yang, defined in <xref target="pc-yang"/>.</t>

<figure title="TE path computation tree diagram" anchor="fig-pc-tree"><artwork type="ascii-art" name="ietf-te-path-computation.tree"><![CDATA[
module: ietf-te-path-computation

  augment /te:tunnels-path-compute/te:input/te:path-compute-info:
    +-- path-request* [request-id]
    |  +-- request-id                            uint32
    |  +-- (tunnel-attributes)?
    |  |  +--:(reference)
    |  |  |  +-- tunnel-reference
    |  |  |     +-- (tunnel-exist)
    |  |  |     |  +--:(tunnel-ref)
    |  |  |     |  |  +-- tunnel-ref                te:tunnel-ref
    |  |  |     |  +--:(tunnel-attributes-ref)
    |  |  |     |     +-- tunnel-attributes-ref     leafref
    |  |  |     +-- path-name?                      string
    |  |  |     +-- (path-role)
    |  |  |        +--:(primary-path)
    |  |  |        |  +-- primary-path!
    |  |  |        |     +-- preference?          uint8
    |  |  |        |     +-- co-routed?           empty
    |  |  |        |     +-- k-requested-paths?   uint8
    |  |  |        +--:(secondary-path)
    |  |  |        |  +-- secondary-path
    |  |  |        |     +-- preference?           uint8
    |  |  |        |     +-- co-routed?            empty
    |  |  |        |     +-- protection-type?      identityref
    |  |  |        |     +-- restoration-type?     identityref
    |  |  |        |     +-- restoration-scheme?   identityref
    |  |  |        |     +-- primary-path-ref* []
    |  |  |        |        +-- (primary-path-exist)
    |  |  |        |           +--:(path-ref)
    |  |  |        |           |  +-- primary-path-ref    leafref
    |  |  |        |           +--:(path-request-ref)
    |  |  |        |              +-- path-request-ref    leafref
    |  |  |        +--:(primary-reverse-path)
    |  |  |        |  +-- primary-reverse-path
    |  |  |        |     +-- (primary-path-exist)
    |  |  |        |        +--:(path-ref)
    |  |  |        |        |  +-- primary-path-ref    leafref
    |  |  |        |        +--:(path-request-ref)
    |  |  |        |           +-- path-request-ref    leafref
    |  |  |        +--:(secondary-reverse-path)
    |  |  |           +-- secondary-reverse-path
    |  |  |              +-- protection-type?        identityref
    |  |  |              +-- restoration-type?       identityref
    |  |  |              +-- restoration-scheme?     identityref
    |  |  |              +-- primary-reverse-path* []
    |  |  |                 +-- (primary-reverse-path-exist)
    |  |  |                    +--:(path-ref)
    |  |  |                    |  +-- primary-path-ref    leafref
    |  |  |                    +--:(path-request-ref)
    |  |  |                       +-- path-request-ref    leafref
    |  |  +--:(value)
    |  |     +-- tunnel-name?                    string
    |  |     +-- path-name?                      string
    |  |     +-- (path-role)?
    |  |     |  +--:(primary-path)
    |  |     |  +--:(secondary-path)
    |  |     |  |  +-- secondary-path!
    |  |     |  |     +-- primary-path-name?   string
    |  |     |  +--:(primary-reverse-path)
    |  |     |  |  +-- primary-reverse-path!
    |  |     |  |     +-- primary-path-name?   string
    |  |     |  +--:(secondary-reverse-path)
    |  |     |     +-- secondary-reverse-path!
    |  |     |        +-- primary-path-name?           string
    |  |     |        +-- primary-reverse-path-name?   string
    |  |     +-- k-requested-paths?              uint8
    |  |     +-- encoding?                       identityref
    |  |     +-- switching-type?                 identityref
    |  |     +-- source?                         te-types:te-node-id
    |  |     +-- destination?                    te-types:te-node-id
    |  |     +-- src-tunnel-tp-id?               binary
    |  |     +-- dst-tunnel-tp-id?               binary
    |  |     +-- bidirectional?                  boolean
    |  |     +-- te-topology-identifier
    |  |        +-- provider-id?   te-global-id
    |  |        +-- client-id?     te-global-id
    |  |        +-- topology-id?   te-topology-id
    |  +-- association-objects
    |  |  +-- association-object* [association-key]
    |  |  |  +-- association-key    string
    |  |  |  +-- type?              identityref
    |  |  |  +-- id?                uint16
    |  |  |  +-- source
    |  |  |     +-- id?     te-gen-node-id
    |  |  |     +-- type?   enumeration
    |  |  +-- association-object-extended* [association-key]
    |  |     +-- association-key    string
    |  |     +-- type?              identityref
    |  |     +-- id?                uint16
    |  |     +-- source
    |  |     |  +-- id?     te-gen-node-id
    |  |     |  +-- type?   enumeration
    |  |     +-- global-source?     uint32
    |  |     +-- extended-id?       yang:hex-string
    |  +-- optimizations
    |  |  +-- (algorithm)?
    |  |     +--:(metric) {path-optimization-metric}?
    |  |     |  +-- optimization-metric* [metric-type]
    |  |     |  |  +-- metric-type                       identityref
    |  |     |  |  +-- weight?                           uint8
    |  |     |  |  +-- explicit-route-exclude-objects
    |  |     |  |  |  +-- route-object-exclude-object* [index]
    |  |     |  |  |     +-- index                        uint32
    |  |     |  |  |     +-- (type)?
    |  |     |  |  |        +--:(numbered-node-hop)
    |  |     |  |  |        |  +-- numbered-node-hop
    |  |     |  |  |        |     +-- node-id     te-node-id
    |  |     |  |  |        |     +-- hop-type?   te-hop-type
    |  |     |  |  |        +--:(numbered-link-hop)
    |  |     |  |  |        |  +-- numbered-link-hop
    |  |     |  |  |        |     +-- link-tp-id    te-tp-id
    |  |     |  |  |        |     +-- hop-type?     te-hop-type
    |  |     |  |  |        |     +-- direction?    te-link-direction
    |  |     |  |  |        +--:(unnumbered-link-hop)
    |  |     |  |  |        |  +-- unnumbered-link-hop
    |  |     |  |  |        |     +-- link-tp-id    te-tp-id
    |  |     |  |  |        |     +-- node-id       te-node-id
    |  |     |  |  |        |     +-- hop-type?     te-hop-type
    |  |     |  |  |        |     +-- direction?    te-link-direction
    |  |     |  |  |        +--:(as-number)
    |  |     |  |  |        |  +-- as-number-hop
    |  |     |  |  |        |     +-- as-number    inet:as-number
    |  |     |  |  |        |     +-- hop-type?    te-hop-type
    |  |     |  |  |        +--:(label)
    |  |     |  |  |        |  +-- label-hop
    |  |     |  |  |        |     +-- te-label
    |  |     |  |  |        |        +-- (technology)?
    |  |     |  |  |        |        |  +--:(generic)
    |  |     |  |  |        |        |     +-- generic?
    |  |     |  |  |        |        |             rt-types:generalized-label
    |  |     |  |  |        |        +-- direction?
    |  |     |  |  |        |                te-label-direction
    |  |     |  |  |        +--:(srlg)
    |  |     |  |  |           +-- srlg
    |  |     |  |  |              +-- srlg?   uint32
    |  |     |  |  +-- explicit-route-include-objects
    |  |     |  |     +-- route-object-include-object* [index]
    |  |     |  |        +-- index                        uint32
    |  |     |  |        +-- (type)?
    |  |     |  |           +--:(numbered-node-hop)
    |  |     |  |           |  +-- numbered-node-hop
    |  |     |  |           |     +-- node-id     te-node-id
    |  |     |  |           |     +-- hop-type?   te-hop-type
    |  |     |  |           +--:(numbered-link-hop)
    |  |     |  |           |  +-- numbered-link-hop
    |  |     |  |           |     +-- link-tp-id    te-tp-id
    |  |     |  |           |     +-- hop-type?     te-hop-type
    |  |     |  |           |     +-- direction?    te-link-direction
    |  |     |  |           +--:(unnumbered-link-hop)
    |  |     |  |           |  +-- unnumbered-link-hop
    |  |     |  |           |     +-- link-tp-id    te-tp-id
    |  |     |  |           |     +-- node-id       te-node-id
    |  |     |  |           |     +-- hop-type?     te-hop-type
    |  |     |  |           |     +-- direction?    te-link-direction
    |  |     |  |           +--:(as-number)
    |  |     |  |           |  +-- as-number-hop
    |  |     |  |           |     +-- as-number    inet:as-number
    |  |     |  |           |     +-- hop-type?    te-hop-type
    |  |     |  |           +--:(label)
    |  |     |  |              +-- label-hop
    |  |     |  |                 +-- te-label
    |  |     |  |                    +-- (technology)?
    |  |     |  |                    |  +--:(generic)
    |  |     |  |                    |     +-- generic?
    |  |     |  |                    |             rt-types:generalized-label
    |  |     |  |                    +-- direction?
    |  |     |  |                            te-label-direction
    |  |     |  +-- tiebreakers
    |  |     |     +-- tiebreaker* [tiebreaker-type]
    |  |     |        +-- tiebreaker-type    identityref
    |  |     +--:(objective-function)
    |  |              {path-optimization-objective-function}?
    |  |        +-- objective-function
    |  |           +-- objective-function-type?   identityref
    |  +-- named-path-constraint?                leafref
    |  |       {te-types:named-path-constraints}?
    |  +-- te-bandwidth
    |  |  +-- (technology)?
    |  |     +--:(generic)
    |  |        +-- generic?   te-bandwidth
    |  +-- link-protection?                      identityref
    |  +-- setup-priority?                       uint8
    |  +-- hold-priority?                        uint8
    |  +-- signaling-type?                       identityref
    |  +-- path-metric-bounds
    |  |  +-- path-metric-bound* [metric-type]
    |  |     +-- metric-type    identityref
    |  |     +-- upper-bound?   uint64
    |  +-- path-affinities-values
    |  |  +-- path-affinities-value* [usage]
    |  |     +-- usage    identityref
    |  |     +-- value?   admin-groups
    |  +-- path-affinity-names
    |  |  +-- path-affinity-name* [usage]
    |  |     +-- usage            identityref
    |  |     +-- affinity-name* [name]
    |  |        +-- name    string
    |  +-- path-srlgs-lists
    |  |  +-- path-srlgs-list* [usage]
    |  |     +-- usage     identityref
    |  |     +-- values*   srlg
    |  +-- path-srlgs-names
    |  |  +-- path-srlgs-name* [usage]
    |  |     +-- usage    identityref
    |  |     +-- names*   string
    |  +-- disjointness?                         te-path-disjointness
    |  +-- explicit-route-objects-always
    |  |  +-- route-object-exclude-always* [index]
    |  |  |  +-- index                        uint32
    |  |  |  +-- (type)?
    |  |  |     +--:(numbered-node-hop)
    |  |  |     |  +-- numbered-node-hop
    |  |  |     |     +-- node-id     te-node-id
    |  |  |     |     +-- hop-type?   te-hop-type
    |  |  |     +--:(numbered-link-hop)
    |  |  |     |  +-- numbered-link-hop
    |  |  |     |     +-- link-tp-id    te-tp-id
    |  |  |     |     +-- hop-type?     te-hop-type
    |  |  |     |     +-- direction?    te-link-direction
    |  |  |     +--:(unnumbered-link-hop)
    |  |  |     |  +-- unnumbered-link-hop
    |  |  |     |     +-- link-tp-id    te-tp-id
    |  |  |     |     +-- node-id       te-node-id
    |  |  |     |     +-- hop-type?     te-hop-type
    |  |  |     |     +-- direction?    te-link-direction
    |  |  |     +--:(as-number)
    |  |  |     |  +-- as-number-hop
    |  |  |     |     +-- as-number    inet:as-number
    |  |  |     |     +-- hop-type?    te-hop-type
    |  |  |     +--:(label)
    |  |  |        +-- label-hop
    |  |  |           +-- te-label
    |  |  |              +-- (technology)?
    |  |  |              |  +--:(generic)
    |  |  |              |     +-- generic?
    |  |  |              |             rt-types:generalized-label
    |  |  |              +-- direction?       te-label-direction
    |  |  +-- route-object-include-exclude* [index]
    |  |     +-- explicit-route-usage?        identityref
    |  |     +-- index                        uint32
    |  |     +-- (type)?
    |  |        +--:(numbered-node-hop)
    |  |        |  +-- numbered-node-hop
    |  |        |     +-- node-id     te-node-id
    |  |        |     +-- hop-type?   te-hop-type
    |  |        +--:(numbered-link-hop)
    |  |        |  +-- numbered-link-hop
    |  |        |     +-- link-tp-id    te-tp-id
    |  |        |     +-- hop-type?     te-hop-type
    |  |        |     +-- direction?    te-link-direction
    |  |        +--:(unnumbered-link-hop)
    |  |        |  +-- unnumbered-link-hop
    |  |        |     +-- link-tp-id    te-tp-id
    |  |        |     +-- node-id       te-node-id
    |  |        |     +-- hop-type?     te-hop-type
    |  |        |     +-- direction?    te-link-direction
    |  |        +--:(as-number)
    |  |        |  +-- as-number-hop
    |  |        |     +-- as-number    inet:as-number
    |  |        |     +-- hop-type?    te-hop-type
    |  |        +--:(label)
    |  |        |  +-- label-hop
    |  |        |     +-- te-label
    |  |        |        +-- (technology)?
    |  |        |        |  +--:(generic)
    |  |        |        |     +-- generic?
    |  |        |        |             rt-types:generalized-label
    |  |        |        +-- direction?       te-label-direction
    |  |        +--:(srlg)
    |  |           +-- srlg
    |  |              +-- srlg?   uint32
    |  +-- path-in-segment!
    |  |  +-- label-restrictions
    |  |     +-- label-restriction* [index]
    |  |        +-- restriction?    enumeration
    |  |        +-- index           uint32
    |  |        +-- label-start
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-end
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-step
    |  |        |  +-- (technology)?
    |  |        |     +--:(generic)
    |  |        |        +-- generic?   int32
    |  |        +-- range-bitmap?   yang:hex-string
    |  +-- path-out-segment!
    |  |  +-- label-restrictions
    |  |     +-- label-restriction* [index]
    |  |        +-- restriction?    enumeration
    |  |        +-- index           uint32
    |  |        +-- label-start
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-end
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-step
    |  |        |  +-- (technology)?
    |  |        |     +--:(generic)
    |  |        |        +-- generic?   int32
    |  |        +-- range-bitmap?   yang:hex-string
    |  +-- requested-metrics* [metric-type]
    |  |  +-- metric-type    identityref
    |  +-- return-srlgs?                         boolean
    |  +-- return-affinities?                    boolean
    |  +-- requested-state!
    |     +-- timer?            uint16
    |     +-- transaction-id?   string
    +-- tunnel-attributes* [tunnel-name]
    |  +-- tunnel-name               string
    |  +-- encoding?                 identityref
    |  +-- switching-type?           identityref
    |  +-- source?                   te-types:te-node-id
    |  +-- destination?              te-types:te-node-id
    |  +-- src-tunnel-tp-id?         binary
    |  +-- dst-tunnel-tp-id?         binary
    |  +-- bidirectional?            boolean
    |  +-- association-objects
    |  |  +-- association-object* [association-key]
    |  |  |  +-- association-key    string
    |  |  |  +-- type?              identityref
    |  |  |  +-- id?                uint16
    |  |  |  +-- source
    |  |  |     +-- id?     te-gen-node-id
    |  |  |     +-- type?   enumeration
    |  |  +-- association-object-extended* [association-key]
    |  |     +-- association-key    string
    |  |     +-- type?              identityref
    |  |     +-- id?                uint16
    |  |     +-- source
    |  |     |  +-- id?     te-gen-node-id
    |  |     |  +-- type?   enumeration
    |  |     +-- global-source?     uint32
    |  |     +-- extended-id?       yang:hex-string
    |  +-- protection-type?          identityref
    |  +-- restoration-type?         identityref
    |  +-- restoration-scheme?       identityref
    |  +-- te-topology-identifier
    |  |  +-- provider-id?   te-global-id
    |  |  +-- client-id?     te-global-id
    |  |  +-- topology-id?   te-topology-id
    |  +-- te-bandwidth
    |  |  +-- (technology)?
    |  |     +--:(generic)
    |  |        +-- generic?   te-bandwidth
    |  +-- link-protection?          identityref
    |  +-- setup-priority?           uint8
    |  +-- hold-priority?            uint8
    |  +-- signaling-type?           identityref
    |  +-- hierarchy
    |     +-- dependency-tunnels
    |     |  +-- dependency-tunnel* [name]
    |     |  |  +-- name              -> /te:te/tunnels/tunnel/name
    |     |  |  +-- encoding?         identityref
    |     |  |  +-- switching-type?   identityref
    |     |  +-- dependency-tunnel-attributes* [name]
    |     |     +-- name              leafref
    |     |     +-- encoding?         identityref
    |     |     +-- switching-type?   identityref
    |     +-- hierarchical-link
    |        +-- enable?                   boolean
    |        +-- local-te-node-id?         te-types:te-node-id
    |        +-- local-te-link-tp-id?      te-types:te-tp-id
    |        +-- remote-te-node-id?        te-types:te-node-id
    |        +-- te-topology-identifier
    |           +-- provider-id?   te-global-id
    |           +-- client-id?     te-global-id
    |           +-- topology-id?   te-topology-id
    +-- synchronization* []
       +-- svec
       |  +-- relaxable?      boolean
       |  +-- disjointness?   te-path-disjointness
       |  +-- request-id*     uint32
       +-- svec-constraints
       |  +-- path-metric-bound* [metric-type]
       |     +-- metric-type    identityref
       |     +-- upper-bound?   uint64
       +-- path-srlgs-lists
       |  +-- path-srlgs-list* [usage]
       |     +-- usage     identityref
       |     +-- values*   srlg
       +-- path-srlgs-names
       |  +-- path-srlgs-name* [usage]
       |     +-- usage    identityref
       |     +-- names*   string
       +-- exclude-objects
       |  +-- excludes* []
       |     +-- (type)?
       |        +--:(numbered-node-hop)
       |        |  +-- numbered-node-hop
       |        |     +-- node-id     te-node-id
       |        |     +-- hop-type?   te-hop-type
       |        +--:(numbered-link-hop)
       |        |  +-- numbered-link-hop
       |        |     +-- link-tp-id    te-tp-id
       |        |     +-- hop-type?     te-hop-type
       |        |     +-- direction?    te-link-direction
       |        +--:(unnumbered-link-hop)
       |        |  +-- unnumbered-link-hop
       |        |     +-- link-tp-id    te-tp-id
       |        |     +-- node-id       te-node-id
       |        |     +-- hop-type?     te-hop-type
       |        |     +-- direction?    te-link-direction
       |        +--:(as-number)
       |        |  +-- as-number-hop
       |        |     +-- as-number    inet:as-number
       |        |     +-- hop-type?    te-hop-type
       |        +--:(label)
       |           +-- label-hop
       |              +-- te-label
       |                 +-- (technology)?
       |                 |  +--:(generic)
       |                 |     +-- generic?
       |                 |             rt-types:generalized-label
       |                 +-- direction?       te-label-direction
       +-- optimizations
          +-- (algorithm)?
             +--:(metric) {te-types:path-optimization-metric}?
             |  +-- optimization-metric* [metric-type]
             |     +-- metric-type    identityref
             |     +-- weight?        uint8
             +--:(objective-function)
                      {te-types:path-optimization-objective-function}?
                +-- objective-function
                   +-- objective-function-type?   identityref
  augment /te:tunnels-path-compute/te:output/te:path-compute-result:
    +--ro response* [response-id]
       +--ro response-id                         uint32
       +--ro computed-paths-properties
       |  +--ro computed-path-properties* [k-index]
       |     +--ro k-index            uint8
       |     +--ro path-properties
       |        +--ro path-metric* [metric-type]
       |        |  +--ro metric-type           identityref
       |        |  +--ro accumulative-value?   uint64
       |        +--ro path-affinities-values
       |        |  +--ro path-affinities-value* [usage]
       |        |     +--ro usage    identityref
       |        |     +--ro value?   admin-groups
       |        +--ro path-affinity-names
       |        |  +--ro path-affinity-name* [usage]
       |        |     +--ro usage            identityref
       |        |     +--ro affinity-name* [name]
       |        |        +--ro name    string
       |        +--ro path-srlgs-lists
       |        |  +--ro path-srlgs-list* [usage]
       |        |     +--ro usage     identityref
       |        |     +--ro values*   srlg
       |        +--ro path-srlgs-names
       |        |  +--ro path-srlgs-name* [usage]
       |        |     +--ro usage    identityref
       |        |     +--ro names*   string
       |        +--ro path-route-objects
       |        |  +--ro path-route-object* [index]
       |        |     +--ro index                        uint32
       |        |     +--ro (type)?
       |        |        +--:(numbered-node-hop)
       |        |        |  +--ro numbered-node-hop
       |        |        |     +--ro node-id     te-node-id
       |        |        |     +--ro hop-type?   te-hop-type
       |        |        +--:(numbered-link-hop)
       |        |        |  +--ro numbered-link-hop
       |        |        |     +--ro link-tp-id    te-tp-id
       |        |        |     +--ro hop-type?     te-hop-type
       |        |        |     +--ro direction?    te-link-direction
       |        |        +--:(unnumbered-link-hop)
       |        |        |  +--ro unnumbered-link-hop
       |        |        |     +--ro link-tp-id    te-tp-id
       |        |        |     +--ro node-id       te-node-id
       |        |        |     +--ro hop-type?     te-hop-type
       |        |        |     +--ro direction?    te-link-direction
       |        |        +--:(as-number)
       |        |        |  +--ro as-number-hop
       |        |        |     +--ro as-number    inet:as-number
       |        |        |     +--ro hop-type?    te-hop-type
       |        |        +--:(label)
       |        |           +--ro label-hop
       |        |              +--ro te-label
       |        |                 +--ro (technology)?
       |        |                 |  +--:(generic)
       |        |                 |     +--ro generic?
       |        |                 |             rt-types:generalized-label
       |        |                 +--ro direction?
       |        |                         te-label-direction
       |        +--ro te-bandwidth
       |        |  +--ro (technology)?
       |        |     +--:(generic)
       |        |        +--ro generic?   te-bandwidth
       |        +--ro disjointness-type?
       |                te-types:te-path-disjointness
       +--ro computed-path-error-infos
       |  +--ro computed-path-error-info* []
       |     +--ro error-description?   string
       |     +--ro error-timestamp?     yang:date-and-time
       |     +--ro error-reason?        identityref
       +--ro tunnel-ref?                         te:tunnel-ref
       +--ro (path-role)?
          +--:(primary)
          |  +--ro primary-path-ref?             leafref
          +--:(primary-reverse)
          |  +--ro primary-reverse-path-ref?     leafref
          +--:(secondary)
          |  +--ro secondary-path-ref?           leafref
          +--:(secondary-reverse)
             +--ro secondary-reverse-path-ref?   leafref
  augment /te:tunnels-actions/te:input/te:tunnel-info/te:filter-type:
    +--:(path-compute-transactions)
       +-- path-compute-transaction-id*   string
  augment /te:tunnels-actions/te:output:
    +--ro path-computed-delete-result
       +--ro path-compute-transaction-id*   string
]]></artwork></figure>

</section>
<section anchor="pc-yang"><name>YANG module</name>

<figure title="TE path computation YANG module" anchor="fig-pc-yang"><sourcecode type="yang" markers="true" name="ietf-te-path-computation@2022-10-21.yang"><![CDATA[
module ietf-te-path-computation {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-te-path-computation";
  prefix te-pc;

  import ietf-te {
    prefix te;
    reference
      "RFCYYYY: A YANG Data Model for Traffic Engineering Tunnels
       and Interfaces";
  }

  /* Note: The RFC Editor will replace YYYY with the number assigned
     to the RFC once draft-ietf-teas-yang-te becomes an RFC.*/

  import ietf-te-types {
    prefix te-types;
    reference
      "RFCZZZZ: Updated Common YANG Data Types for Traffic 
      Engineering";
  }

  /* Note: The RFC Editor will replace ZZZZ with the number assigned
     to the RFC once draft-ietf-teas-rfc8776-update becomes an RFC.*/

  organization
    "Traffic Engineering Architecture and Signaling (TEAS)
     Working Group";
  contact
    "WG Web: <https://datatracker.ietf.org/wg/teas/>
     WG List:  <mailto:teas@ietf.org>

     Editor:   Italo Busi
               <mailto:italo.busi@huawei.com>

     Editor:   Sergio Belotti
               <mailto:sergio.belotti@nokia.com>

     Editor:   Victor Lopez
               <mailto:victor.lopez@nokia.com>

     Editor:   Oscar Gonzalez de Dios
               <mailto:oscar.gonzalezdedios@telefonica.com>

     Editor:   Anurag Sharma
               <mailto:ansha@google.com>

     Editor:   Yan Shi
               <mailto:shiyan49@chinaunicom.cn>

     Editor:   Ricard Vilalta
               <mailto:ricard.vilalta@cttc.es>

     Editor:   Karthik Sethuraman
               <mailto:karthik.sethuraman@necam.com>

     Editor:   Michael Scharf
               <mailto:michael.scharf@gmail.com>

     Editor:   Daniele Ceccarelli
               <mailto:daniele.ceccarelli@ericsson.com>
     
    ";
  description
    "This module defines a YANG data model for requesting Traffic
     Engineering (TE) path computation. The YANG data model defined
     in this document augments the RPCs defined in the generic TE
     module (ietf-te).

     The model fully conforms to the
     Network Management Datastore Architecture (NMDA).

     Copyright (c) 2023 IETF Trust and the persons
     identified as authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with
     or without modification, is permitted pursuant to, and
     subject to the license terms contained in, the Revised
     BSD License set forth in Section 4.c of the IETF Trust's
     Legal Provisions Relating to IETF Documents
     (https://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC XXXX; see
     the RFC itself for full legal notices.

     The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL', 'SHALL
     NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'NOT RECOMMENDED',
     'MAY', and 'OPTIONAL' in this document are to be interpreted as
     described in BCP 14 (RFC 2119) (RFC 8174) when, and only when,
     they appear in all capitals, as shown here.";

  // RFC Ed.: replace XXXX with actual RFC number and remove
  // this note
  // replace the revision date with the module publication date
  // the format is (year-month-day)

  revision 2023-01-12 {
    description
      "Initial revision";
    reference
      "RFC XXXX: A YANG Data Model for requesting path computation";
  }

  // RFC Ed.: replace XXXX with actual RFC number and remove
  // this note

  /*
   * Identities
   */

  identity tunnel-action-path-compute-delete {
    base te-types:tunnel-actions-type;
    description
      "Action type to delete the transient states
      of computed paths, as described in section 3.3.1 of
      RFC XXXX.";
    reference
      "RFC XXXX: A YANG Data Model for requesting path computation";
  }

  /*
   * Groupings
   */

  grouping protection-restoration-properties {
    description
      "This grouping defines the restoration and protection types
       for a path in the path computation request.";
    leaf protection-type {
      type identityref {
        base te-types:lsp-protection-type;
      }
      default "te-types:lsp-protection-unprotected";
      description
        "LSP protection type.";
    }
    leaf restoration-type {
      type identityref {
        base te-types:lsp-restoration-type;
      }
      default "te-types:lsp-restoration-restore-any";
      description
        "LSP restoration type.";
    }
    leaf restoration-scheme {
      type identityref {
        base te-types:restoration-scheme-type;
      }
      default "te-types:restoration-scheme-preconfigured";
      description
        "LSP restoration scheme.";
    }
  } // grouping protection-restoration-properties

  grouping requested-info {
    description
      "This grouping defines the information which is requested
       (e.g., metrics), in the path computation request, to be
       returned in the path computation response.";
    list requested-metrics {
      key "metric-type";
      description
        "The list of the requested metrics.

         The metrics listed here MUST be returned in the response.
         Returning other metrics in the response is OPTIONAL.";
      leaf metric-type {
        type identityref {
          base te-types:path-metric-type;
        }
        description
          "The metric requested to be returned in the response";
      }
    }
    leaf return-srlgs {
      type boolean;
      default "false";
      description
        "If true, path Shared Risk Link Groups (SRLGs) MUST be
         returned in the response.
         If false, returning path SRLGs in the response OPTIONAL.";
    }
    leaf return-affinities {
      type boolean;
      default "false";
      description
        "If true, path affinities MUST be returned in the response.
         If false, returning path affinities in the response is
         OPTIONAL.";
    }
  } // grouping requested-info

  grouping requested-state {
    description
      "Configuration for the transient state used
       to report the computed path";
    container requested-state {
      presence
        "Request temporary reporting of the computed path state";
      description
        "Configures attributes for the temporary reporting of the
         computed path state (e.g., expiration timer).";
      leaf timer {
        type uint16;
        units "minutes";
        default "10";
        description
          "The timeout after which the transient state reporting
          the computed path SHOULD be removed.";
      }
      leaf transaction-id {
        type string;
        description
          "The transaction-id associated with this path computation
          to be used for fast deletion of the transient states
          associated with multiple path computations.

          This transaction-id can be used to explicitly delete all
          the transient states of all the computed paths associated
          with the same transaction-id.

          When one path associated with a transaction-id is setup,
          the transient states of all the other computed paths
          with the same transaction-id are automatically removed.

          If not specified, the transient state is removed only
          when the timer expires (when the timer is specified)
          or not created at all (stateless path computation,
          when the timer is not specified).";
      }
    }
  } // grouping requested-state

  grouping reported-state {
    description
      "This grouping defines the information, returned in the path
       computation response, reporting the transient state related
       to the computed path";
    leaf tunnel-ref {
      type te:tunnel-ref;
      description
        "
         Reference to the tunnel that reports the transient state
         of the computed path.

         If no transient state is created, this attribute is
         omitted.
        ";
    }
    choice path-role {
      description
        "The transient state of the computed path can be reported
         as a primary, primary-reverse, secondary or
         a secondary-reverse path of a te-tunnel";
      case primary {
        leaf primary-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:primary-paths/te:primary-path/"
               + "te:name";
          }
          must '../tunnel-ref' {
            description
              "The primary-path name can only be reported
               if the tunnel name is also reported.";
          }
          description
            "
             Reference to the primary-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case primary
      case primary-reverse {
        leaf primary-reverse-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:primary-paths/te:primary-path/"
               + "te:name";
          }
          must '../tunnel-ref' {
            description
              "The primary-reverse-path name can only be reported
               if the tunnel name is also reported.";
          }
          description
            "
             Reference to the primary-reverse-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case primary-reverse
      case secondary {
        leaf secondary-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:secondary-paths/te:secondary-path/"
               + "te:name";
          }
          must '../tunnel-ref' {
            description
              "The secondary-path name can only be reported
               if the tunnel name is also reported.";
          }
          description
            "
             Reference to the secondary-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case secondary
      case secondary-reverse {
        leaf secondary-reverse-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:secondary-reverse-paths/"
               + "te:secondary-reverse-path/te:name";
          }
          must '../tunnel-ref' {
            description
              "The secondary-reverse-path name can only be reported
               if the tunnel name is also reported.";
          }
          description
            "
             Reference to the secondary-reverse-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case secondary
    } // choice path
  } // grouping reported-state

  grouping synchronization-constraints {
    description
      "Global constraints applicable to synchronized path
       computation requests.";
    container svec-constraints {
      description
        "global svec constraints";
      list path-metric-bound {
        key "metric-type";
        description
          "list of bound metrics";
        leaf metric-type {
          type identityref {
            base te-types:svec-metric-type;
          }
          description
            "SVEC metric type.";
          reference
            "RFC5541: Encoding of Objective Functions in the Path
            Computation Element Communication Protocol (PCEP).";
        }
        leaf upper-bound {
          type uint64;
          description
            "Upper bound on SVEC metric";
        }
      }
    }
    uses te-types:generic-path-srlgs;
    container exclude-objects {
      description
        "Resources to be excluded";
      list excludes {
        description
          "List of Explicit Route Objects to always exclude
           from synchronized path computation";
        uses te-types:explicit-route-hop;
      }
    }
  } // grouping synchronization-constraints

  grouping synchronization-optimization {
    description
      "Optimizations applicable to synchronized path
       computation requests.";
    container optimizations {
      description
        "The objective function container that includes attributes
         to impose when computing a synchronized set of paths";
      choice algorithm {
        description
          "Optimizations algorithm.";
        case metric {
          if-feature "te-types:path-optimization-metric";
          list optimization-metric {
            key "metric-type";
            description
              "svec path metric type";
            leaf metric-type {
              type identityref {
                base te-types:svec-metric-type;
              }
              description
                "TE path metric type usable for computing a set of
                synchronized requests";
            }
            leaf weight {
              type uint8;
              description
                "Metric normalization weight";
            }
          }
        }
        case objective-function {
          if-feature
            "te-types:path-optimization-objective-function";
          container objective-function {
            description
              "The objective function container that includes
               attributes to impose when computing a TE path";
            leaf objective-function-type {
              type identityref {
                base te-types:svec-objective-function-type;
              }
              description
                "Objective function entry";
            }
          }
        }
      }
    }
  } // grouping synchronization-optimization

  grouping synchronization-info {
    description
      "Information for synchronized path computation requests.";
    list synchronization {
      description
        "List of Synchronization VECtors.";
      container svec {
        description
          "Synchronization VECtor";
        leaf relaxable {
          type boolean;
          default "true";
          description
            "If this leaf is true, taking into account this svec is
             OPTIONAL and the path computation process is
             free to ignore svec content.
             Otherwise, it MUST take into account this svec.";
        }
        uses te-types:generic-path-disjointness;
        leaf-list request-id {
          type uint32;
          description
            "This list reports the set of path computation
             requests that are requested to be synchronized.";
        }
      }
      uses synchronization-constraints;
      uses synchronization-optimization;
    }
  } // grouping synchronization-info

  /*
   * Augment TE RPCs
   */

  augment "/te:tunnels-path-compute/te:input/te:path-compute-info" {
    description
      "Augments Path Computation RPC input";
    list path-request {
      key "request-id";
      description
        "The list of the requested paths to be computed";
      leaf request-id {
        type uint32;
        mandatory true;
        description
          "Each path computation request is uniquely identified
           within the RPC request by the request-id.";
      }
      choice tunnel-attributes {
        default "value";
        description
          "Whether the tunnel attributes are specified by value
           within this path computation request or by reference.
           The reference could be either to an existing te-tunnel
           or to an entry in the tunnel-attributes list";
        case reference {
          container tunnel-reference {
            description
              "Attributes for a requested path that belongs to
              either an exiting te-tunnel or to an entry in the
              tunnel-attributes list.";
            choice tunnel-exist {
              mandatory true;
              description
                "Whether the tunnel reference is to an existing
                te-tunnel or to an entry in the tunnel-attributes
                list";
              case tunnel-ref {
                leaf tunnel-ref {
                  type te:tunnel-ref;
                  mandatory true;
                  description
                    "The referenced te-tunnel instance";
                }
              } // case tunnel-ref
              case tunnel-attributes-ref {
                leaf tunnel-attributes-ref {
                  type leafref {
                    path "/te:tunnels-path-compute/"
                      + "te:path-compute-info/"
                      + "te-pc:tunnel-attributes/te-pc:tunnel-name";
                  }
                  mandatory true;
                  description
                    "The referenced te-tunnel instance";
                }
              } // case tunnel-attributes-ref 
            } // choice tunnel-exist
            leaf path-name {
              type string;
              description
                "TE path name.";
            }
            choice path-role {
              mandatory true;
              description
                "Whether this path is a primary, or a reverse
                primary, or a secondary, or a reverse secondary
                path.";
              case primary-path {
                container primary-path {
                  presence "Indicates that the requested path
                            is a primary path";
                  description
                    "TE primary path";
                  uses te:path-forward-properties;
                  uses te:k-requested-paths;
                } // container primary-path
              } // case primary-path
              case secondary-path {
                container secondary-path {
                  description
                    "TE secondary path";
                  uses te:path-forward-properties;
                  uses protection-restoration-properties;
                  list primary-path-ref {
                    min-elements 1;
                    description
                      "The list of primary paths that reference
                      this path as a candidate secondary path";
                    choice primary-path-exist {
                      mandatory true;
                      description
                        "Whether the path reference is to an existing
                        te-tunnel path or to another path request";
                      case path-ref {
                        leaf primary-path-ref {
                          type leafref {
                            path "/te:te/te:tunnels/te:tunnel"
                              + "[te:name=current()/../../../"
                              + "tunnel-ref]/te:primary-paths/"
                              + "te:primary-path/te:name";
                          }
                          must '../../../tunnel-ref' {
                            description
                              "The primary-path can be referenced
                              if also the tunnel is referenced.";
                          }
                          mandatory true;
                          description
                            "The referenced primary path";
                        }
                      } // case path-ref
                      case path-request-ref {
                        leaf path-request-ref {
                          type leafref {
                            path "/te:tunnels-path-compute/"
                              + "te:path-compute-info/"
                              + "te-pc:path-request/"
                              + "te-pc:request-id";
                          }
                          mandatory true;
                          description
                            "The referenced primary path request";
                        }
                      } // case path-request-ref 
                    } // choice primary-path-exist
                  } // list primary-path-ref
                } // container secondary-path
              } // case secondary-path
              case primary-reverse-path {
                container primary-reverse-path {
                  description
                    "TE primary reverse path";
                  choice primary-path-exist {
                    mandatory true;
                    description
                      "Whether the path reference to the primary
                      paths for which this path is the reverse-path
                      is to an existing te-tunnel path or to
                      another path request.";
                    case path-ref {
                      leaf primary-path-ref {
                        type leafref {
                          path "/te:te/te:tunnels/te:tunnel[te:name"
                            + "=current()/../../tunnel-ref]/"
                            + "te:primary-paths/te:primary-path/"
                            + "te:name";
                        }
                        must '../../tunnel-ref' {
                          description
                            "The primary-path can be referenced
                            if also the tunnel is referenced.";
                        }
                        mandatory true;
                        description
                          "The referenced primary path";
                      }
                    } // case path-ref
                    case path-request-ref {
                      leaf path-request-ref {
                        type leafref {
                          path "/te:tunnels-path-compute/"
                            + "te:path-compute-info/"
                            + "te-pc:path-request/"
                            + "te-pc:request-id";
                        }
                        mandatory true;
                        description
                          "The referenced primary path request";
                      }
                    } // case path-request-ref 
                  } // choice primary-path-exist
                } // container primary-reverse-path
              } // case primary-reverse-path
              case secondary-reverse-path {
                container secondary-reverse-path {
                  description
                    "TE secondary reverse path";
                  // uses te:path-preference;
                  uses protection-restoration-properties;
                  list primary-reverse-path {
                    min-elements 1;
                    description
                      "The list of primary reverse paths that
                      reference this path as a candidate
                      secondary reverse path";
                    choice primary-reverse-path-exist {
                      mandatory true;
                      description
                        "Whether the path reference is to an existing
                        te-tunnel path or to another path request";
                      case path-ref {
                        leaf primary-path-ref {
                          type leafref {
                            path "/te:te/te:tunnels/te:tunnel"
                              + "[te:name=current()/../../../"
                              + "tunnel-ref]/te:primary-paths/"
                              + "te:primary-path/te:name";
                          }
                          must '../../../tunnel-ref' {
                            description
                              "The primary-path can be referenced
                              if also the tunnel is referenced.";
                          }
                          mandatory true;
                          description
                            "The referenced primary path";
                        }
                      } // case path-ref
                      case path-request-ref {
                        leaf path-request-ref {
                          type leafref {
                            path "/te:tunnels-path-compute/"
                              + "te:path-compute-info/"
                              + "te-pc:path-request/"
                              + "te-pc:request-id";
                          }
                          mandatory true;
                          description
                            "The referenced primary reverse path
                            request";
                        }
                      } // case path-request-ref 
                    } // choice primary-reverse-path-exist
                  } // list primary-reverse-path-ref
                } // container secondary-reverse-path
              } // case secondary-reverse-path
            } // choice tunnel-path-role
          }
        } // case reference
        case value {
          leaf tunnel-name {
            type string;
            description
              "TE tunnel name.";
          }
          leaf path-name {
            type string;
            description
              "TE path name.";
          }
          choice path-role {
            when 'not (./source) and not (./destination) and
                  not (./src-tunnel-tp-id) and
                  not (./dst-tunnel-tp-id)' {
              description
                "When the tunnel attributes are specified by value
                within this path computation, it is assumed that the
                requested path will be the only path of a tunnel.

                If the requested path is a transit segment path
                (i.e., the source, src-tp-id, destination and
                dst-tp-id attributes are empty), it
                could be of any type. Otherwise it could only be a
                primary path.";
            }
            default primary-path;
            description
              "Indicates whether the requested path is a primary
              path, a secondary path, a reverse primary path or a
              reverse secondary path.";
            case primary-path {
              description
                "The requested path is a primary path.";
            }
            container secondary-path {
              presence
                "Indicates that the requested path is a secondary
                path.";
              description
                "The name of the primary path which the requested
                secondary path belongs to.";
              leaf primary-path-name {
                type string;
                description
                  "TE primary path name.";
              }
            } // container secondary-path
            container primary-reverse-path {
              presence
                "Indicates that the requested path is a primary
                reverse path.";
              description
                "The name of the primary path which the requested
                primary reverse path belongs to.";
              leaf primary-path-name {
                type string;
                description
                  "TE primary path name.";
              }
            } // container primary-reverse-path
            container secondary-reverse-path {
              presence
                "Indicates that the requested path is a secondary
                reverse path.";
              description
                "The names of the primary path and of the primary
                reverse path which the requested secondary reverse
                path belongs to.";
              leaf primary-path-name {
                type string;
                description
                  "TE primary path name.";
              }
              leaf primary-reverse-path-name {
                type string;
                description
                  "TE primary reverse path name.";
              }
            } // container primary-reverse-path
          } // choice path-role
          uses te:k-requested-paths;
          uses te-types:encoding-and-switching-type;
          uses te:tunnel-common-attributes;
          uses te-types:te-topology-identifier;
        } // case value
      } // choice tunnel-attributes
      uses te:path-compute-info;
      uses requested-info;
      uses requested-state;
    }
    list tunnel-attributes {
      key "tunnel-name";
      description
        "Tunnel attributes common to multiple request paths";
      leaf tunnel-name {
        type string;
        description
          "TE tunnel name.";
      }
      uses te-types:encoding-and-switching-type;
      uses te:tunnel-common-attributes;
      uses te:tunnel-associations-properties;
      uses protection-restoration-properties;
      uses te-types:tunnel-constraints;
      uses te:tunnel-hierarchy-properties {
        augment "hierarchy/dependency-tunnels" {
          description
            "Augment with the list of dependency tunnel requests.";
          list dependency-tunnel-attributes {
            key "name";
            description
              "A tunnel request entry that this tunnel request can
               potentially depend on.";
            leaf name {
              type leafref {
                path "/te:tunnels-path-compute/"
                   + "te:path-compute-info/te-pc:tunnel-attributes/"
                   + "te-pc:tunnel-name";
              }
              description
                "Dependency tunnel request name.";
            }
            uses te-types:encoding-and-switching-type;
          }
        }
      }
    }
    uses synchronization-info;
  } // path-compute rpc input

  augment "/te:tunnels-path-compute/te:output/"
        + "te:path-compute-result" {
    description
      "Auguments Path Computation RPC output";
    list response {
      key "response-id";
      config false;
      description
        "response";
      leaf response-id {
        type uint32;
        description
          "The response-id has the same value of the
           corresponding request-id.";
      }
      uses te:path-computation-response;
      uses reported-state;
    }
  } // path-compute rpc output

  augment "/te:tunnels-actions/te:input/te:tunnel-info/"
        + "te:filter-type" {
    description
      "Augment Tunnels Action RPC input filter types";
    case path-compute-transactions {
      when "derived-from-or-self(../te:action-info/te:action, "
         + "'tunnel-action-path-compute-delete')";
      description
        "Path Delete RPC input";
      leaf-list path-compute-transaction-id {
        type string;
        description
          "The list of the transaction-id values of the
           transient states to be deleted";
      }
    }
  } // path-delete rpc input

  augment "/te:tunnels-actions/te:output" {
    description
      "Augment Tunnels Action RPC output with path delete result";
    container path-computed-delete-result {
      description
        "Path Delete RPC output";
      leaf-list path-compute-transaction-id {
        type string;
        description
          "The list of the transaction-id values of the
           transient states that have been successfully deleted";
      }
    }
  } // path-delete rpc output
}
]]></sourcecode></figure>

</section>
</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>This document describes use cases of requesting Path Computation
   using YANG data models, which could be used at the ABNO Control
   Interface <xref target="RFC7491"/> and/or between controllers in ACTN <xref target="RFC8453"/>. As
   such, it does not introduce any new security considerations compared
   to the ones related to YANG specification, ABNO specification and
   ACTN Framework defined in <xref target="RFC7950"/>, <xref target="RFC7491"/> and <xref target="RFC8453"/>.</t>

<t>The YANG module defined in this document is designed to be accessed via
   the NETCONF protocol <xref target="RFC6241"/> or RESTCONF protocol <xref target="RFC8040"/>. The
   lowest NETCONF layer is the secure transport layer, and the
   mandatory-to-implement secure transport is Secure Shell (SSH)
   <xref target="RFC6242"/>. The lowest RESTCONF layer is HTTPS, and the mandatory-to-
   implement secure transport is TLS <xref target="RFC8446"/>.</t>

<t>The Network Configuration Access Control Model (NACM) 
   <xref target="RFC8341"/> provides the means to
   restrict access for particular NETCONF or RESTCONF users to a
   preconfigured subset of all available NETCONF or RESTCONF protocol
   operations and content.</t>

<t>The YANG module defined in this document augments the "tunnels-path-compute" and the "tunnel-actions" RPCs defined in <xref target="I-D.ietf-teas-yang-te"/>. The security considerations provided in <xref target="I-D.ietf-teas-yang-te"/> are also applicable to the YANG module
   defined in this document.</t>

<t>Some of the RPC operations defined in this YANG module may be considered
   sensitive or vulnerable in some network environments.  It is thus
   important to control access to these operations. These are the
   operations and their sensitivity/vulnerability:</t>

<t>"te-pc:response/computed-paths-properties": provides the same information provided by the "te:computed-paths-properties" defined in <xref target="I-D.ietf-teas-yang-te"/>. The security considerations provided in <xref target="I-D.ietf-teas-yang-te"/> for the TE tunnel state apply also to this subtree.</t>

<t>"te-pc:response/te-pc:tunnel-ref", "te-pc:response/te-pc:primary-path-ref", "te-pc:response/te-pc:primary-reverse-path-ref", "te-pc:response/te-pc:secondary-path-ref" and "te-pc:response/te-pc:secondary-reverse-path-ref" provides a reference where the same information provided in "te-pc:response/computed-paths-properties" is temporarly stored with the operational datastore (see <xref target="temp-state"/>). Therefore access to this information does not provide any additional security issue that the information provided with "te-pc:response/computed-paths-properties".</t>

<t>"/te:tunnels-actions": the YANG model defined in this document augments this action with a new action type that allows deleting the transient states of computed paths (see <xref target="temp-state"/>). A malicious use of this action would have no impact on the paths carrying live traffic but it would preclude the client from using the "transient states" to request the set-up of exactly that path, if still available.</t>

<t>The security considerations spelled out in the
   YANG specification <xref target="RFC7950"/> apply for this document as well.</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>This document registers the following URIs in the "ns" subregistry
   within the "IETF XML registry" <xref target="RFC3688"/>.</t>

<figure><artwork><![CDATA[
      URI: urn:ietf:params:xml:ns:yang:ietf-te-path-computation
      Registrant Contact:  The IESG.
      XML: N/A, the requested URI is an XML namespace.
]]></artwork></figure>

<t>This document registers a YANG module in the "YANG Module Names"
   registry <xref target="RFC7950"/>.</t>

<figure><artwork><![CDATA[
      name:      ietf-te-path-computation
      namespace: urn:ietf:params:xml:ns:yang:ietf-te-path-computation
      prefix:    te-pc
      reference: this document
]]></artwork></figure>

</section>


  </middle>

  <back>


    <references title='Normative References'>





<reference anchor='RFC6241' target='https://www.rfc-editor.org/info/rfc6241'>
<front>
<title>Network Configuration Protocol (NETCONF)</title>
<author fullname='R. Enns' initials='R.' role='editor' surname='Enns'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'><organization/></author>
<author fullname='A. Bierman' initials='A.' role='editor' surname='Bierman'><organization/></author>
<date month='June' year='2011'/>
<abstract><t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices.  It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages.  The NETCONF protocol operations are realized as remote procedure calls (RPCs).  This document obsoletes RFC 4741.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6241'/>
<seriesInfo name='DOI' value='10.17487/RFC6241'/>
</reference>



<reference anchor='RFC8040' target='https://www.rfc-editor.org/info/rfc8040'>
<front>
<title>RESTCONF Protocol</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<date month='January' year='2017'/>
<abstract><t>This document describes an HTTP-based protocol that provides a programmatic interface for accessing data defined in YANG, using the datastore concepts defined in the Network Configuration Protocol (NETCONF).</t></abstract>
</front>
<seriesInfo name='RFC' value='8040'/>
<seriesInfo name='DOI' value='10.17487/RFC8040'/>
</reference>



<reference anchor='RFC8795' target='https://www.rfc-editor.org/info/rfc8795'>
<front>
<title>YANG Data Model for Traffic Engineering (TE) Topologies</title>
<author fullname='X. Liu' initials='X.' surname='Liu'><organization/></author>
<author fullname='I. Bryskin' initials='I.' surname='Bryskin'><organization/></author>
<author fullname='V. Beeram' initials='V.' surname='Beeram'><organization/></author>
<author fullname='T. Saad' initials='T.' surname='Saad'><organization/></author>
<author fullname='H. Shah' initials='H.' surname='Shah'><organization/></author>
<author fullname='O. Gonzalez de Dios' initials='O.' surname='Gonzalez de Dios'><organization/></author>
<date month='August' year='2020'/>
<abstract><t>This document defines a YANG data model for representing, retrieving, and manipulating Traffic Engineering (TE) Topologies. The model serves as a base model that other technology-specific TE topology models can augment.</t></abstract>
</front>
<seriesInfo name='RFC' value='8795'/>
<seriesInfo name='DOI' value='10.17487/RFC8795'/>
</reference>


<reference anchor='I-D.ietf-teas-yang-te' target='https://datatracker.ietf.org/doc/html/draft-ietf-teas-yang-te-31'>
   <front>
      <title>A YANG Data Model for Traffic Engineering Tunnels, Label Switched Paths and Interfaces</title>
      <author fullname='Tarek Saad' initials='T.' surname='Saad'>
         <organization>Cisco Systems Inc</organization>
      </author>
      <author fullname='Rakesh Gandhi' initials='R.' surname='Gandhi'>
         <organization>Cisco Systems Inc</organization>
      </author>
      <author fullname='Xufeng Liu' initials='X.' surname='Liu'>
         <organization>IBM Corporation</organization>
      </author>
      <author fullname='Vishnu Pavan Beeram' initials='V. P.' surname='Beeram'>
         <organization>Juniper Networks</organization>
      </author>
      <author fullname='Igor Bryskin' initials='I.' surname='Bryskin'>
         <organization>Individual</organization>
      </author>
      <author fullname='Oscar Gonzalez de Dios' initials='O. G.' surname='de Dios'>
         <organization>Telefonica</organization>
      </author>
      <date day='24' month='October' year='2022'/>
      <abstract>
	 <t>   This document defines a YANG data model for the provisioning and
   management of Traffic Engineering (TE) tunnels, Label Switched Paths
   (LSPs), and interfaces.  The model covers data that is independent of
   any technology or dataplane encapsulation and is divided into two
   YANG modules that cover device-specific, and device independent data.

   This model covers data for configuration, operational state, remote
   procedural calls, and event notifications.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-teas-yang-te-31'/>
   
</reference>



<reference anchor='RFC7950' target='https://www.rfc-editor.org/info/rfc7950'>
<front>
<title>The YANG 1.1 Data Modeling Language</title>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<date month='August' year='2016'/>
<abstract><t>YANG is a data modeling language used to model configuration data, state data, Remote Procedure Calls, and notifications for network management protocols.  This document describes the syntax and semantics of version 1.1 of the YANG language.  YANG version 1.1 is a maintenance release of the YANG language, addressing ambiguities and defects in the original specification.  There are a small number of backward incompatibilities from YANG version 1.  This document also specifies the YANG mappings to the Network Configuration Protocol (NETCONF).</t></abstract>
</front>
<seriesInfo name='RFC' value='7950'/>
<seriesInfo name='DOI' value='10.17487/RFC7950'/>
</reference>



<reference anchor='RFC5440' target='https://www.rfc-editor.org/info/rfc5440'>
<front>
<title>Path Computation Element (PCE) Communication Protocol (PCEP)</title>
<author fullname='JP. Vasseur' initials='JP.' role='editor' surname='Vasseur'><organization/></author>
<author fullname='JL. Le Roux' initials='JL.' role='editor' surname='Le Roux'><organization/></author>
<date month='March' year='2009'/>
<abstract><t>This document specifies the Path Computation Element (PCE) Communication Protocol (PCEP) for communications between a Path Computation Client (PCC) and a PCE, or between two PCEs.  Such interactions include path computation requests and path computation replies as well as notifications of specific states related to the use of a PCE in the context of Multiprotocol Label Switching (MPLS) and Generalized MPLS (GMPLS) Traffic Engineering.  PCEP is designed to be flexible and extensible so as to easily allow for the addition of further messages and objects, should further requirements be expressed in the future.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5440'/>
<seriesInfo name='DOI' value='10.17487/RFC5440'/>
</reference>



<reference anchor='RFC7926' target='https://www.rfc-editor.org/info/rfc7926'>
<front>
<title>Problem Statement and Architecture for Information Exchange between Interconnected Traffic-Engineered Networks</title>
<author fullname='A. Farrel' initials='A.' role='editor' surname='Farrel'><organization/></author>
<author fullname='J. Drake' initials='J.' surname='Drake'><organization/></author>
<author fullname='N. Bitar' initials='N.' surname='Bitar'><organization/></author>
<author fullname='G. Swallow' initials='G.' surname='Swallow'><organization/></author>
<author fullname='D. Ceccarelli' initials='D.' surname='Ceccarelli'><organization/></author>
<author fullname='X. Zhang' initials='X.' surname='Zhang'><organization/></author>
<date month='July' year='2016'/>
<abstract><t>In Traffic-Engineered (TE) systems, it is sometimes desirable to establish an end-to-end TE path with a set of constraints (such as bandwidth) across one or more networks from a source to a destination.  TE information is the data relating to nodes and TE links that is used in the process of selecting a TE path.  TE information is usually only available within a network.  We call such a zone of visibility of TE information a domain.  An example of a domain may be an IGP area or an Autonomous System.</t><t>In order to determine the potential to establish a TE path through a series of connected networks, it is necessary to have available a certain amount of TE information about each network.  This need not be the full set of TE information available within each network but does need to express the potential of providing TE connectivity. This subset of TE information is called TE reachability information.</t><t>This document sets out the problem statement for the exchange of TE information between interconnected TE networks in support of end-to-end TE path establishment and describes the best current practice architecture to meet this problem statement.  For reasons that are explained in this document, this work is limited to simple TE constraints and information that determine TE reachability.</t></abstract>
</front>
<seriesInfo name='BCP' value='206'/>
<seriesInfo name='RFC' value='7926'/>
<seriesInfo name='DOI' value='10.17487/RFC7926'/>
</reference>



<reference anchor='RFC8340' target='https://www.rfc-editor.org/info/rfc8340'>
<front>
<title>YANG Tree Diagrams</title>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='L. Berger' initials='L.' role='editor' surname='Berger'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>This document captures the current syntax used in YANG module tree diagrams.  The purpose of this document is to provide a single location for this definition.  This syntax may be updated from time to time based on the evolution of the YANG language.</t></abstract>
</front>
<seriesInfo name='BCP' value='215'/>
<seriesInfo name='RFC' value='8340'/>
<seriesInfo name='DOI' value='10.17487/RFC8340'/>
</reference>


<reference anchor='I-D.ietf-teas-rfc8776-update' target='https://datatracker.ietf.org/doc/html/draft-ietf-teas-rfc8776-update-01'>
   <front>
      <title>Updated Common YANG Data Types for Traffic Engineering</title>
      <author fullname='Italo Busi' initials='I.' surname='Busi'>
         <organization>Huawei</organization>
      </author>
      <author fullname='Aihua Guo' initials='A.' surname='Guo'>
         <organization>Futurewei Technologies</organization>
      </author>
      <author fullname='Xufeng Liu' initials='X.' surname='Liu'>
         <organization>IBM Corporation</organization>
      </author>
      <author fullname='Tarek Saad' initials='T.' surname='Saad'>
         <organization>Juniper Networks</organization>
      </author>
      <author fullname='Rakesh Gandhi' initials='R.' surname='Gandhi'>
         <organization>Cisco Systems, Inc.</organization>
      </author>
      <author fullname='Vishnu Pavan Beeram' initials='V. P.' surname='Beeram'>
         <organization>Juniper Networks</organization>
      </author>
      <author fullname='Igor Bryskin' initials='I.' surname='Bryskin'>
         <organization>Individual</organization>
      </author>
      <date day='24' month='October' year='2022'/>
      <abstract>
	 <t>   This document defines few additional common data types, identities,
   and groupings in YANG data modeling language to be imported by
   modules that model Traffic Engineering (TE) configuration and state
   capabilities.

   Editors&#39; note: Copy the text from [RFC8776] and merge it with the
   content of this section before WG LC if the RFC8876-bis approach is
   confirmed.

   This document updates RFC 8776 with a new revision of the module
   ietf-te-types.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-teas-rfc8776-update-01'/>
   
</reference>



<reference anchor='RFC5441' target='https://www.rfc-editor.org/info/rfc5441'>
<front>
<title>A Backward-Recursive PCE-Based Computation (BRPC) Procedure to Compute Shortest Constrained Inter-Domain Traffic Engineering Label Switched Paths</title>
<author fullname='JP. Vasseur' initials='JP.' role='editor' surname='Vasseur'><organization/></author>
<author fullname='R. Zhang' initials='R.' surname='Zhang'><organization/></author>
<author fullname='N. Bitar' initials='N.' surname='Bitar'><organization/></author>
<author fullname='JL. Le Roux' initials='JL.' surname='Le Roux'><organization/></author>
<date month='April' year='2009'/>
<abstract><t>The ability to compute shortest constrained Traffic Engineering Label Switched Paths (TE LSPs) in Multiprotocol Label Switching (MPLS) and Generalized MPLS (GMPLS) networks across multiple domains has been identified as a key requirement.  In this context, a domain is a collection of network elements within a common sphere of address management or path computational responsibility such as an IGP area or an Autonomous Systems.  This document specifies a procedure relying on the use of multiple Path Computation Elements (PCEs) to compute such inter-domain shortest constrained paths across a predetermined sequence of domains, using a backward-recursive path computation technique.  This technique preserves confidentiality across domains, which is sometimes required when domains are managed by different service providers.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5441'/>
<seriesInfo name='DOI' value='10.17487/RFC5441'/>
</reference>



<reference anchor='RFC5541' target='https://www.rfc-editor.org/info/rfc5541'>
<front>
<title>Encoding of Objective Functions in the Path Computation Element Communication Protocol (PCEP)</title>
<author fullname='JL. Le Roux' initials='JL.' surname='Le Roux'><organization/></author>
<author fullname='JP. Vasseur' initials='JP.' surname='Vasseur'><organization/></author>
<author fullname='Y. Lee' initials='Y.' surname='Lee'><organization/></author>
<date month='June' year='2009'/>
<abstract><t>The computation of one or a set of Traffic Engineering Label Switched Paths (TE LSPs) in MultiProtocol Label Switching (MPLS) and Generalized MPLS (GMPLS) networks is subject to a set of one or more specific optimization criteria, referred to as objective functions (e.g., minimum cost path, widest path, etc.).</t><t>In the Path Computation Element (PCE) architecture, a Path Computation Client (PCC) may want a path to be computed for one or more TE LSPs according to a specific objective function.  Thus, the PCC needs to instruct the PCE to use the correct objective function. Furthermore, it is possible that not all PCEs support the same set of objective functions; therefore, it is useful for the PCC to be able to automatically discover the set of objective functions supported by each PCE.</t><t>This document defines extensions to the PCE communication Protocol (PCEP) to allow a PCE to indicate the set of objective functions it supports.  Extensions are also defined so that a PCC can indicate in a path computation request the required objective function, and a PCE can report in a path computation reply the objective function that was used for path computation.</t><t>This document defines objective function code types for six objective functions previously listed in the PCE requirements work, and provides the definition of four new metric types that apply to a set of synchronized requests.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5541'/>
<seriesInfo name='DOI' value='10.17487/RFC5541'/>
</reference>



<reference anchor='RFC8776' target='https://www.rfc-editor.org/info/rfc8776'>
<front>
<title>Common YANG Data Types for Traffic Engineering</title>
<author fullname='T. Saad' initials='T.' surname='Saad'><organization/></author>
<author fullname='R. Gandhi' initials='R.' surname='Gandhi'><organization/></author>
<author fullname='X. Liu' initials='X.' surname='Liu'><organization/></author>
<author fullname='V. Beeram' initials='V.' surname='Beeram'><organization/></author>
<author fullname='I. Bryskin' initials='I.' surname='Bryskin'><organization/></author>
<date month='June' year='2020'/>
<abstract><t>This document defines a collection of common data types and groupings in YANG data modeling language. These derived common types and groupings are intended to be imported by modules that model Traffic Engineering (TE) configuration and state capabilities.</t></abstract>
</front>
<seriesInfo name='RFC' value='8776'/>
<seriesInfo name='DOI' value='10.17487/RFC8776'/>
</reference>



<reference anchor='RFC6242' target='https://www.rfc-editor.org/info/rfc6242'>
<front>
<title>Using the NETCONF Protocol over Secure Shell (SSH)</title>
<author fullname='M. Wasserman' initials='M.' surname='Wasserman'><organization/></author>
<date month='June' year='2011'/>
<abstract><t>This document describes a method for invoking and running the Network Configuration Protocol (NETCONF) within a Secure Shell (SSH) session as an SSH subsystem.  This document obsoletes RFC 4742.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6242'/>
<seriesInfo name='DOI' value='10.17487/RFC6242'/>
</reference>



<reference anchor='RFC8446' target='https://www.rfc-editor.org/info/rfc8446'>
<front>
<title>The Transport Layer Security (TLS) Protocol Version 1.3</title>
<author fullname='E. Rescorla' initials='E.' surname='Rescorla'><organization/></author>
<date month='August' year='2018'/>
<abstract><t>This document specifies version 1.3 of the Transport Layer Security (TLS) protocol.  TLS allows client/server applications to communicate over the Internet in a way that is designed to prevent eavesdropping, tampering, and message forgery.</t><t>This document updates RFCs 5705 and 6066, and obsoletes RFCs 5077, 5246, and 6961.  This document also specifies new requirements for TLS 1.2 implementations.</t></abstract>
</front>
<seriesInfo name='RFC' value='8446'/>
<seriesInfo name='DOI' value='10.17487/RFC8446'/>
</reference>



<reference anchor='RFC8341' target='https://www.rfc-editor.org/info/rfc8341'>
<front>
<title>Network Configuration Access Control Model</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>The standardization of network configuration interfaces for use with the Network Configuration Protocol (NETCONF) or the RESTCONF protocol requires a structured and secure operating environment that promotes human usability and multi-vendor interoperability.  There is a need for standard mechanisms to restrict NETCONF or RESTCONF protocol access for particular users to a preconfigured subset of all available NETCONF or RESTCONF protocol operations and content.  This document defines such an access control model.</t><t>This document obsoletes RFC 6536.</t></abstract>
</front>
<seriesInfo name='STD' value='91'/>
<seriesInfo name='RFC' value='8341'/>
<seriesInfo name='DOI' value='10.17487/RFC8341'/>
</reference>



<reference anchor='RFC3688' target='https://www.rfc-editor.org/info/rfc3688'>
<front>
<title>The IETF XML Registry</title>
<author fullname='M. Mealling' initials='M.' surname='Mealling'><organization/></author>
<date month='January' year='2004'/>
<abstract><t>This document describes an IANA maintained registry for IETF standards which use Extensible Markup Language (XML) related items such as Namespaces, Document Type Declarations (DTDs), Schemas, and Resource Description Framework (RDF) Schemas.</t></abstract>
</front>
<seriesInfo name='BCP' value='81'/>
<seriesInfo name='RFC' value='3688'/>
<seriesInfo name='DOI' value='10.17487/RFC3688'/>
</reference>




    </references>

    <references title='Informative References'>





<reference anchor='RFC7491' target='https://www.rfc-editor.org/info/rfc7491'>
<front>
<title>A PCE-Based Architecture for Application-Based Network Operations</title>
<author fullname='D. King' initials='D.' surname='King'><organization/></author>
<author fullname='A. Farrel' initials='A.' surname='Farrel'><organization/></author>
<date month='March' year='2015'/>
<abstract><t>Services such as content distribution, distributed databases, or inter-data center connectivity place a set of new requirements on the operation of networks.  They need on-demand and application-specific reservation of network connectivity, reliability, and resources (such as bandwidth) in a variety of network applications (such as point-to-point connectivity, network virtualization, or mobile back-haul) and in a range of network technologies from packet (IP/MPLS) down to optical.  An environment that operates to meet these types of requirements is said to have Application-Based Network Operations (ABNO).  ABNO brings together many existing technologies and may be seen as the use of a toolbox of existing components enhanced with a few new elements.</t><t>This document describes an architecture and framework for ABNO, showing how these components fit together.  It provides a cookbook of existing technologies to satisfy the architecture and meet the needs of the applications.</t></abstract>
</front>
<seriesInfo name='RFC' value='7491'/>
<seriesInfo name='DOI' value='10.17487/RFC7491'/>
</reference>



<reference anchor='RFC8453' target='https://www.rfc-editor.org/info/rfc8453'>
<front>
<title>Framework for Abstraction and Control of TE Networks (ACTN)</title>
<author fullname='D. Ceccarelli' initials='D.' role='editor' surname='Ceccarelli'><organization/></author>
<author fullname='Y. Lee' initials='Y.' role='editor' surname='Lee'><organization/></author>
<date month='August' year='2018'/>
<abstract><t>Traffic Engineered (TE) networks have a variety of mechanisms to facilitate the separation of the data plane and control plane.  They also have a range of management and provisioning protocols to configure and activate network resources.  These mechanisms represent key technologies for enabling flexible and dynamic networking.  The term &quot;Traffic Engineered network&quot; refers to a network that uses any connection-oriented technology under the control of a distributed or centralized control plane to support dynamic provisioning of end-to- end connectivity.</t><t>Abstraction of network resources is a technique that can be applied to a single network domain or across multiple domains to create a single virtualized network that is under the control of a network operator or the customer of the operator that actually owns the network resources.</t><t>This document provides a framework for Abstraction and Control of TE Networks (ACTN) to support virtual network services and connectivity services.</t></abstract>
</front>
<seriesInfo name='RFC' value='8453'/>
<seriesInfo name='DOI' value='10.17487/RFC8453'/>
</reference>



<reference anchor='RFC8454' target='https://www.rfc-editor.org/info/rfc8454'>
<front>
<title>Information Model for Abstraction and Control of TE Networks (ACTN)</title>
<author fullname='Y. Lee' initials='Y.' surname='Lee'><organization/></author>
<author fullname='S. Belotti' initials='S.' surname='Belotti'><organization/></author>
<author fullname='D. Dhody' initials='D.' surname='Dhody'><organization/></author>
<author fullname='D. Ceccarelli' initials='D.' surname='Ceccarelli'><organization/></author>
<author fullname='B. Yoon' initials='B.' surname='Yoon'><organization/></author>
<date month='September' year='2018'/>
<abstract><t>This document provides an information model for Abstraction and Control of TE Networks (ACTN).</t></abstract>
</front>
<seriesInfo name='RFC' value='8454'/>
<seriesInfo name='DOI' value='10.17487/RFC8454'/>
</reference>


<reference anchor='I-D.ietf-ccamp-otn-topo-yang' target='https://datatracker.ietf.org/doc/html/draft-ietf-ccamp-otn-topo-yang-16'>
   <front>
      <title>A YANG Data Model for Optical Transport Network Topology</title>
      <author fullname='Haomian Zheng' initials='H.' surname='Zheng'>
         <organization>Huawei Technologies</organization>
      </author>
      <author fullname='Italo Busi' initials='I.' surname='Busi'>
         <organization>Huawei Technologies</organization>
      </author>
      <author fullname='Xufeng Liu' initials='X.' surname='Liu'>
         <organization>IBM Corporation</organization>
      </author>
      <author fullname='Sergio Belotti' initials='S.' surname='Belotti'>
         <organization>Nokia</organization>
      </author>
      <author fullname='Oscar Gonzalez de Dios' initials='O. G.' surname='de Dios'>
         <organization>Telefonica</organization>
      </author>
      <date day='23' month='November' year='2022'/>
      <abstract>
	 <t>   This document describes a YANG data model to describe the topologies
   of an Optical Transport Network (OTN).  It is independent of control
   plane protocols and captures topological and resource-related
   information pertaining to OTN.  This model enables clients, which
   interact with a transport domain controller, for OTN topology-related
   operations such as obtaining the relevant topology resource
   information.


	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-ccamp-otn-topo-yang-16'/>
   
</reference>



<reference anchor='RFC4655' target='https://www.rfc-editor.org/info/rfc4655'>
<front>
<title>A Path Computation Element (PCE)-Based Architecture</title>
<author fullname='A. Farrel' initials='A.' surname='Farrel'><organization/></author>
<author fullname='J.-P. Vasseur' initials='J.-P.' surname='Vasseur'><organization/></author>
<author fullname='J. Ash' initials='J.' surname='Ash'><organization/></author>
<date month='August' year='2006'/>
<abstract><t>Constraint-based path computation is a fundamental building block for traffic engineering systems such as Multiprotocol Label Switching (MPLS) and Generalized Multiprotocol Label Switching (GMPLS) networks.  Path computation in large, multi-domain, multi-region, or multi-layer networks is complex and may require special computational components and cooperation between the different network domains.</t><t>This document specifies the architecture for a Path Computation Element (PCE)-based model to address this problem space.  This document does not attempt to provide a detailed description of all the architectural components, but rather it describes a set of building blocks for the PCE architecture from which solutions may be constructed.  This memo provides information for the Internet community.</t></abstract>
</front>
<seriesInfo name='RFC' value='4655'/>
<seriesInfo name='DOI' value='10.17487/RFC4655'/>
</reference>



<reference anchor='RFC8342' target='https://www.rfc-editor.org/info/rfc8342'>
<front>
<title>Network Management Datastore Architecture (NMDA)</title>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' surname='Schoenwaelder'><organization/></author>
<author fullname='P. Shafer' initials='P.' surname='Shafer'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<author fullname='R. Wilton' initials='R.' surname='Wilton'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>Datastores are a fundamental concept binding the data models written in the YANG data modeling language to network management protocols such as the Network Configuration Protocol (NETCONF) and RESTCONF. This document defines an architectural framework for datastores based on the experience gained with the initial simpler model, addressing requirements that were not well supported in the initial model.  This document updates RFC 7950.</t></abstract>
</front>
<seriesInfo name='RFC' value='8342'/>
<seriesInfo name='DOI' value='10.17487/RFC8342'/>
</reference>



<reference anchor='RFC6805' target='https://www.rfc-editor.org/info/rfc6805'>
<front>
<title>The Application of the Path Computation Element Architecture to the Determination of a Sequence of Domains in MPLS and GMPLS</title>
<author fullname='D. King' initials='D.' role='editor' surname='King'><organization/></author>
<author fullname='A. Farrel' initials='A.' role='editor' surname='Farrel'><organization/></author>
<date month='November' year='2012'/>
<abstract><t>Computing optimum routes for Label Switched Paths (LSPs) across multiple domains in MPLS Traffic Engineering (MPLS-TE) and GMPLS networks presents a problem because no single point of path computation is aware of all of the links and resources in each domain.  A solution may be achieved using the Path Computation Element (PCE) architecture.</t><t>Where the sequence of domains is known a priori, various techniques can be employed to derive an optimum path.  If the domains are simply connected, or if the preferred points of interconnection are also known, the Per-Domain Path Computation technique can be used.  Where there are multiple connections between domains and there is no preference for the choice of points of interconnection, the Backward-Recursive PCE-based Computation (BRPC) procedure can be used to derive an optimal path.</t><t>This document examines techniques to establish the optimum path when the sequence of domains is not known in advance.  The document shows how the PCE architecture can be extended to allow the optimum sequence of domains to be selected, and the optimum end-to-end path to be derived through the use of a hierarchical relationship between domains.  This document is not an Internet Standards Track  specification; it is published for informational purposes.</t></abstract>
</front>
<seriesInfo name='RFC' value='6805'/>
<seriesInfo name='DOI' value='10.17487/RFC6805'/>
</reference>



<reference anchor='RFC7446' target='https://www.rfc-editor.org/info/rfc7446'>
<front>
<title>Routing and Wavelength Assignment Information Model for Wavelength Switched Optical Networks</title>
<author fullname='Y. Lee' initials='Y.' role='editor' surname='Lee'><organization/></author>
<author fullname='G. Bernstein' initials='G.' role='editor' surname='Bernstein'><organization/></author>
<author fullname='D. Li' initials='D.' surname='Li'><organization/></author>
<author fullname='W. Imajuku' initials='W.' surname='Imajuku'><organization/></author>
<date month='February' year='2015'/>
<abstract><t>This document provides a model of information needed by the Routing and Wavelength Assignment (RWA) process in Wavelength Switched Optical Networks (WSONs).  The purpose of the information described in this model is to facilitate constrained optical path computation in WSONs.  This model takes into account compatibility constraints between WSON signal attributes and network elements but does not include constraints due to optical impairments.  Aspects of this information that may be of use to other technologies utilizing a GMPLS control plane are discussed.</t></abstract>
</front>
<seriesInfo name='RFC' value='7446'/>
<seriesInfo name='DOI' value='10.17487/RFC7446'/>
</reference>




    </references>


<section anchor="examples"><name>Examples</name>

<t>This section contains examples of use of the model with RESTCONF
<xref target="RFC8040"/> and JSON encoding.</t>

<t>These examples show how path computation can be requested for the tunnels configuration provided in Appendix A of <xref target="I-D.ietf-teas-yang-te"/>.</t>

<section anchor="basic-example"><name>Basic Path Computation</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 12.1 of of <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>In this case, the TE Tunnel has only one primary path with no specific constraints.</t>

<figure><artwork type="ascii-art"><![CDATA[
POST /restconf/operations/ietf-te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="basic.json"><![CDATA[
{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 1,
          "tunnel-name": "Example_LSP_Tunnel_A_2",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "192.0.2.1",
          "destination": "192.0.2.4",
          "bidirectional": "false",
          "signaling-type": "te-types:path-setup-rsvp"
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="transient-state-example"><name>Path Computation with transient state</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 12.1 of of <xref target="I-D.ietf-teas-yang-te"/> requesting some transient state to be reported within the operational datastore, as described <xref target="temp-state"/>.</t>

<t>In this case, the TE Tunnel has only one primary path with no specific constraints.</t>

<figure><artwork type="ascii-art"><![CDATA[
POST /restconf/operations/ietf-te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="transient-state.json"><![CDATA[
{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 2,
          "tunnel-name": "Example_LSP_Tunnel_A_2",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "192.0.2.1",
          "destination": "192.0.2.4",
          "bidirectional": "false",
          "signaling-type": "te-types:path-setup-rsvp",
          "requested-state": {
            "transaction-id": "example"
          }
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="global-path-constraint-example"><name>Path Computation with Global Path Constraint</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 12.3 of of <xref target="I-D.ietf-teas-yang-te"/>. The 'named path constraint' is created in section 12.2 of <xref target="I-D.ietf-teas-yang-te"/> applies to this path computation request.</t>

<figure><artwork type="ascii-art"><![CDATA[
POST /restconf/operations/ietf-te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="global-path-constraint.json"><![CDATA[
{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 3,
          "tunnel-name": "Example_LSP_Tunnel_A_4_1",
          "path-name": "Simple_LSP_1",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "192.0.2.1",
          "destination": "192.0.2.4",
          "bidirectional": "false",
          "signaling-type": "path-setup-rsvp",
          "named-path-constraint": "max-hop-3",
          "requested-state": {}
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="tunnel-path-constraint-example"><name>Path Computation with Per-tunnel Path Constraint</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 12.4 of of <xref target="I-D.ietf-teas-yang-te"/>, using a per tunnel path constraint.</t>

<figure><artwork type="ascii-art"><![CDATA[
POST /restconf/operations/ietf-te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="tunnel-path-constraint.json"><![CDATA[
{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 4,
          "tunnel-name": "Example_LSP_Tunnel_A_4_2",
          "path-name": "path1",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "192.0.2.1",
          "destination": "192.0.2.4",
          "bidirectional": "false",
          "signaling-type": "te-types:path-setup-rsvp",
          "path-metric-bounds": {
            "path-metric-bound": [
              {
                "metric-type": "te-types:path-metric-hop",
                "upper-bound": "3"
              }
            ]
          }
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="path-computation-result"><name>Path Computation result</name>

<t>This example reports the output of the path computation RPC request described in <xref target="tunnel-path-constraint-example"/>.</t>

<figure><artwork type="ascii-art"><![CDATA[
HTTP/1.1 200 OK
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="computed-path.json"><![CDATA[
{
  "ietf-te:output": {
    "path-compute-result": {
      "ietf-te-path-computation:response": [
        {
          "response-id": 3,
          "computed-paths-properties": {
            "computed-path-properties": [
              {
                "k-index": "1",
                "path-properties": {
                  "path-route-objects": {
                    "path-route-object": [
                      {
                        "index": "1",
                        "numbered-node-hop": {
                          "node-id": "192.0.2.2"
                        }
                      },
                      {
                        "index": "2",
                        "numbered-node-hop": {
                          "node-id": "192.0.2.4"
                        }
                      }
                    ]
                  }
                }
              }
            ]
          },
          "tunnel-ref": "Example_LSP_Tunnel_A_4_1",
          "primary-path-ref": "path1"
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="path-computation-with-primary-and-secondary-paths"><name>Path Computation with Primary and Secondary Paths</name>

<t>This section contains examples of use of the model to compute primary and secondary paths described in section 12.6 of <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>These examples consider the cases where:
- primary and reverse paths are unidirectional and not co-routed (example-1);
- primary and reverse paths are bidirectional (example-3);
- primary and reverse paths are unidirectional and co-routed (example-4).</t>

<figure><artwork type="ascii-art"><![CDATA[
POST /restconf/operations/ietf-te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="primary-secondary-paths.json"><![CDATA[
{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 1,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "primary-1 (fwd)",
            "primary-path": {}
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 2,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "primary-2 (rev)",
            "primary-reverse-path": {
              "primary-path-request-ref": 1
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.3",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 3,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-1 (fwd)",
            "secondary-path": {
              "primary-path": [
                {
                  "path-request-ref": 1
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.1"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 4,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-2 (fwd)",
            "secondary-path": {
              "primary-path": [
                {
                  "path-request-ref": 1
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.5",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 5,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-3 (rev)",
            "secondary-reverse-path": {
              "primary-reverse-path": [
                {
                  "path-request-ref": 2
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.5"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.4",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 6,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-4 (rev)",
            "secondary-reverse-path": {
              "primary-reverse-path": [
                {
                  "path-request-ref": 2
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.4"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.3",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 7,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-5 (rev)",
            "secondary-reverse-path": {
              "primary-reverse-path": [
                {
                  "path-request-ref": 2
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.3"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.1",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 8,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-3",
            "path-name": "primary-1 (bidir)",
            "primary-path": {}
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 9,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-3",
            "path-name": "secondary-1 (bidir)",
            "secondary-path": {
              "primary-path": [
                {
                  "path-request-ref": 8
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.1"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 10,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-3",
            "path-name": "secondary-2 (bidir)",
            "secondary-path": {
              "primary-path": [
                {
                  "path-request-ref": 8
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.5",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 11,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-4",
            "path-name": "primary-1 (fwd)",
            "primary-path": {
              "co-routed": [null]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 12,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-4",
            "path-name": "primary-2 (rev)",
            "primary-reverse-path": {
              "primary-path-request-ref": 11
            }
          }
        },
        {
          "request-id": 13,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-4",
            "path-name": "secondary-1 (fwd)",
            "secondary-path": {
              "primary-path": [
                {
                  "co-routed": [null],
                  "path-request-ref": 11
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.1"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 14,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-4",
            "path-name": "secondary-2 (fwd)",
            "secondary-path": {
              "primary-path": [
                {
                  "co-routed": [null],
                  "path-request-ref": 11
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.5",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 15,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-3 (rev)",
            "secondary-reverse-path": {
              "primary-reverse-path": [
                {
                  "path-request-ref": 12
                }
              ]
            }
          }
        },
        {
          "request-id": 16,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-4 (rev)",
            "secondary-reverse-path": {
              "primary-reverse-path": [
                {
                  "path-request-ref": 12
                }
              ]
            }
          }
        }
      ],
      "ietf-te-path-computation:tunnel-attributes": [
        {
          "tunnel-name": "example-1",
          "source": "192.0.2.1",
          "destination": "192.0.2.5",
          "bidirectional": "false"
        },
        {
          "tunnel-name": "example-3",
          "source": "192.0.2.1",
          "destination": "192.0.2.5",
          "bidirectional": "true"
        },
        {
          "tunnel-name": "example-4",
          "source": "192.0.2.1",
          "destination": "192.0.2.5",
          "bidirectional": "false"
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
</section>
<section numbered="false" anchor="acknowledgments"><name>Acknowledgments</name>

<t>The authors would like to thank Igor Bryskin and Xian Zhang for
   participating in the initial discussions that have triggered this
   work and providing valuable insights.</t>

<t>The authors would like to thank the authors of the TE tunnel YANG
   data model <xref target="I-D.ietf-teas-yang-te"/>, in particular Igor Bryskin, Vishnu Pavan
   Beeram, Tarek Saad and Xufeng Liu, for their inputs to the
   discussions and support in having consistency between the Path
   Computation and TE tunnel YANG data models.</t>

<t>The authors would like to thank Adrian Farrel, Dhruv Dhody, Igor
   Bryskin, Julien Meuric and Lou Berger for their valuable input to the
   discussions that has clarified that the path being set up is not
   necessarily the same as the path that has been previously computed
   and, in particular to Dhruv Dhody, for his suggestion to describe the
   need for a path verification phase to check that the actual path
   being set up meets the required end-to-end metrics and constraints.</t>

<t>The authors would like to thank Aihua Guo, Lou Berger, Shaolong Gan,
   Martin Bjorklund and Tom Petch for their useful comments on how to
   define XPath statements in YANG RPCs.</t>

<t>The authors would like to thank Haomian Zheng, Yanlei Zheng, Tom
   Petch, Aihua Guo and Martin Bjorklund for their review and valuable
   comments to this document.</t>

<t>Previous versions of document were prepared using 2-Word-v2.0.template.dot.</t>

<t>This document was prepared using kramdown.</t>

</section>

    <section anchor="contributors" numbered="false" toc="include" removeInRFC="false">
        <name>Contributors</name>
    <contact initials="V." surname="Lopez" fullname="Victor Lopez">
      <organization>Nokia</organization>
      <address>
        <email>victor.lopez@nokia.com</email>
      </address>
    </contact>
    <contact initials="R." surname="Vilalta" fullname="Ricard Vilalta">
      <organization>CTTC</organization>
      <address>
        <email>ricard.vilalta@cttc.es</email>
      </address>
    </contact>
    <contact initials="K." surname="Sethuraman" fullname="Karthik Sethuraman">
      <organization>NEC</organization>
      <address>
        <email>karthik.sethuraman@necam.com</email>
      </address>
    </contact>
    <contact initials="M." surname="Scharf" fullname="Michael Scharf">
      <organization>Nokia</organization>
      <address>
        <email>michael.scharf@gmail.com</email>
      </address>
    </contact>
    <contact initials="D." surname="Beller" fullname="Dieter Beller">
      <organization>Nokia</organization>
      <address>
        <email>dieter.beller@nokia.com</email>
      </address>
    </contact>
    <contact initials="G." surname="Bruno" fullname="Gianmarco Bruno">
      <organization>Ericsson</organization>
      <address>
        <email>gianmarco.bruno@ericsson.com</email>
      </address>
    </contact>
    <contact initials="F." surname="Lazzeri" fullname="Francesco Lazzeri">
      <organization>Ericsson</organization>
      <address>
        <email>francesco.lazzeri@ericsson.com</email>
      </address>
    </contact>
    <contact initials="Y." surname="Lee" fullname="Young Lee">
      <organization>Samsung Electronics</organization>
      <address>
        <email>younglee.tx@gmail.com</email>
      </address>
    </contact>
    <contact initials="C." surname="Perocchio" fullname="Carlo Perocchio">
      <organization>Ericsson</organization>
      <address>
        <email>carlo.perocchio@ericsson.com</email>
      </address>
    </contact>
    <contact initials="O." surname="Dugeon" fullname="Olivier Dugeon">
      <organization>Orange Labs</organization>
      <address>
        <email>olivier.dugeon@orange.com</email>
      </address>
    </contact>
    <contact initials="J." surname="Meuric" fullname="Julien Meuric">
      <organization>Orange Labs</organization>
      <address>
        <email>julien.meuric@orange.com</email>
      </address>
    </contact>
    </section>

  </back>

<!-- ##markdown-source:
H4sIAAAAAAAAA+y9a3sbx5Eo/F3Po/8wy3wwGQOgdbGT0ElsiqQcvWtdjqjY
m13tu88QGJKzAjHYmYFo2tT729+6dXd1T/fMgHKySY5x9sQU0Jfq6urqquq6
TKfT+/fm1aJcXRxkm/Z8+tv79+7fa8t2WRxkh9lfDl98kx3nbZ49rxbFMjuv
6qwu/mdTNC30yNZ5e5nNq6v1ps3bslph3/zsrC7eH2R/yaEBtn+FjY50o0U1
X+VXMMGizs/baVnAvG2RN9Mb6DPFQadq0OnDB/fvNZuzq7Jp4J/tzRp6Pjt5
8/T+veuqfndRV5v1Qfbm5PA0+x7+jXB9g9/BuvK2uKjqm4OsaRf375Xr+iBr
603TPvzss9999hChbdp8tfivfFmtYNCborl/b10eZP/RVvNJ1lR1WxfnDfx1
c8V/AFhXxapt/pNWumkvq/rg/r0sm+L/ZBmv6lkL42VPNk3J39YVIrNYlG1V
8zdVDdj+0ya/LsrsTTG/XFXL6qLE2fHX4iovlwdZicPMzmCYry+p6Qxm70x2
WtQXJcxWLKu27Z/wRfWuzL0pGuo8O+POX6+wQXSWl808r7NvqtWP+bL4MVsU
2XFZCbjlqoEGs8SvNPObYlmcV6ty7k9f4aizC+m3AICr5uvWto1Ccrja1PlF
dnqZ11e5muKbqrpYFt7w+aq5zL++oB+iYwGJwkClGuXoslzl2Z9hdm7uMHVZ
AnE+/t3Xc2yxoQaz+aoz5HG+KmEB2VExh7UVy6U3etnMK2/YBTef4RH4+gK/
Y0DxTK7aujzbtDEK+66cw/fZt9W6+LF3g99Tw9kSG/Zs72vAdr2AYZf5stVY
PXrz5sgbsKaWs/fc8ut5285nTLfegP+a1+1l+Q6os72E/brKVxrME3/Md9x4
1tjGX6+KeX4VBfV5Ob/MgROdwn/q897FX3HTWUNNNXrDTQP0FzWeoWXRf2AW
1BIPDLTsQeg3Zb66yus5HMx6s6rUmCeAwaapVt6wF6b57Aybf11Io+jYT+t8
NS+AkrJv8x9/hKZDo5+bDrMld+gf/y/VBljot0Whxj3Nrxr89mRZzNsaT6fP
q26wz7IoZu0PPXg+ymtgjK+KuprDMRrEyhybz9ameT/UL5fl+xI28XhzUVSa
2l7C6i8KwNWZD3LFHWYL6vB1Rc2iQ/8/m2VZrLLnxQYAGDHyf1P72RW19wa+
f286nWbQvq3zeYv/hl5vLou6yIBZZM28WOU1MMFJBrccnLTl8gbYa5ZnlwAp
0MclfpedVuftNbSfHhfn5apY0CgvivZabr/d0+MXexkykOKHdpJd0/jtJfz/
ao0XDY4JF/MV3a7Zuq7el8B7s7MbGijP3sCtfF7Os5PVBQwPWMcx35zsZSue
w3Sps6v8Jjsr8AbYYA9YdYtXPo1Ttk02X9JXbZXBLuKU2dVm2ZbTRQWYWnXE
h1n2bIWANgXsfVM0+DeNJeNcV5vlAqAAYGFIkUNoZW9OusBBEx4bEFtd8UAl
MNVcT99gM1jCpiEM0GAO6vllVTWMu2rdlleA/M4Cmhnu45vLsslArtmgeGBg
aACZV3C9A5NvrjTI4cJx5nxzgX0R2Tjf6+KqAshfAfEXiw1s4BFQQ5Ptvn51
1OzBFUs7j8Tx+ulR9hf4zISc3v4HfnNy/OzNy9fZi5dvTg6yV0sQrgqYfb3M
54XtkV2XAAZNBt+sNldngLWKeWpUMgN4KuAksLXZZd4A2uBUrDdny7K5LBZm
/udVXVTvixpo2MMJoGMOFxogBXcDES6b7OgT0cL7rVAjOJvAXZaTPDo9y3Gz
AMcgpVWIk2J2MZvAtfLm6OWLp5nQ3+uTU/r3HkhtcM/DHiPhCJx4DK/KxQIl
hvv3fjrIfoWUUX3Af/0KqBD+XmzmRqTF39fz6RWKwB9+ObV/F6f2Mm+hIY5s
Tm9bXYAAAUMQWeNCYpijAdUkCEdneTO3yXj8QeNo4GC4nTYUla/XsEZa16I8
P4cdg/UCtIA2OGgN/MmHyf4GWgT+MUfKAbpo4TaFs90cEE1m2SGON2et5wlR
uRBI9hK2gr4Hcj988uIlUwoI+m46oNOfvoKT/JvHv3vw4cMESfAaSO8S5GA9
MGoMIBYCQ6mqGvS+HCVJXI/amfv3cA4zxZK3pc3fIdFkKE1dFEIG+XK+WfK4
u01RZE/LC2RWoLFBSw3P3sysUW4/7AK6F4DB6wD8Aj3IenGVR2/gPPAQv338
+SNcEh+KXKRjhswcMtjlxvBFmItpMsNR3KHq8F3owlwBGBu1V9g8A1CQwx2B
wgiUWNu9OHKT7x69ONrLaB3PiYiOiYju34sheff58ekRsSPoCwt/cTTFb5Dd
8Jww3PNnexPQLFddgDIDz/PT4yOa8RWeGVSJ8agLcPfvaehevVDz4VxT+EbN
ByC9erY3ywzpAJ4ff/igWDWQheY6V9YIgKC9InZ91OXV9ipAlKxBGzK8Go70
csNULCeITi4OiJo1qlVyH/Jag9MT2XVircvifbFsZpl/CedNA38wq+BTj3e7
HaIh5q2mBSSCrg3/23PJMNOWi+ann/4FcPbFw8dA3nDr2BtHfvjtZ48/M3QP
vUIzCMrSZEuAbTo6aXCfNGxIAbC+Ag8LEA9LmIYfw0pKuKodT2BoYdDYLYD2
G2zAY8CdcAxbfroBzgB/2p0wm76Y8OXVGrsEiCYXq6ppYdTr/GZC7NXikwxE
CzQQOdqAY/yGOW8J6Bdk/OZ3n3/4MMuebmrk0VcgJEzsRaGmatbFvMQFLIoW
hGliu3xVHNN+0SxLlnzocrRdaSTb3bJ+6gBXM8sI2AVI/dn0mFTuKSjpV+tp
1a6m2IGkHNhLXMRLkPeQtgChq2Zd1a2+r7Pdl8icTBsykP15BWLR7svjP+85
oGD9E8OEWbxzlyMQHu7XSQBqRnxTocxdRVn+HlCSn5XLsr2h+wj3MFhpBoe9
um5YntIMQgQ7g8xBUlfylJOlZjSGt4mwargVz5Yk7QIl76tTKvRqZFrQ6oum
yWsRWdxF0OAkAD9unVA0HQA8+NwZDvac+HD5I923a7fncDXlq4pu/mD6CvnE
xSXzB+84aay2m9UKEcciBR8GK16hJCuwy8Vkz4kVnwUKfxuMhLBsqqwp2ulm
PYGuy6KFjrg2Xi38w4q1NMwWeyFbKIIUr4JGYq7pziSQkyV4Lcxr4vIldbxE
cTvD082ECXQJjI3xJWTN9Aa6idZMeuYlxKMKQMcbJseuuMfAH5cljghUQkIH
8+xzFCuYbUKPXC2YrnSYbEcEumm1Wt7sELwTuALUdvVDpAgiXDUtqaTJFxXg
BYgNZGgQhvLVDd8ya5ZmzqoNswmQU4geCUVKpZSLswHhAH4tYa0FX1XZDpDu
DvU936zoTOR4ymUJCqV4TT/+4vPPURxCOjIXsW9hh3HkesHv1cX6ytzEeOm8
2rOUFkxEI/Buf/4Yr7GP1O7yv6Fu17eL5uLQoCN5AZNqDLlZSQqXm6/yC8Yj
MnlgQLCYQyW6GwH10eOHgqRf/Sp7UyDPEw7FAJ0ckxU3o//5I/MduaoLdVUv
5KrGs5ADZEu0txmqX8JtdCIKkZPJiOrkRyBNsjoAXcA/luXqXcOX+UX5HiRH
4WFWIjk68YA6TMooRC17BNQqQyNFe8O0jUc2XyP3N/cLby+uJXfKHQ6LL0cV
alxWVnENLup8fTkRns+XAygsNziKIhe4aWGvkIOXyHEWm9rwP08bJeQCvDSO
AMuQ50oL0tx+WeFLETP0UsOF6DQ0h3NUKxhvQrDDlmzaaXU+NW35UIOg0c4B
hqew3OKHHE/4hO9FZgxGYyWUBWooo0nY27f5GVq5ASS4tRa8M7vfnr7a42vi
xkh/eLOvnIgEGEQcoSqNP53BF9flor1k3CJTksU4PApWBCC5TmAmWhHqMEaq
97iPISJWeHziPvEItOTLgY5iXSwZZpipS6sioDBdkWYgUt4arWAN6+AFHQmi
L+hH2noWTMlnBIfYkDEGrwQjPMEqw22G/t8XpCWxRJVnP8JGG0pECcqJXMHa
8oytBjDE4cpsOO+hmBPY2MI0vcqeffMKxdgcTwOq5Zu2WlVX1abJTm+atria
2Sv24RcfPmghxbEUEk+F3xoZTjG6Bld+Xm1WAR/nW9uyqLrAV7ocTt6VmQa/
WvBXGv2aV55XKF2yQFQJj4jeGsAQ1WyvamjzAxlEWFh+gQfrRX6FOgn1ehbM
NCHbO+04Lc0RC0t6irFXZ/8NFMHEgyrCmidbKPmIXnnxhYt/w0u7mpf2zCuh
vK4LkPZXC4tYuKRB+C9IYNssUZ6Hi7K5rK5XfB8Dv57yqLLcW1ltJp9bHoe7
Z97nNntt7UH4T+g89T/hv9M/YWegkikbq2R4EXT0l+YnMhP/O3z+U2aGzn4L
6Zx1PtIZTciq83Q973buPObjmp8e/Rt8pCVbVx0WM/I9+MOOJRlmaZ19ke3Y
oUNCFm967gbKagvgRoHJmyaMmbuBEsqLFZvwPAKcdcboMZn3CJb9FvNgCtyP
0VPU5/Pf/uY3X4BmAYdh/ExXIL7xUuEEFzNj34bzPiWJTWzgf27wyaGxB5RU
hEakEdiqhqR+X9izBjoj76JU1iirL40EnKmo+XI/PX7hWT2Qs3XMy4oLWo1h
C/GOF0pD1Kj+lfPWbDcad52kerZpPasUXhEg4DO/Mc2MeI9sD0QjZDLF+Wap
gRTk8G+NDH6Zvy94U8hfBa0si2JdMEHzBR4YuxSaWmtNOQBBYP6uaPeN6QFt
eReiGe3+9NO6Kqeb+YcPe1/SaJ5hOzQNAYD0PuBMrj/9dLWQ7nTsiFUf4Vpq
YdLwF+zXqhCtHXos5jLjjEiGV0uc8axez+knGuunny7X84L+bfZijcOAZn5j
UJZd4t1SOQGQtzJmY7Ic3VsiiFlZOSvYSvEEMHWNTV4X803dwExd+daqOA8E
zD9pu6KR2lju+eK3nxm5hx6EGNXmhktuS3DBGUKakAgpzQV8I/XgywsbIDKD
7fcgfxhrBx06vhBJ0ljT3GYQMsP/9BNozFNLDQT0/wcf4HfzspzmYs7q/Xwa
3jifDve57Xwxpk+AvFF9PMv6yHm2hw1xIHj4dCwO1FzpGTzkfjrUugN6MEIE
Kvn5Oz1BbORuz9vkP2Ijx/rzfqb6++PH+rNOke5vCCXVXz2BRPvr8bdfvz9+
EvOfpjBvNu7TfnqK7bnfIOw6M5/vZqlPquuB+9PnJp0WXtdP+4kraOR1BTnw
QXb7h6z3/0Gjh4SIYNZPR836aXdWnPcg0cN9DgT53a5JxBr8JruO+YzqGqer
dFcFHZ2c7Dagh3TXA+/fRx4sB2O77tNOTD99u3XXffuV7Tuy6777yvbt72qw
up8J6RCG3ypsJ7sKVgVa+pvmdX9Hu+LI8MOh/TnLjtXfT+B/7T4nuQxj1QFM
2PbII3apCJreKswZnHl7nu4qfW91z7FdGasM8L4RgX7fK2W4kd86bAuHOoi1
1zSfnWSa5mPt1cde8ygusaTnRCmrnKaFcCPf7dy/B1IWCtZTtGT8YYdGECVr
1v7Q7hjzji+roXnhulgu8b/uF/VWpt7nMxjfaQxs72QTFEmGzMn3jZDptAi2
o6BRDA0ZJEHWbQlN3pfFtShY/N7Md4ExcWphdALazDlaw/PFohTrrDTXzUCm
5ZGcv5J1p0OgApP0M9LX+OV+4Z5P7EMrb7m6f62nHSt08tLu7Y4WFNEILKik
pze73AhAGR7OddU0JRoN1Q44vyPSbI3ygqNcX1ZLOxYNYXAH24lGxZ33Zd1u
cB6Q33dY17ffoaWp2TH4s1oq60NzsoCSnTS0QUWpJEApvkN6eBUhrYtS1IGN
+jECpeykosy9Su1vYAIMxMgynyiMK4uhL9Jl2kvQjC8uY7uhvS/wZ42MPU/3
Dh18jFPTZbFcN/JYll4Kq57vVmLirAt+crD6bvSJ2KdovenbqF2TLT6z1CiT
3p0icndtE4NM+rhjIPJNsgQoA4PwxXHbB8jQCJmVDbltFJCJg9dTuDKzgH23
nBgYEwWqL4fd7tNA+9m+uf4Y4AgYE4H2AV7oL7PvXj2gr7979Th7acCwg3S6
T2Sx+D9vQyCyfQOEahsBQn6Qxb4Nl2KAiIJgN0J+xxU8lBV8blYQANABIRyk
s5AstRGdnt2ulpg0zXgAdAehZTySZXyRvURZ7PVjHEVPz/0ENNnx2//SHwe5
T7Bq+okC2+A6QY5qcjMcgPVoSH0Iz4qd3P4wQlHrcBkZZBvG1Dm0llXN0veN
z5Yi8DqkkMziXRooycgX/NztPh6PcUiZ8aWrrxDz7hneOjyAYzMDLCb+0SyG
5rdweIN44OruHT4zwGGmcSiCI9qFQtP62yz8BIwmwWDkgIXdAwZjvg5hiJzS
2EJiEAx3DXYhBsGI+R2rGWAv/meq2Iv+Xs8f4zWpVUwGuEviExxPN/tWzOZn
YS527o/iLhYNaQUhxl28MRQaiL1YJoD8Ra+xZ4WKQ0lv5ivIncxn//bl0zRq
tQgz85nTeV2Rxy8D0QFE7bkDI1DczOf25aGypzjWooCIMiiFeTZcwv+9ZXhM
ZzdIQoThD858S/95O719eWIesffDth0g/M1/yxT/FtYQ2ZmkCGN6cx96gg63
pCvCzOKDIDaf3ALkb7ujJEQY9yEUvrWQxNt6AEQGQaQRIgGTx5rzd0UY00Mh
m2b2p4+LMLNwEP2P25dHAdfpijCRT2fTUiLMbFAP0IOkZJithJjOqBYPh3NS
019d3jR0yL/r4y0JEaZn1V1KjqlJM6+FP0KEx2wjv8T5S1cyT4ouKf4yVnRJ
cJage1pmiXKW0TJLjKMkpg5v/ChHGSuqhHwkhfCImBHykdHySYd3hOpPr0ii
ecc2IkmaW/TKIF1ucScZ5C4iR8wOrE2BnkGY7nsbOGICAlTAWxO1CpvQAT2w
ZyHu+g4MGLICA1wm6RdMDLNyLSGD2TlbRp+9IonDWufgUOKCXj80FrZDdBFf
swNN2vA4CN0l2ULRJZPB2glMsjvGJrs2jFbkGPYQLlvnhm9MdTTOeZE7V81a
HIOb1o5mTLlGRuNIUvEw/+7Vg+l3rx6zrRVm+e7VQ/j353smfoe9dYyv7XxT
k5NO0+btpgnhpUHqoqk2NUaBir9pTMOUQL/3MHRVT230krYl5i3nASkabejs
QW8Qy6l3+6UatysqK3fknCgH3xCqFl2oYQpDPIS1CUaDwog0UrnCEJz5vNpg
iINApDyMKdpjNXGO3xibi8Zr1YYPJ5yDcn5DWMGdXRaLi4I3yNtJz/xLEUi4
Zg7Wp3F4y9iJV/y83EJs2D8eJ3dGdJA/bAeH47TVtCALA5qVayQgdNeKvF2M
sfL2PRzHe/Q8VSeesZx90fuQsdHrgfj8w4PPsv2DrrIvH/xJmsUm2wfw3k6j
H/op4iiwr5dEQ3/+mbdaeXD13gDdPdKHjiwTu2bEy8A06OkrclJ33rfDffe7
8xpLKzXYj6FIfoqs13zeQgNzWTKuPvd+8vtwi+ztQdIGgD9xqzTpPOx+TVbe
n4s8exwoDmJXrfGoH3537bz8SNedrHvhyk/eHesFbHiXm3w74mJTnNc+VaUt
E5Hoj8bevYnryIR8ofvpnB7okvxLsS4axXnDm7H0PZgVGCBUSjQe+8x6Q9px
rDkicF5cF7Xx6DQX1ZGKRKEQkBvYg3IuoRQS2udeBXVQCjo2OqHFTUPcHsCz
lzlHIertd09y/dcdefHKdrk+PdsrT9mrKltWqwu0LeXLcrGvAktwxP5BRDSg
SRtcC6ef4T2UCHaM3+AI22xRNvNN0xh5q6YsJICuXL3x4nlhv13xRX3uef3a
HBthqIWRJhFiSWWC/gTQgbs2JnK5liwE9l1arkZJtwGIuzKB/tRuavrTBW2F
R7dn5lTbd/Tcd+O96wVrPoHn6oDP5q2XumHIK9Tz/os7ugSQKH/A8R608XHH
e43GLI09HqN38xYd8pRM9QISMy6YkV59/qXDvp2D0D5IQevDFcVP0qdzyCc0
PqP3w8MYzEN9077J9l5VzqDx6XWvyI0ev+R1rxhWhnvdqv+N9oqtwO//b739
Y2vpm99bRmKnD/qW7Y0YW14gFoUA3rKPJW+p+K2l+qvJretibP63kZZmDNVe
/tyPI+Ftt6Ua41BgFqfF7tIOTMtvXMs/+WMEo7+Nj7GfhiOCj7extez34KMz
afaz7Omx3tOn2/fvmX/EAvqpOsBibIDwK/93GOAvHztADAIrhTC/DgZwvz6M
4iCiXXgD9CsfIExdLafO78toH55cxQIL2ctKPyyqY+PTsk3cBRREMpAQWSew
JjstxV8FIh2Ju2K50rmS2CnikEOZ9lhh8aQbdU1ZI+GdjGgChGfdYvGRhhER
8C7WM2c5Y1sOj1/klK/IxlsbSRmT0GBKMlgSxrVdUIaynOMEIy55qGHN802Q
1JFXIkCSq2TXKOcpI84ol+3yCiWpnk4DZ3Fi5GFSrwrJflP7LoSuI8/r/Bpj
xDGGIDQx0EBDBBEaDp045BpJjH7EUugl6fMRS0orJkxBpRXzEfEo1h4YupDW
xbwANXIx01q5yZH3pmcFeQMbHAVbxdTdv2dsm57GfTg9msD/HE+yk+mfCOSn
0z+ZOaND1kW7qVcOA3x0loU6GHysVLg5nqXmwKV7gFmNto1O2DYfDg6561Sh
+/cM/RoFWFJN4rootpSCAnliHOyswLNgIVpsAAxoGrHOigYN5Ih8YMWWeV+B
zkxWO7f6vRG7cV1iRgXK16AXfDwFxGZNydHK9+9Jfgia1wLczThpLR8+id6/
F99sZRWBKc1+RlJJykKenSs92Oqz/pb2Hh9MN7/Sy9VngHDrspU4fqrhuX9P
XiRC12J33alg6T2b/keNh2kXnQYuDiS7vLEyWAL8PR3nna8BhFy4miOvBmjB
pB8rm2bD6X34/LpAdf8GQFr9n02JeV/KC7HlP/xMMzdO7kXPWmXrMqQAtbeX
wFuXhTJdmZcinTdN3iCiuVHTfAxpZFlela2Cnll87NEjMKg1XWqM5jciW9l5
cV3UCSBKxdvFonet0xV6NGRv2rJh0GGJSOaltbE8pTRqdWGy500yDgam5Hbr
OSVi4Iw+ynYkEdxiPFIx3514b71nOnZ+IkeHkhY5YuWLsRvULGiKxAOoybX1
yQVE2NwIHpEJgehnoa1sRuPtRaDnL6uNTcvaY/25zV6qfHN9dqJtrFW39v+i
9gkzhGnVCeFOTNKxL8T7WsUhYQeyXb6bxqwkdpZE9wFz0nB3lz92TPfA5pUy
LYWmMdP9Njs+UoPHTHORZqp7Z7qYlSdsFgCvp7vNugpe2Kz7wEUfY2URODr2
IoviePcD980r9/1Bp6Xprqw6qqEJXXyrunstTXc38IEfuJmJ85HFgtdSdT8+
epDdUiSwNXw4OJ21g1o+NC317LfwwTlus1cnD3z1PMPvHrLKLy397v91e2u/
5A5vVfd9Nbtu2bf2twoLA2v3FWITCOphgb/1Wia4l2mDK35kyaar/w+a1BX2
Yr+PsfaH7MZR/ncDPJWX0DWQ+ie3b4SDyF88wqBV2PU7PnoklBZdRZdpR2Aw
1BJ+BuY2dPb7aeczPCf/1dss/cbLsocxsPTIHum4WhoiYVTpek2xlMIJXSXA
EhP8npuUYiSxhXlvHmS7wDH2sHVR0psXsoWqpj1jkRYBWlb5Irsq5UXai0s0
cpxRgMXWANpnhTn/Vh29wKr0MPEUZmPRFGfEfz7ak1yJ1FajreN15CDV8HhS
jC+pWLMQpzh1IKOXmKzDk+AwXbdNP32ig4VdikE/mZCDUgWpoqrBmqtNjkgQ
cDYnA4Sx3kiaK+1GZnUDHdarANrNJTGRnxZnGCOeXcRmSNRpQtOv+v22MzHY
4KbyIzVsFuFK77JMCczIn0bF6HaTH5ogXM4OysGsoIZh0qdBcmEIHlnfA9Jz
xMmq5S1xphw1gyFyk+TdkoWoM2iw07kTyZevEacvq46YtFGij4zJ4mTqMtiA
epXU6VLltSXnB4m1PqV181iU+XD3u9NXb/ay82V+oW2ar19lu69l81/lNbCc
lpRvzjroKXBm3z0VnDea8yaSkkIg7oxY1k62++T1q6O9DKa8rBacM5ntBBkG
1JerOb+502kFvNJ45H5wBBBDt6bJLwqyglSyZ1i2z1GJs6Wiex5ZWCmD1up9
tXzvsm9qjZZsOnahknXRWa4KZ6tpCvbVPIOVGgCMt0Vtg71Niq3XlN4PDrZA
zasF8kRrhZ8GFhfcrOsCmC1ya16JWxktgbJk8QYfncyyE7u0RlWwAIivsAAe
2xZkJVQ6xFogncKJzoR0BrjgBRonD5nsYZ1sGOIZaRycC8fGXGhA4phgdtlF
kx3cToezmARo88uyeF+YKbT5YWYJHe9QOjDWSSnDYn7XJrGDsRIiIdljIln6
HiGUmHKbM8naidNkPFap7qiOn/b9lnrxFnPJ7pM9+SLy2xH/Nu7R/Lbvt/4h
jAsfSvWYOHuq8m++HTVELHzZ/fl2aAhOwBwfguJ+TIMeKLRnoBL1/gg/H2uE
pIfYD74gIU1D0T/EpwZt/6+jC+NwMZIu7GIUwN+Wq3eJxrhXSXDUWM80rfeM
Zzr0L+/9EGn3+ql4zQyhH+71NHvrfZFqZklo2j+p+fP0dkyzvtFie+rL/5p3
GS2AeNWp8KrQfZM6GEY2IO7bNKQouJgnv3TeUCel2NyhfSXbrB8k3TdcjorE
M5PG2lwIhuVzwYJZmBpcwegLmfYiwRzITAaH/ssbB28gHLmZ63RihBfTZWJe
7HLvljwOGx6xHNCZkW78TWPBeeXXDIC7wxO4JtGs5gTkKf50bJ8jUbrA9zPM
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
/1Xw820H+O5ysiGtlj8x8dr1Tmu4Q723kpidsEy5uTrHU5xumT3RFikOKXvG
7N+Lh4hbnwKOR+NI6HVawBxhx2FBQdlyQjtOPARTokYxS3Kh0t350rStUkRi
nUlUI79weWKB0U5ybttG25mcQCb+uCk4OIKseZ6BO0glOlHhX3TZ3rCvwq7Y
CSfOQIj2RQpOmspvjOvafm1bSgi3Inm5+CSinhNcEhVwcSNsE7to+xj22KNF
jEAgpss95AemjQU/1coqzbrdv0TbGW6hprVcI8oiQkAtqntBibX+mQFyqx0A
KQuxMwBU1g+U+aSA63bX83XW1s+7zm7YD8B/IFz52RB0Bp7eg5h7IX5etkiP
dCbaIO+Br3LRmQ7yqqTb1NgZnZHmhYpLMOdLpHBmMnTAlFcMDnBAJdlMeIc9
epp9SW3wxHJubKJEzLKRrwwQNJZk0PKWSOOT0UClHIiwR6tDB+lUdGGFti4w
8VW9oYR6rEyNq9AhxnZfT4/q5mzWHk6W16uey8b1qOjhE2NUQ5cHuJiW7uVH
pqd/FxKqFHe2OA0q7zZhsVlkMxt5lSup113nTlyOXOn6YV0lnDC7TqP4EUN3
MrmppzJ1a5u8o8mTojOoOQrVykWWqem9pzhzZDBdqvfCJk9poTTr7keh4oGr
b7xc3H//2Wa3XV78L6mGWUc89WfruUnD+fymd51w8NZMLVN3+PjVDk+f9V2S
qR7ZKPn77MapnV1ztebAckWNuTlU3YOAR5fxh/G8c/2hFcnL4mNuCUpX23kE
DQwYVpRXQ3rlAaIxjHvpS1et16wzKEngLTI448FCg+B8yW0iM2AkJVc/EvzJ
5lAyAh2q6a1NvQVvODF8bnJUwHeLkoph+POOYhU/45FLiJOwQBf9Fe2SGY6l
u6WMIFnn2BzsmnmGm0fYmTFRJC0UPTOyb9aomTNlKFAdvZlTQRHezniH+FCR
ZkB1HJbsrLs3moo1adkKVM6+2muLNaKtZy9WdynrjiRHkazhA2H76D1oRh1M
wy76WQWvJs4uQq8WxSyCl2iPVURl8S0YBnOLEZxRJoizDWsR4Ans22DlOfCw
9mESAusZQ76hJ9uSV2x5T97tdG9ztD/2XN/xUN/1RMfwlzzXUeLwT7c1z/sJ
vzVNTCiJYukVFuk93f6TmFUEJt7B1wiPn+E7nBln9uo7M+4sR06NlijchTv2
skVlsGoKD4cd7KvjFL2CpYPTq0cesexjZMHkr6lTm7yavZ5RSbrvEAcDDJ1j
/bnjUU7NOHCaI4v9uCt61JFO0G7Pld05z83kLld28lDbK1vNj1ftNtd14qgP
XdvqKXjw2tbo0te3ecGNXuHPHIoi6ko+bB0Xo39gIe+YsFRtGWe1MJUO0KVq
3xh5Zq76nwIq7oxu09kGchFlWwvOZcZFR/I+7lGbKjAu77ZeBD/j4kCu+FTU
wkGOQyoDp62utcyp6px6fFcWGuNwrOmZJxaHBMoojFfM1bq9yT7RYShTcd6d
SlaJT/jtmAW+nkq5D/qr5E585bbyvJmMI3NnWyQrtkoCz8lKqaGLolPJ/m1e
dRX+YV43GI+cQMdzcp9+m98AHK/yRMoyCYluXHiy8vZmGl7SCJ0F2OhgK1Ny
wn+TL9ZWqHCudsapJhLDOViBOPb0T6TKQQ7iIalgte4kwrUcY+K9kbaWh2kV
2bjeEDHrwrtsELZmWPQiKJS1stexbjJ0Avpu+Gyk22K0kR9TZ9tK867j8/SP
nP6s2JdJ5L/7K2P17AzSfUGOvfp6XbrPxuku0WX5/t2xFWapFYaSgNd8m7Vk
o9aSuPW7u9l5KbIlbjAoOW+GHiEc6xHyjruXCa80hbFCmzmcq2uvbKqh2MUN
AF7OySU4yJ0r05kSMMJOTEgP3hQsKbAuey7PAC29wowg/CHfW943lYTK+4Se
5q7PssIBnVO8693nMR/p73LMfNXtr/LNeL0xWTj+3J1+3OwDjuaZbjvG3dzr
MMbp3Osw4HqeOASdnQ3DKaNlBDnJe+dSouSWYe1jj3T1dETHXpkZGwA2fIYk
sM2IyEnZC6RwfTk5aWCzotzUJoB/qV667E3Sx/NoJAqhCV3BtVSVzmgKN18I
sKmFt55P8SFUnG2yN/gouijzizq/kn356SdA2dS0+yCeh8BXro3HiOti3r1C
IGwaDeQIWDh2sUF/DeZrOukm53JBNhdkZoH58dtETjse8CA54r17H51j9J49
XUrp81OMmqOybTSu7hfzIFTaaOBA6OupMf/B+Iuf5z7YaWLmUd6DsTadGcPV
ec6DQ7MEvoOx5pk3Ydp1MLrmcX53Qw+k495Hxz6PDr2NmE1UIFOoTH+/ecUh
+Qu9UlKS+vt1HsG+6psv9k47+s3oDgu/88rHLD0eXKYEu/7u8UizO3V3YWej
u8fe0O70hLbdC9rHP6Dd7f3s45/PBg+x9wy/5ePG9m8bWzxtfOTLxh0eNj7y
XWME5xhEdtZn5h6yY8eDRgfOlhsgFUN6pwF0SOnoAVKm+I+yxG9niP94O/zd
zPAfb4UPJSd2DVffZtt483f7bS1UZF2HY//X24AVhadCNUlfvnrRobdxrFkW
2UDf/7UfyNQR9uCIuhr/nNAMs5RMj5/wM44174Oob6ujvXu8jLuEEpXJ1CcU
irKtozy6nbcI8oh0TmY04E/E2tEdJJ3cYItB0nkO+MMJDCKTJ1Me9PdLZz+Q
fmyZijCfqGnHb5cNWnai7XsMO9H2vXYdraZGkjf4vDbSAm4t/eW74ia4xMJu
0AJ/j2lmBGyXOpO3KrbvbiUdnwdfdJsyFUeVQY3LYhUhP7WxAmCx2lyJa/cg
kqZUT2NRLPqxlY3HVrYltrLx2MoS2Mo6OE9iK+tsZxxbMpWQr+Yyvg1F8UBB
pDrCaEE6uCx+mPpIwtZe+uhgl3T26M48Knk0cfRozujogodTRqeu0niOzFFb
6wYJckhHPpHLxXU3xkxJ/xdk94/1ko7eO63fDZbP9WkS3WVnqU0f0CE5hANI
MYF0I7O13boCvX1khZ1eQ50ErHi1gZGdE4UHtlijTca/1RpNr5FgxhP032GN
41fp+g+k4B/GVax0wRhsRfr9LfCVqm3wj4JuV/xgDJK9OggjQewpiXAXJG11
8LhQwpiV2ZoJI2Ey5RNGNM8MRyzmlyuS9Ab4YgDbwS7c6wXef6N7yZTSb/xs
6lO3ogDQIPkS0+Rvu2RHneP6mI9B7jaEjIlP+xGUGaVl2dUhbztQmKbGQh+/
8CLXtPGL6rmms8g17XfrvaYdgHe8pt0APde0xsTYa9p+bre4pnWnbNtrOtJ5
i2s6scbeiye5xr5rJwLm+GtnYI3jV+n63+He8HE19poOsTXymv658bXNNf33
iO7+azpE8uA1HQFxy2t6CElbHbz0NZ35Tfuv6azbvu+a7n5GXdPdz+2Iazra
Kxu+plP9zGe7azq+5P5rOv0ZcU3THpTFWV3k74q6exlmYRPMLWv/kVDRs0i/
WH70iCEhUq2pY6XjT8TUEKvRFLXxdRvGJom3jPk8aisKmrMXxqvG1GnsmBi6
jzO8KGvWjQ7TuPXI4bGZFUN7TfqU9ByFzKd3JqHOFJbZR9Ok6k8CRemMqfrj
mV6Yf6WSp/Z2S+dRHQEqbYCupxkaxjoNeu1XEctVrwUyWm6zA1+ndEsMxmS5
lsiskVoZ3VbRsiwp2KQUSw9gQfmVHqh6tkxdl7EyK1Fq90urdBagyqnEoI+U
UOkDfRijtlRKApIkHiMlUe66tUHpEw1JWNc2/olVGNGjBCqZqGLTfHmd34SL
ixpLuWVMC7u9i+ZluWaobSmW2atheRdqn1YV3qyDmlTYYVh7isEc0wHiMEek
/hCEQUm/D+Z+qF2f8SK5Wu+A1uOtuF/T+eg1j9Bo/tfQFNVWPOSkNJRw+nFa
Se9CB4m4o3147DumcdgGWVLL0E2yfpkpaHqbFqG6LbOkBhFtaz6jtIbIEnxq
yAZUgKSNS7hswsgVYeB0rQy4lmV3NIklzWDZSNOX3bMhc5e3ZWNMXF6HUWat
DswJ40wE5rg5xgNhjAkmCXM/1HfhOGq9w+Yot+JBE9THrXmcqel/B00pM5JD
To/pyJt+tLkovdBBIo6ZhRykCVOQN1/c/JP5E/Ups1ln3h7dNgJA3LTTbWs+
Y8054RK2Y8wKx5FnEzdq96mk83P3ecQqDKC0SRC/9vhzW4d+u4Cb0B0kS7RJ
3BbSXDUkFCRdXLL4NRG7GTxImjav2xQtDtDZWCIbSWFd8sruQDkfQTaCkmIV
ZWr/9yKkaYsoNxq73JHsJVhomnLrfHVRTM/K9ipfY8se5yy2dm7aX47sPzWF
/nJkA4T8Ax/ZoUKywQketgvzoFuUkY10HFdFNr4MCjS3jEcQ0pbAFDqlzJyP
rGmGaYNyfkFhb1SFMGowUMVQgzRUxNAzNY6pYag7jCph6HXYpoKhZ0vdpoCh
N+NA/UJvkoHyhbrtYPVC3fgX//df/N9t038G//dR5TV9zjiiumaqQ7K4psfo
huJiBO4RETHYclwsDE08Ngrm7/INeut35y3emrd4X06AYct0BldkN0GSanCb
aBM+bXo7sGWyq+gYvfmhoj1600ONWFIk05XfK0utLvCq8FpvsY5su3XoPbV5
fdTvFoCBhE3dLlvla+rpPpyuqdt5q2xN3e79nCvTTUfwL6/9CC7mtR/mZbTb
N6v5ZV2txJnIxpebn98Xc/Nvy82X+Q9qT/U2ulbhg3nyaVwPbBLn/Jq+Vteb
gkb7BQUDjHJKyTT9DigfXtu0U0qmpg/9JgLoUn4T/kxJvwmvWcRvoguJ85uI
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
rbqyup/btY+5/QnSs4SX/h+kaAHvaqYCAA==

-->

</rfc>

