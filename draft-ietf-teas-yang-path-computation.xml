<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.17 (Ruby 2.7.0) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc comments="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-teas-yang-path-computation-19" category="std" consensus="true" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="Yang for Path Computation">A YANG Data Model for requesting path computation</title>

    <author initials="I." surname="Busi" fullname="Italo Busi" role="editor">
      <organization>Huawei Technologies</organization>
      <address>
        <email>italo.busi@huawei.com</email>
      </address>
    </author>
    <author initials="S." surname="Belotti" fullname="Sergio Belotti" role="editor">
      <organization>Nokia</organization>
      <address>
        <email>sergio.belotti@nokia.com</email>
      </address>
    </author>
    <author initials="O." surname="Gonzalez de Dios" fullname="Oscar Gonzalez de Dios">
      <organization>Telefonica</organization>
      <address>
        <email>oscar.gonzalezdedios@telefonica.com</email>
      </address>
    </author>
    <author initials="A." surname="Sharma" fullname="Anurag Sharma">
      <organization>Google</organization>
      <address>
        <email>ansha@google.com</email>
      </address>
    </author>
    <author initials="Y." surname="Shi" fullname="Yan Shi">
      <organization>China Unicom</organization>
      <address>
        <email>shiyan49@chinaunicom.cn</email>
      </address>
    </author>
    <author initials="D." surname="Ceccarelli" fullname="Daniele Ceccarelli">
      <organization>Ericsson</organization>
      <address>
        <email>daniele.ceccarelli@ericsson.com</email>
      </address>
    </author>

    <date year="2023" month="January" day="12"/>

    
    <workgroup>TEAS Working Group</workgroup>
    

    <abstract>


<t>There are scenarios, typically in a hierarchical Software-Defined
   Networking (SDN) context, where the topology information provided by
   a Traffic Engineering (TE) network provider may be insufficient for
   its client to perform multi-domain path computation. In these cases the
   client would need to request the TE network provider to compute some
   intra-domain paths to be used by the client to choose the optimal multi-domain paths.</t>

<t>This document provides a mechanism to request path computation by augmenting the Remote Procedure Calls (RPCs) defined in RFC YYYY.</t>

<t>[RFC EDITOR NOTE: Please replace RFC YYYY with the RFC number of
   draft-ietf-teas-yang-te once it has been published.</t>

<t>Moreover, this document describes some use cases where the path
   computation request, via YANG-based protocols (e.g., NETCONF or
   RESTCONF), can be needed.</t>



    </abstract>



  </front>

  <middle>


<section anchor="intro"><name>Introduction</name>

<t anchor="pc-model">There are scenarios, typically in a hierarchical Software-Defined
   Networking (SDN) context, where the topology information provided by
   a Traffic Engineering (TE) network provider may be insufficient for
   its client to perform multi-domain path computation. In these cases the
   client would need to request the TE network provider to compute some
   intra-domain paths that could be used together with its topology information
   to compute the multi-domain path.</t>

<t>These types of scenarios can be applied to different interfaces in
   different reference architectures:</t>

<t><list style="symbols">
  <t>Application-Based Network Operations (ABNO) control interface
<xref target="RFC7491"/>, in which an Application Service Coordinator can request the
ABNO controller to take in charge path calculation (see Figure 1
in <xref target="RFC7491"/>).</t>
  <t>Abstraction and Control of TE Networks (ACTN) <xref target="RFC8453"/>, where a
controller hierarchy is defined.
In the ACTN context, path computation is needed on the interface
between Customer Network Controller (CNC)  and Multi-Domain
Service Coordinator (MDSC), called CNC-MDSC Interface (CMI),
and on the interface between MSDC and Provisioning Network
Controller (PNC), called MDSC-PNC Interface  (MPI). 
<xref target="RFC8454"/> describes an information model for the Path
Computation request.  <vspace blankLines='1'/>
Multiple protocol solutions can be used for communication between
different controller hierarchical levels. This document assumes that
the controllers are communicating using YANG-based protocols (e.g.,
NETCONF <xref target="RFC6241"/> or RESTCONF <xref target="RFC8040"/>).  <vspace blankLines='1'/>
Path Computation Elements (PCEs), controllers and orchestrators
perform their operations based on Traffic Engineering Databases
(TED). Such TEDs can be described, in a technology agnostic way, with
the YANG data model for TE Topologies <xref target="RFC8795"/>. Furthermore, the
technology specific details of the TED are modelled in the technology
specific topology models, e.g., the <xref target="I-D.ietf-ccamp-otn-topo-yang"/> for Optical Transport
Network (OTN) Optical Data Unit (ODU) technologies, which augment the
common TE topology model in <xref target="RFC8795"/>.  <vspace blankLines='1'/>
The availability of such topology models allows the provisioning of
the TED using YANG-based protocols (e.g., NETCONF or RESTCONF).
Furthermore, it enables a PCE/controller performing the necessary
abstractions or modifications and offering this customized topology
to another PCE/controller or high level orchestrator.  <vspace blankLines='1'/>
The tunnels that can be provided over the networks described with the
topology models can be also set-up, deleted and modified via YANG-
based protocols (e.g., NETCONF or RESTCONF) using the TE tunnel YANG
data model <xref target="I-D.ietf-teas-yang-te"/>.  <vspace blankLines='1'/>
This document defines a YANG data model <xref target="RFC7950"/> that augments the RPC defined in <xref target="I-D.ietf-teas-yang-te"/>. The use of this RPC is complimentary to the configuration of a TE tunnel path in "compute-only" mode, as described in <xref target="I-D.ietf-teas-yang-te"/>.  <vspace blankLines='1'/>
The YANG data model definition does not make any assumption about
whether that the client or the server implement a "PCE"
functionality, as defined in <xref target="RFC4655"/>, and the Path Computation
Element Communication Protocol (PCEP) protocol, as defined in
<xref target="RFC5440"/>.  <vspace blankLines='1'/>
Moreover, this document describes some use cases where a path
computation request, via YANG-based protocols (e.g., NETCONF or
RESTCONF), can be needed.  <vspace blankLines='1'/>
The YANG data model defined in this document conforms to the Network
Management Datastore Architecture <xref target="RFC8342"/>.</t>
</list></t>

<section anchor="terminology"><name>Terminology</name>

<t>TED:</t>

<ul empty="true"><li>
  <t>The traffic engineering database is a collection of all TE
   information about all TE nodes and TE links in a given network.</t>
</li></ul>

<t>PCE:</t>

<ul empty="true"><li>
  <t>A Path Computation Element (PCE) is an entity that is capable of
   computing a network path or route based on a network graph, and of
   applying computational constraints during the computation.  The PCE
   entity is an application that can be located within a network node or
   component, on an out-of-network server, etc.  For example, a PCE
   would be able to compute the path of a TE Label Switched Path (LSP)
   by operating on the TED and considering bandwidth and other
   constraints applicable to the TE LSP service request. <xref target="RFC4655"/>.</t>
</li></ul>

<t>Domain:</t>

<ul empty="true"><li>
  <t>TE information is the data relating to nodes and TE links
   that is used in the process of selecting a TE path.  TE information
   is usually only available within a network.  We call such a zone of
   visibility of TE information a domain.  An example of a domain may be
   an IGP area or an Autonomous System. <xref target="RFC7926"/></t>
</li></ul>

<t>The terminology for describing YANG data models is found in
   <xref target="RFC7950"/>.</t>

</section>
<section anchor="tree-diagram"><name>Tree Diagram</name>

<t>Tree diagrams used in this document follow the notation defined in
   <xref target="RFC8340"/>.</t>

</section>
<section anchor="prefixes-in-data-node-names"><name>Prefixes in Data Node Names</name>

<t>In this document, names of data nodes and other data model objects
   are prefixed using the standard prefix associated with the
   corresponding YANG imported modules, as shown in <xref target="tab-prefix"/>.</t>

<texttable title="Prefixes and corresponding YANG modules" anchor="tab-prefix">
      <ttcol align='left'>Prefix</ttcol>
      <ttcol align='left'>YANG module</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>te-types</c>
      <c>ietf-te-types</c>
      <c>[RFCZZZZ]</c>
      <c>te</c>
      <c>ietf-te</c>
      <c>[RFCYYYY]</c>
      <c>te-pc</c>
      <c>ietf-te-path-computation</c>
      <c>RFCXXXX</c>
</texttable>

<t>RFC Editor Note:
Please replace XXXX with the RFC number assigned to this document.
Please replace YYYY with the RFC number of <xref target="I-D.ietf-teas-yang-te"/> once it has been published.
Please replace ZZZZ with the RFC number of <xref target="I-D.ietf-teas-rfc8776-update"/> once it has been published.
Please remove this note.</t>

</section>
</section>
<section anchor="use-cases"><name>Use Cases</name>

<t>This section presents some use cases, where a client needs to request
   underlying SDN controllers for path computation.</t>

<t>The use of the YANG data model defined in this document is not
   restricted to these use cases but can be used in any other use case
   when deemed useful.</t>

<t>The presented uses cases have been grouped, depending on the
   different underlying topologies: Packet/Optical Integration (<xref target="poi-uc"/>);
   multi-domain Traffic Engineered (TE) Networks (<xref target="md-uc"/>); and Data Center
   Interconnections (<xref target="dci-uc"/>). Use cases in <xref target="brpc-uc"/> and <xref target="hpce-uc"/>
   respectively present how to
   apply this YANG data model for standard multi-domain PCE i.e.
   Backward Recursive Path Computation <xref target="RFC5441"/> and Hierarchical PCE
   <xref target="RFC6805"/>.</t>

<section anchor="poi-uc"><name>Packet/Optical Integration</name>

<t>In this use case, an optical domain is used to provide connectivity
   to some nodes of a packet domain (see <xref target="fig-poi-uc"/>).</t>

<figure title="Packet/Optical Integration use case" anchor="fig-poi-uc"><artwork type="ascii-art" name="poi-use-case.txt"><![CDATA[
                                +----------------+
                                |                |
                                | Packet/Optical |
                                |  Coordinator   |
                                |                |
                                +---+------+-----+
                                    |      |
                       +------------+      |
                       |                   +-----------+
                +------V-----+                         |
                |            |                  +------V-----+
                | Packet     |                  |            |
                | Domain     |                  | Optical    |
                | Controller |                  | Domain     |
                |            |                  | Controller |
                +------+-----+                  +-------+----+
                       |                                |
              .........V.........................       |
              :          packet domain          :       |
          +----+                               +----+   |
          | R1 |= = = = = = = = = = = = = = = =| R2 |   |
          +-+--+                               +--+-+   |
            | :                                 : |     |
            | :................................ : |     |
            |                                     |     |
            |               +-----+               |     |
            |    ...........| Opt |...........    |     |
            |    :          |  C  |          :    |     |
            |    :         /+--+--+\         :    |     |
            |    :        /    |    \        :    |     |
            |    :       /     |     \       :    |     |
            |   +-----+ /   +--+--+   \ +-----+   |     |
            |   | Opt |/    | Opt |    \| Opt |   |     |
            +---|  A  |     |  D  |     |  B  |---+     |
                +-----+\    +--+--+    /+-----+         |
                 :      \      |      /      :          |
                 :       \     |     /       :          |
                 :        \ +--+--+  / optical<---------+
                 :         \| Opt |/  domain :
                 :..........|  E  |..........:
                            +-----+
]]></artwork></figure>

<t><xref target="fig-poi-uc"/> as well as <xref target="fig-poi-abstraction"/> describe two different
   examples of packet/optical topologies and only show a partial view of the
   packet network connectivity, before additional packet connectivity is
   provided by the optical network.</t>

<t>It is assumed that the Optical Domain Controller provides to the
   Packet/Optical Coordinator an abstracted view of the optical network.
   A possible abstraction could be to represent the whole optical
   network as one "virtual node" with "virtual ports" connected to the
   access links, as shown in <xref target="fig-poi-abstraction"/>.</t>

<t>It is also assumed that Packet Domain Controller can provide the
   Packet/Optical Coordinator the information it needs to set up
   connectivity between packet nodes through the optical network (e.g.,
   the access links).</t>

<t>The path computation request helps the Packet/Optical Coordinator to
   know the real connections that can be provided by the optical
   network.</t>

<figure title="Packet and Optical Topology Abstractions" anchor="fig-poi-abstraction"><artwork type="ascii-art" name="poi-topology-abstraction.txt"><![CDATA[
                       ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,.
                      ,  Packet/Optical Coordinator view          ,
                     ,                              +----+       , .
                    ,                               |    |      ,
                   ,                                | R2 |     ,   .
                  ,  +----+  +------------ +       /+----+    ,
                 ,   |    |  |             |/-----/ / /      ,     .
                ,    | R1 |--O VP1     VP4 O       / /      ,
               ,     |    |\ |             | /----/ /      ,       .
              ,      +----+ \|             |/      /      ,
             ,        /      O VP2     VP5 O      /      ,         .
            ,        /       |             |  +----+    ,
           ,        /        |             |  |    |   ,           .
          ,        /         O VP3     VP6 O--| R4 |  ,
         ,     +----+ /-----/|_____________|  +----+ ,             .
        ,      |    |/       +------------ +        ,
       ,       | R3 |                              ,               .
      ,        +----+                             ,,,,,,,,,,,,,,,,,
     ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,                ,.
     . Packet Domain Controller view                +----+       ,
       only packet nodes and packet links           |    |      ,  .
     . with access links to the optical network     | R2 |     ,
                  ,  +----+                        /+----+    ,    .
     .           ,   |    |                 /-----/ / /      ,
                ,    | R1 |---                     / /      ,      .
     .         ,     +----+\                 /----/ /      ,
              ,        /    \               /      /      ,        .
     .       ,        /                           /      ,
            ,        /                        +----+    ,          .
     .     ,        /                         |    |   ,
          ,        /                       ---| R4 |  ,            .
     .   ,     +----+ /-----/                 +----+ ,
        ,      |    |/                              ,              .
     . ,       | R3 |                              ,
      ,        +----+                             ,,,,,,,,,,,,,,,,,.
     .,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,                ,
       Optical Domain Controller view                            , .
     . only optical nodes,        +--+                          ,
       optical links and         /|OF|                         ,   .
     . access links from the  +--++--+             /          ,
       packet network         |OA|    \     /-----/ /        ,     .
     .          ,          ---+--+--\  +--+/       /        ,
               ,           \   |  \  \-|OE|-------/        ,       .
     .        ,             \  |   \ /-+--+               ,
             ,               \+--+  X    |               ,         .
     .      ,                 |OB|-/ \   |              ,
           ,                  +--+-\  \+--+            ,           .
     .    ,                  /   \  \--|OD|---        ,
         ,            /-----/     +--+ +--+          ,             .
     .  ,            /            |OC|/             ,
       ,                          +--+             ,               .
     .,                                           ,,,,,,,,,,,,,,,,,,
      ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,                ,
     . Actual Physical View                         +----+       ,
                    ,             +--+              |    |      ,
     .             ,             /|OF|              | R2 |     ,
                  ,  +----+   +--++--+             /+----+    ,
     .           ,   |    |   |OA|    \     /-----/ / /      ,
                ,    | R1 |---+--+--\  +--+/       / /      ,
     .         ,     +----+\   |  \  \-|OE|-------/ /      ,
              ,        /    \  |   \ /-+--+        /      ,
     .       ,        /      \+--+  X    |        /      ,
            ,        /        |OB|-/ \   |    +----+    ,
     .     ,        /         +--+-\  \+--+   |    |   ,
          ,        /         /   \  \--|OD|---| R4 |  ,
     .   ,     +----+ /-----/     +--+ +--+   +----+ ,
        ,      |    |/            |OC|/             ,
     . ,       | R3 |             +--+             ,
      ,        +----+                             ,
     .,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
]]></artwork></figure>

<t>In this use case, the Packet/Optical Coordinator needs to set up an
   optimal underlying path for an IP link between R1 and R2.</t>

<t>As depicted in <xref target="fig-poi-abstraction"/>, the Packet/Optical Coordinator has only an
   "abstracted view" of the physical network, and it does not know the
   feasibility or the cost of the possible optical paths (e.g., VP1-VP4
   and VP2-VP5), which depend on the current status of the physical
   resources within the optical network and on vendor-specific optical
   attributes.</t>

<t>The Packet/Optical Coordinator can request the underlying Optical
   Domain Controller to compute a set of potential optimal paths, taking
   into account optical constraints. Then, based on its own constraints,
   policy and knowledge (e.g. cost of the access links), it can choose
   which one of these potential paths to use to set up the optimal end-
   to-end path crossing optical network.</t>

<figure title="Packet/Optical Integration path computation example" anchor="fig-poi-example"><artwork type="ascii-art" name="poi-example.txt"><![CDATA[
                    ............................
                    :                          :
                    O VP1                  VP4 O
           cost=10 /:\                        /:\ cost=10
                  / : \----------------------/ : \
          +----+ /  :         cost=50          :  \ +----+
          |    |/   :                          :   \|    |
          | R1 |    :                          :    | R2 |
          |    |\   :                          :   /|    |
          +----+ \  :  /--------------------\  :  / +----+
                  \ : /       cost=55        \ : /
            cost=5 \:/                        \:/ cost=5
                    O VP2                  VP5 O
                    :                          :
                    :..........................:
]]></artwork></figure>

<t>For example, in <xref target="fig-poi-example"/>, the Packet/Optical Coordinator can request
   the Optical Domain Controller to compute the paths between VP1-VP4
   and VP2-VP5 and then decide to set up the optimal end-to-end path
   using the VP2-VP5 optical path even if this is not the optimal path
   from the optical domain perspective.</t>

<t>Considering the dynamicity of the connectivity constraints of an
   optical domain, it is possible that a path computed by the Optical
   Domain Controller when requested by the Packet/Optical Coordinator is
   no longer valid/available when the Packet/Optical Coordinator
   requests it to be set up. This is further discussed in <xref target="rpc-motivation"/>.</t>

</section>
<section anchor="md-uc"><name>Multi-domain TE networks</name>

<t>In this use case there are two TE domains which are interconnected
   together by multiple inter-domains links.</t>

<t>A possible example could be a multi-domain optical network.</t>

<figure title="Multi-domain multi-link interconnection" anchor="md-ml-connection"><artwork type="ascii-art" name="multi-domain-use-case.txt"><![CDATA[
                            +--------------+
                            | Multi-Domain |
                            | Controller   |
                            +---+------+---+
                                |      |
                   +------------+      |
                   |                   +-----------+
            +------V-----+                         |
            |            |                         |
            | TE Domain  |                  +------V-----+
            | Controller |                  |            |
            |      1     |                  | TE Domain  |
            +------+-----+                  | Controller |
                   |                        |      2     |
                   |                        +------+-----+
          .........V..........                     |
          :                  :                     |
         +-----+             :                     |
         |     |             :            .........V..........
         |  X  |             :            :                  :
         |     |          +-----+      +-----+                :
         +-----+          |     |      |     |               :
          :               |  C  |------|  E  |               :
      +-----+    +-----+ /|     |      |     |\ +-----+    +-----+
      |     |    |     |/ +-----+      +-----+ \|     |    |     |
      |  A  |----|  B  |     :            :     |  G  |----|  H  |
      |     |    |     |\    :            :    /|     |    |     |
      +-----+    +-----+ \+-----+      +-----+/ +-----+    +-----+
          :               |     |      |     |               :
          :               |  D  |------|  F  |               :
          :               |     |      |     |          +-----+
          :               +-----+      +-----+          |     |
          :                  :            :             |  Y  |
          :                  :            :             |     |
          :   TE domain 1    :            : TE domain 2 +-----+
          :..................:            :.................:
]]></artwork></figure>

<t>In order to set up an end-to-end multi-domain TE path (e.g., between
   nodes A and H), the Multi-Domain Controller needs to know the
   feasibility or the cost of the possible TE paths within the two TE
   domains, which depend on the current status of the physical resources
   within each TE domain. This is more challenging in case of optical
   networks because the optimal paths depend also on vendor-specific
   optical attributes (which may be different in the two domains if they
   are provided by different vendors).</t>

<t>In order to set up a multi-domain TE path (e.g., between nodes A and
   H), the Multi-Domain Controller can request the TE Domain Controllers
   to compute a set of intra-domain optimal paths and take decisions
   based on the information received. For example:</t>

<t><list style="symbols">
  <t>The Multi-Domain Controller asks TE Domain Controllers to provide
set of paths between A-C, A-D, E-H and F-H</t>
  <t>TE Domain Controllers return a set of feasible paths with the
associated costs: the path A-C is not part of this set (in optical
networks, it is typical to have some paths not being feasible due
to optical constraints that are known only by the Optical Domain
Controller)</t>
  <t>The Multi-Domain Controller will select the path A-D-F-H since it
is the only feasible multi-domain path and then request the TE
Domain Controllers to set up the A-D and F-H intra-domain paths</t>
  <t>If there are multiple feasible paths, the Multi-Domain Controller
can select the optimal path knowing the cost of the intra-domain
paths (provided by the TE domain controllers) and the cost of the
inter-domain links (known by the Multi-Domain Controller)  <vspace blankLines='1'/>
This approach may have some scalability issues when the number of TE
domains is quite big (e.g. 20).  <vspace blankLines='1'/>
In this case, it would be worthwhile using the abstract TE topology
information provided by the TE Domain Controllers to limit the number
of potential optimal end-to-end paths and then request path
computation from fewer TE Domain Controllers in order to decide what
the optimal path within this limited set is.  <vspace blankLines='1'/>
For more details, see <xref target="topo-pc-complement"/>.</t>
</list></t>

</section>
<section anchor="dci-uc"><name>Data Center Interconnections</name>

<t>In these use case, there is a TE domain which is used to provide
   connectivity between Data Centers which are connected with the TE
   domain using access links.</t>

<figure title="Data Center Interconnection use case" anchor="fig-dci-uc"><artwork type="ascii-art" name="dci-use-case.txt"><![CDATA[
                        +--------------+
                        | Cloud Network|
                        | Orchestrator |
                        +--------------+
                          |  |  |  |
            +-------------+  |  |  +------------------------+
            |                |  +------------------+        |
            |       +--------V---+                 |        |
            |       |            |                 |        |
            |       | TE Network |                 |        |
     +------V-----+ | Controller |          +------V-----+  |
     | DC         | +------------+          | DC         |  |
     | Controller |     |                   | Controller |  |
     +------------+     |   +-----+         +------------+  |
          |         ....V...|     |........         |       |
          |         :       |  P  |       :         |       |
     .....V.....    :      /+-----+\      :    .....V.....  |
     :         :  +-----+ /    |    \ +-----+  :         :  |
     :  DC1 || :  |     |/     |     \|     |  :  DC2 || :  |
     :    ||||----| PE1 |      |      | PE2 |----   |||| :  |
     : _|||||| :  |     |\     |     /|     |  : _|||||| :  |
     :         :  +-----+ \ +-----+ / +-----+  :         :  |
     :.........:    :      \|     |/      :    :.........:  |
                    :.......| PE3 |.......:                 |
                            |     |                         |
                            +-----+               +---------V--+
                          .....|.....             | DC         |
                          :         :             | Controller |
                          :  DC3 || :             +------------+
                          :    |||| :                  |
                          : _|||||| <------------------+
                          :         :
                          :.........:
]]></artwork></figure>

<t>In this use case, there is the need to transfer data from Data Center
   1 (DC1) to either DC2 or DC3 (e.g. workload migration).</t>

<t>The optimal decision depends both on the cost of the TE path (DC1-DC2
   or DC1-DC3) and of the Data Center resources within DC2 or DC3.</t>

<t>The Cloud Network Orchestrator needs to make a decision for optimal
   connection based on TE network constraints and Data Center resources.</t>

<t>It may not be able to make this decision because it has only an
   abstract view of the TE network (as in <xref target="poi-uc"/>).</t>

<t>The Cloud Network Orchestrator can request to the TE Network
   Controller to compute the cost of the possible TE paths (e.g., DC1-
   DC2 and DC1-DC3) and to the DC Controller to provide the information
   it needs about the required Data Center resources within DC2 and DC3
   and then it can take the decision about the optimal solution based on
   this information and its policy.</t>

</section>
<section anchor="brpc-uc"><name>Backward Recursive Path Computation scenario</name>

<t><xref target="RFC5441"/> has defined the Virtual Source Path Tree (VSPT) flag within the RP (Request Parameters) object in order to compute inter-domain paths following a
   "Backward Recursive Path Computation" (BRPC) method. The main
   principle is to forward the PCReq message up to the destination
   domain. Then, each PCE involved in the computation will compute its
   part of the path and send it back to the requester through PCE
   Response message. The resulting computation is spread from
   destination PCE to source PCE. Each PCE is in charge of merging the
   path it received with the one it calculated. At the end, the source
   PCE merges its local part of the path with the received one to
   achieve the end-to-end path.</t>

<t><xref target="fig-brpc-example"/> below show a typical BRPC scenario where 3 PCEs cooperate to
   compute inter-domain paths.</t>

<figure title="BRPC Scenario" anchor="fig-brpc-example"><artwork type="ascii-art" name="brpc-scenario.txt"><![CDATA[
                   +----------------+          +----------------+
                   |  Domain (B)    |          |  Domain (C)    |
                   |                |          |                |
                   |        /-------|---PCEP---|--------\       |
                   |       /        |          |         \      |
                   |   (PCE)        |          |   -    (PCE)   |
                   |    /           <---------->  |D|           |
                   |   /            |  Inter   |   -            |
                   +---|----^-------+  Domain  +----------------+
                       |    |          Link
                     PCEP   |
                       |    | Inter-domain Link
                       |    |
                   +---|----v-------+
                   |   |            |
                   |   | Domain (A) |
                   |   \            |
                   |  (PCE)    -    |
                   |          |S|   |
                   |           -    |
                   +----------------+
]]></artwork></figure>

<t>In this use case, a client can use the YANG data model defined in
   this document to request path computation from the PCE that controls
   the source of the tunnel. For example, a client can request to the
   PCE of domain A to compute a path from a source S, within domain A,
   to a destination D, within domain C. Then PCE of domain A will use
   PCEP protocol, as per <xref target="RFC5441"/>, to compute the path from S to D and
   in turn gives the final answer to the requester.</t>

</section>
<section anchor="hpce-uc"><name>Hierarchical PCE scenario</name>

<t><xref target="RFC6805"/> has defined an architecture and extensions to the PCE
   standard to compute inter-domain path following a hierarchical
   method. Two new roles have been defined: parent PCE and child PCE.
   The parent PCE is in charge to coordinate the end-to-end path
   computation. For that purpose it sends to each child PCE involved in
   the multi-domain path computation a PCE Request message to obtain the
   local part of the path. Once received all answer through PCE Response
   message, the parent PCE will merge the different local parts of the
   path to achieve the end-to-end path.</t>

<t><xref target="fig-hpce-example"/> below shows a typical hierarchical scenario where a parent
   PCE request end-to-end path to the different child PCE. Note that a
   PCE could take independently the role of child or parent PCE
   depending of which PCE will request the path.</t>

<figure title="Hierarchical domain topology from RFC6805" anchor="fig-hpce-example"><artwork type="ascii-art" name="hierarchical-domain-topology.txt"><![CDATA[
    -----------------------------------------------------------------
    |   Domain 5                                                      |
    |                              -----                              |
    |                             |PCE 5|                             |
    |                              -----                              |
    |                                                                 |
    |    ----------------     ----------------     ----------------   |
    |   | Domain 1       |   | Domain 2       |   | Domain 3       |  |
    |   |                |   |                |   |                |  |
    |   |        -----   |   |        -----   |   |        -----   |  |
    |   |       |PCE 1|  |   |       |PCE 2|  |   |       |PCE 3|  |  |
    |   |        -----   |   |        -----   |   |        -----   |  |
    |   |                |   |                |   |                |  |
    |   |            ----|   |----        ----|   |----            |  |
    |   |           |BN11+---+BN21|      |BN23+---+BN31|           |  |
    |   |   -        ----|   |----        ----|   |----        -   |  |
    |   |  |S|           |   |                |   |           |D|  |  |
    |   |   -        ----|   |----        ----|   |----        -   |  |
    |   |           |BN12+---+BN22|      |BN24+---+BN32|           |  |
    |   |            ----|   |----        ----|   |----            |  |
    |   |                |   |                |   |                |  |
    |   |         ----   |   |                |   |   ----         |  |
    |   |        |BN13|  |   |                |   |  |BN33|        |  |
    |    -----------+----     ----------------     ----+-----------   |
    |                \                                /               |
    |                 \       ----------------       /                |
    |                  \     |                |     /                 |
    |                   \    |----        ----|    /                  |
    |                    ----+BN41|      |BN42+----                   |
    |                        |----        ----|                       |
    |                        |                |                       |
    |                        |        -----   |                       |
    |                        |       |PCE 4|  |                       |
    |                        |        -----   |                       |
    |                        |                |                       |
    |                        | Domain 4       |                       |
    |                         ----------------                        |
    |                                                                 |
     -----------------------------------------------------------------
]]></artwork></figure>

<t>In this use case, a client can use the YANG data model defined in
   this document to request to the parent PCE a path from a source S to
   a destination D. The parent PCE will in turn contact the child PCEs
   through PCEP protocol to compute the end-to-end path and then return
   the computed path to the client, using the YANG data model defined in
   this document. For example the YANG data model can be used to request
   to PCE5 acting as parent PCE to compute a path from source S, within
   domain 1, to destination D, within domain 3. PCE5 will contact child
   PCEs of domain 1, 2 and 3 to obtain local part of the end-to-end path
   through the PCEP protocol. Once received the PCRep message, it
   merges the answers to compute the end-to-end path and send it back to
   the client.</t>

</section>
</section>
<section anchor="motivations"><name>Motivations</name>

<t>This section provides the motivation for the YANG data model defined
   in this document.</t>

<t><xref target="yang-motivation"/> describes the motivation for a YANG data model to request
   path computation.</t>

<t><xref target="topo-interaction"/> describes the motivation for a YANG data model which
   complements the TE topology YANG data model defined in <xref target="RFC8795"/>.</t>

<t><xref target="rpc-motivation"/> describes the motivation for a YANG RPC which complements
   the TE tunnel YANG data model defined in <xref target="I-D.ietf-teas-yang-te"/>.</t>

<section anchor="yang-motivation"><name>Motivation for a YANG Model</name>

<section anchor="benefits-of-common-data-models"><name>Benefits of common data models</name>

<t>The YANG data model for requesting path computation is closely
   aligned with the YANG data models that provide (abstract) TE topology
   information, i.e., <xref target="RFC8795"/> as well as that are used to configure
   and manage TE tunnels, i.e., <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>There are many benefits in aligning the data model used for path
   computation requests with the YANG data models used for TE topology
   information and for TE tunnels configuration and management:</t>

<t><list style="symbols">
  <t>There is no need for an error-prone mapping or correlation of
information.</t>
  <t>It is possible to use the same endpoint identifiers in path
computation requests and in the topology modeling.</t>
  <t>The attributes used for path computation constraints are the same
as those used when setting up a TE tunnel.</t>
</list></t>

</section>
<section anchor="benefits-of-a-single-interface"><name>Benefits of a single interface</name>

<t>The system integration effort is typically lower if a single,
   consistent interface is used by controllers, i.e., one data modeling
   language (i.e., YANG) and a common protocol (e.g., NETCONF or
   RESTCONF).</t>

<t>Practical benefits of using a single, consistent interface include:</t>

<t><list style="numbers">
  <t>Simple authentication and authorization: The interface between
different components has to be secured. If different protocols
have different security mechanisms, ensuring a common access
control model may result in overhead. For instance, there may be a
need to deal with different security mechanisms, e.g., different
credentials or keys. This can result in increased integration
effort.</t>
  <t>Consistency: Keeping data consistent over multiple different
interfaces or protocols is not trivial. For instance, the sequence
of actions can matter in certain use cases, or transaction
semantics could be desired. While ensuring consistency within one
protocol can already be challenging, it is typically cumbersome to
achieve that across different protocols.</t>
  <t>Testing: System integration requires comprehensive testing,
including corner cases. The more different technologies are
involved, the more difficult it is to run comprehensive test cases
and ensure proper integration.</t>
  <t>Middle-box friendliness: Provider and consumer of path computation
requests may be located in different networks, and middle-boxes
such as firewalls, NATs, or load balancers may be deployed. In
such environments it is simpler to deploy a single protocol. Also,
it may be easier to debug connectivity problems.</t>
  <t>Tooling reuse: Implementers may want to implement path computation
requests with tools and libraries that already exist in
controllers and/or orchestrators, e.g., leveraging the rapidly
growing eco-system for YANG tooling.</t>
</list></t>

</section>
<section anchor="extensibility"><name>Extensibility</name>

<t>Path computation is only a subset of the typical functionality of a
   controller. In many use cases, issuing path computation requests
   comes along with the need to access other functionality on the same
   system. In addition to obtaining TE topology, for instance also
   configuration of services (set-up/modification/deletion) may be
   required, as well as:</t>

<t><list style="numbers">
  <t>Receiving notifications for topology changes as well as
integration with fault management</t>
  <t>Performance management such as retrieving monitoring and telemetry
data</t>
  <t>Service assurance, e.g., by triggering OAM functionality</t>
  <t>Other fulfilment and provisioning actions beyond tunnels and
services, such as changing QoS configurations  <vspace blankLines='1'/>
YANG is a very extensible and flexible data modeling language that
can be used for all these use cases.</t>
</list></t>

</section>
</section>
<section anchor="topo-interaction"><name>Interactions with TE topology</name>

<t>The use cases described in <xref target="use-cases"/> have been described assuming
   that the topology view exported by each underlying controller to its
   client is aggregated using the "virtual node model", defined in
   <xref target="RFC7926"/>.</t>

<t>TE topology information, e.g., as provided by <xref target="RFC8795"/>, could in
   theory be used by an underlying controller to provide TE information
   to its client thus allowing a PCE available within its client to
   perform multi-domain path computation on its own, without requesting
   path computations to the underlying controllers.</t>

<t>In case the client does not implement a PCE function, as discussed in
   <xref target="intro"/>, it could not perform path computation based on TE topology
   information and would instead need to request path computation from
   the underlying controllers to get the information it needs to find
   the optimal end-to-end path.</t>

<t>In case the client implements a PCE function, as discussed in 
   <xref target="intro"/>, the TE topology information needs to be complete and accurate,
   which would bring to scalability issues.</t>

<t>Using TE topology to provide a "virtual link model" aggregation, as
   described in <xref target="RFC7926"/>, may be insufficient, unless the aggregation
   provides complete and accurate information, which would still cause
   scalability issues, as described in <xref target="topo-aggregation"/> below.</t>

<t>Using TE topology abstraction, as described in <xref target="RFC7926"/>, may lead to
   compute an unfeasible path, as described in <xref target="RFC7926"/> in 
   <xref target="topo-abstraction"/> below.</t>

<t>Therefore when computing an optimal multi-domain path, there is a
   scalability trade-off between providing complete and accurate TE
   information and the number of path computation requests to the
   underlying controllers.</t>

<t>The TE topology information used, in a complimentary way, to reduce
   the number for path computation requests to the underlying
   controllers, are described in <xref target="topo-pc-complement"/> below.</t>

<section anchor="topo-aggregation"><name>TE topology aggregation</name>

<t>Using the TE topology model, as defined in <xref target="RFC8795"/>, the underlying
   controller can export the whole TE domain as a single TE node with a
   "detailed connectivity matrix" (which provides specific TE
   attributes, such as delay, Shared Risk Link Groups (SRLGs) and other
   TE metrics, between each ingress and egress links).</t>

<t>The information provided by the "detailed connectivity matrix" would
   be equivalent to the information that should be provided by "virtual
   link model" as defined in <xref target="RFC7926"/>.</t>

<t>For example, in the Packet/Optical Integration use case, described in
   <xref target="poi-uc"/>, the Optical Domain Controller can make the information
   shown in <xref target="fig-poi-example"/> available to the Packet/Optical Coordinator as part
   of the TE topology information and the Packet/Optical Coordinator
   could use this information to calculate on its own the optimal path
   between R1 and R2, without requesting any additional information to
   the Optical Domain Controller.</t>

<t>However, when designing the amount of information to provide within
   the "detailed connectivity matrix", there is a tradeoff to be
   considered between accuracy (i.e., providing "all" the information
   that might be needed by the PCE available within the client) and
   scalability.</t>

<t><xref target="poi-multi-path"/> below shows another example, similar to <xref target="fig-poi-example"/>, where
   there are two possible Optical paths between VP1 and VP4 with
   different properties (e.g., available bandwidth and cost).</t>

<figure title="Packet/Optical Integration path computation Example with multiple choices" anchor="poi-multi-path"><artwork type="ascii-art" name="poi-example-multiple.txt"><![CDATA[
                    ............................
                    :  /--------------------\  :
                    : /       cost=65        \ :
                    :/    available-bw=10G    \:
                    O VP1                  VP4 O
           cost=10 /:\                        /:\ cost=10
                  / : \----------------------/ : \
          +----+ /  :         cost=50          :  \ +----+
          |    |/   :     available-bw=2G      :   \|    |
          | R1 |    :                          :    | R2 |
          |    |\   :                          :   /|    |
          +----+ \  :  /--------------------\  :  / +----+
                  \ : /       cost=55        \ : /
            cost=5 \:/    available-bw=3G     \:/ cost=5
                    O VP2                  VP5 O
                    :                          :
                    :..........................:
]]></artwork></figure>

<t>If the information in the "detailed connectivity matrix" is not
   complete/accurate, we can have the following drawbacks:</t>

<t><list style="symbols">
  <t>If only the VP1-VP4 path with available bandwidth of 2 Gb/s and
cost 50 is reported, the client's PCE will fail to compute a 5
Gb/s path between routers R1 and R2, although this would be
feasible;</t>
  <t>If only the VP1-VP4 path with available bandwidth of 10 Gb/s and
cost 65 is reported, the client's PCE will compute, as optimal,
the 1 Gb/s path between R1 and R2 going through the VP2-VP5 path
within the optical domain while the optimal path would actually be
the one going thought the VP1-VP4 sub-path (with cost 50) within
the optical domain.  <vspace blankLines='1'/>
Reporting all the information, as in <xref target="poi-multi-path"/>, using the "detailed
 connectivity matrix", is quite challenging from a scalability
 perspective. The amount of this information is not just based on
 number of end points (which would scale as N-square), but also on
 many other parameters, including client rate, user
 constraints/policies for the service, e.g. max latency &lt; N ms, max
 cost, etc., exclusion policies to route around busy links, min
 Optical Signal to Noise Ratio (OSNR) margin, max pre-Forward Error
 Correction (FEC) Bit Error Rate (BER) etc. All these constraints
 could be different based on connectivity requirements.  <vspace blankLines='1'/>
It is also worth noting that the "connectivity matrix" has been
 originally defined in Wavelength Switched Optical Networks (WSON),
 <xref target="RFC7446"/>, to report the connectivity constrains of a physical node
 within the Wavelength Division Multiplexing (WDM) network: the
 information it contains is pretty "static" and therefore, once taken
 and stored in the TE data base, it can be always being considered
 valid and up-to-date in path computation request.  <vspace blankLines='1'/>
The "connectivity matrix" is sometimes confused with "optical reach
 table" that contain multiple (e.g. k-shortest) regen-free reachable
 paths for every A-Z node combination in the network. Optical reach
 tables can be calculated offline, utilizing vendor optical design and
 planning tools, and periodically uploaded to the Controller: these
 optical path reach tables are fairly static. However, to get the
 connectivity matrix, between any two sites, either a regen free path
 can be used, if one is available, or multiple regen free paths are
 concatenated to get from the source to the destination, which can be
 a very large combination. Additionally, when the optical path within
 optical domain needs to be computed, it can result in different paths
 based on input objective, constraints, and network conditions. In
 summary, even though "optical reach table" is fairly static, which
 regen free paths to build the connectivity matrix between any source
 and destination is very dynamic, and is done using very sophisticated
 routing algorithms.  <vspace blankLines='1'/>
Using the "basic connectivity matrix" with an abstract node to
 abstract the information regarding the connectivity constraints of an
 Optical domain, would make this information more "dynamic" since the
 connectivity constraints of an optical domain can change over time
 because some optical paths that are feasible at a given time may
 become unfeasible at a later time when e.g., another optical path is
 established.  <vspace blankLines='1'/>
The information in the "detailed connectivity matrix" is even more
 dynamic since the establishment of another optical path may change
 some of the parameters (e.g., delay or available bandwidth) in the
 "detailed connectivity matrix" while not changing the feasibility of
 the path.  <vspace blankLines='1'/>
There is therefore the need to keep the information in the "detailed
 connectivity matrix" updated which means that there another tradeoff
 between the accuracy (i.e., providing "all" the information that
 might be needed by the client's PCE) and having up-to-date
 information. The more the information is provided and the longer it
 takes to keep it up-to-date which increases the likelihood that the
 client's PCE computes paths using not updated information.  <vspace blankLines='1'/>
It seems therefore quite challenging to have a "detailed connectivity
 matrix" that provides accurate, scalable and updated information to
 allow the client's PCE to take optimal decisions by its own.  <vspace blankLines='1'/>
Considering the example in <xref target="poi-multi-path"/> with the approach defined in this
 document, the client, when it needs to set up an end-to-end path, it
 can request the Optical Domain Controller to compute a set of optimal
 paths (e.g., for VP1-VP4 and VP2-VP5) and take decisions based on the
 information received:</t>
  <t>When setting up a 5 Gb/s path between routers R1 and R2, the
Optical Domain Controller may report only the VP1-VP4 path as the
only feasible path: the Packet/Optical Coordinator can
successfully set up the end-to-end path passing though this
optical path;</t>
  <t>When setting up a 1 Gb/s path between routers R1 and R2, the
Optical Domain Controller (knowing that the path requires only 1
Gb/s) can report both the VP1-VP4 path, with cost 50, and the VP2-
VP5 path, with cost 65. The Packet/Optical Coordinator can then
compute the optimal path which is passing thought the VP1-VP4 sub-
path (with cost 50) within the optical domain.</t>
</list></t>

</section>
<section anchor="topo-abstraction"><name>TE topology abstraction</name>

<t>Using the TE topology model, as defined in <xref target="RFC8795"/>, the underlying
   controller can export to its client an abstract TE topology, composed
   by a set of TE nodes and TE links, representing the abstract view of
   the topology under its control.</t>

<t>For example, in the multi-domain TE network use case, described in
   <xref target="md-uc"/>, the TE Domain Controller 1 can export a TE topology
   encompassing the TE nodes A, B, C and D and the TE links
   interconnecting them. In a similar way, the TE Domain Controller 2
   can export a TE topology encompassing the TE nodes E, F, G and H and
   the TE links interconnecting them.</t>

<t>In this example, for simplicity reasons, each abstract TE node maps
   with each physical node, but this is not necessary.</t>

<t>In order to set up a multi-domain TE path (e.g., between nodes A and
   H), the Multi-Domain Controller can compute by its own an optimal
   end-to-end path based on the abstract TE topology information
   provided by the domain controllers. For example:</t>

<t><list style="symbols">
  <t>Multi-Domain Controller can compute, based on its own TED data,
the optimal multi-domain path being A-B-C-E-G-H, and then request
the TE Domain Controllers to set up the A-B-C and E-G-H intra-
domain paths</t>
  <t>But, during path set-up, the TE Domain Controller may find out
that A-B-C intra-domain path is not feasible (as discussed in
<xref target="md-uc"/>, in optical networks it is typical to have some paths
not being feasible due to optical constraints that are known only
by the Optical Domain Controller), while only the path A-B-D is
feasible</t>
  <t>So what the Multi-Domain Controller has computed is not good and
it needs to re-start the path computation from scratch  <vspace blankLines='1'/>
As discussed in <xref target="topo-aggregation"/>, providing more extensive abstract
information from the TE Domain Controllers to the Multi-Domain
Controller may lead to scalability problems.  <vspace blankLines='1'/>
In a sense this is similar to the problem of routing and wavelength
assignment within an optical domain. It is possible to do first
routing (step 1) and then wavelength assignment (step 2), but the
chances of ending up with a good path is low. Alternatively, it is
possible to do combined routing and wavelength assignment, which is
known to be a more optimal and effective way for optical path set-up.
Similarly, it is possible to first compute an abstract end-to-end
path within the Multi-Domain Controller (step 1) and then compute an
intra-domain path within each optical domain (step 2), but there are
more chances not to find a path or to get a suboptimal path than by
performing multiple per-domain path computations and then stitching
them together.</t>
</list></t>

</section>
<section anchor="topo-pc-complement"><name>Complementary use of the TE topology</name>

<t>As discussed in <xref target="md-uc"/>, there are some scalability issues with
   path computation requests in a multi-domain TE network with many TE
   domains, in terms of the number of requests to send to the TE Domain
   Controllers. It would therefore be worthwhile using the abstract TE
   topology information provided by the TE Domain Controllers to limit
   the number of requests.</t>

<t>An example can be described considering the multi-domain abstract TE
   topology shown in <xref target="fig-topo-many-domains"/>. In this example, an end-to-end TE path
   between domains A and F needs to be set up. The transit TE domain
   should be selected between domains B, C, D and E.</t>

<figure title="Multi-domain with many domains (Topology information)" anchor="fig-topo-many-domains"><artwork type="ascii-art" name="many-domains-topology.txt"><![CDATA[
                          .........B.........
                          : _ _ _ _ _ _ _ _ :
                          :/               \:
                      +---O  NOT FEASIBLE   O---+
                cost=5|   :                 :   |
    ......A......     |   :.................:   |     ......F......
    :           :     |                         |     :           :
    :           O-----+   .........C.........   +-----O           :
    :           :         : /-------------\ :         :           :
    :           :         :/               \:         :           :
    :  cost<=20 O---------O   cost <= 30    O---------O cost<=20  :
    :          /: cost=5  :                 : cost=5  :\          :
    :  /------/ :         :.................:         : \------\  :
    : /         :                                     :         \ :
    :/ cost<=25 :         .........D.........         : cost<=25 \:
    O-----------O-------+ : /-------------\ : +-------O-----------O
    :\          : cost=5| :/               \: |cost=5 :          /:
    : \         :       +-O   cost <= 30    O-+       :         / :
    :  \------\ :         :                 :         : /------/  :
    : cost>=30 \:         :.................:         :/ cost>=30 :
    :           O-----+                         +-----O           :
    :...........:     |   .........E.........   |     :...........:
                      |   : /-------------\ :   |
                cost=5|   :/               \:   |cost=5
                      +---O   cost >= 30    O---+
                          :                 :
                          :.................:
]]></artwork></figure>

<t>The actual cost of each intra-domain path is not known a priori from
   the abstract topology information. The Multi-Domain Controller only
   knows, from the TE topology provided by the underlying domain
   controllers, the feasibility of some intra-domain paths and some
   upper-bound and/or lower-bound cost information. With this
   information, together with the cost of inter-domain links, the Multi-
   Domain Controller can understand by its own that:</t>

<t><list style="symbols">
  <t>Domain B cannot be selected as the path connecting domains A and F
is not feasible;</t>
  <t>Domain E cannot be selected as a transit domain since it is known
from the abstract topology information provided by domain
controllers that the cost of the multi-domain path A-E-F (which is
100, in the best case) will be always be higher than the cost of
the multi-domain paths A-D-F (which is 90, in the worst case) and
A-C-F (which is 80, in the worst case).  <vspace blankLines='1'/>
Therefore, the Multi-Domain Controller can understand by its own that
 the optimal multi-domain path could be either A-D-F or A-C-F but it
 cannot know which one of the two possible option actually provides
 the optimal end-to-end path.  <vspace blankLines='1'/>
The Multi-Domain Controller can therefore request path computation
 only to the TE Domain Controllers A, D, C and F (and not to all the
 possible TE Domain Controllers).</t>
</list></t>

<figure title="Multi-domain with many domains (Path Computation information)" anchor="fig-pc-many-domains"><artwork type="ascii-art" name="many-domain-path-computation.txt"><![CDATA[
                          .........B.........
                          :                 :
                      +---O                 O---+
    ......A......     |   :.................:   |     ......F......
    :           :     |                         |     :           :
    :           O-----+   .........C.........   +-----O           :
    :           :         : /-------------\ :         :           :
    :           :         :/               \:         :           :
    :  cost=15  O---------O    cost = 25    O---------O  cost=10  :
    :          /: cost=5  :                 : cost=5  :\          :
    :  /------/ :         :.................:         : \------\  :
    : /         :                                     :         \ :
    :/ cost=10  :         .........D.........         : cost=15  \:
    O-----------O-------+ : /-------------\ : +-------O-----------O
    :           : cost=5| :/               \: |cost=5 :           :
    :           :       +-O    cost = 15    O-+       :           :
    :           :         :                 :         :           :
    :           :         :.................:         :           :
    :           O-----+                         +-----O           :
    :...........:     |   .........E.........   |     :...........:
                      |   :                 :   |
                      +---O                 O---+
                          :.................:
]]></artwork></figure>

<t>Based on these requests, the Multi-Domain Controller can know the
   actual cost of each intra-domain paths which belongs to potential
   optimal end-to-end paths, as shown in <xref target="fig-pc-many-domains"/>, and then compute the
   optimal end-to-end path (e.g., A-D-F, having total cost of 50,
   instead of A-C-F having a total cost of 70).</t>

</section>
</section>
<section anchor="rpc-motivation"><name>Path Computation RPC</name>

<t>The TE tunnel YANG data model, defined in <xref target="I-D.ietf-teas-yang-te"/>, can support
   the need to request path computation, as described in section 5.1.2
   of <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>This solution is stateful since the state of each created "compute-
   only" TE tunnel path needs to be maintained, in the YANG datastores
   (at least in the running datastore and operational datastore), and
   updated, when underlying network conditions change.</t>

<t>The RPC mechanism allows requesting path computation using a simple
   atomic operation, without creating any state in the YANG datastores,
   and it is the natural option/choice, especially with stateless PCE.</t>

<t>It is very useful to provide both the options of using an RPC as well
   as of setting up TE tunnel paths in "compute-only" mode. It is
   suggested to use the RPC as much as possible and to rely on
   "compute-only" TE tunnel paths, when really needed.</t>

<t>Using the RPC solution would imply that the underlying controller
   (e.g., a PNC) computes a path twice during the process to set up an
   LSP: at time T1, when its client (e.g., an MDSC) sends a path
   computation RPC request to it, and later, at time T2, when the same
   client (MDSC) creates a TE tunnel requesting the set-up of the LSP.
   The underlying assumption is that, if network conditions have not
   changed, the same path that has been computed at time T1 is also
   computed at time T2 by the underlying controller (e.g. PNC) and
   therefore the path that is set up at time T2 is exactly the same path
   that has been computed at time T1.</t>

<t>However, since the operation is stateless, there is no guarantee that
   the returned path would still be available when path set-up is
   requested: this does not cause major issues when the time between
   path computation and path set-up is short (especially if compared
   with the time that would be needed to update the information of a
   very detailed connectivity matrix).</t>

<t>In most of the cases, there is even no need to guarantee that the
   path that has been set up is the exactly same as the path that has
   been returned by path computation, especially if it has the same or
   even better metrics. Depending on the abstraction level applied by
   the server, the client may also not know the actual computed path.</t>

<t>The most important requirement is that the required global objectives
   (e.g., multi-domain path metrics and constraints) are met. For this
   reason a path verification phase is always necessary to verify that
   the actual path that has been set up meets the global objectives (for
   example in a multi-domain network, the resulting end-to-end path
   meets the required end-to-end metrics and constraints).</t>

<t>In most of the cases, even if the path being set up is not exactly
   the same as the path returned by path computation, its metrics and
   constraints are "good enough" and the path verification passes
   successfully. In the few corner cases where the path verification
   fails, it is possible repeat the whole process (path computation,
   path set-up and path verification).</t>

<t>In case it is required to set up at T2 exactly the same path computed
   at T1, the RPC solution should not be used and, instead, a "compute-
   only" TE tunnel path should be set up, allowing also notifications in
   case the computed path has been changed.</t>

<t>In this case, at time T1, the client (MDSC) creates a TE tunnel in a
   compute-only mode in the running datastore and later, at time T2,
   changes the configuration of that TE tunnel (not to be any more in a
   compute-only mode) to trigger the set-up of the LSP over the path
   which have been computed at time T1 and reported in the operational
   datastore.</t>

<t>It is worth noting that also using the "compute-only" TE tunnel path,
   although increasing the likelihood that the computed path is
   available at path set-up, does not guarantee that because
   notifications may not be reliable or delivered on time. Path
   verification is needed also in this case.</t>

<t>The solution based on "compute-only" TE tunnel path has also the
   following drawbacks:</t>

<t><list style="symbols">
  <t>Several messages required for any path computation</t>
  <t>Requires persistent storage in the underlying controller</t>
  <t>Need for garbage collection for stranded paths</t>
  <t>Process burden to detect changes on the computed paths in order to
provide notifications update</t>
</list></t>

<section anchor="temp-state"><name>Temporary reporting of the computed path state</name>

<t>This section describes an optional extension to the stateless
   behavior of the path computation RPC, where the underlying
   controller, after having received a path computation RPC request,
   maintains some "transient state" associated with the computed path,
   allowing the client to request the set-up of exactly that path, if
   still available.</t>

<t>This is similar to the "compute-only" TE tunnel path solution but, to
   avoid the drawbacks of the stateful approach, is leveraging the path
   computation RPC and the separation between configuration and
   operational datastore, as defined in the NMDA architecture <xref target="RFC8342"/>.</t>

<t>The underlying controller, after having computed a path, as requested
   by a path computation RPC, also creates a TE tunnel instance within
   the operational datastore, to store that computed path. This would be
   similar to a "compute-only" TE tunnel path, with the only difference
   that there is no associated TE tunnel instance within the running
   datastore.</t>

<t>Since the underlying controller stores in the operational datastore
   the computed path based on an abstract topology it exposes, it also
   remembers, internally, which is the actual native path (physical
   path), within its native topology (physical topology), associated
   with that compute-only TE tunnel instance.</t>

<t>Afterwards, the client (e.g., MDSC) can request the set-up of that
   specific path by creating a TE tunnel instance (not in compute-only
   mode) in the running datastore using the same tunnel-name of
   the existing TE tunnel in the operational datastore: this will
   trigger the underlying controller to set up that path, if still
   available.</t>

<t>There are still cases where the path being set up is not exactly the
   same as the path that has been computed:</t>

<t><list style="symbols">
  <t>When the tunnel is configured with path constraints which are not
compatible with the computed path;</t>
  <t>When the tunnel set-up is requested after the resources of the
computed path are no longer available;</t>
  <t>When the tunnel set-up is requested after the computed path is no
longer known (e.g. due to a server reboot) by the underlying
controller.  <vspace blankLines='1'/>
In all these cases, the underlying controller should compute and set
 up a new path.  <vspace blankLines='1'/>
Therefore the "path verification" phase, as described in <xref target="rpc-motivation"/>
 above, is always needed to check that the path that has been set up
 is still "good enough".  <vspace blankLines='1'/>
Since this new approach is not completely stateless, garbage
 collection is implemented using a timeout that, when it expires,
 triggers the removal of the computed path from the operational
 datastore. This operation is fully controlled by the underlying
 controller without the need for any action to be taken by the client
 that is not able to act on the operational datastore. The default
 value of this timeout is 10 minutes but a different value may be
 configured by the client.  <vspace blankLines='1'/>
In addition, it is possible for the client to tag each path
 computation request with a transaction-id allowing for a faster
 removal of all the paths associated with a transaction-id, without
 waiting for their timers to expire.  <vspace blankLines='1'/>
The underlying controller can remove from the operational datastore
 all the paths computed with a given transaction-id which have not
 been set up either when it receives a Path Delete RPC request for
 that transaction-id or, automatically, right after the set-up up of a
 path that has been previously computed with that transaction-id.  <vspace blankLines='1'/>
This possibility is useful when multiple paths are computed but, at
 most, only one is set up (e.g., in multi-domain path computation
 scenario scenarios). After the selected path has been set up (e.g, in
 one domain during multi-domain path set-up), all the other
 alternative computed paths can be automatically deleted by the
 underlying controller (since no longer needed). The client can also
 request, using the Path Delete RPC request, the underlying controller
 to remove all the computed paths, if none of them is going to be set
 up (e.g., in a transit domain not being selected by multi-domain path
 computation and so not being automatically deleted).  <vspace blankLines='1'/>
This approach is complimentary and not alternative to the timer which
 is always needed to avoid stranded computed paths being stored in the
 operational datastore when no path is set up and no explicit Path
 Delete RPC request is received.</t>
</list></t>

</section>
</section>
</section>
<section anchor="path-computation-and-optimization-for-multiple-paths"><name>Path computation and optimization for multiple paths</name>

<t>There are use cases, where it is advantageous to request path
   computation for a set of paths, through a network or through a
   network domain, using a single request <xref target="RFC5440"/>.</t>

<t>In this case, sending a single request for multiple path
   computations, instead of sending multiple requests for each path
   computation, would reduce the protocol overhead and it would consume
   less resources (e.g., threads in the client and server).</t>

<t>In the context of a typical multi-domain TE network, there could
   multiple choices for the ingress/egress points of a domain and the
   Multi-Domain Controller needs to request path computation between all
   the ingress/egress pairs to select the best pair. For example, in the
   example of <xref target="md-uc"/>, the Multi-Domain Controller needs to request
   the TE Network Controller 1 to compute the A-C and the A-D paths and
   to the TE Network Controller 2 to compute the E-H and the F-H paths.</t>

<t>It is also possible that the Multi-Domain Controller receives a
   request to set up a group of multiple end to end connections. The
   Multi-Domain Controller needs to request each TE domain Controller to
   compute multiple paths, one (or more) for each end to end connection.</t>

<t>There are also scenarios where it can be needed to request path
   computation for a set of paths in a synchronized fashion.</t>

<t>One example could be computing multiple diverse paths. Computing a
   set of diverse paths in an unsynchronized fashion, leads to the
   possibility of not being able to satisfy the diversity requirement.
   In this case, it is preferable to compute a sub-optimal primary path
   for which a diversely routed secondary path exists.</t>

<t>There are also scenarios where it is needed to request optimizing a
   set of paths using objective functions that apply to the whole set of
   paths, see <xref target="RFC5541"/>, e.g. to minimize the sum of the costs of all
   the computed paths in the set.</t>

</section>
<section anchor="yang-data-model-for-requesting-path-computation"><name>YANG data model for requesting Path Computation</name>

<t>This document define a YANG RPC to request path computation as an
   "augmentation" of tunnel-rpc, defined in <xref target="I-D.ietf-teas-yang-te"/>. This model
   provides the RPC input attributes that are needed to request path
   computation and the RPC output attributes that are needed to report
   the computed paths.</t>

<figure><artwork type="ascii-art" name="overview.txt"><![CDATA[
     augment /te:tunnels-path-compute/te:input/te:path-compute-info:
       +-- path-request* [request-id]
       |  +-- request-id                            uint32
       |  ...........

     augment /te:tunnels-path-compute/te:output/te:path-compute-result:
       +--ro response* [response-id]
          +--ro response-id                         uint32
          +--ro computed-paths-properties
          |  +--ro computed-path-properties* [k-index]
          |     +--ro k-index            uint8
          |     +--ro path-properties
          |     ...........
]]></artwork></figure>

<t>This model extensively re-uses the grouping defined in <xref target="I-D.ietf-teas-yang-te"/>
   and <xref target="RFC8776"/> to ensure maximal syntax and semantics commonality.</t>

<t>This YANG data model allows one RPC to include multiple path
   requests, each path request being identified by a request-id.
   Therefore, one RPC can return multiple responses, one for each path
   request, being identified by a response-id equal to the corresponding
   request-id. Each response reports one or more computed paths, as
   requested by the k-requested-paths attribute. By default, each
   response reports one computed path.</t>

<section anchor="synchronization-of-multiple-path-computation-requests"><name>Synchronization of multiple path computation requests</name>

<t>The YANG data model permits the synchronization of a set of multiple
   path requests (identified by specific request-id) all related to a
   "svec" container emulating the syntax of the Synchronization VECtor
   (SVEC) PCEP object, defined in <xref target="RFC5440"/>.</t>

<figure><artwork type="ascii-art" name="synchronization.txt"><![CDATA[
       +-- synchronization* []
          +-- svec
          |  +-- relaxable?           boolean
          |  +-- disjointness?        te-path-disjointness
          |  +-- request-id-number*   uint32
          +-- svec-constraints
          |  +-- path-metric-bound* [metric-type]
          |     +-- metric-type    identityref
          |     +-- upper-bound?   uint64
          +-- path-srlgs-lists
          |  +-- path-srlgs-list* [usage]
          |     +-- usage     identityref
          |     +-- values*   srlg
          +-- path-srlgs-names
          |  +-- path-srlgs-name* [usage]
          |     +-- usage    identityref
          |     +-- names*   string
          +-- exclude-objects
          |  +-- excludes* []
          |     +-- (type)?
          |        +--:(numbered-node-hop)
          |        |  +-- numbered-node-hop
          |        |     +-- node-id     te-node-id
          |        |     +-- hop-type?   te-hop-type
          |        +--:(numbered-link-hop)
          |        |  +-- numbered-link-hop
          |        |     +-- link-tp-id    te-tp-id
          |        |     +-- hop-type?     te-hop-type
          |        |     +-- direction?    te-link-direction
          |        +--:(unnumbered-link-hop)
          |        |  +-- unnumbered-link-hop
          |        |     +-- link-tp-id    te-tp-id
          |        |     +-- node-id       te-node-id
          |        |     +-- hop-type?     te-hop-type
          |        |     +-- direction?    te-link-direction
          |        +--:(as-number)
          |        |  +-- as-number-hop
          |        |     +-- as-number    inet:as-number
          |        |     +-- hop-type?    te-hop-type
          |        +--:(label)
          |           +-- label-hop
          |              +-- te-label
          |                 +-- (technology)?
          |                 |  +--:(generic)
          |                 |     +-- generic?
          |                 |             rt-types:generalized-label
          |                 +-- direction?       te-label-direction
          +-- optimizations
             +-- (algorithm)?
                +--:(metric) {te-types:path-optimization-metric}?
                |  +-- optimization-metric* [metric-type]
                |     +-- metric-type    identityref
                |     +-- weight?        uint8
                +--:(objective-function)
                         {te-types:path-optimization-objective-
   function}?
                   +-- objective-function
                      +-- objective-function-type?   identityref
]]></artwork></figure>

<t>The model, in addition to the metric types, defined in <xref target="RFC8776"/>,
   which can be applied to each individual path request, supports also
   additional metric types, which apply to a set of synchronized
   requests, as referenced in <xref target="RFC5541"/>. These additional metric types
   are defined by the following YANG identities:</t>

<t><list style="symbols">
  <t>svec-metric-type: base YANG identity from which cumulative metric
types identities are derived.</t>
  <t>svec-metric-cumul-te: cumulative TE cost metric type, as defined
in <xref target="RFC5541"/>.</t>
  <t>svec-metric-cumul-igp: cumulative IGP cost metric type, as defined
in <xref target="RFC5541"/>.</t>
  <t>svec-metric-cumul-hop: cumulative Hop metric type, representing
the cumulative version of the Hop metric type defined in
<xref target="RFC8776"/>.</t>
  <t>svec-metric-aggregate-bandwidth-consumption: aggregate bandwidth
consumption metric type, as defined in <xref target="RFC5541"/>.</t>
  <t>svec-metric-load-of-the-most-loaded-link: load of the most loaded
link metric type, as defined in <xref target="RFC5541"/>.</t>
</list></t>

</section>
<section anchor="returned-metric-values"><name>Returned metric values</name>

<t>This YANG data model provides a way to return the values of the
   metrics computed by the path computation in the output of RPC,
   together with other important information (e.g. SRLG, affinities,
   explicit route), emulating the syntax of the "C" flag of the "METRIC"
   PCEP object <xref target="RFC5440"/>:</t>

<figure><artwork type="ascii-art" name="returned-metrics.txt"><![CDATA[
          |     +--ro path-properties
          |        +--ro path-metric* [metric-type]
          |        |  +--ro metric-type           identityref
          |        |  +--ro accumulative-value?   uint64
          |        +--ro path-affinities-values
          |        |  +--ro path-affinities-value* [usage]
          |        |     +--ro usage    identityref
          |        |     +--ro value?   admin-groups
          |        +--ro path-affinity-names
          |        |  +--ro path-affinity-name* [usage]
          |        |     +--ro usage            identityref
          |        |     +--ro affinity-name* [name]
          |        |        +--ro name    string
          |        +--ro path-srlgs-lists
          |        |  +--ro path-srlgs-list* [usage]
          |        |     +--ro usage     identityref
          |        |     +--ro values*   srlg
          |        +--ro path-srlgs-names
          |        |  +--ro path-srlgs-name* [usage]
          |        |     +--ro usage    identityref
          |        |     +--ro names*   string
          |        +--ro path-route-objects
          |        ...........
          |        +--ro te-bandwidth
          |        |  +--ro (technology)?
          |        |     +--:(generic)
          |        |        +--ro generic?   te-bandwidth
          |        +--ro disjointness-type?
          |                te-types:te-path-disjointness
]]></artwork></figure>

<t>It also allows the client to request which information (metrics, SRLG
   and/or affinities) should be returned:</t>

<figure><artwork type="ascii-art" name="requested-metrics.txt"><![CDATA[
       |  +-- request-id                            uint32
       |  ...........
       |  +-- requested-metrics* [metric-type]
       |  |  +-- metric-type    identityref
       |  +-- return-srlgs?                         boolean
       |  +-- return-affinities?                    boolean
       |  ...........
]]></artwork></figure>

<t>This feature is essential for path computation in a multi-domain TE
   network as described in <xref target="md-uc"/>. In this case, the metrics
   returned by a path computation requested to a given underlying
   controller must be used by the client to compute the best end-to-end
   path. If they are missing, the client cannot compare different paths
   calculated by the underlying controllers and choose the best one for
   the optimal end-to-end (e2e) path.</t>

</section>
<section anchor="multiple-paths-requests-for-the-same-te-tunnel"><name>Multiple Paths Requests for the same TE tunnel</name>

<t>The YANG data model allows including multiple requests for different
   paths intended to be used within the same tunnel or within different
   tunnels.</t>

<t>When multiple requested paths are intended to be used within the same
   tunnel (e.g., requesting path computation for the primary and
   secondary paths of a protected tunnel), the set of attributes that
   are intended to be configured on per-tunnel basis rather than on per-
   path basis are common to all these path requests. These attributes
   includes both attributes which can be configured only a per-tunnel
   basis (e.g., tunnel-name, source/destination TTP, encoding and
   switching-type) as well attributes which can be configured both on a
   per-tunnel and on a per-path basis (e.g., the te-bandwidth or the
   associations).</t>

<t>Therefore, a tunnel-attributes list is defined, within the path
   computation request RPC:</t>

<figure><artwork type="ascii-art" name="tunnel-attributes-list.txt"><![CDATA[
       +-- tunnel-attributes* [tunnel-name]
       |  +-- tunnel-name               string
       |  +-- encoding?                 identityref
       |  +-- switching-type?           identityref
       |  +-- source?                   te-types:te-node-id
       |  +-- destination?              te-types:te-node-id
       |  +-- src-tunnel-tp-id?         binary
       |  +-- dst-tunnel-tp-id?         binary
       |  +-- bidirectional?            boolean
       |  +-- association-objects
       |  ...........
       |  +-- protection-type?          identityref
       |  +-- restoration-type?         identityref
       |  +-- restoration-scheme?       identityref
       |  +-- te-topology-identifier
       |  |  +-- provider-id?   te-global-id
       |  |  +-- client-id?     te-global-id
       |  |  +-- topology-id?   te-topology-id
       |  +-- te-bandwidth
       |  |  +-- (technology)?
       |  |     +--:(generic)
       |  |        +-- generic?   te-bandwidth
       |  +-- link-protection?          identityref
       |  +-- setup-priority?           uint8
       |  +-- hold-priority?            uint8
       |  +-- signaling-type?           identityref
       |  +-- hierarchy
       |     +-- dependency-tunnels
       |     ............ 
       |     +-- hierarchical-link
       |     ............ 
]]></artwork></figure>

<t>The path requests that are intended to be used within the same tunnel
   should reference the same entry in the tunnel-attributes list. This
   allows:</t>

<t><list style="symbols">
  <t>avoiding repeating the same set of per-tunnel parameters on
multiple requested paths;</t>
  <t>the server to understand what attributes are intended to be
configured on a per-tunnel basis (e.g., the te-bandwidth
configured in the tunnel-attributes) and what attributes are
intended to be configured on a per-path basis(e.g., the te-
bandwidth configured in the path-request). This could be useful
especially when the server also creates a TE tunnel instance
within the operational datastore to report the computed paths, as
described in <xref target="temp-state"/>: in this case, the tunnel-name is also
used as the suggested name for that TE tunnel instance.  <vspace blankLines='1'/>
The YANG data model allows also including requests for paths intended
 to modify existing tunnels (e.g., adding a protection path for an
 existing un-protected tunnel). In this case, the per-tunnel
 attributes are already provided in an existing TE tunnel instance and
 do not need to be re-configured in the path computation request RPC.
 Therefore, these requests should reference an existing TE tunnel
 instance.  <vspace blankLines='1'/>
It is also possible to request computing paths without indicating in
 which tunnel they are intended to be used (e.g., in case of an
 unprotected tunnel). In this case, the per-tunnel attributes could be
 provided together with the per-path attributes in the path request,
 without using the tunnel-attributes list.  <vspace blankLines='1'/>
The choices below are defined to distinguish the cases above:</t>
  <t>whether the per-tunnel attributes are configured by reference
(providing a leafref), to:  <list style="symbols">
      <t>either a TE tunnel instance, if it exists;</t>
      <t>or to an entry of the tunnel-attributes list, if the TE tunnel
instance does not exist;</t>
    </list></t>
  <t>or by value, providing the set of tunnel attributes within the
path request:</t>
</list></t>

<figure><artwork type="ascii-art" name="tunnel-attributes.txt"><![CDATA[
       |  +-- (tunnel-attributes)?
       |  |  +--:(reference)
       |  |  |  +-- tunnel-reference
       |  |  |     +-- (tunnel-exist)?
       |  |  |     |  +--:(tunnel-ref)
       |  |  |     |  |  +-- tunnel-ref                te:tunnel-ref
       |  |  |     |  +--:(tunnel-attributes-ref)
       |  |  |     |     +-- tunnel-attributes-ref     leafref
       |  |  |     +-- path-name?                      string
       |  |  |     +-- (path-role)
       |  |  |        +--:(primary-path)
       |  |  |         ...........
       |  |  +--:(value)
       |  |     +-- tunnel-name?                    string
       |  |     ...........
       |  |     +-- encoding?                       identityref
       |  |     +-- switching-type?                 identityref
       |  |     ...........
]]></artwork></figure>

<section anchor="tunnel-attributes-specified-by-value"><name>Tunnel attributes specified by value</name>

<t>The (value) case provides the set of attributes that are configured
   only on per-tunnel basis (e.g., tunnel-name, source/destination TTP,
   encoding and switching-type).</t>

<t>In this case, it is assumed that the requested path will be the only
   path within a tunnel.</t>

<t>If the only path within a tunnel is the transit segment of a multi-domain end-to-end path, it can be of any type (primary, secondary, reverse-primary
   or reverse-secondary). The (path-role) choice is used to specify its role in the path request:</t>

<figure><artwork type="ascii-art" name="tunnel-by-value.txt"><![CDATA[
       |  |     +-- (path-role)?
       |  |     |  +--:(primary-path)
       |  |     |  +--:(secondary-path)
       |  |     |  |  +-- secondary-path!
       |  |     |  |     +-- primary-path-name?   string
       |  |     |  +--:(primary-reverse-path)
       |  |     |  |  +-- primary-reverse-path!
       |  |     |  |     +-- primary-path-name?   string
       |  |     |  +--:(secondary-reverse-path)
       |  |     |     +-- secondary-reverse-path
       |  |     |        +-- primary-path-name?           string
       |  |     |        +-- primary-reverse-path-name?   string
       |  |     ...........
]]></artwork></figure>

<t>In all the other cases, the only path within a tunnel is a primary path.</t>

<t>The secondary-path, the primary-reverse-path and the secondary-
   reverse-path are presence container used to indicate the role of the
   path: by default, the path is assumed to be a primary path.</t>

<t>They optionally can contain the name of the primary-path under which
   the requested path could be associated within the YANG tree structure
   defined in <xref target="I-D.ietf-teas-yang-te"/>, which could be useful when the server also
   creates a TE tunnel instance within the operational datastore to
   report the computed paths, as described in <xref target="temp-state"/>: in this
   case, the tunnel-name and the path names are also used as the
   suggested name for that TE tunnel and path instances.</t>

</section>
<section anchor="tunnel-attributes-specified-by-reference"><name>Tunnel attributes specified by reference</name>

<t>The (reference) case provides the information needed to associate
   multiple path requests that are intended to be used within the same
   tunnel.</t>

<t>In order to indicate the role of the path being requested within the
   intended tunnel (e.g., primary or secondary path), the (path-role)
   choice is defined:</t>

<figure><artwork type="ascii-art" name="tunnel-by-reference.txt"><![CDATA[
       |  |  |     +-- (path-role)
       |  |  |        +--:(primary-path)
       |  |  |        |  +-- primary-path!
       |  |  |        |     ...........
       |  |  |        +--:(secondary-path)
       |  |  |        |  +-- secondary-path
       |  |  |        |     ...........
       |  |  |        +--:(primary-reverse-path)
       |  |  |        |  +-- primary-reverse-path
       |  |  |        |     ...........
       |  |  |        +--:(secondary-reverse-path)
       |  |  |           +-- secondary-reverse-path
       |  |  |              +-- preference?                 uint8
       |  |  |              +-- protection-type?            identityref
       |  |  |              +-- restoration-type?           identityref
       |  |  |              +-- restoration-scheme?         identityref
       |  |  |              +-- primary-reverse-path-ref* []
       |  |  |                 +-- (primary-reverse-path-exist)?
       |  |  |                    +--:(path-ref)
       |  |  |                    |  +-- primary-path-ref    leafref
       |  |  |                    +--:(path-request-ref)
       |  |  |                       +-- path-request-ref    leafref
]]></artwork></figure>

<t>The primary-path is a presence container used to indicate that the
   requested path is intended to be used as a primary path. It can also
   contain some attributes which are configured only on primary paths
   (e.g., the k-requested-paths).</t>

<t>The secondary-path container indicates that the requested path is
   intended to be used as a secondary path and it contains at least
   references to one or more primary paths which can use it as a
   candidate secondary path:</t>

<figure><artwork type="ascii-art" name="secondary-path.txt"><![CDATA[
       |  |  |        |  +-- secondary-path
       |  |  |        |     ...........
       |  |  |        |     +-- primary-path-ref* []
       |  |  |        |        +-- (primary-path-exist)?
       |  |  |        |           +--:(path-ref)
       |  |  |        |           |  +-- primary-path-ref    leafref
       |  |  |        |           +--:(path-request-ref)
       |  |  |        |              +-- path-request-ref    leafref
]]></artwork></figure>

<t>A requested secondary path can reference any requested primary paths,
   and, in case they are intended to be used within an existing TE
   tunnel, it could also reference any existing primary-paths.</t>

<t>The secondary-path container can also contain some attributes which
   are configured only on secondary paths (e.g., the protection-type).</t>

<t>The primary-reverse-path container indicates that the requested path
   is intended to be used as a primary reverse path and it contains only
   the reference to the primary path which is intended to use it as a
   reverse path:</t>

<figure><artwork type="ascii-art" name="primary-reverse-path.txt"><![CDATA[
       |  |  |        |  +-- primary-reverse-path
       |  |  |        |     +-- (primary-path-exist)?
       |  |  |        |        +--:(path-ref)
       |  |  |        |        |  +-- primary-path-ref    leafref
       |  |  |        |        +--:(path-request-ref)
       |  |  |        |           +-- path-request-ref    leafref
]]></artwork></figure>

<t>A requested primary reverse path can reference either a requested
   primary path, or, in case it is intended to be used within an
   existing TE tunnel, an existing primary-path.</t>

<t>The secondary-reverse-path container indicates that the requested
   path is intended to be used as a secondary reverse path and it
   contains at least references to one or more primary paths, whose
   primary reverse path can use it as a candidate secondary reverse
   path:</t>

<figure><artwork type="ascii-art" name="secondary-reverse-path.txt"><![CDATA[
       |  |  |           +-- secondary-reverse-path
       |  |  |              ...........
       |  |  |              +-- primary-reverse-path-ref* []
       |  |  |                 +-- (primary-reverse-path-exist)?
       |  |  |                    +--:(path-ref)
       |  |  |                    |  +-- primary-path-ref    leafref
       |  |  |                    +--:(path-request-ref)
       |  |  |                       +-- path-request-ref    leafref
]]></artwork></figure>

<t>A requested secondary reverse path can reference any requested
   primary paths, and, in case they are intended to be used within an
   existing TE tunnel, it could reference also existing primary-paths.</t>

<t>The secondary-reverse-path container can also contain some attributes
   which are configured only on secondary reverse paths (e.g., the
   protection-type).</t>

<t>In case the requested path is a transit segment of a multi-domain
   end-to-end path, the primary-path may not be needed to be
   setup/computed. However, the request for path computation of a
   secondary-path or a primary-reverse or of a secondary-reverse-path
   requires that the primary-path exists or it is requested within the
   same RPC request. In the latter case, the path request for the
   primary-path should have an empty 'route-object-include-exclude' list,
   as described in section 5.1.1 of <xref target="I-D.ietf-teas-yang-te"/>, to indicate to the server that
   path computation is not requested and no path properties will
   therefore be returned in the RPC response.</t>

</section>
</section>
<section anchor="multi-layer-path-computation"><name>Multi-Layer Path Computation</name>

<t>The models supports requesting multi-layer path computation following
   the same approach based on dependency tunnels, as defined in <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>The tunnel-attributes of a given client-layer path request can
   reference server-layer TE tunnels which can already exist in the YANG
   datastore or be specified in the tunnel-attributes list, within the
   same RPC request:</t>

<figure><artwork type="ascii-art" name="dependency-tunnels.txt"><![CDATA[
       |     +-- dependency-tunnels
       |     |  +-- dependency-tunnel* [name]
       |     |  |  +-- name              -> /te:te/tunnels/tunnel/name
       |     |  |  +-- encoding?         identityref
       |     |  |  +-- switching-type?   identityref
       |     |  +-- dependency-tunnel-attributes* [name]
       |     |     +-- name              leafref
       |     |     +-- encoding?         identityref
       |     |     +-- switching-type?   identityref
]]></artwork></figure>

<t>In a similar way as in <xref target="I-D.ietf-teas-yang-te"/>, the server-layer tunnel
   attributes should provide the information of what would be the
   dynamic link in the client layer topology supported by that tunnel,
   if instantiated:</t>

<figure><artwork type="ascii-art" name="hierarchical-link.txt"><![CDATA[
       |     +-- hierarchical-link
       |        +-- local-te-node-id?         te-types:te-node-id
       |        +-- local-te-link-tp-id?      te-types:te-tp-id
       |        +-- remote-te-node-id?        te-types:te-node-id
       |        +-- te-topology-identifier
       |           +-- provider-id?   te-global-id
       |           +-- client-id?     te-global-id
       |           +-- topology-id?   te-topology-id
]]></artwork></figure>

<t>It is worth noting that since path computation RPC is stateless, the
   dynamic hierarchical links configured for the server-layer tunnel
   attributes cannot be used for path computation of any client-layer
   path unless explicitly referenced in the dependency-tunnel-attributes
   list within the same RPC request.</t>

</section>
</section>
<section anchor="yang-data-model-for-te-path-computation"><name>YANG data model for TE path computation</name>

<section anchor="pc-tree"><name>Tree diagram</name>

<t><xref target="fig-pc-tree"/> below shows the tree diagram of the YANG data model defined
   in module ietf-te-path-computation.yang, defined in <xref target="pc-yang"/>.</t>

<figure title="TE path computation tree diagram" anchor="fig-pc-tree"><artwork type="ascii-art" name="ietf-te-path-computation.tree"><![CDATA[
module: ietf-te-path-computation

  augment /te:tunnels-path-compute/te:input/te:path-compute-info:
    +-- path-request* [request-id]
    |  +-- request-id                            uint32
    |  +-- (tunnel-attributes)?
    |  |  +--:(reference)
    |  |  |  +-- tunnel-reference
    |  |  |     +-- (tunnel-exist)
    |  |  |     |  +--:(tunnel-ref)
    |  |  |     |  |  +-- tunnel-ref                te:tunnel-ref
    |  |  |     |  +--:(tunnel-attributes-ref)
    |  |  |     |     +-- tunnel-attributes-ref     leafref
    |  |  |     +-- path-name?                      string
    |  |  |     +-- (path-role)
    |  |  |        +--:(primary-path)
    |  |  |        |  +-- primary-path!
    |  |  |        |     +-- preference?          uint8
    |  |  |        |     +-- co-routed?           empty
    |  |  |        |     +-- k-requested-paths?   uint8
    |  |  |        +--:(secondary-path)
    |  |  |        |  +-- secondary-path
    |  |  |        |     +-- preference?           uint8
    |  |  |        |     +-- co-routed?            empty
    |  |  |        |     +-- protection-type?      identityref
    |  |  |        |     +-- restoration-type?     identityref
    |  |  |        |     +-- restoration-scheme?   identityref
    |  |  |        |     +-- primary-path-ref* []
    |  |  |        |        +-- (primary-path-exist)
    |  |  |        |           +--:(path-ref)
    |  |  |        |           |  +-- primary-path-ref    leafref
    |  |  |        |           +--:(path-request-ref)
    |  |  |        |              +-- path-request-ref    leafref
    |  |  |        +--:(primary-reverse-path)
    |  |  |        |  +-- primary-reverse-path
    |  |  |        |     +-- (primary-path-exist)
    |  |  |        |        +--:(path-ref)
    |  |  |        |        |  +-- primary-path-ref    leafref
    |  |  |        |        +--:(path-request-ref)
    |  |  |        |           +-- path-request-ref    leafref
    |  |  |        +--:(secondary-reverse-path)
    |  |  |           +-- secondary-reverse-path
    |  |  |              +-- protection-type?        identityref
    |  |  |              +-- restoration-type?       identityref
    |  |  |              +-- restoration-scheme?     identityref
    |  |  |              +-- primary-reverse-path* []
    |  |  |                 +-- (primary-reverse-path-exist)
    |  |  |                    +--:(path-ref)
    |  |  |                    |  +-- primary-path-ref    leafref
    |  |  |                    +--:(path-request-ref)
    |  |  |                       +-- path-request-ref    leafref
    |  |  +--:(value)
    |  |     +-- tunnel-name?                    string
    |  |     +-- path-name?                      string
    |  |     +-- (path-role)?
    |  |     |  +--:(primary-path)
    |  |     |  +--:(secondary-path)
    |  |     |  |  +-- secondary-path!
    |  |     |  |     +-- primary-path-name?   string
    |  |     |  +--:(primary-reverse-path)
    |  |     |  |  +-- primary-reverse-path!
    |  |     |  |     +-- primary-path-name?   string
    |  |     |  +--:(secondary-reverse-path)
    |  |     |     +-- secondary-reverse-path!
    |  |     |        +-- primary-path-name?           string
    |  |     |        +-- primary-reverse-path-name?   string
    |  |     +-- k-requested-paths?              uint8
    |  |     +-- encoding?                       identityref
    |  |     +-- switching-type?                 identityref
    |  |     +-- source?                         te-types:te-node-id
    |  |     +-- destination?                    te-types:te-node-id
    |  |     +-- src-tunnel-tp-id?               binary
    |  |     +-- dst-tunnel-tp-id?               binary
    |  |     +-- bidirectional?                  boolean
    |  |     +-- te-topology-identifier
    |  |        +-- provider-id?   te-global-id
    |  |        +-- client-id?     te-global-id
    |  |        +-- topology-id?   te-topology-id
    |  +-- association-objects
    |  |  +-- association-object* [association-key]
    |  |  |  +-- association-key    string
    |  |  |  +-- type?              identityref
    |  |  |  +-- id?                uint16
    |  |  |  +-- source
    |  |  |     +-- id?     te-gen-node-id
    |  |  |     +-- type?   enumeration
    |  |  +-- association-object-extended* [association-key]
    |  |     +-- association-key    string
    |  |     +-- type?              identityref
    |  |     +-- id?                uint16
    |  |     +-- source
    |  |     |  +-- id?     te-gen-node-id
    |  |     |  +-- type?   enumeration
    |  |     +-- global-source?     uint32
    |  |     +-- extended-id?       yang:hex-string
    |  +-- optimizations
    |  |  +-- (algorithm)?
    |  |     +--:(metric) {path-optimization-metric}?
    |  |     |  +-- optimization-metric* [metric-type]
    |  |     |  |  +-- metric-type                       identityref
    |  |     |  |  +-- weight?                           uint8
    |  |     |  |  +-- explicit-route-exclude-objects
    |  |     |  |  |  +-- route-object-exclude-object* [index]
    |  |     |  |  |     +-- index                        uint32
    |  |     |  |  |     +-- (type)?
    |  |     |  |  |        +--:(numbered-node-hop)
    |  |     |  |  |        |  +-- numbered-node-hop
    |  |     |  |  |        |     +-- node-id     te-node-id
    |  |     |  |  |        |     +-- hop-type?   te-hop-type
    |  |     |  |  |        +--:(numbered-link-hop)
    |  |     |  |  |        |  +-- numbered-link-hop
    |  |     |  |  |        |     +-- link-tp-id    te-tp-id
    |  |     |  |  |        |     +-- hop-type?     te-hop-type
    |  |     |  |  |        |     +-- direction?    te-link-direction
    |  |     |  |  |        +--:(unnumbered-link-hop)
    |  |     |  |  |        |  +-- unnumbered-link-hop
    |  |     |  |  |        |     +-- link-tp-id    te-tp-id
    |  |     |  |  |        |     +-- node-id       te-node-id
    |  |     |  |  |        |     +-- hop-type?     te-hop-type
    |  |     |  |  |        |     +-- direction?    te-link-direction
    |  |     |  |  |        +--:(as-number)
    |  |     |  |  |        |  +-- as-number-hop
    |  |     |  |  |        |     +-- as-number    inet:as-number
    |  |     |  |  |        |     +-- hop-type?    te-hop-type
    |  |     |  |  |        +--:(label)
    |  |     |  |  |        |  +-- label-hop
    |  |     |  |  |        |     +-- te-label
    |  |     |  |  |        |        +-- (technology)?
    |  |     |  |  |        |        |  +--:(generic)
    |  |     |  |  |        |        |     +-- generic?
    |  |     |  |  |        |        |             rt-types:generalized-label
    |  |     |  |  |        |        +-- direction?
    |  |     |  |  |        |                te-label-direction
    |  |     |  |  |        +--:(srlg)
    |  |     |  |  |           +-- srlg
    |  |     |  |  |              +-- srlg?   uint32
    |  |     |  |  +-- explicit-route-include-objects
    |  |     |  |     +-- route-object-include-object* [index]
    |  |     |  |        +-- index                        uint32
    |  |     |  |        +-- (type)?
    |  |     |  |           +--:(numbered-node-hop)
    |  |     |  |           |  +-- numbered-node-hop
    |  |     |  |           |     +-- node-id     te-node-id
    |  |     |  |           |     +-- hop-type?   te-hop-type
    |  |     |  |           +--:(numbered-link-hop)
    |  |     |  |           |  +-- numbered-link-hop
    |  |     |  |           |     +-- link-tp-id    te-tp-id
    |  |     |  |           |     +-- hop-type?     te-hop-type
    |  |     |  |           |     +-- direction?    te-link-direction
    |  |     |  |           +--:(unnumbered-link-hop)
    |  |     |  |           |  +-- unnumbered-link-hop
    |  |     |  |           |     +-- link-tp-id    te-tp-id
    |  |     |  |           |     +-- node-id       te-node-id
    |  |     |  |           |     +-- hop-type?     te-hop-type
    |  |     |  |           |     +-- direction?    te-link-direction
    |  |     |  |           +--:(as-number)
    |  |     |  |           |  +-- as-number-hop
    |  |     |  |           |     +-- as-number    inet:as-number
    |  |     |  |           |     +-- hop-type?    te-hop-type
    |  |     |  |           +--:(label)
    |  |     |  |              +-- label-hop
    |  |     |  |                 +-- te-label
    |  |     |  |                    +-- (technology)?
    |  |     |  |                    |  +--:(generic)
    |  |     |  |                    |     +-- generic?
    |  |     |  |                    |             rt-types:generalized-label
    |  |     |  |                    +-- direction?
    |  |     |  |                            te-label-direction
    |  |     |  +-- tiebreakers
    |  |     |     +-- tiebreaker* [tiebreaker-type]
    |  |     |        +-- tiebreaker-type    identityref
    |  |     +--:(objective-function)
    |  |              {path-optimization-objective-function}?
    |  |        +-- objective-function
    |  |           +-- objective-function-type?   identityref
    |  +-- named-path-constraint?                leafref
    |  |       {te-types:named-path-constraints}?
    |  +-- te-bandwidth
    |  |  +-- (technology)?
    |  |     +--:(generic)
    |  |        +-- generic?   te-bandwidth
    |  +-- link-protection?                      identityref
    |  +-- setup-priority?                       uint8
    |  +-- hold-priority?                        uint8
    |  +-- signaling-type?                       identityref
    |  +-- path-metric-bounds
    |  |  +-- path-metric-bound* [metric-type]
    |  |     +-- metric-type    identityref
    |  |     +-- upper-bound?   uint64
    |  +-- path-affinities-values
    |  |  +-- path-affinities-value* [usage]
    |  |     +-- usage    identityref
    |  |     +-- value?   admin-groups
    |  +-- path-affinity-names
    |  |  +-- path-affinity-name* [usage]
    |  |     +-- usage            identityref
    |  |     +-- affinity-name* [name]
    |  |        +-- name    string
    |  +-- path-srlgs-lists
    |  |  +-- path-srlgs-list* [usage]
    |  |     +-- usage     identityref
    |  |     +-- values*   srlg
    |  +-- path-srlgs-names
    |  |  +-- path-srlgs-name* [usage]
    |  |     +-- usage    identityref
    |  |     +-- names*   string
    |  +-- disjointness?                         te-path-disjointness
    |  +-- explicit-route-objects-always
    |  |  +-- route-object-exclude-always* [index]
    |  |  |  +-- index                        uint32
    |  |  |  +-- (type)?
    |  |  |     +--:(numbered-node-hop)
    |  |  |     |  +-- numbered-node-hop
    |  |  |     |     +-- node-id     te-node-id
    |  |  |     |     +-- hop-type?   te-hop-type
    |  |  |     +--:(numbered-link-hop)
    |  |  |     |  +-- numbered-link-hop
    |  |  |     |     +-- link-tp-id    te-tp-id
    |  |  |     |     +-- hop-type?     te-hop-type
    |  |  |     |     +-- direction?    te-link-direction
    |  |  |     +--:(unnumbered-link-hop)
    |  |  |     |  +-- unnumbered-link-hop
    |  |  |     |     +-- link-tp-id    te-tp-id
    |  |  |     |     +-- node-id       te-node-id
    |  |  |     |     +-- hop-type?     te-hop-type
    |  |  |     |     +-- direction?    te-link-direction
    |  |  |     +--:(as-number)
    |  |  |     |  +-- as-number-hop
    |  |  |     |     +-- as-number    inet:as-number
    |  |  |     |     +-- hop-type?    te-hop-type
    |  |  |     +--:(label)
    |  |  |        +-- label-hop
    |  |  |           +-- te-label
    |  |  |              +-- (technology)?
    |  |  |              |  +--:(generic)
    |  |  |              |     +-- generic?
    |  |  |              |             rt-types:generalized-label
    |  |  |              +-- direction?       te-label-direction
    |  |  +-- route-object-include-exclude* [index]
    |  |     +-- explicit-route-usage?        identityref
    |  |     +-- index                        uint32
    |  |     +-- (type)?
    |  |        +--:(numbered-node-hop)
    |  |        |  +-- numbered-node-hop
    |  |        |     +-- node-id     te-node-id
    |  |        |     +-- hop-type?   te-hop-type
    |  |        +--:(numbered-link-hop)
    |  |        |  +-- numbered-link-hop
    |  |        |     +-- link-tp-id    te-tp-id
    |  |        |     +-- hop-type?     te-hop-type
    |  |        |     +-- direction?    te-link-direction
    |  |        +--:(unnumbered-link-hop)
    |  |        |  +-- unnumbered-link-hop
    |  |        |     +-- link-tp-id    te-tp-id
    |  |        |     +-- node-id       te-node-id
    |  |        |     +-- hop-type?     te-hop-type
    |  |        |     +-- direction?    te-link-direction
    |  |        +--:(as-number)
    |  |        |  +-- as-number-hop
    |  |        |     +-- as-number    inet:as-number
    |  |        |     +-- hop-type?    te-hop-type
    |  |        +--:(label)
    |  |        |  +-- label-hop
    |  |        |     +-- te-label
    |  |        |        +-- (technology)?
    |  |        |        |  +--:(generic)
    |  |        |        |     +-- generic?
    |  |        |        |             rt-types:generalized-label
    |  |        |        +-- direction?       te-label-direction
    |  |        +--:(srlg)
    |  |           +-- srlg
    |  |              +-- srlg?   uint32
    |  +-- path-in-segment!
    |  |  +-- label-restrictions
    |  |     +-- label-restriction* [index]
    |  |        +-- restriction?    enumeration
    |  |        +-- index           uint32
    |  |        +-- label-start
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-end
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-step
    |  |        |  +-- (technology)?
    |  |        |     +--:(generic)
    |  |        |        +-- generic?   int32
    |  |        +-- range-bitmap?   yang:hex-string
    |  +-- path-out-segment!
    |  |  +-- label-restrictions
    |  |     +-- label-restriction* [index]
    |  |        +-- restriction?    enumeration
    |  |        +-- index           uint32
    |  |        +-- label-start
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-end
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-step
    |  |        |  +-- (technology)?
    |  |        |     +--:(generic)
    |  |        |        +-- generic?   int32
    |  |        +-- range-bitmap?   yang:hex-string
    |  +-- requested-metrics* [metric-type]
    |  |  +-- metric-type    identityref
    |  +-- return-srlgs?                         boolean
    |  +-- return-affinities?                    boolean
    |  +-- requested-state!
    |     +-- timer?            uint16
    |     +-- transaction-id?   string
    +-- tunnel-attributes* [tunnel-name]
    |  +-- tunnel-name               string
    |  +-- encoding?                 identityref
    |  +-- switching-type?           identityref
    |  +-- source?                   te-types:te-node-id
    |  +-- destination?              te-types:te-node-id
    |  +-- src-tunnel-tp-id?         binary
    |  +-- dst-tunnel-tp-id?         binary
    |  +-- bidirectional?            boolean
    |  +-- association-objects
    |  |  +-- association-object* [association-key]
    |  |  |  +-- association-key    string
    |  |  |  +-- type?              identityref
    |  |  |  +-- id?                uint16
    |  |  |  +-- source
    |  |  |     +-- id?     te-gen-node-id
    |  |  |     +-- type?   enumeration
    |  |  +-- association-object-extended* [association-key]
    |  |     +-- association-key    string
    |  |     +-- type?              identityref
    |  |     +-- id?                uint16
    |  |     +-- source
    |  |     |  +-- id?     te-gen-node-id
    |  |     |  +-- type?   enumeration
    |  |     +-- global-source?     uint32
    |  |     +-- extended-id?       yang:hex-string
    |  +-- protection-type?          identityref
    |  +-- restoration-type?         identityref
    |  +-- restoration-scheme?       identityref
    |  +-- te-topology-identifier
    |  |  +-- provider-id?   te-global-id
    |  |  +-- client-id?     te-global-id
    |  |  +-- topology-id?   te-topology-id
    |  +-- te-bandwidth
    |  |  +-- (technology)?
    |  |     +--:(generic)
    |  |        +-- generic?   te-bandwidth
    |  +-- link-protection?          identityref
    |  +-- setup-priority?           uint8
    |  +-- hold-priority?            uint8
    |  +-- signaling-type?           identityref
    |  +-- hierarchy
    |     +-- dependency-tunnels
    |     |  +-- dependency-tunnel* [name]
    |     |  |  +-- name              -> /te:te/tunnels/tunnel/name
    |     |  |  +-- encoding?         identityref
    |     |  |  +-- switching-type?   identityref
    |     |  +-- dependency-tunnel-attributes* [name]
    |     |     +-- name              leafref
    |     |     +-- encoding?         identityref
    |     |     +-- switching-type?   identityref
    |     +-- hierarchical-link
    |        +-- enable?                   boolean
    |        +-- local-te-node-id?         te-types:te-node-id
    |        +-- local-te-link-tp-id?      te-types:te-tp-id
    |        +-- remote-te-node-id?        te-types:te-node-id
    |        +-- te-topology-identifier
    |           +-- provider-id?   te-global-id
    |           +-- client-id?     te-global-id
    |           +-- topology-id?   te-topology-id
    +-- synchronization* []
       +-- svec
       |  +-- relaxable?      boolean
       |  +-- disjointness?   te-path-disjointness
       |  +-- request-id*     uint32
       +-- svec-constraints
       |  +-- path-metric-bound* [metric-type]
       |     +-- metric-type    identityref
       |     +-- upper-bound?   uint64
       +-- path-srlgs-lists
       |  +-- path-srlgs-list* [usage]
       |     +-- usage     identityref
       |     +-- values*   srlg
       +-- path-srlgs-names
       |  +-- path-srlgs-name* [usage]
       |     +-- usage    identityref
       |     +-- names*   string
       +-- exclude-objects
       |  +-- excludes* []
       |     +-- (type)?
       |        +--:(numbered-node-hop)
       |        |  +-- numbered-node-hop
       |        |     +-- node-id     te-node-id
       |        |     +-- hop-type?   te-hop-type
       |        +--:(numbered-link-hop)
       |        |  +-- numbered-link-hop
       |        |     +-- link-tp-id    te-tp-id
       |        |     +-- hop-type?     te-hop-type
       |        |     +-- direction?    te-link-direction
       |        +--:(unnumbered-link-hop)
       |        |  +-- unnumbered-link-hop
       |        |     +-- link-tp-id    te-tp-id
       |        |     +-- node-id       te-node-id
       |        |     +-- hop-type?     te-hop-type
       |        |     +-- direction?    te-link-direction
       |        +--:(as-number)
       |        |  +-- as-number-hop
       |        |     +-- as-number    inet:as-number
       |        |     +-- hop-type?    te-hop-type
       |        +--:(label)
       |           +-- label-hop
       |              +-- te-label
       |                 +-- (technology)?
       |                 |  +--:(generic)
       |                 |     +-- generic?
       |                 |             rt-types:generalized-label
       |                 +-- direction?       te-label-direction
       +-- optimizations
          +-- (algorithm)?
             +--:(metric) {te-types:path-optimization-metric}?
             |  +-- optimization-metric* [metric-type]
             |     +-- metric-type    identityref
             |     +-- weight?        uint8
             +--:(objective-function)
                      {te-types:path-optimization-objective-function}?
                +-- objective-function
                   +-- objective-function-type?   identityref
  augment /te:tunnels-path-compute/te:output/te:path-compute-result:
    +--ro response* [response-id]
       +--ro response-id                         uint32
       +--ro computed-paths-properties
       |  +--ro computed-path-properties* [k-index]
       |     +--ro k-index            uint8
       |     +--ro path-properties
       |        +--ro path-metric* [metric-type]
       |        |  +--ro metric-type           identityref
       |        |  +--ro accumulative-value?   uint64
       |        +--ro path-affinities-values
       |        |  +--ro path-affinities-value* [usage]
       |        |     +--ro usage    identityref
       |        |     +--ro value?   admin-groups
       |        +--ro path-affinity-names
       |        |  +--ro path-affinity-name* [usage]
       |        |     +--ro usage            identityref
       |        |     +--ro affinity-name* [name]
       |        |        +--ro name    string
       |        +--ro path-srlgs-lists
       |        |  +--ro path-srlgs-list* [usage]
       |        |     +--ro usage     identityref
       |        |     +--ro values*   srlg
       |        +--ro path-srlgs-names
       |        |  +--ro path-srlgs-name* [usage]
       |        |     +--ro usage    identityref
       |        |     +--ro names*   string
       |        +--ro path-route-objects
       |        |  +--ro path-route-object* [index]
       |        |     +--ro index                        uint32
       |        |     +--ro (type)?
       |        |        +--:(numbered-node-hop)
       |        |        |  +--ro numbered-node-hop
       |        |        |     +--ro node-id     te-node-id
       |        |        |     +--ro hop-type?   te-hop-type
       |        |        +--:(numbered-link-hop)
       |        |        |  +--ro numbered-link-hop
       |        |        |     +--ro link-tp-id    te-tp-id
       |        |        |     +--ro hop-type?     te-hop-type
       |        |        |     +--ro direction?    te-link-direction
       |        |        +--:(unnumbered-link-hop)
       |        |        |  +--ro unnumbered-link-hop
       |        |        |     +--ro link-tp-id    te-tp-id
       |        |        |     +--ro node-id       te-node-id
       |        |        |     +--ro hop-type?     te-hop-type
       |        |        |     +--ro direction?    te-link-direction
       |        |        +--:(as-number)
       |        |        |  +--ro as-number-hop
       |        |        |     +--ro as-number    inet:as-number
       |        |        |     +--ro hop-type?    te-hop-type
       |        |        +--:(label)
       |        |           +--ro label-hop
       |        |              +--ro te-label
       |        |                 +--ro (technology)?
       |        |                 |  +--:(generic)
       |        |                 |     +--ro generic?
       |        |                 |             rt-types:generalized-label
       |        |                 +--ro direction?
       |        |                         te-label-direction
       |        +--ro te-bandwidth
       |        |  +--ro (technology)?
       |        |     +--:(generic)
       |        |        +--ro generic?   te-bandwidth
       |        +--ro disjointness-type?
       |                te-types:te-path-disjointness
       +--ro computed-path-error-infos
       |  +--ro computed-path-error-info* []
       |     +--ro error-description?   string
       |     +--ro error-timestamp?     yang:date-and-time
       |     +--ro error-reason?        identityref
       +--ro tunnel-ref?                         te:tunnel-ref
       +--ro (path-role)?
          +--:(primary)
          |  +--ro primary-path-ref?             leafref
          +--:(primary-reverse)
          |  +--ro primary-reverse-path-ref?     leafref
          +--:(secondary)
          |  +--ro secondary-path-ref?           leafref
          +--:(secondary-reverse)
             +--ro secondary-reverse-path-ref?   leafref
  augment /te:tunnels-actions/te:input/te:tunnel-info/te:filter-type:
    +--:(path-compute-transactions)
       +-- path-compute-transaction-id*   string
  augment /te:tunnels-actions/te:output:
    +--ro path-computed-delete-result
       +--ro path-compute-transaction-id*   string
]]></artwork></figure>

</section>
<section anchor="pc-yang"><name>YANG module</name>

<figure title="TE path computation YANG module" anchor="fig-pc-yang"><sourcecode type="yang" markers="true" name="ietf-te-path-computation@2022-10-21.yang"><![CDATA[
module ietf-te-path-computation {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-te-path-computation";
  prefix te-pc;

  import ietf-te {
    prefix te;
    reference
      "RFCYYYY: A YANG Data Model for Traffic Engineering Tunnels
       and Interfaces";
  }

  /* Note: The RFC Editor will replace YYYY with the number assigned
     to the RFC once draft-ietf-teas-yang-te becomes an RFC.*/

  import ietf-te-types {
    prefix te-types;
    reference
      "RFCZZZZ: Updated Common YANG Data Types for Traffic 
      Engineering";
  }

  /* Note: The RFC Editor will replace YYYY with the number assigned
     to the RFC once draft-ietf-teas-rfc8776-update becomes an RFC.*/

  organization
    "Traffic Engineering Architecture and Signaling (TEAS)
     Working Group";
  contact
    "WG Web: <https://datatracker.ietf.org/wg/teas/>
     WG List:  <mailto:teas@ietf.org>

     Editor:   Italo Busi
               <mailto:italo.busi@huawei.com>

     Editor:   Sergio Belotti
               <mailto:sergio.belotti@nokia.com>

     Editor:   Victor Lopez
               <mailto:victor.lopez@nokia.com>

     Editor:   Oscar Gonzalez de Dios
               <mailto:oscar.gonzalezdedios@telefonica.com>

     Editor:   Anurag Sharma
               <mailto:ansha@google.com>

     Editor:   Yan Shi
               <mailto:shiyan49@chinaunicom.cn>

     Editor:   Ricard Vilalta
               <mailto:ricard.vilalta@cttc.es>

     Editor:   Karthik Sethuraman
               <mailto:karthik.sethuraman@necam.com>

     Editor:   Michael Scharf
               <mailto:michael.scharf@gmail.com>

     Editor:   Daniele Ceccarelli
               <mailto:daniele.ceccarelli@ericsson.com>
     
    ";
  description
    "This module defines a YANG data model for requesting Traffic
     Engineering (TE) path computation. The YANG data model defined
     in this document augments the RPCs defined in the generic TE
     module (ietf-te).

     The model fully conforms to the
     Network Management Datastore Architecture (NMDA).

     Copyright (c) 2023 IETF Trust and the persons
     identified as authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with
     or without modification, is permitted pursuant to, and
     subject to the license terms contained in, the Revised
     BSD License set forth in Section 4.c of the IETF Trust's
     Legal Provisions Relating to IETF Documents
     (https://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC XXXX; see
     the RFC itself for full legal notices.

     The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL', 'SHALL
     NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'NOT RECOMMENDED',
     'MAY', and 'OPTIONAL' in this document are to be interpreted as
     described in BCP 14 (RFC 2119) (RFC 8174) when, and only when,
     they appear in all capitals, as shown here.";

  // RFC Ed.: replace XXXX with actual RFC number and remove
  // this note
  // replace the revision date with the module publication date
  // the format is (year-month-day)

  revision 2023-01-12 {
    description
      "Initial revision";
    reference
      "RFC XXXX: A YANG Data Model for requesting path computation";
  }

  // RFC Ed.: replace XXXX with actual RFC number and remove
  // this note

  /*
   * Identities
   */

  identity tunnel-action-path-compute-delete {
    base te-types:tunnel-actions-type;
    description
      "Action type to delete the transient states
      of computed paths, as described in section 3.3.1 of
      RFC XXXX.";
    reference
      "RFC XXXX: A YANG Data Model for requesting path computation";
  }

  /*
   * Groupings
   */

  grouping protection-restoration-properties {
    description
      "This grouping defines the restoration and protection types
       for a path in the path computation request.";
    leaf protection-type {
      type identityref {
        base te-types:lsp-protection-type;
      }
      default "te-types:lsp-protection-unprotected";
      description
        "LSP protection type.";
    }
    leaf restoration-type {
      type identityref {
        base te-types:lsp-restoration-type;
      }
      default "te-types:lsp-restoration-restore-any";
      description
        "LSP restoration type.";
    }
    leaf restoration-scheme {
      type identityref {
        base te-types:restoration-scheme-type;
      }
      default "te-types:restoration-scheme-preconfigured";
      description
        "LSP restoration scheme.";
    }
  } // grouping protection-restoration-properties

  grouping requested-info {
    description
      "This grouping defines the information which is requested
       (e.g., metrics), in the path computation request, to be
       returned in the path computation response.";
    list requested-metrics {
      key "metric-type";
      description
        "The list of the requested metrics.

         The metrics listed here MUST be returned in the response.
         Returning other metrics in the response is OPTIONAL.";
      leaf metric-type {
        type identityref {
          base te-types:path-metric-type;
        }
        description
          "The metric requested to be returned in the response";
      }
    }
    leaf return-srlgs {
      type boolean;
      default "false";
      description
        "If true, path Shared Risk Link Groups (SRLGs) MUST be
         returned in the response.
         If false, returning path SRLGs in the response OPTIONAL.";
    }
    leaf return-affinities {
      type boolean;
      default "false";
      description
        "If true, path affinities MUST be returned in the response.
         If false, returning path affinities in the response is
         OPTIONAL.";
    }
  } // grouping requested-info

  grouping requested-state {
    description
      "Configuration for the transient state used
       to report the computed path";
    container requested-state {
      presence
        "Request temporary reporting of the computed path state";
      description
        "Configures attributes for the temporary reporting of the
         computed path state (e.g., expiration timer).";
      leaf timer {
        type uint16;
        units "minutes";
        default "10";
        description
          "The timeout after which the transient state reporting
          the computed path SHOULD be removed.";
      }
      leaf transaction-id {
        type string;
        description
          "The transaction-id associated with this path computation
          to be used for fast deletion of the transient states
          associated with multiple path computations.

          This transaction-id can be used to explicitly delete all
          the transient states of all the computed paths associated
          with the same transaction-id.

          When one path associated with a transaction-id is setup,
          the transient states of all the other computed paths
          with the same transaction-id are automatically removed.

          If not specified, the transient state is removed only
          when the timer expires (when the timer is specified)
          or not created at all (stateless path computation,
          when the timer is not specified).";
      }
    }
  } // grouping requested-state

  grouping reported-state {
    description
      "This grouping defines the information, returned in the path
       computation response, reporting the transient state related
       to the computed path";
    leaf tunnel-ref {
      type te:tunnel-ref;
      description
        "
         Reference to the tunnel that reports the transient state
         of the computed path.

         If no transient state is created, this attribute is
         omitted.
        ";
    }
    choice path-role {
      description
        "The transient state of the computed path can be reported
         as a primary, primary-reverse, secondary or
         a secondary-reverse path of a te-tunnel";
      case primary {
        leaf primary-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:primary-paths/te:primary-path/"
               + "te:name";
          }
          must '../tunnel-ref' {
            description
              "The primary-path name can only be reported
               if the tunnel name is also reported.";
          }
          description
            "
             Reference to the primary-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case primary
      case primary-reverse {
        leaf primary-reverse-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:primary-paths/te:primary-path/"
               + "te:name";
          }
          must '../tunnel-ref' {
            description
              "The primary-reverse-path name can only be reported
               if the tunnel name is also reported.";
          }
          description
            "
             Reference to the primary-reverse-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case primary-reverse
      case secondary {
        leaf secondary-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:secondary-paths/te:secondary-path/"
               + "te:name";
          }
          must '../tunnel-ref' {
            description
              "The secondary-path name can only be reported
               if the tunnel name is also reported.";
          }
          description
            "
             Reference to the secondary-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case secondary
      case secondary-reverse {
        leaf secondary-reverse-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:secondary-reverse-paths/"
               + "te:secondary-reverse-path/te:name";
          }
          must '../tunnel-ref' {
            description
              "The secondary-reverse-path name can only be reported
               if the tunnel name is also reported.";
          }
          description
            "
             Reference to the secondary-reverse-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case secondary
    } // choice path
  } // grouping reported-state

  grouping synchronization-constraints {
    description
      "Global constraints applicable to synchronized path
       computation requests.";
    container svec-constraints {
      description
        "global svec constraints";
      list path-metric-bound {
        key "metric-type";
        description
          "list of bound metrics";
        leaf metric-type {
          type identityref {
            base te-types:svec-metric-type;
          }
          description
            "SVEC metric type.";
          reference
            "RFC5541: Encoding of Objective Functions in the Path
            Computation Element Communication Protocol (PCEP).";
        }
        leaf upper-bound {
          type uint64;
          description
            "Upper bound on SVEC metric";
        }
      }
    }
    uses te-types:generic-path-srlgs;
    container exclude-objects {
      description
        "Resources to be excluded";
      list excludes {
        description
          "List of Explicit Route Objects to always exclude
           from synchronized path computation";
        uses te-types:explicit-route-hop;
      }
    }
  } // grouping synchronization-constraints

  grouping synchronization-optimization {
    description
      "Optimizations applicable to synchronized path
       computation requests.";
    container optimizations {
      description
        "The objective function container that includes attributes
         to impose when computing a synchronized set of paths";
      choice algorithm {
        description
          "Optimizations algorithm.";
        case metric {
          if-feature "te-types:path-optimization-metric";
          list optimization-metric {
            key "metric-type";
            description
              "svec path metric type";
            leaf metric-type {
              type identityref {
                base te-types:svec-metric-type;
              }
              description
                "TE path metric type usable for computing a set of
                synchronized requests";
            }
            leaf weight {
              type uint8;
              description
                "Metric normalization weight";
            }
          }
        }
        case objective-function {
          if-feature
            "te-types:path-optimization-objective-function";
          container objective-function {
            description
              "The objective function container that includes
               attributes to impose when computing a TE path";
            leaf objective-function-type {
              type identityref {
                base te-types:svec-objective-function-type;
              }
              description
                "Objective function entry";
            }
          }
        }
      }
    }
  } // grouping synchronization-optimization

  grouping synchronization-info {
    description
      "Information for synchronized path computation requests.";
    list synchronization {
      description
        "List of Synchronization VECtors.";
      container svec {
        description
          "Synchronization VECtor";
        leaf relaxable {
          type boolean;
          default "true";
          description
            "If this leaf is true, taking into account this svec is
             OPTIONAL and the path computation process is
             free to ignore svec content.
             Otherwise, it MUST take into account this svec.";
        }
        uses te-types:generic-path-disjointness;
        leaf-list request-id {
          type uint32;
          description
            "This list reports the set of path computation
             requests that are requested to be synchronized.";
        }
      }
      uses synchronization-constraints;
      uses synchronization-optimization;
    }
  } // grouping synchronization-info

  /*
   * Augment TE RPCs
   */

  augment "/te:tunnels-path-compute/te:input/te:path-compute-info" {
    description
      "Augments Path Computation RPC input";
    list path-request {
      key "request-id";
      description
        "The list of the requested paths to be computed";
      leaf request-id {
        type uint32;
        mandatory true;
        description
          "Each path computation request is uniquely identified
           within the RPC request by the request-id.";
      }
      choice tunnel-attributes {
        default "value";
        description
          "Whether the tunnel attributes are specified by value
           within this path computation request or by reference.
           The reference could be either to an existing te-tunnel
           or to an entry in the tunnel-attributes list";
        case reference {
          container tunnel-reference {
            description
              "Attributes for a requested path that belongs to
              either an exiting te-tunnel or to an entry in the
              tunnel-attributes list.";
            choice tunnel-exist {
              mandatory true;
              description
                "Whether the tunnel reference is to an existing
                te-tunnel or to an entry in the tunnel-attributes
                list";
              case tunnel-ref {
                leaf tunnel-ref {
                  type te:tunnel-ref;
                  mandatory true;
                  description
                    "The referenced te-tunnel instance";
                }
              } // case tunnel-ref
              case tunnel-attributes-ref {
                leaf tunnel-attributes-ref {
                  type leafref {
                    path "/te:tunnels-path-compute/"
                      + "te:path-compute-info/"
                      + "te-pc:tunnel-attributes/te-pc:tunnel-name";
                  }
                  mandatory true;
                  description
                    "The referenced te-tunnel instance";
                }
              } // case tunnel-attributes-ref 
            } // choice tunnel-exist
            leaf path-name {
              type string;
              description
                "TE path name.";
            }
            choice path-role {
              mandatory true;
              description
                "Whether this path is a primary, or a reverse
                primary, or a secondary, or a reverse secondary
                path.";
              case primary-path {
                container primary-path {
                  presence "Indicates that the requested path
                            is a primary path";
                  description
                    "TE primary path";
                  uses te:path-forward-properties;
                  uses te:k-requested-paths;
                } // container primary-path
              } // case primary-path
              case secondary-path {
                container secondary-path {
                  description
                    "TE secondary path";
                  uses te:path-forward-properties;
                  uses protection-restoration-properties;
                  list primary-path-ref {
                    min-elements 1;
                    description
                      "The list of primary paths that reference
                      this path as a candidate secondary path";
                    choice primary-path-exist {
                      mandatory true;
                      description
                        "Whether the path reference is to an existing
                        te-tunnel path or to another path request";
                      case path-ref {
                        leaf primary-path-ref {
                          type leafref {
                            path "/te:te/te:tunnels/te:tunnel"
                              + "[te:name=current()/../../../"
                              + "tunnel-ref]/te:primary-paths/"
                              + "te:primary-path/te:name";
                          }
                          must '../../../tunnel-ref' {
                            description
                              "The primary-path can be referenced
                              if also the tunnel is referenced.";
                          }
                          mandatory true;
                          description
                            "The referenced primary path";
                        }
                      } // case path-ref
                      case path-request-ref {
                        leaf path-request-ref {
                          type leafref {
                            path "/te:tunnels-path-compute/"
                              + "te:path-compute-info/"
                              + "te-pc:path-request/"
                              + "te-pc:request-id";
                          }
                          mandatory true;
                          description
                            "The referenced primary path request";
                        }
                      } // case path-request-ref 
                    } // choice primary-path-exist
                  } // list primary-path-ref
                } // container secondary-path
              } // case secondary-path
              case primary-reverse-path {
                container primary-reverse-path {
                  description
                    "TE primary reverse path";
                  choice primary-path-exist {
                    mandatory true;
                    description
                      "Whether the path reference to the primary
                      paths for which this path is the reverse-path
                      is to an existing te-tunnel path or to
                      another path request.";
                    case path-ref {
                      leaf primary-path-ref {
                        type leafref {
                          path "/te:te/te:tunnels/te:tunnel[te:name"
                            + "=current()/../../tunnel-ref]/"
                            + "te:primary-paths/te:primary-path/"
                            + "te:name";
                        }
                        must '../../tunnel-ref' {
                          description
                            "The primary-path can be referenced
                            if also the tunnel is referenced.";
                        }
                        mandatory true;
                        description
                          "The referenced primary path";
                      }
                    } // case path-ref
                    case path-request-ref {
                      leaf path-request-ref {
                        type leafref {
                          path "/te:tunnels-path-compute/"
                            + "te:path-compute-info/"
                            + "te-pc:path-request/"
                            + "te-pc:request-id";
                        }
                        mandatory true;
                        description
                          "The referenced primary path request";
                      }
                    } // case path-request-ref 
                  } // choice primary-path-exist
                } // container primary-reverse-path
              } // case primary-reverse-path
              case secondary-reverse-path {
                container secondary-reverse-path {
                  description
                    "TE secondary reverse path";
                  // uses te:path-preference;
                  uses protection-restoration-properties;
                  list primary-reverse-path {
                    min-elements 1;
                    description
                      "The list of primary reverse paths that
                      reference this path as a candidate
                      secondary reverse path";
                    choice primary-reverse-path-exist {
                      mandatory true;
                      description
                        "Whether the path reference is to an existing
                        te-tunnel path or to another path request";
                      case path-ref {
                        leaf primary-path-ref {
                          type leafref {
                            path "/te:te/te:tunnels/te:tunnel"
                              + "[te:name=current()/../../../"
                              + "tunnel-ref]/te:primary-paths/"
                              + "te:primary-path/te:name";
                          }
                          must '../../../tunnel-ref' {
                            description
                              "The primary-path can be referenced
                              if also the tunnel is referenced.";
                          }
                          mandatory true;
                          description
                            "The referenced primary path";
                        }
                      } // case path-ref
                      case path-request-ref {
                        leaf path-request-ref {
                          type leafref {
                            path "/te:tunnels-path-compute/"
                              + "te:path-compute-info/"
                              + "te-pc:path-request/"
                              + "te-pc:request-id";
                          }
                          mandatory true;
                          description
                            "The referenced primary reverse path
                            request";
                        }
                      } // case path-request-ref 
                    } // choice primary-reverse-path-exist
                  } // list primary-reverse-path-ref
                } // container secondary-reverse-path
              } // case secondary-reverse-path
            } // choice tunnel-path-role
          }
        } // case reference
        case value {
          leaf tunnel-name {
            type string;
            description
              "TE tunnel name.";
          }
          leaf path-name {
            type string;
            description
              "TE path name.";
          }
          choice path-role {
            when 'not (./source) and not (./destination) and
                  not (./src-tunnel-tp-id) and
                  not (./dst-tunnel-tp-id)' {
              description
                "When the tunnel attributes are specified by value
                within this path computation, it is assumed that the
                requested path will be the only path of a tunnel.

                If the requested path is a transit segment path
                (i.e., the source, src-tp-id, destination and
                dst-tp-id attributes are empty), it
                could be of any type. Otherwise it could only be a
                primary path.";
            }
            default primary-path;
            description
              "Indicates whether the requested path is a primary
              path, a secondary path, a reverse primary path or a
              reverse secondary path.";
            case primary-path {
              description
                "The requested path is a primary path.";
            }
            container secondary-path {
              presence
                "Indicates that the requested path is a secondary
                path.";
              description
                "The name of the primary path which the requested
                secondary path belongs to.";
              leaf primary-path-name {
                type string;
                description
                  "TE primary path name.";
              }
            } // container secondary-path
            container primary-reverse-path {
              presence
                "Indicates that the requested path is a primary
                reverse path.";
              description
                "The name of the primary path which the requested
                primary reverse path belongs to.";
              leaf primary-path-name {
                type string;
                description
                  "TE primary path name.";
              }
            } // container primary-reverse-path
            container secondary-reverse-path {
              presence
                "Indicates that the requested path is a secondary
                reverse path.";
              description
                "The names of the primary path and of the primary
                reverse path which the requested secondary reverse
                path belongs to.";
              leaf primary-path-name {
                type string;
                description
                  "TE primary path name.";
              }
              leaf primary-reverse-path-name {
                type string;
                description
                  "TE primary reverse path name.";
              }
            } // container primary-reverse-path
          } // choice path-role
          uses te:k-requested-paths;
          uses te-types:encoding-and-switching-type;
          uses te:tunnel-common-attributes;
          uses te-types:te-topology-identifier;
        } // case value
      } // choice tunnel-attributes
      uses te:path-compute-info;
      uses requested-info;
      uses requested-state;
    }
    list tunnel-attributes {
      key "tunnel-name";
      description
        "Tunnel attributes common to multiple request paths";
      leaf tunnel-name {
        type string;
        description
          "TE tunnel name.";
      }
      uses te-types:encoding-and-switching-type;
      uses te:tunnel-common-attributes;
      uses te:tunnel-associations-properties;
      uses protection-restoration-properties;
      uses te-types:tunnel-constraints;
      uses te:tunnel-hierarchy-properties {
        augment "hierarchy/dependency-tunnels" {
          description
            "Augment with the list of dependency tunnel requests.";
          list dependency-tunnel-attributes {
            key "name";
            description
              "A tunnel request entry that this tunnel request can
               potentially depend on.";
            leaf name {
              type leafref {
                path "/te:tunnels-path-compute/"
                   + "te:path-compute-info/te-pc:tunnel-attributes/"
                   + "te-pc:tunnel-name";
              }
              description
                "Dependency tunnel request name.";
            }
            uses te-types:encoding-and-switching-type;
          }
        }
      }
    }
    uses synchronization-info;
  } // path-compute rpc input

  augment "/te:tunnels-path-compute/te:output/"
        + "te:path-compute-result" {
    description
      "Auguments Path Computation RPC output";
    list response {
      key "response-id";
      config false;
      description
        "response";
      leaf response-id {
        type uint32;
        description
          "The response-id has the same value of the
           corresponding request-id.";
      }
      uses te:path-computation-response;
      uses reported-state;
    }
  } // path-compute rpc output

  augment "/te:tunnels-actions/te:input/te:tunnel-info/"
        + "te:filter-type" {
    description
      "Augment Tunnels Action RPC input filter types";
    case path-compute-transactions {
      when "derived-from-or-self(../te:action-info/te:action, "
         + "'tunnel-action-path-compute-delete')";
      description
        "Path Delete RPC input";
      leaf-list path-compute-transaction-id {
        type string;
        description
          "The list of the transaction-id values of the
           transient states to be deleted";
      }
    }
  } // path-delete rpc input

  augment "/te:tunnels-actions/te:output" {
    description
      "Augment Tunnels Action RPC output with path delete result";
    container path-computed-delete-result {
      description
        "Path Delete RPC output";
      leaf-list path-compute-transaction-id {
        type string;
        description
          "The list of the transaction-id values of the
           transient states that have been successfully deleted";
      }
    }
  } // path-delete rpc output
}
]]></sourcecode></figure>

</section>
</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>This document describes use cases of requesting Path Computation
   using YANG data models, which could be used at the ABNO Control
   Interface <xref target="RFC7491"/> and/or between controllers in ACTN <xref target="RFC8453"/>. As
   such, it does not introduce any new security considerations compared
   to the ones related to YANG specification, ABNO specification and
   ACTN Framework defined in <xref target="RFC7950"/>, <xref target="RFC7491"/> and <xref target="RFC8453"/>.</t>

<t>The YANG module defined in this document is designed to be accessed via
   the NETCONF protocol <xref target="RFC6241"/> or RESTCONF protocol <xref target="RFC8040"/>. The
   lowest NETCONF layer is the secure transport layer, and the
   mandatory-to-implement secure transport is Secure Shell (SSH)
   <xref target="RFC6242"/>. The lowest RESTCONF layer is HTTPS, and the mandatory-to-
   implement secure transport is TLS <xref target="RFC8446"/>.</t>

<t>The Network Configuration Access Control Model (NACM) 
   <xref target="RFC8341"/> provides the means to
   restrict access for particular NETCONF or RESTCONF users to a
   preconfigured subset of all available NETCONF or RESTCONF protocol
   operations and content.</t>

<t>The YANG module defined in this document augments the "tunnels-path-compute" and the "tunnel-actions" RPCs defined in <xref target="I-D.ietf-teas-yang-te"/>. The security considerations provided in <xref target="I-D.ietf-teas-yang-te"/> are also applicable to the YANG module
   defined in this document.</t>

<t>Some of the RPC operations defined in this YANG module may be considered
   sensitive or vulnerable in some network environments.  It is thus
   important to control access to these operations. These are the
   operations and their sensitivity/vulnerability:</t>

<t>"te-pc:response/computed-paths-properties": provides the same information provided by the "te:computed-paths-properties" defined in <xref target="I-D.ietf-teas-yang-te"/>. The security considerations provided in <xref target="I-D.ietf-teas-yang-te"/> for the TE tunnel state apply also to this subtree.</t>

<t>"te-pc:response/te-pc:tunnel-ref", "te-pc:response/te-pc:primary-path-ref", "te-pc:response/te-pc:primary-reverse-path-ref", "te-pc:response/te-pc:secondary-path-ref" and "te-pc:response/te-pc:secondary-reverse-path-ref" provides a reference where the same information provided in "te-pc:response/computed-paths-properties" is temporarly stored with the operational datastore (see <xref target="temp-state"/>). Therefore access to this information does not provide any additional security issue that the information provided with "te-pc:response/computed-paths-properties".</t>

<t>"/te:tunnels-actions": the YANG model defined in this document augments this action with a new action type that allows deleting the transient states of computed paths (see <xref target="temp-state"/>). A malicious use of this action would have no impact on the paths carrying live traffic but it would preclude the client from using the "transient states" to request the set-up of exactly that path, if still available.</t>

<t>The security considerations spelled out in the
   YANG specification <xref target="RFC7950"/> apply for this document as well.</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>This document registers the following URIs in the "ns" subregistry
   within the "IETF XML registry" <xref target="RFC3688"/>.</t>

<figure><artwork><![CDATA[
      URI: urn:ietf:params:xml:ns:yang:ietf-te-path-computation
      Registrant Contact:  The IESG.
      XML: N/A, the requested URI is an XML namespace.
]]></artwork></figure>

<t>This document registers a YANG module in the "YANG Module Names"
   registry <xref target="RFC7950"/>.</t>

<figure><artwork><![CDATA[
      name:      ietf-te-path-computation
      namespace: urn:ietf:params:xml:ns:yang:ietf-te-path-computation
      prefix:    te-pc
      reference: this document
]]></artwork></figure>

</section>


  </middle>

  <back>


    <references title='Normative References'>





<reference anchor='RFC6241' target='https://www.rfc-editor.org/info/rfc6241'>
<front>
<title>Network Configuration Protocol (NETCONF)</title>
<author fullname='R. Enns' initials='R.' role='editor' surname='Enns'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'><organization/></author>
<author fullname='A. Bierman' initials='A.' role='editor' surname='Bierman'><organization/></author>
<date month='June' year='2011'/>
<abstract><t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices.  It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages.  The NETCONF protocol operations are realized as remote procedure calls (RPCs).  This document obsoletes RFC 4741.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6241'/>
<seriesInfo name='DOI' value='10.17487/RFC6241'/>
</reference>



<reference anchor='RFC8040' target='https://www.rfc-editor.org/info/rfc8040'>
<front>
<title>RESTCONF Protocol</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<date month='January' year='2017'/>
<abstract><t>This document describes an HTTP-based protocol that provides a programmatic interface for accessing data defined in YANG, using the datastore concepts defined in the Network Configuration Protocol (NETCONF).</t></abstract>
</front>
<seriesInfo name='RFC' value='8040'/>
<seriesInfo name='DOI' value='10.17487/RFC8040'/>
</reference>



<reference anchor='RFC8795' target='https://www.rfc-editor.org/info/rfc8795'>
<front>
<title>YANG Data Model for Traffic Engineering (TE) Topologies</title>
<author fullname='X. Liu' initials='X.' surname='Liu'><organization/></author>
<author fullname='I. Bryskin' initials='I.' surname='Bryskin'><organization/></author>
<author fullname='V. Beeram' initials='V.' surname='Beeram'><organization/></author>
<author fullname='T. Saad' initials='T.' surname='Saad'><organization/></author>
<author fullname='H. Shah' initials='H.' surname='Shah'><organization/></author>
<author fullname='O. Gonzalez de Dios' initials='O.' surname='Gonzalez de Dios'><organization/></author>
<date month='August' year='2020'/>
<abstract><t>This document defines a YANG data model for representing, retrieving, and manipulating Traffic Engineering (TE) Topologies. The model serves as a base model that other technology-specific TE topology models can augment.</t></abstract>
</front>
<seriesInfo name='RFC' value='8795'/>
<seriesInfo name='DOI' value='10.17487/RFC8795'/>
</reference>


<reference anchor='I-D.ietf-teas-yang-te'>
   <front>
      <title>A YANG Data Model for Traffic Engineering Tunnels, Label Switched Paths and Interfaces</title>
      <author fullname='Tarek Saad' initials='T.' surname='Saad'>
         <organization>Cisco Systems Inc</organization>
      </author>
      <author fullname='Rakesh Gandhi' initials='R.' surname='Gandhi'>
         <organization>Cisco Systems Inc</organization>
      </author>
      <author fullname='Xufeng Liu' initials='X.' surname='Liu'>
         <organization>IBM Corporation</organization>
      </author>
      <author fullname='Vishnu Pavan Beeram' initials='V. P.' surname='Beeram'>
         <organization>Juniper Networks</organization>
      </author>
      <author fullname='Igor Bryskin' initials='I.' surname='Bryskin'>
         <organization>Individual</organization>
      </author>
      <author fullname='Oscar Gonzalez de Dios' initials='O. G.' surname='de Dios'>
         <organization>Telefonica</organization>
      </author>
      <date day='24' month='October' year='2022'/>
      <abstract>
	 <t>   This document defines a YANG data model for the provisioning and
   management of Traffic Engineering (TE) tunnels, Label Switched Paths
   (LSPs), and interfaces.  The model covers data that is independent of
   any technology or dataplane encapsulation and is divided into two
   YANG modules that cover device-specific, and device independent data.

   This model covers data for configuration, operational state, remote
   procedural calls, and event notifications.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-teas-yang-te-31'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-teas-yang-te-31.txt' type='TXT'/>
</reference>



<reference anchor='RFC7950' target='https://www.rfc-editor.org/info/rfc7950'>
<front>
<title>The YANG 1.1 Data Modeling Language</title>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<date month='August' year='2016'/>
<abstract><t>YANG is a data modeling language used to model configuration data, state data, Remote Procedure Calls, and notifications for network management protocols.  This document describes the syntax and semantics of version 1.1 of the YANG language.  YANG version 1.1 is a maintenance release of the YANG language, addressing ambiguities and defects in the original specification.  There are a small number of backward incompatibilities from YANG version 1.  This document also specifies the YANG mappings to the Network Configuration Protocol (NETCONF).</t></abstract>
</front>
<seriesInfo name='RFC' value='7950'/>
<seriesInfo name='DOI' value='10.17487/RFC7950'/>
</reference>



<reference anchor='RFC5440' target='https://www.rfc-editor.org/info/rfc5440'>
<front>
<title>Path Computation Element (PCE) Communication Protocol (PCEP)</title>
<author fullname='JP. Vasseur' initials='JP.' role='editor' surname='Vasseur'><organization/></author>
<author fullname='JL. Le Roux' initials='JL.' role='editor' surname='Le Roux'><organization/></author>
<date month='March' year='2009'/>
<abstract><t>This document specifies the Path Computation Element (PCE) Communication Protocol (PCEP) for communications between a Path Computation Client (PCC) and a PCE, or between two PCEs.  Such interactions include path computation requests and path computation replies as well as notifications of specific states related to the use of a PCE in the context of Multiprotocol Label Switching (MPLS) and Generalized MPLS (GMPLS) Traffic Engineering.  PCEP is designed to be flexible and extensible so as to easily allow for the addition of further messages and objects, should further requirements be expressed in the future.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5440'/>
<seriesInfo name='DOI' value='10.17487/RFC5440'/>
</reference>



<reference anchor='RFC7926' target='https://www.rfc-editor.org/info/rfc7926'>
<front>
<title>Problem Statement and Architecture for Information Exchange between Interconnected Traffic-Engineered Networks</title>
<author fullname='A. Farrel' initials='A.' role='editor' surname='Farrel'><organization/></author>
<author fullname='J. Drake' initials='J.' surname='Drake'><organization/></author>
<author fullname='N. Bitar' initials='N.' surname='Bitar'><organization/></author>
<author fullname='G. Swallow' initials='G.' surname='Swallow'><organization/></author>
<author fullname='D. Ceccarelli' initials='D.' surname='Ceccarelli'><organization/></author>
<author fullname='X. Zhang' initials='X.' surname='Zhang'><organization/></author>
<date month='July' year='2016'/>
<abstract><t>In Traffic-Engineered (TE) systems, it is sometimes desirable to establish an end-to-end TE path with a set of constraints (such as bandwidth) across one or more networks from a source to a destination.  TE information is the data relating to nodes and TE links that is used in the process of selecting a TE path.  TE information is usually only available within a network.  We call such a zone of visibility of TE information a domain.  An example of a domain may be an IGP area or an Autonomous System.</t><t>In order to determine the potential to establish a TE path through a series of connected networks, it is necessary to have available a certain amount of TE information about each network.  This need not be the full set of TE information available within each network but does need to express the potential of providing TE connectivity. This subset of TE information is called TE reachability information.</t><t>This document sets out the problem statement for the exchange of TE information between interconnected TE networks in support of end-to-end TE path establishment and describes the best current practice architecture to meet this problem statement.  For reasons that are explained in this document, this work is limited to simple TE constraints and information that determine TE reachability.</t></abstract>
</front>
<seriesInfo name='BCP' value='206'/>
<seriesInfo name='RFC' value='7926'/>
<seriesInfo name='DOI' value='10.17487/RFC7926'/>
</reference>



<reference anchor='RFC8340' target='https://www.rfc-editor.org/info/rfc8340'>
<front>
<title>YANG Tree Diagrams</title>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='L. Berger' initials='L.' role='editor' surname='Berger'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>This document captures the current syntax used in YANG module tree diagrams.  The purpose of this document is to provide a single location for this definition.  This syntax may be updated from time to time based on the evolution of the YANG language.</t></abstract>
</front>
<seriesInfo name='BCP' value='215'/>
<seriesInfo name='RFC' value='8340'/>
<seriesInfo name='DOI' value='10.17487/RFC8340'/>
</reference>


<reference anchor='I-D.ietf-teas-rfc8776-update'>
   <front>
      <title>Updated Common YANG Data Types for Traffic Engineering</title>
      <author fullname='Italo Busi' initials='I.' surname='Busi'>
         <organization>Huawei</organization>
      </author>
      <author fullname='Aihua Guo' initials='A.' surname='Guo'>
         <organization>Futurewei Technologies</organization>
      </author>
      <author fullname='Xufeng Liu' initials='X.' surname='Liu'>
         <organization>IBM Corporation</organization>
      </author>
      <author fullname='Tarek Saad' initials='T.' surname='Saad'>
         <organization>Juniper Networks</organization>
      </author>
      <author fullname='Rakesh Gandhi' initials='R.' surname='Gandhi'>
         <organization>Cisco Systems, Inc.</organization>
      </author>
      <author fullname='Vishnu Pavan Beeram' initials='V. P.' surname='Beeram'>
         <organization>Juniper Networks</organization>
      </author>
      <author fullname='Igor Bryskin' initials='I.' surname='Bryskin'>
         <organization>Individual</organization>
      </author>
      <date day='24' month='October' year='2022'/>
      <abstract>
	 <t>   This document defines few additional common data types, identities,
   and groupings in YANG data modeling language to be imported by
   modules that model Traffic Engineering (TE) configuration and state
   capabilities.

   Editors&#39; note: Copy the text from [RFC8776] and merge it with the
   content of this section before WG LC if the RFC8876-bis approach is
   confirmed.

   This document updates RFC 8776 with a new revision of the module
   ietf-te-types.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-teas-rfc8776-update-01'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-teas-rfc8776-update-01.txt' type='TXT'/>
</reference>



<reference anchor='RFC5441' target='https://www.rfc-editor.org/info/rfc5441'>
<front>
<title>A Backward-Recursive PCE-Based Computation (BRPC) Procedure to Compute Shortest Constrained Inter-Domain Traffic Engineering Label Switched Paths</title>
<author fullname='JP. Vasseur' initials='JP.' role='editor' surname='Vasseur'><organization/></author>
<author fullname='R. Zhang' initials='R.' surname='Zhang'><organization/></author>
<author fullname='N. Bitar' initials='N.' surname='Bitar'><organization/></author>
<author fullname='JL. Le Roux' initials='JL.' surname='Le Roux'><organization/></author>
<date month='April' year='2009'/>
<abstract><t>The ability to compute shortest constrained Traffic Engineering Label Switched Paths (TE LSPs) in Multiprotocol Label Switching (MPLS) and Generalized MPLS (GMPLS) networks across multiple domains has been identified as a key requirement.  In this context, a domain is a collection of network elements within a common sphere of address management or path computational responsibility such as an IGP area or an Autonomous Systems.  This document specifies a procedure relying on the use of multiple Path Computation Elements (PCEs) to compute such inter-domain shortest constrained paths across a predetermined sequence of domains, using a backward-recursive path computation technique.  This technique preserves confidentiality across domains, which is sometimes required when domains are managed by different service providers.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5441'/>
<seriesInfo name='DOI' value='10.17487/RFC5441'/>
</reference>



<reference anchor='RFC5541' target='https://www.rfc-editor.org/info/rfc5541'>
<front>
<title>Encoding of Objective Functions in the Path Computation Element Communication Protocol (PCEP)</title>
<author fullname='JL. Le Roux' initials='JL.' surname='Le Roux'><organization/></author>
<author fullname='JP. Vasseur' initials='JP.' surname='Vasseur'><organization/></author>
<author fullname='Y. Lee' initials='Y.' surname='Lee'><organization/></author>
<date month='June' year='2009'/>
<abstract><t>The computation of one or a set of Traffic Engineering Label Switched Paths (TE LSPs) in MultiProtocol Label Switching (MPLS) and Generalized MPLS (GMPLS) networks is subject to a set of one or more specific optimization criteria, referred to as objective functions (e.g., minimum cost path, widest path, etc.).</t><t>In the Path Computation Element (PCE) architecture, a Path Computation Client (PCC) may want a path to be computed for one or more TE LSPs according to a specific objective function.  Thus, the PCC needs to instruct the PCE to use the correct objective function. Furthermore, it is possible that not all PCEs support the same set of objective functions; therefore, it is useful for the PCC to be able to automatically discover the set of objective functions supported by each PCE.</t><t>This document defines extensions to the PCE communication Protocol (PCEP) to allow a PCE to indicate the set of objective functions it supports.  Extensions are also defined so that a PCC can indicate in a path computation request the required objective function, and a PCE can report in a path computation reply the objective function that was used for path computation.</t><t>This document defines objective function code types for six objective functions previously listed in the PCE requirements work, and provides the definition of four new metric types that apply to a set of synchronized requests.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5541'/>
<seriesInfo name='DOI' value='10.17487/RFC5541'/>
</reference>



<reference anchor='RFC8776' target='https://www.rfc-editor.org/info/rfc8776'>
<front>
<title>Common YANG Data Types for Traffic Engineering</title>
<author fullname='T. Saad' initials='T.' surname='Saad'><organization/></author>
<author fullname='R. Gandhi' initials='R.' surname='Gandhi'><organization/></author>
<author fullname='X. Liu' initials='X.' surname='Liu'><organization/></author>
<author fullname='V. Beeram' initials='V.' surname='Beeram'><organization/></author>
<author fullname='I. Bryskin' initials='I.' surname='Bryskin'><organization/></author>
<date month='June' year='2020'/>
<abstract><t>This document defines a collection of common data types and groupings in YANG data modeling language. These derived common types and groupings are intended to be imported by modules that model Traffic Engineering (TE) configuration and state capabilities.</t></abstract>
</front>
<seriesInfo name='RFC' value='8776'/>
<seriesInfo name='DOI' value='10.17487/RFC8776'/>
</reference>



<reference anchor='RFC6242' target='https://www.rfc-editor.org/info/rfc6242'>
<front>
<title>Using the NETCONF Protocol over Secure Shell (SSH)</title>
<author fullname='M. Wasserman' initials='M.' surname='Wasserman'><organization/></author>
<date month='June' year='2011'/>
<abstract><t>This document describes a method for invoking and running the Network Configuration Protocol (NETCONF) within a Secure Shell (SSH) session as an SSH subsystem.  This document obsoletes RFC 4742.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6242'/>
<seriesInfo name='DOI' value='10.17487/RFC6242'/>
</reference>



<reference anchor='RFC8446' target='https://www.rfc-editor.org/info/rfc8446'>
<front>
<title>The Transport Layer Security (TLS) Protocol Version 1.3</title>
<author fullname='E. Rescorla' initials='E.' surname='Rescorla'><organization/></author>
<date month='August' year='2018'/>
<abstract><t>This document specifies version 1.3 of the Transport Layer Security (TLS) protocol.  TLS allows client/server applications to communicate over the Internet in a way that is designed to prevent eavesdropping, tampering, and message forgery.</t><t>This document updates RFCs 5705 and 6066, and obsoletes RFCs 5077, 5246, and 6961.  This document also specifies new requirements for TLS 1.2 implementations.</t></abstract>
</front>
<seriesInfo name='RFC' value='8446'/>
<seriesInfo name='DOI' value='10.17487/RFC8446'/>
</reference>



<reference anchor='RFC8341' target='https://www.rfc-editor.org/info/rfc8341'>
<front>
<title>Network Configuration Access Control Model</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>The standardization of network configuration interfaces for use with the Network Configuration Protocol (NETCONF) or the RESTCONF protocol requires a structured and secure operating environment that promotes human usability and multi-vendor interoperability.  There is a need for standard mechanisms to restrict NETCONF or RESTCONF protocol access for particular users to a preconfigured subset of all available NETCONF or RESTCONF protocol operations and content.  This document defines such an access control model.</t><t>This document obsoletes RFC 6536.</t></abstract>
</front>
<seriesInfo name='STD' value='91'/>
<seriesInfo name='RFC' value='8341'/>
<seriesInfo name='DOI' value='10.17487/RFC8341'/>
</reference>



<reference anchor='RFC3688' target='https://www.rfc-editor.org/info/rfc3688'>
<front>
<title>The IETF XML Registry</title>
<author fullname='M. Mealling' initials='M.' surname='Mealling'><organization/></author>
<date month='January' year='2004'/>
<abstract><t>This document describes an IANA maintained registry for IETF standards which use Extensible Markup Language (XML) related items such as Namespaces, Document Type Declarations (DTDs), Schemas, and Resource Description Framework (RDF) Schemas.</t></abstract>
</front>
<seriesInfo name='BCP' value='81'/>
<seriesInfo name='RFC' value='3688'/>
<seriesInfo name='DOI' value='10.17487/RFC3688'/>
</reference>




    </references>

    <references title='Informative References'>





<reference anchor='RFC7491' target='https://www.rfc-editor.org/info/rfc7491'>
<front>
<title>A PCE-Based Architecture for Application-Based Network Operations</title>
<author fullname='D. King' initials='D.' surname='King'><organization/></author>
<author fullname='A. Farrel' initials='A.' surname='Farrel'><organization/></author>
<date month='March' year='2015'/>
<abstract><t>Services such as content distribution, distributed databases, or inter-data center connectivity place a set of new requirements on the operation of networks.  They need on-demand and application-specific reservation of network connectivity, reliability, and resources (such as bandwidth) in a variety of network applications (such as point-to-point connectivity, network virtualization, or mobile back-haul) and in a range of network technologies from packet (IP/MPLS) down to optical.  An environment that operates to meet these types of requirements is said to have Application-Based Network Operations (ABNO).  ABNO brings together many existing technologies and may be seen as the use of a toolbox of existing components enhanced with a few new elements.</t><t>This document describes an architecture and framework for ABNO, showing how these components fit together.  It provides a cookbook of existing technologies to satisfy the architecture and meet the needs of the applications.</t></abstract>
</front>
<seriesInfo name='RFC' value='7491'/>
<seriesInfo name='DOI' value='10.17487/RFC7491'/>
</reference>



<reference anchor='RFC8453' target='https://www.rfc-editor.org/info/rfc8453'>
<front>
<title>Framework for Abstraction and Control of TE Networks (ACTN)</title>
<author fullname='D. Ceccarelli' initials='D.' role='editor' surname='Ceccarelli'><organization/></author>
<author fullname='Y. Lee' initials='Y.' role='editor' surname='Lee'><organization/></author>
<date month='August' year='2018'/>
<abstract><t>Traffic Engineered (TE) networks have a variety of mechanisms to facilitate the separation of the data plane and control plane.  They also have a range of management and provisioning protocols to configure and activate network resources.  These mechanisms represent key technologies for enabling flexible and dynamic networking.  The term &quot;Traffic Engineered network&quot; refers to a network that uses any connection-oriented technology under the control of a distributed or centralized control plane to support dynamic provisioning of end-to- end connectivity.</t><t>Abstraction of network resources is a technique that can be applied to a single network domain or across multiple domains to create a single virtualized network that is under the control of a network operator or the customer of the operator that actually owns the network resources.</t><t>This document provides a framework for Abstraction and Control of TE Networks (ACTN) to support virtual network services and connectivity services.</t></abstract>
</front>
<seriesInfo name='RFC' value='8453'/>
<seriesInfo name='DOI' value='10.17487/RFC8453'/>
</reference>



<reference anchor='RFC8454' target='https://www.rfc-editor.org/info/rfc8454'>
<front>
<title>Information Model for Abstraction and Control of TE Networks (ACTN)</title>
<author fullname='Y. Lee' initials='Y.' surname='Lee'><organization/></author>
<author fullname='S. Belotti' initials='S.' surname='Belotti'><organization/></author>
<author fullname='D. Dhody' initials='D.' surname='Dhody'><organization/></author>
<author fullname='D. Ceccarelli' initials='D.' surname='Ceccarelli'><organization/></author>
<author fullname='B. Yoon' initials='B.' surname='Yoon'><organization/></author>
<date month='September' year='2018'/>
<abstract><t>This document provides an information model for Abstraction and Control of TE Networks (ACTN).</t></abstract>
</front>
<seriesInfo name='RFC' value='8454'/>
<seriesInfo name='DOI' value='10.17487/RFC8454'/>
</reference>


<reference anchor='I-D.ietf-ccamp-otn-topo-yang'>
   <front>
      <title>A YANG Data Model for Optical Transport Network Topology</title>
      <author fullname='Haomian Zheng' initials='H.' surname='Zheng'>
         <organization>Huawei Technologies</organization>
      </author>
      <author fullname='Italo Busi' initials='I.' surname='Busi'>
         <organization>Huawei Technologies</organization>
      </author>
      <author fullname='Xufeng Liu' initials='X.' surname='Liu'>
         <organization>IBM Corporation</organization>
      </author>
      <author fullname='Sergio Belotti' initials='S.' surname='Belotti'>
         <organization>Nokia</organization>
      </author>
      <author fullname='Oscar Gonzalez de Dios' initials='O. G.' surname='de Dios'>
         <organization>Telefonica</organization>
      </author>
      <date day='23' month='November' year='2022'/>
      <abstract>
	 <t>   This document describes a YANG data model to describe the topologies
   of an Optical Transport Network (OTN).  It is independent of control
   plane protocols and captures topological and resource-related
   information pertaining to OTN.  This model enables clients, which
   interact with a transport domain controller, for OTN topology-related
   operations such as obtaining the relevant topology resource
   information.


	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-ccamp-otn-topo-yang-16'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-ccamp-otn-topo-yang-16.txt' type='TXT'/>
</reference>



<reference anchor='RFC4655' target='https://www.rfc-editor.org/info/rfc4655'>
<front>
<title>A Path Computation Element (PCE)-Based Architecture</title>
<author fullname='A. Farrel' initials='A.' surname='Farrel'><organization/></author>
<author fullname='J.-P. Vasseur' initials='J.-P.' surname='Vasseur'><organization/></author>
<author fullname='J. Ash' initials='J.' surname='Ash'><organization/></author>
<date month='August' year='2006'/>
<abstract><t>Constraint-based path computation is a fundamental building block for traffic engineering systems such as Multiprotocol Label Switching (MPLS) and Generalized Multiprotocol Label Switching (GMPLS) networks.  Path computation in large, multi-domain, multi-region, or multi-layer networks is complex and may require special computational components and cooperation between the different network domains.</t><t>This document specifies the architecture for a Path Computation Element (PCE)-based model to address this problem space.  This document does not attempt to provide a detailed description of all the architectural components, but rather it describes a set of building blocks for the PCE architecture from which solutions may be constructed.  This memo provides information for the Internet community.</t></abstract>
</front>
<seriesInfo name='RFC' value='4655'/>
<seriesInfo name='DOI' value='10.17487/RFC4655'/>
</reference>



<reference anchor='RFC8342' target='https://www.rfc-editor.org/info/rfc8342'>
<front>
<title>Network Management Datastore Architecture (NMDA)</title>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' surname='Schoenwaelder'><organization/></author>
<author fullname='P. Shafer' initials='P.' surname='Shafer'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<author fullname='R. Wilton' initials='R.' surname='Wilton'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>Datastores are a fundamental concept binding the data models written in the YANG data modeling language to network management protocols such as the Network Configuration Protocol (NETCONF) and RESTCONF. This document defines an architectural framework for datastores based on the experience gained with the initial simpler model, addressing requirements that were not well supported in the initial model.  This document updates RFC 7950.</t></abstract>
</front>
<seriesInfo name='RFC' value='8342'/>
<seriesInfo name='DOI' value='10.17487/RFC8342'/>
</reference>



<reference anchor='RFC6805' target='https://www.rfc-editor.org/info/rfc6805'>
<front>
<title>The Application of the Path Computation Element Architecture to the Determination of a Sequence of Domains in MPLS and GMPLS</title>
<author fullname='D. King' initials='D.' role='editor' surname='King'><organization/></author>
<author fullname='A. Farrel' initials='A.' role='editor' surname='Farrel'><organization/></author>
<date month='November' year='2012'/>
<abstract><t>Computing optimum routes for Label Switched Paths (LSPs) across multiple domains in MPLS Traffic Engineering (MPLS-TE) and GMPLS networks presents a problem because no single point of path computation is aware of all of the links and resources in each domain.  A solution may be achieved using the Path Computation Element (PCE) architecture.</t><t>Where the sequence of domains is known a priori, various techniques can be employed to derive an optimum path.  If the domains are simply connected, or if the preferred points of interconnection are also known, the Per-Domain Path Computation technique can be used.  Where there are multiple connections between domains and there is no preference for the choice of points of interconnection, the Backward-Recursive PCE-based Computation (BRPC) procedure can be used to derive an optimal path.</t><t>This document examines techniques to establish the optimum path when the sequence of domains is not known in advance.  The document shows how the PCE architecture can be extended to allow the optimum sequence of domains to be selected, and the optimum end-to-end path to be derived through the use of a hierarchical relationship between domains.  This document is not an Internet Standards Track  specification; it is published for informational purposes.</t></abstract>
</front>
<seriesInfo name='RFC' value='6805'/>
<seriesInfo name='DOI' value='10.17487/RFC6805'/>
</reference>



<reference anchor='RFC7446' target='https://www.rfc-editor.org/info/rfc7446'>
<front>
<title>Routing and Wavelength Assignment Information Model for Wavelength Switched Optical Networks</title>
<author fullname='Y. Lee' initials='Y.' role='editor' surname='Lee'><organization/></author>
<author fullname='G. Bernstein' initials='G.' role='editor' surname='Bernstein'><organization/></author>
<author fullname='D. Li' initials='D.' surname='Li'><organization/></author>
<author fullname='W. Imajuku' initials='W.' surname='Imajuku'><organization/></author>
<date month='February' year='2015'/>
<abstract><t>This document provides a model of information needed by the Routing and Wavelength Assignment (RWA) process in Wavelength Switched Optical Networks (WSONs).  The purpose of the information described in this model is to facilitate constrained optical path computation in WSONs.  This model takes into account compatibility constraints between WSON signal attributes and network elements but does not include constraints due to optical impairments.  Aspects of this information that may be of use to other technologies utilizing a GMPLS control plane are discussed.</t></abstract>
</front>
<seriesInfo name='RFC' value='7446'/>
<seriesInfo name='DOI' value='10.17487/RFC7446'/>
</reference>




    </references>


<section anchor="examples"><name>Examples</name>

<t>This section contains examples of use of the model with RESTCONF
<xref target="RFC8040"/> and JSON encoding.</t>

<t>These examples show how path computation can be requested for the tunnels configuration provided in Appendix A of <xref target="I-D.ietf-teas-yang-te"/>.</t>

<section anchor="basic-example"><name>Basic Path Computation</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 12.1 of of <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>In this case, the TE Tunnel has only one primary path with no specific constraints.</t>

<figure><artwork type="ascii-art"><![CDATA[
POST /restconf/operations/ietf-te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="basic.json"><![CDATA[
{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 1,
          "tunnel-name": "Example_LSP_Tunnel_A_2",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "192.0.2.1",
          "destination": "192.0.2.4",
          "bidirectional": "false",
          "signaling-type": "te-types:path-setup-rsvp"
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="transient-state-example"><name>Path Computation with transient state</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 12.1 of of <xref target="I-D.ietf-teas-yang-te"/> requesting some transient state to be reported within the operational datastore, as described <xref target="temp-state"/>.</t>

<t>In this case, the TE Tunnel has only one primary path with no specific constraints.</t>

<figure><artwork type="ascii-art"><![CDATA[
POST /restconf/operations/ietf-te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="transient-state.json"><![CDATA[
{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 2,
          "tunnel-name": "Example_LSP_Tunnel_A_2",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "192.0.2.1",
          "destination": "192.0.2.4",
          "bidirectional": "false",
          "signaling-type": "te-types:path-setup-rsvp",
          "requested-state": {
            "transaction-id": "example"
          }
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="global-path-constraint-example"><name>Path Computation with Global Path Constraint</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 12.3 of of <xref target="I-D.ietf-teas-yang-te"/>. The 'named path constraint' is created in section 12.2 of <xref target="I-D.ietf-teas-yang-te"/> applies to this path computation request.</t>

<figure><artwork type="ascii-art"><![CDATA[
POST /restconf/operations/ietf-te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="global-path-constraint.json"><![CDATA[
{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 3,
          "tunnel-name": "Example_LSP_Tunnel_A_4_1",
          "path-name": "Simple_LSP_1",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "192.0.2.1",
          "destination": "192.0.2.4",
          "bidirectional": "false",
          "signaling-type": "path-setup-rsvp",
          "named-path-constraint": "max-hop-3",
          "requested-state": {}
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="tunnel-path-constraint-example"><name>Path Computation with Per-tunnel Path Constraint</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 12.4 of of <xref target="I-D.ietf-teas-yang-te"/>, using a per tunnel path constraint.</t>

<figure><artwork type="ascii-art"><![CDATA[
POST /restconf/operations/ietf-te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="tunnel-path-constraint.json"><![CDATA[
{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 4,
          "tunnel-name": "Example_LSP_Tunnel_A_4_2",
          "path-name": "path1",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "192.0.2.1",
          "destination": "192.0.2.4",
          "bidirectional": "false",
          "signaling-type": "te-types:path-setup-rsvp",
          "path-metric-bounds": {
            "path-metric-bound": [
              {
                "metric-type": "te-types:path-metric-hop",
                "upper-bound": "3"
              }
            ]
          }
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="path-computation-result"><name>Path Computation result</name>

<t>This example reports the output of the path computation RPC request described in <xref target="tunnel-path-constraint-example"/>.</t>

<figure><artwork type="ascii-art"><![CDATA[
HTTP/1.1 200 OK
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="computed-path.json"><![CDATA[
{
  "ietf-te:output": {
    "path-compute-result": {
      "ietf-te-path-computation:response": [
        {
          "response-id": 3,
          "computed-paths-properties": {
            "computed-path-properties": [
              {
                "k-index": "1",
                "path-properties": {
                  "path-route-objects": {
                    "path-route-object": [
                      {
                        "index": "1",
                        "numbered-node-hop": {
                          "node-id": "192.0.2.2"
                        }
                      },
                      {
                        "index": "2",
                        "numbered-node-hop": {
                          "node-id": "192.0.2.4"
                        }
                      }
                    ]
                  }
                }
              }
            ]
          },
          "tunnel-ref": "Example_LSP_Tunnel_A_4_1",
          "primary-path-ref": "path1"
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="path-computation-with-primary-and-secondary-paths"><name>Path Computation with Primary and Secondary Paths</name>

<t>This section contains examples of use of the model to compute primary and secondary paths described in section 12.6 of <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>These examples consider the cases where:
- primary and reverse paths are unidirectional and not co-routed (example-1);
- primary and reverse paths are bidirectional (example-3);
- primary and reverse paths are unidirectional and co-routed (example-4).</t>

<figure><artwork type="ascii-art"><![CDATA[
POST /restconf/operations/ietf-te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="primary-secondary-paths.json"><![CDATA[
{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 1,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "primary-1 (fwd)",
            "primary-path": {}
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 2,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "primary-2 (rev)",
            "primary-reverse-path": {
              "primary-path-request-ref": 1
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.3",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 3,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-1 (fwd)",
            "secondary-path": {
              "primary-path": [
                {
                  "path-request-ref": 1
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.1"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 4,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-2 (fwd)",
            "secondary-path": {
              "primary-path": [
                {
                  "path-request-ref": 1
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.5",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 5,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-3 (rev)",
            "secondary-reverse-path": {
              "primary-reverse-path": [
                {
                  "path-request-ref": 2
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.5"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.4",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 6,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-4 (rev)",
            "secondary-reverse-path": {
              "primary-reverse-path": [
                {
                  "path-request-ref": 2
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.4"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.3",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 7,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-5 (rev)",
            "secondary-reverse-path": {
              "primary-reverse-path": [
                {
                  "path-request-ref": 2
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.3"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.1",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 8,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-3",
            "path-name": "primary-1 (bidir)",
            "primary-path": {}
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 9,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-3",
            "path-name": "secondary-1 (bidir)",
            "secondary-path": {
              "primary-path": [
                {
                  "path-request-ref": 8
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.1"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 10,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-3",
            "path-name": "secondary-2 (bidir)",
            "secondary-path": {
              "primary-path": [
                {
                  "path-request-ref": 8
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.5",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 11,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-4",
            "path-name": "primary-1 (fwd)",
            "primary-path": {
              "co-routed": [null]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 12,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-4",
            "path-name": "primary-2 (rev)",
            "primary-reverse-path": {
              "primary-path-request-ref": 11
            }
          }
        },
        {
          "request-id": 13,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-4",
            "path-name": "secondary-1 (fwd)",
            "secondary-path": {
              "primary-path": [
                {
                  "co-routed": [null],
                  "path-request-ref": 11
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.1"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 14,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-4",
            "path-name": "secondary-2 (fwd)",
            "secondary-path": {
              "primary-path": [
                {
                  "co-routed": [null],
                  "path-request-ref": 11
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.5",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 15,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-3 (rev)",
            "secondary-reverse-path": {
              "primary-reverse-path": [
                {
                  "path-request-ref": 12
                }
              ]
            }
          }
        },
        {
          "request-id": 16,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-4 (rev)",
            "secondary-reverse-path": {
              "primary-reverse-path": [
                {
                  "path-request-ref": 12
                }
              ]
            }
          }
        }
      ],
      "ietf-te-path-computation:tunnel-attributes": [
        {
          "tunnel-name": "example-1",
          "source": "192.0.2.1",
          "destination": "192.0.2.5",
          "bidirectional": "false"
        },
        {
          "tunnel-name": "example-3",
          "source": "192.0.2.1",
          "destination": "192.0.2.5",
          "bidirectional": "true"
        },
        {
          "tunnel-name": "example-4",
          "source": "192.0.2.1",
          "destination": "192.0.2.5",
          "bidirectional": "false"
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
</section>
<section numbered="false" anchor="acknowledgments"><name>Acknowledgments</name>

<t>The authors would like to thank Igor Bryskin and Xian Zhang for
   participating in the initial discussions that have triggered this
   work and providing valuable insights.</t>

<t>The authors would like to thank the authors of the TE tunnel YANG
   data model <xref target="I-D.ietf-teas-yang-te"/>, in particular Igor Bryskin, Vishnu Pavan
   Beeram, Tarek Saad and Xufeng Liu, for their inputs to the
   discussions and support in having consistency between the Path
   Computation and TE tunnel YANG data models.</t>

<t>The authors would like to thank Adrian Farrel, Dhruv Dhody, Igor
   Bryskin, Julien Meuric and Lou Berger for their valuable input to the
   discussions that has clarified that the path being set up is not
   necessarily the same as the path that has been previously computed
   and, in particular to Dhruv Dhody, for his suggestion to describe the
   need for a path verification phase to check that the actual path
   being set up meets the required end-to-end metrics and constraints.</t>

<t>The authors would like to thank Aihua Guo, Lou Berger, Shaolong Gan,
   Martin Bjorklund and Tom Petch for their useful comments on how to
   define XPath statements in YANG RPCs.</t>

<t>The authors would like to thank Haomian Zheng, Yanlei Zheng, Tom
   Petch, Aihua Guo and Martin Bjorklund for their review and valuable
   comments to this document.</t>

<t>Previous versions of document were prepared using 2-Word-v2.0.template.dot.</t>

<t>This document was prepared using kramdown.</t>

</section>

    <section anchor="contributors" numbered="false" toc="include" removeInRFC="false">
        <name>Contributors</name>
    <contact initials="V." surname="Lopez" fullname="Victor Lopez">
      <organization>Nokia</organization>
      <address>
        <email>victor.lopez@nokia.com</email>
      </address>
    </contact>
    <contact initials="R." surname="Vilalta" fullname="Ricard Vilalta">
      <organization>CTTC</organization>
      <address>
        <email>ricard.vilalta@cttc.es</email>
      </address>
    </contact>
    <contact initials="K." surname="Sethuraman" fullname="Karthik Sethuraman">
      <organization>NEC</organization>
      <address>
        <email>karthik.sethuraman@necam.com</email>
      </address>
    </contact>
    <contact initials="M." surname="Scharf" fullname="Michael Scharf">
      <organization>Nokia</organization>
      <address>
        <email>michael.scharf@gmail.com</email>
      </address>
    </contact>
    <contact initials="D." surname="Beller" fullname="Dieter Beller">
      <organization>Nokia</organization>
      <address>
        <email>dieter.beller@nokia.com</email>
      </address>
    </contact>
    <contact initials="G." surname="Bruno" fullname="Gianmarco Bruno">
      <organization>Ericsson</organization>
      <address>
        <email>gianmarco.bruno@ericsson.com</email>
      </address>
    </contact>
    <contact initials="F." surname="Lazzeri" fullname="Francesco Lazzeri">
      <organization>Ericsson</organization>
      <address>
        <email>francesco.lazzeri@ericsson.com</email>
      </address>
    </contact>
    <contact initials="Y." surname="Lee" fullname="Young Lee">
      <organization>Samsung Electronics</organization>
      <address>
        <email>younglee.tx@gmail.com</email>
      </address>
    </contact>
    <contact initials="C." surname="Perocchio" fullname="Carlo Perocchio">
      <organization>Ericsson</organization>
      <address>
        <email>carlo.perocchio@ericsson.com</email>
      </address>
    </contact>
    <contact initials="O." surname="Dugeon" fullname="Olivier Dugeon">
      <organization>Orange Labs</organization>
      <address>
        <email>olivier.dugeon@orange.com</email>
      </address>
    </contact>
    <contact initials="J." surname="Meuric" fullname="Julien Meuric">
      <organization>Orange Labs</organization>
      <address>
        <email>julien.meuric@orange.com</email>
      </address>
    </contact>
    </section>

  </back>

<!-- ##markdown-source:
H4sIAAAAAAAAA+y9aXccN5Io+l3n6D9g2B9MjqqK1mJ3N92LKZJ26421XFFt
T89o3pxkVZLMUbGyJjNLFG3q/faHWAAEtsws2u7tuu7cNlUFBAKBQCAiEIiY
Tqf3783rRbW6OFCb7nz6m/v37t/rqm5ZHqhD9ZfDF1+r46Ir1PN6US7Ved2o
pvzfTdl2uodaF92lmtdX601XdFW9gr7F2VlTvj9Qfyl0A2j/ChodyUaLer4q
rvQAi6Y476ZVqcftyqKd3ug+UwA6FUCnD397/9513by7aOrN+kC9OTk8Vd/p
fwMGX8N3egZFV17Uzc2BarvF/XvVujlQXbNpu0effvrbTx8BXm1XrBb/XSzr
lR74pmzv31tXB+o/u3o+UW3ddE153uq/bq7oD43AVbnq2v/COW26y7o5uH9P
qSn8j1KE/7NOw1NPN21F3zY1kK1cVF3d0Dd1o+n6p01xXVbqTTm/XNXL+qKC
0eHX8qqolgeqAjCzMw3my0tsOtOjR4Odls1FpUcrl3XX9Q/4on5XFd4QLXae
nVHnL1fQIDnKy3ZeNOrrevV9sSy/V4tSHVc1o1utWt1glvkVR35TLsvzelXN
/eFrgDq74H4LjXDdftnZtklMDlebprhQp5dFc1WIIb6u64tl6YEvVu1l8eUF
/pCEpZlRA6oElKPLalWoP+vRqbmj1GWl2fDJb7+cQ4sNNpjNVxHI42JV6Qmo
o3Ku51YulxL6SVPN27ZeeZAX1GM2tz2+LLkdIQ07cdU11dmmS3Hbt9Vcf6++
qdfl972L/R4bzpbQsGepX2vKNwsNdlksO0nhozdvjjyADbacvaeWX867bj4j
HvYA/lvRdJfVO82p3aVeu6tiJdE88WG+o8az1jb+clXOi6skqs+r+WWh5c+p
/k9z3jv5K2o6a7HplxfwbRLmsZY7ZQP7aVn2b54FtoTNo1v2EPTrqlhdFc1c
b9Jms6qH+OHCNJ+dQfOAGQLYXzXFal62GvY3xfff66ZD0M9Nh9mSOvTD/0u9
0eL0m7IUcE+Lqxa+PVmW866BnerLrRvosyzLWfehh85HRaOF5Kuyqed6Sw1S
ZQ7NZ2vTvB/rl8vqfaUX8XhzUdaS217q2V+UmlZnPso1dZgtsMOXNTZLgv5/
NsuqXKnn5UYjMALy/2D72RW29wDfvzedTpVu3zXFvIN/615vLsumVFoMqHZe
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
ttp1j8WcR5why9BsUTKeNes5/oSwfvjhcj0v8d9mLdYARlvmN4Zk6hLOltop
gLSUKR+TlejeFLWapapZSV6Kp5pS19DkdTnfNK0eKdZvrYnzkNH8k/QrGq2N
9J7Pf/Op0XvwQohIbU647LIEB5xhpAmqkNyc0TdaD9y8kANCGWq/1/qH8Xbg
pqMDETWNNY5tgKAb/ocftMU8tdyASP9/+qPl3byqpgW7s3o/D8IT58Fwn9vo
izF9AuKN6uN51keOsz1uQAOmw4OxNBBj5UfwiPtgqHWEegAhgRX//K0cIAU5
7nmb/UcKcqo/rWeuvw8/1Z9sinx/wyi5/uIKJNlfwt9+/j78LOUf5ChvFu5B
Pz+l1txvEHadmc+3s9wn1/XA/elLk6iF1/VBP3MFjbyuWg98qG5/r3r/n270
CAkRjPpg1KgP4lFh3INMD/c5YOLHXbOENfTNdh3zGdU1zVf5rgI73DnqNuCH
fNcD799HHi4HY7vu40pMH7zduuu+/cr2Hdl1331l+/Z3NVTdV8w6SOG3gtrZ
rkxVxhb/xnHd38muAFn/cGh/VupY/P1U/69d56yUIao6hJHaHnukDhUm01tB
OUMzb83zXbnvrew5titRlRDeNyrQ73q1DAf5raM2S6iDVHvJ8+pESZ5PtRcf
e8yDukSanlOlrHGaV8KNfrdz/57WskCxnoIn4/c7CIGNrFn3odsx7h1fVwP3
wnW5XMJ/3S/irkzczysN31kM5O8kFxRqhiTJ942S6awI8qOAUwwcGahBNl2l
m7yvyms2sOi+mc4C4+KUyuhEWzPn4A0vFouKvbPcXDbTOi1BcvFKNpwOkApc
0s/QXqOb+4W7PrEXrbTk4vy1kXZk0PFNu7c6UlEEJzCTEq/e7HQTCCnYnOu6
bStwGooVcHFHaNka4wWgXF/WSwsLQRja6eUEp+LO+6rpNjCO1t93yNa334Gn
qd0x9LNWKtlDc/SAop809EEluSQgKdxDenRlJS0mKdjAxvwYQVIKUhHuXmH2
t3oAeJShlM8UJpTF8BfaMt2ltowvLlOrIaMv4GdJjD3P9g4DfExQ02W5XLd8
WZafCpme71bs4mxKunKw9m7yitjnaLno25hdky0+sxyUSe9KIbu7thkgkz7p
GKh8E5VBZQAIHRy3fYgMQVBWN6S2SUQmDl/P4FJmAvtuOik0JgJVXw+73UdA
+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
/mM6JPLgMZ1AcctjeohIW228/DGt/Kb9x7SK2/cd0/Fn1DEdf25HHNPJXmr4
mM71M5/tjun0lPuP6fxnxDGNa1CVZ01ZvCub+DBUYRPIOm3/kTHRVaJfqppC
wpGQKGMXeenok3A1xJ1DtwOjFTdMDZJumYprlF4UcGcvTFSNqR0cuRjiyxma
lHXrJsG0bj68eWy+0tBfk98lPVtB+fyuVHIIK+yTKYrlJ0OifKpi+fFcLyS/
cimLe7vlUxePQBUXQBZ4Dh1jUYNe/1XCc9XrgUxWfo7wi8pWpXDM1qlKjJoo
/RO3SlaiyuHGpad6EAtqTfVg1bNk4rhMVZNKcrtfPiqagKgXlcI+USCqD/Vh
itoSUBlMsnRMFHm669IGZZwkJsna69EnVaNIQglMMjbFpsXyurgJJ5d0llLL
lBV2exfLy0rN0NoSIrPXwvIO1D6rKjxZBy2psMOw9ZTCOWUDpHFOaP0hCoOa
fh/O/Vi7PuNVcjHfAavHm3G/pfOj5zzCovmbkSlprXjEyVko4fDjrJLeiQ4y
cWR9eOI7ZXHYBiprZcgmql9nCpre5lWouKXKWhDJtuYzympITGFEfe0+6Rq8
GMw4uRICHI+VgdAydUeXWNYNpka6vuyaDbm7vCUb4+LyOoxya0U4Z5wzCZzT
7hgPhTEumCzO/VjfReKI+Q67o9yMB11QP27O41xNfxsy5dxIjjg9riNv+NHu
ovxEB5k45RZymGZcQd54afeP8gfqM2ZVNG6PbZtAIO3aiduaz1h3TjiF7QSz
oHHi2sRBja9Kop/j6xFrMGijjd/wy4g/t3QQt6tpE4aDqEybzGnBzUVDJEE2
xEWlj4nUyeBh0nZF0+V4cYDPxjLZSA6L2UvdgXN+BNswScpVUqj930uQtiuT
0mjsdEeKl2Ciec5titVFOT2ruqtiDS17grPI27npftmy/9Qc+suWDQjyD7xl
hypPBzt42C9MQLeoOJ3oOK7adHoa+NDcCh4mSFdpoRAVEHQxsqYZZA0q6AaF
olEFwbDBQH1TidJQbVPP1TimrqnsMKqmqddhm3qmni91m1qm3ogDdUy9QQZq
mMq2g/VLZeNf4t9/iX+3Tf8Z4t9HldT1JeOIcrq5DtlSup6gG3oXw3iPeBED
Lce9hcGBx76C+bu8g9763nmLu+Yt7pczaNiyuMERGSdBEg1uM23Cq01vBbZM
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
vPlK02nTdihfsTSpViS09mUmbMJ6qA71prusm9aUv5prZGd6g8IZAnCh0ibW
GVu4QV/rbd5SqBeoJzAK1pJecTgpfkNRygpnSzUluTceUXrMTQeU0XjMcakm
UBJNI3pVdVi3dtO0m0IToquxBDB3bjfoMDVn1rKalyuoeVsCTU0xXlgoqiT4
unxftXaln54ea+lPPfRGA9ygOK4WIFxG9clsbujgqPiJods35UWxVK8g6gnU
slZDh+sUKPZWU/tjZiHTY9ecTR0AKkt3LjHiqJd77KKJYNQ+xET/W6iSSCMt
KuA3OK//XX++0HMxjGTO8apry+U5bh7gO203AOpQmk5rWT53QuyxZr5Fqz55
/ufTN59M6L/qxUv8+/XJ//nzs9cnx/D36Z8Ov/nG/mF4l9qd/unln785dn+5
/kcvnz8/eXFMIPS3yvuKoXzy/PAvn+BCq09evnrz7OWLw28+SWzNpuSCz1D/
udHqF9akNfT2auM+PXqlHj5Ru0CPRw8f/naP/vzNw18/2VPXl+WKhsPqy/hP
R8MbqA9bFlDkXRWafPNiDUc8VYSF8nErBWVuZzusQO/vswI2O7CaFywNaV5a
Z9lo6kMLo4CtFhin977k3jhLvTzm3wYIlU0mflOofVldjhlivTlb8g7CBhZg
qagcJrDM7o2ezFQrnODqKG72CGsLGMTG9NOH04ePjF4bSWstr5/BrV6xtN12
+rRdnH7OMBDyPBTYvob7E5KVNGZE8V/VM/J9VFye0Gr67BKxb1rIuPSsTrJO
DZ3OsOC29SbJbuSD+iJPz0OSOXiXq3maAVNZQqjUDfyOL3es9qU3vbGSbXH0
TEHox7PHWBDadDVLMvsrrJqhMqruurlP5Av+Vobty/h6UVS6hxlRUFpQRn2g
7WJhIUO4YZDUTpU9p9LiBR0BtoK3NMVNeUpDNHC/hM8NDJaKVlK41dwvIaMs
2/U0APOFafvR/KEnVWyWndrJddus+B/lYucL1ysilibXN6evQkLYSX0Ucwtf
Rtx1ciGcsbOT/ehv8GzejJmeXPdR86OHHHeZYQxl9CQTXfUh5mq7bjtTguHP
9SOIvvHbLNiW7tkg6CZ324OyFDOVK69aB9hOZ7ecXcwmHNTS7k2G9uGEzn7b
Pywvn+jHtebtBoZCtNH7TrfSoAztiCCboeV4gzpo2xmt0YI2k3K6FnzQGuAx
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
/h+nq1Qj060CAA==

-->

</rfc>

