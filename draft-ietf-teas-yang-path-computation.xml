<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.17 (Ruby 2.7.0) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc comments="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-teas-yang-path-computation-latest" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="Yang for Path Computation">A YANG Data Model for requesting path computation</title>

    <author initials="I." surname="Busi" fullname="Italo Busi" role="editor">
      <organization>Huawei Technologies</organization>
      <address>
        <email>italo.busi@huawei.com</email>
      </address>
    </author>
    <author initials="S." surname="Belotti" fullname="Sergio Belotti" role="editor">
      <organization>Nokia</organization>
      <address>
        <email>sergio.belotti@nokia.com</email>
      </address>
    </author>
    <author initials="O." surname="Gonzalez de Dios" fullname="Oscar Gonzalez de Dios">
      <organization>Telefonica</organization>
      <address>
        <email>oscar.gonzalezdedios@telefonica.com</email>
      </address>
    </author>
    <author initials="A." surname="Sharma" fullname="Anurag Sharma">
      <organization>Google</organization>
      <address>
        <email>ansha@google.com</email>
      </address>
    </author>
    <author initials="Y." surname="Shi" fullname="Yan Shi">
      <organization>China Unicom</organization>
      <address>
        <email>shiyan49@chinaunicom.cn</email>
      </address>
    </author>

    <date year="2024" month="August" day="19"/>

    
    <workgroup>TEAS Working Group</workgroup>
    

    <abstract>


<t>There are scenarios, typically in a hierarchical Software-Defined
   Networking (SDN) context, where the topology information provided by
   a Traffic Engineering (TE) network provider may be insufficient for
   its client to perform multi-domain path computation. In these cases the
   client would need to request the TE network provider to compute some
   intra-domain paths to be used by the client to choose the optimal multi-domain paths.</t>

<t>This document provides a mechanism to request path computation by augmenting the Remote Procedure Calls (RPCs) defined in RFC YYYY.</t>

<t>[RFC EDITOR NOTE: Please replace RFC YYYY with the RFC number of
   draft-ietf-teas-yang-te once it has been published.</t>

<t>Moreover, this document describes some use cases where the path
   computation request, via YANG-based protocols (e.g., NETCONF or
   RESTCONF), can be needed.</t>



    </abstract>



  </front>

  <middle>


<section anchor="intro"><name>Introduction</name>

<t anchor="pc-model">There are scenarios, typically in a hierarchical Software-Defined
   Networking (SDN) context, where the topology information provided by
   a Traffic Engineering (TE) network provider may be insufficient for
   its client to perform multi-domain path computation. In these cases the
   client would need to request the TE network provider to compute some
   intra-domain paths that could be used together with its topology information
   to compute the multi-domain path.</t>

<t>These types of scenarios can be applied to different interfaces in
   different reference architectures:</t>

<t><list style="symbols">
  <t>Application-Based Network Operations (ABNO) control interface
<xref target="RFC7491"/>, in which an Application Service Coordinator can request the
ABNO controller to take in charge path calculation (see Figure 1
in <xref target="RFC7491"/>).</t>
  <t>Abstraction and Control of TE Networks (ACTN) <xref target="RFC8453"/>, where a
controller hierarchy is defined.
In the ACTN context, path computation is needed on the interface
between Customer Network Controller (CNC)  and Multi-Domain
Service Coordinator (MDSC), called CNC-MDSC Interface (CMI),
and on the interface between MSDC and Provisioning Network
Controller (PNC), called MDSC-PNC Interface  (MPI). 
<xref target="RFC8454"/> describes an information model for the Path
Computation request.  <vspace blankLines='1'/>
Multiple protocol solutions can be used for communication between
different controller hierarchical levels. This document assumes that
the controllers are communicating using YANG-based protocols (e.g.,
NETCONF <xref target="RFC6241"/> or RESTCONF <xref target="RFC8040"/>).  <vspace blankLines='1'/>
Path Computation Elements (PCEs), controllers and orchestrators
perform their operations based on Traffic Engineering Databases
(TED). Such TEDs can be described, in a technology agnostic way, with
the YANG data model for TE Topologies <xref target="RFC8795"/>. Furthermore, the
technology specific details of the TED are modelled in the technology
specific topology models, e.g., the <xref target="I-D.ietf-ccamp-otn-topo-yang"/> for Optical Transport
Network (OTN) Optical Data Unit (ODU) technologies, which augment the
common TE topology model in <xref target="RFC8795"/>.  <vspace blankLines='1'/>
The availability of such topology models allows the provisioning of
the TED using YANG-based protocols (e.g., NETCONF or RESTCONF).
Furthermore, it enables a PCE/controller performing the necessary
abstractions or modifications and offering this customized topology
to another PCE/controller or high level orchestrator.  <vspace blankLines='1'/>
The tunnels that can be provided over the networks described with the
topology models can be also set-up, deleted and modified via YANG-
based protocols (e.g., NETCONF or RESTCONF) using the TE tunnel YANG
data model <xref target="I-D.ietf-teas-yang-te"/>.  <vspace blankLines='1'/>
This document defines a YANG data model <xref target="RFC7950"/> that augments the RPC defined in <xref target="I-D.ietf-teas-yang-te"/>. The use of this RPC is complimentary to the configuration of a TE tunnel path in "compute-only" mode, as described in <xref target="I-D.ietf-teas-yang-te"/>.  <vspace blankLines='1'/>
The YANG data model definition does not make any assumption about
whether that the client or the server implement a "PCE"
functionality, as defined in <xref target="RFC4655"/>, and the Path Computation
Element Communication Protocol (PCEP) protocol, as defined in
<xref target="RFC5440"/>.  <vspace blankLines='1'/>
Moreover, this document describes some use cases where a path
computation request, via YANG-based protocols (e.g., NETCONF or
RESTCONF), can be needed.  <vspace blankLines='1'/>
The YANG data model defined in this document conforms to the Network
Management Datastore Architecture <xref target="RFC8342"/>.</t>
</list></t>

<section anchor="terminology"><name>Terminology</name>

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED",
"MAY", and "OPTIONAL" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

<t>TED:</t>

<ul empty="true"><li>
  <t>The traffic engineering database is a collection of all TE
   information about all TE nodes and TE links in a given network.</t>
</li></ul>

<t>PCE:</t>

<ul empty="true"><li>
  <t>A Path Computation Element (PCE) is an entity that is capable of
   computing a network path or route based on a network graph, and of
   applying computational constraints during the computation.  The PCE
   entity is an application that can be located within a network node or
   component, on an out-of-network server, etc.  For example, a PCE
   would be able to compute the path of a TE Label Switched Path (LSP)
   by operating on the TED and considering bandwidth and other
   constraints applicable to the TE LSP service request. <xref target="RFC4655"/>.</t>
</li></ul>

<t>Domain:</t>

<ul empty="true"><li>
  <t>TE information is the data relating to nodes and TE links
   that is used in the process of selecting a TE path.  TE information
   is usually only available within a network.  We call such a zone of
   visibility of TE information a domain.  An example of a domain may be
   an IGP area or an Autonomous System. <xref target="RFC7926"/></t>
</li></ul>

<t>The terminology for describing YANG data models is found in
   <xref target="RFC7950"/>.</t>

</section>
<section anchor="tree-diagram"><name>Tree Diagram</name>

<t>Tree diagrams used in this document follow the notation defined in
   <xref target="RFC8340"/>.</t>

</section>
<section anchor="prefixes-in-data-node-names"><name>Prefixes in Data Node Names</name>

<t>In this document, names of data nodes and other data model objects
   are prefixed using the standard prefix associated with the
   corresponding YANG imported modules, as shown in <xref target="tab-prefix"/>.</t>

<texttable title="Prefixes and corresponding YANG modules" anchor="tab-prefix">
      <ttcol align='left'>Prefix</ttcol>
      <ttcol align='left'>YANG module</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>te-types</c>
      <c>ietf-te-types</c>
      <c>[RFCZZZZ]</c>
      <c>te</c>
      <c>ietf-te</c>
      <c>[RFCYYYY]</c>
      <c>te-pc</c>
      <c>ietf-te-path-computation</c>
      <c>RFCXXXX</c>
</texttable>

<t>RFC Editor Note:
Please replace XXXX with the RFC number assigned to this document.
Please replace YYYY with the RFC number of <xref target="I-D.ietf-teas-yang-te"/> once it has been published.
Please replace ZZZZ with the RFC number of <xref target="I-D.ietf-teas-rfc8776-update"/> once it has been published.
Please remove this note.</t>

</section>
</section>
<section anchor="use-cases"><name>Use Cases</name>

<t>This section presents some use cases, where a client needs to request
   underlying SDN controllers for path computation.</t>

<t>The use of the YANG data model defined in this document is not
   restricted to these use cases but can be used in any other use case
   when deemed useful.</t>

<t>The presented uses cases have been grouped, depending on the
   different underlying topologies: Packet/Optical Integration (<xref target="poi-uc"/>);
   multi-domain Traffic Engineered (TE) Networks (<xref target="md-uc"/>); and Data Center
   Interconnections (<xref target="dci-uc"/>). Use cases in <xref target="brpc-uc"/> and <xref target="hpce-uc"/>
   respectively present how to
   apply this YANG data model for standard multi-domain PCE i.e.
   Backward Recursive Path Computation <xref target="RFC5441"/> and Hierarchical PCE
   <xref target="RFC6805"/>.</t>

<section anchor="poi-uc"><name>Packet/Optical Integration</name>

<t>In this use case, an optical domain is used to provide connectivity
   to some nodes of a packet domain (see <xref target="fig-poi-uc"/>).</t>

<figure title="Packet/Optical Integration use case" anchor="fig-poi-uc"><artwork type="ascii-art" name="poi-use-case.txt"><![CDATA[
                                +----------------+
                                |                |
                                | Packet/Optical |
                                |  Coordinator   |
                                |                |
                                +---+------+-----+
                                    |      |
                       +------------+      |
                       |                   +-----------+
                +------V-----+                         |
                |            |                  +------V-----+
                | Packet     |                  |            |
                | Domain     |                  | Optical    |
                | Controller |                  | Domain     |
                |            |                  | Controller |
                +------+-----+                  +-------+----+
                       |                                |
              .........V.........................       |
              :          packet domain          :       |
          +----+                               +----+   |
          | R1 |= = = = = = = = = = = = = = = =| R2 |   |
          +-+--+                               +--+-+   |
            | :                                 : |     |
            | :................................ : |     |
            |                                     |     |
            |               +-----+               |     |
            |    ...........| Opt |...........    |     |
            |    :          |  C  |          :    |     |
            |    :         /+--+--+\         :    |     |
            |    :        /    |    \        :    |     |
            |    :       /     |     \       :    |     |
            |   +-----+ /   +--+--+   \ +-----+   |     |
            |   | Opt |/    | Opt |    \| Opt |   |     |
            +---|  A  |     |  D  |     |  B  |---+     |
                +-----+\    +--+--+    /+-----+         |
                 :      \      |      /      :          |
                 :       \     |     /       :          |
                 :        \ +--+--+  / optical<---------+
                 :         \| Opt |/  domain :
                 :..........|  E  |..........:
                            +-----+
]]></artwork></figure>

<t><xref target="fig-poi-uc"/> as well as <xref target="fig-poi-abstraction"/> describe two different
   examples of packet/optical topologies and only show a partial view of the
   packet network connectivity, before additional packet connectivity is
   provided by the optical network.</t>

<t>It is assumed that the Optical Domain Controller provides to the
   Packet/Optical Coordinator an abstracted view of the optical network.
   A possible abstraction could be to represent the whole optical
   network as one "virtual node" with "virtual ports" connected to the
   access links, as shown in <xref target="fig-poi-abstraction"/>.</t>

<t>It is also assumed that Packet Domain Controller can provide the
   Packet/Optical Coordinator the information it needs to set up
   connectivity between packet nodes through the optical network (e.g.,
   the access links).</t>

<t>The path computation request helps the Packet/Optical Coordinator to
   know the real connections that can be provided by the optical
   network.</t>

<figure title="Packet and Optical Topology Abstractions" anchor="fig-poi-abstraction"><artwork type="ascii-art" name="poi-topology-abstraction.txt"><![CDATA[
                       ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,.
                      ,  Packet/Optical Coordinator view          ,
                     ,                              +----+       , .
                    ,                               |    |      ,
                   ,                                | R2 |     ,   .
                  ,  +----+  +------------ +       /+----+    ,
                 ,   |    |  |             |/-----/ / /      ,     .
                ,    | R1 |--O VP1     VP4 O       / /      ,
               ,     |    |\ |             | /----/ /      ,       .
              ,      +----+ \|             |/      /      ,
             ,        /      O VP2     VP5 O      /      ,         .
            ,        /       |             |  +----+    ,
           ,        /        |             |  |    |   ,           .
          ,        /         O VP3     VP6 O--| R4 |  ,
         ,     +----+ /-----/|_____________|  +----+ ,             .
        ,      |    |/       +------------ +        ,
       ,       | R3 |                              ,               .
      ,        +----+                             ,,,,,,,,,,,,,,,,,
     ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,                ,.
     . Packet Domain Controller view                +----+       ,
       only packet nodes and packet links           |    |      ,  .
     . with access links to the optical network     | R2 |     ,
                  ,  +----+                        /+----+    ,    .
     .           ,   |    |                 /-----/ / /      ,
                ,    | R1 |---                     / /      ,      .
     .         ,     +----+\                 /----/ /      ,
              ,        /    \               /      /      ,        .
     .       ,        /                           /      ,
            ,        /                        +----+    ,          .
     .     ,        /                         |    |   ,
          ,        /                       ---| R4 |  ,            .
     .   ,     +----+ /-----/                 +----+ ,
        ,      |    |/                              ,              .
     . ,       | R3 |                              ,
      ,        +----+                             ,,,,,,,,,,,,,,,,,.
     .,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,                ,
       Optical Domain Controller view                            , .
     . only optical nodes,        +--+                          ,
       optical links and         /|OF|                         ,   .
     . access links from the  +--++--+             /          ,
       packet network         |OA|    \     /-----/ /        ,     .
     .          ,          ---+--+--\  +--+/       /        ,
               ,           \   |  \  \-|OE|-------/        ,       .
     .        ,             \  |   \ /-+--+               ,
             ,               \+--+  X    |               ,         .
     .      ,                 |OB|-/ \   |              ,
           ,                  +--+-\  \+--+            ,           .
     .    ,                  /   \  \--|OD|---        ,
         ,            /-----/     +--+ +--+          ,             .
     .  ,            /            |OC|/             ,
       ,                          +--+             ,               .
     .,                                           ,,,,,,,,,,,,,,,,,,
      ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,                ,
     . Actual Physical View                         +----+       ,
                    ,             +--+              |    |      ,
     .             ,             /|OF|              | R2 |     ,
                  ,  +----+   +--++--+             /+----+    ,
     .           ,   |    |   |OA|    \     /-----/ / /      ,
                ,    | R1 |---+--+--\  +--+/       / /      ,
     .         ,     +----+\   |  \  \-|OE|-------/ /      ,
              ,        /    \  |   \ /-+--+        /      ,
     .       ,        /      \+--+  X    |        /      ,
            ,        /        |OB|-/ \   |    +----+    ,
     .     ,        /         +--+-\  \+--+   |    |   ,
          ,        /         /   \  \--|OD|---| R4 |  ,
     .   ,     +----+ /-----/     +--+ +--+   +----+ ,
        ,      |    |/            |OC|/             ,
     . ,       | R3 |             +--+             ,
      ,        +----+                             ,
     .,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
]]></artwork></figure>

<t>In this use case, the Packet/Optical Coordinator needs to set up an
   optimal underlying path for an IP link between R1 and R2.</t>

<t>As depicted in <xref target="fig-poi-abstraction"/>, the Packet/Optical Coordinator has only an
   "abstracted view" of the physical network, and it does not know the
   feasibility or the cost of the possible optical paths (e.g., VP1-VP4
   and VP2-VP5), which depend on the current status of the physical
   resources within the optical network and on vendor-specific optical
   attributes.</t>

<t>The Packet/Optical Coordinator can request the underlying Optical
   Domain Controller to compute a set of potential optimal paths, taking
   into account optical constraints. Then, based on its own constraints,
   policy and knowledge (e.g. cost of the access links), it can choose
   which one of these potential paths to use to set up the optimal end-
   to-end path crossing optical network.</t>

<figure title="Packet/Optical Integration path computation example" anchor="fig-poi-example"><artwork type="ascii-art" name="poi-example.txt"><![CDATA[
                    ............................
                    :                          :
                    O VP1                  VP4 O
           cost=10 /:\                        /:\ cost=10
                  / : \----------------------/ : \
          +----+ /  :         cost=50          :  \ +----+
          |    |/   :                          :   \|    |
          | R1 |    :                          :    | R2 |
          |    |\   :                          :   /|    |
          +----+ \  :  /--------------------\  :  / +----+
                  \ : /       cost=55        \ : /
            cost=5 \:/                        \:/ cost=5
                    O VP2                  VP5 O
                    :                          :
                    :..........................:
]]></artwork></figure>

<t>For example, in <xref target="fig-poi-example"/>, the Packet/Optical Coordinator can request
   the Optical Domain Controller to compute the paths between VP1-VP4
   and VP2-VP5 and then decide to set up the optimal end-to-end path
   using the VP2-VP5 optical path even if this is not the optimal path
   from the optical domain perspective.</t>

<t>Considering the dynamicity of the connectivity constraints of an
   optical domain, it is possible that a path computed by the Optical
   Domain Controller when requested by the Packet/Optical Coordinator is
   no longer valid/available when the Packet/Optical Coordinator
   requests it to be set up. This is further discussed in <xref target="rpc-motivation"/>.</t>

</section>
<section anchor="md-uc"><name>Multi-domain TE networks</name>

<t>In this use case there are two TE domains which are interconnected
   together by multiple inter-domains links.</t>

<t>A possible example could be a multi-domain optical network.</t>

<figure title="Multi-domain multi-link interconnection" anchor="md-ml-connection"><artwork type="ascii-art" name="multi-domain-use-case.txt"><![CDATA[
                            +--------------+
                            | Multi-Domain |
                            | Controller   |
                            +---+------+---+
                                |      |
                   +------------+      |
                   |                   +-----------+
            +------V-----+                         |
            |            |                         |
            | TE Domain  |                  +------V-----+
            | Controller |                  |            |
            |      1     |                  | TE Domain  |
            +------+-----+                  | Controller |
                   |                        |      2     |
                   |                        +------+-----+
          .........V..........                     |
          :                  :                     |
         +-----+             :                     |
         |     |             :            .........V..........
         |  X  |             :            :                  :
         |     |          +-----+      +-----+                :
         +-----+          |     |      |     |               :
          :               |  C  |------|  E  |               :
      +-----+    +-----+ /|     |      |     |\ +-----+    +-----+
      |     |    |     |/ +-----+      +-----+ \|     |    |     |
      |  A  |----|  B  |     :            :     |  G  |----|  H  |
      |     |    |     |\    :            :    /|     |    |     |
      +-----+    +-----+ \+-----+      +-----+/ +-----+    +-----+
          :               |     |      |     |               :
          :               |  D  |------|  F  |               :
          :               |     |      |     |          +-----+
          :               +-----+      +-----+          |     |
          :                  :            :             |  Y  |
          :                  :            :             |     |
          :   TE domain 1    :            : TE domain 2 +-----+
          :..................:            :.................:
]]></artwork></figure>

<t>In order to set up an end-to-end multi-domain TE path (e.g., between
   nodes A and H), the Multi-Domain Controller needs to know the
   feasibility or the cost of the possible TE paths within the two TE
   domains, which depend on the current status of the physical resources
   within each TE domain. This is more challenging in case of optical
   networks because the optimal paths depend also on vendor-specific
   optical attributes (which may be different in the two domains if they
   are provided by different vendors).</t>

<t>In order to set up a multi-domain TE path (e.g., between nodes A and
   H), the Multi-Domain Controller can request the TE Domain Controllers
   to compute a set of intra-domain optimal paths and take decisions
   based on the information received. For example:</t>

<t><list style="symbols">
  <t>The Multi-Domain Controller asks TE Domain Controllers to provide
set of paths between A-C, A-D, E-H and F-H</t>
  <t>TE Domain Controllers return a set of feasible paths with the
associated costs: the path A-C is not part of this set (in optical
networks, it is typical to have some paths not being feasible due
to optical constraints that are known only by the Optical Domain
Controller)</t>
  <t>The Multi-Domain Controller will select the path A-D-F-H since it
is the only feasible multi-domain path and then request the TE
Domain Controllers to set up the A-D and F-H intra-domain paths</t>
  <t>If there are multiple feasible paths, the Multi-Domain Controller
can select the optimal path knowing the cost of the intra-domain
paths (provided by the TE domain controllers) and the cost of the
inter-domain links (known by the Multi-Domain Controller)  <vspace blankLines='1'/>
This approach may have some scalability issues when the number of TE
domains is quite big (e.g. 20).  <vspace blankLines='1'/>
In this case, it would be worthwhile using the abstract TE topology
information provided by the TE Domain Controllers to limit the number
of potential optimal end-to-end paths and then request path
computation from fewer TE Domain Controllers in order to decide what
the optimal path within this limited set is.  <vspace blankLines='1'/>
For more details, see <xref target="topo-pc-complement"/>.</t>
</list></t>

</section>
<section anchor="dci-uc"><name>Data Center Interconnections</name>

<t>In these use case, there is a TE domain which is used to provide
   connectivity between Data Centers which are connected with the TE
   domain using access links.</t>

<figure title="Data Center Interconnection use case" anchor="fig-dci-uc"><artwork type="ascii-art" name="dci-use-case.txt"><![CDATA[
                        +--------------+
                        | Cloud Network|
                        | Orchestrator |
                        +--------------+
                          |  |  |  |
            +-------------+  |  |  +------------------------+
            |                |  +------------------+        |
            |       +--------V---+                 |        |
            |       |            |                 |        |
            |       | TE Network |                 |        |
     +------V-----+ | Controller |          +------V-----+  |
     | DC         | +------------+          | DC         |  |
     | Controller |     |                   | Controller |  |
     +------------+     |   +-----+         +------------+  |
          |         ....V...|     |........         |       |
          |         :       |  P  |       :         |       |
     .....V.....    :      /+-----+\      :    .....V.....  |
     :         :  +-----+ /    |    \ +-----+  :         :  |
     :  DC1 || :  |     |/     |     \|     |  :  DC2 || :  |
     :    ||||----| PE1 |      |      | PE2 |----   |||| :  |
     : _|||||| :  |     |\     |     /|     |  : _|||||| :  |
     :         :  +-----+ \ +-----+ / +-----+  :         :  |
     :.........:    :      \|     |/      :    :.........:  |
                    :.......| PE3 |.......:                 |
                            |     |                         |
                            +-----+               +---------V--+
                          .....|.....             | DC         |
                          :         :             | Controller |
                          :  DC3 || :             +------------+
                          :    |||| :                  |
                          : _|||||| <------------------+
                          :         :
                          :.........:
]]></artwork></figure>

<t>In this use case, there is the need to transfer data from Data Center
   1 (DC1) to either DC2 or DC3 (e.g. workload migration).</t>

<t>The optimal decision depends both on the cost of the TE path (DC1-DC2
   or DC1-DC3) and of the Data Center resources within DC2 or DC3.</t>

<t>The Cloud Network Orchestrator needs to make a decision for optimal
   connection based on TE network constraints and Data Center resources.</t>

<t>It may not be able to make this decision because it has only an
   abstract view of the TE network (as in <xref target="poi-uc"/>).</t>

<t>The Cloud Network Orchestrator can request to the TE Network
   Controller to compute the cost of the possible TE paths (e.g., DC1-
   DC2 and DC1-DC3) and to the DC Controller to provide the information
   it needs about the required Data Center resources within DC2 and DC3
   and then it can take the decision about the optimal solution based on
   this information and its policy.</t>

</section>
<section anchor="brpc-uc"><name>Backward Recursive Path Computation scenario</name>

<t><xref target="RFC5441"/> has defined the Virtual Source Path Tree (VSPT) flag within the RP (Request Parameters) object in order to compute inter-domain paths following a
   "Backward Recursive Path Computation" (BRPC) method. The main
   principle is to forward the PCReq message up to the destination
   domain. Then, each PCE involved in the computation will compute its
   part of the path and send it back to the requester through PCE
   Response message. The resulting computation is spread from
   destination PCE to source PCE. Each PCE is in charge of merging the
   path it received with the one it calculated. At the end, the source
   PCE merges its local part of the path with the received one to
   achieve the end-to-end path.</t>

<t><xref target="fig-brpc-example"/> below show a typical BRPC scenario where 3 PCEs cooperate to
   compute inter-domain paths.</t>

<figure title="BRPC Scenario" anchor="fig-brpc-example"><artwork type="ascii-art" name="brpc-scenario.txt"><![CDATA[
                   +----------------+          +----------------+
                   |  Domain (B)    |          |  Domain (C)    |
                   |                |          |                |
                   |        /-------|---PCEP---|--------\       |
                   |       /        |          |         \      |
                   |   (PCE)        |          |   -    (PCE)   |
                   |    /           <---------->  |D|           |
                   |   /            |  Inter   |   -            |
                   +---|----^-------+  Domain  +----------------+
                       |    |          Link
                     PCEP   |
                       |    | Inter-domain Link
                       |    |
                   +---|----v-------+
                   |   |            |
                   |   | Domain (A) |
                   |   \            |
                   |  (PCE)    -    |
                   |          |S|   |
                   |           -    |
                   +----------------+
]]></artwork></figure>

<t>In this use case, a client can use the YANG data model defined in
   this document to request path computation from the PCE that controls
   the source of the tunnel. For example, a client can request to the
   PCE of domain A to compute a path from a source S, within domain A,
   to a destination D, within domain C. Then PCE of domain A will use
   PCEP protocol, as per <xref target="RFC5441"/>, to compute the path from S to D and
   in turn gives the final answer to the requester.</t>

</section>
<section anchor="hpce-uc"><name>Hierarchical PCE scenario</name>

<t><xref target="RFC6805"/> has defined an architecture and extensions to the PCE
   standard to compute inter-domain path following a hierarchical
   method. Two new roles have been defined: parent PCE and child PCE.
   The parent PCE is in charge to coordinate the end-to-end path
   computation. For that purpose it sends to each child PCE involved in
   the multi-domain path computation a PCE Request message to obtain the
   local part of the path. Once received all answer through PCE Response
   message, the parent PCE will merge the different local parts of the
   path to achieve the end-to-end path.</t>

<t><xref target="fig-hpce-example"/> below shows a typical hierarchical scenario where a parent
   PCE request end-to-end path to the different child PCE. Note that a
   PCE could take independently the role of child or parent PCE
   depending of which PCE will request the path.</t>

<figure title="Hierarchical domain topology from RFC6805" anchor="fig-hpce-example"><artwork type="ascii-art" name="hierarchical-domain-topology.txt"><![CDATA[
    -----------------------------------------------------------------
    |   Domain 5                                                      |
    |                              -----                              |
    |                             |PCE 5|                             |
    |                              -----                              |
    |                                                                 |
    |    ----------------     ----------------     ----------------   |
    |   | Domain 1       |   | Domain 2       |   | Domain 3       |  |
    |   |                |   |                |   |                |  |
    |   |        -----   |   |        -----   |   |        -----   |  |
    |   |       |PCE 1|  |   |       |PCE 2|  |   |       |PCE 3|  |  |
    |   |        -----   |   |        -----   |   |        -----   |  |
    |   |                |   |                |   |                |  |
    |   |            ----|   |----        ----|   |----            |  |
    |   |           |BN11+---+BN21|      |BN23+---+BN31|           |  |
    |   |   -        ----|   |----        ----|   |----        -   |  |
    |   |  |S|           |   |                |   |           |D|  |  |
    |   |   -        ----|   |----        ----|   |----        -   |  |
    |   |           |BN12+---+BN22|      |BN24+---+BN32|           |  |
    |   |            ----|   |----        ----|   |----            |  |
    |   |                |   |                |   |                |  |
    |   |         ----   |   |                |   |   ----         |  |
    |   |        |BN13|  |   |                |   |  |BN33|        |  |
    |    -----------+----     ----------------     ----+-----------   |
    |                \                                /               |
    |                 \       ----------------       /                |
    |                  \     |                |     /                 |
    |                   \    |----        ----|    /                  |
    |                    ----+BN41|      |BN42+----                   |
    |                        |----        ----|                       |
    |                        |                |                       |
    |                        |        -----   |                       |
    |                        |       |PCE 4|  |                       |
    |                        |        -----   |                       |
    |                        |                |                       |
    |                        | Domain 4       |                       |
    |                         ----------------                        |
    |                                                                 |
     -----------------------------------------------------------------
]]></artwork></figure>

<t>In this use case, a client can use the YANG data model defined in
   this document to request to the parent PCE a path from a source S to
   a destination D. The parent PCE will in turn contact the child PCEs
   through PCEP protocol to compute the end-to-end path and then return
   the computed path to the client, using the YANG data model defined in
   this document. For example the YANG data model can be used to request
   to PCE5 acting as parent PCE to compute a path from source S, within
   domain 1, to destination D, within domain 3. PCE5 will contact child
   PCEs of domain 1, 2 and 3 to obtain local part of the end-to-end path
   through the PCEP protocol. Once received the PCRep message, it
   merges the answers to compute the end-to-end path and send it back to
   the client.</t>

</section>
</section>
<section anchor="motivations"><name>Motivations</name>

<t>This section provides the motivation for the YANG data model defined
   in this document.</t>

<t><xref target="yang-motivation"/> describes the motivation for a YANG data model to request
   path computation.</t>

<t><xref target="topo-interaction"/> describes the motivation for a YANG data model which
   complements the TE topology YANG data model defined in <xref target="RFC8795"/>.</t>

<t><xref target="rpc-motivation"/> describes the motivation for a YANG RPC which complements
   the TE tunnel YANG data model defined in <xref target="I-D.ietf-teas-yang-te"/>.</t>

<section anchor="yang-motivation"><name>Motivation for a YANG Model</name>

<section anchor="benefits-of-common-data-models"><name>Benefits of common data models</name>

<t>The YANG data model for requesting path computation is closely
   aligned with the YANG data models that provide (abstract) TE topology
   information, i.e., <xref target="RFC8795"/> as well as that are used to configure
   and manage TE tunnels, i.e., <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>There are many benefits in aligning the data model used for path
   computation requests with the YANG data models used for TE topology
   information and for TE tunnels configuration and management:</t>

<t><list style="symbols">
  <t>There is no need for an error-prone mapping or correlation of
information.</t>
  <t>It is possible to use the same endpoint identifiers in path
computation requests and in the topology modeling.</t>
  <t>The attributes used for path computation constraints are the same
as those used when setting up a TE tunnel.</t>
</list></t>

</section>
<section anchor="benefits-of-a-single-interface"><name>Benefits of a single interface</name>

<t>The system integration effort is typically lower if a single,
   consistent interface is used by controllers, i.e., one data modeling
   language (i.e., YANG) and a common protocol (e.g., NETCONF or
   RESTCONF).</t>

<t>Practical benefits of using a single, consistent interface include:</t>

<t><list style="numbers">
  <t>Simple authentication and authorization: The interface between
different components has to be secured. If different protocols
have different security mechanisms, ensuring a common access
control model may result in overhead. For instance, there may be a
need to deal with different security mechanisms, e.g., different
credentials or keys. This can result in increased integration
effort.</t>
  <t>Consistency: Keeping data consistent over multiple different
interfaces or protocols is not trivial. For instance, the sequence
of actions can matter in certain use cases, or transaction
semantics could be desired. While ensuring consistency within one
protocol can already be challenging, it is typically cumbersome to
achieve that across different protocols.</t>
  <t>Testing: System integration requires comprehensive testing,
including corner cases. The more different technologies are
involved, the more difficult it is to run comprehensive test cases
and ensure proper integration.</t>
  <t>Middle-box friendliness: Provider and consumer of path computation
requests may be located in different networks, and middle-boxes
such as firewalls, NATs, or load balancers may be deployed. In
such environments it is simpler to deploy a single protocol. Also,
it may be easier to debug connectivity problems.</t>
  <t>Tooling reuse: Implementers may want to implement path computation
requests with tools and libraries that already exist in
controllers and/or orchestrators, e.g., leveraging the rapidly
growing eco-system for YANG tooling.</t>
</list></t>

</section>
<section anchor="extensibility"><name>Extensibility</name>

<t>Path computation is only a subset of the typical functionality of a
   controller. In many use cases, issuing path computation requests
   comes along with the need to access other functionality on the same
   system. In addition to obtaining TE topology, for instance also
   configuration of services (set-up/modification/deletion) may be
   required, as well as:</t>

<t><list style="numbers">
  <t>Receiving notifications for topology changes as well as
integration with fault management</t>
  <t>Performance management such as retrieving monitoring and telemetry
data</t>
  <t>Service assurance, e.g., by triggering OAM functionality</t>
  <t>Other fulfilment and provisioning actions beyond tunnels and
services, such as changing QoS configurations  <vspace blankLines='1'/>
YANG is a very extensible and flexible data modeling language that
can be used for all these use cases.</t>
</list></t>

</section>
</section>
<section anchor="topo-interaction"><name>Interactions with TE topology</name>

<t>The use cases described in <xref target="use-cases"/> have been described assuming
   that the topology view exported by each underlying controller to its
   client is aggregated using the "virtual node model", defined in
   <xref target="RFC7926"/>.</t>

<t>TE topology information, e.g., as provided by <xref target="RFC8795"/>, could in
   theory be used by an underlying controller to provide TE information
   to its client thus allowing a PCE available within its client to
   perform multi-domain path computation on its own, without requesting
   path computations to the underlying controllers.</t>

<t>In case the client does not implement a PCE function, as discussed in
   <xref target="intro"/>, it could not perform path computation based on TE topology
   information and would instead need to request path computation from
   the underlying controllers to get the information it needs to find
   the optimal end-to-end path.</t>

<t>In case the client implements a PCE function, as discussed in 
   <xref target="intro"/>, the TE topology information needs to be complete and accurate,
   which would bring to scalability issues.</t>

<t>Using TE topology to provide a "virtual link model" aggregation, as
   described in <xref target="RFC7926"/>, may be insufficient, unless the aggregation
   provides complete and accurate information, which would still cause
   scalability issues, as described in <xref target="topo-aggregation"/> below.</t>

<t>Using TE topology abstraction, as described in <xref target="RFC7926"/>, may lead to
   compute an unfeasible path, as described in <xref target="RFC7926"/> in 
   <xref target="topo-abstraction"/> below.</t>

<t>Therefore when computing an optimal multi-domain path, there is a
   scalability trade-off between providing complete and accurate TE
   information and the number of path computation requests to the
   underlying controllers.</t>

<t>The TE topology information used, in a complimentary way, to reduce
   the number for path computation requests to the underlying
   controllers, are described in <xref target="topo-pc-complement"/> below.</t>

<section anchor="topo-aggregation"><name>TE topology aggregation</name>

<t>Using the TE topology model, as defined in <xref target="RFC8795"/>, the underlying
   controller can export the whole TE domain as a single TE node with a
   "detailed connectivity matrix" (which provides specific TE
   attributes, such as delay, Shared Risk Link Groups (SRLGs) and other
   TE metrics, between each ingress and egress links).</t>

<t>The information provided by the "detailed connectivity matrix" would
   be equivalent to the information that should be provided by "virtual
   link model" as defined in <xref target="RFC7926"/>.</t>

<t>For example, in the Packet/Optical Integration use case, described in
   <xref target="poi-uc"/>, the Optical Domain Controller can make the information
   shown in <xref target="fig-poi-example"/> available to the Packet/Optical Coordinator as part
   of the TE topology information and the Packet/Optical Coordinator
   could use this information to calculate on its own the optimal path
   between R1 and R2, without requesting any additional information to
   the Optical Domain Controller.</t>

<t>However, when designing the amount of information to provide within
   the "detailed connectivity matrix", there is a tradeoff to be
   considered between accuracy (i.e., providing "all" the information
   that might be needed by the PCE available within the client) and
   scalability.</t>

<t><xref target="poi-multi-path"/> below shows another example, similar to <xref target="fig-poi-example"/>, where
   there are two possible Optical paths between VP1 and VP4 with
   different properties (e.g., available bandwidth and cost).</t>

<figure title="Packet/Optical Integration path computation Example with multiple choices" anchor="poi-multi-path"><artwork type="ascii-art" name="poi-example-multiple.txt"><![CDATA[
                    ............................
                    :  /--------------------\  :
                    : /       cost=65        \ :
                    :/    available-bw=10G    \:
                    O VP1                  VP4 O
           cost=10 /:\                        /:\ cost=10
                  / : \----------------------/ : \
          +----+ /  :         cost=50          :  \ +----+
          |    |/   :     available-bw=2G      :   \|    |
          | R1 |    :                          :    | R2 |
          |    |\   :                          :   /|    |
          +----+ \  :  /--------------------\  :  / +----+
                  \ : /       cost=55        \ : /
            cost=5 \:/    available-bw=3G     \:/ cost=5
                    O VP2                  VP5 O
                    :                          :
                    :..........................:
]]></artwork></figure>

<t>If the information in the "detailed connectivity matrix" is not
   complete/accurate, we can have the following drawbacks:</t>

<t><list style="symbols">
  <t>If only the VP1-VP4 path with available bandwidth of 2 Gb/s and
cost 50 is reported, the client's PCE will fail to compute a 5
Gb/s path between routers R1 and R2, although this would be
feasible;</t>
  <t>If only the VP1-VP4 path with available bandwidth of 10 Gb/s and
cost 65 is reported, the client's PCE will compute, as optimal,
the 1 Gb/s path between R1 and R2 going through the VP2-VP5 path
within the optical domain while the optimal path would actually be
the one going thought the VP1-VP4 sub-path (with cost 50) within
the optical domain.  <vspace blankLines='1'/>
Reporting all the information, as in <xref target="poi-multi-path"/>, using the "detailed
 connectivity matrix", is quite challenging from a scalability
 perspective. The amount of this information is not just based on
 number of end points (which would scale as N-square), but also on
 many other parameters, including client rate, user
 constraints/policies for the service, e.g. max latency &lt; N ms, max
 cost, etc., exclusion policies to route around busy links, min
 Optical Signal to Noise Ratio (OSNR) margin, max pre-Forward Error
 Correction (FEC) Bit Error Rate (BER) etc. All these constraints
 could be different based on connectivity requirements.  <vspace blankLines='1'/>
It is also worth noting that the "connectivity matrix" has been
 originally defined in Wavelength Switched Optical Networks (WSON),
 <xref target="RFC7446"/>, to report the connectivity constrains of a physical node
 within the Wavelength Division Multiplexing (WDM) network: the
 information it contains is pretty "static" and therefore, once taken
 and stored in the TE data base, it can be always being considered
 valid and up-to-date in path computation request.  <vspace blankLines='1'/>
The "connectivity matrix" is sometimes confused with "optical reach
 table" that contain multiple (e.g. k-shortest) regen-free reachable
 paths for every A-Z node combination in the network. Optical reach
 tables can be calculated offline, utilizing vendor optical design and
 planning tools, and periodically uploaded to the Controller: these
 optical path reach tables are fairly static. However, to get the
 connectivity matrix, between any two sites, either a regen free path
 can be used, if one is available, or multiple regen free paths are
 concatenated to get from the source to the destination, which can be
 a very large combination. Additionally, when the optical path within
 optical domain needs to be computed, it can result in different paths
 based on input objective, constraints, and network conditions. In
 summary, even though "optical reach table" is fairly static, which
 regen free paths to build the connectivity matrix between any source
 and destination is very dynamic, and is done using very sophisticated
 routing algorithms.  <vspace blankLines='1'/>
Using the "basic connectivity matrix" with an abstract node to
 abstract the information regarding the connectivity constraints of an
 Optical domain, would make this information more "dynamic" since the
 connectivity constraints of an optical domain can change over time
 because some optical paths that are feasible at a given time may
 become unfeasible at a later time when e.g., another optical path is
 established.  <vspace blankLines='1'/>
The information in the "detailed connectivity matrix" is even more
 dynamic since the establishment of another optical path may change
 some of the parameters (e.g., delay or available bandwidth) in the
 "detailed connectivity matrix" while not changing the feasibility of
 the path.  <vspace blankLines='1'/>
There is therefore the need to keep the information in the "detailed
 connectivity matrix" updated which means that there another tradeoff
 between the accuracy (i.e., providing "all" the information that
 might be needed by the client's PCE) and having up-to-date
 information. The more the information is provided and the longer it
 takes to keep it up-to-date which increases the likelihood that the
 client's PCE computes paths using not updated information.  <vspace blankLines='1'/>
It seems therefore quite challenging to have a "detailed connectivity
 matrix" that provides accurate, scalable and updated information to
 allow the client's PCE to take optimal decisions by its own.  <vspace blankLines='1'/>
Considering the example in <xref target="poi-multi-path"/> with the approach defined in this
 document, the client, when it needs to set up an end-to-end path, it
 can request the Optical Domain Controller to compute a set of optimal
 paths (e.g., for VP1-VP4 and VP2-VP5) and take decisions based on the
 information received:</t>
  <t>When setting up a 5 Gb/s path between routers R1 and R2, the
Optical Domain Controller may report only the VP1-VP4 path as the
only feasible path: the Packet/Optical Coordinator can
successfully set up the end-to-end path passing though this
optical path;</t>
  <t>When setting up a 1 Gb/s path between routers R1 and R2, the
Optical Domain Controller (knowing that the path requires only 1
Gb/s) can report both the VP1-VP4 path, with cost 50, and the VP2-
VP5 path, with cost 65. The Packet/Optical Coordinator can then
compute the optimal path which is passing thought the VP1-VP4 sub-
path (with cost 50) within the optical domain.</t>
</list></t>

</section>
<section anchor="topo-abstraction"><name>TE topology abstraction</name>

<t>Using the TE topology model, as defined in <xref target="RFC8795"/>, the underlying
   controller can export to its client an abstract TE topology, composed
   by a set of TE nodes and TE links, representing the abstract view of
   the topology under its control.</t>

<t>For example, in the multi-domain TE network use case, described in
   <xref target="md-uc"/>, the TE Domain Controller 1 can export a TE topology
   encompassing the TE nodes A, B, C and D and the TE links
   interconnecting them. In a similar way, the TE Domain Controller 2
   can export a TE topology encompassing the TE nodes E, F, G and H and
   the TE links interconnecting them.</t>

<t>In this example, for simplicity reasons, each abstract TE node maps
   with each physical node, but this is not necessary.</t>

<t>In order to set up a multi-domain TE path (e.g., between nodes A and
   H), the Multi-Domain Controller can compute by its own an optimal
   end-to-end path based on the abstract TE topology information
   provided by the domain controllers. For example:</t>

<t><list style="symbols">
  <t>Multi-Domain Controller can compute, based on its own TED data,
the optimal multi-domain path being A-B-C-E-G-H, and then request
the TE Domain Controllers to set up the A-B-C and E-G-H intra-
domain paths</t>
  <t>But, during path set-up, the TE Domain Controller may find out
that A-B-C intra-domain path is not feasible (as discussed in
<xref target="md-uc"/>, in optical networks it is typical to have some paths
not being feasible due to optical constraints that are known only
by the Optical Domain Controller), while only the path A-B-D is
feasible</t>
  <t>So what the Multi-Domain Controller has computed is not good and
it needs to re-start the path computation from scratch  <vspace blankLines='1'/>
As discussed in <xref target="topo-aggregation"/>, providing more extensive abstract
information from the TE Domain Controllers to the Multi-Domain
Controller may lead to scalability problems.  <vspace blankLines='1'/>
In a sense this is similar to the problem of routing and wavelength
assignment within an optical domain. It is possible to do first
routing (step 1) and then wavelength assignment (step 2), but the
chances of ending up with a good path is low. Alternatively, it is
possible to do combined routing and wavelength assignment, which is
known to be a more optimal and effective way for optical path set-up.
Similarly, it is possible to first compute an abstract end-to-end
path within the Multi-Domain Controller (step 1) and then compute an
intra-domain path within each optical domain (step 2), but there are
more chances not to find a path or to get a suboptimal path than by
performing multiple per-domain path computations and then stitching
them together.</t>
</list></t>

</section>
<section anchor="topo-pc-complement"><name>Complementary use of the TE topology</name>

<t>As discussed in <xref target="md-uc"/>, there are some scalability issues with
   path computation requests in a multi-domain TE network with many TE
   domains, in terms of the number of requests to send to the TE Domain
   Controllers. It would therefore be worthwhile using the abstract TE
   topology information provided by the TE Domain Controllers to limit
   the number of requests.</t>

<t>An example can be described considering the multi-domain abstract TE
   topology shown in <xref target="fig-topo-many-domains"/>. In this example, an end-to-end TE path
   between domains A and F needs to be set up. The transit TE domain
   should be selected between domains B, C, D and E.</t>

<figure title="Multi-domain with many domains (Topology information)" anchor="fig-topo-many-domains"><artwork type="ascii-art" name="many-domains-topology.txt"><![CDATA[
                          .........B.........
                          : _ _ _ _ _ _ _ _ :
                          :/               \:
                      +---O  NOT FEASIBLE   O---+
                cost=5|   :                 :   |
    ......A......     |   :.................:   |     ......F......
    :           :     |                         |     :           :
    :           O-----+   .........C.........   +-----O           :
    :           :         : /-------------\ :         :           :
    :           :         :/               \:         :           :
    :  cost<=20 O---------O   cost <= 30    O---------O cost<=20  :
    :          /: cost=5  :                 : cost=5  :\          :
    :  /------/ :         :.................:         : \------\  :
    : /         :                                     :         \ :
    :/ cost<=25 :         .........D.........         : cost<=25 \:
    O-----------O-------+ : /-------------\ : +-------O-----------O
    :\          : cost=5| :/               \: |cost=5 :          /:
    : \         :       +-O   cost <= 30    O-+       :         / :
    :  \------\ :         :                 :         : /------/  :
    : cost>=30 \:         :.................:         :/ cost>=30 :
    :           O-----+                         +-----O           :
    :...........:     |   .........E.........   |     :...........:
                      |   : /-------------\ :   |
                cost=5|   :/               \:   |cost=5
                      +---O   cost >= 30    O---+
                          :                 :
                          :.................:
]]></artwork></figure>

<t>The actual cost of each intra-domain path is not known a priori from
   the abstract topology information. The Multi-Domain Controller only
   knows, from the TE topology provided by the underlying domain
   controllers, the feasibility of some intra-domain paths and some
   upper-bound and/or lower-bound cost information. With this
   information, together with the cost of inter-domain links, the Multi-
   Domain Controller can understand by its own that:</t>

<t><list style="symbols">
  <t>Domain B cannot be selected as the path connecting domains A and F
is not feasible;</t>
  <t>Domain E cannot be selected as a transit domain since it is known
from the abstract topology information provided by domain
controllers that the cost of the multi-domain path A-E-F (which is
100, in the best case) will be always be higher than the cost of
the multi-domain paths A-D-F (which is 90, in the worst case) and
A-C-F (which is 80, in the worst case).  <vspace blankLines='1'/>
Therefore, the Multi-Domain Controller can understand by its own that
 the optimal multi-domain path could be either A-D-F or A-C-F but it
 cannot know which one of the two possible option actually provides
 the optimal end-to-end path.  <vspace blankLines='1'/>
The Multi-Domain Controller can therefore request path computation
 only to the TE Domain Controllers A, D, C and F (and not to all the
 possible TE Domain Controllers).</t>
</list></t>

<figure title="Multi-domain with many domains (Path Computation information)" anchor="fig-pc-many-domains"><artwork type="ascii-art" name="many-domain-path-computation.txt"><![CDATA[
                          .........B.........
                          :                 :
                      +---O                 O---+
    ......A......     |   :.................:   |     ......F......
    :           :     |                         |     :           :
    :           O-----+   .........C.........   +-----O           :
    :           :         : /-------------\ :         :           :
    :           :         :/               \:         :           :
    :  cost=15  O---------O    cost = 25    O---------O  cost=10  :
    :          /: cost=5  :                 : cost=5  :\          :
    :  /------/ :         :.................:         : \------\  :
    : /         :                                     :         \ :
    :/ cost=10  :         .........D.........         : cost=15  \:
    O-----------O-------+ : /-------------\ : +-------O-----------O
    :           : cost=5| :/               \: |cost=5 :           :
    :           :       +-O    cost = 15    O-+       :           :
    :           :         :                 :         :           :
    :           :         :.................:         :           :
    :           O-----+                         +-----O           :
    :...........:     |   .........E.........   |     :...........:
                      |   :                 :   |
                      +---O                 O---+
                          :.................:
]]></artwork></figure>

<t>Based on these requests, the Multi-Domain Controller can know the
   actual cost of each intra-domain paths which belongs to potential
   optimal end-to-end paths, as shown in <xref target="fig-pc-many-domains"/>, and then compute the
   optimal end-to-end path (e.g., A-D-F, having total cost of 50,
   instead of A-C-F having a total cost of 70).</t>

</section>
</section>
<section anchor="rpc-motivation"><name>Path Computation RPC</name>

<t>The TE tunnel YANG data model, defined in <xref target="I-D.ietf-teas-yang-te"/>, can support
   the need to request path computation, as described in section 5.1.2
   of <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>This solution is stateful since the state of each created "compute-
   only" TE tunnel path needs to be maintained, in the YANG datastores
   (at least in the running datastore and operational datastore), and
   updated, when underlying network conditions change.</t>

<t>The RPC mechanism allows requesting path computation using a simple
   atomic operation, without creating any state in the YANG datastores,
   and it is the natural option/choice, especially with stateless PCE.</t>

<t>It is very useful to provide both the options of using an RPC as well
   as of setting up TE tunnel paths in "compute-only" mode. It is
   suggested to use the RPC as much as possible and to rely on
   "compute-only" TE tunnel paths, when really needed.</t>

<t>Using the RPC solution would imply that the underlying controller
   (e.g., a PNC) computes a path twice during the process to set up an
   LSP: at time T1, when its client (e.g., an MDSC) sends a path
   computation RPC request to it, and later, at time T2, when the same
   client (MDSC) creates a TE tunnel requesting the set-up of the LSP.
   The underlying assumption is that, if network conditions have not
   changed, the same path that has been computed at time T1 is also
   computed at time T2 by the underlying controller (e.g. PNC) and
   therefore the path that is set up at time T2 is exactly the same path
   that has been computed at time T1.</t>

<t>However, since the operation is stateless, there is no guarantee that
   the returned path would still be available when path set-up is
   requested: this does not cause major issues when the time between
   path computation and path set-up is short (especially if compared
   with the time that would be needed to update the information of a
   very detailed connectivity matrix).</t>

<t>In most of the cases, there is even no need to guarantee that the
   path that has been set up is the exactly same as the path that has
   been returned by path computation, especially if it has the same or
   even better metrics. Depending on the abstraction level applied by
   the server, the client may also not know the actual computed path.</t>

<t>The most important requirement is that the required global objectives
   (e.g., multi-domain path metrics and constraints) are met. For this
   reason a path verification phase is always necessary to verify that
   the actual path that has been set up meets the global objectives (for
   example in a multi-domain network, the resulting end-to-end path
   meets the required end-to-end metrics and constraints).</t>

<t>In most of the cases, even if the path being set up is not exactly
   the same as the path returned by path computation, its metrics and
   constraints are "good enough" and the path verification passes
   successfully. In the few corner cases where the path verification
   fails, it is possible repeat the whole process (path computation,
   path set-up and path verification).</t>

<t>In case it is required to set up at T2 exactly the same path computed
   at T1, the RPC solution should not be used and, instead, a "compute-
   only" TE tunnel path should be set up, allowing also notifications in
   case the computed path has been changed.</t>

<t>In this case, at time T1, the client (MDSC) creates a TE tunnel in a
   compute-only mode in the running datastore and later, at time T2,
   changes the configuration of that TE tunnel (not to be any more in a
   compute-only mode) to trigger the set-up of the LSP over the path
   which have been computed at time T1 and reported in the operational
   datastore.</t>

<t>It is worth noting that also using the "compute-only" TE tunnel path,
   although increasing the likelihood that the computed path is
   available at path set-up, does not guarantee that because
   notifications may not be reliable or delivered on time. Path
   verification is needed also in this case.</t>

<t>The solution based on "compute-only" TE tunnel path has also the
   following drawbacks:</t>

<t><list style="symbols">
  <t>Several messages required for any path computation</t>
  <t>Requires persistent storage in the underlying controller</t>
  <t>Need for garbage collection for stranded paths</t>
  <t>Process burden to detect changes on the computed paths in order to
provide notifications update</t>
</list></t>

<section anchor="temp-state"><name>Temporary reporting of the computed path state</name>

<t>This section describes an optional extension to the stateless
   behavior of the path computation RPC, where the underlying
   controller, after having received a path computation RPC request,
   maintains some "transient state" associated with the computed path,
   allowing the client to request the set-up of exactly that path, if
   still available.</t>

<t>This is similar to the "compute-only" TE tunnel path solution but, to
   avoid the drawbacks of the stateful approach, is leveraging the path
   computation RPC and the separation between configuration and
   operational datastore, as defined in the NMDA architecture <xref target="RFC8342"/>.</t>

<t>The underlying controller, after having computed a path, as requested
   by a path computation RPC, also creates a TE tunnel instance within
   the operational datastore, to store that computed path. This would be
   similar to a "compute-only" TE tunnel path, with the only difference
   that there is no associated TE tunnel instance within the running
   datastore.</t>

<t>Since the underlying controller stores in the operational datastore
   the computed path based on an abstract topology it exposes, it also
   remembers, internally, which is the actual native path (physical
   path), within its native topology (physical topology), associated
   with that compute-only TE tunnel instance.</t>

<t>Afterwards, the client (e.g., MDSC) can request the set-up of that
   specific path by creating a TE tunnel instance (not in compute-only
   mode) in the running datastore using the same tunnel-name of
   the existing TE tunnel in the operational datastore: this will
   trigger the underlying controller to set up that path, if still
   available.</t>

<t>There are still cases where the path being set up is not exactly the
   same as the path that has been computed:</t>

<t><list style="symbols">
  <t>When the tunnel is configured with path constraints which are not
compatible with the computed path;</t>
  <t>When the tunnel set-up is requested after the resources of the
computed path are no longer available;</t>
  <t>When the tunnel set-up is requested after the computed path is no
longer known (e.g. due to a server reboot) by the underlying
controller.  <vspace blankLines='1'/>
In all these cases, the underlying controller should compute and set
 up a new path.  <vspace blankLines='1'/>
Therefore the "path verification" phase, as described in <xref target="rpc-motivation"/>
 above, is always needed to check that the path that has been set up
 is still "good enough".  <vspace blankLines='1'/>
Since this new approach is not completely stateless, garbage
 collection is implemented using a timeout that, when it expires,
 triggers the removal of the computed path from the operational
 datastore. This operation is fully controlled by the underlying
 controller without the need for any action to be taken by the client
 that is not able to act on the operational datastore. The default
 value of this timeout is 10 minutes but a different value may be
 configured by the client.  <vspace blankLines='1'/>
In addition, it is possible for the client to tag each path
 computation request with a transaction-id allowing for a faster
 removal of all the paths associated with a transaction-id, without
 waiting for their timers to expire.  <vspace blankLines='1'/>
The underlying controller can remove from the operational datastore
 all the paths computed with a given transaction-id which have not
 been set up either when it receives a Path Delete RPC request for
 that transaction-id or, automatically, right after the set-up up of a
 path that has been previously computed with that transaction-id.  <vspace blankLines='1'/>
This possibility is useful when multiple paths are computed but, at
 most, only one is set up (e.g., in multi-domain path computation
 scenario scenarios). After the selected path has been set up (e.g, in
 one domain during multi-domain path set-up), all the other
 alternative computed paths can be automatically deleted by the
 underlying controller (since no longer needed). The client can also
 request, using the Path Delete RPC request, the underlying controller
 to remove all the computed paths, if none of them is going to be set
 up (e.g., in a transit domain not being selected by multi-domain path
 computation and so not being automatically deleted).  <vspace blankLines='1'/>
This approach is complimentary and not alternative to the timer which
 is always needed to avoid stranded computed paths being stored in the
 operational datastore when no path is set up and no explicit Path
 Delete RPC request is received.</t>
</list></t>

</section>
</section>
</section>
<section anchor="path-computation-and-optimization-for-multiple-paths"><name>Path computation and optimization for multiple paths</name>

<t>There are use cases, where it is advantageous to request path
   computation for a set of paths, through a network or through a
   network domain, using a single request <xref target="RFC5440"/>.</t>

<t>In this case, sending a single request for multiple path
   computations, instead of sending multiple requests for each path
   computation, would reduce the protocol overhead and it would consume
   less resources (e.g., threads in the client and server).</t>

<t>In the context of a typical multi-domain TE network, there could
   multiple choices for the ingress/egress points of a domain and the
   Multi-Domain Controller needs to request path computation between all
   the ingress/egress pairs to select the best pair. For example, in the
   example of <xref target="md-uc"/>, the Multi-Domain Controller needs to request
   the TE Network Controller 1 to compute the A-C and the A-D paths and
   to the TE Network Controller 2 to compute the E-H and the F-H paths.</t>

<t>It is also possible that the Multi-Domain Controller receives a
   request to set up a group of multiple end to end connections. The
   Multi-Domain Controller needs to request each TE domain Controller to
   compute multiple paths, one (or more) for each end to end connection.</t>

<t>There are also scenarios where it can be needed to request path
   computation for a set of paths in a synchronized fashion.</t>

<t>One example could be computing multiple diverse paths. Computing a
   set of diverse paths in an unsynchronized fashion, leads to the
   possibility of not being able to satisfy the diversity requirement.
   In this case, it is preferable to compute a sub-optimal primary path
   for which a diversely routed secondary path exists.</t>

<t>There are also scenarios where it is needed to request optimizing a
   set of paths using objective functions that apply to the whole set of
   paths, see <xref target="RFC5541"/>, e.g. to minimize the sum of the costs of all
   the computed paths in the set.</t>

</section>
<section anchor="yang-data-model-for-requesting-path-computation"><name>YANG data model for requesting Path Computation</name>

<t>This document define a YANG RPC to request path computation as an
   "augmentation" of tunnel-rpc, defined in <xref target="I-D.ietf-teas-yang-te"/>. This model
   provides the RPC input attributes that are needed to request path
   computation and the RPC output attributes that are needed to report
   the computed paths.</t>

<figure><artwork type="ascii-art" name="overview.txt"><![CDATA[
  augment /te:tunnels-path-compute/te:input/te:path-compute-info:
    +-- path-request* [request-id]
    |  ...

  augment /te:tunnels-path-compute/te:output/te:path-compute-result:
    +--ro response* [response-id]
       +--ro response-id                         uint32
       +--ro computed-paths-properties
       |  +--ro computed-path-properties* [k-index]
       |     ...
]]></artwork></figure>

<t>This model extensively re-uses the grouping defined in <xref target="I-D.ietf-teas-yang-te"/>
   and <xref target="I-D.ietf-teas-rfc8776-update"/> to ensure maximal syntax and semantics commonality.</t>

<t>This YANG data model allows one RPC to include multiple path
   requests, each path request being identified by a request-id.
   Therefore, one RPC can return multiple responses, one for each path
   request, being identified by a response-id equal to the corresponding
   request-id. Each response reports one or more computed paths, as
   requested by the k-requested-paths attribute. By default, each
   response reports one computed path.</t>

<section anchor="synchronization-of-multiple-path-computation-requests"><name>Synchronization of multiple path computation requests</name>

<t>The YANG data model permits the synchronization of a set of multiple
   path requests (identified by specific request-id) all related to a
   "svec" container emulating the syntax of the Synchronization VECtor
   (SVEC) PCEP object, defined in <xref target="RFC5440"/>.</t>

<figure><artwork type="ascii-art" name="synchronization.txt"><![CDATA[
    +-- synchronization* []
       +-- svec
       |  +-- relaxable?      boolean
       |  +-- disjointness?   te-path-disjointness
       |  +-- request-id*     uint32
       +-- svec-constraints
       |  +-- path-metric-bound* [metric-type]
       |     +-- metric-type    identityref
       |     +-- upper-bound?   uint64
       +-- path-srlgs-lists
       |  +-- path-srlgs-list* [usage]
       |     +-- usage     identityref
       |     +-- values*   srlg
       +-- path-srlgs-names
       |  +-- path-srlgs-name* [usage]
       |     +-- usage    identityref
       |     +-- names*   string
       +-- exclude-objects
       |  +-- excludes* []
       |     +-- (type)?
       |        +--:(numbered-node-hop)
       |        |  +-- numbered-node-hop
       |        |     +-- node-id     te-node-id
       |        |     +-- hop-type?   te-hop-type
       |        +--:(numbered-link-hop)
       |        |  +-- numbered-link-hop
       |        |     +-- link-tp-id    te-tp-id
       |        |     +-- hop-type?     te-hop-type
       |        |     +-- direction?    te-link-direction
       |        +--:(unnumbered-link-hop)
       |        |  +-- unnumbered-link-hop
       |        |     +-- link-tp-id    te-tp-id
       |        |     +-- node-id       te-node-id
       |        |     +-- hop-type?     te-hop-type
       |        |     +-- direction?    te-link-direction
       |        +--:(as-number)
       |        |  +-- as-number-hop
       |        |     +-- as-number    inet:as-number
       |        |     +-- hop-type?    te-hop-type
       |        +--:(label)
       |           +-- label-hop
       |              +-- te-label
       |                 ...
       +-- optimizations
          +-- (algorithm)?
             +--:(metric) {te-types:path-optimization-metric}?
             |  +-- optimization-metric* [metric-type]
             |     +-- metric-type    identityref
             |     +-- weight?        uint8
             +--:(objective-function)
                      {te-types:path-optimization-objective-function}?
                +-- objective-function
                   +-- objective-function-type?   identityref
]]></artwork></figure>

<t>The model, in addition to the metric types, defined in <xref target="I-D.ietf-teas-rfc8776-update"/>,
   which can be applied to each individual path request, supports also
   additional metric types, which apply to a set of synchronized
   requests, as referenced in <xref target="RFC5541"/>. These additional metric types
   are defined by the following YANG identities:</t>

<t><list style="symbols">
  <t>svec-metric-type: base YANG identity from which cumulative metric
types identities are derived.</t>
  <t>svec-metric-cumul-te: cumulative TE cost metric type, as defined
in <xref target="RFC5541"/>.</t>
  <t>svec-metric-cumul-igp: cumulative IGP cost metric type, as defined
in <xref target="RFC5541"/>.</t>
  <t>svec-metric-cumul-hop: cumulative Hop metric type, representing
the cumulative version of the Hop metric type defined in
<xref target="I-D.ietf-teas-rfc8776-update"/>.</t>
  <t>svec-metric-aggregate-bandwidth-consumption: aggregate bandwidth
consumption metric type, as defined in <xref target="RFC5541"/>.</t>
  <t>svec-metric-load-of-the-most-loaded-link: load of the most loaded
link metric type, as defined in <xref target="RFC5541"/>.</t>
</list></t>

</section>
<section anchor="returned-metric-values"><name>Returned metric values</name>

<t>This YANG data model provides a way to return the values of the
   metrics computed by the path computation in the output of RPC,
   together with other important information (e.g. SRLG, affinities,
   explicit route), emulating the syntax of the "C" flag of the "METRIC"
   PCEP object <xref target="RFC5440"/>:</t>

<figure><artwork type="ascii-art" name="returned-metrics.txt"><![CDATA[
       |     +--ro path-properties
       |        +--ro path-metric* [metric-type]
       |        |  +--ro metric-type           identityref
       |        |  +--ro accumulative-value?   uint64
       |        +--ro path-affinities-values
       |        |  +--ro path-affinities-value* [usage]
       |        |     +--ro usage    identityref
       |        |     +--ro value?   admin-groups
       |        +--ro path-affinity-names
       |        |  +--ro path-affinity-name* [usage]
       |        |     +--ro usage            identityref
       |        |     +--ro affinity-name* [name]
       |        |        +--ro name    string
       |        +--ro path-srlgs-lists
       |        |  +--ro path-srlgs-list* [usage]
       |        |     +--ro usage     identityref
       |        |     +--ro values*   srlg
       |        +--ro path-srlgs-names
       |        |  +--ro path-srlgs-name* [usage]
       |        |     +--ro usage    identityref
       |        |     +--ro names*   string
       |        +--ro path-route-objects
       |        |  ...
       |        +--ro te-bandwidth
       |        |  ...
       |        +--ro disjointness-type?
       |                te-types:te-path-disjointness
]]></artwork></figure>

<t>It also allows the client to request which information (metrics, SRLG
   and/or affinities) should be returned:</t>

<figure><artwork type="ascii-art" name="requested-metrics.txt"><![CDATA[
    |  +-- request-id                            uint32
    |  ...
    |  +-- requested-metrics* [metric-type]
    |  |  +-- metric-type    identityref
    |  +-- return-srlgs?                         boolean
    |  +-- return-affinities?                    boolean
    |  ...
]]></artwork></figure>

<t>This feature is essential for path computation in a multi-domain TE
   network as described in <xref target="md-uc"/>. In this case, the metrics
   returned by a path computation requested to a given underlying
   controller must be used by the client to compute the best end-to-end
   path. If they are missing, the client cannot compare different paths
   calculated by the underlying controllers and choose the best one for
   the optimal end-to-end (e2e) path.</t>

</section>
<section anchor="multiple-paths-requests-for-the-same-te-tunnel"><name>Multiple Paths Requests for the same TE tunnel</name>

<t>The YANG data model allows including multiple requests for different
   paths intended to be used within the same tunnel or within different
   tunnels.</t>

<t>When multiple requested paths are intended to be used within the same
   tunnel (e.g., requesting path computation for the primary and
   secondary paths of a protected tunnel), the set of attributes that
   are intended to be configured on per-tunnel basis rather than on per-
   path basis are common to all these path requests. These attributes
   includes both attributes which can be configured only a per-tunnel
   basis (e.g., tunnel-name, source/destination TTP, encoding and
   switching-type) as well attributes which can be configured both on a
   per-tunnel and on a per-path basis (e.g., the te-bandwidth or the
   associations).</t>

<t>Therefore, a tunnel-attributes list is defined, within the path
   computation request RPC:</t>

<figure><artwork type="ascii-art" name="tunnel-attributes-list.txt"><![CDATA[
    +-- tunnel-attributes* [tunnel-name]
    |  +-- tunnel-name               string
    |  +-- encoding?                 identityref
    |  +-- switching-type?           identityref
    |  +-- source?                   te-types:te-node-id
    |  +-- destination?              te-types:te-node-id
    |  +-- src-tunnel-tp-id?         binary
    |  +-- dst-tunnel-tp-id?         binary
    |  +-- bidirectional?            boolean
    |  +-- association-objects
    |  |  ...
    |  +-- protection-type?          identityref
    |  +-- restoration-type?         identityref
    |  +-- restoration-scheme?       identityref
    |  +-- te-topology-identifier
    |  |  +-- provider-id?   te-global-id
    |  |  +-- client-id?     te-global-id
    |  |  +-- topology-id?   te-topology-id
    |  +-- te-bandwidth
    |  |  ...
    |  +-- link-protection?          identityref
    |  +-- setup-priority?           uint8
    |  +-- hold-priority?            uint8
    |  +-- signaling-type?           identityref
    |  +-- hierarchy
    |     +-- dependency-tunnels
    |     |  ...
    |     +-- hierarchical-link
    |        ...
]]></artwork></figure>

<t>The path requests that are intended to be used within the same tunnel
   should reference the same entry in the tunnel-attributes list. This
   allows:</t>

<t><list style="symbols">
  <t>avoiding repeating the same set of per-tunnel parameters on
multiple requested paths;</t>
  <t>the server to understand what attributes are intended to be
configured on a per-tunnel basis (e.g., the te-bandwidth
configured in the tunnel-attributes) and what attributes are
intended to be configured on a per-path basis(e.g., the te-
bandwidth configured in the path-request). This could be useful
especially when the server also creates a TE tunnel instance
within the operational datastore to report the computed paths, as
described in <xref target="temp-state"/>: in this case, the tunnel-name is also
used as the suggested name for that TE tunnel instance.  <vspace blankLines='1'/>
The YANG data model allows also including requests for paths intended
 to modify existing tunnels (e.g., adding a protection path for an
 existing un-protected tunnel). In this case, the per-tunnel
 attributes are already provided in an existing TE tunnel instance and
 do not need to be re-configured in the path computation request RPC.
 Therefore, these requests should reference an existing TE tunnel
 instance.  <vspace blankLines='1'/>
It is also possible to request computing paths without indicating in
 which tunnel they are intended to be used (e.g., in case of an
 unprotected tunnel). In this case, the per-tunnel attributes could be
 provided together with the per-path attributes in the path request,
 without using the tunnel-attributes list.  <vspace blankLines='1'/>
The choices below are defined to distinguish the cases above:</t>
  <t>whether the per-tunnel attributes are configured by reference
(providing a leafref), to:  <list style="symbols">
      <t>either a TE tunnel instance, if it exists;</t>
      <t>or to an entry of the tunnel-attributes list, if the TE tunnel
instance does not exist;</t>
    </list></t>
  <t>or by value, providing the set of tunnel attributes within the
path request:</t>
</list></t>

<figure><artwork type="ascii-art" name="tunnel-attributes.txt"><![CDATA[
    |  +-- (tunnel-attributes)?
    |  |  +--:(reference)
    |  |  |  +-- tunnel-reference
    |  |  |     +-- (tunnel-exist)
    |  |  |     |  +--:(tunnel-ref)
    |  |  |     |  |  +-- tunnel-ref                te:tunnel-ref
    |  |  |     |  +--:(tunnel-attributes-ref)
    |  |  |     |     +-- tunnel-attributes-ref     leafref
    |  |  |     +-- path-name?                      string
    |  |  |     +-- (path-role)
    |  |  |        ...
    |  |  +--:(value)
    |  |     +-- tunnel-name?                    string
    |  |     +-- path-name?                      string
    |  |     +-- (path-role)?
    |  |     |  ...
    |  |     ...
    |  |     +-- encoding?                       identityref
    |  |     +-- switching-type?                 identityref
    |  |     ...
]]></artwork></figure>

<section anchor="tunnel-attributes-specified-by-value"><name>Tunnel attributes specified by value</name>

<t>The (value) case provides the set of attributes that are configured
   only on per-tunnel basis (e.g., tunnel-name, source/destination TTP,
   encoding and switching-type).</t>

<t>In this case, it is assumed that the requested path will be the only
   path within a tunnel.</t>

<t>If the only path within a tunnel is the transit segment of a multi-domain end-to-end path, it can be of any type (primary, secondary, reverse-primary
   or reverse-secondary). The (path-role) choice is used to specify its role in the path request:</t>

<figure><artwork type="ascii-art" name="tunnel-by-value.txt"><![CDATA[
    |  |     +-- (path-role)?
    |  |     |  +--:(primary-path)
    |  |     |  +--:(secondary-path)
    |  |     |  |  +-- secondary-path!
    |  |     |  |     +-- primary-path-name?   string
    |  |     |  +--:(primary-reverse-path)
    |  |     |  |  +-- primary-reverse-path!
    |  |     |  |     +-- primary-path-name?   string
    |  |     |  +--:(secondary-reverse-path)
    |  |     |     +-- secondary-reverse-path!
    |  |     |        +-- primary-path-name?           string
    |  |     |        +-- primary-reverse-path-name?   string
]]></artwork></figure>

<t>In all the other cases, the only path within a tunnel is a primary path.</t>

<t>The secondary-path, the primary-reverse-path and the secondary-
   reverse-path are presence container used to indicate the role of the
   path: by default, the path is assumed to be a primary path.</t>

<t>They optionally can contain the name of the primary-path under which
   the requested path could be associated within the YANG tree structure
   defined in <xref target="I-D.ietf-teas-yang-te"/>, which could be useful when the server also
   creates a TE tunnel instance within the operational datastore to
   report the computed paths, as described in <xref target="temp-state"/>: in this
   case, the tunnel-name and the path names are also used as the
   suggested name for that TE tunnel and path instances.</t>

</section>
<section anchor="tunnel-attributes-specified-by-reference"><name>Tunnel attributes specified by reference</name>

<t>The (reference) case provides the information needed to associate
   multiple path requests that are intended to be used within the same
   tunnel.</t>

<t>In order to indicate the role of the path being requested within the
   intended tunnel (e.g., primary or secondary path), the (path-role)
   choice is defined:</t>

<figure><artwork type="ascii-art" name="tunnel-by-reference.txt"><![CDATA[
    |  |  |     +-- (path-role)
    |  |  |        +--:(primary-path)
    |  |  |        |  +-- primary-path!
    |  |  |        |     ...
    |  |  |        +--:(secondary-path)
    |  |  |        |  +-- secondary-path
    |  |  |        |     ...
    |  |  |        +--:(primary-reverse-path)
    |  |  |        |  +-- primary-reverse-path
    |  |  |        |     ...
    |  |  |        +--:(secondary-reverse-path)
    |  |  |           +-- secondary-reverse-path
    |  |  |              ...
]]></artwork></figure>

<t>The primary-path is a presence container used to indicate that the
   requested path is intended to be used as a primary path. It can also
   contain some attributes which are configured only on primary paths
   (e.g., the k-requested-paths).</t>

<t>The secondary-path container indicates that the requested path is
   intended to be used as a secondary path and it contains at least
   references to one or more primary paths which can use it as a
   candidate secondary path:</t>

<figure><artwork type="ascii-art" name="secondary-path.txt"><![CDATA[
    |  |  |        |  +-- secondary-path
    |  |  |        |     ...
    |  |  |        |     +-- primary-path-ref* []
    |  |  |        |        +-- (primary-path-exist)
    |  |  |        |           +--:(path-ref)
    |  |  |        |           |  +-- primary-path-ref    leafref
    |  |  |        |           +--:(path-request-ref)
    |  |  |        |              +-- path-request-ref    leafref
]]></artwork></figure>

<t>A requested secondary path can reference any requested primary paths,
   and, in case they are intended to be used within an existing TE
   tunnel, it could also reference any existing primary-paths.</t>

<t>The secondary-path container can also contain some attributes which
   are configured only on secondary paths (e.g., the protection-type).</t>

<t>The primary-reverse-path container indicates that the requested path
   is intended to be used as a primary reverse path and it contains only
   the reference to the primary path which is intended to use it as a
   reverse path:</t>

<figure><artwork type="ascii-art" name="primary-reverse-path.txt"><![CDATA[
    |  |  |        |  +-- primary-reverse-path
    |  |  |        |     +-- (primary-path-exist)
    |  |  |        |        +--:(path-ref)
    |  |  |        |        |  +-- primary-path-ref    leafref
    |  |  |        |        +--:(path-request-ref)
    |  |  |        |           +-- path-request-ref    leafref
]]></artwork></figure>

<t>A requested primary reverse path can reference either a requested
   primary path, or, in case it is intended to be used within an
   existing TE tunnel, an existing primary-path.</t>

<t>The secondary-reverse-path container indicates that the requested
   path is intended to be used as a secondary reverse path and it
   contains at least references to one or more primary paths, whose
   primary reverse path can use it as a candidate secondary reverse
   path:</t>

<figure><artwork type="ascii-art" name="secondary-reverse-path.txt"><![CDATA[
    |  |  |           +-- secondary-reverse-path
    |  |  |              ...
    |  |  |              +-- primary-reverse-path* []
    |  |  |                 +-- (primary-reverse-path-exist)
    |  |  |                    +--:(path-ref)
    |  |  |                    |  +-- primary-path-ref    leafref
    |  |  |                    +--:(path-request-ref)
    |  |  |                       +-- path-request-ref    leafref
]]></artwork></figure>

<t>A requested secondary reverse path can reference any requested
   primary paths, and, in case they are intended to be used within an
   existing TE tunnel, it could reference also existing primary-paths.</t>

<t>The secondary-reverse-path container can also contain some attributes
   which are configured only on secondary reverse paths (e.g., the
   protection-type).</t>

<t>In case the requested path is a transit segment of a multi-domain
   end-to-end path, the primary-path may not be needed to be
   setup/computed. However, the request for path computation of a
   secondary-path or a primary-reverse or of a secondary-reverse-path
   requires that the primary-path exists or it is requested within the
   same RPC request. In the latter case, the path request for the
   primary-path should have an empty 'route-object-include-exclude' list,
   as described in section 5.1.1 of <xref target="I-D.ietf-teas-yang-te"/>, to indicate to the server that
   path computation is not requested and no path properties will
   therefore be returned in the RPC response.</t>

</section>
</section>
<section anchor="multi-layer-path-computation"><name>Multi-Layer Path Computation</name>

<t>The models supports requesting multi-layer path computation following
   the same approach based on dependency tunnels, as defined in <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>The tunnel-attributes of a given client-layer path request can
   reference server-layer TE tunnels which can already exist in the YANG
   datastore or be specified in the tunnel-attributes list, within the
   same RPC request:</t>

<figure><artwork type="ascii-art" name="dependency-tunnels.txt"><![CDATA[
    |     +-- dependency-tunnels
    |     |  +-- dependency-tunnel* [name]
    |     |  |  +-- name              -> /te:te/tunnels/tunnel/name
    |     |  |  +-- encoding?         identityref
    |     |  |  +-- switching-type?   identityref
    |     |  +-- dependency-tunnel-attributes* [name]
    |     |     +-- name              leafref
    |     |     +-- encoding?         identityref
    |     |     +-- switching-type?   identityref
]]></artwork></figure>

<t>In a similar way as in <xref target="I-D.ietf-teas-yang-te"/>, the server-layer tunnel
   attributes should provide the information of what would be the
   dynamic link in the client layer topology supported by that tunnel,
   if instantiated:</t>

<figure><artwork type="ascii-art" name="hierarchical-link.txt"><![CDATA[
    |     +-- hierarchical-link
    |        +-- enable?                   boolean
    |        +-- local-te-node-id?         te-types:te-node-id
    |        +-- local-te-link-tp-id?      te-types:te-tp-id
    |        +-- remote-te-node-id?        te-types:te-node-id
    |        +-- te-topology-identifier
    |           +-- provider-id?   te-global-id
    |           +-- client-id?     te-global-id
    |           +-- topology-id?   te-topology-id
]]></artwork></figure>

<t>It is worth noting that since path computation RPC is stateless, the
   dynamic hierarchical links configured for the server-layer tunnel
   attributes cannot be used for path computation of any client-layer
   path unless explicitly referenced in the dependency-tunnel-attributes
   list within the same RPC request.</t>

</section>
</section>
<section anchor="yang-data-model-for-te-path-computation"><name>YANG data model for TE path computation</name>

<section anchor="pc-tree"><name>Tree diagram</name>

<t><xref target="fig-pc-tree"/> below shows the tree diagram of the YANG data model defined
   in module ietf-te-path-computation.yang, defined in <xref target="pc-yang"/>.</t>

<figure title="TE path computation tree diagram" anchor="fig-pc-tree"><artwork type="ascii-art" name="ietf-te-path-computation.tree"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

module: ietf-te-path-computation

  augment /te:tunnels-path-compute/te:input/te:path-compute-info:
    +-- path-request* [request-id]
    |  +-- request-id                            uint32
    |  +-- compute-priority?                     uint8
    |  |       {compute-priority}?
    |  +-- (tunnel-attributes)?
    |  |  +--:(reference)
    |  |  |  +-- tunnel-reference
    |  |  |     +-- (tunnel-exist)
    |  |  |     |  +--:(tunnel-ref)
    |  |  |     |  |  +-- tunnel-ref                te:tunnel-ref
    |  |  |     |  +--:(tunnel-attributes-ref)
    |  |  |     |     +-- tunnel-attributes-ref     leafref
    |  |  |     +-- path-name?                      string
    |  |  |     +-- (path-role)
    |  |  |        +--:(primary-path)
    |  |  |        |  +-- primary-path!
    |  |  |        |     +-- preference?          uint8
    |  |  |        |     +-- co-routed?           boolean
    |  |  |        |     +-- k-requested-paths?   uint8
    |  |  |        +--:(secondary-path)
    |  |  |        |  +-- secondary-path
    |  |  |        |     +-- secondary-reverse-path?   leafref
    |  |  |        |     +-- preference?               uint8
    |  |  |        |     +-- protection-type?          identityref
    |  |  |        |     +-- restoration-type?         identityref
    |  |  |        |     +-- restoration-scheme?       identityref
    |  |  |        |     +-- primary-path-ref* []
    |  |  |        |        +-- (primary-path-exist)
    |  |  |        |           +--:(path-ref)
    |  |  |        |           |  +-- primary-path-ref    leafref
    |  |  |        |           +--:(path-request-ref)
    |  |  |        |              +-- path-request-ref    leafref
    |  |  |        +--:(primary-reverse-path)
    |  |  |        |  +-- primary-reverse-path
    |  |  |        |     +-- (primary-path-exist)
    |  |  |        |        +--:(path-ref)
    |  |  |        |        |  +-- primary-path-ref    leafref
    |  |  |        |        +--:(path-request-ref)
    |  |  |        |           +-- path-request-ref    leafref
    |  |  |        +--:(secondary-reverse-path)
    |  |  |           +-- secondary-reverse-path
    |  |  |              +-- preference?             uint8
    |  |  |              +-- protection-type?        identityref
    |  |  |              +-- restoration-type?       identityref
    |  |  |              +-- restoration-scheme?     identityref
    |  |  |              +-- primary-reverse-path* []
    |  |  |                 +-- (primary-reverse-path-exist)
    |  |  |                    +--:(path-ref)
    |  |  |                    |  +-- primary-path-ref    leafref
    |  |  |                    +--:(path-request-ref)
    |  |  |                       +-- path-request-ref    leafref
    |  |  +--:(value)
    |  |     +-- tunnel-name?                    string
    |  |     +-- path-name?                      string
    |  |     +-- (path-role)?
    |  |     |  +--:(primary-path)
    |  |     |  +--:(secondary-path)
    |  |     |  |  +-- secondary-path!
    |  |     |  |     +-- primary-path-name?   string
    |  |     |  +--:(primary-reverse-path)
    |  |     |  |  +-- primary-reverse-path!
    |  |     |  |     +-- primary-path-name?   string
    |  |     |  +--:(secondary-reverse-path)
    |  |     |     +-- secondary-reverse-path!
    |  |     |        +-- primary-path-name?           string
    |  |     |        +-- primary-reverse-path-name?   string
    |  |     +-- k-requested-paths?              uint8
    |  |     +-- encoding?                       identityref
    |  |     +-- switching-type?                 identityref
    |  |     +-- source
    |  |     |  +-- node-id?        nw:node-id
    |  |     |  +-- te-node-id?     te-types:te-node-id
    |  |     |  +-- tunnel-tp-id?   binary
    |  |     +-- destination
    |  |     |  +-- node-id?        nw:node-id
    |  |     |  +-- te-node-id?     te-types:te-node-id
    |  |     |  +-- tunnel-tp-id?   binary
    |  |     +-- bidirectional?                  boolean
    |  |     +-- te-topology-identifier
    |  |        +-- provider-id?   te-global-id
    |  |        +-- client-id?     te-global-id
    |  |        +-- topology-id?   te-topology-id
    |  +-- association-objects
    |  |  +-- association-object* [association-key]
    |  |  |  +-- association-key    string
    |  |  |  +-- type?              identityref
    |  |  |  +-- id?                uint16
    |  |  |  +-- source
    |  |  |     +-- id?     te-gen-node-id
    |  |  |     +-- type?   enumeration
    |  |  +-- association-object-extended* [association-key]
    |  |     +-- association-key    string
    |  |     +-- type?              identityref
    |  |     +-- id?                uint16
    |  |     +-- source
    |  |     |  +-- id?     te-gen-node-id
    |  |     |  +-- type?   enumeration
    |  |     +-- global-source?     uint32
    |  |     +-- extended-id?       yang:hex-string
    |  +-- optimizations
    |  |  +-- (algorithm)?
    |  |     +--:(metric) {path-optimization-metric}?
    |  |     |  +-- optimization-metric* [metric-type]
    |  |     |  |  +-- metric-type                       identityref
    |  |     |  |  +-- weight?                           uint8
    |  |     |  |  +-- explicit-route-exclude-objects
    |  |     |  |  |  +-- route-object-exclude-object* [index]
    |  |     |  |  |     +-- index                        uint32
    |  |     |  |  |     +-- (type)?
    |  |     |  |  |        +--:(numbered-node-hop)
    |  |     |  |  |        |  +-- numbered-node-hop
    |  |     |  |  |        |     +-- node-id-uri?   nw:node-id
    |  |     |  |  |        |     +-- node-id?       te-node-id
    |  |     |  |  |        |     +-- hop-type?      te-hop-type
    |  |     |  |  |        +--:(numbered-link-hop)
    |  |     |  |  |        |  +-- numbered-link-hop
    |  |     |  |  |        |     +-- link-tp-id    te-tp-id
    |  |     |  |  |        |     +-- hop-type?     te-hop-type
    |  |     |  |  |        |     +-- direction?    te-link-direction
    |  |     |  |  |        +--:(unnumbered-link-hop)
    |  |     |  |  |        |  +-- unnumbered-link-hop
    |  |     |  |  |        |     +-- link-tp-id-uri?   nt:tp-id
    |  |     |  |  |        |     +-- link-tp-id?       te-tp-id
    |  |     |  |  |        |     +-- node-id-uri?      nw:node-id
    |  |     |  |  |        |     +-- node-id?          te-node-id
    |  |     |  |  |        |     +-- hop-type?         te-hop-type
    |  |     |  |  |        |     +-- direction?
    |  |     |  |  |        |             te-link-direction
    |  |     |  |  |        +--:(as-number)
    |  |     |  |  |        |  +-- as-number-hop
    |  |     |  |  |        |     +-- as-number    inet:as-number
    |  |     |  |  |        |     +-- hop-type?    te-hop-type
    |  |     |  |  |        +--:(label)
    |  |     |  |  |        |  +-- label-hop
    |  |     |  |  |        |     +-- te-label
    |  |     |  |  |        |        +-- (technology)?
    |  |     |  |  |        |        |  +--:(generic)
    |  |     |  |  |        |        |     +-- generic?
    |  |     |  |  |        |        |             rt-types:generali\
zed-label
    |  |     |  |  |        |        +-- direction?
    |  |     |  |  |        |                te-label-direction
    |  |     |  |  |        +--:(srlg)
    |  |     |  |  |           +-- srlg
    |  |     |  |  |              +-- srlg?   uint32
    |  |     |  |  +-- explicit-route-include-objects
    |  |     |  |     +-- route-object-include-object* [index]
    |  |     |  |        +-- index                        uint32
    |  |     |  |        +-- (type)?
    |  |     |  |           +--:(numbered-node-hop)
    |  |     |  |           |  +-- numbered-node-hop
    |  |     |  |           |     +-- node-id-uri?   nw:node-id
    |  |     |  |           |     +-- node-id?       te-node-id
    |  |     |  |           |     +-- hop-type?      te-hop-type
    |  |     |  |           +--:(numbered-link-hop)
    |  |     |  |           |  +-- numbered-link-hop
    |  |     |  |           |     +-- link-tp-id    te-tp-id
    |  |     |  |           |     +-- hop-type?     te-hop-type
    |  |     |  |           |     +-- direction?    te-link-direction
    |  |     |  |           +--:(unnumbered-link-hop)
    |  |     |  |           |  +-- unnumbered-link-hop
    |  |     |  |           |     +-- link-tp-id-uri?   nt:tp-id
    |  |     |  |           |     +-- link-tp-id?       te-tp-id
    |  |     |  |           |     +-- node-id-uri?      nw:node-id
    |  |     |  |           |     +-- node-id?          te-node-id
    |  |     |  |           |     +-- hop-type?         te-hop-type
    |  |     |  |           |     +-- direction?
    |  |     |  |           |             te-link-direction
    |  |     |  |           +--:(as-number)
    |  |     |  |           |  +-- as-number-hop
    |  |     |  |           |     +-- as-number    inet:as-number
    |  |     |  |           |     +-- hop-type?    te-hop-type
    |  |     |  |           +--:(label)
    |  |     |  |              +-- label-hop
    |  |     |  |                 +-- te-label
    |  |     |  |                    +-- (technology)?
    |  |     |  |                    |  +--:(generic)
    |  |     |  |                    |     +-- generic?
    |  |     |  |                    |             rt-types:generali\
zed-label
    |  |     |  |                    +-- direction?
    |  |     |  |                            te-label-direction
    |  |     |  +-- tiebreakers
    |  |     |     +-- tiebreaker* [tiebreaker-type]
    |  |     |        +-- tiebreaker-type    identityref
    |  |     +--:(objective-function)
    |  |              {path-optimization-objective-function}?
    |  |        +-- objective-function
    |  |           +-- objective-function-type?   identityref
    |  +-- named-path-constraint?                leafref
    |  |       {te-types:named-path-constraints}?
    |  +-- te-bandwidth
    |  |  +-- (technology)?
    |  |     +--:(generic)
    |  |        +-- generic?   te-bandwidth
    |  +-- link-protection?                      identityref
    |  +-- setup-priority?                       uint8
    |  +-- hold-priority?                        uint8
    |  +-- signaling-type?                       identityref
    |  +-- path-metric-bounds
    |  |  +-- path-metric-bound* [metric-type]
    |  |     +-- metric-type    identityref
    |  |     +-- upper-bound?   uint64
    |  +-- path-affinities-values
    |  |  +-- path-affinities-value* [usage]
    |  |     +-- usage    identityref
    |  |     +-- value?   admin-groups
    |  +-- path-affinity-names
    |  |  +-- path-affinity-name* [usage]
    |  |     +-- usage            identityref
    |  |     +-- affinity-name* [name]
    |  |        +-- name    string
    |  +-- path-srlgs-lists
    |  |  +-- path-srlgs-list* [usage]
    |  |     +-- usage     identityref
    |  |     +-- values*   srlg
    |  +-- path-srlgs-names
    |  |  +-- path-srlgs-name* [usage]
    |  |     +-- usage    identityref
    |  |     +-- names*   string
    |  +-- disjointness?                         te-path-disjointness
    |  +-- explicit-route-objects-always
    |  |  +-- route-object-exclude-always* [index]
    |  |  |  +-- index                        uint32
    |  |  |  +-- (type)?
    |  |  |     +--:(numbered-node-hop)
    |  |  |     |  +-- numbered-node-hop
    |  |  |     |     +-- node-id-uri?   nw:node-id
    |  |  |     |     +-- node-id?       te-node-id
    |  |  |     |     +-- hop-type?      te-hop-type
    |  |  |     +--:(numbered-link-hop)
    |  |  |     |  +-- numbered-link-hop
    |  |  |     |     +-- link-tp-id    te-tp-id
    |  |  |     |     +-- hop-type?     te-hop-type
    |  |  |     |     +-- direction?    te-link-direction
    |  |  |     +--:(unnumbered-link-hop)
    |  |  |     |  +-- unnumbered-link-hop
    |  |  |     |     +-- link-tp-id-uri?   nt:tp-id
    |  |  |     |     +-- link-tp-id?       te-tp-id
    |  |  |     |     +-- node-id-uri?      nw:node-id
    |  |  |     |     +-- node-id?          te-node-id
    |  |  |     |     +-- hop-type?         te-hop-type
    |  |  |     |     +-- direction?        te-link-direction
    |  |  |     +--:(as-number)
    |  |  |     |  +-- as-number-hop
    |  |  |     |     +-- as-number    inet:as-number
    |  |  |     |     +-- hop-type?    te-hop-type
    |  |  |     +--:(label)
    |  |  |        +-- label-hop
    |  |  |           +-- te-label
    |  |  |              +-- (technology)?
    |  |  |              |  +--:(generic)
    |  |  |              |     +-- generic?
    |  |  |              |             rt-types:generalized-label
    |  |  |              +-- direction?       te-label-direction
    |  |  +-- route-object-include-exclude* [index]
    |  |     +-- explicit-route-usage?        identityref
    |  |     +-- index                        uint32
    |  |     +-- (type)?
    |  |        +--:(numbered-node-hop)
    |  |        |  +-- numbered-node-hop
    |  |        |     +-- node-id-uri?   nw:node-id
    |  |        |     +-- node-id?       te-node-id
    |  |        |     +-- hop-type?      te-hop-type
    |  |        +--:(numbered-link-hop)
    |  |        |  +-- numbered-link-hop
    |  |        |     +-- link-tp-id    te-tp-id
    |  |        |     +-- hop-type?     te-hop-type
    |  |        |     +-- direction?    te-link-direction
    |  |        +--:(unnumbered-link-hop)
    |  |        |  +-- unnumbered-link-hop
    |  |        |     +-- link-tp-id-uri?   nt:tp-id
    |  |        |     +-- link-tp-id?       te-tp-id
    |  |        |     +-- node-id-uri?      nw:node-id
    |  |        |     +-- node-id?          te-node-id
    |  |        |     +-- hop-type?         te-hop-type
    |  |        |     +-- direction?        te-link-direction
    |  |        +--:(as-number)
    |  |        |  +-- as-number-hop
    |  |        |     +-- as-number    inet:as-number
    |  |        |     +-- hop-type?    te-hop-type
    |  |        +--:(label)
    |  |        |  +-- label-hop
    |  |        |     +-- te-label
    |  |        |        +-- (technology)?
    |  |        |        |  +--:(generic)
    |  |        |        |     +-- generic?
    |  |        |        |             rt-types:generalized-label
    |  |        |        +-- direction?       te-label-direction
    |  |        +--:(srlg)
    |  |           +-- srlg
    |  |              +-- srlg?   uint32
    |  +-- path-in-segment!
    |  |  +-- label-restrictions
    |  |     +-- label-restriction* [index]
    |  |        +-- restriction?    enumeration
    |  |        +-- index           uint32
    |  |        +-- label-start
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-end
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-step
    |  |        |  +-- (technology)?
    |  |        |     +--:(generic)
    |  |        |        +-- generic?   int32
    |  |        +-- range-bitmap?   yang:hex-string
    |  +-- path-out-segment!
    |  |  +-- label-restrictions
    |  |     +-- label-restriction* [index]
    |  |        +-- restriction?    enumeration
    |  |        +-- index           uint32
    |  |        +-- label-start
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-end
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-step
    |  |        |  +-- (technology)?
    |  |        |     +--:(generic)
    |  |        |        +-- generic?   int32
    |  |        +-- range-bitmap?   yang:hex-string
    |  +-- requested-metrics* [metric-type]
    |  |  +-- metric-type    identityref
    |  +-- return-srlgs?                         boolean
    |  +-- return-affinities?                    boolean
    |  +-- requested-state!
    |     +-- timer?            uint16
    |     +-- transaction-id?   string
    +-- tunnel-attributes* [tunnel-name]
    |  +-- tunnel-name               string
    |  +-- encoding?                 identityref
    |  +-- switching-type?           identityref
    |  +-- source
    |  |  +-- node-id?        nw:node-id
    |  |  +-- te-node-id?     te-types:te-node-id
    |  |  +-- tunnel-tp-id?   binary
    |  +-- destination
    |  |  +-- node-id?        nw:node-id
    |  |  +-- te-node-id?     te-types:te-node-id
    |  |  +-- tunnel-tp-id?   binary
    |  +-- bidirectional?            boolean
    |  +-- association-objects
    |  |  +-- association-object* [association-key]
    |  |  |  +-- association-key    string
    |  |  |  +-- type?              identityref
    |  |  |  +-- id?                uint16
    |  |  |  +-- source
    |  |  |     +-- id?     te-gen-node-id
    |  |  |     +-- type?   enumeration
    |  |  +-- association-object-extended* [association-key]
    |  |     +-- association-key    string
    |  |     +-- type?              identityref
    |  |     +-- id?                uint16
    |  |     +-- source
    |  |     |  +-- id?     te-gen-node-id
    |  |     |  +-- type?   enumeration
    |  |     +-- global-source?     uint32
    |  |     +-- extended-id?       yang:hex-string
    |  +-- protection-type?          identityref
    |  +-- restoration-type?         identityref
    |  +-- restoration-scheme?       identityref
    |  +-- network-id?               nw:network-id
    |  +-- te-topology-identifier
    |  |  +-- provider-id?   te-global-id
    |  |  +-- client-id?     te-global-id
    |  |  +-- topology-id?   te-topology-id
    |  +-- te-bandwidth
    |  |  +-- (technology)?
    |  |     +--:(generic)
    |  |        +-- generic?   te-bandwidth
    |  +-- link-protection?          identityref
    |  +-- setup-priority?           uint8
    |  +-- hold-priority?            uint8
    |  +-- signaling-type?           identityref
    |  +-- hierarchy
    |     +-- dependency-tunnels
    |     |  +-- dependency-tunnel* [name]
    |     |  |  +-- name              -> /te:te/tunnels/tunnel/name
    |     |  |  +-- encoding?         identityref
    |     |  |  +-- switching-type?   identityref
    |     |  +-- dependency-tunnel-attributes* [name]
    |     |     +-- name              leafref
    |     |     +-- encoding?         identityref
    |     |     +-- switching-type?   identityref
    |     +-- hierarchical-link
    |        +-- enable?                   boolean
    |        +-- local-node-id?            nw:node-id
    |        +-- local-te-node-id?         te-types:te-node-id
    |        +-- local-link-tp-id?         nt:tp-id
    |        +-- local-te-link-tp-id?      te-types:te-tp-id
    |        +-- remote-link-tp-id?        nt:tp-id
    |        +-- remote-te-node-id?        te-types:te-node-id
    |        +-- network-id?               nw:network-id
    |        +-- te-topology-identifier
    |           +-- provider-id?   te-global-id
    |           +-- client-id?     te-global-id
    |           +-- topology-id?   te-topology-id
    +-- synchronization* [] {svec}?
       +-- svec
       |  +-- relaxable?      boolean
       |  +-- disjointness?   te-path-disjointness
       |  +-- request-id*     uint32
       +-- svec-constraints
       |  +-- path-metric-bound* [metric-type]
       |     +-- metric-type    identityref
       |     +-- upper-bound?   uint64
       +-- path-srlgs-lists
       |  +-- path-srlgs-list* [usage]
       |     +-- usage     identityref
       |     +-- values*   srlg
       +-- path-srlgs-names
       |  +-- path-srlgs-name* [usage]
       |     +-- usage    identityref
       |     +-- names*   string
       +-- exclude-objects
       |  +-- excludes* []
       |     +-- (type)?
       |        +--:(numbered-node-hop)
       |        |  +-- numbered-node-hop
       |        |     +-- node-id-uri?   nw:node-id
       |        |     +-- node-id?       te-node-id
       |        |     +-- hop-type?      te-hop-type
       |        +--:(numbered-link-hop)
       |        |  +-- numbered-link-hop
       |        |     +-- link-tp-id    te-tp-id
       |        |     +-- hop-type?     te-hop-type
       |        |     +-- direction?    te-link-direction
       |        +--:(unnumbered-link-hop)
       |        |  +-- unnumbered-link-hop
       |        |     +-- link-tp-id-uri?   nt:tp-id
       |        |     +-- link-tp-id?       te-tp-id
       |        |     +-- node-id-uri?      nw:node-id
       |        |     +-- node-id?          te-node-id
       |        |     +-- hop-type?         te-hop-type
       |        |     +-- direction?        te-link-direction
       |        +--:(as-number)
       |        |  +-- as-number-hop
       |        |     +-- as-number    inet:as-number
       |        |     +-- hop-type?    te-hop-type
       |        +--:(label)
       |           +-- label-hop
       |              +-- te-label
       |                 +-- (technology)?
       |                 |  +--:(generic)
       |                 |     +-- generic?
       |                 |             rt-types:generalized-label
       |                 +-- direction?       te-label-direction
       +-- optimizations
          +-- (algorithm)?
             +--:(metric) {te-types:path-optimization-metric}?
             |  +-- optimization-metric* [metric-type]
             |     +-- metric-type    identityref
             |     +-- weight?        uint8
             +--:(objective-function)
                      {te-types:path-optimization-objective-function\
}?
                +-- objective-function
                   +-- objective-function-type?   identityref
  augment /te:tunnels-path-compute/te:output/te:path-compute-result:
    +--ro response* [response-id]
       +--ro response-id                         uint32
       +--ro computed-paths-properties
       |  +--ro computed-path-properties* [k-index]
       |     +--ro k-index            uint8
       |     +--ro path-properties
       |        +--ro path-metric* [metric-type]
       |        |  +--ro metric-type           identityref
       |        |  +--ro accumulative-value?   uint64
       |        +--ro path-affinities-values
       |        |  +--ro path-affinities-value* [usage]
       |        |     +--ro usage    identityref
       |        |     +--ro value?   admin-groups
       |        +--ro path-affinity-names
       |        |  +--ro path-affinity-name* [usage]
       |        |     +--ro usage            identityref
       |        |     +--ro affinity-name* [name]
       |        |        +--ro name    string
       |        +--ro path-srlgs-lists
       |        |  +--ro path-srlgs-list* [usage]
       |        |     +--ro usage     identityref
       |        |     +--ro values*   srlg
       |        +--ro path-srlgs-names
       |        |  +--ro path-srlgs-name* [usage]
       |        |     +--ro usage    identityref
       |        |     +--ro names*   string
       |        +--ro path-route-objects
       |        |  +--ro path-route-object* [index]
       |        |     +--ro index                        uint32
       |        |     +--ro (type)?
       |        |        +--:(numbered-node-hop)
       |        |        |  +--ro numbered-node-hop
       |        |        |     +--ro node-id-uri?   nw:node-id
       |        |        |     +--ro node-id?       te-node-id
       |        |        |     +--ro hop-type?      te-hop-type
       |        |        +--:(numbered-link-hop)
       |        |        |  +--ro numbered-link-hop
       |        |        |     +--ro link-tp-id    te-tp-id
       |        |        |     +--ro hop-type?     te-hop-type
       |        |        |     +--ro direction?    te-link-direction
       |        |        +--:(unnumbered-link-hop)
       |        |        |  +--ro unnumbered-link-hop
       |        |        |     +--ro link-tp-id-uri?   nt:tp-id
       |        |        |     +--ro link-tp-id?       te-tp-id
       |        |        |     +--ro node-id-uri?      nw:node-id
       |        |        |     +--ro node-id?          te-node-id
       |        |        |     +--ro hop-type?         te-hop-type
       |        |        |     +--ro direction?
       |        |        |             te-link-direction
       |        |        +--:(as-number)
       |        |        |  +--ro as-number-hop
       |        |        |     +--ro as-number    inet:as-number
       |        |        |     +--ro hop-type?    te-hop-type
       |        |        +--:(label)
       |        |           +--ro label-hop
       |        |              +--ro te-label
       |        |                 +--ro (technology)?
       |        |                 |  +--:(generic)
       |        |                 |     +--ro generic?
       |        |                 |             rt-types:generalized\
-label
       |        |                 +--ro direction?
       |        |                         te-label-direction
       |        +--ro te-bandwidth
       |        |  +--ro (technology)?
       |        |     +--:(generic)
       |        |        +--ro generic?   te-bandwidth
       |        +--ro disjointness-type?
       |                te-types:te-path-disjointness
       +--ro computed-path-error-infos
       |  +--ro computed-path-error-info* []
       |     +--ro error-description?   string
       |     +--ro error-timestamp?     yang:date-and-time
       |     +--ro error-reason?        identityref
       +--ro tunnel-ref?                         te:tunnel-ref
       +--ro (path-role)?
          +--:(primary)
          |  +--ro primary-path-ref?             leafref
          +--:(primary-reverse)
          |  +--ro primary-reverse-path-ref?     leafref
          +--:(secondary)
          |  +--ro secondary-path-ref?           leafref
          +--:(secondary-reverse)
             +--ro secondary-reverse-path-ref?   leafref
  augment /te:tunnels-actions/te:input/te:tunnel-info/te:filter-type:
    +--:(path-compute-transactions)
       +-- path-compute-transaction-id*   string
  augment /te:tunnels-actions/te:output:
    +--ro path-computed-delete-result
       +--ro path-compute-transaction-id*   string
]]></artwork></figure>

</section>
<section anchor="pc-yang"><name>YANG module</name>

<figure title="TE path computation YANG module" anchor="fig-pc-yang"><sourcecode type="yang" markers="true" name="ietf-te-path-computation@2023-06-27.yang"><![CDATA[
module ietf-te-path-computation {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-te-path-computation";
  prefix te-pc;

  import ietf-te {
    prefix te;
    reference
      "RFCYYYY: A YANG Data Model for Traffic Engineering Tunnels
       and Interfaces";
  }

  /* Note: The RFC Editor will replace YYYY with the number assigned
     to the RFC once draft-ietf-teas-yang-te becomes an RFC.*/

  import ietf-te-types {
    prefix te-types;
    reference
      "RFCZZZZ: Updated Common YANG Data Types for Traffic 
      Engineering";
  }

  /* Note: The RFC Editor will replace ZZZZ with the number assigned
     to the RFC once draft-ietf-teas-rfc8776-update becomes an RFC.*/

  organization
    "Traffic Engineering Architecture and Signaling (TEAS)
     Working Group";
  contact
    "WG Web: <https://datatracker.ietf.org/wg/teas/>
     WG List:  <mailto:teas@ietf.org>

     Editor:   Italo Busi
               <mailto:italo.busi@huawei.com>

     Editor:   Sergio Belotti
               <mailto:sergio.belotti@nokia.com>

     Editor:   Victor Lopez
               <mailto:victor.lopez@nokia.com>

     Editor:   Oscar Gonzalez de Dios
               <mailto:oscar.gonzalezdedios@telefonica.com>

     Editor:   Anurag Sharma
               <mailto:ansha@google.com>

     Editor:   Yan Shi
               <mailto:shiyan49@chinaunicom.cn>

     Editor:   Ricard Vilalta
               <mailto:ricard.vilalta@cttc.es>

     Editor:   Karthik Sethuraman
               <mailto:karthik.sethuraman@necam.com>

     Editor:   Michael Scharf
               <mailto:michael.scharf@gmail.com>

     Editor:   Daniele Ceccarelli
               <mailto:daniele.ceccarelli@ericsson.com>
     
    ";
  description
    "This module defines a YANG data model for requesting Traffic
     Engineering (TE) path computation. The YANG data model defined
     in this document augments the RPCs defined in the generic TE
     module (ietf-te).

     The model fully conforms to the
     Network Management Datastore Architecture (NMDA).

     Copyright (c) 2023 IETF Trust and the persons
     identified as authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with
     or without modification, is permitted pursuant to, and
     subject to the license terms contained in, the Revised
     BSD License set forth in Section 4.c of the IETF Trust's
     Legal Provisions Relating to IETF Documents
     (https://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC XXXX; see
     the RFC itself for full legal notices.

     The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL', 'SHALL
     NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'NOT RECOMMENDED',
     'MAY', and 'OPTIONAL' in this document are to be interpreted as
     described in BCP 14 (RFC 2119) (RFC 8174) when, and only when,
     they appear in all capitals, as shown here.";

  // RFC Ed.: replace XXXX with actual RFC number and remove
  // this note
  // replace the revision date with the module publication date
  // the format is (year-month-day)

  revision 2023-06-27 {
    description
      "Initial revision";
    reference
      "RFC XXXX: A YANG Data Model for requesting path computation";
  }

  // RFC Ed.: replace XXXX with actual RFC number and remove
  // this note

  /*
   * Features
   */
  
  feature svec {
    description
      "This feature indicates that the server supports synchronized 
      path computation requests.";
    reference
      "Section 7.13 of RFC5440: Path Computation Element (PCE) 
      Communication Protocol (PCEP).";
  }

  feature compute-priority {
    description
      "This feature indicates that the server supports path 
      computation request's priority";
    reference
      "Section 7.4.1 of RFC5440: Path Computation Element (PCE) 
      Communication Protocol (PCEP).";
  }

  /*
   * Identities
   */

  identity tunnel-action-path-compute-delete {
    base te-types:tunnel-action-type;
    description
      "Action type to delete the transient states
      of computed paths, as described in section 3.3.1 of
      RFC XXXX.";
    reference
      "RFC XXXX: A YANG Data Model for requesting path computation";
  }

  /*
   * Groupings
   */

  grouping protection-restoration-properties {
    description
      "This grouping defines the restoration and protection types
       for a path in the path computation request.";
    leaf protection-type {
      type identityref {
        base te-types:lsp-protection-type;
      }
      default "te-types:lsp-protection-unprotected";
      description
        "LSP protection type.";
    }
    leaf restoration-type {
      type identityref {
        base te-types:lsp-restoration-type;
      }
      default "te-types:lsp-restoration-restore-any";
      description
        "LSP restoration type.";
    }
    leaf restoration-scheme {
      type identityref {
        base te-types:restoration-scheme-type;
      }
      default "te-types:restoration-scheme-preconfigured";
      description
        "LSP restoration scheme.";
    }
  } // grouping protection-restoration-properties

  grouping requested-info {
    description
      "This grouping defines the information which is requested
       (e.g., metrics), in the path computation request, to be
       returned in the path computation response.";
    list requested-metrics {
      key "metric-type";
      description
        "The list of the requested metrics.

         The metrics listed here MUST be returned in the response.
         Returning other metrics in the response is OPTIONAL.";
      leaf metric-type {
        type identityref {
          base te-types:path-metric-type;
        }
        description
          "The metric requested to be returned in the response";
      }
    }
    leaf return-srlgs {
      type boolean;
      default "false";
      description
        "If true, path Shared Risk Link Groups (SRLGs) MUST be
         returned in the response.
         If false, returning path SRLGs in the response OPTIONAL.";
    }
    leaf return-affinities {
      type boolean;
      default "false";
      description
        "If true, path affinities MUST be returned in the response.
         If false, returning path affinities in the response is
         OPTIONAL.";
    }
  } // grouping requested-info

  grouping requested-state {
    description
      "Configuration for the transient state used
       to report the computed path";
    container requested-state {
      presence
        "Request temporary reporting of the computed path state";
      description
        "Configures attributes for the temporary reporting of the
         computed path state (e.g., expiration timer).";
      leaf timer {
        type uint16;
        units "minutes";
        default "10";
        description
          "The timeout after which the transient state reporting
          the computed path SHOULD be removed.";
      }
      leaf transaction-id {
        type string;
        description
          "The transaction-id associated with this path computation
          to be used for fast deletion of the transient states
          associated with multiple path computations.

          This transaction-id can be used to explicitly delete all
          the transient states of all the computed paths associated
          with the same transaction-id.

          When one path associated with a transaction-id is setup,
          the transient states of all the other computed paths
          with the same transaction-id are automatically removed.

          If not specified, the transient state is removed only
          when the timer expires (when the timer is specified)
          or not created at all (stateless path computation,
          when the timer is not specified).";
      }
    }
  } // grouping requested-state

  grouping reported-state {
    description
      "This grouping defines the information, returned in the path
       computation response, reporting the transient state related
       to the computed path";
    leaf tunnel-ref {
      type te:tunnel-ref;
      description
        "
         Reference to the tunnel that reports the transient state
         of the computed path.

         If no transient state is created, this attribute is
         omitted.
        ";
    }
    choice path-role {
      description
        "The transient state of the computed path can be reported
         as a primary, primary-reverse, secondary or
         a secondary-reverse path of a te-tunnel";
      case primary {
        leaf primary-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:primary-paths/te:primary-path/"
               + "te:name";
          }
          must '../tunnel-ref' {
            description
              "The primary-path name can only be reported
               if the tunnel name is also reported.";
          }
          description
            "
             Reference to the primary-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case primary
      case primary-reverse {
        leaf primary-reverse-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:primary-paths/te:primary-path/"
               + "te:name";
          }
          must '../tunnel-ref' {
            description
              "The primary-reverse-path name can only be reported
               if the tunnel name is also reported.";
          }
          description
            "
             Reference to the primary-reverse-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case primary-reverse
      case secondary {
        leaf secondary-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:secondary-paths/te:secondary-path/"
               + "te:name";
          }
          must '../tunnel-ref' {
            description
              "The secondary-path name can only be reported
               if the tunnel name is also reported.";
          }
          description
            "
             Reference to the secondary-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case secondary
      case secondary-reverse {
        leaf secondary-reverse-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:secondary-reverse-paths/"
               + "te:secondary-reverse-path/te:name";
          }
          must '../tunnel-ref' {
            description
              "The secondary-reverse-path name can only be reported
               if the tunnel name is also reported.";
          }
          description
            "
             Reference to the secondary-reverse-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case secondary
    } // choice path
  } // grouping reported-state

  grouping synchronization-constraints {
    description
      "Global constraints applicable to synchronized path
       computation requests.";
    container svec-constraints {
      description
        "global svec constraints";
      list path-metric-bound {
        key "metric-type";
        description
          "list of bound metrics";
        leaf metric-type {
          type identityref {
            base te-types:svec-metric-type;
          }
          description
            "SVEC metric type.";
          reference
            "RFC5541: Encoding of Objective Functions in the Path
            Computation Element Communication Protocol (PCEP).";
        }
        leaf upper-bound {
          type uint64;
          description
            "Upper bound on SVEC metric";
        }
      }
    }
    uses te-types:generic-path-srlgs;
    container exclude-objects {
      description
        "Resources to be excluded";
      list excludes {
        description
          "List of Explicit Route Objects to always exclude
           from synchronized path computation";
        uses te-types:explicit-route-hop;
      }
    }
  } // grouping synchronization-constraints

  grouping synchronization-optimization {
    description
      "Optimizations applicable to synchronized path
       computation requests.";
    container optimizations {
      description
        "The objective function container that includes attributes
         to impose when computing a synchronized set of paths";
      choice algorithm {
        description
          "Optimizations algorithm.";
        case metric {
          if-feature "te-types:path-optimization-metric";
          list optimization-metric {
            key "metric-type";
            description
              "svec path metric type";
            leaf metric-type {
              type identityref {
                base te-types:svec-metric-type;
              }
              description
                "TE path metric type usable for computing a set of
                synchronized requests";
            }
            leaf weight {
              type uint8;
              description
                "Metric normalization weight";
            }
          }
        }
        case objective-function {
          if-feature
            "te-types:path-optimization-objective-function";
          container objective-function {
            description
              "The objective function container that includes
               attributes to impose when computing a TE path";
            leaf objective-function-type {
              type identityref {
                base te-types:svec-objective-function-type;
              }
              description
                "Objective function entry";
            }
          }
        }
      }
    }
  } // grouping synchronization-optimization

  grouping synchronization-info {
    description
      "Information for synchronized path computation requests.";
    list synchronization {
      description
        "List of Synchronization VECtors.";
      container svec {
        description
          "Synchronization VECtor";
        leaf relaxable {
          type boolean;
          default "true";
          description
            "If this leaf is true, taking into account this svec is
             OPTIONAL and the path computation process is
             free to ignore svec content.
             Otherwise, it MUST take into account this svec.";
        }
        uses te-types:generic-path-disjointness;
        leaf-list request-id {
          type uint32;
          description
            "This list reports the set of path computation
             requests that are requested to be synchronized.";
        }
      }
      uses synchronization-constraints;
      uses synchronization-optimization;
    }
  } // grouping synchronization-info

  /*
   * Augment TE RPCs
   */

  augment "/te:tunnels-path-compute/te:input/te:path-compute-info" {
    description
      "Augments Path Computation RPC input";
    list path-request {
      key "request-id";
      description
        "The list of the requested paths to be computed";
      leaf request-id {
        type uint32;
        mandatory true;
        description
          "Each path computation request is uniquely identified
           within the RPC request by the request-id.";
      }
      leaf compute-priority {
        if-feature compute-priority;
        type uint8;
        default 0;
        description
          "The path computation request's priority (from 1 to 7) 
          which can be used to constraint the order by which the 
          path computation server processes the path computation 
          requests.

          A higher numerical value of the priority field reflects a 
          higher priority.

          It MUST be set to the default value (i.e., 0) when 
          unused.";
        reference
          "Section 7.4.1 of RFC5440: Path Computation Element (PCE) 
          Communication Protocol (PCEP).";
      }
      choice tunnel-attributes {
        default "value";
        description
          "Whether the tunnel attributes are specified by value
           within this path computation request or by reference.
           The reference could be either to an existing te-tunnel
           or to an entry in the tunnel-attributes list";
        case reference {
          container tunnel-reference {
            description
              "Attributes for a requested path that belongs to
              either an exiting te-tunnel or to an entry in the
              tunnel-attributes list.";
            choice tunnel-exist {
              mandatory true;
              description
                "Whether the tunnel reference is to an existing
                te-tunnel or to an entry in the tunnel-attributes
                list";
              case tunnel-ref {
                leaf tunnel-ref {
                  type te:tunnel-ref;
                  mandatory true;
                  description
                    "The referenced te-tunnel instance";
                }
              } // case tunnel-ref
              case tunnel-attributes-ref {
                leaf tunnel-attributes-ref {
                  type leafref {
                    path "/te:tunnels-path-compute/"
                      + "te:path-compute-info/"
                      + "te-pc:tunnel-attributes/te-pc:tunnel-name";
                  }
                  mandatory true;
                  description
                    "The referenced te-tunnel instance";
                }
              } // case tunnel-attributes-ref 
            } // choice tunnel-exist
            leaf path-name {
              type string;
              description
                "TE path name.";
            }
            choice path-role {
              mandatory true;
              description
                "Whether this path is a primary, or a reverse
                primary, or a secondary, or a reverse secondary
                path.";
              case primary-path {
                container primary-path {
                  presence "Indicates that the requested path
                            is a primary path";
                  description
                    "TE primary path";
                  uses te:path-forward-properties;
                  uses te:k-requested-paths;
                } // container primary-path
              } // case primary-path
              case secondary-path {
                container secondary-path {
                  description
                    "TE secondary path";
                  leaf secondary-reverse-path {
                    type leafref {
                      path "/te:tunnels-path-compute/"
                        + "te:path-compute-info/te-pc:path-request/"
                        + "te-pc:request-id";
                    }
                    description
                      "A reference to the reverse secondary path 
                      when co-routed with the secondary path.";
                  }
                  leaf preference {
                    type uint8 {
                      range "1..255";
                    }
                    default "1";
                    description
                      "Specifies a preference for this path. The 
                      lower the number higher the preference.";
                  }
                  uses protection-restoration-properties;
                  list primary-path-ref {
                    min-elements 1;
                    description
                      "The list of primary paths that reference
                      this path as a candidate secondary path";
                    choice primary-path-exist {
                      mandatory true;
                      description
                        "Whether the path reference is to an existing
                        te-tunnel path or to another path request";
                      case path-ref {
                        leaf primary-path-ref {
                          type leafref {
                            path "/te:te/te:tunnels/te:tunnel"
                              + "[te:name=current()/../../../"
                              + "tunnel-ref]/te:primary-paths/"
                              + "te:primary-path/te:name";
                          }
                          must '../../../tunnel-ref' {
                            description
                              "The primary-path can be referenced
                              if also the tunnel is referenced.";
                          }
                          mandatory true;
                          description
                            "The referenced primary path";
                        }
                      } // case path-ref
                      case path-request-ref {
                        leaf path-request-ref {
                          type leafref {
                            path "/te:tunnels-path-compute/"
                              + "te:path-compute-info/"
                              + "te-pc:path-request/"
                              + "te-pc:request-id";
                          }
                          mandatory true;
                          description
                            "The referenced primary path request";
                        }
                      } // case path-request-ref 
                    } // choice primary-path-exist
                  } // list primary-path-ref
                } // container secondary-path
              } // case secondary-path
              case primary-reverse-path {
                container primary-reverse-path {
                  description
                    "TE primary reverse path";
                  choice primary-path-exist {
                    mandatory true;
                    description
                      "Whether the path reference to the primary
                      paths for which this path is the reverse-path
                      is to an existing te-tunnel path or to
                      another path request.";
                    case path-ref {
                      leaf primary-path-ref {
                        type leafref {
                          path "/te:te/te:tunnels/te:tunnel[te:name"
                            + "=current()/../../tunnel-ref]/"
                            + "te:primary-paths/te:primary-path/"
                            + "te:name";
                        }
                        must '../../tunnel-ref' {
                          description
                            "The primary-path can be referenced
                            if also the tunnel is referenced.";
                        }
                        mandatory true;
                        description
                          "The referenced primary path";
                      }
                    } // case path-ref
                    case path-request-ref {
                      leaf path-request-ref {
                        type leafref {
                          path "/te:tunnels-path-compute/"
                            + "te:path-compute-info/"
                            + "te-pc:path-request/"
                            + "te-pc:request-id";
                        }
                        mandatory true;
                        description
                          "The referenced primary path request";
                      }
                    } // case path-request-ref 
                  } // choice primary-path-exist
                } // container primary-reverse-path
              } // case primary-reverse-path
              case secondary-reverse-path {
                container secondary-reverse-path {
                  description
                    "TE secondary reverse path";
                  // uses te:path-preference;
                  leaf preference {
                    type uint8 {
                      range "1..255";
                    }
                    default "1";
                    description
                      "Specifies a preference for this path. The 
                      lower the number higher the preference.";
                  }
                  uses protection-restoration-properties;
                  list primary-reverse-path {
                    min-elements 1;
                    description
                      "The list of primary reverse paths that
                      reference this path as a candidate
                      secondary reverse path";
                    choice primary-reverse-path-exist {
                      mandatory true;
                      description
                        "Whether the path reference is to an existing
                        te-tunnel path or to another path request";
                      case path-ref {
                        leaf primary-path-ref {
                          type leafref {
                            path "/te:te/te:tunnels/te:tunnel"
                              + "[te:name=current()/../../../"
                              + "tunnel-ref]/te:primary-paths/"
                              + "te:primary-path/te:name";
                          }
                          must '../../../tunnel-ref' {
                            description
                              "The primary-path can be referenced
                              if also the tunnel is referenced.";
                          }
                          mandatory true;
                          description
                            "The referenced primary path";
                        }
                      } // case path-ref
                      case path-request-ref {
                        leaf path-request-ref {
                          type leafref {
                            path "/te:tunnels-path-compute/"
                              + "te:path-compute-info/"
                              + "te-pc:path-request/"
                              + "te-pc:request-id";
                          }
                          mandatory true;
                          description
                            "The referenced primary reverse path
                            request";
                        }
                      } // case path-request-ref 
                    } // choice primary-reverse-path-exist
                  } // list primary-reverse-path-ref
                } // container secondary-reverse-path
              } // case secondary-reverse-path
            } // choice tunnel-path-role
          }
        } // case reference
        case value {
          leaf tunnel-name {
            type string;
            description
              "TE tunnel name.";
          }
          leaf path-name {
            type string;
            description
              "TE path name.";
          }
          choice path-role {
            when 'not (./source) and not (./destination)' {
              description
                "When the tunnel attributes are specified by value
                within this path computation, it is assumed that the
                requested path will be the only path of a tunnel.

                If the requested path is a transit segment path
                (i.e., the source and destination containers are 
                not present), it could be of any type. Otherwise it 
                could only be a primary path.";
            }
            default primary-path;
            description
              "Indicates whether the requested path is a primary
              path, a secondary path, a reverse primary path or a
              reverse secondary path.";
            case primary-path {
              description
                "The requested path is a primary path.";
            }
            container secondary-path {
              presence
                "Indicates that the requested path is a secondary
                path.";
              description
                "The name of the primary path which the requested
                secondary path belongs to.";
              leaf primary-path-name {
                type string;
                description
                  "TE primary path name.";
              }
            } // container secondary-path
            container primary-reverse-path {
              presence
                "Indicates that the requested path is a primary
                reverse path.";
              description
                "The name of the primary path which the requested
                primary reverse path belongs to.";
              leaf primary-path-name {
                type string;
                description
                  "TE primary path name.";
              }
            } // container primary-reverse-path
            container secondary-reverse-path {
              presence
                "Indicates that the requested path is a secondary
                reverse path.";
              description
                "The names of the primary path and of the primary
                reverse path which the requested secondary reverse
                path belongs to.";
              leaf primary-path-name {
                type string;
                description
                  "TE primary path name.";
              }
              leaf primary-reverse-path-name {
                type string;
                description
                  "TE primary reverse path name.";
              }
            } // container primary-reverse-path
          } // choice path-role
          uses te:k-requested-paths;
          uses te-types:encoding-and-switching-type;
          uses te:tunnel-common-attributes;
          uses te-types:te-topology-identifier;
        } // case value
      } // choice tunnel-attributes
      uses te:path-compute-info;
      uses requested-info;
      uses requested-state;
    }
    list tunnel-attributes {
      key "tunnel-name";
      description
        "Tunnel attributes common to multiple request paths";
      leaf tunnel-name {
        type string;
        description
          "TE tunnel name.";
      }
      uses te-types:encoding-and-switching-type;
      uses te:tunnel-common-attributes;
      uses te:tunnel-associations-properties;
      uses protection-restoration-properties;
      uses te-types:tunnel-constraints;
      uses te:tunnel-hierarchy-properties {
        augment "hierarchy/dependency-tunnels" {
          description
            "Augment with the list of dependency tunnel requests.";
          list dependency-tunnel-attributes {
            key "name";
            description
              "A tunnel request entry that this tunnel request can
               potentially depend on.";
            leaf name {
              type leafref {
                path "/te:tunnels-path-compute/"
                   + "te:path-compute-info/te-pc:tunnel-attributes/"
                   + "te-pc:tunnel-name";
              }
              description
                "Dependency tunnel request name.";
            }
            uses te-types:encoding-and-switching-type;
          }
        }
      }
    }
    uses synchronization-info {
      if-feature svec;
    }
  } // path-compute rpc input

  augment "/te:tunnels-path-compute/te:output/"
        + "te:path-compute-result" {
    description
      "Auguments Path Computation RPC output";
    list response {
      key "response-id";
      config false;
      description
        "response";
      leaf response-id {
        type uint32;
        description
          "The response-id has the same value of the
           corresponding request-id.";
      }
      uses te:path-computation-response;
      uses reported-state;
    }
  } // path-compute rpc output

  augment "/te:tunnels-actions/te:input/te:tunnel-info/"
        + "te:filter-type" {
    description
      "Augment Tunnels Action RPC input filter types";
    case path-compute-transactions {
      when "derived-from-or-self(../te:action-info/te:action, "
         + "'tunnel-action-path-compute-delete')";
      description
        "Path Delete RPC input";
      leaf-list path-compute-transaction-id {
        type string;
        description
          "The list of the transaction-id values of the
           transient states to be deleted";
      }
    }
  } // path-delete rpc input

  augment "/te:tunnels-actions/te:output" {
    description
      "Augment Tunnels Action RPC output with path delete result";
    container path-computed-delete-result {
      description
        "Path Delete RPC output";
      leaf-list path-compute-transaction-id {
        type string;
        description
          "The list of the transaction-id values of the
           transient states that have been successfully deleted";
      }
    }
  } // path-delete rpc output
}
]]></sourcecode></figure>

</section>
</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>This document describes use cases of requesting Path Computation
   using YANG data models, which could be used at the ABNO Control
   Interface <xref target="RFC7491"/> and/or between controllers in ACTN <xref target="RFC8453"/>. As
   such, it does not introduce any new security considerations compared
   to the ones related to YANG specification, ABNO specification and
   ACTN Framework defined in <xref target="RFC7950"/>, <xref target="RFC7491"/> and <xref target="RFC8453"/>.</t>

<t>The YANG module defined in this document is designed to be accessed via
   the NETCONF protocol <xref target="RFC6241"/> or RESTCONF protocol <xref target="RFC8040"/>. The
   lowest NETCONF layer is the secure transport layer, and the
   mandatory-to-implement secure transport is Secure Shell (SSH)
   <xref target="RFC6242"/>. The lowest RESTCONF layer is HTTPS, and the mandatory-to-
   implement secure transport is TLS <xref target="RFC8446"/>.</t>

<t>The Network Configuration Access Control Model (NACM) 
   <xref target="RFC8341"/> provides the means to
   restrict access for particular NETCONF or RESTCONF users to a
   preconfigured subset of all available NETCONF or RESTCONF protocol
   operations and content.</t>

<t>The YANG module defined in this document augments the "tunnels-path-compute" and the "tunnel-actions" RPCs defined in <xref target="I-D.ietf-teas-yang-te"/>. The security considerations provided in <xref target="I-D.ietf-teas-yang-te"/> are also applicable to the YANG module
   defined in this document.</t>

<t>The RPC defined in this document can also be used for Denial-of-service (DoS) attacks. The security considerations defines in section 10.7.2 of <xref target="RFC5440"/> also applies to the use of this RPC.</t>

<t>The definition of the input shaping/policing mechanisms and of their configuration is outside the scope of this document.</t>

<t>Some of the RPC operations defined in this YANG module may be considered
   sensitive or vulnerable in some network environments.  It is thus
   important to control access to these operations. These are the
   operations and their sensitivity/vulnerability:</t>

<t>"te-pc:response/computed-paths-properties": provides the same information provided by the "te:computed-paths-properties" defined in <xref target="I-D.ietf-teas-yang-te"/>. The security considerations provided in <xref target="I-D.ietf-teas-yang-te"/> for the TE tunnel state apply also to this subtree.</t>

<t>"te-pc:response/te-pc:tunnel-ref", "te-pc:response/te-pc:primary-path-ref", "te-pc:response/te-pc:primary-reverse-path-ref", "te-pc:response/te-pc:secondary-path-ref" and "te-pc:response/te-pc:secondary-reverse-path-ref" provides a reference where the same information provided in "te-pc:response/computed-paths-properties" is temporarly stored with the operational datastore (see <xref target="temp-state"/>). Therefore access to this information does not provide any additional security issue that the information provided with "te-pc:response/computed-paths-properties".</t>

<t>"/te:tunnels-actions": the YANG model defined in this document augments this action with a new action type that allows deleting the transient states of computed paths (see <xref target="temp-state"/>). A malicious use of this action would have no impact on the paths carrying live traffic but it would preclude the client from using the "transient states" to request the set-up of exactly that path, if still available.</t>

<t>The security considerations spelled out in the
   YANG specification <xref target="RFC7950"/> apply for this document as well.</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>This document registers the following URIs in the "ns" subregistry
   within the "IETF XML registry" <xref target="RFC3688"/>.</t>

<figure><artwork><![CDATA[
      URI: urn:ietf:params:xml:ns:yang:ietf-te-path-computation
      Registrant Contact:  The IESG.
      XML: N/A, the requested URI is an XML namespace.
]]></artwork></figure>

<t>This document registers a YANG module in the "YANG Module Names"
   registry <xref target="RFC7950"/>.</t>

<figure><artwork><![CDATA[
      name:      ietf-te-path-computation
      namespace: urn:ietf:params:xml:ns:yang:ietf-te-path-computation
      prefix:    te-pc
      reference: this document
]]></artwork></figure>

</section>


  </middle>

  <back>


    <references title='Normative References'>



<reference anchor='RFC6241' target='https://www.rfc-editor.org/info/rfc6241'>
  <front>
    <title>Network Configuration Protocol (NETCONF)</title>
    <author fullname='R. Enns' initials='R.' role='editor' surname='Enns'/>
    <author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'/>
    <author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'/>
    <author fullname='A. Bierman' initials='A.' role='editor' surname='Bierman'/>
    <date month='June' year='2011'/>
    <abstract>
      <t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices. It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages. The NETCONF protocol operations are realized as remote procedure calls (RPCs). This document obsoletes RFC 4741. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='6241'/>
  <seriesInfo name='DOI' value='10.17487/RFC6241'/>
</reference>

<reference anchor='RFC8040' target='https://www.rfc-editor.org/info/rfc8040'>
  <front>
    <title>RESTCONF Protocol</title>
    <author fullname='A. Bierman' initials='A.' surname='Bierman'/>
    <author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'/>
    <author fullname='K. Watsen' initials='K.' surname='Watsen'/>
    <date month='January' year='2017'/>
    <abstract>
      <t>This document describes an HTTP-based protocol that provides a programmatic interface for accessing data defined in YANG, using the datastore concepts defined in the Network Configuration Protocol (NETCONF).</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8040'/>
  <seriesInfo name='DOI' value='10.17487/RFC8040'/>
</reference>

<reference anchor='RFC8795' target='https://www.rfc-editor.org/info/rfc8795'>
  <front>
    <title>YANG Data Model for Traffic Engineering (TE) Topologies</title>
    <author fullname='X. Liu' initials='X.' surname='Liu'/>
    <author fullname='I. Bryskin' initials='I.' surname='Bryskin'/>
    <author fullname='V. Beeram' initials='V.' surname='Beeram'/>
    <author fullname='T. Saad' initials='T.' surname='Saad'/>
    <author fullname='H. Shah' initials='H.' surname='Shah'/>
    <author fullname='O. Gonzalez de Dios' initials='O.' surname='Gonzalez de Dios'/>
    <date month='August' year='2020'/>
    <abstract>
      <t>This document defines a YANG data model for representing, retrieving, and manipulating Traffic Engineering (TE) Topologies. The model serves as a base model that other technology-specific TE topology models can augment.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8795'/>
  <seriesInfo name='DOI' value='10.17487/RFC8795'/>
</reference>


<reference anchor='I-D.ietf-teas-yang-te' target='https://datatracker.ietf.org/doc/html/draft-ietf-teas-yang-te-36'>
   <front>
      <title>A YANG Data Model for Traffic Engineering Tunnels, Label Switched Paths and Interfaces</title>
      <author fullname='Tarek Saad' initials='T.' surname='Saad'>
         <organization>Cisco Systems Inc</organization>
      </author>
      <author fullname='Rakesh Gandhi' initials='R.' surname='Gandhi'>
         <organization>Cisco Systems Inc</organization>
      </author>
      <author fullname='Xufeng Liu' initials='X.' surname='Liu'>
         <organization>Alef Edge</organization>
      </author>
      <author fullname='Vishnu Pavan Beeram' initials='V. P.' surname='Beeram'>
         <organization>Juniper Networks</organization>
      </author>
      <author fullname='Igor Bryskin' initials='I.' surname='Bryskin'>
         <organization>Individual</organization>
      </author>
      <date day='2' month='February' year='2024'/>
      <abstract>
	 <t>   This document defines a YANG data model for the provisioning and
   management of Traffic Engineering (TE) tunnels, Label Switched Paths
   (LSPs), and interfaces.  The model covers data that is independent of
   any technology or dataplane encapsulation and is divided into two
   YANG modules that cover device-specific, and device independent data.

   This model covers data for configuration, operational state, remote
   procedural calls, and event notifications.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-teas-yang-te-36'/>
   
</reference>

<reference anchor='RFC7950' target='https://www.rfc-editor.org/info/rfc7950'>
  <front>
    <title>The YANG 1.1 Data Modeling Language</title>
    <author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'/>
    <date month='August' year='2016'/>
    <abstract>
      <t>YANG is a data modeling language used to model configuration data, state data, Remote Procedure Calls, and notifications for network management protocols. This document describes the syntax and semantics of version 1.1 of the YANG language. YANG version 1.1 is a maintenance release of the YANG language, addressing ambiguities and defects in the original specification. There are a small number of backward incompatibilities from YANG version 1. This document also specifies the YANG mappings to the Network Configuration Protocol (NETCONF).</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='7950'/>
  <seriesInfo name='DOI' value='10.17487/RFC7950'/>
</reference>

<reference anchor='RFC5440' target='https://www.rfc-editor.org/info/rfc5440'>
  <front>
    <title>Path Computation Element (PCE) Communication Protocol (PCEP)</title>
    <author fullname='JP. Vasseur' initials='JP.' role='editor' surname='Vasseur'/>
    <author fullname='JL. Le Roux' initials='JL.' role='editor' surname='Le Roux'/>
    <date month='March' year='2009'/>
    <abstract>
      <t>This document specifies the Path Computation Element (PCE) Communication Protocol (PCEP) for communications between a Path Computation Client (PCC) and a PCE, or between two PCEs. Such interactions include path computation requests and path computation replies as well as notifications of specific states related to the use of a PCE in the context of Multiprotocol Label Switching (MPLS) and Generalized MPLS (GMPLS) Traffic Engineering. PCEP is designed to be flexible and extensible so as to easily allow for the addition of further messages and objects, should further requirements be expressed in the future. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='5440'/>
  <seriesInfo name='DOI' value='10.17487/RFC5440'/>
</reference>

<reference anchor='RFC2119' target='https://www.rfc-editor.org/info/rfc2119'>
  <front>
    <title>Key words for use in RFCs to Indicate Requirement Levels</title>
    <author fullname='S. Bradner' initials='S.' surname='Bradner'/>
    <date month='March' year='1997'/>
    <abstract>
      <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
    </abstract>
  </front>
  <seriesInfo name='BCP' value='14'/>
  <seriesInfo name='RFC' value='2119'/>
  <seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>

<reference anchor='RFC8174' target='https://www.rfc-editor.org/info/rfc8174'>
  <front>
    <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
    <author fullname='B. Leiba' initials='B.' surname='Leiba'/>
    <date month='May' year='2017'/>
    <abstract>
      <t>RFC 2119 specifies common key words that may be used in protocol specifications. This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</t>
    </abstract>
  </front>
  <seriesInfo name='BCP' value='14'/>
  <seriesInfo name='RFC' value='8174'/>
  <seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>

<reference anchor='RFC7926' target='https://www.rfc-editor.org/info/rfc7926'>
  <front>
    <title>Problem Statement and Architecture for Information Exchange between Interconnected Traffic-Engineered Networks</title>
    <author fullname='A. Farrel' initials='A.' role='editor' surname='Farrel'/>
    <author fullname='J. Drake' initials='J.' surname='Drake'/>
    <author fullname='N. Bitar' initials='N.' surname='Bitar'/>
    <author fullname='G. Swallow' initials='G.' surname='Swallow'/>
    <author fullname='D. Ceccarelli' initials='D.' surname='Ceccarelli'/>
    <author fullname='X. Zhang' initials='X.' surname='Zhang'/>
    <date month='July' year='2016'/>
    <abstract>
      <t>In Traffic-Engineered (TE) systems, it is sometimes desirable to establish an end-to-end TE path with a set of constraints (such as bandwidth) across one or more networks from a source to a destination. TE information is the data relating to nodes and TE links that is used in the process of selecting a TE path. TE information is usually only available within a network. We call such a zone of visibility of TE information a domain. An example of a domain may be an IGP area or an Autonomous System.</t>
      <t>In order to determine the potential to establish a TE path through a series of connected networks, it is necessary to have available a certain amount of TE information about each network. This need not be the full set of TE information available within each network but does need to express the potential of providing TE connectivity. This subset of TE information is called TE reachability information.</t>
      <t>This document sets out the problem statement for the exchange of TE information between interconnected TE networks in support of end-to-end TE path establishment and describes the best current practice architecture to meet this problem statement. For reasons that are explained in this document, this work is limited to simple TE constraints and information that determine TE reachability.</t>
    </abstract>
  </front>
  <seriesInfo name='BCP' value='206'/>
  <seriesInfo name='RFC' value='7926'/>
  <seriesInfo name='DOI' value='10.17487/RFC7926'/>
</reference>

<reference anchor='RFC8340' target='https://www.rfc-editor.org/info/rfc8340'>
  <front>
    <title>YANG Tree Diagrams</title>
    <author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'/>
    <author fullname='L. Berger' initials='L.' role='editor' surname='Berger'/>
    <date month='March' year='2018'/>
    <abstract>
      <t>This document captures the current syntax used in YANG module tree diagrams. The purpose of this document is to provide a single location for this definition. This syntax may be updated from time to time based on the evolution of the YANG language.</t>
    </abstract>
  </front>
  <seriesInfo name='BCP' value='215'/>
  <seriesInfo name='RFC' value='8340'/>
  <seriesInfo name='DOI' value='10.17487/RFC8340'/>
</reference>


<reference anchor='I-D.ietf-teas-rfc8776-update' target='https://datatracker.ietf.org/doc/html/draft-ietf-teas-rfc8776-update-12'>
   <front>
      <title>Common YANG Data Types for Traffic Engineering</title>
      <author fullname='Italo Busi' initials='I.' surname='Busi'>
         <organization>Huawei</organization>
      </author>
      <author fullname='Aihua Guo' initials='A.' surname='Guo'>
         <organization>Futurewei Technologies</organization>
      </author>
      <author fullname='Xufeng Liu' initials='X.' surname='Liu'>
         <organization>Alef Edge</organization>
      </author>
      <author fullname='Tarek Saad' initials='T.' surname='Saad'>
         <organization>Cisco Systems Inc.</organization>
      </author>
      <author fullname='Igor Bryskin' initials='I.' surname='Bryskin'>
         <organization>Individual</organization>
      </author>
      <date day='25' month='July' year='2024'/>
      <abstract>
	 <t>   This document defines a collection of common data types, identities,
   and groupings in YANG data modeling language.  These derived common
   data types, identities and groupings are intended to be imported by
   other modules, e.g., those which model the Traffic Engineering (TE)
   configuration and state capabilities.

   This document obsoletes RFC 8776.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-teas-rfc8776-update-12'/>
   
</reference>

<reference anchor='RFC5441' target='https://www.rfc-editor.org/info/rfc5441'>
  <front>
    <title>A Backward-Recursive PCE-Based Computation (BRPC) Procedure to Compute Shortest Constrained Inter-Domain Traffic Engineering Label Switched Paths</title>
    <author fullname='JP. Vasseur' initials='JP.' role='editor' surname='Vasseur'/>
    <author fullname='R. Zhang' initials='R.' surname='Zhang'/>
    <author fullname='N. Bitar' initials='N.' surname='Bitar'/>
    <author fullname='JL. Le Roux' initials='JL.' surname='Le Roux'/>
    <date month='April' year='2009'/>
    <abstract>
      <t>The ability to compute shortest constrained Traffic Engineering Label Switched Paths (TE LSPs) in Multiprotocol Label Switching (MPLS) and Generalized MPLS (GMPLS) networks across multiple domains has been identified as a key requirement. In this context, a domain is a collection of network elements within a common sphere of address management or path computational responsibility such as an IGP area or an Autonomous Systems. This document specifies a procedure relying on the use of multiple Path Computation Elements (PCEs) to compute such inter-domain shortest constrained paths across a predetermined sequence of domains, using a backward-recursive path computation technique. This technique preserves confidentiality across domains, which is sometimes required when domains are managed by different service providers. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='5441'/>
  <seriesInfo name='DOI' value='10.17487/RFC5441'/>
</reference>

<reference anchor='RFC5541' target='https://www.rfc-editor.org/info/rfc5541'>
  <front>
    <title>Encoding of Objective Functions in the Path Computation Element Communication Protocol (PCEP)</title>
    <author fullname='JL. Le Roux' initials='JL.' surname='Le Roux'/>
    <author fullname='JP. Vasseur' initials='JP.' surname='Vasseur'/>
    <author fullname='Y. Lee' initials='Y.' surname='Lee'/>
    <date month='June' year='2009'/>
    <abstract>
      <t>The computation of one or a set of Traffic Engineering Label Switched Paths (TE LSPs) in MultiProtocol Label Switching (MPLS) and Generalized MPLS (GMPLS) networks is subject to a set of one or more specific optimization criteria, referred to as objective functions (e.g., minimum cost path, widest path, etc.).</t>
      <t>In the Path Computation Element (PCE) architecture, a Path Computation Client (PCC) may want a path to be computed for one or more TE LSPs according to a specific objective function. Thus, the PCC needs to instruct the PCE to use the correct objective function. Furthermore, it is possible that not all PCEs support the same set of objective functions; therefore, it is useful for the PCC to be able to automatically discover the set of objective functions supported by each PCE.</t>
      <t>This document defines extensions to the PCE communication Protocol (PCEP) to allow a PCE to indicate the set of objective functions it supports. Extensions are also defined so that a PCC can indicate in a path computation request the required objective function, and a PCE can report in a path computation reply the objective function that was used for path computation.</t>
      <t>This document defines objective function code types for six objective functions previously listed in the PCE requirements work, and provides the definition of four new metric types that apply to a set of synchronized requests. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='5541'/>
  <seriesInfo name='DOI' value='10.17487/RFC5541'/>
</reference>

<reference anchor='RFC6242' target='https://www.rfc-editor.org/info/rfc6242'>
  <front>
    <title>Using the NETCONF Protocol over Secure Shell (SSH)</title>
    <author fullname='M. Wasserman' initials='M.' surname='Wasserman'/>
    <date month='June' year='2011'/>
    <abstract>
      <t>This document describes a method for invoking and running the Network Configuration Protocol (NETCONF) within a Secure Shell (SSH) session as an SSH subsystem. This document obsoletes RFC 4742. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='6242'/>
  <seriesInfo name='DOI' value='10.17487/RFC6242'/>
</reference>

<reference anchor='RFC8446' target='https://www.rfc-editor.org/info/rfc8446'>
  <front>
    <title>The Transport Layer Security (TLS) Protocol Version 1.3</title>
    <author fullname='E. Rescorla' initials='E.' surname='Rescorla'/>
    <date month='August' year='2018'/>
    <abstract>
      <t>This document specifies version 1.3 of the Transport Layer Security (TLS) protocol. TLS allows client/server applications to communicate over the Internet in a way that is designed to prevent eavesdropping, tampering, and message forgery.</t>
      <t>This document updates RFCs 5705 and 6066, and obsoletes RFCs 5077, 5246, and 6961. This document also specifies new requirements for TLS 1.2 implementations.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8446'/>
  <seriesInfo name='DOI' value='10.17487/RFC8446'/>
</reference>

<reference anchor='RFC8341' target='https://www.rfc-editor.org/info/rfc8341'>
  <front>
    <title>Network Configuration Access Control Model</title>
    <author fullname='A. Bierman' initials='A.' surname='Bierman'/>
    <author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'/>
    <date month='March' year='2018'/>
    <abstract>
      <t>The standardization of network configuration interfaces for use with the Network Configuration Protocol (NETCONF) or the RESTCONF protocol requires a structured and secure operating environment that promotes human usability and multi-vendor interoperability. There is a need for standard mechanisms to restrict NETCONF or RESTCONF protocol access for particular users to a preconfigured subset of all available NETCONF or RESTCONF protocol operations and content. This document defines such an access control model.</t>
      <t>This document obsoletes RFC 6536.</t>
    </abstract>
  </front>
  <seriesInfo name='STD' value='91'/>
  <seriesInfo name='RFC' value='8341'/>
  <seriesInfo name='DOI' value='10.17487/RFC8341'/>
</reference>

<reference anchor='RFC3688' target='https://www.rfc-editor.org/info/rfc3688'>
  <front>
    <title>The IETF XML Registry</title>
    <author fullname='M. Mealling' initials='M.' surname='Mealling'/>
    <date month='January' year='2004'/>
    <abstract>
      <t>This document describes an IANA maintained registry for IETF standards which use Extensible Markup Language (XML) related items such as Namespaces, Document Type Declarations (DTDs), Schemas, and Resource Description Framework (RDF) Schemas.</t>
    </abstract>
  </front>
  <seriesInfo name='BCP' value='81'/>
  <seriesInfo name='RFC' value='3688'/>
  <seriesInfo name='DOI' value='10.17487/RFC3688'/>
</reference>




    </references>

    <references title='Informative References'>



<reference anchor='RFC7491' target='https://www.rfc-editor.org/info/rfc7491'>
  <front>
    <title>A PCE-Based Architecture for Application-Based Network Operations</title>
    <author fullname='D. King' initials='D.' surname='King'/>
    <author fullname='A. Farrel' initials='A.' surname='Farrel'/>
    <date month='March' year='2015'/>
    <abstract>
      <t>Services such as content distribution, distributed databases, or inter-data center connectivity place a set of new requirements on the operation of networks. They need on-demand and application-specific reservation of network connectivity, reliability, and resources (such as bandwidth) in a variety of network applications (such as point-to-point connectivity, network virtualization, or mobile back-haul) and in a range of network technologies from packet (IP/MPLS) down to optical. An environment that operates to meet these types of requirements is said to have Application-Based Network Operations (ABNO). ABNO brings together many existing technologies and may be seen as the use of a toolbox of existing components enhanced with a few new elements.</t>
      <t>This document describes an architecture and framework for ABNO, showing how these components fit together. It provides a cookbook of existing technologies to satisfy the architecture and meet the needs of the applications.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='7491'/>
  <seriesInfo name='DOI' value='10.17487/RFC7491'/>
</reference>

<reference anchor='RFC8453' target='https://www.rfc-editor.org/info/rfc8453'>
  <front>
    <title>Framework for Abstraction and Control of TE Networks (ACTN)</title>
    <author fullname='D. Ceccarelli' initials='D.' role='editor' surname='Ceccarelli'/>
    <author fullname='Y. Lee' initials='Y.' role='editor' surname='Lee'/>
    <date month='August' year='2018'/>
    <abstract>
      <t>Traffic Engineered (TE) networks have a variety of mechanisms to facilitate the separation of the data plane and control plane. They also have a range of management and provisioning protocols to configure and activate network resources. These mechanisms represent key technologies for enabling flexible and dynamic networking. The term "Traffic Engineered network" refers to a network that uses any connection-oriented technology under the control of a distributed or centralized control plane to support dynamic provisioning of end-to- end connectivity.</t>
      <t>Abstraction of network resources is a technique that can be applied to a single network domain or across multiple domains to create a single virtualized network that is under the control of a network operator or the customer of the operator that actually owns the network resources.</t>
      <t>This document provides a framework for Abstraction and Control of TE Networks (ACTN) to support virtual network services and connectivity services.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8453'/>
  <seriesInfo name='DOI' value='10.17487/RFC8453'/>
</reference>

<reference anchor='RFC8454' target='https://www.rfc-editor.org/info/rfc8454'>
  <front>
    <title>Information Model for Abstraction and Control of TE Networks (ACTN)</title>
    <author fullname='Y. Lee' initials='Y.' surname='Lee'/>
    <author fullname='S. Belotti' initials='S.' surname='Belotti'/>
    <author fullname='D. Dhody' initials='D.' surname='Dhody'/>
    <author fullname='D. Ceccarelli' initials='D.' surname='Ceccarelli'/>
    <author fullname='B. Yoon' initials='B.' surname='Yoon'/>
    <date month='September' year='2018'/>
    <abstract>
      <t>This document provides an information model for Abstraction and Control of TE Networks (ACTN).</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8454'/>
  <seriesInfo name='DOI' value='10.17487/RFC8454'/>
</reference>


<reference anchor='I-D.ietf-ccamp-otn-topo-yang' target='https://datatracker.ietf.org/doc/html/draft-ietf-ccamp-otn-topo-yang-19'>
   <front>
      <title>A YANG Data Model for Optical Transport Network Topology</title>
      <author fullname='Haomian Zheng' initials='H.' surname='Zheng'>
         <organization>Huawei Technologies</organization>
      </author>
      <author fullname='Italo Busi' initials='I.' surname='Busi'>
         <organization>Huawei Technologies</organization>
      </author>
      <author fullname='Xufeng Liu' initials='X.' surname='Liu'>
         <organization>IBM Corporation</organization>
      </author>
      <author fullname='Sergio Belotti' initials='S.' surname='Belotti'>
         <organization>Nokia</organization>
      </author>
      <author fullname='Oscar Gonzalez de Dios' initials='O. G.' surname='de Dios'>
         <organization>Telefonica</organization>
      </author>
      <date day='25' month='June' year='2024'/>
      <abstract>
	 <t>   This document defines a YANG data model for representing, retrieving,
   and manipulating Optical Transport Network (OTN) topologies.  It is
   independent of control plane protocols and captures topological and
   resource-related information pertaining to OTN.


	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-ccamp-otn-topo-yang-19'/>
   
</reference>

<reference anchor='RFC4655' target='https://www.rfc-editor.org/info/rfc4655'>
  <front>
    <title>A Path Computation Element (PCE)-Based Architecture</title>
    <author fullname='A. Farrel' initials='A.' surname='Farrel'/>
    <author fullname='J.-P. Vasseur' initials='J.-P.' surname='Vasseur'/>
    <author fullname='J. Ash' initials='J.' surname='Ash'/>
    <date month='August' year='2006'/>
    <abstract>
      <t>Constraint-based path computation is a fundamental building block for traffic engineering systems such as Multiprotocol Label Switching (MPLS) and Generalized Multiprotocol Label Switching (GMPLS) networks. Path computation in large, multi-domain, multi-region, or multi-layer networks is complex and may require special computational components and cooperation between the different network domains.</t>
      <t>This document specifies the architecture for a Path Computation Element (PCE)-based model to address this problem space. This document does not attempt to provide a detailed description of all the architectural components, but rather it describes a set of building blocks for the PCE architecture from which solutions may be constructed. This memo provides information for the Internet community.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='4655'/>
  <seriesInfo name='DOI' value='10.17487/RFC4655'/>
</reference>

<reference anchor='RFC8342' target='https://www.rfc-editor.org/info/rfc8342'>
  <front>
    <title>Network Management Datastore Architecture (NMDA)</title>
    <author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'/>
    <author fullname='J. Schoenwaelder' initials='J.' surname='Schoenwaelder'/>
    <author fullname='P. Shafer' initials='P.' surname='Shafer'/>
    <author fullname='K. Watsen' initials='K.' surname='Watsen'/>
    <author fullname='R. Wilton' initials='R.' surname='Wilton'/>
    <date month='March' year='2018'/>
    <abstract>
      <t>Datastores are a fundamental concept binding the data models written in the YANG data modeling language to network management protocols such as the Network Configuration Protocol (NETCONF) and RESTCONF. This document defines an architectural framework for datastores based on the experience gained with the initial simpler model, addressing requirements that were not well supported in the initial model. This document updates RFC 7950.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8342'/>
  <seriesInfo name='DOI' value='10.17487/RFC8342'/>
</reference>

<reference anchor='RFC6805' target='https://www.rfc-editor.org/info/rfc6805'>
  <front>
    <title>The Application of the Path Computation Element Architecture to the Determination of a Sequence of Domains in MPLS and GMPLS</title>
    <author fullname='D. King' initials='D.' role='editor' surname='King'/>
    <author fullname='A. Farrel' initials='A.' role='editor' surname='Farrel'/>
    <date month='November' year='2012'/>
    <abstract>
      <t>Computing optimum routes for Label Switched Paths (LSPs) across multiple domains in MPLS Traffic Engineering (MPLS-TE) and GMPLS networks presents a problem because no single point of path computation is aware of all of the links and resources in each domain. A solution may be achieved using the Path Computation Element (PCE) architecture.</t>
      <t>Where the sequence of domains is known a priori, various techniques can be employed to derive an optimum path. If the domains are simply connected, or if the preferred points of interconnection are also known, the Per-Domain Path Computation technique can be used. Where there are multiple connections between domains and there is no preference for the choice of points of interconnection, the Backward-Recursive PCE-based Computation (BRPC) procedure can be used to derive an optimal path.</t>
      <t>This document examines techniques to establish the optimum path when the sequence of domains is not known in advance. The document shows how the PCE architecture can be extended to allow the optimum sequence of domains to be selected, and the optimum end-to-end path to be derived through the use of a hierarchical relationship between domains. This document is not an Internet Standards Track specification; it is published for informational purposes.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='6805'/>
  <seriesInfo name='DOI' value='10.17487/RFC6805'/>
</reference>

<reference anchor='RFC7446' target='https://www.rfc-editor.org/info/rfc7446'>
  <front>
    <title>Routing and Wavelength Assignment Information Model for Wavelength Switched Optical Networks</title>
    <author fullname='Y. Lee' initials='Y.' role='editor' surname='Lee'/>
    <author fullname='G. Bernstein' initials='G.' role='editor' surname='Bernstein'/>
    <author fullname='D. Li' initials='D.' surname='Li'/>
    <author fullname='W. Imajuku' initials='W.' surname='Imajuku'/>
    <date month='February' year='2015'/>
    <abstract>
      <t>This document provides a model of information needed by the Routing and Wavelength Assignment (RWA) process in Wavelength Switched Optical Networks (WSONs). The purpose of the information described in this model is to facilitate constrained optical path computation in WSONs. This model takes into account compatibility constraints between WSON signal attributes and network elements but does not include constraints due to optical impairments. Aspects of this information that may be of use to other technologies utilizing a GMPLS control plane are discussed.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='7446'/>
  <seriesInfo name='DOI' value='10.17487/RFC7446'/>
</reference>




    </references>


<section anchor="examples"><name>Examples</name>

<t>This section contains examples of use of the model with RESTCONF
<xref target="RFC8040"/> and JSON encoding.</t>

<t>These examples show how path computation can be requested for the tunnels configuration provided in Appendix A of <xref target="I-D.ietf-teas-yang-te"/>.</t>

<section anchor="basic-example"><name>Basic Path Computation</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 12.1 of of <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>In this case, the TE Tunnel has only one primary path with no specific constraints.</t>

<figure><artwork type="ascii-art"><![CDATA[
POST /restconf/operations/ietf-te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="basic.json"><![CDATA[
{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 1,
          "tunnel-name": "Example_LSP_Tunnel_A_2",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "192.0.2.1",
          "destination": "192.0.2.4",
          "bidirectional": "false",
          "signaling-type": "te-types:path-setup-rsvp"
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="transient-state-example"><name>Path Computation with transient state</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 12.1 of of <xref target="I-D.ietf-teas-yang-te"/> requesting some transient state to be reported within the operational datastore, as described <xref target="temp-state"/>.</t>

<t>In this case, the TE Tunnel has only one primary path with no specific constraints.</t>

<figure><artwork type="ascii-art"><![CDATA[
POST /restconf/operations/ietf-te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="transient-state.json"><![CDATA[
{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 2,
          "tunnel-name": "Example_LSP_Tunnel_A_2",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "192.0.2.1",
          "destination": "192.0.2.4",
          "bidirectional": "false",
          "signaling-type": "te-types:path-setup-rsvp",
          "requested-state": {
            "transaction-id": "example"
          }
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="global-path-constraint-example"><name>Path Computation with Global Path Constraint</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 12.3 of of <xref target="I-D.ietf-teas-yang-te"/>. The 'named path constraint' is created in section 12.2 of <xref target="I-D.ietf-teas-yang-te"/> applies to this path computation request.</t>

<figure><artwork type="ascii-art"><![CDATA[
POST /restconf/operations/ietf-te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="global-path-constraint.json"><![CDATA[
{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 3,
          "tunnel-name": "Example_LSP_Tunnel_A_4_1",
          "path-name": "Simple_LSP_1",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "192.0.2.1",
          "destination": "192.0.2.4",
          "bidirectional": "false",
          "signaling-type": "path-setup-rsvp",
          "named-path-constraint": "max-hop-3",
          "requested-state": {}
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="tunnel-path-constraint-example"><name>Path Computation with Per-tunnel Path Constraint</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 12.4 of of <xref target="I-D.ietf-teas-yang-te"/>, using a per tunnel path constraint.</t>

<figure><artwork type="ascii-art"><![CDATA[
POST /restconf/operations/ietf-te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="tunnel-path-constraint.json"><![CDATA[
{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 4,
          "tunnel-name": "Example_LSP_Tunnel_A_4_2",
          "path-name": "path1",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "192.0.2.1",
          "destination": "192.0.2.4",
          "bidirectional": "false",
          "signaling-type": "te-types:path-setup-rsvp",
          "path-metric-bounds": {
            "path-metric-bound": [
              {
                "metric-type": "te-types:path-metric-hop",
                "upper-bound": "3"
              }
            ]
          }
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="path-computation-result"><name>Path Computation result</name>

<t>This example reports the output of the path computation RPC request described in <xref target="tunnel-path-constraint-example"/>.</t>

<figure><artwork type="ascii-art"><![CDATA[
HTTP/1.1 200 OK
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="computed-path.json"><![CDATA[
{
  "ietf-te:output": {
    "path-compute-result": {
      "ietf-te-path-computation:response": [
        {
          "response-id": 3,
          "computed-paths-properties": {
            "computed-path-properties": [
              {
                "k-index": "1",
                "path-properties": {
                  "path-route-objects": {
                    "path-route-object": [
                      {
                        "index": "1",
                        "numbered-node-hop": {
                          "node-id": "192.0.2.2"
                        }
                      },
                      {
                        "index": "2",
                        "numbered-node-hop": {
                          "node-id": "192.0.2.4"
                        }
                      }
                    ]
                  }
                }
              }
            ]
          },
          "tunnel-ref": "Example_LSP_Tunnel_A_4_1",
          "primary-path-ref": "path1"
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="path-computation-with-primary-and-secondary-paths"><name>Path Computation with Primary and Secondary Paths</name>

<t>This section contains examples of use of the model to compute primary and secondary paths described in section 12.6 of <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>These examples consider the cases where:
- primary and reverse paths are unidirectional and not co-routed (example-1);
- primary and reverse paths are bidirectional (example-3);
- primary and reverse paths are unidirectional and co-routed (example-4).</t>

<figure><artwork type="ascii-art"><![CDATA[
POST /restconf/operations/ietf-te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>

<figure><sourcecode type="json" markers="false" name="primary-secondary-paths.json"><![CDATA[
{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 1,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "primary-1 (fwd)",
            "primary-path": {}
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 2,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "primary-2 (rev)",
            "primary-reverse-path": {
              "primary-path-request-ref": 1
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.3",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 3,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-1 (fwd)",
            "secondary-path": {
              "primary-path": [
                {
                  "path-request-ref": 1
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.1"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 4,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-2 (fwd)",
            "secondary-path": {
              "primary-path": [
                {
                  "path-request-ref": 1
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.5",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 5,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-3 (rev)",
            "secondary-reverse-path": {
              "primary-reverse-path": [
                {
                  "path-request-ref": 2
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.5"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.4",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 6,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-4 (rev)",
            "secondary-reverse-path": {
              "primary-reverse-path": [
                {
                  "path-request-ref": 2
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.4"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.3",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 7,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-5 (rev)",
            "secondary-reverse-path": {
              "primary-reverse-path": [
                {
                  "path-request-ref": 2
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.3"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.1",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 8,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-3",
            "path-name": "primary-1 (bidir)",
            "primary-path": {}
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 9,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-3",
            "path-name": "secondary-1 (bidir)",
            "secondary-path": {
              "primary-path": [
                {
                  "path-request-ref": 8
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.1"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 10,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-3",
            "path-name": "secondary-2 (bidir)",
            "secondary-path": {
              "primary-path": [
                {
                  "path-request-ref": 8
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.5",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 11,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-4",
            "path-name": "primary-1 (fwd)",
            "primary-path": {
              "co-routed": [null]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 12,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-4",
            "path-name": "primary-2 (rev)",
            "primary-reverse-path": {
              "primary-path-request-ref": 11
            }
          }
        },
        {
          "request-id": 13,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-4",
            "path-name": "secondary-1 (fwd)",
            "secondary-path": {
              "primary-path": [
                {
                  "co-routed": [null],
                  "path-request-ref": 11
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.1"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 14,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-4",
            "path-name": "secondary-2 (fwd)",
            "secondary-path": {
              "primary-path": [
                {
                  "co-routed": [null],
                  "path-request-ref": 11
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.5",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 15,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-3 (rev)",
            "secondary-reverse-path": {
              "primary-reverse-path": [
                {
                  "path-request-ref": 12
                }
              ]
            }
          }
        },
        {
          "request-id": 16,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-4 (rev)",
            "secondary-reverse-path": {
              "primary-reverse-path": [
                {
                  "path-request-ref": 12
                }
              ]
            }
          }
        }
      ],
      "ietf-te-path-computation:tunnel-attributes": [
        {
          "tunnel-name": "example-1",
          "source": "192.0.2.1",
          "destination": "192.0.2.5",
          "bidirectional": "false"
        },
        {
          "tunnel-name": "example-3",
          "source": "192.0.2.1",
          "destination": "192.0.2.5",
          "bidirectional": "true"
        },
        {
          "tunnel-name": "example-4",
          "source": "192.0.2.1",
          "destination": "192.0.2.5",
          "bidirectional": "false"
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
</section>
<section numbered="false" anchor="acknowledgments"><name>Acknowledgments</name>

<t>The authors would like to thank Karthik Sethuraman, Igor Bryskin and Xian Zhang for
participating in the initial discussions that have triggered this
work and providing valuable insights.</t>

<t>The authors would like to thank the authors of the TE tunnel YANG
data model <xref target="I-D.ietf-teas-yang-te"/>, in particular Igor Bryskin, Vishnu Pavan
Beeram, Tarek Saad and Xufeng Liu, for their inputs to the
discussions and support in having consistency between the Path
Computation and TE tunnel YANG data models.</t>

<t>The authors would like to thank Adrian Farrel, Dhruv Dhody, Igor
Bryskin, Julien Meuric and Lou Berger for their valuable input to the
discussions that has clarified that the path being set up is not
necessarily the same as the path that has been previously computed
and, in particular to Dhruv Dhody, for his suggestion to describe the
need for a path verification phase to check that the actual path
being set up meets the required end-to-end metrics and constraints.</t>

<t>The authors would like to thank Aihua Guo, Lou Berger, Shaolong Gan,
Martin Bjorklund and Tom Petch for their useful comments on how to
define XPath statements in YANG RPCs.</t>

<t>The authors would like to thank Haomian Zheng, Yanlei Zheng, Tom
Petch, Aihua Guo and Martin Bjorklund for their review and valuable
comments to this document.</t>

<t>Previous versions of document were prepared using 2-Word-v2.0.template.dot.</t>

<t>This document was prepared using kramdown.</t>

</section>

    <section anchor="contributors" numbered="false" toc="include" removeInRFC="false">
        <name>Contributors</name>
    <contact initials="D." surname="Ceccarelli" fullname="Daniele Ceccarelli">
      <organization>Cisco</organization>
      <address>
        <email>daniele.ietf@gmail.com</email>
      </address>
    </contact>
    <contact initials="V." surname="Lopez" fullname="Victor Lopez">
      <organization>Nokia</organization>
      <address>
        <email>victor.lopez@nokia.com</email>
      </address>
    </contact>
    <contact initials="R." surname="Vilalta" fullname="Ricard Vilalta">
      <organization>CTTC</organization>
      <address>
        <email>ricard.vilalta@cttc.es</email>
      </address>
    </contact>
    <contact initials="M." surname="Scharf" fullname="Michael Scharf">
      <organization>Nokia</organization>
      <address>
        <email>michael.scharf@gmail.com</email>
      </address>
    </contact>
    <contact initials="D." surname="Beller" fullname="Dieter Beller">
      <organization>Nokia</organization>
      <address>
        <email>dieter.beller@nokia.com</email>
      </address>
    </contact>
    <contact initials="G." surname="Bruno" fullname="Gianmarco Bruno">
      <organization>Ericsson</organization>
      <address>
        <email>gianmarco.bruno@ericsson.com</email>
      </address>
    </contact>
    <contact initials="F." surname="Lazzeri" fullname="Francesco Lazzeri">
      <organization>Retired</organization>
      <address>
      </address>
    </contact>
    <contact initials="Y." surname="Lee" fullname="Young Lee">
      <organization>Samsung Electronics</organization>
      <address>
        <email>younglee.tx@gmail.com</email>
      </address>
    </contact>
    <contact initials="C." surname="Perocchio" fullname="Carlo Perocchio">
      <organization>Ericsson</organization>
      <address>
        <email>carlo.perocchio@ericsson.com</email>
      </address>
    </contact>
    <contact initials="O." surname="Dugeon" fullname="Olivier Dugeon">
      <organization>Orange Labs</organization>
      <address>
        <email>olivier.dugeon@orange.com</email>
      </address>
    </contact>
    <contact initials="J." surname="Meuric" fullname="Julien Meuric">
      <organization>Orange Labs</organization>
      <address>
        <email>julien.meuric@orange.com</email>
      </address>
    </contact>
    </section>

  </back>

<!-- ##markdown-source:
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
6xmadDnrtXuDw9fh3N2q4ljJqyjMefXo4T2UNOQNgV5gB+LYEou6uXJWcyMS
VYm+7mWRWABy8gdBukRJFdYWBvtqdcnkYBRfPZCegKGm0Seg8fpOQhbzzQVp
WOwrwWmw77Bez0dGC4vlT7gz9UyqS3ONz2mVXY20zGYsGrlXjdBEYMBQY6B5
ocv+CiTeRQklsv22OJDKvDrovcDvaSb4h/5hihFd8mjg4+mUBpnKfH6f/bv8
BSbaf3CbW3qKwMs4ZlCecWdUDqxx49Y47WYNLF7QqPynG7bTCk3V1GcDqsGD
+0FHQ0bCEPC0FaBsu9toU9USMHsL9FoUP/6H7pQJSewTB/8dAupdmOQveC9s
uM6lekKJU0w3JkksnX3kKR/DyGwoAqt1mtTn888/++zTKV/ivn/PpxTVrL/K
fyR5CGK7zX8Une4KtG2MDAIqXEmNaM/KCXe8hHPjsShbl8tfFBF9172tsCqs
3Tx8AsDeW+HVM9tpeeYYcObkralPwCOy/wUDnrS6zGwi53VXabZWampYx2bQ
klOd8W6s+beF8QAqDLMTHMP0lY3MpBGFoWPk5kFQqPG4vZ3ar6aithmhMcse
3xinHxNSQESG7QYI/u532ak9pW00jbdUMQedMtc6HADb46qUSLimC9sqKmYQ
5zGyVs2uvwD25skRd4/8BHWxNEn8pfZl866Y72RSygEry11hBQV7o8ScLSdc
OPHvT45MVcLd0++xbsnLo5OXcvCGJ4hv+cWepqL8DOYPIsOTYBmiG0gcmtSP
qLF8xV+fVXCkyxmnmi3K5r/Q6lmBDYItQYySgNLfd0Eb+v0+IRoJo2lYi0WB
oDE4XJBf7cOc5J9g3RWhKMQu6mf8ite2vYGNG2msUgR8JRh++tDDkDBo6uVF
M12WTQJD9zvgt8FonRhm9EM2jBT5xBukGcJNYYMCvg8b/H0UNv3I0DCES1sb
qWN+o7o/WC2YeLaDjPzceHzoIO/iEu19FfzCPx7scrYsEECYNnR6Wa33ug1l
nE7TaEszH2wj5zcwsfyzrwcAJG4Stjf/HMIbU0GMxNs07cOC2rRrQR3woL/H
4j2Aueu0KKWW0lfSica13yYmDfrX+GlHGv+6E9dL/CGL/FcmFqhFTIA0iWyT
IeLYhvgFnBftgf1m9GyHeXqZnxXLCLYCjX6OY+oaIXWwXapNJoqs6qJ9uE64
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
eY3XB0yJYZvxAAzYXq0Ba4tYlu9NVRUI25CtrMx8VmbvNlbGdoAMK4N//EnM
S0MPib7VayynDiep0MicIsdEiQf1Qp4FmsSXYMxMmsSzWtFgfHa3kOxq5Zh+
+lYOm9OqaabPZdM4TapguvTSaSIdS7c9ti2T9irfltFJV42dvXHaFWkgvN72
tvf+t0XbCZHxVWIoRMpZI1Oh0lMrzUSeAlvwRqqONG3JN9qaTRspwBnYwFFw
RfrtlPJiv05YiZa4XIPMEsWoy5q6GrvIrSBbdVRNvGrGCE3ApQjVBBW6lDb5
BDbk/Za0e70KhIpyUIZSshoNq7f4Ye3daljuLz65Pna0LRZrqTKVzlUUj4Tn
cNXt8221li7ODhuqWWN+2aUUYSg8txiom4fY9ranI5Sbwf7WVOvcvAWdmuZa
8xqfNIjpW8cp8oCSXVbKr6Qj+v76WsegwcQIw7yQLNIdCYUZkdeG2BBv6exs
/lTfneGW5M/uNnnWQYqDjL3NJXaIl9Qldh9AqENDVwDMVb1Ji4N1CqbfcpmF
6u94GyeXo81iY800WJvSgu0JrpDx4cxc6Dr+5NK/dq3OerOOKJkNbg/923SF
lmvBjmt1brwCuBc05+LSwt279IgncZy68IXns+CakW03EhN34PhbiEnP2wB7
UC4mel6Si9n2UqNAmHAKzcbfj6TtLq+kuSOBi5S0PMetzCSZOXO1UuZ2nqvc
9CqptNjIP5++V8ndaSSRhddWEdn7ngy5OwT2bdSrt1KvZVcv15566dTr8fKq
1+N7VK/dEk/JncNdqWZWw7uoW2+lbrKlS5IfgLrtLa+6PblHddtbqdtDUzdX
aHXp1G2J92Y/3qO6PV6p20NTt+IJ7BKqW8lB1TKo29Ovr24F41Iam6Vw/So6
+yA29c++uaAYMbMSUfm22/qnK0ssW66iZl9bwXa271HDeisN85Zew1aBsztq
2AIOoguBi7sdRBd0S6UgoPhF2WTyHUv/8grWAo6uGwrWQo+uK8+u5+fSAo5d
a7h0r8euRdV1C3ADzhOXV+vgytPkn7uaqwUc0DZWxHs4oF0p4sohLTZdBkVc
HeUWFO7O0e75Z2F1wrfQWZC/5la3PL+4wNhWRZKxdbeuhPe3v/RmWY6yS29N
BK6EVPu+7OJIJdzlO1BqXwD8hkxV8sO/3PWKhlQX0+FItcsa1KVcc2RHfI3D
2x+eRfHlJBgx/J24DeH52WwcJ6mAjpuEZwJB1Y/OvN/8ZDYOz7xBMBtniX/u
R23v4DROvOfJdXoWEp6y93voR95/xoivfRIn62uMfRsCaXhBV2CiEBgp4qGE
6TBLU4KDy8G/QWVOT5FkulO8vkaIntg3o1RhPwgqLoA/0/B0LMBN6gYw074X
V01ymEqEMFtfyxGyK68bwzg0UF+dCW3vn2E6jjLvg3+BpVGeBwGwqu0d+UkA
rPP9EbMpOwlgHG/DrC0vQYcJo7JKDFIgRmMPXX3JpgxwHCGjkA90YyWdUeUQ
icKNw8J7N3jxIr+kg8+bg9XRwBuxb3+U4OS+9pMkmLS9l+Mku4D/x6NrlgMY
rOTBrxniDHrvgiwJh/Tut3HmPQ8SmFdtvNo04u1M17iFWKTeEDjN9VEVjCRd
4zwOCJQnmHnZFLEqoni2vhYFiFkJD0yuc3xNX7vIrrolpPkpLDmIwTi5VrCN
62tAtT3RQKAxahwJI5mCwKYMFBmrG0k8mCgQ6Gs+vxnWthzZcDrGEhJ402kc
DM/ykfnDWeZPROVUY4TnQSCutOJKF6KWBNEIYbGxzA7f+lWIzwb0T+30huPM
937J4rY2WW1vMPZjLBDn/QL6vr72DrkRec//AKWcZBFL81F87n0IZsOxNrdZ
GpxkEyp2RfiaMFpEqkOYbL7m7/1ON8kIUIGbhAJ4H2GjG5H8xo/P2d6AMrW9
f/vRJAjlX0d494ioaudjI3ILY8ipRkFA1M9opIRzfU2NQSKZGBjHH4Tw4Myy
zGJVJwmEcIkQryBfhFkvYAp6nX/FyahzgQsJAj8hbn13FM+66qZc/rif2k+f
gT0ZxZcRtP4/VlKmVXm7AgA=

-->

</rfc>

