<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.6.5 (Ruby 2.7.2) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc comments="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-teas-yang-path-computation-18" category="std" consensus="true" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="Yang for Path Computation">A YANG Data Model for requesting path computation</title>

    <author initials="I." surname="Busi" fullname="Italo Busi" role="editor">
      <organization>Huawei Technologies</organization>
      <address>
        <email>italo.busi@huawei.com</email>
      </address>
    </author>
    <author initials="S." surname="Belotti" fullname="Sergio Belotti" role="editor">
      <organization>Nokia</organization>
      <address>
        <email>sergio.belotti@nokia.com</email>
      </address>
    </author>
    <author initials="O." surname="Gonzalez de Dios" fullname="Oscar Gonzalez de Dios">
      <organization>Telefonica</organization>
      <address>
        <email>oscar.gonzalezdedios@telefonica.com</email>
      </address>
    </author>
    <author initials="A." surname="Sharma" fullname="Anurag Sharma">
      <organization>Google</organization>
      <address>
        <email>ansha@google.com</email>
      </address>
    </author>
    <author initials="Y." surname="Shi" fullname="Yan Shi">
      <organization>China Unicom</organization>
      <address>
        <email>shiyan49@chinaunicom.cn</email>
      </address>
    </author>
    <author initials="D." surname="Ceccarelli" fullname="Daniele Ceccarelli">
      <organization>Ericsson</organization>
      <address>
        <email>daniele.ceccarelli@ericsson.com</email>
      </address>
    </author>

    <date year="2022" month="March" day="21"/>

    
    <workgroup>TEAS Working Group</workgroup>
    

    <abstract>


<t>There are scenarios, typically in a hierarchical Software-Defined
   Networking (SDN) context, where the topology information provided by
   a Traffic Engineering (TE) network provider may be insufficient for
   its client to perform multi-domain path computation. In these cases the
   client would need to request the TE network provider to compute some
   intra-domain paths.</t>

<t>This document defines a YANG data model which contains Remote Procedure Calls
   (RPCs) to request path computation. This model complements the
   solution, defined in RFC YYYY, to configure a TE tunnel path in
   "compute-only" mode.</t>

<t>[RFC EDITOR NOTE: Please replace RFC YYYY with the RFC number of
   draft-ietf-teas-yang-te once it has been published.</t>

<t>Moreover, this document describes some use cases where the path
   computation request, via YANG-based protocols (e.g., NETCONF or
   RESTCONF), can be needed.</t>



    </abstract>



  </front>

  <middle>


<section anchor="intro"><name>Introduction</name>

<t anchor="pc-model">There are scenarios, typically in a hierarchical Software-Defined
   Networking (SDN) context, where the topology information provided by
   a Traffic Engineering (TE) network provider may be insufficient for
   its client to perform multi-domain path computation. In these cases the
   client would need to request the TE network provider to compute some
   intra-domain paths that could be used together with its topology information
   to compute the multi-domain path.</t>

<t>These types of scenarios can be applied to different interfaces in
   different reference architectures:</t>

<t><list style="symbols">
  <t>Application-Based Network Operations (ABNO) control interface
<xref target="RFC7491"/>, in which an Application Service Coordinator can request the
ABNO controller to take in charge path calculation (see Figure 1
in <xref target="RFC7491"/>).</t>
  <t>Abstraction and Control of TE Networks (ACTN) <xref target="RFC8453"/>, where a
controller hierarchy is defined.
In the ACTN context, path computation is needed on the interface
between Customer Network Controller (CNC)  and Multi-Domain
Service Coordinator (MDSC), called CNC-MDSC Interface (CMI),
and on the interface between MSDC and Provisioning Network
Controller (PNC), called MDSC-PNC Interface  (MPI). 
<xref target="RFC8454"/> describes an information model for the Path
Computation request.  <vspace blankLines='1'/>
Multiple protocol solutions can be used for communication between
different controller hierarchical levels. This document assumes that
the controllers are communicating using YANG-based protocols (e.g.,
NETCONF <xref target="RFC6241"/> or RESTCONF <xref target="RFC8040"/>).  <vspace blankLines='1'/>
Path Computation Elements (PCEs), controllers and orchestrators
perform their operations based on Traffic Engineering Databases
(TED). Such TEDs can be described, in a technology agnostic way, with
the YANG data model for TE Topologies <xref target="RFC8795"/>. Furthermore, the
technology specific details of the TED are modelled in the technology
specific topology models, e.g., the <xref target="I-D.ietf-ccamp-otn-topo-yang"/> for Optical Transport
Network (OTN) Optical Data Unit (ODU) technologies, which augment the
common TE topology model in <xref target="RFC8795"/>.  <vspace blankLines='1'/>
The availability of such topology models allows the provisioning of
the TED using YANG-based protocols (e.g., NETCONF or RESTCONF).
Furthermore, it enables a PCE/controller performing the necessary
abstractions or modifications and offering this customized topology
to another PCE/controller or high level orchestrator.  <vspace blankLines='1'/>
The tunnels that can be provided over the networks described with the
topology models can be also set-up, deleted and modified via YANG-
based protocols (e.g., NETCONF or RESTCONF) using the TE tunnel YANG
data model <xref target="I-D.ietf-teas-yang-te"/>.  <vspace blankLines='1'/>
This document defines a YANG data model <xref target="RFC7950"/> for an RPC to
request path computation, which complements the solution defined in
<xref target="I-D.ietf-teas-yang-te"/>, to configure a TE tunnel path in "compute-only" mode.  <vspace blankLines='1'/>
The YANG data model definition does not make any assumption about
whether that the client or the server implement a "PCE"
functionality, as defined in <xref target="RFC4655"/>, and the Path Computation
Element Communication Protocol (PCEP) protocol, as defined in
<xref target="RFC5440"/>.  <vspace blankLines='1'/>
Moreover, this document describes some use cases where a path
computation request, via YANG-based protocols (e.g., NETCONF or
RESTCONF), can be needed.  <vspace blankLines='1'/>
The YANG data model defined in this document conforms to the Network
Management Datastore Architecture <xref target="RFC8342"/>.</t>
</list></t>

<section anchor="terminology"><name>Terminology</name>

<t>TED:</t>

<ul empty="true"><li>
  <t>The traffic engineering database is a collection of all TE
   information about all TE nodes and TE links in a given network.</t>
</li></ul>

<t>PCE:</t>

<ul empty="true"><li>
  <t>A Path Computation Element (PCE) is an entity that is capable of
   computing a network path or route based on a network graph, and of
   applying computational constraints during the computation.  The PCE
   entity is an application that can be located within a network node or
   component, on an out-of-network server, etc.  For example, a PCE
   would be able to compute the path of a TE Label Switched Path (LSP)
   by operating on the TED and considering bandwidth and other
   constraints applicable to the TE LSP service request. <xref target="RFC4655"/>.</t>
</li></ul>

<t>Domain:</t>

<ul empty="true"><li>
  <t>TE information is the data relating to nodes and TE links
   that is used in the process of selecting a TE path.  TE information
   is usually only available within a network.  We call such a zone of
   visibility of TE information a domain.  An example of a domain may be
   an IGP area or an Autonomous System. <xref target="RFC7926"/></t>
</li></ul>

<t>The terminology for describing YANG data models is found in
   <xref target="RFC7950"/>.</t>

</section>
<section anchor="tree-diagram"><name>Tree Diagram</name>

<t>Tree diagrams used in this document follow the notation defined in
   <xref target="RFC8340"/>.</t>

</section>
<section anchor="prefixes-in-data-node-names"><name>Prefixes in Data Node Names</name>

<t>In this document, names of data nodes and other data model objects
   are prefixed using the standard prefix associated with the
   corresponding YANG imported modules, as shown in <xref target="tab-prefix"/>.</t>

<texttable title="Prefixes and corresponding YANG modules" anchor="tab-prefix">
      <ttcol align='left'>Prefix</ttcol>
      <ttcol align='left'>YANG module</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>inet</c>
      <c>ietf-inet-types</c>
      <c><xref target="RFC6991"/></c>
      <c>te-types</c>
      <c>ietf-te-types</c>
      <c><xref target="RFC8776"/></c>
      <c>te</c>
      <c>ietf-te</c>
      <c>[RFCYYYY]</c>
      <c>te-pc</c>
      <c>ietf-te-path-computation</c>
      <c>RFCXXXX</c>
</texttable>

<t>RFC Editor Note:
Please replace XXXX with the RFC number assigned to this document.
Please replace RFC YYYY with the RFC number of <xref target="I-D.ietf-teas-yang-te"/> once it has been published.
Please remove this note.</t>

</section>
</section>
<section anchor="use-cases"><name>Use Cases</name>

<t>This section presents some use cases, where a client needs to request
   underlying SDN controllers for path computation.</t>

<t>The use of the YANG data model defined in this document is not
   restricted to these use cases but can be used in any other use case
   when deemed useful.</t>

<t>The presented uses cases have been grouped, depending on the
   different underlying topologies: a) Packet/Optical Integration; b)
   multi-domain Traffic Engineered (TE) Networks; and c) Data Center
   Interconnections. Use cases d) and e) respectively present how to
   apply this YANG data model for standard multi-domain PCE i.e.
   Backward Recursive Path Computation <xref target="RFC5441"/> and Hierarchical PCE
   <xref target="RFC6805"/>.</t>

<section anchor="poi-uc"><name>Packet/Optical Integration</name>

<t>In this use case, an optical domain is used to provide connectivity
   to some nodes of a packet domain (see <xref target="fig-poi-uc"/>).</t>

<figure title="Packet/Optical Integration use case" anchor="fig-poi-uc"><artwork type="ascii-art" name="poi-use-case.txt"><![CDATA[
                                +----------------+
                                |                |
                                | Packet/Optical |
                                |  Coordinator   |
                                |                |
                                +---+------+-----+
                                    |      |
                       +------------+      |
                       |                   +-----------+
                +------V-----+                         |
                |            |                  +------V-----+
                | Packet     |                  |            |
                | Domain     |                  | Optical    |
                | Controller |                  | Domain     |
                |            |                  | Controller |
                +------+-----+                  +-------+----+
                       |                                |
              .........V.........................       |
              :          packet domain          :       |
          +----+                               +----+   |
          | R1 |= = = = = = = = = = = = = = = =| R2 |   |
          +-+--+                               +--+-+   |
            | :                                 : |     |
            | :................................ : |     |
            |                                     |     |
            |               +-----+               |     |
            |    ...........| Opt |...........    |     |
            |    :          |  C  |          :    |     |
            |    :         /+--+--+\         :    |     |
            |    :        /    |    \        :    |     |
            |    :       /     |     \       :    |     |
            |   +-----+ /   +--+--+   \ +-----+   |     |
            |   | Opt |/    | Opt |    \| Opt |   |     |
            +---|  A  |     |  D  |     |  B  |---+     |
                +-----+\    +--+--+    /+-----+         |
                 :      \      |      /      :          |
                 :       \     |     /       :          |
                 :        \ +--+--+  / optical<---------+
                 :         \| Opt |/  domain :
                 :..........|  E  |..........:
                            +-----+
]]></artwork></figure>

<t><xref target="fig-poi-uc"/> as well as <xref target="fig-poi-abstraction"/> below only show a partial view of the
   packet network connectivity, before additional packet connectivity is
   provided by the optical network.</t>

<t>It is assumed that the Optical Domain Controller provides to the
   Packet/Optical Coordinator an abstracted view of the optical network.
   A possible abstraction could be to represent the whole optical
   network as one "virtual node" with "virtual ports" connected to the
   access links, as shown in <xref target="fig-poi-abstraction"/>.</t>

<t>It is also assumed that Packet Domain Controller can provide the
   Packet/Optical Coordinator the information it needs to set up
   connectivity between packet nodes through the optical network (e.g.,
   the access links).</t>

<t>The path computation request helps the Packet/Optical Coordinator to
   know the real connections that can be provided by the optical
   network.</t>

<figure title="Packet and Optical Topology Abstractions" anchor="fig-poi-abstraction"><artwork type="ascii-art" name="poi-topology-abstraction.txt"><![CDATA[
                       ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,.
                      ,  Packet/Optical Coordinator view          ,
                     ,                              +----+       , .
                    ,                               |    |      ,
                   ,                                | R2 |     ,   .
                  ,  +----+  +------------ +       /+----+    ,
                 ,   |    |  |             |/-----/ / /      ,     .
                ,    | R1 |--O VP1     VP4 O       / /      ,
               ,     |    |\ |             | /----/ /      ,       .
              ,      +----+ \|             |/      /      ,
             ,        /      O VP2     VP5 O      /      ,         .
            ,        /       |             |  +----+    ,
           ,        /        |             |  |    |   ,           .
          ,        /         O VP3     VP6 O--| R4 |  ,
         ,     +----+ /-----/|_____________|  +----+ ,             .
        ,      |    |/       +------------ +        ,
       ,       | R3 |                              ,               .
      ,        +----+                             ,,,,,,,,,,,,,,,,,
     ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,                ,.
     . Packet Domain Controller view                +----+       ,
       only packet nodes and packet links           |    |      ,  .
     . with access links to the optical network     | R2 |     ,
                  ,  +----+                        /+----+    ,    .
     .           ,   |    |                 /-----/ / /      ,
                ,    | R1 |---                     / /      ,      .
     .         ,     +----+\                 /----/ /      ,
              ,        /    \               /      /      ,        .
     .       ,        /                           /      ,
            ,        /                        +----+    ,          .
     .     ,        /                         |    |   ,
          ,        /                       ---| R4 |  ,            .
     .   ,     +----+ /-----/                 +----+ ,
        ,      |    |/                              ,              .
     . ,       | R3 |                              ,
      ,        +----+                             ,,,,,,,,,,,,,,,,,.
     .,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,                ,
       Optical Domain Controller view                            , .
     . only optical nodes,        +--+                          ,
       optical links and         /|OF|                         ,   .
     . access links from the  +--++--+             /          ,
       packet network         |OA|    \     /-----/ /        ,     .
     .          ,          ---+--+--\  +--+/       /        ,
               ,           \   |  \  \-|OE|-------/        ,       .
     .        ,             \  |   \ /-+--+               ,
             ,               \+--+  X    |               ,         .
     .      ,                 |OB|-/ \   |              ,
           ,                  +--+-\  \+--+            ,           .
     .    ,                  /   \  \--|OD|---        ,
         ,            /-----/     +--+ +--+          ,             .
     .  ,            /            |OC|/             ,
       ,                          +--+             ,               .
     .,                                           ,,,,,,,,,,,,,,,,,,
      ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,                ,
     . Actual Physical View                         +----+       ,
                    ,             +--+              |    |      ,
     .             ,             /|OF|              | R2 |     ,
                  ,  +----+   +--++--+             /+----+    ,
     .           ,   |    |   |OA|    \     /-----/ / /      ,
                ,    | R1 |---+--+--\  +--+/       / /      ,
     .         ,     +----+\   |  \  \-|OE|-------/ /      ,
              ,        /    \  |   \ /-+--+        /      ,
     .       ,        /      \+--+  X    |        /      ,
            ,        /        |OB|-/ \   |    +----+    ,
     .     ,        /         +--+-\  \+--+   |    |   ,
          ,        /         /   \  \--|OD|---| R4 |  ,
     .   ,     +----+ /-----/     +--+ +--+   +----+ ,
        ,      |    |/            |OC|/             ,
     . ,       | R3 |             +--+             ,
      ,        +----+                             ,
     .,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
]]></artwork></figure>

<t>In this use case, the Packet/Optical Coordinator needs to set up an
   optimal underlying path for an IP link between R1 and R2.</t>

<t>As depicted in <xref target="fig-poi-abstraction"/>, the Packet/Optical Coordinator has only an
   "abstracted view" of the physical network, and it does not know the
   feasibility or the cost of the possible optical paths (e.g., VP1-VP4
   and VP2-VP5), which depend on the current status of the physical
   resources within the optical network and on vendor-specific optical
   attributes.</t>

<t>The Packet/Optical Coordinator can request the underlying Optical
   Domain Controller to compute a set of potential optimal paths, taking
   into account optical constraints. Then, based on its own constraints,
   policy and knowledge (e.g. cost of the access links), it can choose
   which one of these potential paths to use to set up the optimal end-
   to-end path crossing optical network.</t>

<figure title="Packet/Optical Integration path computation example" anchor="fig-poi-example"><artwork type="ascii-art" name="poi-example.txt"><![CDATA[
                    ............................
                    :                          :
                    O VP1                  VP4 O
           cost=10 /:\                        /:\ cost=10
                  / : \----------------------/ : \
          +----+ /  :         cost=50          :  \ +----+
          |    |/   :                          :   \|    |
          | R1 |    :                          :    | R2 |
          |    |\   :                          :   /|    |
          +----+ \  :  /--------------------\  :  / +----+
                  \ : /       cost=55        \ : /
            cost=5 \:/                        \:/ cost=5
                    O VP2                  VP5 O
                    :                          :
                    :..........................:
]]></artwork></figure>

<t>For example, in <xref target="fig-poi-example"/>, the Packet/Optical Coordinator can request
   the Optical Domain Controller to compute the paths between VP1-VP4
   and VP2-VP5 and then decide to set up the optimal end-to-end path
   using the VP2-VP5 optical path even if this is not the optimal path
   from the optical domain perspective.</t>

<t>Considering the dynamicity of the connectivity constraints of an
   optical domain, it is possible that a path computed by the Optical
   Domain Controller when requested by the Packet/Optical Coordinator is
   no longer valid/available when the Packet/Optical Coordinator
   requests it to be set up. This is further discussed in <xref target="rpc-motivation"/>.</t>

</section>
<section anchor="md-uc"><name>Multi-domain TE networks</name>

<t>In this use case there are two TE domains which are interconnected
   together by multiple inter-domains links.</t>

<t>A possible example could be a multi-domain optical network.</t>

<figure title="Multi-domain multi-link interconnection" anchor="md-ml-connection"><artwork type="ascii-art" name="multi-domain-use-case.txt"><![CDATA[
                            +--------------+
                            | Multi-Domain |
                            | Controller   |
                            +---+------+---+
                                |      |
                   +------------+      |
                   |                   +-----------+
            +------V-----+                         |
            |            |                         |
            | TE Domain  |                  +------V-----+
            | Controller |                  |            |
            |      1     |                  | TE Domain  |
            +------+-----+                  | Controller |
                   |                        |      2     |
                   |                        +------+-----+
          .........V..........                     |
          :                  :                     |
         +-----+             :                     |
         |     |             :            .........V..........
         |  X  |             :            :                  :
         |     |          +-----+      +-----+                :
         +-----+          |     |      |     |               :
          :               |  C  |------|  E  |               :
      +-----+    +-----+ /|     |      |     |\ +-----+    +-----+
      |     |    |     |/ +-----+      +-----+ \|     |    |     |
      |  A  |----|  B  |     :            :     |  G  |----|  H  |
      |     |    |     |\    :            :    /|     |    |     |
      +-----+    +-----+ \+-----+      +-----+/ +-----+    +-----+
          :               |     |      |     |               :
          :               |  D  |------|  F  |               :
          :               |     |      |     |          +-----+
          :               +-----+      +-----+          |     |
          :                  :            :             |  Y  |
          :                  :            :             |     |
          :   TE domain 1    :            : TE domain 2 +-----+
          :..................:            :.................:
]]></artwork></figure>

<t>In order to set up an end-to-end multi-domain TE path (e.g., between
   nodes A and H), the Multi-Domain Controller needs to know the
   feasibility or the cost of the possible TE paths within the two TE
   domains, which depend on the current status of the physical resources
   within each TE domain. This is more challenging in case of optical
   networks because the optimal paths depend also on vendor-specific
   optical attributes (which may be different in the two domains if they
   are provided by different vendors).</t>

<t>In order to set up a multi-domain TE path (e.g., between nodes A and
   H), the Multi-Domain Controller can request the TE Domain Controllers
   to compute a set of intra-domain optimal paths and take decisions
   based on the information received. For example:</t>

<t><list style="symbols">
  <t>The Multi-Domain Controller asks TE Domain Controllers to provide
set of paths between A-C, A-D, E-H and F-H</t>
  <t>TE Domain Controllers return a set of feasible paths with the
associated costs: the path A-C is not part of this set (in optical
networks, it is typical to have some paths not being feasible due
to optical constraints that are known only by the Optical Domain
Controller)</t>
  <t>The Multi-Domain Controller will select the path A-D-F-H since it
is the only feasible multi-domain path and then request the TE
Domain Controllers to set up the A-D and F-H intra-domain paths</t>
  <t>If there are multiple feasible paths, the Multi-Domain Controller
can select the optimal path knowing the cost of the intra-domain
paths (provided by the TE domain controllers) and the cost of the
inter-domain links (known by the Multi-Domain Controller)  <vspace blankLines='1'/>
This approach may have some scalability issues when the number of TE
domains is quite big (e.g. 20).  <vspace blankLines='1'/>
In this case, it would be worthwhile using the abstract TE topology
information provided by the TE Domain Controllers to limit the number
of potential optimal end-to-end paths and then request path
computation from fewer TE Domain Controllers in order to decide what
the optimal path within this limited set is.  <vspace blankLines='1'/>
For more details, see <xref target="topo-pc-complement"/>.</t>
</list></t>

</section>
<section anchor="data-center-interconnections"><name>Data Center Interconnections</name>

<t>In these use case, there is a TE domain which is used to provide
   connectivity between Data Centers which are connected with the TE
   domain using access links.</t>

<figure title="Data Center Interconnection use case" anchor="fig-dci-uc"><artwork type="ascii-art" name="dci-use-case.txt"><![CDATA[
                        +--------------+
                        | Cloud Network|
                        | Orchestrator |
                        +--------------+
                          |  |  |  |
            +-------------+  |  |  +------------------------+
            |                |  +------------------+        |
            |       +--------V---+                 |        |
            |       |            |                 |        |
            |       | TE Network |                 |        |
     +------V-----+ | Controller |          +------V-----+  |
     | DC         | +------------+          | DC         |  |
     | Controller |     |                   | Controller |  |
     +------------+     |   +-----+         +------------+  |
          |         ....V...|     |........         |       |
          |         :       |  P  |       :         |       |
     .....V.....    :      /+-----+\      :    .....V.....  |
     :         :  +-----+ /    |    \ +-----+  :         :  |
     :  DC1 || :  |     |/     |     \|     |  :  DC2 || :  |
     :    ||||----| PE1 |      |      | PE2 |----   |||| :  |
     : _|||||| :  |     |\     |     /|     |  : _|||||| :  |
     :         :  +-----+ \ +-----+ / +-----+  :         :  |
     :.........:    :      \|     |/      :    :.........:  |
                    :.......| PE3 |.......:                 |
                            |     |                         |
                            +-----+               +---------V--+
                          .....|.....             | DC         |
                          :         :             | Controller |
                          :  DC3 || :             +------------+
                          :    |||| :                  |
                          : _|||||| <------------------+
                          :         :
                          :.........:
]]></artwork></figure>

<t>In this use case, there is the need to transfer data from Data Center
   1 (DC1) to either DC2 or DC3 (e.g. workload migration).</t>

<t>The optimal decision depends both on the cost of the TE path (DC1-DC2
   or DC1-DC3) and of the Data Center resources within DC2 or DC3.</t>

<t>The Cloud Network Orchestrator needs to make a decision for optimal
   connection based on TE network constraints and Data Center resources.</t>

<t>It may not be able to make this decision because it has only an
   abstract view of the TE network (as in <xref target="poi-uc"/>).</t>

<t>The Cloud Network Orchestrator can request to the TE Network
   Controller to compute the cost of the possible TE paths (e.g., DC1-
   DC2 and DC1-DC3) and to the DC Controller to provide the information
   it needs about the required Data Center resources within DC2 and DC3
   and then it can take the decision about the optimal solution based on
   this information and its policy.</t>

</section>
<section anchor="backward-recursive-path-computation-scenario"><name>Backward Recursive Path Computation scenario</name>

<t><xref target="RFC5441"/> has defined the Virtual Source Path Tree (VSPT) TLV within
   PCE Reply Object in order to compute inter-domain paths following a
   "Backward Recursive Path Computation" (BRPC) method. The main
   principle is to forward the PCE request message up to the destination
   domain. Then, each PCE involved in the computation will compute its
   part of the path and send it back to the requester through PCE
   Response message. The resulting computation is spread from
   destination PCE to source PCE. Each PCE is in charge of merging the
   path it received with the one it calculated. At the end, the source
   PCE merges its local part of the path with the received one to
   achieve the end-to-end path.</t>

<t><xref target="fig-brpc-example"/> below show a typical BRPC scenario where 3 PCEs cooperate to
   compute inter-domain paths.</t>

<figure title="BRPC Scenario" anchor="fig-brpc-example"><artwork type="ascii-art" name="brpc-scenario.txt"><![CDATA[
                   +----------------+          +----------------+
                   |  Domain (B)    |          |  Domain (C)    |
                   |                |          |                |
                   |        /-------|---PCEP---|--------\       |
                   |       /        |          |         \      |
                   |   (PCE)        |          |   -    (PCE)   |
                   |    /           <---------->  |D|           |
                   |   /            |  Inter   |   -            |
                   +---|----^-------+  Domain  +----------------+
                       |    |          Link
                     PCEP   |
                       |    | Inter-domain Link
                       |    |
                   +---|----v-------+
                   |   |            |
                   |   | Domain (A) |
                   |   \            |
                   |  (PCE)    -    |
                   |          |S|   |
                   |           -    |
                   +----------------+
]]></artwork></figure>

<t>In this use case, a client can use the YANG data model defined in
   this document to request path computation from the PCE that controls
   the source of the tunnel. For example, a client can request to the
   PCE of domain A to compute a path from a source S, within domain A,
   to a destination D, within domain C. Then PCE of domain A will use
   PCEP protocol, as per <xref target="RFC5441"/>, to compute the path from S to D and
   in turn gives the final answer to the requester.</t>

</section>
<section anchor="hierarchical-pce-scenario"><name>Hierarchical PCE scenario</name>

<t><xref target="RFC6805"/> has defined an architecture and extensions to the PCE
   standard to compute inter-domain path following a hierarchical
   method. Two new roles have been defined: parent PCE and child PCE.
   The parent PCE is in charge to coordinate the end-to-end path
   computation. For that purpose it sends to each child PCE involved in
   the multi-domain path computation a PCE Request message to obtain the
   local part of the path. Once received all answer through PCE Response
   message, the parent PCE will merge the different local parts of the
   path to achieve the end-to-end path.</t>

<t><xref target="fig-hpce-example"/> below shows a typical hierarchical scenario where a parent
   PCE request end-to-end path to the different child PCE. Note that a
   PCE could take independently the role of child or parent PCE
   depending of which PCE will request the path.</t>

<figure title="Hierarchical domain topology from RFC6805" anchor="fig-hpce-example"><artwork type="ascii-art" name="hierarchical-domain-topology.txt"><![CDATA[
    -----------------------------------------------------------------
    |   Domain 5                                                      |
    |                              -----                              |
    |                             |PCE 5|                             |
    |                              -----                              |
    |                                                                 |
    |    ----------------     ----------------     ----------------   |
    |   | Domain 1       |   | Domain 2       |   | Domain 3       |  |
    |   |                |   |                |   |                |  |
    |   |        -----   |   |        -----   |   |        -----   |  |
    |   |       |PCE 1|  |   |       |PCE 2|  |   |       |PCE 3|  |  |
    |   |        -----   |   |        -----   |   |        -----   |  |
    |   |                |   |                |   |                |  |
    |   |            ----|   |----        ----|   |----            |  |
    |   |           |BN11+---+BN21|      |BN23+---+BN31|           |  |
    |   |   -        ----|   |----        ----|   |----        -   |  |
    |   |  |S|           |   |                |   |           |D|  |  |
    |   |   -        ----|   |----        ----|   |----        -   |  |
    |   |           |BN12+---+BN22|      |BN24+---+BN32|           |  |
    |   |            ----|   |----        ----|   |----            |  |
    |   |                |   |                |   |                |  |
    |   |         ----   |   |                |   |   ----         |  |
    |   |        |BN13|  |   |                |   |  |BN33|        |  |
    |    -----------+----     ----------------     ----+-----------   |
    |                \                                /               |
    |                 \       ----------------       /                |
    |                  \     |                |     /                 |
    |                   \    |----        ----|    /                  |
    |                    ----+BN41|      |BN42+----                   |
    |                        |----        ----|                       |
    |                        |                |                       |
    |                        |        -----   |                       |
    |                        |       |PCE 4|  |                       |
    |                        |        -----   |                       |
    |                        |                |                       |
    |                        | Domain 4       |                       |
    |                         ----------------                        |
    |                                                                 |
     -----------------------------------------------------------------
]]></artwork></figure>

<t>In this use case, a client can use the YANG data model defined in
   this document to request to the parent PCE a path from a source S to
   a destination D. The parent PCE will in turn contact the child PCEs
   through PCEP protocol to compute the end-to-end path and then return
   the computed path to the client, using the YANG data model defined in
   this document. For example the YANG data model can be used to request
   to PCE5 acting as parent PCE to compute a path from source S, within
   domain 1, to destination D, within domain 3. PCE5 will contact child
   PCEs of domain 1, 2 and 3 to obtain local part of the end-to-end path
   through the PCEP protocol. Once received the PCE Response message, it
   merges the answers to compute the end-to-end path and send it back to
   the client.</t>

</section>
</section>
<section anchor="motivations"><name>Motivations</name>

<t>This section provides the motivation for the YANG data model defined
   in this document.</t>

<t><xref target="yang-motivation"/> describes the motivation for a YANG data model to request
   path computation.</t>

<t><xref target="topo-interaction"/> describes the motivation for a YANG data model which
   complements the TE topology YANG data model defined in <xref target="RFC8795"/>.</t>

<t><xref target="rpc-motivation"/> describes the motivation for a YANG RPC which complements
   the TE tunnel YANG data model defined in <xref target="I-D.ietf-teas-yang-te"/>.</t>

<section anchor="yang-motivation"><name>Motivation for a YANG Model</name>

<section anchor="benefits-of-common-data-models"><name>Benefits of common data models</name>

<t>The YANG data model for requesting path computation is closely
   aligned with the YANG data models that provide (abstract) TE topology
   information, i.e., <xref target="RFC8795"/> as well as that are used to configure
   and manage TE tunnels, i.e., <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>There are many benefits in aligning the data model used for path
   computation requests with the YANG data models used for TE topology
   information and for TE tunnels configuration and management:</t>

<t><list style="symbols">
  <t>There is no need for an error-prone mapping or correlation of
information.</t>
  <t>It is possible to use the same endpoint identifiers in path
computation requests and in the topology modeling.</t>
  <t>The attributes used for path computation constraints are the same
as those used when setting up a TE tunnel.</t>
</list></t>

</section>
<section anchor="benefits-of-a-single-interface"><name>Benefits of a single interface</name>

<t>The system integration effort is typically lower if a single,
   consistent interface is used by controllers, i.e., one data modeling
   language (i.e., YANG) and a common protocol (e.g., NETCONF or
   RESTCONF).</t>

<t>Practical benefits of using a single, consistent interface include:</t>

<t><list style="numbers">
  <t>Simple authentication and authorization: The interface between
different components has to be secured. If different protocols
have different security mechanisms, ensuring a common access
control model may result in overhead. For instance, there may be a
need to deal with different security mechanisms, e.g., different
credentials or keys. This can result in increased integration
effort.</t>
  <t>Consistency: Keeping data consistent over multiple different
interfaces or protocols is not trivial. For instance, the sequence
of actions can matter in certain use cases, or transaction
semantics could be desired. While ensuring consistency within one
protocol can already be challenging, it is typically cumbersome to
achieve that across different protocols.</t>
  <t>Testing: System integration requires comprehensive testing,
including corner cases. The more different technologies are
involved, the more difficult it is to run comprehensive test cases
and ensure proper integration.</t>
  <t>Middle-box friendliness: Provider and consumer of path computation
requests may be located in different networks, and middle-boxes
such as firewalls, NATs, or load balancers may be deployed. In
such environments it is simpler to deploy a single protocol. Also,
it may be easier to debug connectivity problems.</t>
  <t>Tooling reuse: Implementers may want to implement path computation
requests with tools and libraries that already exist in
controllers and/or orchestrators, e.g., leveraging the rapidly
growing eco-system for YANG tooling.</t>
</list></t>

</section>
<section anchor="extensibility"><name>Extensibility</name>

<t>Path computation is only a subset of the typical functionality of a
   controller. In many use cases, issuing path computation requests
   comes along with the need to access other functionality on the same
   system. In addition to obtaining TE topology, for instance also
   configuration of services (set-up/modification/deletion) may be
   required, as well as:</t>

<t><list style="numbers">
  <t>Receiving notifications for topology changes as well as
integration with fault management</t>
  <t>Performance management such as retrieving monitoring and telemetry
data</t>
  <t>Service assurance, e.g., by triggering OAM functionality</t>
  <t>Other fulfilment and provisioning actions beyond tunnels and
services, such as changing QoS configurations  <vspace blankLines='1'/>
YANG is a very extensible and flexible data modeling language that
can be used for all these use cases.</t>
</list></t>

</section>
</section>
<section anchor="topo-interaction"><name>Interactions with TE topology</name>

<t>The use cases described in <xref target="use-cases"/> have been described assuming
   that the topology view exported by each underlying controller to its
   client is aggregated using the "virtual node model", defined in
   <xref target="RFC7926"/>.</t>

<t>TE topology information, e.g., as provided by <xref target="RFC8795"/>, could in
   theory be used by an underlying controller to provide TE information
   to its client thus allowing a PCE available within its client to
   perform multi-domain path computation on its own, without requesting
   path computations to the underlying controllers.</t>

<t>In case the client does not implement a PCE function, as discussed in
   <xref target="intro"/>, it could not perform path computation based on TE topology
   information and would instead need to request path computation from
   the underlying controllers to get the information it needs to find
   the optimal end-to-end path.</t>

<t>In case the client implements a PCE function, as discussed in 
   <xref target="intro"/>, the TE topology information needs to be complete and accurate,
   which would bring to scalability issues.</t>

<t>Using TE topology to provide a "virtual link model" aggregation, as
   described in <xref target="RFC7926"/>, may be insufficient, unless the aggregation
   provides complete and accurate information, which would still cause
   scalability issues, as described in <xref target="topo-aggregation"/> below.</t>

<t>Using TE topology abstraction, as described in <xref target="RFC7926"/>, may lead to
   compute an unfeasible path, as described in <xref target="RFC7926"/> in 
   <xref target="topo-abstraction"/> below.</t>

<t>Therefore when computing an optimal multi-domain path, there is a
   scalability trade-off between providing complete and accurate TE
   information and the number of path computation requests to the
   underlying controllers.</t>

<t>The TE topology information used, in a complimentary way, to reduce
   the number for path computation requests to the underlying
   controllers, are described in <xref target="topo-pc-complement"/> below.</t>

<section anchor="topo-aggregation"><name>TE topology aggregation</name>

<t>Using the TE topology model, as defined in <xref target="RFC8795"/>, the underlying
   controller can export the whole TE domain as a single TE node with a
   "detailed connectivity matrix" (which provides specific TE
   attributes, such as delay, Shared Risk Link Groups (SRLGs) and other
   TE metrics, between each ingress and egress links).</t>

<t>The information provided by the "detailed connectivity matrix" would
   be equivalent to the information that should be provided by "virtual
   link model" as defined in <xref target="RFC7926"/>.</t>

<t>For example, in the Packet/Optical Integration use case, described in
   <xref target="poi-uc"/>, the Optical Domain Controller can make the information
   shown in <xref target="fig-poi-example"/> available to the Packet/Optical Coordinator as part
   of the TE topology information and the Packet/Optical Coordinator
   could use this information to calculate on its own the optimal path
   between R1 and R2, without requesting any additional information to
   the Optical Domain Controller.</t>

<t>However, when designing the amount of information to provide within
   the "detailed connectivity matrix", there is a tradeoff to be
   considered between accuracy (i.e., providing "all" the information
   that might be needed by the PCE available within the client) and
   scalability.</t>

<t><xref target="poi-multi-path"/> below shows another example, similar to <xref target="fig-poi-example"/>, where
   there are two possible Optical paths between VP1 and VP4 with
   different properties (e.g., available bandwidth and cost).</t>

<figure title="Packet/Optical Integration path computation Example with multiple choices" anchor="poi-multi-path"><artwork type="ascii-art" name="poi-example-multiple.txt"><![CDATA[
                    ............................
                    :  /--------------------\  :
                    : /       cost=65        \ :
                    :/    available-bw=10G    \:
                    O VP1                  VP4 O
           cost=10 /:\                        /:\ cost=10
                  / : \----------------------/ : \
          +----+ /  :         cost=50          :  \ +----+
          |    |/   :     available-bw=2G      :   \|    |
          | R1 |    :                          :    | R2 |
          |    |\   :                          :   /|    |
          +----+ \  :  /--------------------\  :  / +----+
                  \ : /       cost=55        \ : /
            cost=5 \:/    available-bw=3G     \:/ cost=5
                    O VP2                  VP5 O
                    :                          :
                    :..........................:
]]></artwork></figure>

<t>If the information in the "detailed connectivity matrix" is not
   complete/accurate, we can have the following drawbacks:</t>

<t><list style="symbols">
  <t>If only the VP1-VP4 path with available bandwidth of 2 Gb/s and
cost 50 is reported, the client's PCE will fail to compute a 5
Gb/s path between routers R1 and R2, although this would be
feasible;</t>
  <t>If only the VP1-VP4 path with available bandwidth of 10 Gb/s and
cost 60 is reported, the client's PCE will compute, as optimal,
the 1 Gb/s path between R1 and R2 going through the VP2-VP5 path
within the optical domain while the optimal path would actually be
the one going thought the VP1-VP4 sub-path (with cost 50) within
the optical domain.  <vspace blankLines='1'/>
Reporting all the information, as in <xref target="poi-multi-path"/>, using the "detailed
 connectivity matrix", is quite challenging from a scalability
 perspective. The amount of this information is not just based on
 number of end points (which would scale as N-square), but also on
 many other parameters, including client rate, user
 constraints/policies for the service, e.g. max latency &lt; N ms, max
 cost, etc., exclusion policies to route around busy links, min
 Optical Signal to Noise Ratio (OSNR) margin, max pre-Forward Error
 Correction (FEC) Bit Error Rate (BER) etc. All these constraints
 could be different based on connectivity requirements.  <vspace blankLines='1'/>
It is also worth noting that the "connectivity matrix" has been
 originally defined in Wavelength Switched Optical Networks (WSON),
 <xref target="RFC7446"/>, to report the connectivity constrains of a physical node
 within the Wavelength Division Multiplexing (WDM) network: the
 information it contains is pretty "static" and therefore, once taken
 and stored in the TE data base, it can be always being considered
 valid and up-to-date in path computation request.  <vspace blankLines='1'/>
The "connectivity matrix" is sometimes confused with "optical reach
 table" that contain multiple (e.g. k-shortest) regen-free reachable
 paths for every A-Z node combination in the network. Optical reach
 tables can be calculated offline, utilizing vendor optical design and
 planning tools, and periodically uploaded to the Controller: these
 optical path reach tables are fairly static. However, to get the
 connectivity matrix, between any two sites, either a regen free path
 can be used, if one is available, or multiple regen free paths are
 concatenated to get from the source to the destination, which can be
 a very large combination. Additionally, when the optical path within
 optical domain needs to be computed, it can result in different paths
 based on input objective, constraints, and network conditions. In
 summary, even though "optical reach table" is fairly static, which
 regen free paths to build the connectivity matrix between any source
 and destination is very dynamic, and is done using very sophisticated
 routing algorithms.  <vspace blankLines='1'/>
Using the "basic connectivity matrix" with an abstract node to
 abstract the information regarding the connectivity constraints of an
 Optical domain, would make this information more "dynamic" since the
 connectivity constraints of an optical domain can change over time
 because some optical paths that are feasible at a given time may
 become unfeasible at a later time when e.g., another optical path is
 established.  <vspace blankLines='1'/>
The information in the "detailed connectivity matrix" is even more
 dynamic since the establishment of another optical path may change
 some of the parameters (e.g., delay or available bandwidth) in the
 "detailed connectivity matrix" while not changing the feasibility of
 the path.  <vspace blankLines='1'/>
There is therefore the need to keep the information in the "detailed
 connectivity matrix" updated which means that there another tradeoff
 between the accuracy (i.e., providing "all" the information that
 might be needed by the client's PCE) and having up-to-date
 information. The more the information is provided and the longer it
 takes to keep it up-to-date which increases the likelihood that the
 client's PCE computes paths using not updated information.  <vspace blankLines='1'/>
It seems therefore quite challenging to have a "detailed connectivity
 matrix" that provides accurate, scalable and updated information to
 allow the client's PCE to take optimal decisions by its own.  <vspace blankLines='1'/>
Considering the example in <xref target="poi-multi-path"/> with the approach defined in this
 document, the client, when it needs to set up an end-to-end path, it
 can request the Optical Domain Controller to compute a set of optimal
 paths (e.g., for VP1-VP4 and VP2-VP5) and take decisions based on the
 information received:</t>
  <t>When setting up a 5 Gb/s path between routers R1 and R2, the
Optical Domain Controller may report only the VP1-VP4 path as the
only feasible path: the Packet/Optical Coordinator can
successfully set up the end-to-end path passing though this
optical path;</t>
  <t>When setting up a 1 Gb/s path between routers R1 and R2, the
Optical Domain Controller (knowing that the path requires only 1
Gb/s) can report both the VP1-VP4 path, with cost 50, and the VP2-
VP5 path, with cost 65. The Packet/Optical Coordinator can then
compute the optimal path which is passing thought the VP1-VP4 sub-
path (with cost 50) within the optical domain.</t>
</list></t>

</section>
<section anchor="topo-abstraction"><name>TE topology abstraction</name>

<t>Using the TE topology model, as defined in <xref target="RFC8795"/>, the underlying
   controller can export to its client an abstract TE topology, composed
   by a set of TE nodes and TE links, representing the abstract view of
   the topology under its control.</t>

<t>For example, in the multi-domain TE network use case, described in
   <xref target="md-uc"/>, the TE Domain Controller 1 can export a TE topology
   encompassing the TE nodes A, B, C and D and the TE links
   interconnecting them. In a similar way, the TE Domain Controller 2
   can export a TE topology encompassing the TE nodes E, F, G and H and
   the TE links interconnecting them.</t>

<t>In this example, for simplicity reasons, each abstract TE node maps
   with each physical node, but this is not necessary.</t>

<t>In order to set up a multi-domain TE path (e.g., between nodes A and
   H), the Multi-Domain Controller can compute by its own an optimal
   end-to-end path based on the abstract TE topology information
   provided by the domain controllers. For example:</t>

<t><list style="symbols">
  <t>Multi-Domain Controller can compute, based on its own TED data,
the optimal multi-domain path being A-B-C-E-G-H, and then request
the TE Domain Controllers to set up the A-B-C and E-G-H intra-
domain paths</t>
  <t>But, during path set-up, the TE Domain Controller may find out
that A-B-C intra-domain path is not feasible (as discussed in
<xref target="md-uc"/>, in optical networks it is typical to have some paths
not being feasible due to optical constraints that are known only
by the Optical Domain Controller), while only the path A-B-D is
feasible</t>
  <t>So what the Multi-Domain Controller has computed is not good and
it needs to re-start the path computation from scratch  <vspace blankLines='1'/>
As discussed in <xref target="topo-aggregation"/>, providing more extensive abstract
information from the TE Domain Controllers to the Multi-Domain
Controller may lead to scalability problems.  <vspace blankLines='1'/>
In a sense this is similar to the problem of routing and wavelength
assignment within an optical domain. It is possible to do first
routing (step 1) and then wavelength assignment (step 2), but the
chances of ending up with a good path is low. Alternatively, it is
possible to do combined routing and wavelength assignment, which is
known to be a more optimal and effective way for optical path set-up.
Similarly, it is possible to first compute an abstract end-to-end
path within the Multi-Domain Controller (step 1) and then compute an
intra-domain path within each optical domain (step 2), but there are
more chances not to find a path or to get a suboptimal path than by
performing multiple per-domain path computations and then stitching
them together.</t>
</list></t>

</section>
<section anchor="topo-pc-complement"><name>Complementary use of the TE topology</name>

<t>As discussed in <xref target="md-uc"/>, there are some scalability issues with
   path computation requests in a multi-domain TE network with many TE
   domains, in terms of the number of requests to send to the TE Domain
   Controllers. It would therefore be worthwhile using the abstract TE
   topology information provided by the TE Domain Controllers to limit
   the number of requests.</t>

<t>An example can be described considering the multi-domain abstract TE
   topology shown in <xref target="fig-topo-many-domains"/>. In this example, an end-to-end TE path
   between domains A and F needs to be set up. The transit TE domain
   should be selected between domains B, C, D and E.</t>

<figure title="Multi-domain with many domains (Topology information)" anchor="fig-topo-many-domains"><artwork type="ascii-art" name="many-domains-topology.txt"><![CDATA[
                          .........B.........
                          : _ _ _ _ _ _ _ _ :
                          :/               \:
                      +---O  NOT FEASIBLE   O---+
                cost=5|   :                 :   |
    ......A......     |   :.................:   |     ......F......
    :           :     |                         |     :           :
    :           O-----+   .........C.........   +-----O           :
    :           :         : /-------------\ :         :           :
    :           :         :/               \:         :           :
    :  cost<=20 O---------O   cost <= 30    O---------O cost<=20  :
    :          /: cost=5  :                 : cost=5  :\          :
    :  /------/ :         :.................:         : \------\  :
    : /         :                                     :         \ :
    :/ cost<=25 :         .........D.........         : cost<=25 \:
    O-----------O-------+ : /-------------\ : +-------O-----------O
    :\          : cost=5| :/               \: |cost=5 :          /:
    : \         :       +-O   cost <= 30    O-+       :         / :
    :  \------\ :         :                 :         : /------/  :
    : cost>=30 \:         :.................:         :/ cost>=30 :
    :           O-----+                         +-----O           :
    :...........:     |   .........E.........   |     :...........:
                      |   : /-------------\ :   |
                cost=5|   :/               \:   |cost=5
                      +---O   cost >= 30    O---+
                          :                 :
                          :.................:
]]></artwork></figure>

<t>The actual cost of each intra-domain path is not known a priori from
   the abstract topology information. The Multi-Domain Controller only
   knows, from the TE topology provided by the underlying domain
   controllers, the feasibility of some intra-domain paths and some
   upper-bound and/or lower-bound cost information. With this
   information, together with the cost of inter-domain links, the Multi-
   Domain Controller can understand by its own that:</t>

<t><list style="symbols">
  <t>Domain B cannot be selected as the path connecting domains A and F
is not feasible;</t>
  <t>Domain E cannot be selected as a transit domain since it is known
from the abstract topology information provided by domain
controllers that the cost of the multi-domain path A-E-F (which is
100, in the best case) will be always be higher than the cost of
the multi-domain paths A-D-F (which is 90, in the worst case) and
A-C-F (which is 80, in the worst case).  <vspace blankLines='1'/>
Therefore, the Multi-Domain Controller can understand by its own that
 the optimal multi-domain path could be either A-D-F or A-C-F but it
 cannot know which one of the two possible option actually provides
 the optimal end-to-end path.  <vspace blankLines='1'/>
The Multi-Domain Controller can therefore request path computation
 only to the TE Domain Controllers A, D, C and F (and not to all the
 possible TE Domain Controllers).</t>
</list></t>

<figure title="Multi-domain with many domains (Path Computation information)" anchor="fig-pc-many-domains"><artwork type="ascii-art" name="many-domain-path-computation.txt"><![CDATA[
                          .........B.........
                          :                 :
                      +---O                 O---+
    ......A......     |   :.................:   |     ......F......
    :           :     |                         |     :           :
    :           O-----+   .........C.........   +-----O           :
    :           :         : /-------------\ :         :           :
    :           :         :/               \:         :           :
    :  cost=15  O---------O    cost = 25    O---------O  cost=10  :
    :          /: cost=5  :                 : cost=5  :\          :
    :  /------/ :         :.................:         : \------\  :
    : /         :                                     :         \ :
    :/ cost=10  :         .........D.........         : cost=15  \:
    O-----------O-------+ : /-------------\ : +-------O-----------O
    :           : cost=5| :/               \: |cost=5 :           :
    :           :       +-O    cost = 15    O-+       :           :
    :           :         :                 :         :           :
    :           :         :.................:         :           :
    :           O-----+                         +-----O           :
    :...........:     |   .........E.........   |     :...........:
                      |   :                 :   |
                      +---O                 O---+
                          :.................:
]]></artwork></figure>

<t>Based on these requests, the Multi-Domain Controller can know the
   actual cost of each intra-domain paths which belongs to potential
   optimal end-to-end paths, as shown in <xref target="fig-pc-many-domains"/>, and then compute the
   optimal end-to-end path (e.g., A-D-F, having total cost of 50,
   instead of A-C-F having a total cost of 70).</t>

</section>
</section>
<section anchor="rpc-motivation"><name>Path Computation RPC</name>

<t>The TE tunnel YANG data model, defined in <xref target="I-D.ietf-teas-yang-te"/>, can support
   the need to request path computation, as described in section 5.1.2
   of <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>This solution is stateful since the state of each created "compute-
   only" TE tunnel path needs to be maintained, in the YANG datastores
   (at least in the running datastore and operational datastore), and
   updated, when underlying network conditions change.</t>

<t>The RPC mechanism allows requesting path computation using a simple
   atomic operation, without creating any state in the YANG datastores,
   and it is the natural option/choice, especially with stateless PCE.</t>

<t>It is very useful to provide both the options of using an RPC as well
   as of setting up TE tunnel paths in "compute-only" mode. It is
   suggested to use the RPC as much as possible and to rely on
   "compute-only" TE tunnel paths, when really needed.</t>

<t>Using the RPC solution would imply that the underlying controller
   (e.g., a PNC) computes a path twice during the process to set up an
   LSP: at time T1, when its client (e.g., an MDSC) sends a path
   computation RPC request to it, and later, at time T2, when the same
   client (MDSC) creates a TE tunnel requesting the set-up of the LSP.
   The underlying assumption is that, if network conditions have not
   changed, the same path that has been computed at time T1 is also
   computed at time T2 by the underlying controller (e.g. PNC) and
   therefore the path that is set up at time T2 is exactly the same path
   that has been computed at time T1.</t>

<t>However, since the operation is stateless, there is no guarantee that
   the returned path would still be available when path set-up is
   requested: this does not cause major issues when the time between
   path computation and path set-up is short (especially if compared
   with the time that would be needed to update the information of a
   very detailed connectivity matrix).</t>

<t>In most of the cases, there is even no need to guarantee that the
   path that has been set up is the exactly same as the path that has
   been returned by path computation, especially if it has the same or
   even better metrics. Depending on the abstraction level applied by
   the server, the client may also not know the actual computed path.</t>

<t>The most important requirement is that the required global objectives
   (e.g., multi-domain path metrics and constraints) are met. For this
   reason a path verification phase is always necessary to verify that
   the actual path that has been set up meets the global objectives (for
   example in a multi-domain network, the resulting end-to-end path
   meets the required end-to-end metrics and constraints).</t>

<t>In most of the cases, even if the path being set up is not exactly
   the same as the path returned by path computation, its metrics and
   constraints are "good enough" and the path verification passes
   successfully. In the few corner cases where the path verification
   fails, it is possible repeat the whole process (path computation,
   path set-up and path verification).</t>

<t>In case it is required to set up at T2 exactly the same path computed
   at T1, the RPC solution should not be used and, instead, a "compute-
   only" TE tunnel path should be set up, allowing also notifications in
   case the computed path has been changed.</t>

<t>In this case, at time T1, the client (MDSC) creates a TE tunnel in a
   compute-only mode in the running datastore and later, at time T2,
   changes the configuration of that TE tunnel (not to be any more in a
   compute-only mode) to trigger the set-up of the LSP over the path
   which have been computed at time T1 and reported in the operational
   datastore.</t>

<t>It is worth noting that also using the "compute-only" TE tunnel path,
   although increasing the likelihood that the computed path is
   available at path set-up, does not guarantee that because
   notifications may not be reliable or delivered on time. Path
   verification is needed also in this case.</t>

<t>The solution based on "compute-only" TE tunnel path has also the
   following drawbacks:</t>

<t><list style="symbols">
  <t>Several messages required for any path computation</t>
  <t>Requires persistent storage in the underlying controller</t>
  <t>Need for garbage collection for stranded paths</t>
  <t>Process burden to detect changes on the computed paths in order to
provide notifications update</t>
</list></t>

<section anchor="temp-state"><name>Temporary reporting of the computed path state</name>

<t>This section describes an optional extension to the stateless
   behavior of the path computation RPC, where the underlying
   controller, after having received a path computation RPC request,
   maintains some "transient state" associated with the computed path,
   allowing the client to request the set-up of exactly that path, if
   still available.</t>

<t>This is similar to the "compute-only" TE tunnel path solution but, to
   avoid the drawbacks of the stateful approach, is leveraging the path
   computation RPC and the separation between configuration and
   operational datastore, as defined in the NMDA architecture <xref target="RFC8342"/>.</t>

<t>The underlying controller, after having computed a path, as requested
   by a path computation RPC, also creates a TE tunnel instance within
   the operational datastore, to store that computed path. This would be
   similar to a "compute-only" TE tunnel path, with the only difference
   that there is no associated TE tunnel instance within the running
   datastore.</t>

<t>Since the underlying controller stores in the operational datastore
   the computed path based on an abstract topology it exposes, it also
   remembers, internally, which is the actual native path (physical
   path), within its native topology (physical topology), associated
   with that compute-only TE tunnel instance.</t>

<t>Afterwards, the client (e.g., MDSC) can request the set-up of that
   specific path by creating a TE tunnel instance (not in compute-only
   mode) in the running datastore using the same tunnel-name of
   the existing TE tunnel in the operational datastore: this will
   trigger the underlying controller to set up that path, if still
   available.</t>

<t>There are still cases where the path being set up is not exactly the
   same as the path that has been computed:</t>

<t><list style="symbols">
  <t>When the tunnel is configured with path constraints which are not
compatible with the computed path;</t>
  <t>When the tunnel set-up is requested after the resources of the
computed path are no longer available;</t>
  <t>When the tunnel set-up is requested after the computed path is no
longer known (e.g. due to a server reboot) by the underlying
controller.  <vspace blankLines='1'/>
In all these cases, the underlying controller should compute and set
 up a new path.  <vspace blankLines='1'/>
Therefore the "path verification" phase, as described in <xref target="rpc-motivation"/>
 above, is always needed to check that the path that has been set up
 is still "good enough".  <vspace blankLines='1'/>
Since this new approach is not completely stateless, garbage
 collection is implemented using a timeout that, when it expires,
 triggers the removal of the computed path from the operational
 datastore. This operation is fully controlled by the underlying
 controller without the need for any action to be taken by the client
 that is not able to act on the operational datastore. The default
 value of this timeout is 10 minutes but a different value may be
 configured by the client.  <vspace blankLines='1'/>
In addition, it is possible for the client to tag each path
 computation request with a transaction-id allowing for a faster
 removal of all the paths associated with a transaction-id, without
 waiting for their timers to expire.  <vspace blankLines='1'/>
The underlying controller can remove from the operational datastore
 all the paths computed with a given transaction-id which have not
 been set up either when it receives a Path Delete RPC request for
 that transaction-id or, automatically, right after the set-up up of a
 path that has been previously computed with that transaction-id.  <vspace blankLines='1'/>
This possibility is useful when multiple paths are computed but, at
 most, only one is set up (e.g., in multi-domain path computation
 scenario scenarios). After the selected path has been set up (e.g, in
 one domain during multi-domain path set-up), all the other
 alternative computed paths can be automatically deleted by the
 underlying controller (since no longer needed). The client can also
 request, using the Path Delete RPC request, the underlying controller
 to remove all the computed paths, if none of them is going to be set
 up (e.g., in a transit domain not being selected by multi-domain path
 computation and so not being automatically deleted).  <vspace blankLines='1'/>
This approach is complimentary and not alternative to the timer which
 is always needed to avoid stranded computed paths being stored in the
 operational datastore when no path is set up and no explicit Path
 Delete RPC request is received.</t>
</list></t>

</section>
</section>
</section>
<section anchor="path-computation-and-optimization-for-multiple-paths"><name>Path computation and optimization for multiple paths</name>

<t>There are use cases, where it is advantageous to request path
   computation for a set of paths, through a network or through a
   network domain, using a single request <xref target="RFC5440"/>.</t>

<t>In this case, sending a single request for multiple path
   computations, instead of sending multiple requests for each path
   computation, would reduce the protocol overhead and it would consume
   less resources (e.g., threads in the client and server).</t>

<t>In the context of a typical multi-domain TE network, there could
   multiple choices for the ingress/egress points of a domain and the
   Multi-Domain Controller needs to request path computation between all
   the ingress/egress pairs to select the best pair. For example, in the
   example of <xref target="md-uc"/>, the Multi-Domain Controller needs to request
   the TE Network Controller 1 to compute the A-C and the A-D paths and
   to the TE Network Controller 2 to compute the E-H and the F-H paths.</t>

<t>It is also possible that the Multi-Domain Controller receives a
   request to set up a group of multiple end to end connections. The
   Multi-Domain Controller needs to request each TE domain Controller to
   compute multiple paths, one (or more) for each end to end connection.</t>

<t>There are also scenarios where it can be needed to request path
   computation for a set of paths in a synchronized fashion.</t>

<t>One example could be computing multiple diverse paths. Computing a
   set of diverse paths in an unsynchronized fashion, leads to the
   possibility of not being able to satisfy the diversity requirement.
   In this case, it is preferable to compute a sub-optimal primary path
   for which a diversely routed secondary path exists.</t>

<t>There are also scenarios where it is needed to request optimizing a
   set of paths using objective functions that apply to the whole set of
   paths, see <xref target="RFC5541"/>, e.g. to minimize the sum of the costs of all
   the computed paths in the set.</t>

</section>
<section anchor="yang-data-model-for-requesting-path-computation"><name>YANG data model for requesting Path Computation</name>

<t>This document define a YANG RPC to request path computation as an
   "augmentation" of tunnel-rpc, defined in <xref target="I-D.ietf-teas-yang-te"/>. This model
   provides the RPC input attributes that are needed to request path
   computation and the RPC output attributes that are needed to report
   the computed paths.</t>

<figure><artwork type="ascii-art" name="overview.txt"><![CDATA[
     augment /te:tunnels-path-compute/te:input/te:path-compute-info:
       +-- path-request* [request-id]
       |  +-- request-id                            uint32
       |  ...........

     augment /te:tunnels-path-compute/te:output/te:path-compute-result:
       +--ro response* [response-id]
          +--ro response-id                         uint32
          +--ro computed-paths-properties
          |  +--ro computed-path-properties* [k-index]
          |     +--ro k-index            uint8
          |     +--ro path-properties
          |     ...........
]]></artwork></figure>

<t>This model extensively re-uses the grouping defined in <xref target="I-D.ietf-teas-yang-te"/>
   and <xref target="RFC8776"/> to ensure maximal syntax and semantics commonality.</t>

<t>This YANG data model allows one RPC to include multiple path
   requests, each path request being identified by a request-id.
   Therefore, one RPC can return multiple responses, one for each path
   request, being identified by a response-id equal to the corresponding
   request-id. Each response reports one or more computed paths, as
   requested by the k-requested-paths attribute. By default, each
   response reports one computed path.</t>

<section anchor="synchronization-of-multiple-path-computation-requests"><name>Synchronization of multiple path computation requests</name>

<t>The YANG data model permits the synchronization of a set of multiple
   path requests (identified by specific request-id) all related to a
   "svec" container emulating the syntax of the Synchronization VECtor
   (SVEC) PCEP object, defined in <xref target="RFC5440"/>.</t>

<figure><artwork type="ascii-art" name="synchronization.txt"><![CDATA[
       +-- synchronization* []
          +-- svec
          |  +-- relaxable?           boolean
          |  +-- disjointness?        te-path-disjointness
          |  +-- request-id-number*   uint32
          +-- svec-constraints
          |  +-- path-metric-bound* [metric-type]
          |     +-- metric-type    identityref
          |     +-- upper-bound?   uint64
          +-- path-srlgs-lists
          |  +-- path-srlgs-list* [usage]
          |     +-- usage     identityref
          |     +-- values*   srlg
          +-- path-srlgs-names
          |  +-- path-srlgs-name* [usage]
          |     +-- usage    identityref
          |     +-- names*   string
          +-- exclude-objects
          |  +-- excludes* []
          |     +-- (type)?
          |        +--:(numbered-node-hop)
          |        |  +-- numbered-node-hop
          |        |     +-- node-id     te-node-id
          |        |     +-- hop-type?   te-hop-type
          |        +--:(numbered-link-hop)
          |        |  +-- numbered-link-hop
          |        |     +-- link-tp-id    te-tp-id
          |        |     +-- hop-type?     te-hop-type
          |        |     +-- direction?    te-link-direction
          |        +--:(unnumbered-link-hop)
          |        |  +-- unnumbered-link-hop
          |        |     +-- link-tp-id    te-tp-id
          |        |     +-- node-id       te-node-id
          |        |     +-- hop-type?     te-hop-type
          |        |     +-- direction?    te-link-direction
          |        +--:(as-number)
          |        |  +-- as-number-hop
          |        |     +-- as-number    inet:as-number
          |        |     +-- hop-type?    te-hop-type
          |        +--:(label)
          |           +-- label-hop
          |              +-- te-label
          |                 +-- (technology)?
          |                 |  +--:(generic)
          |                 |     +-- generic?
          |                 |             rt-types:generalized-label
          |                 +-- direction?       te-label-direction
          +-- optimizations
             +-- (algorithm)?
                +--:(metric) {te-types:path-optimization-metric}?
                |  +-- optimization-metric* [metric-type]
                |     +-- metric-type    identityref
                |     +-- weight?        uint8
                +--:(objective-function)
                         {te-types:path-optimization-objective-
   function}?
                   +-- objective-function
                      +-- objective-function-type?   identityref
]]></artwork></figure>

<t>The model, in addition to the metric types, defined in <xref target="RFC8776"/>,
   which can be applied to each individual path request, supports also
   additional metric types, which apply to a set of synchronized
   requests, as referenced in <xref target="RFC5541"/>. These additional metric types
   are defined by the following YANG identities:</t>

<t><list style="symbols">
  <t>svec-metric-type: base YANG identity from which cumulative metric
types identities are derived.</t>
  <t>svec-metric-cumul-te: cumulative TE cost metric type, as defined
in <xref target="RFC5541"/>.</t>
  <t>svec-metric-cumul-igp: cumulative IGP cost metric type, as defined
in <xref target="RFC5541"/>.</t>
  <t>svec-metric-cumul-hop: cumulative Hop metric type, representing
the cumulative version of the Hop metric type defined in
<xref target="RFC8776"/>.</t>
  <t>svec-metric-aggregate-bandwidth-consumption: aggregate bandwidth
consumption metric type, as defined in <xref target="RFC5541"/>.</t>
  <t>svec-metric-load-of-the-most-loaded-link: load of the most loaded
link metric type, as defined in <xref target="RFC5541"/>.</t>
</list></t>

</section>
<section anchor="returned-metric-values"><name>Returned metric values</name>

<t>This YANG data model provides a way to return the values of the
   metrics computed by the path computation in the output of RPC,
   together with other important information (e.g. srlg, affinities,
   explicit route), emulating the syntax of the "C" flag of the "METRIC"
   PCEP object <xref target="RFC5440"/>:</t>

<figure><artwork type="ascii-art" name="returned-metrics.txt"><![CDATA[
          |     +--ro path-properties
          |        +--ro path-metric* [metric-type]
          |        |  +--ro metric-type           identityref
          |        |  +--ro accumulative-value?   uint64
          |        +--ro path-affinities-values
          |        |  +--ro path-affinities-value* [usage]
          |        |     +--ro usage    identityref
          |        |     +--ro value?   admin-groups
          |        +--ro path-affinity-names
          |        |  +--ro path-affinity-name* [usage]
          |        |     +--ro usage            identityref
          |        |     +--ro affinity-name* [name]
          |        |        +--ro name    string
          |        +--ro path-srlgs-lists
          |        |  +--ro path-srlgs-list* [usage]
          |        |     +--ro usage     identityref
          |        |     +--ro values*   srlg
          |        +--ro path-srlgs-names
          |        |  +--ro path-srlgs-name* [usage]
          |        |     +--ro usage    identityref
          |        |     +--ro names*   string
          |        +--ro path-route-objects
          |        ...........
          |        +--ro te-bandwidth
          |        |  +--ro (technology)?
          |        |     +--:(generic)
          |        |        +--ro generic?   te-bandwidth
          |        +--ro disjointness-type?
          |                te-types:te-path-disjointness
]]></artwork></figure>

<t>It also allows the client to request which information (metrics, srlg
   and/or affinities) should be returned:</t>

<figure><artwork type="ascii-art" name="requested-metrics.txt"><![CDATA[
       |  +-- request-id                            uint32
       |  ...........
       |  +-- requested-metrics* [metric-type]
       |  |  +-- metric-type    identityref
       |  +-- return-srlgs?                         boolean
       |  +-- return-affinities?                    boolean
       |  ...........
]]></artwork></figure>

<t>This feature is essential for path computation in a multi-domain TE
   network as described in <xref target="md-uc"/>. In this case, the metrics
   returned by a path computation requested to a given underlying
   controller must be used by the client to compute the best end-to-end
   path. If they are missing, the client cannot compare different paths
   calculated by the underlying controllers and choose the best one for
   the optimal end-to-end (e2e) path.</t>

</section>
<section anchor="multiple-paths-requests-for-the-same-te-tunnel"><name>Multiple Paths Requests for the same TE tunnel</name>

<t>The YANG data model allows including multiple requests for different
   paths intended to be used within the same tunnel or within different
   tunnels.</t>

<t>When multiple requested paths are intended to be used within the same
   tunnel (e.g., requesting path computation for the primary and
   secondary paths of a protected tunnel), the set of attributes that
   are intended to be configured on per-tunnel basis rather than on per-
   path basis are common to all these path requests. These attributes
   includes both attributes which can be configured only a per-tunnel
   basis (e.g., tunnel-name, source/destination TTP, encoding and
   switching-type) as well attributes which can be configured both on a
   per-tunnel and on a per-path basis (e.g., the te-bandwidth or the
   associations).</t>

<t>Therefore, a tunnel-attributes list is defined, within the path
   computation request RPC:</t>

<figure><artwork type="ascii-art" name="tunnel-attributes-list.txt"><![CDATA[
       +-- tunnel-attributes* [tunnel-name]
       |  +-- tunnel-name               string
       |  +-- encoding?                 identityref
       |  +-- switching-type?           identityref
       |  +-- source?                   te-types:te-node-id
       |  +-- destination?              te-types:te-node-id
       |  +-- src-tunnel-tp-id?         binary
       |  +-- dst-tunnel-tp-id?         binary
       |  +-- bidirectional?            boolean
       |  +-- association-objects
       |  ...........
       |  +-- protection-type?          identityref
       |  +-- restoration-type?         identityref
       |  +-- restoration-scheme?       identityref
       |  +-- te-topology-identifier
       |  |  +-- provider-id?   te-global-id
       |  |  +-- client-id?     te-global-id
       |  |  +-- topology-id?   te-topology-id
       |  +-- te-bandwidth
       |  |  +-- (technology)?
       |  |     +--:(generic)
       |  |        +-- generic?   te-bandwidth
       |  +-- link-protection?          identityref
       |  +-- setup-priority?           uint8
       |  +-- hold-priority?            uint8
       |  +-- signaling-type?           identityref
       |  +-- hierarchy
       |     +-- dependency-tunnels
       |     ............ 
       |     +-- hierarchical-link
       |     ............ 
]]></artwork></figure>

<t>The path requests that are intended to be used within the same tunnel
   should reference the same entry in the tunnel-attributes list. This
   allows:</t>

<t><list style="symbols">
  <t>avoiding repeating the same set of per-tunnel parameters on
multiple requested paths;</t>
  <t>the server to understand what attributes are intended to be
configured on a per-tunnel basis (e.g., the te-bandwidth
configured in the tunnel-attributes) and what attributes are
intended to be configured on a per-path basis(e.g., the te-
bandwidth configured in the path-request). This could be useful
especially when the server also creates a TE tunnel instance
within the operational datastore to report the computed paths, as
described in <xref target="temp-state"/>: in this case, the tunnel-name is also
used as the suggested name for that TE tunnel instance.  <vspace blankLines='1'/>
The YANG data model allows also including requests for paths intended
 to modify existing tunnels (e.g., adding a protection path for an
 existing un-protected tunnel). In this case, the per-tunnel
 attributes are already provided in an existing TE tunnel instance and
 do not need to be re-configured in the path computation request RPC.
 Therefore, these requests should reference an existing TE tunnel
 instance.  <vspace blankLines='1'/>
It is also possible to request computing paths without indicating in
 which tunnel they are intended to be used (e.g., in case of an
 unprotected tunnel). In this case, the per-tunnel attributes could be
 provided together with the per-path attributes in the path request,
 without using the tunnel-attributes list.  <vspace blankLines='1'/>
The choices below are defined to distinguish the cases above:</t>
  <t>whether the per-tunnel attributes are configured by reference
(providing a leafref), to:  <list style="symbols">
      <t>either a TE tunnel instance, if it exists;</t>
      <t>or to an entry of the tunnel-attributes list, if the TE tunnel
instance does not exist;</t>
    </list></t>
  <t>or by value, providing the set of tunnel attributes within the
path request:</t>
</list></t>

<figure><artwork type="ascii-art" name="tunnel-attributes.txt"><![CDATA[
       |  +-- (tunnel-attributes)?
       |  |  +--:(reference)
       |  |  |  +-- tunnel-reference
       |  |  |     +-- (tunnel-exist)?
       |  |  |     |  +--:(tunnel-ref)
       |  |  |     |  |  +-- tunnel-ref                te:tunnel-ref
       |  |  |     |  +--:(tunnel-attributes-ref)
       |  |  |     |     +-- tunnel-attributes-ref     leafref
       |  |  |     +-- path-name?                      string
       |  |  |     +-- (path-role)
       |  |  |        +--:(primary-path)
       |  |  |         ...........
       |  |  +--:(value)
       |  |     +-- tunnel-name?                    string
       |  |     ...........
       |  |     +-- encoding?                       identityref
       |  |     +-- switching-type?                 identityref
       |  |     ...........
]]></artwork></figure>

<section anchor="tunnel-attributes-specified-by-value"><name>Tunnel attributes specified by value</name>

<t>The (value) case provides the set of attributes that are configured
   only on per-tunnel basis (e.g., tunnel-name, source/destination TTP,
   encoding and switching-type).</t>

<t>In this case, it is assumed that the requested path will be the only
   path within a tunnel.</t>

<t>If the requested path is a transit segment of a multi-domain end-to-
   end path, it can be of any type (primary, secondary, reverse-primary
   or reverse-secondary), as specified by the (path-role) choice:</t>

<figure><artwork type="ascii-art" name="tunnel-by-value.txt"><![CDATA[
       |  |     +-- (path-role)?
       |  |     |  +--:(primary-path)
       |  |     |  +--:(secondary-path)
       |  |     |  |  +-- secondary-path!
       |  |     |  |     +-- primary-path-name?   string
       |  |     |  +--:(primary-reverse-path)
       |  |     |  |  +-- primary-reverse-path!
       |  |     |  |     +-- primary-path-name?   string
       |  |     |  +--:(secondary-reverse-path)
       |  |     |     +-- secondary-reverse-path
       |  |     |        +-- primary-path-name?           string
       |  |     |        +-- primary-reverse-path-name?   string
       |  |     ...........
]]></artwork></figure>

<t>In all the other cases, the requested path can only be a primary
   path.</t>

<t>The secondary-path, the primary-reverse-path and the secondary-
   reverse-path are presence container used to indicate the role of the
   path: by default, the path is assumed to be a primary path.</t>

<t>They optionally can contain the name of the primary-path under which
   the requested path could be associated within the YANG tree structure
   defined in <xref target="I-D.ietf-teas-yang-te"/>, which could be useful when the server also
   creates a TE tunnel instance within the operational datastore to
   report the computed paths, as described in <xref target="temp-state"/>: in this
   case, the tunnel-name and the path names are also used as the
   suggested name for that TE tunnel and path instances.</t>

</section>
<section anchor="tunnel-attributes-specified-by-reference"><name>Tunnel attributes specified by reference</name>

<t>The (reference) case provides the information needed to associate
   multiple path requests that are intended to be used within the same
   tunnel.</t>

<t>In order to indicate the role of the path being requested within the
   intended tunnel (e.g., primary or secondary path), the (path-role)
   choice is defined:</t>

<figure><artwork type="ascii-art" name="tunnel-by-reference.txt"><![CDATA[
       |  |  |     +-- (path-role)
       |  |  |        +--:(primary-path)
       |  |  |        |  +-- primary-path!
       |  |  |        |     ...........
       |  |  |        +--:(secondary-path)
       |  |  |        |  +-- secondary-path
       |  |  |        |     ...........
       |  |  |        +--:(primary-reverse-path)
       |  |  |        |  +-- primary-reverse-path
       |  |  |        |     ...........
       |  |  |        +--:(secondary-reverse-path)
       |  |  |           +-- secondary-reverse-path
       |  |  |              +-- preference?                 uint8
       |  |  |              +-- protection-type?            identityref
       |  |  |              +-- restoration-type?           identityref
       |  |  |              +-- restoration-scheme?         identityref
       |  |  |              +-- primary-reverse-path-ref* []
       |  |  |                 +-- (primary-reverse-path-exist)?
       |  |  |                    +--:(path-ref)
       |  |  |                    |  +-- primary-path-ref    leafref
       |  |  |                    +--:(path-request-ref)
       |  |  |                       +-- path-request-ref    leafref
]]></artwork></figure>

<t>The primary-path is a presence container used to indicate that the
   requested path is intended to be used as a primary path. It can also
   contain some attributes which are configured only on primary paths
   (e.g., the k-requested-paths).</t>

<t>The secondary-path container indicates that the requested path is
   intended to be used as a secondary path and it contains at least
   references to one or more primary paths which can use it as a
   candidate secondary path:</t>

<figure><artwork type="ascii-art" name="secondary-path.txt"><![CDATA[
       |  |  |        |  +-- secondary-path
       |  |  |        |     ...........
       |  |  |        |     +-- primary-path-ref* []
       |  |  |        |        +-- (primary-path-exist)?
       |  |  |        |           +--:(path-ref)
       |  |  |        |           |  +-- primary-path-ref    leafref
       |  |  |        |           +--:(path-request-ref)
       |  |  |        |              +-- path-request-ref    leafref
]]></artwork></figure>

<t>A requested secondary path can reference any requested primary paths,
   and, in case they are intended to be used within an existing TE
   tunnel, it could also reference any existing primary-paths.</t>

<t>The secondary-path container can also contain some attributes which
   are configured only on secondary paths (e.g., the protection-type).</t>

<t>The primary-reverse-path container indicates that the requested path
   is intended to be used as a primary reverse path and it contains only
   the reference to the primary path which is intended to use it as a
   reverse path:</t>

<figure><artwork type="ascii-art" name="primary-reverse-path.txt"><![CDATA[
       |  |  |        |  +-- primary-reverse-path
       |  |  |        |     +-- (primary-path-exist)?
       |  |  |        |        +--:(path-ref)
       |  |  |        |        |  +-- primary-path-ref    leafref
       |  |  |        |        +--:(path-request-ref)
       |  |  |        |           +-- path-request-ref    leafref
]]></artwork></figure>

<t>A requested primary reverse path can reference either a requested
   primary path, or, in case it is intended to be used within an
   existing TE tunnel, an existing primary-path.</t>

<t>The secondary-reverse-path container indicates that the requested
   path is intended to be used as a secondary reverse path and it
   contains at least references to one or more primary paths, whose
   primary reverse path can use it as a candidate secondary reverse
   path:</t>

<figure><artwork type="ascii-art" name="secondary-reverse-path.txt"><![CDATA[
       |  |  |           +-- secondary-reverse-path
       |  |  |              ...........
       |  |  |              +-- primary-reverse-path-ref* []
       |  |  |                 +-- (primary-reverse-path-exist)?
       |  |  |                    +--:(path-ref)
       |  |  |                    |  +-- primary-path-ref    leafref
       |  |  |                    +--:(path-request-ref)
       |  |  |                       +-- path-request-ref    leafref
]]></artwork></figure>

<t>A requested secondary reverse path can reference any requested
   primary paths, and, in case they are intended to be used within an
   existing TE tunnel, it could reference also existing primary-paths.</t>

<t>The secondary-reverse-path container can also contain some attributes
   which are configured only on secondary reverse paths (e.g., the
   protection-type).</t>

<t>In case the requested path is a transit segment of a multi-domain
   end-to-end path, the primary-path may not be needed to be
   setup/computed. However, the request for path computation of a
   secondary-path or a primary-reverse or of a secondary-reverse-path
   requires that the primary-path exists or it is requested within the
   same RPC request. In the latter case, the path request for the
   primary-path should have an empty ERO to indicate to the server that
   path computation is not requested and no path properties will
   therefore be returned in the RPC response.</t>

</section>
</section>
<section anchor="multi-layer-path-computation"><name>Multi-Layer Path Computation</name>

<t>The models supports requesting multi-layer path computation following
   the same approach based on dependency tunnels, as defined in <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>The tunnel-attributes of a given client-layer path request can
   reference server-layer TE tunnels which can already exist in the YANG
   datastore or be specified in the tunnel-attributes list, within the
   same RPC request:</t>

<figure><artwork type="ascii-art" name="dependency-tunnels.txt"><![CDATA[
       |     +-- dependency-tunnels
       |     |  +-- dependency-tunnel* [name]
       |     |  |  +-- name              -> /te:te/tunnels/tunnel/name
       |     |  |  +-- encoding?         identityref
       |     |  |  +-- switching-type?   identityref
       |     |  +-- dependency-tunnel-attributes* [name]
       |     |     +-- name              leafref
       |     |     +-- encoding?         identityref
       |     |     +-- switching-type?   identityref
]]></artwork></figure>

<t>In a similar way as in <xref target="I-D.ietf-teas-yang-te"/>, the server-layer tunnel
   attributes should provide the information of what would be the
   dynamic link in the client layer topology supported by that tunnel,
   if instantiated:</t>

<figure><artwork type="ascii-art" name="hierarchical-link.txt"><![CDATA[
       |     +-- hierarchical-link
       |        +-- local-te-node-id?         te-types:te-node-id
       |        +-- local-te-link-tp-id?      te-types:te-tp-id
       |        +-- remote-te-node-id?        te-types:te-node-id
       |        +-- te-topology-identifier
       |           +-- provider-id?   te-global-id
       |           +-- client-id?     te-global-id
       |           +-- topology-id?   te-topology-id
]]></artwork></figure>

<t>It is worth noting that since path computation RPC is stateless, the
   dynamic hierarchical links configured for the server-layer tunnel
   attributes cannot be used for path computation of any client-layer
   path unless explicitly referenced in the dependency-tunnel-attributes
   list within the same RPC request.</t>

</section>
</section>
<section anchor="yang-data-model-for-te-path-computation"><name>YANG data model for TE path computation</name>

<section anchor="pc-tree"><name>Tree diagram</name>

<t><xref target="fig-pc-tree"/> below shows the tree diagram of the YANG data model defined
   in module ietf-te-path-computation.yang, defined in <xref target="pc-yang"/>.</t>

<figure title="TE path computation tree diagram" anchor="fig-pc-tree"><artwork type="ascii-art" name="ietf-te-path-computation.tree"><![CDATA[
module: ietf-te-path-computation

  augment /te:tunnels-path-compute/te:input/te:path-compute-info:
    +-- path-request* [request-id]
    |  +-- request-id                            uint32
    |  +-- (tunnel-attributes)?
    |  |  +--:(reference)
    |  |  |  +-- tunnel-reference
    |  |  |     +-- (tunnel-exist)?
    |  |  |     |  +--:(tunnel-ref)
    |  |  |     |  |  +-- tunnel-ref                te:tunnel-ref
    |  |  |     |  +--:(tunnel-attributes-ref)
    |  |  |     |     +-- tunnel-attributes-ref     leafref
    |  |  |     +-- path-name?                      string
    |  |  |     +-- (path-role)
    |  |  |        +--:(primary-path)
    |  |  |        |  +-- primary-path!
    |  |  |        |     +-- preference?          uint8
    |  |  |        |     +-- k-requested-paths?   uint8
    |  |  |        +--:(secondary-path)
    |  |  |        |  +-- secondary-path
    |  |  |        |     +-- preference?           uint8
    |  |  |        |     +-- protection-type?      identityref
    |  |  |        |     +-- restoration-type?     identityref
    |  |  |        |     +-- restoration-scheme?   identityref
    |  |  |        |     +-- primary-path-ref* []
    |  |  |        |        +-- (primary-path-exist)?
    |  |  |        |           +--:(path-ref)
    |  |  |        |           |  +-- primary-path-ref    leafref
    |  |  |        |           +--:(path-request-ref)
    |  |  |        |              +-- path-request-ref    leafref
    |  |  |        +--:(primary-reverse-path)
    |  |  |        |  +-- primary-reverse-path
    |  |  |        |     +-- (primary-path-exist)?
    |  |  |        |        +--:(path-ref)
    |  |  |        |        |  +-- primary-path-ref    leafref
    |  |  |        |        +--:(path-request-ref)
    |  |  |        |           +-- path-request-ref    leafref
    |  |  |        +--:(secondary-reverse-path)
    |  |  |           +-- secondary-reverse-path
    |  |  |              +-- preference?                 uint8
    |  |  |              +-- protection-type?            identityref
    |  |  |              +-- restoration-type?           identityref
    |  |  |              +-- restoration-scheme?         identityref
    |  |  |              +-- primary-reverse-path-ref* []
    |  |  |                 +-- (primary-reverse-path-exist)?
    |  |  |                    +--:(path-ref)
    |  |  |                    |  +-- primary-path-ref    leafref
    |  |  |                    +--:(path-request-ref)
    |  |  |                       +-- path-request-ref    leafref
    |  |  +--:(value)
    |  |     +-- tunnel-name?                    string
    |  |     +-- path-name?                      string
    |  |     +-- (path-role)?
    |  |     |  +--:(primary-path)
    |  |     |  +--:(secondary-path)
    |  |     |  |  +-- secondary-path!
    |  |     |  |     +-- primary-path-name?   string
    |  |     |  +--:(primary-reverse-path)
    |  |     |  |  +-- primary-reverse-path!
    |  |     |  |     +-- primary-path-name?   string
    |  |     |  +--:(secondary-reverse-path)
    |  |     |     +-- secondary-reverse-path!
    |  |     |        +-- primary-path-name?           string
    |  |     |        +-- primary-reverse-path-name?   string
    |  |     +-- k-requested-paths?              uint8
    |  |     +-- encoding?                       identityref
    |  |     +-- switching-type?                 identityref
    |  |     +-- source?                         te-types:te-node-id
    |  |     +-- destination?                    te-types:te-node-id
    |  |     +-- src-tunnel-tp-id?               binary
    |  |     +-- dst-tunnel-tp-id?               binary
    |  |     +-- bidirectional?                  boolean
    |  |     +-- te-topology-identifier
    |  |        +-- provider-id?   te-global-id
    |  |        +-- client-id?     te-global-id
    |  |        +-- topology-id?   te-topology-id
    |  +-- association-objects
    |  |  +-- association-object* [association-key]
    |  |  |  +-- association-key    string
    |  |  |  +-- type?              identityref
    |  |  |  +-- id?                uint16
    |  |  |  +-- source
    |  |  |     +-- id?     te-gen-node-id
    |  |  |     +-- type?   enumeration
    |  |  +-- association-object-extended* [association-key]
    |  |     +-- association-key    string
    |  |     +-- type?              identityref
    |  |     +-- id?                uint16
    |  |     +-- source
    |  |     |  +-- id?     te-gen-node-id
    |  |     |  +-- type?   enumeration
    |  |     +-- global-source?     uint32
    |  |     +-- extended-id?       yang:hex-string
    |  +-- optimizations
    |  |  +-- (algorithm)?
    |  |     +--:(metric) {path-optimization-metric}?
    |  |     |  +-- optimization-metric* [metric-type]
    |  |     |  |  +-- metric-type                       identityref
    |  |     |  |  +-- weight?                           uint8
    |  |     |  |  +-- explicit-route-exclude-objects
    |  |     |  |  |  +-- route-object-exclude-object* [index]
    |  |     |  |  |     +-- index                        uint32
    |  |     |  |  |     +-- (type)?
    |  |     |  |  |        +--:(numbered-node-hop)
    |  |     |  |  |        |  +-- numbered-node-hop
    |  |     |  |  |        |     +-- node-id     te-node-id
    |  |     |  |  |        |     +-- hop-type?   te-hop-type
    |  |     |  |  |        +--:(numbered-link-hop)
    |  |     |  |  |        |  +-- numbered-link-hop
    |  |     |  |  |        |     +-- link-tp-id    te-tp-id
    |  |     |  |  |        |     +-- hop-type?     te-hop-type
    |  |     |  |  |        |     +-- direction?    te-link-direction
    |  |     |  |  |        +--:(unnumbered-link-hop)
    |  |     |  |  |        |  +-- unnumbered-link-hop
    |  |     |  |  |        |     +-- link-tp-id    te-tp-id
    |  |     |  |  |        |     +-- node-id       te-node-id
    |  |     |  |  |        |     +-- hop-type?     te-hop-type
    |  |     |  |  |        |     +-- direction?    te-link-direction
    |  |     |  |  |        +--:(as-number)
    |  |     |  |  |        |  +-- as-number-hop
    |  |     |  |  |        |     +-- as-number    inet:as-number
    |  |     |  |  |        |     +-- hop-type?    te-hop-type
    |  |     |  |  |        +--:(label)
    |  |     |  |  |        |  +-- label-hop
    |  |     |  |  |        |     +-- te-label
    |  |     |  |  |        |        +-- (technology)?
    |  |     |  |  |        |        |  +--:(generic)
    |  |     |  |  |        |        |     +-- generic?
    |  |     |  |  |        |        |             rt-types:generalized-label
    |  |     |  |  |        |        +-- direction?
    |  |     |  |  |        |                te-label-direction
    |  |     |  |  |        +--:(srlg)
    |  |     |  |  |           +-- srlg
    |  |     |  |  |              +-- srlg?   uint32
    |  |     |  |  +-- explicit-route-include-objects
    |  |     |  |     +-- route-object-include-object* [index]
    |  |     |  |        +-- index                        uint32
    |  |     |  |        +-- (type)?
    |  |     |  |           +--:(numbered-node-hop)
    |  |     |  |           |  +-- numbered-node-hop
    |  |     |  |           |     +-- node-id     te-node-id
    |  |     |  |           |     +-- hop-type?   te-hop-type
    |  |     |  |           +--:(numbered-link-hop)
    |  |     |  |           |  +-- numbered-link-hop
    |  |     |  |           |     +-- link-tp-id    te-tp-id
    |  |     |  |           |     +-- hop-type?     te-hop-type
    |  |     |  |           |     +-- direction?    te-link-direction
    |  |     |  |           +--:(unnumbered-link-hop)
    |  |     |  |           |  +-- unnumbered-link-hop
    |  |     |  |           |     +-- link-tp-id    te-tp-id
    |  |     |  |           |     +-- node-id       te-node-id
    |  |     |  |           |     +-- hop-type?     te-hop-type
    |  |     |  |           |     +-- direction?    te-link-direction
    |  |     |  |           +--:(as-number)
    |  |     |  |           |  +-- as-number-hop
    |  |     |  |           |     +-- as-number    inet:as-number
    |  |     |  |           |     +-- hop-type?    te-hop-type
    |  |     |  |           +--:(label)
    |  |     |  |              +-- label-hop
    |  |     |  |                 +-- te-label
    |  |     |  |                    +-- (technology)?
    |  |     |  |                    |  +--:(generic)
    |  |     |  |                    |     +-- generic?
    |  |     |  |                    |             rt-types:generalized-label
    |  |     |  |                    +-- direction?
    |  |     |  |                            te-label-direction
    |  |     |  +-- tiebreakers
    |  |     |     +-- tiebreaker* [tiebreaker-type]
    |  |     |        +-- tiebreaker-type    identityref
    |  |     +--:(objective-function)
    |  |              {path-optimization-objective-function}?
    |  |        +-- objective-function
    |  |           +-- objective-function-type?   identityref
    |  +-- named-path-constraint?                leafref
    |  |       {te-types:named-path-constraints}?
    |  +-- te-bandwidth
    |  |  +-- (technology)?
    |  |     +--:(generic)
    |  |        +-- generic?   te-bandwidth
    |  +-- link-protection?                      identityref
    |  +-- setup-priority?                       uint8
    |  +-- hold-priority?                        uint8
    |  +-- signaling-type?                       identityref
    |  +-- path-metric-bounds
    |  |  +-- path-metric-bound* [metric-type]
    |  |     +-- metric-type    identityref
    |  |     +-- upper-bound?   uint64
    |  +-- path-affinities-values
    |  |  +-- path-affinities-value* [usage]
    |  |     +-- usage    identityref
    |  |     +-- value?   admin-groups
    |  +-- path-affinity-names
    |  |  +-- path-affinity-name* [usage]
    |  |     +-- usage            identityref
    |  |     +-- affinity-name* [name]
    |  |        +-- name    string
    |  +-- path-srlgs-lists
    |  |  +-- path-srlgs-list* [usage]
    |  |     +-- usage     identityref
    |  |     +-- values*   srlg
    |  +-- path-srlgs-names
    |  |  +-- path-srlgs-name* [usage]
    |  |     +-- usage    identityref
    |  |     +-- names*   string
    |  +-- disjointness?                         te-path-disjointness
    |  +-- explicit-route-objects-always
    |  |  +-- route-object-exclude-always* [index]
    |  |  |  +-- index                        uint32
    |  |  |  +-- (type)?
    |  |  |     +--:(numbered-node-hop)
    |  |  |     |  +-- numbered-node-hop
    |  |  |     |     +-- node-id     te-node-id
    |  |  |     |     +-- hop-type?   te-hop-type
    |  |  |     +--:(numbered-link-hop)
    |  |  |     |  +-- numbered-link-hop
    |  |  |     |     +-- link-tp-id    te-tp-id
    |  |  |     |     +-- hop-type?     te-hop-type
    |  |  |     |     +-- direction?    te-link-direction
    |  |  |     +--:(unnumbered-link-hop)
    |  |  |     |  +-- unnumbered-link-hop
    |  |  |     |     +-- link-tp-id    te-tp-id
    |  |  |     |     +-- node-id       te-node-id
    |  |  |     |     +-- hop-type?     te-hop-type
    |  |  |     |     +-- direction?    te-link-direction
    |  |  |     +--:(as-number)
    |  |  |     |  +-- as-number-hop
    |  |  |     |     +-- as-number    inet:as-number
    |  |  |     |     +-- hop-type?    te-hop-type
    |  |  |     +--:(label)
    |  |  |        +-- label-hop
    |  |  |           +-- te-label
    |  |  |              +-- (technology)?
    |  |  |              |  +--:(generic)
    |  |  |              |     +-- generic?
    |  |  |              |             rt-types:generalized-label
    |  |  |              +-- direction?       te-label-direction
    |  |  +-- route-object-include-exclude* [index]
    |  |     +-- explicit-route-usage?        identityref
    |  |     +-- index                        uint32
    |  |     +-- (type)?
    |  |        +--:(numbered-node-hop)
    |  |        |  +-- numbered-node-hop
    |  |        |     +-- node-id     te-node-id
    |  |        |     +-- hop-type?   te-hop-type
    |  |        +--:(numbered-link-hop)
    |  |        |  +-- numbered-link-hop
    |  |        |     +-- link-tp-id    te-tp-id
    |  |        |     +-- hop-type?     te-hop-type
    |  |        |     +-- direction?    te-link-direction
    |  |        +--:(unnumbered-link-hop)
    |  |        |  +-- unnumbered-link-hop
    |  |        |     +-- link-tp-id    te-tp-id
    |  |        |     +-- node-id       te-node-id
    |  |        |     +-- hop-type?     te-hop-type
    |  |        |     +-- direction?    te-link-direction
    |  |        +--:(as-number)
    |  |        |  +-- as-number-hop
    |  |        |     +-- as-number    inet:as-number
    |  |        |     +-- hop-type?    te-hop-type
    |  |        +--:(label)
    |  |        |  +-- label-hop
    |  |        |     +-- te-label
    |  |        |        +-- (technology)?
    |  |        |        |  +--:(generic)
    |  |        |        |     +-- generic?
    |  |        |        |             rt-types:generalized-label
    |  |        |        +-- direction?       te-label-direction
    |  |        +--:(srlg)
    |  |           +-- srlg
    |  |              +-- srlg?   uint32
    |  +-- path-in-segment!
    |  |  +-- label-restrictions
    |  |     +-- label-restriction* [index]
    |  |        +-- restriction?    enumeration
    |  |        +-- index           uint32
    |  |        +-- label-start
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-end
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-step
    |  |        |  +-- (technology)?
    |  |        |     +--:(generic)
    |  |        |        +-- generic?   int32
    |  |        +-- range-bitmap?   yang:hex-string
    |  +-- path-out-segment!
    |  |  +-- label-restrictions
    |  |     +-- label-restriction* [index]
    |  |        +-- restriction?    enumeration
    |  |        +-- index           uint32
    |  |        +-- label-start
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-end
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-step
    |  |        |  +-- (technology)?
    |  |        |     +--:(generic)
    |  |        |        +-- generic?   int32
    |  |        +-- range-bitmap?   yang:hex-string
    |  +-- requested-metrics* [metric-type]
    |  |  +-- metric-type    identityref
    |  +-- return-srlgs?                         boolean
    |  +-- return-affinities?                    boolean
    |  +-- requested-state!
    |     +-- timer?            uint16
    |     +-- transaction-id?   string
    +-- tunnel-attributes* [tunnel-name]
    |  +-- tunnel-name               string
    |  +-- encoding?                 identityref
    |  +-- switching-type?           identityref
    |  +-- source?                   te-types:te-node-id
    |  +-- destination?              te-types:te-node-id
    |  +-- src-tunnel-tp-id?         binary
    |  +-- dst-tunnel-tp-id?         binary
    |  +-- bidirectional?            boolean
    |  +-- association-objects
    |  |  +-- association-object* [association-key]
    |  |  |  +-- association-key    string
    |  |  |  +-- type?              identityref
    |  |  |  +-- id?                uint16
    |  |  |  +-- source
    |  |  |     +-- id?     te-gen-node-id
    |  |  |     +-- type?   enumeration
    |  |  +-- association-object-extended* [association-key]
    |  |     +-- association-key    string
    |  |     +-- type?              identityref
    |  |     +-- id?                uint16
    |  |     +-- source
    |  |     |  +-- id?     te-gen-node-id
    |  |     |  +-- type?   enumeration
    |  |     +-- global-source?     uint32
    |  |     +-- extended-id?       yang:hex-string
    |  +-- protection-type?          identityref
    |  +-- restoration-type?         identityref
    |  +-- restoration-scheme?       identityref
    |  +-- te-topology-identifier
    |  |  +-- provider-id?   te-global-id
    |  |  +-- client-id?     te-global-id
    |  |  +-- topology-id?   te-topology-id
    |  +-- te-bandwidth
    |  |  +-- (technology)?
    |  |     +--:(generic)
    |  |        +-- generic?   te-bandwidth
    |  +-- link-protection?          identityref
    |  +-- setup-priority?           uint8
    |  +-- hold-priority?            uint8
    |  +-- signaling-type?           identityref
    |  +-- hierarchy
    |     +-- dependency-tunnels
    |     |  +-- dependency-tunnel* [name]
    |     |  |  +-- name              -> /te:te/tunnels/tunnel/name
    |     |  |  +-- encoding?         identityref
    |     |  |  +-- switching-type?   identityref
    |     |  +-- dependency-tunnel-attributes* [name]
    |     |     +-- name              leafref
    |     |     +-- encoding?         identityref
    |     |     +-- switching-type?   identityref
    |     +-- hierarchical-link
    |        +-- local-te-node-id?         te-types:te-node-id
    |        +-- local-te-link-tp-id?      te-types:te-tp-id
    |        +-- remote-te-node-id?        te-types:te-node-id
    |        +-- te-topology-identifier
    |           +-- provider-id?   te-global-id
    |           +-- client-id?     te-global-id
    |           +-- topology-id?   te-topology-id
    +-- synchronization* []
       +-- svec
       |  +-- relaxable?           boolean
       |  +-- disjointness?        te-path-disjointness
       |  +-- request-id-number*   uint32
       +-- svec-constraints
       |  +-- path-metric-bound* [metric-type]
       |     +-- metric-type    identityref
       |     +-- upper-bound?   uint64
       +-- path-srlgs-lists
       |  +-- path-srlgs-list* [usage]
       |     +-- usage     identityref
       |     +-- values*   srlg
       +-- path-srlgs-names
       |  +-- path-srlgs-name* [usage]
       |     +-- usage    identityref
       |     +-- names*   string
       +-- exclude-objects
       |  +-- excludes* []
       |     +-- (type)?
       |        +--:(numbered-node-hop)
       |        |  +-- numbered-node-hop
       |        |     +-- node-id     te-node-id
       |        |     +-- hop-type?   te-hop-type
       |        +--:(numbered-link-hop)
       |        |  +-- numbered-link-hop
       |        |     +-- link-tp-id    te-tp-id
       |        |     +-- hop-type?     te-hop-type
       |        |     +-- direction?    te-link-direction
       |        +--:(unnumbered-link-hop)
       |        |  +-- unnumbered-link-hop
       |        |     +-- link-tp-id    te-tp-id
       |        |     +-- node-id       te-node-id
       |        |     +-- hop-type?     te-hop-type
       |        |     +-- direction?    te-link-direction
       |        +--:(as-number)
       |        |  +-- as-number-hop
       |        |     +-- as-number    inet:as-number
       |        |     +-- hop-type?    te-hop-type
       |        +--:(label)
       |           +-- label-hop
       |              +-- te-label
       |                 +-- (technology)?
       |                 |  +--:(generic)
       |                 |     +-- generic?
       |                 |             rt-types:generalized-label
       |                 +-- direction?       te-label-direction
       +-- optimizations
          +-- (algorithm)?
             +--:(metric) {te-types:path-optimization-metric}?
             |  +-- optimization-metric* [metric-type]
             |     +-- metric-type    identityref
             |     +-- weight?        uint8
             +--:(objective-function)
                      {te-types:path-optimization-objective-function}?
                +-- objective-function
                   +-- objective-function-type?   identityref
  augment /te:tunnels-path-compute/te:output/te:path-compute-result:
    +--ro response* [response-id]
       +--ro response-id                         uint32
       +--ro computed-paths-properties
       |  +--ro computed-path-properties* [k-index]
       |     +--ro k-index            uint8
       |     +--ro path-properties
       |        +--ro path-metric* [metric-type]
       |        |  +--ro metric-type           identityref
       |        |  +--ro accumulative-value?   uint64
       |        +--ro path-affinities-values
       |        |  +--ro path-affinities-value* [usage]
       |        |     +--ro usage    identityref
       |        |     +--ro value?   admin-groups
       |        +--ro path-affinity-names
       |        |  +--ro path-affinity-name* [usage]
       |        |     +--ro usage            identityref
       |        |     +--ro affinity-name* [name]
       |        |        +--ro name    string
       |        +--ro path-srlgs-lists
       |        |  +--ro path-srlgs-list* [usage]
       |        |     +--ro usage     identityref
       |        |     +--ro values*   srlg
       |        +--ro path-srlgs-names
       |        |  +--ro path-srlgs-name* [usage]
       |        |     +--ro usage    identityref
       |        |     +--ro names*   string
       |        +--ro path-route-objects
       |        |  +--ro path-route-object* [index]
       |        |     +--ro index                        uint32
       |        |     +--ro (type)?
       |        |        +--:(numbered-node-hop)
       |        |        |  +--ro numbered-node-hop
       |        |        |     +--ro node-id     te-node-id
       |        |        |     +--ro hop-type?   te-hop-type
       |        |        +--:(numbered-link-hop)
       |        |        |  +--ro numbered-link-hop
       |        |        |     +--ro link-tp-id    te-tp-id
       |        |        |     +--ro hop-type?     te-hop-type
       |        |        |     +--ro direction?    te-link-direction
       |        |        +--:(unnumbered-link-hop)
       |        |        |  +--ro unnumbered-link-hop
       |        |        |     +--ro link-tp-id    te-tp-id
       |        |        |     +--ro node-id       te-node-id
       |        |        |     +--ro hop-type?     te-hop-type
       |        |        |     +--ro direction?    te-link-direction
       |        |        +--:(as-number)
       |        |        |  +--ro as-number-hop
       |        |        |     +--ro as-number    inet:as-number
       |        |        |     +--ro hop-type?    te-hop-type
       |        |        +--:(label)
       |        |           +--ro label-hop
       |        |              +--ro te-label
       |        |                 +--ro (technology)?
       |        |                 |  +--:(generic)
       |        |                 |     +--ro generic?
       |        |                 |             rt-types:generalized-label
       |        |                 +--ro direction?
       |        |                         te-label-direction
       |        +--ro te-bandwidth
       |        |  +--ro (technology)?
       |        |     +--:(generic)
       |        |        +--ro generic?   te-bandwidth
       |        +--ro disjointness-type?
       |                te-types:te-path-disjointness
       +--ro computed-path-error-infos
       |  +--ro computed-path-error-info* []
       |     +--ro error-description?   string
       |     +--ro error-timestamp?     yang:date-and-time
       |     +--ro error-reason?        identityref
       +--ro tunnel-ref?                         te:tunnel-ref
       +--ro (path-role)?
          +--:(primary)
          |  +--ro primary-path-ref?             leafref
          +--:(primary-reverse)
          |  +--ro primary-reverse-path-ref?     leafref
          +--:(secondary)
          |  +--ro secondary-path-ref?           leafref
          +--:(secondary-reverse)
             +--ro secondary-reverse-path-ref?   leafref
  augment /te:tunnels-actions/te:input/te:tunnel-info/te:filter-type:
    +--:(path-compute-transactions)
       +-- path-compute-transaction-id*   string
  augment /te:tunnels-actions/te:output:
    +--ro path-computed-delete-result
       +--ro path-compute-transaction-id*   string
]]></artwork></figure>

</section>
<section anchor="pc-yang"><name>YANG module</name>

<figure title="TE path computation YANG module" anchor="fig-pc-yang"><sourcecode type="yang" markers="true" name="ietf-te-path-computation@2022-01-24.yang"><![CDATA[
module ietf-te-path-computation {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-te-path-computation";
  prefix te-pc;

  import ietf-te {
    prefix te;
    reference
      "RFCYYYY: A YANG Data Model for Traffic Engineering Tunnels
       and Interfaces";
  }

  /* Note: The RFC Editor will replace YYYY with the number assigned
     to the RFC once draft-ietf-teas-yang-te becomes an RFC.*/

  import ietf-te-types {
    prefix te-types;
    reference
      "RFC8776: Common YANG Data Types for Traffic Engineering.";
  }

  organization
    "Traffic Engineering Architecture and Signaling (TEAS)
     Working Group";
  contact
    "WG Web:   <http://tools.ietf.org/wg/teas/>
     WG List:  <mailto:teas@ietf.org>

     Editor:   Italo Busi
               <mailto:italo.busi@huawei.com>

     Editor:   Sergio Belotti
               <mailto:sergio.belotti@nokia.com>

     Editor:   Victor Lopez
               <mailto:victor.lopez@nokia.com>

     Editor:   Oscar Gonzalez de Dios
               <mailto:oscar.gonzalezdedios@telefonica.com>

     Editor:   Anurag Sharma
               <mailto:ansha@google.com>

     Editor:   Yan Shi
               <mailto:shiyan49@chinaunicom.cn>

     Editor:   Ricard Vilalta
               <mailto:ricard.vilalta@cttc.es>

     Editor:   Karthik Sethuraman
               <mailto:karthik.sethuraman@necam.com>

     Editor:   Michael Scharf
               <mailto:michael.scharf@gmail.com>

     Editor:   Daniele Ceccarelli
               <mailto:daniele.ceccarelli@ericsson.com>
     
    ";
  description
    "This module defines a YANG data model for requesting Traffic
     Engineering (TE) path computation. The YANG model defined in
     this document is based on RPCs augmenting the RPCs defined in
     the generic TE module (ietf-te).
     The model fully conforms to the
     Network Management Datastore Architecture (NMDA).

     Copyright (c) 2022 IETF Trust and the persons
     identified as authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject
     to the license terms contained in, the Simplified BSD License
     set forth in Section 4.c of the IETF Trust's Legal Provisions

     Relating to IETF Documents
     (http://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC XXXX; see
     the RFC itself for full legal notices.";

  // RFC Ed.: replace XXXX with actual RFC number and remove
  // this note
  // replace the revision date with the module publication date
  // the format is (year-month-day)

  revision 2022-01-24 {
    description
      "Initial revision";
    reference
      "RFC XXXX: A YANG Data Model for requesting path computation";
  }

  // RFC Ed.: replace XXXX with actual RFC number and remove
  // this note

  /*
   * Identities
   */

  identity svec-metric-type {
    description
      "Base identity for SVEC metric type.";
    reference
      "RFC5541: Encoding of Objective Functions in the Path
       Computation Element Communication Protocol (PCEP).";
  }

  identity svec-metric-cumul-te {
    base svec-metric-type;
    description
      "Cumulative TE cost.";
    reference
      "RFC5541: Encoding of Objective Functions in the Path
       Computation Element Communication Protocol (PCEP).";
  }

  identity svec-metric-cumul-igp {
    base svec-metric-type;
    description
      "Cumulative IGP cost.";
    reference
      "RFC5541: Encoding of Objective Functions in the Path
       Computation Element Communication Protocol (PCEP).";
  }

  identity svec-metric-cumul-hop {
    base svec-metric-type;
    description
      "Cumulative Hop path metric.";
    reference
      "RFC8776: Common YANG Data Types for Traffic Engineering.";
  }

  identity svec-metric-aggregate-bandwidth-consumption {
    base svec-metric-type;
    description
      "Aggregate bandwidth consumption.";
    reference
      "RFC5541: Encoding of Objective Functions in the Path
       Computation Element Communication Protocol (PCEP).";
  }

  identity svec-metric-load-of-the-most-loaded-link {
    base svec-metric-type;
    description
      "Load of the most loaded link.";
    reference
      "RFC5541: Encoding of Objective Functions in the Path
       Computation Element Communication Protocol (PCEP).";
  }

  identity tunnel-action-path-compute-delete {
    base te:tunnel-actions-type;
    description
      "Action type to delete the transient states
       of computed paths, as described in section 3.3.1 of
       RFC XXXX.";
    reference
      "RFC XXXX: A YANG Data Model for requesting path computation";
  }

  /*
   * Groupings
   */

  grouping protection-restoration-properties {
    description
      "This grouping defines the restoration and protection types
       for a path in the path computation request.";
    leaf protection-type {
      type identityref {
        base te-types:lsp-protection-type;
      }
      default "te-types:lsp-protection-unprotected";
      description
        "LSP protection type.";
    }
    leaf restoration-type {
      type identityref {
        base te-types:lsp-restoration-type;
      }
      default "te-types:lsp-restoration-restore-any";
      description
        "LSP restoration type.";
    }
    leaf restoration-scheme {
      type identityref {
        base te-types:restoration-scheme-type;
      }
      default "te-types:restoration-scheme-preconfigured";
      description
        "LSP restoration scheme.";
    }
  } // grouping protection-restoration-properties

  grouping requested-info {
    description
      "This grouping defines the information (e.g., metrics)
       which is requested, in the path computation request, to be
       returned in the path computation response.";
    list requested-metrics {
      key "metric-type";
      description
        "The list of the requested metrics.
         The metrics listed here must be returned in the response.
         Returning other metrics in the response is optional.";
      leaf metric-type {
        type identityref {
          base te-types:path-metric-type;
        }
        description
          "The metric that must be returned in the response";
      }
    }
    leaf return-srlgs {
      type boolean;
      default "false";
      description
        "If true, path srlgs must be returned in the response.
         If false, returning path srlgs in the response optional.";
    }
    leaf return-affinities {
      type boolean;
      default "false";
      description
        "If true, path affinities must be returned in the response.
         If false, returning path affinities in the response is
         optional.";
    }
  } // grouping requested-info

  grouping requested-state {
    description
      "Configuration for the transient state used
       to report the computed path";
    container requested-state {
      presence
        "Request temporary reporting of the computed path state";
      description
        "Configures attributes for the temporary reporting of the
         computed path state (e.g., expiration timer).";
      leaf timer {
        type uint16;
        units "minutes";
        default "10";
        description
          "The timeout after which the transient state reporting
          the computed path should be removed.";
      }
      leaf transaction-id {
        type string;
        description
          "The transaction-id associated with this path computation
          to be used for fast deletion of the transient states
          associated with multiple path computations.

          This transaction-id can be used to explicitly delete all
          the transient states of all the computed paths associated
          with the same transaction-id.

          When one path associated with a transaction-id is setup,
          the transient states of all the other computed paths
          with the same transaction-id are automatically removed.

          If not specified, the transient state is removed only
          when the timer expires (when the timer is specified)
          or not created at all (stateless path computation,
          when the timer is not specified).";
      }
    }
  } // grouping requested-state

  grouping reported-state {
    description
      "This grouping defines the information, returned in the path
       computation response, reporting the transient state related
       to the computed path";
    leaf tunnel-ref {
      type te:tunnel-ref;
      description
        "
         Reference to the tunnel that reports the transient state
         of the computed path.

         If no transient state is created, this attribute is
         omitted.
        ";
    }
    choice path-role {
      description
        "The transient state of the computed path can be reported
         as a primary, primary-reverse, secondary or
         a secondary-reverse path of a te-tunnel";
      case primary {
        leaf primary-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:primary-paths/te:primary-path/"
               + "te:name";
          }
          must '../tunnel-ref' {
            description
              "The primary-path name can only be reported
               if also the tunnel name is reported.";
          }
          description
            "
             Reference to the primary-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case primary
      case primary-reverse {
        leaf primary-reverse-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:primary-paths/te:primary-path/"
               + "te:name";
          }
          must '../tunnel-ref' {
            description
              "The primary-reverse-path name can only be reported
               if also the tunnel name is reported.";
          }
          description
            "
             Reference to the primary-reverse-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case primary-reverse
      case secondary {
        leaf secondary-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:secondary-paths/te:secondary-path/"
               + "te:name";
          }
          must '../tunnel-ref' {
            description
              "The secondary-path name can only be reported
               if also the tunnel name is reported.";
          }
          description
            "
             Reference to the secondary-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case secondary
      case secondary-reverse {
        leaf secondary-reverse-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:secondary-reverse-paths/"
               + "te:secondary-reverse-path/te:name";
          }
          must '../tunnel-ref' {
            description
              "The secondary-reverse-path name can only be reported
               if also the tunnel name is reported.";
          }
          description
            "
             Reference to the secondary-reverse-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case secondary
    } // choice path
  } // grouping reported-state

  grouping synchronization-constraints {
    description
      "Global constraints applicable to synchronized path
       computation requests.";
    container svec-constraints {
      description
        "global svec constraints";
      list path-metric-bound {
        key "metric-type";
        description
          "list of bound metrics";
        leaf metric-type {
          type identityref {
            base svec-metric-type;
          }
          description
            "SVEC metric type.";
          reference
            "RFC5541: Encoding of Objective Functions in the Path
            Computation Element Communication Protocol (PCEP).";
        }
        leaf upper-bound {
          type uint64;
          description
            "Upper bound on SVEC metric";
        }
      }
    }
    uses te-types:generic-path-srlgs;
    container exclude-objects {
      description
        "Resources to be excluded";
      list excludes {
        description
          "List of Explicit Route Objects to always exclude
           from synchronized path computation";
        uses te-types:explicit-route-hop;
      }
    }
  } // grouping synchronization-constraints

  grouping synchronization-optimization {
    description
      "Optimizations applicable to synchronized path
       computation requests.";
    container optimizations {
      description
        "The objective function container that includes attributes
         to impose when computing a synchronized set of paths";
      choice algorithm {
        description
          "Optimizations algorithm.";
        case metric {
          if-feature "te-types:path-optimization-metric";
          list optimization-metric {
            key "metric-type";
            description
              "svec path metric type";
            leaf metric-type {
              type identityref {
                base svec-metric-type;
              }
              description
                "TE path metric type usable for computing a set of
                synchronized requests";
            }
            leaf weight {
              type uint8;
              description
                "Metric normalization weight";
            }
          }
        }
        case objective-function {
          if-feature
            "te-types:path-optimization-objective-function";
          container objective-function {
            description
              "The objective function container that includes
               attributes to impose when computing a TE path";
            leaf objective-function-type {
              type identityref {
                base te-types:objective-function-type;
              }
              default "te-types:of-minimize-cost-path";
              description
                "Objective function entry";
            }
          }
        }
      }
    }
  } // grouping synchronization-optimization

  grouping synchronization-info {
    description
      "Information for synchronized path computation requests.";
    list synchronization {
      description
        "List of Synchronization VECtors.";
      container svec {
        description
          "Synchronization VECtor";
        leaf relaxable {
          type boolean;
          default "true";
          description
            "If this leaf is true, path computation process is
             free to ignore svec content.
             Otherwise, it must take into account this svec.";
        }
        uses te-types:generic-path-disjointness;
        leaf-list request-id-number {
          type uint32;
          description
            "This list reports the set of path computation
             requests that must be synchronized.";
        }
      }
      uses synchronization-constraints;
      uses synchronization-optimization;
    }
  } // grouping synchronization-info

  /*
   * Augment TE RPCs
   */

  augment "/te:tunnels-path-compute/te:input/te:path-compute-info" {
    description
      "Path Computation RPC input";
    list path-request {
      key "request-id";
      description
        "The list of the requested paths to be computed";
      leaf request-id {
        type uint32;
        mandatory true;
        description
          "Each path computation request is uniquely identified
           within the RPC request by the request-id-number.";
      }
      choice tunnel-attributes {
        default "value";
        description
          "Whether the tunnel attributes are specified by value
           within this path computation request or by reference.
           The reference could be either to an existing te-tunnel
           or to an entry in the tunnel-attributes list";
        case reference {
          container tunnel-reference {
            description
              "Attributes for a requested path that belongs to
              either an exiting te-tunnel or to an entry in the
              tunnel-attributes list.";
            choice tunnel-exist {
              description
                "Whether the tunnel reference is to an existing
                te-tunnel or to an entry in the tunnel-attributes
                list";
              case tunnel-ref {
                leaf tunnel-ref {
                  type te:tunnel-ref;
                  mandatory true;
                  description
                    "The referenced te-tunnel instance";
                }
              } // case tunnel-ref
              case tunnel-attributes-ref {
                leaf tunnel-attributes-ref {
                  type leafref {
                    path "/te:tunnels-path-compute/"
                      + "te:path-compute-info/"
                      + "te-pc:tunnel-attributes/te-pc:tunnel-name";
                  }
                  mandatory true;
                  description
                    "The referenced te-tunnel instance";
                }
              } // case tunnel-attributes-ref 
            } // choice tunnel-exist
            leaf path-name {
              type string;
              description
                "TE path name.";
            }
            choice path-role {
              mandatory true;
              description
                "Whether this path is a primary, or a reverse
                primary, or a secondary, or a reverse secondary
                path.";
              case primary-path {
                container primary-path {
                  presence "Indicates that the requested path
                            is a primary path";
                  description
                    "TE primary path";
                  uses te:path-preference;
                  uses te:k-requested-paths;
                } // container primary-path
              } // case primary-path
              case secondary-path {
                container secondary-path {
                  description
                    "TE secondary path";
                  uses te:path-preference;
                  uses protection-restoration-properties;
                  list primary-path-ref {
                    min-elements 1;
                    description
                      "The list of primary paths that reference
                      this path as a candidate secondary path";
                    choice primary-path-exist {
                      description
                        "Whether the path reference is to an existing
                        te-tunnel path or to another path request";
                      case path-ref {
                        leaf primary-path-ref {
                          type leafref {
                            path "/te:te/te:tunnels/te:tunnel"
                              + "[te:name=current()/../../../"
                              + "tunnel-ref]/te:primary-paths/"
                              + "te:primary-path/te:name";
                          }
                          must '../../../tunnel-ref' {
                            description
                              "The primary-path can be referenced
                              if also the tunnel is referenced.";
                          }
                          mandatory true;
                          description
                            "The referenced primary path";
                        }
                      } // case path-ref
                      case path-request-ref {
                        leaf path-request-ref {
                          type leafref {
                            path "/te:tunnels-path-compute/"
                              + "te:path-compute-info/"
                              + "te-pc:path-request/"
                              + "te-pc:request-id";
                          }
                          mandatory true;
                          description
                            "The referenced primary path request";
                        }
                      } // case path-request-ref 
                    } // choice primary-path-exist
                  } // list primary-path-ref
                } // container secondary-path
              } // case secondary-path
              case primary-reverse-path {
                container primary-reverse-path {
                  description
                    "TE primary reverse path";
                  choice primary-path-exist {
                    description
                      "Whether the path reference to the primary
                      paths for which this path is the reverse-path
                      is to an existing te-tunnel path or to
                      another path request.";
                    case path-ref {
                      leaf primary-path-ref {
                        type leafref {
                          path "/te:te/te:tunnels/te:tunnel[te:name"
                            + "=current()/../../tunnel-ref]/"
                            + "te:primary-paths/te:primary-path/"
                            + "te:name";
                        }
                        must '../../tunnel-ref' {
                          description
                            "The primary-path can be referenced
                            if also the tunnel is referenced.";
                        }
                        mandatory true;
                        description
                          "The referenced primary path";
                      }
                    } // case path-ref
                    case path-request-ref {
                      leaf path-request-ref {
                        type leafref {
                          path "/te:tunnels-path-compute/"
                            + "te:path-compute-info/"
                            + "te-pc:path-request/"
                            + "te-pc:request-id";
                        }
                        mandatory true;
                        description
                          "The referenced primary path request";
                      }
                    } // case path-request-ref 
                  } // choice primary-path-exist
                } // container primary-reverse-path
              } // case primary-reverse-path
              case secondary-reverse-path {
                container secondary-reverse-path {
                  description
                    "TE secondary reverse path";
                  uses te:path-preference;
                  uses protection-restoration-properties;
                  list primary-reverse-path-ref {
                    min-elements 1;
                    description
                      "The list of primary reverse paths that
                      reference this path as a candidate
                      secondary reverse path";
                    choice primary-reverse-path-exist {
                      description
                        "Whether the path reference is to an existing
                        te-tunnel path or to another path request";
                      case path-ref {
                        leaf primary-path-ref {
                          type leafref {
                            path "/te:te/te:tunnels/te:tunnel"
                              + "[te:name=current()/../../../"
                              + "tunnel-ref]/te:primary-paths/"
                              + "te:primary-path/te:name";
                          }
                          must '../../../tunnel-ref' {
                            description
                              "The primary-path can be referenced
                              if also the tunnel is referenced.";
                          }
                          mandatory true;
                          description
                            "The referenced primary path";
                        }
                      } // case path-ref
                      case path-request-ref {
                        leaf path-request-ref {
                          type leafref {
                            path "/te:tunnels-path-compute/"
                              + "te:path-compute-info/"
                              + "te-pc:path-request/"
                              + "te-pc:request-id";
                          }
                          mandatory true;
                          description
                            "The referenced primary reverse path
                            request";
                        }
                      } // case path-request-ref 
                    } // choice primary-reverse-path-exist
                  } // list primary-reverse-path-ref
                } // container secondary-reverse-path
              } // case secondary-reverse-path
            } // choice tunnel-path-role
          }
        } // case reference
        case value {
          leaf tunnel-name {
            type string;
            description
              "TE tunnel name.";
          }
          leaf path-name {
            type string;
            description
              "TE path name.";
          }
          choice path-role {
            when 'not (./source) and not (./destination) and
                  not (./src-tunnel-tp-id) and
                  not (./dst-tunnel-tp-id)' {
              description
                "When the tunnel attributes are specified by value
                within this path computation, it is assumed that the
                requested path will be the only path of a tunnel.

                If the requested path is a transit segment path, it
                could be of any type. Otherwise it could only be a
                primary path.";
            }
            default primary-path;
            description
              "Indicates whether the requested path is a primary
              path, a secondary path, a reverse primary path or a
              reverse secondary path.";
            case primary-path {
              description
                "The requested path is a primary path.";
            }
            container secondary-path {
              presence
                "Indicates that the requested path is a secondary
                path.";
              description
                "The name of the primary path which the requested
                primary reverse path belongs to.";
              leaf primary-path-name {
                type string;
                description
                  "TE primary path name.";
              }
            } // container secondary-path
            container primary-reverse-path {
              presence
                "Indicates that the requested path is a primary
                reverse path.";
              description
                "The name of the primary path which the requested
                primary reverse path belongs to.";
              leaf primary-path-name {
                type string;
                description
                  "TE primary path name.";
              }
            } // container primary-reverse-path
            container secondary-reverse-path {
              presence
                "Indicates that the requested path is a secondary
                reverse path.";
              description
                "The names of the primary path and of the primary
                reverse path which the requested secondary reverse
                path belongs to.";
              leaf primary-path-name {
                type string;
                description
                  "TE primary path name.";
              }
              leaf primary-reverse-path-name {
                type string;
                description
                  "TE primary reverse path name.";
              }
            } // container primary-reverse-path
          } // choice path-role
          uses te:k-requested-paths;
          uses te:encoding-and-switching-type;
          uses te:tunnel-common-attributes;
          uses te-types:te-topology-identifier;
        } // case value
      } // choice tunnel-attributes
      uses te:path-compute-info;
      uses requested-info;
      uses requested-state;
    }
    list tunnel-attributes {
      key "tunnel-name";
      description
        "Tunnel attributes common to multiple request paths";
      leaf tunnel-name {
        type string;
        description
          "TE tunnel name.";
      }
      uses te:encoding-and-switching-type;
      uses te:tunnel-common-attributes;
      uses te:tunnel-associations-properties;
      uses protection-restoration-properties;
      uses te-types:tunnel-constraints;
      uses te:tunnel-hierarchy-properties {
        augment "hierarchy/dependency-tunnels" {
          description
            "Augment with the list of dependency tunnel requests.";
          list dependency-tunnel-attributes {
            key "name";
            description
              "A tunnel request entry that this tunnel request can
               potentially depend on.";
            leaf name {
              type leafref {
                path "/te:tunnels-path-compute/"
                   + "te:path-compute-info/te-pc:tunnel-attributes/"
                   + "te-pc:tunnel-name";
              }
              description
                "Dependency tunnel request name.";
            }
            uses te:encoding-and-switching-type;
          }
        }
      }
    }
    uses synchronization-info;
  } // path-compute rpc input

  augment "/te:tunnels-path-compute/te:output/"
        + "te:path-compute-result" {
    description
      "Path Computation RPC output";
    list response {
      key "response-id";
      config false;
      description
        "response";
      leaf response-id {
        type uint32;
        description
          "The response-id has the same value of the
           corresponding request-id.";
      }
      uses te:path-computation-response;
      uses reported-state;
    }
  } // path-compute rpc output

  augment "/te:tunnels-actions/te:input/te:tunnel-info/"
        + "te:filter-type" {
    description
      "Augment Tunnels Action RPC input filter types";
    case path-compute-transactions {
      when "derived-from-or-self(../te:action-info/te:action, "
         + "'tunnel-action-path-compute-delete')";
      description
        "Path Delete Action RPC";
      leaf-list path-compute-transaction-id {
        type string;
        description
          "The list of the transaction-id values of the
           transient states to be deleted";
      }
    }
  } // path-delete rpc input

  augment "/te:tunnels-actions/te:output" {
    description
      "Augment Tunnels Action RPC output with path delete result";
    container path-computed-delete-result {
      description
        "Path Delete RPC output";
      leaf-list path-compute-transaction-id {
        type string;
        description
          "The list of the transaction-id values of the
           transient states that have been successfully deleted";
      }
    }
  } // path-delete rpc output
}
]]></sourcecode></figure>

</section>
</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>This document describes use cases of requesting Path Computation
   using YANG data models, which could be used at the ABNO Control
   Interface <xref target="RFC7491"/> and/or between controllers in ACTN <xref target="RFC8453"/>. As
   such, it does not introduce any new security considerations compared
   to the ones related to YANG specification, ABNO specification and
   ACTN Framework defined in <xref target="RFC7950"/>, <xref target="RFC7491"/> and <xref target="RFC8453"/>.</t>

<t>The YANG module defined in this document is designed to be accessed via
   the NETCONF protocol <xref target="RFC6241"/> or RESTCONF protocol <xref target="RFC8040"/>. The
   lowest NETCONF layer is the secure transport layer, and the
   mandatory-to-implement secure transport is Secure Shell (SSH)
   <xref target="RFC6242"/>. The lowest RESTCONF layer is HTTPS, and the mandatory-to-
   implement secure transport is TLS <xref target="RFC8446"/>.</t>

<t>The Network Configuration Access Control Model (NACM) 
   <xref target="RFC8341"/> provides the means to
   restrict access for particular NETCONF or RESTCONF users to a
   preconfigured subset of all available NETCONF or RESTCONF protocol
   operations and content.</t>

<t>The YANG module defined in this document augments the "tunnels-path-compute" and the "tunnel-actions" RPCs defined in <xref target="I-D.ietf-teas-yang-te"/>. The security considerations provided in <xref target="I-D.ietf-teas-yang-te"/> are also applicable to the YANG module
   defined in this document.</t>

<t>Some of the RPC operations defined in this YANG module may be considered
   sensitive or vulnerable in some network environments.  It is thus
   important to control access to these operations. These are the
   operations and their sensitivity/vulnerability:</t>

<t>"te-pc:response/computed-paths-properties": provides the same information provided by the "te:computed-paths-properties" defined in <xref target="I-D.ietf-teas-yang-te"/>. The security considerations provided in <xref target="I-D.ietf-teas-yang-te"/> for the TE tunnel state apply also to this subtree.</t>

<t>"te-pc:response/te-pc:tunnel-ref", "te-pc:response/te-pc:primary-path-ref", "te-pc:response/te-pc:primary-reverse-path-ref", "te-pc:response/te-pc:secondary-path-ref" and "te-pc:response/te-pc:secondary-reverse-path-ref" provides a reference where the same information provided in "te-pc:response/computed-paths-properties" is temporarly stored with the operational datastore (see <xref target="temp-state"/>). Therefore access to this information does not provide any additional security issue that the information provided with "te-pc:response/computed-paths-properties".</t>

<t>"/te:tunnels-actions": the YANG model defined in this document augments this action with a new action type that allows deleting the transient states of computed paths (see <xref target="temp-state"/>). A malicious use of this action would have no impact on the paths carrying live traffic but it would preclude the client from using the "transient states" to request the set-up of exactly that path, if still available.</t>

<t>The security considerations spelled out in the
   YANG specification <xref target="RFC7950"/> apply for this document as well.</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>This document registers the following URIs in the "ns" subregistry
   within the "IETF XML registry" <xref target="RFC3688"/>.</t>

<figure><artwork><![CDATA[
      URI: urn:ietf:params:xml:ns:yang:ietf-te-path-computation
      Registrant Contact:  The IESG.
      XML: N/A, the requested URI is an XML namespace.
]]></artwork></figure>

<t>This document registers a YANG module in the "YANG Module Names"
   registry <xref target="RFC7950"/>.</t>

<figure><artwork><![CDATA[
      name:      ietf-te-path-computation
      namespace: urn:ietf:params:xml:ns:yang:ietf-te-path-computation
      prefix:    te-pc
      reference: this document
]]></artwork></figure>

</section>


  </middle>

  <back>


    <references title='Normative References'>





<reference anchor='RFC6241' target='https://www.rfc-editor.org/info/rfc6241'>
<front>
<title>Network Configuration Protocol (NETCONF)</title>
<author fullname='R. Enns' initials='R.' role='editor' surname='Enns'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'><organization/></author>
<author fullname='A. Bierman' initials='A.' role='editor' surname='Bierman'><organization/></author>
<date month='June' year='2011'/>
<abstract><t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices.  It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages.  The NETCONF protocol operations are realized as remote procedure calls (RPCs).  This document obsoletes RFC 4741.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6241'/>
<seriesInfo name='DOI' value='10.17487/RFC6241'/>
</reference>



<reference anchor='RFC8040' target='https://www.rfc-editor.org/info/rfc8040'>
<front>
<title>RESTCONF Protocol</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<date month='January' year='2017'/>
<abstract><t>This document describes an HTTP-based protocol that provides a programmatic interface for accessing data defined in YANG, using the datastore concepts defined in the Network Configuration Protocol (NETCONF).</t></abstract>
</front>
<seriesInfo name='RFC' value='8040'/>
<seriesInfo name='DOI' value='10.17487/RFC8040'/>
</reference>



<reference anchor='RFC8795' target='https://www.rfc-editor.org/info/rfc8795'>
<front>
<title>YANG Data Model for Traffic Engineering (TE) Topologies</title>
<author fullname='X. Liu' initials='X.' surname='Liu'><organization/></author>
<author fullname='I. Bryskin' initials='I.' surname='Bryskin'><organization/></author>
<author fullname='V. Beeram' initials='V.' surname='Beeram'><organization/></author>
<author fullname='T. Saad' initials='T.' surname='Saad'><organization/></author>
<author fullname='H. Shah' initials='H.' surname='Shah'><organization/></author>
<author fullname='O. Gonzalez de Dios' initials='O.' surname='Gonzalez de Dios'><organization/></author>
<date month='August' year='2020'/>
<abstract><t>This document defines a YANG data model for representing, retrieving, and manipulating Traffic Engineering (TE) Topologies. The model serves as a base model that other technology-specific TE topology models can augment.</t></abstract>
</front>
<seriesInfo name='RFC' value='8795'/>
<seriesInfo name='DOI' value='10.17487/RFC8795'/>
</reference>


<reference anchor='I-D.ietf-teas-yang-te'>
   <front>
      <title>A YANG Data Model for Traffic Engineering Tunnels, Label Switched Paths and Interfaces</title>
      <author fullname='Tarek Saad'>
	 <organization>Juniper Networks</organization>
      </author>
      <author fullname='Rakesh Gandhi'>
	 <organization>Cisco Systems Inc</organization>
      </author>
      <author fullname='Xufeng Liu'>
	 <organization>Volta Networks</organization>
      </author>
      <author fullname='Vishnu Pavan Beeram'>
	 <organization>Juniper Networks</organization>
      </author>
      <author fullname='Igor Bryskin'>
	 <organization>Individual</organization>
      </author>
      <author fullname='Oscar Gonzalez de Dios'>
	 <organization>Telefonica</organization>
      </author>
      <date day='7' month='February' year='2022'/>
      <abstract>
	 <t>   This document defines a YANG data model for the provisioning and
   management of Traffic Engineering (TE) tunnels, Label Switched Paths
   (LSPs), and interfaces.  The model is divided into YANG modules that
   classify data into generic, device-specific, technology agnostic, and
   technology-specific elements.

   This model covers data for configuration, operational state, remote
   procedural calls, and event notifications.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-teas-yang-te-29'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-teas-yang-te-29.txt' type='TXT'/>
</reference>



<reference anchor='RFC7950' target='https://www.rfc-editor.org/info/rfc7950'>
<front>
<title>The YANG 1.1 Data Modeling Language</title>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<date month='August' year='2016'/>
<abstract><t>YANG is a data modeling language used to model configuration data, state data, Remote Procedure Calls, and notifications for network management protocols.  This document describes the syntax and semantics of version 1.1 of the YANG language.  YANG version 1.1 is a maintenance release of the YANG language, addressing ambiguities and defects in the original specification.  There are a small number of backward incompatibilities from YANG version 1.  This document also specifies the YANG mappings to the Network Configuration Protocol (NETCONF).</t></abstract>
</front>
<seriesInfo name='RFC' value='7950'/>
<seriesInfo name='DOI' value='10.17487/RFC7950'/>
</reference>



<reference anchor='RFC5440' target='https://www.rfc-editor.org/info/rfc5440'>
<front>
<title>Path Computation Element (PCE) Communication Protocol (PCEP)</title>
<author fullname='JP. Vasseur' initials='JP.' role='editor' surname='Vasseur'><organization/></author>
<author fullname='JL. Le Roux' initials='JL.' role='editor' surname='Le Roux'><organization/></author>
<date month='March' year='2009'/>
<abstract><t>This document specifies the Path Computation Element (PCE) Communication Protocol (PCEP) for communications between a Path Computation Client (PCC) and a PCE, or between two PCEs.  Such interactions include path computation requests and path computation replies as well as notifications of specific states related to the use of a PCE in the context of Multiprotocol Label Switching (MPLS) and Generalized MPLS (GMPLS) Traffic Engineering.  PCEP is designed to be flexible and extensible so as to easily allow for the addition of further messages and objects, should further requirements be expressed in the future.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5440'/>
<seriesInfo name='DOI' value='10.17487/RFC5440'/>
</reference>



<reference anchor='RFC7926' target='https://www.rfc-editor.org/info/rfc7926'>
<front>
<title>Problem Statement and Architecture for Information Exchange between Interconnected Traffic-Engineered Networks</title>
<author fullname='A. Farrel' initials='A.' role='editor' surname='Farrel'><organization/></author>
<author fullname='J. Drake' initials='J.' surname='Drake'><organization/></author>
<author fullname='N. Bitar' initials='N.' surname='Bitar'><organization/></author>
<author fullname='G. Swallow' initials='G.' surname='Swallow'><organization/></author>
<author fullname='D. Ceccarelli' initials='D.' surname='Ceccarelli'><organization/></author>
<author fullname='X. Zhang' initials='X.' surname='Zhang'><organization/></author>
<date month='July' year='2016'/>
<abstract><t>In Traffic-Engineered (TE) systems, it is sometimes desirable to establish an end-to-end TE path with a set of constraints (such as bandwidth) across one or more networks from a source to a destination.  TE information is the data relating to nodes and TE links that is used in the process of selecting a TE path.  TE information is usually only available within a network.  We call such a zone of visibility of TE information a domain.  An example of a domain may be an IGP area or an Autonomous System.</t><t>In order to determine the potential to establish a TE path through a series of connected networks, it is necessary to have available a certain amount of TE information about each network.  This need not be the full set of TE information available within each network but does need to express the potential of providing TE connectivity. This subset of TE information is called TE reachability information.</t><t>This document sets out the problem statement for the exchange of TE information between interconnected TE networks in support of end-to-end TE path establishment and describes the best current practice architecture to meet this problem statement.  For reasons that are explained in this document, this work is limited to simple TE constraints and information that determine TE reachability.</t></abstract>
</front>
<seriesInfo name='BCP' value='206'/>
<seriesInfo name='RFC' value='7926'/>
<seriesInfo name='DOI' value='10.17487/RFC7926'/>
</reference>



<reference anchor='RFC8340' target='https://www.rfc-editor.org/info/rfc8340'>
<front>
<title>YANG Tree Diagrams</title>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='L. Berger' initials='L.' role='editor' surname='Berger'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>This document captures the current syntax used in YANG module tree diagrams.  The purpose of this document is to provide a single location for this definition.  This syntax may be updated from time to time based on the evolution of the YANG language.</t></abstract>
</front>
<seriesInfo name='BCP' value='215'/>
<seriesInfo name='RFC' value='8340'/>
<seriesInfo name='DOI' value='10.17487/RFC8340'/>
</reference>



<reference anchor='RFC6991' target='https://www.rfc-editor.org/info/rfc6991'>
<front>
<title>Common YANG Data Types</title>
<author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'><organization/></author>
<date month='July' year='2013'/>
<abstract><t>This document introduces a collection of common data types to be used with the YANG data modeling language.  This document obsoletes RFC 6021.</t></abstract>
</front>
<seriesInfo name='RFC' value='6991'/>
<seriesInfo name='DOI' value='10.17487/RFC6991'/>
</reference>



<reference anchor='RFC8776' target='https://www.rfc-editor.org/info/rfc8776'>
<front>
<title>Common YANG Data Types for Traffic Engineering</title>
<author fullname='T. Saad' initials='T.' surname='Saad'><organization/></author>
<author fullname='R. Gandhi' initials='R.' surname='Gandhi'><organization/></author>
<author fullname='X. Liu' initials='X.' surname='Liu'><organization/></author>
<author fullname='V. Beeram' initials='V.' surname='Beeram'><organization/></author>
<author fullname='I. Bryskin' initials='I.' surname='Bryskin'><organization/></author>
<date month='June' year='2020'/>
<abstract><t>This document defines a collection of common data types and groupings in YANG data modeling language. These derived common types and groupings are intended to be imported by modules that model Traffic Engineering (TE) configuration and state capabilities.</t></abstract>
</front>
<seriesInfo name='RFC' value='8776'/>
<seriesInfo name='DOI' value='10.17487/RFC8776'/>
</reference>



<reference anchor='RFC5441' target='https://www.rfc-editor.org/info/rfc5441'>
<front>
<title>A Backward-Recursive PCE-Based Computation (BRPC) Procedure to Compute Shortest Constrained Inter-Domain Traffic Engineering Label Switched Paths</title>
<author fullname='JP. Vasseur' initials='JP.' role='editor' surname='Vasseur'><organization/></author>
<author fullname='R. Zhang' initials='R.' surname='Zhang'><organization/></author>
<author fullname='N. Bitar' initials='N.' surname='Bitar'><organization/></author>
<author fullname='JL. Le Roux' initials='JL.' surname='Le Roux'><organization/></author>
<date month='April' year='2009'/>
<abstract><t>The ability to compute shortest constrained Traffic Engineering Label Switched Paths (TE LSPs) in Multiprotocol Label Switching (MPLS) and Generalized MPLS (GMPLS) networks across multiple domains has been identified as a key requirement.  In this context, a domain is a collection of network elements within a common sphere of address management or path computational responsibility such as an IGP area or an Autonomous Systems.  This document specifies a procedure relying on the use of multiple Path Computation Elements (PCEs) to compute such inter-domain shortest constrained paths across a predetermined sequence of domains, using a backward-recursive path computation technique.  This technique preserves confidentiality across domains, which is sometimes required when domains are managed by different service providers.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5441'/>
<seriesInfo name='DOI' value='10.17487/RFC5441'/>
</reference>



<reference anchor='RFC5541' target='https://www.rfc-editor.org/info/rfc5541'>
<front>
<title>Encoding of Objective Functions in the Path Computation Element Communication Protocol (PCEP)</title>
<author fullname='JL. Le Roux' initials='JL.' surname='Le Roux'><organization/></author>
<author fullname='JP. Vasseur' initials='JP.' surname='Vasseur'><organization/></author>
<author fullname='Y. Lee' initials='Y.' surname='Lee'><organization/></author>
<date month='June' year='2009'/>
<abstract><t>The computation of one or a set of Traffic Engineering Label Switched Paths (TE LSPs) in MultiProtocol Label Switching (MPLS) and Generalized MPLS (GMPLS) networks is subject to a set of one or more specific optimization criteria, referred to as objective functions (e.g., minimum cost path, widest path, etc.).</t><t>In the Path Computation Element (PCE) architecture, a Path Computation Client (PCC) may want a path to be computed for one or more TE LSPs according to a specific objective function.  Thus, the PCC needs to instruct the PCE to use the correct objective function. Furthermore, it is possible that not all PCEs support the same set of objective functions; therefore, it is useful for the PCC to be able to automatically discover the set of objective functions supported by each PCE.</t><t>This document defines extensions to the PCE communication Protocol (PCEP) to allow a PCE to indicate the set of objective functions it supports.  Extensions are also defined so that a PCC can indicate in a path computation request the required objective function, and a PCE can report in a path computation reply the objective function that was used for path computation.</t><t>This document defines objective function code types for six objective functions previously listed in the PCE requirements work, and provides the definition of four new metric types that apply to a set of synchronized requests.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5541'/>
<seriesInfo name='DOI' value='10.17487/RFC5541'/>
</reference>



<reference anchor='RFC6242' target='https://www.rfc-editor.org/info/rfc6242'>
<front>
<title>Using the NETCONF Protocol over Secure Shell (SSH)</title>
<author fullname='M. Wasserman' initials='M.' surname='Wasserman'><organization/></author>
<date month='June' year='2011'/>
<abstract><t>This document describes a method for invoking and running the Network Configuration Protocol (NETCONF) within a Secure Shell (SSH) session as an SSH subsystem.  This document obsoletes RFC 4742.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6242'/>
<seriesInfo name='DOI' value='10.17487/RFC6242'/>
</reference>



<reference anchor='RFC8446' target='https://www.rfc-editor.org/info/rfc8446'>
<front>
<title>The Transport Layer Security (TLS) Protocol Version 1.3</title>
<author fullname='E. Rescorla' initials='E.' surname='Rescorla'><organization/></author>
<date month='August' year='2018'/>
<abstract><t>This document specifies version 1.3 of the Transport Layer Security (TLS) protocol.  TLS allows client/server applications to communicate over the Internet in a way that is designed to prevent eavesdropping, tampering, and message forgery.</t><t>This document updates RFCs 5705 and 6066, and obsoletes RFCs 5077, 5246, and 6961.  This document also specifies new requirements for TLS 1.2 implementations.</t></abstract>
</front>
<seriesInfo name='RFC' value='8446'/>
<seriesInfo name='DOI' value='10.17487/RFC8446'/>
</reference>



<reference anchor='RFC8341' target='https://www.rfc-editor.org/info/rfc8341'>
<front>
<title>Network Configuration Access Control Model</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>The standardization of network configuration interfaces for use with the Network Configuration Protocol (NETCONF) or the RESTCONF protocol requires a structured and secure operating environment that promotes human usability and multi-vendor interoperability.  There is a need for standard mechanisms to restrict NETCONF or RESTCONF protocol access for particular users to a preconfigured subset of all available NETCONF or RESTCONF protocol operations and content.  This document defines such an access control model.</t><t>This document obsoletes RFC 6536.</t></abstract>
</front>
<seriesInfo name='STD' value='91'/>
<seriesInfo name='RFC' value='8341'/>
<seriesInfo name='DOI' value='10.17487/RFC8341'/>
</reference>



<reference anchor='RFC3688' target='https://www.rfc-editor.org/info/rfc3688'>
<front>
<title>The IETF XML Registry</title>
<author fullname='M. Mealling' initials='M.' surname='Mealling'><organization/></author>
<date month='January' year='2004'/>
<abstract><t>This document describes an IANA maintained registry for IETF standards which use Extensible Markup Language (XML) related items such as Namespaces, Document Type Declarations (DTDs), Schemas, and Resource Description Framework (RDF) Schemas.</t></abstract>
</front>
<seriesInfo name='BCP' value='81'/>
<seriesInfo name='RFC' value='3688'/>
<seriesInfo name='DOI' value='10.17487/RFC3688'/>
</reference>




    </references>

    <references title='Informative References'>





<reference anchor='RFC7491' target='https://www.rfc-editor.org/info/rfc7491'>
<front>
<title>A PCE-Based Architecture for Application-Based Network Operations</title>
<author fullname='D. King' initials='D.' surname='King'><organization/></author>
<author fullname='A. Farrel' initials='A.' surname='Farrel'><organization/></author>
<date month='March' year='2015'/>
<abstract><t>Services such as content distribution, distributed databases, or inter-data center connectivity place a set of new requirements on the operation of networks.  They need on-demand and application-specific reservation of network connectivity, reliability, and resources (such as bandwidth) in a variety of network applications (such as point-to-point connectivity, network virtualization, or mobile back-haul) and in a range of network technologies from packet (IP/MPLS) down to optical.  An environment that operates to meet these types of requirements is said to have Application-Based Network Operations (ABNO).  ABNO brings together many existing technologies and may be seen as the use of a toolbox of existing components enhanced with a few new elements.</t><t>This document describes an architecture and framework for ABNO, showing how these components fit together.  It provides a cookbook of existing technologies to satisfy the architecture and meet the needs of the applications.</t></abstract>
</front>
<seriesInfo name='RFC' value='7491'/>
<seriesInfo name='DOI' value='10.17487/RFC7491'/>
</reference>



<reference anchor='RFC8453' target='https://www.rfc-editor.org/info/rfc8453'>
<front>
<title>Framework for Abstraction and Control of TE Networks (ACTN)</title>
<author fullname='D. Ceccarelli' initials='D.' role='editor' surname='Ceccarelli'><organization/></author>
<author fullname='Y. Lee' initials='Y.' role='editor' surname='Lee'><organization/></author>
<date month='August' year='2018'/>
<abstract><t>Traffic Engineered (TE) networks have a variety of mechanisms to facilitate the separation of the data plane and control plane.  They also have a range of management and provisioning protocols to configure and activate network resources.  These mechanisms represent key technologies for enabling flexible and dynamic networking.  The term &quot;Traffic Engineered network&quot; refers to a network that uses any connection-oriented technology under the control of a distributed or centralized control plane to support dynamic provisioning of end-to- end connectivity.</t><t>Abstraction of network resources is a technique that can be applied to a single network domain or across multiple domains to create a single virtualized network that is under the control of a network operator or the customer of the operator that actually owns the network resources.</t><t>This document provides a framework for Abstraction and Control of TE Networks (ACTN) to support virtual network services and connectivity services.</t></abstract>
</front>
<seriesInfo name='RFC' value='8453'/>
<seriesInfo name='DOI' value='10.17487/RFC8453'/>
</reference>



<reference anchor='RFC8454' target='https://www.rfc-editor.org/info/rfc8454'>
<front>
<title>Information Model for Abstraction and Control of TE Networks (ACTN)</title>
<author fullname='Y. Lee' initials='Y.' surname='Lee'><organization/></author>
<author fullname='S. Belotti' initials='S.' surname='Belotti'><organization/></author>
<author fullname='D. Dhody' initials='D.' surname='Dhody'><organization/></author>
<author fullname='D. Ceccarelli' initials='D.' surname='Ceccarelli'><organization/></author>
<author fullname='B. Yoon' initials='B.' surname='Yoon'><organization/></author>
<date month='September' year='2018'/>
<abstract><t>This document provides an information model for Abstraction and Control of TE Networks (ACTN).</t></abstract>
</front>
<seriesInfo name='RFC' value='8454'/>
<seriesInfo name='DOI' value='10.17487/RFC8454'/>
</reference>


<reference anchor='I-D.ietf-ccamp-otn-topo-yang'>
   <front>
      <title>A YANG Data Model for Optical Transport Network Topology</title>
      <author fullname='Haomian Zheng'>
	 <organization>Huawei Technologies</organization>
      </author>
      <author fullname='Italo Busi'>
	 <organization>Huawei Technologies</organization>
      </author>
      <author fullname='Xufeng Liu'>
	 <organization>Volta Networks</organization>
      </author>
      <author fullname='Sergio Belotti'>
	 <organization>Nokia</organization>
      </author>
      <author fullname='Oscar Gonzalez de Dios'>
	 <organization>Telefonica</organization>
      </author>
      <date day='7' month='March' year='2022'/>
      <abstract>
	 <t>   This document describes a YANG data model to describe the topologies
   of an Optical Transport Network (OTN).  It is independent of control
   plane protocols and captures topological and resource related
   information pertaining to OTN.  This model enables clients, which
   interact with a transport domain controller, for OTN topology related
   operations such as obtaining the relevant topology resource
   information.


	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-ccamp-otn-topo-yang-14'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-ccamp-otn-topo-yang-14.txt' type='TXT'/>
</reference>



<reference anchor='RFC4655' target='https://www.rfc-editor.org/info/rfc4655'>
<front>
<title>A Path Computation Element (PCE)-Based Architecture</title>
<author fullname='A. Farrel' initials='A.' surname='Farrel'><organization/></author>
<author fullname='J.-P. Vasseur' initials='J.-P.' surname='Vasseur'><organization/></author>
<author fullname='J. Ash' initials='J.' surname='Ash'><organization/></author>
<date month='August' year='2006'/>
<abstract><t>Constraint-based path computation is a fundamental building block for traffic engineering systems such as Multiprotocol Label Switching (MPLS) and Generalized Multiprotocol Label Switching (GMPLS) networks.  Path computation in large, multi-domain, multi-region, or multi-layer networks is complex and may require special computational components and cooperation between the different network domains.</t><t>This document specifies the architecture for a Path Computation Element (PCE)-based model to address this problem space.  This document does not attempt to provide a detailed description of all the architectural components, but rather it describes a set of building blocks for the PCE architecture from which solutions may be constructed.  This memo provides information for the Internet community.</t></abstract>
</front>
<seriesInfo name='RFC' value='4655'/>
<seriesInfo name='DOI' value='10.17487/RFC4655'/>
</reference>



<reference anchor='RFC8342' target='https://www.rfc-editor.org/info/rfc8342'>
<front>
<title>Network Management Datastore Architecture (NMDA)</title>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' surname='Schoenwaelder'><organization/></author>
<author fullname='P. Shafer' initials='P.' surname='Shafer'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<author fullname='R. Wilton' initials='R.' surname='Wilton'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>Datastores are a fundamental concept binding the data models written in the YANG data modeling language to network management protocols such as the Network Configuration Protocol (NETCONF) and RESTCONF. This document defines an architectural framework for datastores based on the experience gained with the initial simpler model, addressing requirements that were not well supported in the initial model.  This document updates RFC 7950.</t></abstract>
</front>
<seriesInfo name='RFC' value='8342'/>
<seriesInfo name='DOI' value='10.17487/RFC8342'/>
</reference>



<reference anchor='RFC6805' target='https://www.rfc-editor.org/info/rfc6805'>
<front>
<title>The Application of the Path Computation Element Architecture to the Determination of a Sequence of Domains in MPLS and GMPLS</title>
<author fullname='D. King' initials='D.' role='editor' surname='King'><organization/></author>
<author fullname='A. Farrel' initials='A.' role='editor' surname='Farrel'><organization/></author>
<date month='November' year='2012'/>
<abstract><t>Computing optimum routes for Label Switched Paths (LSPs) across multiple domains in MPLS Traffic Engineering (MPLS-TE) and GMPLS networks presents a problem because no single point of path computation is aware of all of the links and resources in each domain.  A solution may be achieved using the Path Computation Element (PCE) architecture.</t><t>Where the sequence of domains is known a priori, various techniques can be employed to derive an optimum path.  If the domains are simply connected, or if the preferred points of interconnection are also known, the Per-Domain Path Computation technique can be used.  Where there are multiple connections between domains and there is no preference for the choice of points of interconnection, the Backward-Recursive PCE-based Computation (BRPC) procedure can be used to derive an optimal path.</t><t>This document examines techniques to establish the optimum path when the sequence of domains is not known in advance.  The document shows how the PCE architecture can be extended to allow the optimum sequence of domains to be selected, and the optimum end-to-end path to be derived through the use of a hierarchical relationship between domains.  This document is not an Internet Standards Track  specification; it is published for informational purposes.</t></abstract>
</front>
<seriesInfo name='RFC' value='6805'/>
<seriesInfo name='DOI' value='10.17487/RFC6805'/>
</reference>



<reference anchor='RFC7446' target='https://www.rfc-editor.org/info/rfc7446'>
<front>
<title>Routing and Wavelength Assignment Information Model for Wavelength Switched Optical Networks</title>
<author fullname='Y. Lee' initials='Y.' role='editor' surname='Lee'><organization/></author>
<author fullname='G. Bernstein' initials='G.' role='editor' surname='Bernstein'><organization/></author>
<author fullname='D. Li' initials='D.' surname='Li'><organization/></author>
<author fullname='W. Imajuku' initials='W.' surname='Imajuku'><organization/></author>
<date month='February' year='2015'/>
<abstract><t>This document provides a model of information needed by the Routing and Wavelength Assignment (RWA) process in Wavelength Switched Optical Networks (WSONs).  The purpose of the information described in this model is to facilitate constrained optical path computation in WSONs.  This model takes into account compatibility constraints between WSON signal attributes and network elements but does not include constraints due to optical impairments.  Aspects of this information that may be of use to other technologies utilizing a GMPLS control plane are discussed.</t></abstract>
</front>
<seriesInfo name='RFC' value='7446'/>
<seriesInfo name='DOI' value='10.17487/RFC7446'/>
</reference>




    </references>


<section anchor="examples"><name>Examples</name>

<t>This section contains examples of use of the model with RESTCONF
<xref target="RFC8040"/> and JSON encoding.</t>

<t>These examples show how path computation can be requested for the tunnels configuration provided in Appendix A of <xref target="I-D.ietf-teas-yang-te"/>.</t>

<section anchor="basic-example"><name>Basic Path Computation</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 13.1 of of <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>In this case, the TE Tunnel has only one primary path with no specific constraints.</t>

<figure><artwork type="ascii-art"><![CDATA[
POST /restconf/operations/ietf-te:te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="basic.json"><![CDATA[
{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 1,
          "tunnel-name": "Example_LSP_Tunnel_A_2",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "10.0.0.1",
          "destination": "10.0.0.4",
          "bidirectional": "false",
          "signaling-type": "te-types:path-setup-rsvp"
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="transient-state-example"><name>Path Computation with transient state</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 13.1 of of <xref target="I-D.ietf-teas-yang-te"/> requesting some transient state to be reported within the operational datastore, as described <xref target="temp-state"/>.</t>

<t>In this case, the TE Tunnel has only one primary path with no specific constraints.</t>

<figure><artwork type="ascii-art"><![CDATA[
POST /restconf/operations/ietf-te:te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="transient-state.json"><![CDATA[
{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 2,
          "tunnel-name": "Example_LSP_Tunnel_A_2",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "10.0.0.1",
          "destination": "10.0.0.4",
          "bidirectional": "false",
          "signaling-type": "te-types:path-setup-rsvp",
          "requested-state": {
            "transaction-id": "example"
          }
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="global-path-constraint-example"><name>Path Computation with Global Path Constraint</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 13.3 of of <xref target="I-D.ietf-teas-yang-te"/>. The 'named path constraint' is created in section 13.2 of <xref target="I-D.ietf-teas-yang-te"/> applies to this path computation request.</t>

<figure><artwork type="ascii-art"><![CDATA[
POST /restconf/operations/ietf-te:te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="global-path-constraint.json"><![CDATA[
{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 3,
          "tunnel-name": "Example_LSP_Tunnel_A_4_1",
          "path-name": "Simple_LSP_1",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "10.0.0.1",
          "destination": "10.0.0.4",
          "bidirectional": "false",
          "signaling-type": "path-setup-rsvp",
          "named-path-constraint": "max-hop-3",
          "requested-state": {}
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="tunnel-path-constraint-example"><name>Path Computation with Per-tunnel Path Constraint</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 13.4 of of <xref target="I-D.ietf-teas-yang-te"/>, using a per tunnel path constraint.</t>

<figure><artwork type="ascii-art"><![CDATA[
POST /restconf/operations/ietf-te:te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="tunnel-path-constraint.json"><![CDATA[
{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 4,
          "tunnel-name": "Example_LSP_Tunnel_A_4_2",
          "path-name": "path1",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "10.0.0.1",
          "destination": "10.0.0.4",
          "bidirectional": "false",
          "signaling-type": "te-types:path-setup-rsvp",
          "path-metric-bounds": {
            "path-metric-bound": [
              {
                "metric-type": "te-types:path-metric-hop",
                "upper-bound": "3"
              }
            ]
          }
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="path-computation-result"><name>Path Computation result</name>

<t>This example reports the output of the path computation RPC request described in <xref target="tunnel-path-constraint-example"/>.</t>

<figure><artwork type="ascii-art"><![CDATA[
HTTP/1.1 200 OK
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="tunnel-path-constraint.json"><![CDATA[
{
  "ietf-te:output": {
    "path-compute-result": {
      "ietf-te-path-computation:response": [
        {
          "response-id": 3,
          "computed-paths-properties": {
            "computed-path-properties": [
              {
                "k-index": "1",
                "path-properties": {
                  "path-route-objects": {
                    "path-route-object": [
                      {
                        "index": "1",
                        "numbered-node-hop": {
                          "node-id": "10.0.0.2"
                        }
                      },
                      {
                        "index": "2",
                        "numbered-node-hop": {
                          "node-id": "10.0.0.4"
                        }
                      }
                    ]
                  }
                }
              }
            ]
          },
          "tunnel-ref": "Example_LSP_Tunnel_A_4_1",
          "primary-path-ref": "path1"
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
</section>
<section numbered="false" anchor="acknowledgments"><name>Acknowledgments</name>

<t>The authors would like to thank Igor Bryskin and Xian Zhang for
   participating in the initial discussions that have triggered this
   work and providing valuable insights.</t>

<t>The authors would like to thank the authors of the TE tunnel YANG
   data model <xref target="I-D.ietf-teas-yang-te"/>, in particular Igor Bryskin, Vishnu Pavan
   Beeram, Tarek Saad and Xufeng Liu, for their inputs to the
   discussions and support in having consistency between the Path
   Computation and TE tunnel YANG data models.</t>

<t>The authors would like to thank Adrian Farrel, Dhruv Dhody, Igor
   Bryskin, Julien Meuric and Lou Berger for their valuable input to the
   discussions that has clarified that the path being set up is not
   necessarily the same as the path that has been previously computed
   and, in particular to Dhruv Dhody, for his suggestion to describe the
   need for a path verification phase to check that the actual path
   being set up meets the required end-to-end metrics and constraints.</t>

<t>The authors would like to thank Aihua Guo, Lou Berger, Shaolong Gan,
   Martin Bjorklund and Tom Petch for their useful comments on how to
   define XPath statements in YANG RPCs.</t>

<t>The authors would like to thank Haomian Zheng, Yanlei Zheng, Tom
   Petch, Aihua Guo and Martin Bjorklund for their review and valuable
   comments to this document.</t>

<t>Previous versions of document were prepared using 2-Word-v2.0.template.dot.</t>

<t>This document was prepared using kramdown.</t>

</section>

    <section anchor="contributors" numbered="false" toc="include" removeInRFC="false">
        <name>Contributors</name>
    <contact initials="V." surname="Lopez" fullname="Victor Lopez">
      <organization>Nokia</organization>
      <address>
        <email>victor.lopez@nokia.com</email>
      </address>
    </contact>
    <contact initials="R." surname="Vilalta" fullname="Ricard Vilalta">
      <organization>CTTC</organization>
      <address>
        <email>ricard.vilalta@cttc.es</email>
      </address>
    </contact>
    <contact initials="K." surname="Sethuraman" fullname="Karthik Sethuraman">
      <organization>NEC</organization>
      <address>
        <email>karthik.sethuraman@necam.com</email>
      </address>
    </contact>
    <contact initials="M." surname="Scharf" fullname="Michael Scharf">
      <organization>Nokia</organization>
      <address>
        <email>michael.scharf@gmail.com</email>
      </address>
    </contact>
    <contact initials="D." surname="Beller" fullname="Dieter Beller">
      <organization>Nokia</organization>
      <address>
        <email>dieter.beller@nokia.com</email>
      </address>
    </contact>
    <contact initials="G." surname="Bruno" fullname="Gianmarco Bruno">
      <organization>Ericsson</organization>
      <address>
        <email>gianmarco.bruno@ericsson.com</email>
      </address>
    </contact>
    <contact initials="F." surname="Lazzeri" fullname="Francesco Lazzeri">
      <organization>Ericsson</organization>
      <address>
        <email>francesco.lazzeri@ericsson.com</email>
      </address>
    </contact>
    <contact initials="Y." surname="Lee" fullname="Young Lee">
      <organization>Samsung Electronics</organization>
      <address>
        <email>younglee.tx@gmail.com</email>
      </address>
    </contact>
    <contact initials="C." surname="Perocchio" fullname="Carlo Perocchio">
      <organization>Ericsson</organization>
      <address>
        <email>carlo.perocchio@ericsson.com</email>
      </address>
    </contact>
    <contact initials="O." surname="Dugeon" fullname="Olivier Dugeon">
      <organization>Orange Labs</organization>
      <address>
        <email>olivier.dugeon@orange.com</email>
      </address>
    </contact>
    <contact initials="J." surname="Meuric" fullname="Julien Meuric">
      <organization>Orange Labs</organization>
      <address>
        <email>julien.meuric@orange.com</email>
      </address>
    </contact>
    </section>

  </back>

<!-- ##markdown-source:
H4sIAC2fOGIAA+y9a3sbx5Ew+h2/Ypb5EDICQOvmJHQSWyJpR2dtSUfU2puz
2rPPEBiSswIx2JmBJDrU+e2nbt1d3dM9M6CVxNnX2GxCAX2prq6uW1dXzWaz
yaJaluvLo2zbXsx+N5m0ZbsqjrIn2V+ePP8mO8nbPPuuWhar7KKqs7r4n23R
tNA+2+TtVbaorjfbNm/Laj2Z5OfndfHuKPtLDj9j65fY5Fg1WVaLdX4Noy/r
/KKdlQVM2RZ5M7uBLjMccaZGnN3/3eR9Vb+9rKvt5ih7ffrkLPsB/o2zf4Pf
TRZ5W1xW9c1R1rTLSbmpj7K23jbtg88++/1nDyaTps3Xy//KV9Ua5rwpmsmm
PMr+o60W06yp6rYuLhr46+aa/4Cpr4t12/wnLGXbXlX10STLZvD/WcZQP2th
qOzptinpy7pCRBXLsq1q+qKqAY1/3ubvizJ7XSyu1tWquixhWvyxuM7L1VFW
4hjzcxjjqytqOYdpg3nOivqyhImKVdW2fXM9r96WuR69oZ7zc+751Rp/j0zw
olnkdfZNtf4xXxU/ZssiOykrBrNcN/D7PP4jTfq6WBUX1bpceDNXOOT8Unot
AdKq+aq1TSNAPFlv6/wyO7vK6+vcDf9NVV2uCj10vm6u8q8u6fvIOEBuMEjp
Rji+Ktd59m8wLbV1yLkqgc4e/f6rBTbY0u/zxToY7iRflwB2dlwsYEXFaqVG
Pq3LRdNUaz3qktvPF7b9V4U0I2DhfK3bujzftl2C+r5cwLfZt9Wm+LFnV99R
s/kKmyX39BVguV7CkKt81Sp8Hr9+fawHq6nd/B23+2rRtos5kage7F/zur0q
3wIltlewS9f5WoF36o33lpvOG9v0q3WxyK8jIH5XLq5y4CRn8D/1Rc+Cr7nh
vKGGX13it5HxToCBFDWek1XRdyqW1A5PBbRLIvCbMl9f5/UCDl69XVf9u35p
Gs/PsbG/5f64X9f5elE0MO63+Y8/QsP+kS9M8/mKm/eN/ZdqC8zw26JwY57l
1w1+eboqFm2Nh8/jPzfYY1UU8/ZDEq/HeQ187mVRVws4KgOYWGDj+cY07oP2
xap8V8KGnWwvi0pR1AtY8mUB6Dn3QK24+XxJzb+qqFVk2P9ruyqLdfZdsYWp
B0f9b2o9v6bWetDJbDbLoHFb54t2gl1eXxV1kcGhzppFsc5rYGnTrL3ZwAla
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
ZfgPm4QKMc2/Trgo/egp0dp+ZV5aSTc2HNJ+FFddhrIlk2uS3BoIC3c2oXhZ
Zl9puagKlThc2/EmnpJ9oTAABijztZNOZMYlidx7QP16kwPw0GjBEGlYMx2K
Kd+kyZ00eewPpr2m+N7xXnaxyu0rgb3vTl+/ena8hwMpK9yzvI96sjLt4o3z
Gw5JvkCFg26B7JNPn12me2PBIHOCZrSXUcM2BqpD+EwoqG+iaJe0kRkgcZS9
GfSxq8mX1+V6Rt7JIfQLgDcxI7lnQTcDJnNqNeazw6rCGfF/eia0/Si+OYvY
4TE0JN0XMRyM8WQkEbDrfsb8G+kVjNzFMV6P1Ap2WEDaFxJbAfGtuGeEP9qN
nxxKi7FeRAxaQXYl/fZPML+xfbJsEBTuoB2GrL/2WTxW1476G+OqrnloPDOv
3VXVdnnSKDcH8QdQplicEkMy0tRSpqTydPzuQD2KNQAkJcinu1mLDuiWnpAz
t7bHsGFlh8Y18UnSXmP/E/iQ/b4OWdEBun2H77E6Cw4vtC6KnB5jYeqGpuHU
VHQrE9NWOmn/cRgTC9aNo5fwnXkQkeCsJrlkcc/eI4+23B0M2TQc15uMF7+m
aujybtuLtQ6DdSgUyatSIY+3npEGdMPpEEqq3+Q96ZH8nJKAI1bTVtU/7kun
IikGrqqqUSDJrRipgVfRHJ77xYPiQN0dmbLZFF7Q0BNXG/xmH/nYVzzJSyM5
8q7Eezyczq7XYIzLVa3lzt7gXj09U4+M8L5NfvHGkdtuvsr8wYtSdvvv4pVH
TOhGNcF5fRmpDKpMCIyEf/lBLqaqeV21HAzL40spKzG2g4gGYyUHEKsHAZiP
oahnAivW8wWjPG9tYlz53V7RcQuJ2r5mP4R7Q+Pd4lkL3sKEo8gVcMN5rBS8
nn/Cg3BFJ9NCiaMwGCbu0b0gm0oh5ENdAfn165dTKoi2lPo1hNz3UgaFmOuB
yZo1BiKCvJKsAQp7FEG7FlgVtmx4ZuHJYA5r5ccE8tABHYDdvMC5WaGCDdU9
quLMluZUE2Df0wyw8ZJij7y24UwgohR+w+AT/XjP//g6lrlOkk3oCpi0ZPM3
6stxfYgIYmJMKyzBvYG5TnWU8+WufZt6IcTAFxluAKx0Xt+EU4FysUPz89J6
kPOVB1tcriuqCvXYXjVFWIx2YA5ivC4oj0Gk07g+zeKquLa90n1wD+TN7MwG
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
MXvLxjqvtp2BpgnSZdLd+R+OgM9A1XACAA==

-->

</rfc>

