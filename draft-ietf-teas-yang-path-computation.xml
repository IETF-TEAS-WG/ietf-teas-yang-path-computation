<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.17 (Ruby 2.7.0) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc comments="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-teas-yang-path-computation-22" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="Yang for Path Computation">A YANG Data Model for requesting path computation</title>

    <author initials="I." surname="Busi" fullname="Italo Busi" role="editor">
      <organization>Huawei Technologies</organization>
      <address>
        <email>italo.busi@huawei.com</email>
      </address>
    </author>
    <author initials="S." surname="Belotti" fullname="Sergio Belotti" role="editor">
      <organization>Nokia</organization>
      <address>
        <email>sergio.belotti@nokia.com</email>
      </address>
    </author>
    <author initials="O." surname="Gonzalez de Dios" fullname="Oscar Gonzalez de Dios">
      <organization>Telefonica</organization>
      <address>
        <email>oscar.gonzalezdedios@telefonica.com</email>
      </address>
    </author>
    <author initials="A." surname="Sharma" fullname="Anurag Sharma">
      <organization>Google</organization>
      <address>
        <email>ansha@google.com</email>
      </address>
    </author>
    <author initials="Y." surname="Shi" fullname="Yan Shi">
      <organization>China Unicom</organization>
      <address>
        <email>shiyan49@chinaunicom.cn</email>
      </address>
    </author>

    <date year="2024" month="February" day="12"/>

    
    <workgroup>TEAS Working Group</workgroup>
    

    <abstract>


<t>There are scenarios, typically in a hierarchical Software-Defined
   Networking (SDN) context, where the topology information provided by
   a Traffic Engineering (TE) network provider may be insufficient for
   its client to perform multi-domain path computation. In these cases the
   client would need to request the TE network provider to compute some
   intra-domain paths to be used by the client to choose the optimal multi-domain paths.</t>

<t>This document provides a mechanism to request path computation by augmenting the Remote Procedure Calls (RPCs) defined in RFC YYYY.</t>

<t>[RFC EDITOR NOTE: Please replace RFC YYYY with the RFC number of
   draft-ietf-teas-yang-te once it has been published.</t>

<t>Moreover, this document describes some use cases where the path
   computation request, via YANG-based protocols (e.g., NETCONF or
   RESTCONF), can be needed.</t>



    </abstract>



  </front>

  <middle>


<section anchor="intro"><name>Introduction</name>

<t anchor="pc-model">There are scenarios, typically in a hierarchical Software-Defined
   Networking (SDN) context, where the topology information provided by
   a Traffic Engineering (TE) network provider may be insufficient for
   its client to perform multi-domain path computation. In these cases the
   client would need to request the TE network provider to compute some
   intra-domain paths that could be used together with its topology information
   to compute the multi-domain path.</t>

<t>These types of scenarios can be applied to different interfaces in
   different reference architectures:</t>

<t><list style="symbols">
  <t>Application-Based Network Operations (ABNO) control interface
<xref target="RFC7491"/>, in which an Application Service Coordinator can request the
ABNO controller to take in charge path calculation (see Figure 1
in <xref target="RFC7491"/>).</t>
  <t>Abstraction and Control of TE Networks (ACTN) <xref target="RFC8453"/>, where a
controller hierarchy is defined.
In the ACTN context, path computation is needed on the interface
between Customer Network Controller (CNC)  and Multi-Domain
Service Coordinator (MDSC), called CNC-MDSC Interface (CMI),
and on the interface between MSDC and Provisioning Network
Controller (PNC), called MDSC-PNC Interface  (MPI). 
<xref target="RFC8454"/> describes an information model for the Path
Computation request.  <vspace blankLines='1'/>
Multiple protocol solutions can be used for communication between
different controller hierarchical levels. This document assumes that
the controllers are communicating using YANG-based protocols (e.g.,
NETCONF <xref target="RFC6241"/> or RESTCONF <xref target="RFC8040"/>).  <vspace blankLines='1'/>
Path Computation Elements (PCEs), controllers and orchestrators
perform their operations based on Traffic Engineering Databases
(TED). Such TEDs can be described, in a technology agnostic way, with
the YANG data model for TE Topologies <xref target="RFC8795"/>. Furthermore, the
technology specific details of the TED are modelled in the technology
specific topology models, e.g., the <xref target="I-D.ietf-ccamp-otn-topo-yang"/> for Optical Transport
Network (OTN) Optical Data Unit (ODU) technologies, which augment the
common TE topology model in <xref target="RFC8795"/>.  <vspace blankLines='1'/>
The availability of such topology models allows the provisioning of
the TED using YANG-based protocols (e.g., NETCONF or RESTCONF).
Furthermore, it enables a PCE/controller performing the necessary
abstractions or modifications and offering this customized topology
to another PCE/controller or high level orchestrator.  <vspace blankLines='1'/>
The tunnels that can be provided over the networks described with the
topology models can be also set-up, deleted and modified via YANG-
based protocols (e.g., NETCONF or RESTCONF) using the TE tunnel YANG
data model <xref target="I-D.ietf-teas-yang-te"/>.  <vspace blankLines='1'/>
This document defines a YANG data model <xref target="RFC7950"/> that augments the RPC defined in <xref target="I-D.ietf-teas-yang-te"/>. The use of this RPC is complimentary to the configuration of a TE tunnel path in "compute-only" mode, as described in <xref target="I-D.ietf-teas-yang-te"/>.  <vspace blankLines='1'/>
The YANG data model definition does not make any assumption about
whether that the client or the server implement a "PCE"
functionality, as defined in <xref target="RFC4655"/>, and the Path Computation
Element Communication Protocol (PCEP) protocol, as defined in
<xref target="RFC5440"/>.  <vspace blankLines='1'/>
Moreover, this document describes some use cases where a path
computation request, via YANG-based protocols (e.g., NETCONF or
RESTCONF), can be needed.  <vspace blankLines='1'/>
The YANG data model defined in this document conforms to the Network
Management Datastore Architecture <xref target="RFC8342"/>.</t>
</list></t>

<section anchor="terminology"><name>Terminology</name>

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED",
"MAY", and "OPTIONAL" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

<t>TED:</t>

<ul empty="true"><li>
  <t>The traffic engineering database is a collection of all TE
   information about all TE nodes and TE links in a given network.</t>
</li></ul>

<t>PCE:</t>

<ul empty="true"><li>
  <t>A Path Computation Element (PCE) is an entity that is capable of
   computing a network path or route based on a network graph, and of
   applying computational constraints during the computation.  The PCE
   entity is an application that can be located within a network node or
   component, on an out-of-network server, etc.  For example, a PCE
   would be able to compute the path of a TE Label Switched Path (LSP)
   by operating on the TED and considering bandwidth and other
   constraints applicable to the TE LSP service request. <xref target="RFC4655"/>.</t>
</li></ul>

<t>Domain:</t>

<ul empty="true"><li>
  <t>TE information is the data relating to nodes and TE links
   that is used in the process of selecting a TE path.  TE information
   is usually only available within a network.  We call such a zone of
   visibility of TE information a domain.  An example of a domain may be
   an IGP area or an Autonomous System. <xref target="RFC7926"/></t>
</li></ul>

<t>The terminology for describing YANG data models is found in
   <xref target="RFC7950"/>.</t>

</section>
<section anchor="tree-diagram"><name>Tree Diagram</name>

<t>Tree diagrams used in this document follow the notation defined in
   <xref target="RFC8340"/>.</t>

</section>
<section anchor="prefixes-in-data-node-names"><name>Prefixes in Data Node Names</name>

<t>In this document, names of data nodes and other data model objects
   are prefixed using the standard prefix associated with the
   corresponding YANG imported modules, as shown in <xref target="tab-prefix"/>.</t>

<texttable title="Prefixes and corresponding YANG modules" anchor="tab-prefix">
      <ttcol align='left'>Prefix</ttcol>
      <ttcol align='left'>YANG module</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>te-types</c>
      <c>ietf-te-types</c>
      <c>[RFCZZZZ]</c>
      <c>te</c>
      <c>ietf-te</c>
      <c>[RFCYYYY]</c>
      <c>te-pc</c>
      <c>ietf-te-path-computation</c>
      <c>RFCXXXX</c>
</texttable>

<t>RFC Editor Note:
Please replace XXXX with the RFC number assigned to this document.
Please replace YYYY with the RFC number of <xref target="I-D.ietf-teas-yang-te"/> once it has been published.
Please replace ZZZZ with the RFC number of <xref target="I-D.ietf-teas-rfc8776-update"/> once it has been published.
Please remove this note.</t>

</section>
</section>
<section anchor="use-cases"><name>Use Cases</name>

<t>This section presents some use cases, where a client needs to request
   underlying SDN controllers for path computation.</t>

<t>The use of the YANG data model defined in this document is not
   restricted to these use cases but can be used in any other use case
   when deemed useful.</t>

<t>The presented uses cases have been grouped, depending on the
   different underlying topologies: Packet/Optical Integration (<xref target="poi-uc"/>);
   multi-domain Traffic Engineered (TE) Networks (<xref target="md-uc"/>); and Data Center
   Interconnections (<xref target="dci-uc"/>). Use cases in <xref target="brpc-uc"/> and <xref target="hpce-uc"/>
   respectively present how to
   apply this YANG data model for standard multi-domain PCE i.e.
   Backward Recursive Path Computation <xref target="RFC5441"/> and Hierarchical PCE
   <xref target="RFC6805"/>.</t>

<section anchor="poi-uc"><name>Packet/Optical Integration</name>

<t>In this use case, an optical domain is used to provide connectivity
   to some nodes of a packet domain (see <xref target="fig-poi-uc"/>).</t>

<figure title="Packet/Optical Integration use case" anchor="fig-poi-uc"><artwork type="ascii-art" name="poi-use-case.txt"><![CDATA[
                                +----------------+
                                |                |
                                | Packet/Optical |
                                |  Coordinator   |
                                |                |
                                +---+------+-----+
                                    |      |
                       +------------+      |
                       |                   +-----------+
                +------V-----+                         |
                |            |                  +------V-----+
                | Packet     |                  |            |
                | Domain     |                  | Optical    |
                | Controller |                  | Domain     |
                |            |                  | Controller |
                +------+-----+                  +-------+----+
                       |                                |
              .........V.........................       |
              :          packet domain          :       |
          +----+                               +----+   |
          | R1 |= = = = = = = = = = = = = = = =| R2 |   |
          +-+--+                               +--+-+   |
            | :                                 : |     |
            | :................................ : |     |
            |                                     |     |
            |               +-----+               |     |
            |    ...........| Opt |...........    |     |
            |    :          |  C  |          :    |     |
            |    :         /+--+--+\         :    |     |
            |    :        /    |    \        :    |     |
            |    :       /     |     \       :    |     |
            |   +-----+ /   +--+--+   \ +-----+   |     |
            |   | Opt |/    | Opt |    \| Opt |   |     |
            +---|  A  |     |  D  |     |  B  |---+     |
                +-----+\    +--+--+    /+-----+         |
                 :      \      |      /      :          |
                 :       \     |     /       :          |
                 :        \ +--+--+  / optical<---------+
                 :         \| Opt |/  domain :
                 :..........|  E  |..........:
                            +-----+
]]></artwork></figure>

<t><xref target="fig-poi-uc"/> as well as <xref target="fig-poi-abstraction"/> describe two different
   examples of packet/optical topologies and only show a partial view of the
   packet network connectivity, before additional packet connectivity is
   provided by the optical network.</t>

<t>It is assumed that the Optical Domain Controller provides to the
   Packet/Optical Coordinator an abstracted view of the optical network.
   A possible abstraction could be to represent the whole optical
   network as one "virtual node" with "virtual ports" connected to the
   access links, as shown in <xref target="fig-poi-abstraction"/>.</t>

<t>It is also assumed that Packet Domain Controller can provide the
   Packet/Optical Coordinator the information it needs to set up
   connectivity between packet nodes through the optical network (e.g.,
   the access links).</t>

<t>The path computation request helps the Packet/Optical Coordinator to
   know the real connections that can be provided by the optical
   network.</t>

<figure title="Packet and Optical Topology Abstractions" anchor="fig-poi-abstraction"><artwork type="ascii-art" name="poi-topology-abstraction.txt"><![CDATA[
                       ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,.
                      ,  Packet/Optical Coordinator view          ,
                     ,                              +----+       , .
                    ,                               |    |      ,
                   ,                                | R2 |     ,   .
                  ,  +----+  +------------ +       /+----+    ,
                 ,   |    |  |             |/-----/ / /      ,     .
                ,    | R1 |--O VP1     VP4 O       / /      ,
               ,     |    |\ |             | /----/ /      ,       .
              ,      +----+ \|             |/      /      ,
             ,        /      O VP2     VP5 O      /      ,         .
            ,        /       |             |  +----+    ,
           ,        /        |             |  |    |   ,           .
          ,        /         O VP3     VP6 O--| R4 |  ,
         ,     +----+ /-----/|_____________|  +----+ ,             .
        ,      |    |/       +------------ +        ,
       ,       | R3 |                              ,               .
      ,        +----+                             ,,,,,,,,,,,,,,,,,
     ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,                ,.
     . Packet Domain Controller view                +----+       ,
       only packet nodes and packet links           |    |      ,  .
     . with access links to the optical network     | R2 |     ,
                  ,  +----+                        /+----+    ,    .
     .           ,   |    |                 /-----/ / /      ,
                ,    | R1 |---                     / /      ,      .
     .         ,     +----+\                 /----/ /      ,
              ,        /    \               /      /      ,        .
     .       ,        /                           /      ,
            ,        /                        +----+    ,          .
     .     ,        /                         |    |   ,
          ,        /                       ---| R4 |  ,            .
     .   ,     +----+ /-----/                 +----+ ,
        ,      |    |/                              ,              .
     . ,       | R3 |                              ,
      ,        +----+                             ,,,,,,,,,,,,,,,,,.
     .,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,                ,
       Optical Domain Controller view                            , .
     . only optical nodes,        +--+                          ,
       optical links and         /|OF|                         ,   .
     . access links from the  +--++--+             /          ,
       packet network         |OA|    \     /-----/ /        ,     .
     .          ,          ---+--+--\  +--+/       /        ,
               ,           \   |  \  \-|OE|-------/        ,       .
     .        ,             \  |   \ /-+--+               ,
             ,               \+--+  X    |               ,         .
     .      ,                 |OB|-/ \   |              ,
           ,                  +--+-\  \+--+            ,           .
     .    ,                  /   \  \--|OD|---        ,
         ,            /-----/     +--+ +--+          ,             .
     .  ,            /            |OC|/             ,
       ,                          +--+             ,               .
     .,                                           ,,,,,,,,,,,,,,,,,,
      ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,                ,
     . Actual Physical View                         +----+       ,
                    ,             +--+              |    |      ,
     .             ,             /|OF|              | R2 |     ,
                  ,  +----+   +--++--+             /+----+    ,
     .           ,   |    |   |OA|    \     /-----/ / /      ,
                ,    | R1 |---+--+--\  +--+/       / /      ,
     .         ,     +----+\   |  \  \-|OE|-------/ /      ,
              ,        /    \  |   \ /-+--+        /      ,
     .       ,        /      \+--+  X    |        /      ,
            ,        /        |OB|-/ \   |    +----+    ,
     .     ,        /         +--+-\  \+--+   |    |   ,
          ,        /         /   \  \--|OD|---| R4 |  ,
     .   ,     +----+ /-----/     +--+ +--+   +----+ ,
        ,      |    |/            |OC|/             ,
     . ,       | R3 |             +--+             ,
      ,        +----+                             ,
     .,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
]]></artwork></figure>

<t>In this use case, the Packet/Optical Coordinator needs to set up an
   optimal underlying path for an IP link between R1 and R2.</t>

<t>As depicted in <xref target="fig-poi-abstraction"/>, the Packet/Optical Coordinator has only an
   "abstracted view" of the physical network, and it does not know the
   feasibility or the cost of the possible optical paths (e.g., VP1-VP4
   and VP2-VP5), which depend on the current status of the physical
   resources within the optical network and on vendor-specific optical
   attributes.</t>

<t>The Packet/Optical Coordinator can request the underlying Optical
   Domain Controller to compute a set of potential optimal paths, taking
   into account optical constraints. Then, based on its own constraints,
   policy and knowledge (e.g. cost of the access links), it can choose
   which one of these potential paths to use to set up the optimal end-
   to-end path crossing optical network.</t>

<figure title="Packet/Optical Integration path computation example" anchor="fig-poi-example"><artwork type="ascii-art" name="poi-example.txt"><![CDATA[
                    ............................
                    :                          :
                    O VP1                  VP4 O
           cost=10 /:\                        /:\ cost=10
                  / : \----------------------/ : \
          +----+ /  :         cost=50          :  \ +----+
          |    |/   :                          :   \|    |
          | R1 |    :                          :    | R2 |
          |    |\   :                          :   /|    |
          +----+ \  :  /--------------------\  :  / +----+
                  \ : /       cost=55        \ : /
            cost=5 \:/                        \:/ cost=5
                    O VP2                  VP5 O
                    :                          :
                    :..........................:
]]></artwork></figure>

<t>For example, in <xref target="fig-poi-example"/>, the Packet/Optical Coordinator can request
   the Optical Domain Controller to compute the paths between VP1-VP4
   and VP2-VP5 and then decide to set up the optimal end-to-end path
   using the VP2-VP5 optical path even if this is not the optimal path
   from the optical domain perspective.</t>

<t>Considering the dynamicity of the connectivity constraints of an
   optical domain, it is possible that a path computed by the Optical
   Domain Controller when requested by the Packet/Optical Coordinator is
   no longer valid/available when the Packet/Optical Coordinator
   requests it to be set up. This is further discussed in <xref target="rpc-motivation"/>.</t>

</section>
<section anchor="md-uc"><name>Multi-domain TE networks</name>

<t>In this use case there are two TE domains which are interconnected
   together by multiple inter-domains links.</t>

<t>A possible example could be a multi-domain optical network.</t>

<figure title="Multi-domain multi-link interconnection" anchor="md-ml-connection"><artwork type="ascii-art" name="multi-domain-use-case.txt"><![CDATA[
                            +--------------+
                            | Multi-Domain |
                            | Controller   |
                            +---+------+---+
                                |      |
                   +------------+      |
                   |                   +-----------+
            +------V-----+                         |
            |            |                         |
            | TE Domain  |                  +------V-----+
            | Controller |                  |            |
            |      1     |                  | TE Domain  |
            +------+-----+                  | Controller |
                   |                        |      2     |
                   |                        +------+-----+
          .........V..........                     |
          :                  :                     |
         +-----+             :                     |
         |     |             :            .........V..........
         |  X  |             :            :                  :
         |     |          +-----+      +-----+                :
         +-----+          |     |      |     |               :
          :               |  C  |------|  E  |               :
      +-----+    +-----+ /|     |      |     |\ +-----+    +-----+
      |     |    |     |/ +-----+      +-----+ \|     |    |     |
      |  A  |----|  B  |     :            :     |  G  |----|  H  |
      |     |    |     |\    :            :    /|     |    |     |
      +-----+    +-----+ \+-----+      +-----+/ +-----+    +-----+
          :               |     |      |     |               :
          :               |  D  |------|  F  |               :
          :               |     |      |     |          +-----+
          :               +-----+      +-----+          |     |
          :                  :            :             |  Y  |
          :                  :            :             |     |
          :   TE domain 1    :            : TE domain 2 +-----+
          :..................:            :.................:
]]></artwork></figure>

<t>In order to set up an end-to-end multi-domain TE path (e.g., between
   nodes A and H), the Multi-Domain Controller needs to know the
   feasibility or the cost of the possible TE paths within the two TE
   domains, which depend on the current status of the physical resources
   within each TE domain. This is more challenging in case of optical
   networks because the optimal paths depend also on vendor-specific
   optical attributes (which may be different in the two domains if they
   are provided by different vendors).</t>

<t>In order to set up a multi-domain TE path (e.g., between nodes A and
   H), the Multi-Domain Controller can request the TE Domain Controllers
   to compute a set of intra-domain optimal paths and take decisions
   based on the information received. For example:</t>

<t><list style="symbols">
  <t>The Multi-Domain Controller asks TE Domain Controllers to provide
set of paths between A-C, A-D, E-H and F-H</t>
  <t>TE Domain Controllers return a set of feasible paths with the
associated costs: the path A-C is not part of this set (in optical
networks, it is typical to have some paths not being feasible due
to optical constraints that are known only by the Optical Domain
Controller)</t>
  <t>The Multi-Domain Controller will select the path A-D-F-H since it
is the only feasible multi-domain path and then request the TE
Domain Controllers to set up the A-D and F-H intra-domain paths</t>
  <t>If there are multiple feasible paths, the Multi-Domain Controller
can select the optimal path knowing the cost of the intra-domain
paths (provided by the TE domain controllers) and the cost of the
inter-domain links (known by the Multi-Domain Controller)  <vspace blankLines='1'/>
This approach may have some scalability issues when the number of TE
domains is quite big (e.g. 20).  <vspace blankLines='1'/>
In this case, it would be worthwhile using the abstract TE topology
information provided by the TE Domain Controllers to limit the number
of potential optimal end-to-end paths and then request path
computation from fewer TE Domain Controllers in order to decide what
the optimal path within this limited set is.  <vspace blankLines='1'/>
For more details, see <xref target="topo-pc-complement"/>.</t>
</list></t>

</section>
<section anchor="dci-uc"><name>Data Center Interconnections</name>

<t>In these use case, there is a TE domain which is used to provide
   connectivity between Data Centers which are connected with the TE
   domain using access links.</t>

<figure title="Data Center Interconnection use case" anchor="fig-dci-uc"><artwork type="ascii-art" name="dci-use-case.txt"><![CDATA[
                        +--------------+
                        | Cloud Network|
                        | Orchestrator |
                        +--------------+
                          |  |  |  |
            +-------------+  |  |  +------------------------+
            |                |  +------------------+        |
            |       +--------V---+                 |        |
            |       |            |                 |        |
            |       | TE Network |                 |        |
     +------V-----+ | Controller |          +------V-----+  |
     | DC         | +------------+          | DC         |  |
     | Controller |     |                   | Controller |  |
     +------------+     |   +-----+         +------------+  |
          |         ....V...|     |........         |       |
          |         :       |  P  |       :         |       |
     .....V.....    :      /+-----+\      :    .....V.....  |
     :         :  +-----+ /    |    \ +-----+  :         :  |
     :  DC1 || :  |     |/     |     \|     |  :  DC2 || :  |
     :    ||||----| PE1 |      |      | PE2 |----   |||| :  |
     : _|||||| :  |     |\     |     /|     |  : _|||||| :  |
     :         :  +-----+ \ +-----+ / +-----+  :         :  |
     :.........:    :      \|     |/      :    :.........:  |
                    :.......| PE3 |.......:                 |
                            |     |                         |
                            +-----+               +---------V--+
                          .....|.....             | DC         |
                          :         :             | Controller |
                          :  DC3 || :             +------------+
                          :    |||| :                  |
                          : _|||||| <------------------+
                          :         :
                          :.........:
]]></artwork></figure>

<t>In this use case, there is the need to transfer data from Data Center
   1 (DC1) to either DC2 or DC3 (e.g. workload migration).</t>

<t>The optimal decision depends both on the cost of the TE path (DC1-DC2
   or DC1-DC3) and of the Data Center resources within DC2 or DC3.</t>

<t>The Cloud Network Orchestrator needs to make a decision for optimal
   connection based on TE network constraints and Data Center resources.</t>

<t>It may not be able to make this decision because it has only an
   abstract view of the TE network (as in <xref target="poi-uc"/>).</t>

<t>The Cloud Network Orchestrator can request to the TE Network
   Controller to compute the cost of the possible TE paths (e.g., DC1-
   DC2 and DC1-DC3) and to the DC Controller to provide the information
   it needs about the required Data Center resources within DC2 and DC3
   and then it can take the decision about the optimal solution based on
   this information and its policy.</t>

</section>
<section anchor="brpc-uc"><name>Backward Recursive Path Computation scenario</name>

<t><xref target="RFC5441"/> has defined the Virtual Source Path Tree (VSPT) flag within the RP (Request Parameters) object in order to compute inter-domain paths following a
   "Backward Recursive Path Computation" (BRPC) method. The main
   principle is to forward the PCReq message up to the destination
   domain. Then, each PCE involved in the computation will compute its
   part of the path and send it back to the requester through PCE
   Response message. The resulting computation is spread from
   destination PCE to source PCE. Each PCE is in charge of merging the
   path it received with the one it calculated. At the end, the source
   PCE merges its local part of the path with the received one to
   achieve the end-to-end path.</t>

<t><xref target="fig-brpc-example"/> below show a typical BRPC scenario where 3 PCEs cooperate to
   compute inter-domain paths.</t>

<figure title="BRPC Scenario" anchor="fig-brpc-example"><artwork type="ascii-art" name="brpc-scenario.txt"><![CDATA[
                   +----------------+          +----------------+
                   |  Domain (B)    |          |  Domain (C)    |
                   |                |          |                |
                   |        /-------|---PCEP---|--------\       |
                   |       /        |          |         \      |
                   |   (PCE)        |          |   -    (PCE)   |
                   |    /           <---------->  |D|           |
                   |   /            |  Inter   |   -            |
                   +---|----^-------+  Domain  +----------------+
                       |    |          Link
                     PCEP   |
                       |    | Inter-domain Link
                       |    |
                   +---|----v-------+
                   |   |            |
                   |   | Domain (A) |
                   |   \            |
                   |  (PCE)    -    |
                   |          |S|   |
                   |           -    |
                   +----------------+
]]></artwork></figure>

<t>In this use case, a client can use the YANG data model defined in
   this document to request path computation from the PCE that controls
   the source of the tunnel. For example, a client can request to the
   PCE of domain A to compute a path from a source S, within domain A,
   to a destination D, within domain C. Then PCE of domain A will use
   PCEP protocol, as per <xref target="RFC5441"/>, to compute the path from S to D and
   in turn gives the final answer to the requester.</t>

</section>
<section anchor="hpce-uc"><name>Hierarchical PCE scenario</name>

<t><xref target="RFC6805"/> has defined an architecture and extensions to the PCE
   standard to compute inter-domain path following a hierarchical
   method. Two new roles have been defined: parent PCE and child PCE.
   The parent PCE is in charge to coordinate the end-to-end path
   computation. For that purpose it sends to each child PCE involved in
   the multi-domain path computation a PCE Request message to obtain the
   local part of the path. Once received all answer through PCE Response
   message, the parent PCE will merge the different local parts of the
   path to achieve the end-to-end path.</t>

<t><xref target="fig-hpce-example"/> below shows a typical hierarchical scenario where a parent
   PCE request end-to-end path to the different child PCE. Note that a
   PCE could take independently the role of child or parent PCE
   depending of which PCE will request the path.</t>

<figure title="Hierarchical domain topology from RFC6805" anchor="fig-hpce-example"><artwork type="ascii-art" name="hierarchical-domain-topology.txt"><![CDATA[
    -----------------------------------------------------------------
    |   Domain 5                                                      |
    |                              -----                              |
    |                             |PCE 5|                             |
    |                              -----                              |
    |                                                                 |
    |    ----------------     ----------------     ----------------   |
    |   | Domain 1       |   | Domain 2       |   | Domain 3       |  |
    |   |                |   |                |   |                |  |
    |   |        -----   |   |        -----   |   |        -----   |  |
    |   |       |PCE 1|  |   |       |PCE 2|  |   |       |PCE 3|  |  |
    |   |        -----   |   |        -----   |   |        -----   |  |
    |   |                |   |                |   |                |  |
    |   |            ----|   |----        ----|   |----            |  |
    |   |           |BN11+---+BN21|      |BN23+---+BN31|           |  |
    |   |   -        ----|   |----        ----|   |----        -   |  |
    |   |  |S|           |   |                |   |           |D|  |  |
    |   |   -        ----|   |----        ----|   |----        -   |  |
    |   |           |BN12+---+BN22|      |BN24+---+BN32|           |  |
    |   |            ----|   |----        ----|   |----            |  |
    |   |                |   |                |   |                |  |
    |   |         ----   |   |                |   |   ----         |  |
    |   |        |BN13|  |   |                |   |  |BN33|        |  |
    |    -----------+----     ----------------     ----+-----------   |
    |                \                                /               |
    |                 \       ----------------       /                |
    |                  \     |                |     /                 |
    |                   \    |----        ----|    /                  |
    |                    ----+BN41|      |BN42+----                   |
    |                        |----        ----|                       |
    |                        |                |                       |
    |                        |        -----   |                       |
    |                        |       |PCE 4|  |                       |
    |                        |        -----   |                       |
    |                        |                |                       |
    |                        | Domain 4       |                       |
    |                         ----------------                        |
    |                                                                 |
     -----------------------------------------------------------------
]]></artwork></figure>

<t>In this use case, a client can use the YANG data model defined in
   this document to request to the parent PCE a path from a source S to
   a destination D. The parent PCE will in turn contact the child PCEs
   through PCEP protocol to compute the end-to-end path and then return
   the computed path to the client, using the YANG data model defined in
   this document. For example the YANG data model can be used to request
   to PCE5 acting as parent PCE to compute a path from source S, within
   domain 1, to destination D, within domain 3. PCE5 will contact child
   PCEs of domain 1, 2 and 3 to obtain local part of the end-to-end path
   through the PCEP protocol. Once received the PCRep message, it
   merges the answers to compute the end-to-end path and send it back to
   the client.</t>

</section>
</section>
<section anchor="motivations"><name>Motivations</name>

<t>This section provides the motivation for the YANG data model defined
   in this document.</t>

<t><xref target="yang-motivation"/> describes the motivation for a YANG data model to request
   path computation.</t>

<t><xref target="topo-interaction"/> describes the motivation for a YANG data model which
   complements the TE topology YANG data model defined in <xref target="RFC8795"/>.</t>

<t><xref target="rpc-motivation"/> describes the motivation for a YANG RPC which complements
   the TE tunnel YANG data model defined in <xref target="I-D.ietf-teas-yang-te"/>.</t>

<section anchor="yang-motivation"><name>Motivation for a YANG Model</name>

<section anchor="benefits-of-common-data-models"><name>Benefits of common data models</name>

<t>The YANG data model for requesting path computation is closely
   aligned with the YANG data models that provide (abstract) TE topology
   information, i.e., <xref target="RFC8795"/> as well as that are used to configure
   and manage TE tunnels, i.e., <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>There are many benefits in aligning the data model used for path
   computation requests with the YANG data models used for TE topology
   information and for TE tunnels configuration and management:</t>

<t><list style="symbols">
  <t>There is no need for an error-prone mapping or correlation of
information.</t>
  <t>It is possible to use the same endpoint identifiers in path
computation requests and in the topology modeling.</t>
  <t>The attributes used for path computation constraints are the same
as those used when setting up a TE tunnel.</t>
</list></t>

</section>
<section anchor="benefits-of-a-single-interface"><name>Benefits of a single interface</name>

<t>The system integration effort is typically lower if a single,
   consistent interface is used by controllers, i.e., one data modeling
   language (i.e., YANG) and a common protocol (e.g., NETCONF or
   RESTCONF).</t>

<t>Practical benefits of using a single, consistent interface include:</t>

<t><list style="numbers">
  <t>Simple authentication and authorization: The interface between
different components has to be secured. If different protocols
have different security mechanisms, ensuring a common access
control model may result in overhead. For instance, there may be a
need to deal with different security mechanisms, e.g., different
credentials or keys. This can result in increased integration
effort.</t>
  <t>Consistency: Keeping data consistent over multiple different
interfaces or protocols is not trivial. For instance, the sequence
of actions can matter in certain use cases, or transaction
semantics could be desired. While ensuring consistency within one
protocol can already be challenging, it is typically cumbersome to
achieve that across different protocols.</t>
  <t>Testing: System integration requires comprehensive testing,
including corner cases. The more different technologies are
involved, the more difficult it is to run comprehensive test cases
and ensure proper integration.</t>
  <t>Middle-box friendliness: Provider and consumer of path computation
requests may be located in different networks, and middle-boxes
such as firewalls, NATs, or load balancers may be deployed. In
such environments it is simpler to deploy a single protocol. Also,
it may be easier to debug connectivity problems.</t>
  <t>Tooling reuse: Implementers may want to implement path computation
requests with tools and libraries that already exist in
controllers and/or orchestrators, e.g., leveraging the rapidly
growing eco-system for YANG tooling.</t>
</list></t>

</section>
<section anchor="extensibility"><name>Extensibility</name>

<t>Path computation is only a subset of the typical functionality of a
   controller. In many use cases, issuing path computation requests
   comes along with the need to access other functionality on the same
   system. In addition to obtaining TE topology, for instance also
   configuration of services (set-up/modification/deletion) may be
   required, as well as:</t>

<t><list style="numbers">
  <t>Receiving notifications for topology changes as well as
integration with fault management</t>
  <t>Performance management such as retrieving monitoring and telemetry
data</t>
  <t>Service assurance, e.g., by triggering OAM functionality</t>
  <t>Other fulfilment and provisioning actions beyond tunnels and
services, such as changing QoS configurations  <vspace blankLines='1'/>
YANG is a very extensible and flexible data modeling language that
can be used for all these use cases.</t>
</list></t>

</section>
</section>
<section anchor="topo-interaction"><name>Interactions with TE topology</name>

<t>The use cases described in <xref target="use-cases"/> have been described assuming
   that the topology view exported by each underlying controller to its
   client is aggregated using the "virtual node model", defined in
   <xref target="RFC7926"/>.</t>

<t>TE topology information, e.g., as provided by <xref target="RFC8795"/>, could in
   theory be used by an underlying controller to provide TE information
   to its client thus allowing a PCE available within its client to
   perform multi-domain path computation on its own, without requesting
   path computations to the underlying controllers.</t>

<t>In case the client does not implement a PCE function, as discussed in
   <xref target="intro"/>, it could not perform path computation based on TE topology
   information and would instead need to request path computation from
   the underlying controllers to get the information it needs to find
   the optimal end-to-end path.</t>

<t>In case the client implements a PCE function, as discussed in 
   <xref target="intro"/>, the TE topology information needs to be complete and accurate,
   which would bring to scalability issues.</t>

<t>Using TE topology to provide a "virtual link model" aggregation, as
   described in <xref target="RFC7926"/>, may be insufficient, unless the aggregation
   provides complete and accurate information, which would still cause
   scalability issues, as described in <xref target="topo-aggregation"/> below.</t>

<t>Using TE topology abstraction, as described in <xref target="RFC7926"/>, may lead to
   compute an unfeasible path, as described in <xref target="RFC7926"/> in 
   <xref target="topo-abstraction"/> below.</t>

<t>Therefore when computing an optimal multi-domain path, there is a
   scalability trade-off between providing complete and accurate TE
   information and the number of path computation requests to the
   underlying controllers.</t>

<t>The TE topology information used, in a complimentary way, to reduce
   the number for path computation requests to the underlying
   controllers, are described in <xref target="topo-pc-complement"/> below.</t>

<section anchor="topo-aggregation"><name>TE topology aggregation</name>

<t>Using the TE topology model, as defined in <xref target="RFC8795"/>, the underlying
   controller can export the whole TE domain as a single TE node with a
   "detailed connectivity matrix" (which provides specific TE
   attributes, such as delay, Shared Risk Link Groups (SRLGs) and other
   TE metrics, between each ingress and egress links).</t>

<t>The information provided by the "detailed connectivity matrix" would
   be equivalent to the information that should be provided by "virtual
   link model" as defined in <xref target="RFC7926"/>.</t>

<t>For example, in the Packet/Optical Integration use case, described in
   <xref target="poi-uc"/>, the Optical Domain Controller can make the information
   shown in <xref target="fig-poi-example"/> available to the Packet/Optical Coordinator as part
   of the TE topology information and the Packet/Optical Coordinator
   could use this information to calculate on its own the optimal path
   between R1 and R2, without requesting any additional information to
   the Optical Domain Controller.</t>

<t>However, when designing the amount of information to provide within
   the "detailed connectivity matrix", there is a tradeoff to be
   considered between accuracy (i.e., providing "all" the information
   that might be needed by the PCE available within the client) and
   scalability.</t>

<t><xref target="poi-multi-path"/> below shows another example, similar to <xref target="fig-poi-example"/>, where
   there are two possible Optical paths between VP1 and VP4 with
   different properties (e.g., available bandwidth and cost).</t>

<figure title="Packet/Optical Integration path computation Example with multiple choices" anchor="poi-multi-path"><artwork type="ascii-art" name="poi-example-multiple.txt"><![CDATA[
                    ............................
                    :  /--------------------\  :
                    : /       cost=65        \ :
                    :/    available-bw=10G    \:
                    O VP1                  VP4 O
           cost=10 /:\                        /:\ cost=10
                  / : \----------------------/ : \
          +----+ /  :         cost=50          :  \ +----+
          |    |/   :     available-bw=2G      :   \|    |
          | R1 |    :                          :    | R2 |
          |    |\   :                          :   /|    |
          +----+ \  :  /--------------------\  :  / +----+
                  \ : /       cost=55        \ : /
            cost=5 \:/    available-bw=3G     \:/ cost=5
                    O VP2                  VP5 O
                    :                          :
                    :..........................:
]]></artwork></figure>

<t>If the information in the "detailed connectivity matrix" is not
   complete/accurate, we can have the following drawbacks:</t>

<t><list style="symbols">
  <t>If only the VP1-VP4 path with available bandwidth of 2 Gb/s and
cost 50 is reported, the client's PCE will fail to compute a 5
Gb/s path between routers R1 and R2, although this would be
feasible;</t>
  <t>If only the VP1-VP4 path with available bandwidth of 10 Gb/s and
cost 65 is reported, the client's PCE will compute, as optimal,
the 1 Gb/s path between R1 and R2 going through the VP2-VP5 path
within the optical domain while the optimal path would actually be
the one going thought the VP1-VP4 sub-path (with cost 50) within
the optical domain.  <vspace blankLines='1'/>
Reporting all the information, as in <xref target="poi-multi-path"/>, using the "detailed
 connectivity matrix", is quite challenging from a scalability
 perspective. The amount of this information is not just based on
 number of end points (which would scale as N-square), but also on
 many other parameters, including client rate, user
 constraints/policies for the service, e.g. max latency &lt; N ms, max
 cost, etc., exclusion policies to route around busy links, min
 Optical Signal to Noise Ratio (OSNR) margin, max pre-Forward Error
 Correction (FEC) Bit Error Rate (BER) etc. All these constraints
 could be different based on connectivity requirements.  <vspace blankLines='1'/>
It is also worth noting that the "connectivity matrix" has been
 originally defined in Wavelength Switched Optical Networks (WSON),
 <xref target="RFC7446"/>, to report the connectivity constrains of a physical node
 within the Wavelength Division Multiplexing (WDM) network: the
 information it contains is pretty "static" and therefore, once taken
 and stored in the TE data base, it can be always being considered
 valid and up-to-date in path computation request.  <vspace blankLines='1'/>
The "connectivity matrix" is sometimes confused with "optical reach
 table" that contain multiple (e.g. k-shortest) regen-free reachable
 paths for every A-Z node combination in the network. Optical reach
 tables can be calculated offline, utilizing vendor optical design and
 planning tools, and periodically uploaded to the Controller: these
 optical path reach tables are fairly static. However, to get the
 connectivity matrix, between any two sites, either a regen free path
 can be used, if one is available, or multiple regen free paths are
 concatenated to get from the source to the destination, which can be
 a very large combination. Additionally, when the optical path within
 optical domain needs to be computed, it can result in different paths
 based on input objective, constraints, and network conditions. In
 summary, even though "optical reach table" is fairly static, which
 regen free paths to build the connectivity matrix between any source
 and destination is very dynamic, and is done using very sophisticated
 routing algorithms.  <vspace blankLines='1'/>
Using the "basic connectivity matrix" with an abstract node to
 abstract the information regarding the connectivity constraints of an
 Optical domain, would make this information more "dynamic" since the
 connectivity constraints of an optical domain can change over time
 because some optical paths that are feasible at a given time may
 become unfeasible at a later time when e.g., another optical path is
 established.  <vspace blankLines='1'/>
The information in the "detailed connectivity matrix" is even more
 dynamic since the establishment of another optical path may change
 some of the parameters (e.g., delay or available bandwidth) in the
 "detailed connectivity matrix" while not changing the feasibility of
 the path.  <vspace blankLines='1'/>
There is therefore the need to keep the information in the "detailed
 connectivity matrix" updated which means that there another tradeoff
 between the accuracy (i.e., providing "all" the information that
 might be needed by the client's PCE) and having up-to-date
 information. The more the information is provided and the longer it
 takes to keep it up-to-date which increases the likelihood that the
 client's PCE computes paths using not updated information.  <vspace blankLines='1'/>
It seems therefore quite challenging to have a "detailed connectivity
 matrix" that provides accurate, scalable and updated information to
 allow the client's PCE to take optimal decisions by its own.  <vspace blankLines='1'/>
Considering the example in <xref target="poi-multi-path"/> with the approach defined in this
 document, the client, when it needs to set up an end-to-end path, it
 can request the Optical Domain Controller to compute a set of optimal
 paths (e.g., for VP1-VP4 and VP2-VP5) and take decisions based on the
 information received:</t>
  <t>When setting up a 5 Gb/s path between routers R1 and R2, the
Optical Domain Controller may report only the VP1-VP4 path as the
only feasible path: the Packet/Optical Coordinator can
successfully set up the end-to-end path passing though this
optical path;</t>
  <t>When setting up a 1 Gb/s path between routers R1 and R2, the
Optical Domain Controller (knowing that the path requires only 1
Gb/s) can report both the VP1-VP4 path, with cost 50, and the VP2-
VP5 path, with cost 65. The Packet/Optical Coordinator can then
compute the optimal path which is passing thought the VP1-VP4 sub-
path (with cost 50) within the optical domain.</t>
</list></t>

</section>
<section anchor="topo-abstraction"><name>TE topology abstraction</name>

<t>Using the TE topology model, as defined in <xref target="RFC8795"/>, the underlying
   controller can export to its client an abstract TE topology, composed
   by a set of TE nodes and TE links, representing the abstract view of
   the topology under its control.</t>

<t>For example, in the multi-domain TE network use case, described in
   <xref target="md-uc"/>, the TE Domain Controller 1 can export a TE topology
   encompassing the TE nodes A, B, C and D and the TE links
   interconnecting them. In a similar way, the TE Domain Controller 2
   can export a TE topology encompassing the TE nodes E, F, G and H and
   the TE links interconnecting them.</t>

<t>In this example, for simplicity reasons, each abstract TE node maps
   with each physical node, but this is not necessary.</t>

<t>In order to set up a multi-domain TE path (e.g., between nodes A and
   H), the Multi-Domain Controller can compute by its own an optimal
   end-to-end path based on the abstract TE topology information
   provided by the domain controllers. For example:</t>

<t><list style="symbols">
  <t>Multi-Domain Controller can compute, based on its own TED data,
the optimal multi-domain path being A-B-C-E-G-H, and then request
the TE Domain Controllers to set up the A-B-C and E-G-H intra-
domain paths</t>
  <t>But, during path set-up, the TE Domain Controller may find out
that A-B-C intra-domain path is not feasible (as discussed in
<xref target="md-uc"/>, in optical networks it is typical to have some paths
not being feasible due to optical constraints that are known only
by the Optical Domain Controller), while only the path A-B-D is
feasible</t>
  <t>So what the Multi-Domain Controller has computed is not good and
it needs to re-start the path computation from scratch  <vspace blankLines='1'/>
As discussed in <xref target="topo-aggregation"/>, providing more extensive abstract
information from the TE Domain Controllers to the Multi-Domain
Controller may lead to scalability problems.  <vspace blankLines='1'/>
In a sense this is similar to the problem of routing and wavelength
assignment within an optical domain. It is possible to do first
routing (step 1) and then wavelength assignment (step 2), but the
chances of ending up with a good path is low. Alternatively, it is
possible to do combined routing and wavelength assignment, which is
known to be a more optimal and effective way for optical path set-up.
Similarly, it is possible to first compute an abstract end-to-end
path within the Multi-Domain Controller (step 1) and then compute an
intra-domain path within each optical domain (step 2), but there are
more chances not to find a path or to get a suboptimal path than by
performing multiple per-domain path computations and then stitching
them together.</t>
</list></t>

</section>
<section anchor="topo-pc-complement"><name>Complementary use of the TE topology</name>

<t>As discussed in <xref target="md-uc"/>, there are some scalability issues with
   path computation requests in a multi-domain TE network with many TE
   domains, in terms of the number of requests to send to the TE Domain
   Controllers. It would therefore be worthwhile using the abstract TE
   topology information provided by the TE Domain Controllers to limit
   the number of requests.</t>

<t>An example can be described considering the multi-domain abstract TE
   topology shown in <xref target="fig-topo-many-domains"/>. In this example, an end-to-end TE path
   between domains A and F needs to be set up. The transit TE domain
   should be selected between domains B, C, D and E.</t>

<figure title="Multi-domain with many domains (Topology information)" anchor="fig-topo-many-domains"><artwork type="ascii-art" name="many-domains-topology.txt"><![CDATA[
                          .........B.........
                          : _ _ _ _ _ _ _ _ :
                          :/               \:
                      +---O  NOT FEASIBLE   O---+
                cost=5|   :                 :   |
    ......A......     |   :.................:   |     ......F......
    :           :     |                         |     :           :
    :           O-----+   .........C.........   +-----O           :
    :           :         : /-------------\ :         :           :
    :           :         :/               \:         :           :
    :  cost<=20 O---------O   cost <= 30    O---------O cost<=20  :
    :          /: cost=5  :                 : cost=5  :\          :
    :  /------/ :         :.................:         : \------\  :
    : /         :                                     :         \ :
    :/ cost<=25 :         .........D.........         : cost<=25 \:
    O-----------O-------+ : /-------------\ : +-------O-----------O
    :\          : cost=5| :/               \: |cost=5 :          /:
    : \         :       +-O   cost <= 30    O-+       :         / :
    :  \------\ :         :                 :         : /------/  :
    : cost>=30 \:         :.................:         :/ cost>=30 :
    :           O-----+                         +-----O           :
    :...........:     |   .........E.........   |     :...........:
                      |   : /-------------\ :   |
                cost=5|   :/               \:   |cost=5
                      +---O   cost >= 30    O---+
                          :                 :
                          :.................:
]]></artwork></figure>

<t>The actual cost of each intra-domain path is not known a priori from
   the abstract topology information. The Multi-Domain Controller only
   knows, from the TE topology provided by the underlying domain
   controllers, the feasibility of some intra-domain paths and some
   upper-bound and/or lower-bound cost information. With this
   information, together with the cost of inter-domain links, the Multi-
   Domain Controller can understand by its own that:</t>

<t><list style="symbols">
  <t>Domain B cannot be selected as the path connecting domains A and F
is not feasible;</t>
  <t>Domain E cannot be selected as a transit domain since it is known
from the abstract topology information provided by domain
controllers that the cost of the multi-domain path A-E-F (which is
100, in the best case) will be always be higher than the cost of
the multi-domain paths A-D-F (which is 90, in the worst case) and
A-C-F (which is 80, in the worst case).  <vspace blankLines='1'/>
Therefore, the Multi-Domain Controller can understand by its own that
 the optimal multi-domain path could be either A-D-F or A-C-F but it
 cannot know which one of the two possible option actually provides
 the optimal end-to-end path.  <vspace blankLines='1'/>
The Multi-Domain Controller can therefore request path computation
 only to the TE Domain Controllers A, D, C and F (and not to all the
 possible TE Domain Controllers).</t>
</list></t>

<figure title="Multi-domain with many domains (Path Computation information)" anchor="fig-pc-many-domains"><artwork type="ascii-art" name="many-domain-path-computation.txt"><![CDATA[
                          .........B.........
                          :                 :
                      +---O                 O---+
    ......A......     |   :.................:   |     ......F......
    :           :     |                         |     :           :
    :           O-----+   .........C.........   +-----O           :
    :           :         : /-------------\ :         :           :
    :           :         :/               \:         :           :
    :  cost=15  O---------O    cost = 25    O---------O  cost=10  :
    :          /: cost=5  :                 : cost=5  :\          :
    :  /------/ :         :.................:         : \------\  :
    : /         :                                     :         \ :
    :/ cost=10  :         .........D.........         : cost=15  \:
    O-----------O-------+ : /-------------\ : +-------O-----------O
    :           : cost=5| :/               \: |cost=5 :           :
    :           :       +-O    cost = 15    O-+       :           :
    :           :         :                 :         :           :
    :           :         :.................:         :           :
    :           O-----+                         +-----O           :
    :...........:     |   .........E.........   |     :...........:
                      |   :                 :   |
                      +---O                 O---+
                          :.................:
]]></artwork></figure>

<t>Based on these requests, the Multi-Domain Controller can know the
   actual cost of each intra-domain paths which belongs to potential
   optimal end-to-end paths, as shown in <xref target="fig-pc-many-domains"/>, and then compute the
   optimal end-to-end path (e.g., A-D-F, having total cost of 50,
   instead of A-C-F having a total cost of 70).</t>

</section>
</section>
<section anchor="rpc-motivation"><name>Path Computation RPC</name>

<t>The TE tunnel YANG data model, defined in <xref target="I-D.ietf-teas-yang-te"/>, can support
   the need to request path computation, as described in section 5.1.2
   of <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>This solution is stateful since the state of each created "compute-
   only" TE tunnel path needs to be maintained, in the YANG datastores
   (at least in the running datastore and operational datastore), and
   updated, when underlying network conditions change.</t>

<t>The RPC mechanism allows requesting path computation using a simple
   atomic operation, without creating any state in the YANG datastores,
   and it is the natural option/choice, especially with stateless PCE.</t>

<t>It is very useful to provide both the options of using an RPC as well
   as of setting up TE tunnel paths in "compute-only" mode. It is
   suggested to use the RPC as much as possible and to rely on
   "compute-only" TE tunnel paths, when really needed.</t>

<t>Using the RPC solution would imply that the underlying controller
   (e.g., a PNC) computes a path twice during the process to set up an
   LSP: at time T1, when its client (e.g., an MDSC) sends a path
   computation RPC request to it, and later, at time T2, when the same
   client (MDSC) creates a TE tunnel requesting the set-up of the LSP.
   The underlying assumption is that, if network conditions have not
   changed, the same path that has been computed at time T1 is also
   computed at time T2 by the underlying controller (e.g. PNC) and
   therefore the path that is set up at time T2 is exactly the same path
   that has been computed at time T1.</t>

<t>However, since the operation is stateless, there is no guarantee that
   the returned path would still be available when path set-up is
   requested: this does not cause major issues when the time between
   path computation and path set-up is short (especially if compared
   with the time that would be needed to update the information of a
   very detailed connectivity matrix).</t>

<t>In most of the cases, there is even no need to guarantee that the
   path that has been set up is the exactly same as the path that has
   been returned by path computation, especially if it has the same or
   even better metrics. Depending on the abstraction level applied by
   the server, the client may also not know the actual computed path.</t>

<t>The most important requirement is that the required global objectives
   (e.g., multi-domain path metrics and constraints) are met. For this
   reason a path verification phase is always necessary to verify that
   the actual path that has been set up meets the global objectives (for
   example in a multi-domain network, the resulting end-to-end path
   meets the required end-to-end metrics and constraints).</t>

<t>In most of the cases, even if the path being set up is not exactly
   the same as the path returned by path computation, its metrics and
   constraints are "good enough" and the path verification passes
   successfully. In the few corner cases where the path verification
   fails, it is possible repeat the whole process (path computation,
   path set-up and path verification).</t>

<t>In case it is required to set up at T2 exactly the same path computed
   at T1, the RPC solution should not be used and, instead, a "compute-
   only" TE tunnel path should be set up, allowing also notifications in
   case the computed path has been changed.</t>

<t>In this case, at time T1, the client (MDSC) creates a TE tunnel in a
   compute-only mode in the running datastore and later, at time T2,
   changes the configuration of that TE tunnel (not to be any more in a
   compute-only mode) to trigger the set-up of the LSP over the path
   which have been computed at time T1 and reported in the operational
   datastore.</t>

<t>It is worth noting that also using the "compute-only" TE tunnel path,
   although increasing the likelihood that the computed path is
   available at path set-up, does not guarantee that because
   notifications may not be reliable or delivered on time. Path
   verification is needed also in this case.</t>

<t>The solution based on "compute-only" TE tunnel path has also the
   following drawbacks:</t>

<t><list style="symbols">
  <t>Several messages required for any path computation</t>
  <t>Requires persistent storage in the underlying controller</t>
  <t>Need for garbage collection for stranded paths</t>
  <t>Process burden to detect changes on the computed paths in order to
provide notifications update</t>
</list></t>

<section anchor="temp-state"><name>Temporary reporting of the computed path state</name>

<t>This section describes an optional extension to the stateless
   behavior of the path computation RPC, where the underlying
   controller, after having received a path computation RPC request,
   maintains some "transient state" associated with the computed path,
   allowing the client to request the set-up of exactly that path, if
   still available.</t>

<t>This is similar to the "compute-only" TE tunnel path solution but, to
   avoid the drawbacks of the stateful approach, is leveraging the path
   computation RPC and the separation between configuration and
   operational datastore, as defined in the NMDA architecture <xref target="RFC8342"/>.</t>

<t>The underlying controller, after having computed a path, as requested
   by a path computation RPC, also creates a TE tunnel instance within
   the operational datastore, to store that computed path. This would be
   similar to a "compute-only" TE tunnel path, with the only difference
   that there is no associated TE tunnel instance within the running
   datastore.</t>

<t>Since the underlying controller stores in the operational datastore
   the computed path based on an abstract topology it exposes, it also
   remembers, internally, which is the actual native path (physical
   path), within its native topology (physical topology), associated
   with that compute-only TE tunnel instance.</t>

<t>Afterwards, the client (e.g., MDSC) can request the set-up of that
   specific path by creating a TE tunnel instance (not in compute-only
   mode) in the running datastore using the same tunnel-name of
   the existing TE tunnel in the operational datastore: this will
   trigger the underlying controller to set up that path, if still
   available.</t>

<t>There are still cases where the path being set up is not exactly the
   same as the path that has been computed:</t>

<t><list style="symbols">
  <t>When the tunnel is configured with path constraints which are not
compatible with the computed path;</t>
  <t>When the tunnel set-up is requested after the resources of the
computed path are no longer available;</t>
  <t>When the tunnel set-up is requested after the computed path is no
longer known (e.g. due to a server reboot) by the underlying
controller.  <vspace blankLines='1'/>
In all these cases, the underlying controller should compute and set
 up a new path.  <vspace blankLines='1'/>
Therefore the "path verification" phase, as described in <xref target="rpc-motivation"/>
 above, is always needed to check that the path that has been set up
 is still "good enough".  <vspace blankLines='1'/>
Since this new approach is not completely stateless, garbage
 collection is implemented using a timeout that, when it expires,
 triggers the removal of the computed path from the operational
 datastore. This operation is fully controlled by the underlying
 controller without the need for any action to be taken by the client
 that is not able to act on the operational datastore. The default
 value of this timeout is 10 minutes but a different value may be
 configured by the client.  <vspace blankLines='1'/>
In addition, it is possible for the client to tag each path
 computation request with a transaction-id allowing for a faster
 removal of all the paths associated with a transaction-id, without
 waiting for their timers to expire.  <vspace blankLines='1'/>
The underlying controller can remove from the operational datastore
 all the paths computed with a given transaction-id which have not
 been set up either when it receives a Path Delete RPC request for
 that transaction-id or, automatically, right after the set-up up of a
 path that has been previously computed with that transaction-id.  <vspace blankLines='1'/>
This possibility is useful when multiple paths are computed but, at
 most, only one is set up (e.g., in multi-domain path computation
 scenario scenarios). After the selected path has been set up (e.g, in
 one domain during multi-domain path set-up), all the other
 alternative computed paths can be automatically deleted by the
 underlying controller (since no longer needed). The client can also
 request, using the Path Delete RPC request, the underlying controller
 to remove all the computed paths, if none of them is going to be set
 up (e.g., in a transit domain not being selected by multi-domain path
 computation and so not being automatically deleted).  <vspace blankLines='1'/>
This approach is complimentary and not alternative to the timer which
 is always needed to avoid stranded computed paths being stored in the
 operational datastore when no path is set up and no explicit Path
 Delete RPC request is received.</t>
</list></t>

</section>
</section>
</section>
<section anchor="path-computation-and-optimization-for-multiple-paths"><name>Path computation and optimization for multiple paths</name>

<t>There are use cases, where it is advantageous to request path
   computation for a set of paths, through a network or through a
   network domain, using a single request <xref target="RFC5440"/>.</t>

<t>In this case, sending a single request for multiple path
   computations, instead of sending multiple requests for each path
   computation, would reduce the protocol overhead and it would consume
   less resources (e.g., threads in the client and server).</t>

<t>In the context of a typical multi-domain TE network, there could
   multiple choices for the ingress/egress points of a domain and the
   Multi-Domain Controller needs to request path computation between all
   the ingress/egress pairs to select the best pair. For example, in the
   example of <xref target="md-uc"/>, the Multi-Domain Controller needs to request
   the TE Network Controller 1 to compute the A-C and the A-D paths and
   to the TE Network Controller 2 to compute the E-H and the F-H paths.</t>

<t>It is also possible that the Multi-Domain Controller receives a
   request to set up a group of multiple end to end connections. The
   Multi-Domain Controller needs to request each TE domain Controller to
   compute multiple paths, one (or more) for each end to end connection.</t>

<t>There are also scenarios where it can be needed to request path
   computation for a set of paths in a synchronized fashion.</t>

<t>One example could be computing multiple diverse paths. Computing a
   set of diverse paths in an unsynchronized fashion, leads to the
   possibility of not being able to satisfy the diversity requirement.
   In this case, it is preferable to compute a sub-optimal primary path
   for which a diversely routed secondary path exists.</t>

<t>There are also scenarios where it is needed to request optimizing a
   set of paths using objective functions that apply to the whole set of
   paths, see <xref target="RFC5541"/>, e.g. to minimize the sum of the costs of all
   the computed paths in the set.</t>

</section>
<section anchor="yang-data-model-for-requesting-path-computation"><name>YANG data model for requesting Path Computation</name>

<t>This document define a YANG RPC to request path computation as an
   "augmentation" of tunnel-rpc, defined in <xref target="I-D.ietf-teas-yang-te"/>. This model
   provides the RPC input attributes that are needed to request path
   computation and the RPC output attributes that are needed to report
   the computed paths.</t>

<figure><artwork type="ascii-art" name="overview.txt"><![CDATA[
  augment /te:tunnels-path-compute/te:input/te:path-compute-info:
    +-- path-request* [request-id]
    |  ...

  augment /te:tunnels-path-compute/te:output/te:path-compute-result:
    +--ro response* [response-id]
       +--ro response-id                         uint32
       +--ro computed-paths-properties
       |  +--ro computed-path-properties* [k-index]
       |     ...
]]></artwork></figure>

<t>This model extensively re-uses the grouping defined in <xref target="I-D.ietf-teas-yang-te"/>
   and <xref target="I-D.ietf-teas-rfc8776-update"/> to ensure maximal syntax and semantics commonality.</t>

<t>This YANG data model allows one RPC to include multiple path
   requests, each path request being identified by a request-id.
   Therefore, one RPC can return multiple responses, one for each path
   request, being identified by a response-id equal to the corresponding
   request-id. Each response reports one or more computed paths, as
   requested by the k-requested-paths attribute. By default, each
   response reports one computed path.</t>

<section anchor="synchronization-of-multiple-path-computation-requests"><name>Synchronization of multiple path computation requests</name>

<t>The YANG data model permits the synchronization of a set of multiple
   path requests (identified by specific request-id) all related to a
   "svec" container emulating the syntax of the Synchronization VECtor
   (SVEC) PCEP object, defined in <xref target="RFC5440"/>.</t>

<figure><artwork type="ascii-art" name="synchronization.txt"><![CDATA[
    +-- synchronization* []
       +-- svec
       |  +-- relaxable?      boolean
       |  +-- disjointness?   te-path-disjointness
       |  +-- request-id*     uint32
       +-- svec-constraints
       |  +-- path-metric-bound* [metric-type]
       |     +-- metric-type    identityref
       |     +-- upper-bound?   uint64
       +-- path-srlgs-lists
       |  +-- path-srlgs-list* [usage]
       |     +-- usage     identityref
       |     +-- values*   srlg
       +-- path-srlgs-names
       |  +-- path-srlgs-name* [usage]
       |     +-- usage    identityref
       |     +-- names*   string
       +-- exclude-objects
       |  +-- excludes* []
       |     +-- (type)?
       |        +--:(numbered-node-hop)
       |        |  +-- numbered-node-hop
       |        |     +-- node-id     te-node-id
       |        |     +-- hop-type?   te-hop-type
       |        +--:(numbered-link-hop)
       |        |  +-- numbered-link-hop
       |        |     +-- link-tp-id    te-tp-id
       |        |     +-- hop-type?     te-hop-type
       |        |     +-- direction?    te-link-direction
       |        +--:(unnumbered-link-hop)
       |        |  +-- unnumbered-link-hop
       |        |     +-- link-tp-id    te-tp-id
       |        |     +-- node-id       te-node-id
       |        |     +-- hop-type?     te-hop-type
       |        |     +-- direction?    te-link-direction
       |        +--:(as-number)
       |        |  +-- as-number-hop
       |        |     +-- as-number    inet:as-number
       |        |     +-- hop-type?    te-hop-type
       |        +--:(label)
       |           +-- label-hop
       |              +-- te-label
       |                 ...
       +-- optimizations
          +-- (algorithm)?
             +--:(metric) {te-types:path-optimization-metric}?
             |  +-- optimization-metric* [metric-type]
             |     +-- metric-type    identityref
             |     +-- weight?        uint8
             +--:(objective-function)
                      {te-types:path-optimization-objective-function}?
                +-- objective-function
                   +-- objective-function-type?   identityref
]]></artwork></figure>

<t>The model, in addition to the metric types, defined in <xref target="I-D.ietf-teas-rfc8776-update"/>,
   which can be applied to each individual path request, supports also
   additional metric types, which apply to a set of synchronized
   requests, as referenced in <xref target="RFC5541"/>. These additional metric types
   are defined by the following YANG identities:</t>

<t><list style="symbols">
  <t>svec-metric-type: base YANG identity from which cumulative metric
types identities are derived.</t>
  <t>svec-metric-cumul-te: cumulative TE cost metric type, as defined
in <xref target="RFC5541"/>.</t>
  <t>svec-metric-cumul-igp: cumulative IGP cost metric type, as defined
in <xref target="RFC5541"/>.</t>
  <t>svec-metric-cumul-hop: cumulative Hop metric type, representing
the cumulative version of the Hop metric type defined in
<xref target="I-D.ietf-teas-rfc8776-update"/>.</t>
  <t>svec-metric-aggregate-bandwidth-consumption: aggregate bandwidth
consumption metric type, as defined in <xref target="RFC5541"/>.</t>
  <t>svec-metric-load-of-the-most-loaded-link: load of the most loaded
link metric type, as defined in <xref target="RFC5541"/>.</t>
</list></t>

</section>
<section anchor="returned-metric-values"><name>Returned metric values</name>

<t>This YANG data model provides a way to return the values of the
   metrics computed by the path computation in the output of RPC,
   together with other important information (e.g. SRLG, affinities,
   explicit route), emulating the syntax of the "C" flag of the "METRIC"
   PCEP object <xref target="RFC5440"/>:</t>

<figure><artwork type="ascii-art" name="returned-metrics.txt"><![CDATA[
       |     +--ro path-properties
       |        +--ro path-metric* [metric-type]
       |        |  +--ro metric-type           identityref
       |        |  +--ro accumulative-value?   uint64
       |        +--ro path-affinities-values
       |        |  +--ro path-affinities-value* [usage]
       |        |     +--ro usage    identityref
       |        |     +--ro value?   admin-groups
       |        +--ro path-affinity-names
       |        |  +--ro path-affinity-name* [usage]
       |        |     +--ro usage            identityref
       |        |     +--ro affinity-name* [name]
       |        |        +--ro name    string
       |        +--ro path-srlgs-lists
       |        |  +--ro path-srlgs-list* [usage]
       |        |     +--ro usage     identityref
       |        |     +--ro values*   srlg
       |        +--ro path-srlgs-names
       |        |  +--ro path-srlgs-name* [usage]
       |        |     +--ro usage    identityref
       |        |     +--ro names*   string
       |        +--ro path-route-objects
       |        |  ...
       |        +--ro te-bandwidth
       |        |  ...
       |        +--ro disjointness-type?
       |                te-types:te-path-disjointness
]]></artwork></figure>

<t>It also allows the client to request which information (metrics, SRLG
   and/or affinities) should be returned:</t>

<figure><artwork type="ascii-art" name="requested-metrics.txt"><![CDATA[
    |  +-- request-id                            uint32
    |  ...
    |  +-- requested-metrics* [metric-type]
    |  |  +-- metric-type    identityref
    |  +-- return-srlgs?                         boolean
    |  +-- return-affinities?                    boolean
    |  ...
]]></artwork></figure>

<t>This feature is essential for path computation in a multi-domain TE
   network as described in <xref target="md-uc"/>. In this case, the metrics
   returned by a path computation requested to a given underlying
   controller must be used by the client to compute the best end-to-end
   path. If they are missing, the client cannot compare different paths
   calculated by the underlying controllers and choose the best one for
   the optimal end-to-end (e2e) path.</t>

</section>
<section anchor="multiple-paths-requests-for-the-same-te-tunnel"><name>Multiple Paths Requests for the same TE tunnel</name>

<t>The YANG data model allows including multiple requests for different
   paths intended to be used within the same tunnel or within different
   tunnels.</t>

<t>When multiple requested paths are intended to be used within the same
   tunnel (e.g., requesting path computation for the primary and
   secondary paths of a protected tunnel), the set of attributes that
   are intended to be configured on per-tunnel basis rather than on per-
   path basis are common to all these path requests. These attributes
   includes both attributes which can be configured only a per-tunnel
   basis (e.g., tunnel-name, source/destination TTP, encoding and
   switching-type) as well attributes which can be configured both on a
   per-tunnel and on a per-path basis (e.g., the te-bandwidth or the
   associations).</t>

<t>Therefore, a tunnel-attributes list is defined, within the path
   computation request RPC:</t>

<figure><artwork type="ascii-art" name="tunnel-attributes-list.txt"><![CDATA[
    +-- tunnel-attributes* [tunnel-name]
    |  +-- tunnel-name               string
    |  +-- encoding?                 identityref
    |  +-- switching-type?           identityref
    |  +-- source?                   te-types:te-node-id
    |  +-- destination?              te-types:te-node-id
    |  +-- src-tunnel-tp-id?         binary
    |  +-- dst-tunnel-tp-id?         binary
    |  +-- bidirectional?            boolean
    |  +-- association-objects
    |  |  ...
    |  +-- protection-type?          identityref
    |  +-- restoration-type?         identityref
    |  +-- restoration-scheme?       identityref
    |  +-- te-topology-identifier
    |  |  +-- provider-id?   te-global-id
    |  |  +-- client-id?     te-global-id
    |  |  +-- topology-id?   te-topology-id
    |  +-- te-bandwidth
    |  |  ...
    |  +-- link-protection?          identityref
    |  +-- setup-priority?           uint8
    |  +-- hold-priority?            uint8
    |  +-- signaling-type?           identityref
    |  +-- hierarchy
    |     +-- dependency-tunnels
    |     |  ...
    |     +-- hierarchical-link
    |        ...
]]></artwork></figure>

<t>The path requests that are intended to be used within the same tunnel
   should reference the same entry in the tunnel-attributes list. This
   allows:</t>

<t><list style="symbols">
  <t>avoiding repeating the same set of per-tunnel parameters on
multiple requested paths;</t>
  <t>the server to understand what attributes are intended to be
configured on a per-tunnel basis (e.g., the te-bandwidth
configured in the tunnel-attributes) and what attributes are
intended to be configured on a per-path basis(e.g., the te-
bandwidth configured in the path-request). This could be useful
especially when the server also creates a TE tunnel instance
within the operational datastore to report the computed paths, as
described in <xref target="temp-state"/>: in this case, the tunnel-name is also
used as the suggested name for that TE tunnel instance.  <vspace blankLines='1'/>
The YANG data model allows also including requests for paths intended
 to modify existing tunnels (e.g., adding a protection path for an
 existing un-protected tunnel). In this case, the per-tunnel
 attributes are already provided in an existing TE tunnel instance and
 do not need to be re-configured in the path computation request RPC.
 Therefore, these requests should reference an existing TE tunnel
 instance.  <vspace blankLines='1'/>
It is also possible to request computing paths without indicating in
 which tunnel they are intended to be used (e.g., in case of an
 unprotected tunnel). In this case, the per-tunnel attributes could be
 provided together with the per-path attributes in the path request,
 without using the tunnel-attributes list.  <vspace blankLines='1'/>
The choices below are defined to distinguish the cases above:</t>
  <t>whether the per-tunnel attributes are configured by reference
(providing a leafref), to:  <list style="symbols">
      <t>either a TE tunnel instance, if it exists;</t>
      <t>or to an entry of the tunnel-attributes list, if the TE tunnel
instance does not exist;</t>
    </list></t>
  <t>or by value, providing the set of tunnel attributes within the
path request:</t>
</list></t>

<figure><artwork type="ascii-art" name="tunnel-attributes.txt"><![CDATA[
    |  +-- (tunnel-attributes)?
    |  |  +--:(reference)
    |  |  |  +-- tunnel-reference
    |  |  |     +-- (tunnel-exist)
    |  |  |     |  +--:(tunnel-ref)
    |  |  |     |  |  +-- tunnel-ref                te:tunnel-ref
    |  |  |     |  +--:(tunnel-attributes-ref)
    |  |  |     |     +-- tunnel-attributes-ref     leafref
    |  |  |     +-- path-name?                      string
    |  |  |     +-- (path-role)
    |  |  |        ...
    |  |  +--:(value)
    |  |     +-- tunnel-name?                    string
    |  |     +-- path-name?                      string
    |  |     +-- (path-role)?
    |  |     |  ...
    |  |     ...
    |  |     +-- encoding?                       identityref
    |  |     +-- switching-type?                 identityref
    |  |     ...
]]></artwork></figure>

<section anchor="tunnel-attributes-specified-by-value"><name>Tunnel attributes specified by value</name>

<t>The (value) case provides the set of attributes that are configured
   only on per-tunnel basis (e.g., tunnel-name, source/destination TTP,
   encoding and switching-type).</t>

<t>In this case, it is assumed that the requested path will be the only
   path within a tunnel.</t>

<t>If the only path within a tunnel is the transit segment of a multi-domain end-to-end path, it can be of any type (primary, secondary, reverse-primary
   or reverse-secondary). The (path-role) choice is used to specify its role in the path request:</t>

<figure><artwork type="ascii-art" name="tunnel-by-value.txt"><![CDATA[
    |  |     +-- (path-role)?
    |  |     |  +--:(primary-path)
    |  |     |  +--:(secondary-path)
    |  |     |  |  +-- secondary-path!
    |  |     |  |     +-- primary-path-name?   string
    |  |     |  +--:(primary-reverse-path)
    |  |     |  |  +-- primary-reverse-path!
    |  |     |  |     +-- primary-path-name?   string
    |  |     |  +--:(secondary-reverse-path)
    |  |     |     +-- secondary-reverse-path!
    |  |     |        +-- primary-path-name?           string
    |  |     |        +-- primary-reverse-path-name?   string
]]></artwork></figure>

<t>In all the other cases, the only path within a tunnel is a primary path.</t>

<t>The secondary-path, the primary-reverse-path and the secondary-
   reverse-path are presence container used to indicate the role of the
   path: by default, the path is assumed to be a primary path.</t>

<t>They optionally can contain the name of the primary-path under which
   the requested path could be associated within the YANG tree structure
   defined in <xref target="I-D.ietf-teas-yang-te"/>, which could be useful when the server also
   creates a TE tunnel instance within the operational datastore to
   report the computed paths, as described in <xref target="temp-state"/>: in this
   case, the tunnel-name and the path names are also used as the
   suggested name for that TE tunnel and path instances.</t>

</section>
<section anchor="tunnel-attributes-specified-by-reference"><name>Tunnel attributes specified by reference</name>

<t>The (reference) case provides the information needed to associate
   multiple path requests that are intended to be used within the same
   tunnel.</t>

<t>In order to indicate the role of the path being requested within the
   intended tunnel (e.g., primary or secondary path), the (path-role)
   choice is defined:</t>

<figure><artwork type="ascii-art" name="tunnel-by-reference.txt"><![CDATA[
    |  |  |     +-- (path-role)
    |  |  |        +--:(primary-path)
    |  |  |        |  +-- primary-path!
    |  |  |        |     ...
    |  |  |        +--:(secondary-path)
    |  |  |        |  +-- secondary-path
    |  |  |        |     ...
    |  |  |        +--:(primary-reverse-path)
    |  |  |        |  +-- primary-reverse-path
    |  |  |        |     ...
    |  |  |        +--:(secondary-reverse-path)
    |  |  |           +-- secondary-reverse-path
    |  |  |              ...
]]></artwork></figure>

<t>The primary-path is a presence container used to indicate that the
   requested path is intended to be used as a primary path. It can also
   contain some attributes which are configured only on primary paths
   (e.g., the k-requested-paths).</t>

<t>The secondary-path container indicates that the requested path is
   intended to be used as a secondary path and it contains at least
   references to one or more primary paths which can use it as a
   candidate secondary path:</t>

<figure><artwork type="ascii-art" name="secondary-path.txt"><![CDATA[
    |  |  |        |  +-- secondary-path
    |  |  |        |     ...
    |  |  |        |     +-- primary-path-ref* []
    |  |  |        |        +-- (primary-path-exist)
    |  |  |        |           +--:(path-ref)
    |  |  |        |           |  +-- primary-path-ref    leafref
    |  |  |        |           +--:(path-request-ref)
    |  |  |        |              +-- path-request-ref    leafref
]]></artwork></figure>

<t>A requested secondary path can reference any requested primary paths,
   and, in case they are intended to be used within an existing TE
   tunnel, it could also reference any existing primary-paths.</t>

<t>The secondary-path container can also contain some attributes which
   are configured only on secondary paths (e.g., the protection-type).</t>

<t>The primary-reverse-path container indicates that the requested path
   is intended to be used as a primary reverse path and it contains only
   the reference to the primary path which is intended to use it as a
   reverse path:</t>

<figure><artwork type="ascii-art" name="primary-reverse-path.txt"><![CDATA[
    |  |  |        |  +-- primary-reverse-path
    |  |  |        |     +-- (primary-path-exist)
    |  |  |        |        +--:(path-ref)
    |  |  |        |        |  +-- primary-path-ref    leafref
    |  |  |        |        +--:(path-request-ref)
    |  |  |        |           +-- path-request-ref    leafref
]]></artwork></figure>

<t>A requested primary reverse path can reference either a requested
   primary path, or, in case it is intended to be used within an
   existing TE tunnel, an existing primary-path.</t>

<t>The secondary-reverse-path container indicates that the requested
   path is intended to be used as a secondary reverse path and it
   contains at least references to one or more primary paths, whose
   primary reverse path can use it as a candidate secondary reverse
   path:</t>

<figure><artwork type="ascii-art" name="secondary-reverse-path.txt"><![CDATA[
    |  |  |           +-- secondary-reverse-path
    |  |  |              ...
    |  |  |              +-- primary-reverse-path* []
    |  |  |                 +-- (primary-reverse-path-exist)
    |  |  |                    +--:(path-ref)
    |  |  |                    |  +-- primary-path-ref    leafref
    |  |  |                    +--:(path-request-ref)
    |  |  |                       +-- path-request-ref    leafref
]]></artwork></figure>

<t>A requested secondary reverse path can reference any requested
   primary paths, and, in case they are intended to be used within an
   existing TE tunnel, it could reference also existing primary-paths.</t>

<t>The secondary-reverse-path container can also contain some attributes
   which are configured only on secondary reverse paths (e.g., the
   protection-type).</t>

<t>In case the requested path is a transit segment of a multi-domain
   end-to-end path, the primary-path may not be needed to be
   setup/computed. However, the request for path computation of a
   secondary-path or a primary-reverse or of a secondary-reverse-path
   requires that the primary-path exists or it is requested within the
   same RPC request. In the latter case, the path request for the
   primary-path should have an empty 'route-object-include-exclude' list,
   as described in section 5.1.1 of <xref target="I-D.ietf-teas-yang-te"/>, to indicate to the server that
   path computation is not requested and no path properties will
   therefore be returned in the RPC response.</t>

</section>
</section>
<section anchor="multi-layer-path-computation"><name>Multi-Layer Path Computation</name>

<t>The models supports requesting multi-layer path computation following
   the same approach based on dependency tunnels, as defined in <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>The tunnel-attributes of a given client-layer path request can
   reference server-layer TE tunnels which can already exist in the YANG
   datastore or be specified in the tunnel-attributes list, within the
   same RPC request:</t>

<figure><artwork type="ascii-art" name="dependency-tunnels.txt"><![CDATA[
    |     +-- dependency-tunnels
    |     |  +-- dependency-tunnel* [name]
    |     |  |  +-- name              -> /te:te/tunnels/tunnel/name
    |     |  |  +-- encoding?         identityref
    |     |  |  +-- switching-type?   identityref
    |     |  +-- dependency-tunnel-attributes* [name]
    |     |     +-- name              leafref
    |     |     +-- encoding?         identityref
    |     |     +-- switching-type?   identityref
]]></artwork></figure>

<t>In a similar way as in <xref target="I-D.ietf-teas-yang-te"/>, the server-layer tunnel
   attributes should provide the information of what would be the
   dynamic link in the client layer topology supported by that tunnel,
   if instantiated:</t>

<figure><artwork type="ascii-art" name="hierarchical-link.txt"><![CDATA[
    |     +-- hierarchical-link
    |        +-- enable?                   boolean
    |        +-- local-te-node-id?         te-types:te-node-id
    |        +-- local-te-link-tp-id?      te-types:te-tp-id
    |        +-- remote-te-node-id?        te-types:te-node-id
    |        +-- te-topology-identifier
    |           +-- provider-id?   te-global-id
    |           +-- client-id?     te-global-id
    |           +-- topology-id?   te-topology-id
]]></artwork></figure>

<t>It is worth noting that since path computation RPC is stateless, the
   dynamic hierarchical links configured for the server-layer tunnel
   attributes cannot be used for path computation of any client-layer
   path unless explicitly referenced in the dependency-tunnel-attributes
   list within the same RPC request.</t>

</section>
</section>
<section anchor="yang-data-model-for-te-path-computation"><name>YANG data model for TE path computation</name>

<section anchor="pc-tree"><name>Tree diagram</name>

<t><xref target="fig-pc-tree"/> below shows the tree diagram of the YANG data model defined
   in module ietf-te-path-computation.yang, defined in <xref target="pc-yang"/>.</t>

<figure title="TE path computation tree diagram" anchor="fig-pc-tree"><artwork type="ascii-art" name="ietf-te-path-computation.tree"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

module: ietf-te-path-computation

  augment /te:tunnels-path-compute/te:input/te:path-compute-info:
    +-- path-request* [request-id]
    |  +-- request-id                            uint32
    |  +-- compute-priority?                     uint8
    |  |       {compute-priority}?
    |  +-- (tunnel-attributes)?
    |  |  +--:(reference)
    |  |  |  +-- tunnel-reference
    |  |  |     +-- (tunnel-exist)
    |  |  |     |  +--:(tunnel-ref)
    |  |  |     |  |  +-- tunnel-ref                te:tunnel-ref
    |  |  |     |  +--:(tunnel-attributes-ref)
    |  |  |     |     +-- tunnel-attributes-ref     leafref
    |  |  |     +-- path-name?                      string
    |  |  |     +-- (path-role)
    |  |  |        +--:(primary-path)
    |  |  |        |  +-- primary-path!
    |  |  |        |     +-- preference?          uint8
    |  |  |        |     +-- co-routed?           boolean
    |  |  |        |     +-- k-requested-paths?   uint8
    |  |  |        +--:(secondary-path)
    |  |  |        |  +-- secondary-path
    |  |  |        |     +-- secondary-reverse-path?   leafref
    |  |  |        |     +-- preference?               uint8
    |  |  |        |     +-- protection-type?          identityref
    |  |  |        |     +-- restoration-type?         identityref
    |  |  |        |     +-- restoration-scheme?       identityref
    |  |  |        |     +-- primary-path-ref* []
    |  |  |        |        +-- (primary-path-exist)
    |  |  |        |           +--:(path-ref)
    |  |  |        |           |  +-- primary-path-ref    leafref
    |  |  |        |           +--:(path-request-ref)
    |  |  |        |              +-- path-request-ref    leafref
    |  |  |        +--:(primary-reverse-path)
    |  |  |        |  +-- primary-reverse-path
    |  |  |        |     +-- (primary-path-exist)
    |  |  |        |        +--:(path-ref)
    |  |  |        |        |  +-- primary-path-ref    leafref
    |  |  |        |        +--:(path-request-ref)
    |  |  |        |           +-- path-request-ref    leafref
    |  |  |        +--:(secondary-reverse-path)
    |  |  |           +-- secondary-reverse-path
    |  |  |              +-- preference?             uint8
    |  |  |              +-- protection-type?        identityref
    |  |  |              +-- restoration-type?       identityref
    |  |  |              +-- restoration-scheme?     identityref
    |  |  |              +-- primary-reverse-path* []
    |  |  |                 +-- (primary-reverse-path-exist)
    |  |  |                    +--:(path-ref)
    |  |  |                    |  +-- primary-path-ref    leafref
    |  |  |                    +--:(path-request-ref)
    |  |  |                       +-- path-request-ref    leafref
    |  |  +--:(value)
    |  |     +-- tunnel-name?                    string
    |  |     +-- path-name?                      string
    |  |     +-- (path-role)?
    |  |     |  +--:(primary-path)
    |  |     |  +--:(secondary-path)
    |  |     |  |  +-- secondary-path!
    |  |     |  |     +-- primary-path-name?   string
    |  |     |  +--:(primary-reverse-path)
    |  |     |  |  +-- primary-reverse-path!
    |  |     |  |     +-- primary-path-name?   string
    |  |     |  +--:(secondary-reverse-path)
    |  |     |     +-- secondary-reverse-path!
    |  |     |        +-- primary-path-name?           string
    |  |     |        +-- primary-reverse-path-name?   string
    |  |     +-- k-requested-paths?              uint8
    |  |     +-- encoding?                       identityref
    |  |     +-- switching-type?                 identityref
    |  |     +-- source
    |  |     |  +-- node-id?        nw:node-id
    |  |     |  +-- te-node-id?     te-types:te-node-id
    |  |     |  +-- tunnel-tp-id?   binary
    |  |     +-- destination
    |  |     |  +-- node-id?        nw:node-id
    |  |     |  +-- te-node-id?     te-types:te-node-id
    |  |     |  +-- tunnel-tp-id?   binary
    |  |     +-- bidirectional?                  boolean
    |  |     +-- te-topology-identifier
    |  |        +-- provider-id?   te-global-id
    |  |        +-- client-id?     te-global-id
    |  |        +-- topology-id?   te-topology-id
    |  +-- association-objects
    |  |  +-- association-object* [association-key]
    |  |  |  +-- association-key    string
    |  |  |  +-- type?              identityref
    |  |  |  +-- id?                uint16
    |  |  |  +-- source
    |  |  |     +-- id?     te-gen-node-id
    |  |  |     +-- type?   enumeration
    |  |  +-- association-object-extended* [association-key]
    |  |     +-- association-key    string
    |  |     +-- type?              identityref
    |  |     +-- id?                uint16
    |  |     +-- source
    |  |     |  +-- id?     te-gen-node-id
    |  |     |  +-- type?   enumeration
    |  |     +-- global-source?     uint32
    |  |     +-- extended-id?       yang:hex-string
    |  +-- optimizations
    |  |  +-- (algorithm)?
    |  |     +--:(metric) {path-optimization-metric}?
    |  |     |  +-- optimization-metric* [metric-type]
    |  |     |  |  +-- metric-type                       identityref
    |  |     |  |  +-- weight?                           uint8
    |  |     |  |  +-- explicit-route-exclude-objects
    |  |     |  |  |  +-- route-object-exclude-object* [index]
    |  |     |  |  |     +-- index                        uint32
    |  |     |  |  |     +-- (type)?
    |  |     |  |  |        +--:(numbered-node-hop)
    |  |     |  |  |        |  +-- numbered-node-hop
    |  |     |  |  |        |     +-- node-id-uri?   nw:node-id
    |  |     |  |  |        |     +-- node-id?       te-node-id
    |  |     |  |  |        |     +-- hop-type?      te-hop-type
    |  |     |  |  |        +--:(numbered-link-hop)
    |  |     |  |  |        |  +-- numbered-link-hop
    |  |     |  |  |        |     +-- link-tp-id    te-tp-id
    |  |     |  |  |        |     +-- hop-type?     te-hop-type
    |  |     |  |  |        |     +-- direction?    te-link-direction
    |  |     |  |  |        +--:(unnumbered-link-hop)
    |  |     |  |  |        |  +-- unnumbered-link-hop
    |  |     |  |  |        |     +-- link-tp-id-uri?   nt:tp-id
    |  |     |  |  |        |     +-- link-tp-id?       te-tp-id
    |  |     |  |  |        |     +-- node-id-uri?      nw:node-id
    |  |     |  |  |        |     +-- node-id?          te-node-id
    |  |     |  |  |        |     +-- hop-type?         te-hop-type
    |  |     |  |  |        |     +-- direction?
    |  |     |  |  |        |             te-link-direction
    |  |     |  |  |        +--:(as-number)
    |  |     |  |  |        |  +-- as-number-hop
    |  |     |  |  |        |     +-- as-number    inet:as-number
    |  |     |  |  |        |     +-- hop-type?    te-hop-type
    |  |     |  |  |        +--:(label)
    |  |     |  |  |        |  +-- label-hop
    |  |     |  |  |        |     +-- te-label
    |  |     |  |  |        |        +-- (technology)?
    |  |     |  |  |        |        |  +--:(generic)
    |  |     |  |  |        |        |     +-- generic?
    |  |     |  |  |        |        |             rt-types:generali\
zed-label
    |  |     |  |  |        |        +-- direction?
    |  |     |  |  |        |                te-label-direction
    |  |     |  |  |        +--:(srlg)
    |  |     |  |  |           +-- srlg
    |  |     |  |  |              +-- srlg?   uint32
    |  |     |  |  +-- explicit-route-include-objects
    |  |     |  |     +-- route-object-include-object* [index]
    |  |     |  |        +-- index                        uint32
    |  |     |  |        +-- (type)?
    |  |     |  |           +--:(numbered-node-hop)
    |  |     |  |           |  +-- numbered-node-hop
    |  |     |  |           |     +-- node-id-uri?   nw:node-id
    |  |     |  |           |     +-- node-id?       te-node-id
    |  |     |  |           |     +-- hop-type?      te-hop-type
    |  |     |  |           +--:(numbered-link-hop)
    |  |     |  |           |  +-- numbered-link-hop
    |  |     |  |           |     +-- link-tp-id    te-tp-id
    |  |     |  |           |     +-- hop-type?     te-hop-type
    |  |     |  |           |     +-- direction?    te-link-direction
    |  |     |  |           +--:(unnumbered-link-hop)
    |  |     |  |           |  +-- unnumbered-link-hop
    |  |     |  |           |     +-- link-tp-id-uri?   nt:tp-id
    |  |     |  |           |     +-- link-tp-id?       te-tp-id
    |  |     |  |           |     +-- node-id-uri?      nw:node-id
    |  |     |  |           |     +-- node-id?          te-node-id
    |  |     |  |           |     +-- hop-type?         te-hop-type
    |  |     |  |           |     +-- direction?
    |  |     |  |           |             te-link-direction
    |  |     |  |           +--:(as-number)
    |  |     |  |           |  +-- as-number-hop
    |  |     |  |           |     +-- as-number    inet:as-number
    |  |     |  |           |     +-- hop-type?    te-hop-type
    |  |     |  |           +--:(label)
    |  |     |  |              +-- label-hop
    |  |     |  |                 +-- te-label
    |  |     |  |                    +-- (technology)?
    |  |     |  |                    |  +--:(generic)
    |  |     |  |                    |     +-- generic?
    |  |     |  |                    |             rt-types:generali\
zed-label
    |  |     |  |                    +-- direction?
    |  |     |  |                            te-label-direction
    |  |     |  +-- tiebreakers
    |  |     |     +-- tiebreaker* [tiebreaker-type]
    |  |     |        +-- tiebreaker-type    identityref
    |  |     +--:(objective-function)
    |  |              {path-optimization-objective-function}?
    |  |        +-- objective-function
    |  |           +-- objective-function-type?   identityref
    |  +-- named-path-constraint?                leafref
    |  |       {te-types:named-path-constraints}?
    |  +-- te-bandwidth
    |  |  +-- (technology)?
    |  |     +--:(generic)
    |  |        +-- generic?   te-bandwidth
    |  +-- link-protection?                      identityref
    |  +-- setup-priority?                       uint8
    |  +-- hold-priority?                        uint8
    |  +-- signaling-type?                       identityref
    |  +-- path-metric-bounds
    |  |  +-- path-metric-bound* [metric-type]
    |  |     +-- metric-type    identityref
    |  |     +-- upper-bound?   uint64
    |  +-- path-affinities-values
    |  |  +-- path-affinities-value* [usage]
    |  |     +-- usage    identityref
    |  |     +-- value?   admin-groups
    |  +-- path-affinity-names
    |  |  +-- path-affinity-name* [usage]
    |  |     +-- usage            identityref
    |  |     +-- affinity-name* [name]
    |  |        +-- name    string
    |  +-- path-srlgs-lists
    |  |  +-- path-srlgs-list* [usage]
    |  |     +-- usage     identityref
    |  |     +-- values*   srlg
    |  +-- path-srlgs-names
    |  |  +-- path-srlgs-name* [usage]
    |  |     +-- usage    identityref
    |  |     +-- names*   string
    |  +-- disjointness?                         te-path-disjointness
    |  +-- explicit-route-objects-always
    |  |  +-- route-object-exclude-always* [index]
    |  |  |  +-- index                        uint32
    |  |  |  +-- (type)?
    |  |  |     +--:(numbered-node-hop)
    |  |  |     |  +-- numbered-node-hop
    |  |  |     |     +-- node-id-uri?   nw:node-id
    |  |  |     |     +-- node-id?       te-node-id
    |  |  |     |     +-- hop-type?      te-hop-type
    |  |  |     +--:(numbered-link-hop)
    |  |  |     |  +-- numbered-link-hop
    |  |  |     |     +-- link-tp-id    te-tp-id
    |  |  |     |     +-- hop-type?     te-hop-type
    |  |  |     |     +-- direction?    te-link-direction
    |  |  |     +--:(unnumbered-link-hop)
    |  |  |     |  +-- unnumbered-link-hop
    |  |  |     |     +-- link-tp-id-uri?   nt:tp-id
    |  |  |     |     +-- link-tp-id?       te-tp-id
    |  |  |     |     +-- node-id-uri?      nw:node-id
    |  |  |     |     +-- node-id?          te-node-id
    |  |  |     |     +-- hop-type?         te-hop-type
    |  |  |     |     +-- direction?        te-link-direction
    |  |  |     +--:(as-number)
    |  |  |     |  +-- as-number-hop
    |  |  |     |     +-- as-number    inet:as-number
    |  |  |     |     +-- hop-type?    te-hop-type
    |  |  |     +--:(label)
    |  |  |        +-- label-hop
    |  |  |           +-- te-label
    |  |  |              +-- (technology)?
    |  |  |              |  +--:(generic)
    |  |  |              |     +-- generic?
    |  |  |              |             rt-types:generalized-label
    |  |  |              +-- direction?       te-label-direction
    |  |  +-- route-object-include-exclude* [index]
    |  |     +-- explicit-route-usage?        identityref
    |  |     +-- index                        uint32
    |  |     +-- (type)?
    |  |        +--:(numbered-node-hop)
    |  |        |  +-- numbered-node-hop
    |  |        |     +-- node-id-uri?   nw:node-id
    |  |        |     +-- node-id?       te-node-id
    |  |        |     +-- hop-type?      te-hop-type
    |  |        +--:(numbered-link-hop)
    |  |        |  +-- numbered-link-hop
    |  |        |     +-- link-tp-id    te-tp-id
    |  |        |     +-- hop-type?     te-hop-type
    |  |        |     +-- direction?    te-link-direction
    |  |        +--:(unnumbered-link-hop)
    |  |        |  +-- unnumbered-link-hop
    |  |        |     +-- link-tp-id-uri?   nt:tp-id
    |  |        |     +-- link-tp-id?       te-tp-id
    |  |        |     +-- node-id-uri?      nw:node-id
    |  |        |     +-- node-id?          te-node-id
    |  |        |     +-- hop-type?         te-hop-type
    |  |        |     +-- direction?        te-link-direction
    |  |        +--:(as-number)
    |  |        |  +-- as-number-hop
    |  |        |     +-- as-number    inet:as-number
    |  |        |     +-- hop-type?    te-hop-type
    |  |        +--:(label)
    |  |        |  +-- label-hop
    |  |        |     +-- te-label
    |  |        |        +-- (technology)?
    |  |        |        |  +--:(generic)
    |  |        |        |     +-- generic?
    |  |        |        |             rt-types:generalized-label
    |  |        |        +-- direction?       te-label-direction
    |  |        +--:(srlg)
    |  |           +-- srlg
    |  |              +-- srlg?   uint32
    |  +-- path-in-segment!
    |  |  +-- label-restrictions
    |  |     +-- label-restriction* [index]
    |  |        +-- restriction?    enumeration
    |  |        +-- index           uint32
    |  |        +-- label-start
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-end
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-step
    |  |        |  +-- (technology)?
    |  |        |     +--:(generic)
    |  |        |        +-- generic?   int32
    |  |        +-- range-bitmap?   yang:hex-string
    |  +-- path-out-segment!
    |  |  +-- label-restrictions
    |  |     +-- label-restriction* [index]
    |  |        +-- restriction?    enumeration
    |  |        +-- index           uint32
    |  |        +-- label-start
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-end
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-step
    |  |        |  +-- (technology)?
    |  |        |     +--:(generic)
    |  |        |        +-- generic?   int32
    |  |        +-- range-bitmap?   yang:hex-string
    |  +-- requested-metrics* [metric-type]
    |  |  +-- metric-type    identityref
    |  +-- return-srlgs?                         boolean
    |  +-- return-affinities?                    boolean
    |  +-- requested-state!
    |     +-- timer?            uint16
    |     +-- transaction-id?   string
    +-- tunnel-attributes* [tunnel-name]
    |  +-- tunnel-name               string
    |  +-- encoding?                 identityref
    |  +-- switching-type?           identityref
    |  +-- source
    |  |  +-- node-id?        nw:node-id
    |  |  +-- te-node-id?     te-types:te-node-id
    |  |  +-- tunnel-tp-id?   binary
    |  +-- destination
    |  |  +-- node-id?        nw:node-id
    |  |  +-- te-node-id?     te-types:te-node-id
    |  |  +-- tunnel-tp-id?   binary
    |  +-- bidirectional?            boolean
    |  +-- association-objects
    |  |  +-- association-object* [association-key]
    |  |  |  +-- association-key    string
    |  |  |  +-- type?              identityref
    |  |  |  +-- id?                uint16
    |  |  |  +-- source
    |  |  |     +-- id?     te-gen-node-id
    |  |  |     +-- type?   enumeration
    |  |  +-- association-object-extended* [association-key]
    |  |     +-- association-key    string
    |  |     +-- type?              identityref
    |  |     +-- id?                uint16
    |  |     +-- source
    |  |     |  +-- id?     te-gen-node-id
    |  |     |  +-- type?   enumeration
    |  |     +-- global-source?     uint32
    |  |     +-- extended-id?       yang:hex-string
    |  +-- protection-type?          identityref
    |  +-- restoration-type?         identityref
    |  +-- restoration-scheme?       identityref
    |  +-- network-id?               nw:network-id
    |  +-- te-topology-identifier
    |  |  +-- provider-id?   te-global-id
    |  |  +-- client-id?     te-global-id
    |  |  +-- topology-id?   te-topology-id
    |  +-- te-bandwidth
    |  |  +-- (technology)?
    |  |     +--:(generic)
    |  |        +-- generic?   te-bandwidth
    |  +-- link-protection?          identityref
    |  +-- setup-priority?           uint8
    |  +-- hold-priority?            uint8
    |  +-- signaling-type?           identityref
    |  +-- hierarchy
    |     +-- dependency-tunnels
    |     |  +-- dependency-tunnel* [name]
    |     |  |  +-- name              -> /te:te/tunnels/tunnel/name
    |     |  |  +-- encoding?         identityref
    |     |  |  +-- switching-type?   identityref
    |     |  +-- dependency-tunnel-attributes* [name]
    |     |     +-- name              leafref
    |     |     +-- encoding?         identityref
    |     |     +-- switching-type?   identityref
    |     +-- hierarchical-link
    |        +-- enable?                   boolean
    |        +-- local-node-id?            nw:node-id
    |        +-- local-te-node-id?         te-types:te-node-id
    |        +-- local-link-tp-id?         nt:tp-id
    |        +-- local-te-link-tp-id?      te-types:te-tp-id
    |        +-- remote-link-tp-id?        nt:tp-id
    |        +-- remote-te-node-id?        te-types:te-node-id
    |        +-- network-id?               nw:network-id
    |        +-- te-topology-identifier
    |           +-- provider-id?   te-global-id
    |           +-- client-id?     te-global-id
    |           +-- topology-id?   te-topology-id
    +-- synchronization* [] {svec}?
       +-- svec
       |  +-- relaxable?      boolean
       |  +-- disjointness?   te-path-disjointness
       |  +-- request-id*     uint32
       +-- svec-constraints
       |  +-- path-metric-bound* [metric-type]
       |     +-- metric-type    identityref
       |     +-- upper-bound?   uint64
       +-- path-srlgs-lists
       |  +-- path-srlgs-list* [usage]
       |     +-- usage     identityref
       |     +-- values*   srlg
       +-- path-srlgs-names
       |  +-- path-srlgs-name* [usage]
       |     +-- usage    identityref
       |     +-- names*   string
       +-- exclude-objects
       |  +-- excludes* []
       |     +-- (type)?
       |        +--:(numbered-node-hop)
       |        |  +-- numbered-node-hop
       |        |     +-- node-id-uri?   nw:node-id
       |        |     +-- node-id?       te-node-id
       |        |     +-- hop-type?      te-hop-type
       |        +--:(numbered-link-hop)
       |        |  +-- numbered-link-hop
       |        |     +-- link-tp-id    te-tp-id
       |        |     +-- hop-type?     te-hop-type
       |        |     +-- direction?    te-link-direction
       |        +--:(unnumbered-link-hop)
       |        |  +-- unnumbered-link-hop
       |        |     +-- link-tp-id-uri?   nt:tp-id
       |        |     +-- link-tp-id?       te-tp-id
       |        |     +-- node-id-uri?      nw:node-id
       |        |     +-- node-id?          te-node-id
       |        |     +-- hop-type?         te-hop-type
       |        |     +-- direction?        te-link-direction
       |        +--:(as-number)
       |        |  +-- as-number-hop
       |        |     +-- as-number    inet:as-number
       |        |     +-- hop-type?    te-hop-type
       |        +--:(label)
       |           +-- label-hop
       |              +-- te-label
       |                 +-- (technology)?
       |                 |  +--:(generic)
       |                 |     +-- generic?
       |                 |             rt-types:generalized-label
       |                 +-- direction?       te-label-direction
       +-- optimizations
          +-- (algorithm)?
             +--:(metric) {te-types:path-optimization-metric}?
             |  +-- optimization-metric* [metric-type]
             |     +-- metric-type    identityref
             |     +-- weight?        uint8
             +--:(objective-function)
                      {te-types:path-optimization-objective-function\
}?
                +-- objective-function
                   +-- objective-function-type?   identityref
  augment /te:tunnels-path-compute/te:output/te:path-compute-result:
    +--ro response* [response-id]
       +--ro response-id                         uint32
       +--ro computed-paths-properties
       |  +--ro computed-path-properties* [k-index]
       |     +--ro k-index            uint8
       |     +--ro path-properties
       |        +--ro path-metric* [metric-type]
       |        |  +--ro metric-type           identityref
       |        |  +--ro accumulative-value?   uint64
       |        +--ro path-affinities-values
       |        |  +--ro path-affinities-value* [usage]
       |        |     +--ro usage    identityref
       |        |     +--ro value?   admin-groups
       |        +--ro path-affinity-names
       |        |  +--ro path-affinity-name* [usage]
       |        |     +--ro usage            identityref
       |        |     +--ro affinity-name* [name]
       |        |        +--ro name    string
       |        +--ro path-srlgs-lists
       |        |  +--ro path-srlgs-list* [usage]
       |        |     +--ro usage     identityref
       |        |     +--ro values*   srlg
       |        +--ro path-srlgs-names
       |        |  +--ro path-srlgs-name* [usage]
       |        |     +--ro usage    identityref
       |        |     +--ro names*   string
       |        +--ro path-route-objects
       |        |  +--ro path-route-object* [index]
       |        |     +--ro index                        uint32
       |        |     +--ro (type)?
       |        |        +--:(numbered-node-hop)
       |        |        |  +--ro numbered-node-hop
       |        |        |     +--ro node-id-uri?   nw:node-id
       |        |        |     +--ro node-id?       te-node-id
       |        |        |     +--ro hop-type?      te-hop-type
       |        |        +--:(numbered-link-hop)
       |        |        |  +--ro numbered-link-hop
       |        |        |     +--ro link-tp-id    te-tp-id
       |        |        |     +--ro hop-type?     te-hop-type
       |        |        |     +--ro direction?    te-link-direction
       |        |        +--:(unnumbered-link-hop)
       |        |        |  +--ro unnumbered-link-hop
       |        |        |     +--ro link-tp-id-uri?   nt:tp-id
       |        |        |     +--ro link-tp-id?       te-tp-id
       |        |        |     +--ro node-id-uri?      nw:node-id
       |        |        |     +--ro node-id?          te-node-id
       |        |        |     +--ro hop-type?         te-hop-type
       |        |        |     +--ro direction?
       |        |        |             te-link-direction
       |        |        +--:(as-number)
       |        |        |  +--ro as-number-hop
       |        |        |     +--ro as-number    inet:as-number
       |        |        |     +--ro hop-type?    te-hop-type
       |        |        +--:(label)
       |        |           +--ro label-hop
       |        |              +--ro te-label
       |        |                 +--ro (technology)?
       |        |                 |  +--:(generic)
       |        |                 |     +--ro generic?
       |        |                 |             rt-types:generalized\
-label
       |        |                 +--ro direction?
       |        |                         te-label-direction
       |        +--ro te-bandwidth
       |        |  +--ro (technology)?
       |        |     +--:(generic)
       |        |        +--ro generic?   te-bandwidth
       |        +--ro disjointness-type?
       |                te-types:te-path-disjointness
       +--ro computed-path-error-infos
       |  +--ro computed-path-error-info* []
       |     +--ro error-description?   string
       |     +--ro error-timestamp?     yang:date-and-time
       |     +--ro error-reason?        identityref
       +--ro tunnel-ref?                         te:tunnel-ref
       +--ro (path-role)?
          +--:(primary)
          |  +--ro primary-path-ref?             leafref
          +--:(primary-reverse)
          |  +--ro primary-reverse-path-ref?     leafref
          +--:(secondary)
          |  +--ro secondary-path-ref?           leafref
          +--:(secondary-reverse)
             +--ro secondary-reverse-path-ref?   leafref
  augment /te:tunnels-actions/te:input/te:tunnel-info/te:filter-type:
    +--:(path-compute-transactions)
       +-- path-compute-transaction-id*   string
  augment /te:tunnels-actions/te:output:
    +--ro path-computed-delete-result
       +--ro path-compute-transaction-id*   string
]]></artwork></figure>

</section>
<section anchor="pc-yang"><name>YANG module</name>

<figure title="TE path computation YANG module" anchor="fig-pc-yang"><sourcecode type="yang" markers="true" name="ietf-te-path-computation@2023-06-27.yang"><![CDATA[
module ietf-te-path-computation {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-te-path-computation";
  prefix te-pc;

  import ietf-te {
    prefix te;
    reference
      "RFCYYYY: A YANG Data Model for Traffic Engineering Tunnels
       and Interfaces";
  }

  /* Note: The RFC Editor will replace YYYY with the number assigned
     to the RFC once draft-ietf-teas-yang-te becomes an RFC.*/

  import ietf-te-types {
    prefix te-types;
    reference
      "RFCZZZZ: Updated Common YANG Data Types for Traffic 
      Engineering";
  }

  /* Note: The RFC Editor will replace ZZZZ with the number assigned
     to the RFC once draft-ietf-teas-rfc8776-update becomes an RFC.*/

  organization
    "Traffic Engineering Architecture and Signaling (TEAS)
     Working Group";
  contact
    "WG Web: <https://datatracker.ietf.org/wg/teas/>
     WG List:  <mailto:teas@ietf.org>

     Editor:   Italo Busi
               <mailto:italo.busi@huawei.com>

     Editor:   Sergio Belotti
               <mailto:sergio.belotti@nokia.com>

     Editor:   Victor Lopez
               <mailto:victor.lopez@nokia.com>

     Editor:   Oscar Gonzalez de Dios
               <mailto:oscar.gonzalezdedios@telefonica.com>

     Editor:   Anurag Sharma
               <mailto:ansha@google.com>

     Editor:   Yan Shi
               <mailto:shiyan49@chinaunicom.cn>

     Editor:   Ricard Vilalta
               <mailto:ricard.vilalta@cttc.es>

     Editor:   Karthik Sethuraman
               <mailto:karthik.sethuraman@necam.com>

     Editor:   Michael Scharf
               <mailto:michael.scharf@gmail.com>

     Editor:   Daniele Ceccarelli
               <mailto:daniele.ceccarelli@ericsson.com>
     
    ";
  description
    "This module defines a YANG data model for requesting Traffic
     Engineering (TE) path computation. The YANG data model defined
     in this document augments the RPCs defined in the generic TE
     module (ietf-te).

     The model fully conforms to the
     Network Management Datastore Architecture (NMDA).

     Copyright (c) 2023 IETF Trust and the persons
     identified as authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with
     or without modification, is permitted pursuant to, and
     subject to the license terms contained in, the Revised
     BSD License set forth in Section 4.c of the IETF Trust's
     Legal Provisions Relating to IETF Documents
     (https://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC XXXX; see
     the RFC itself for full legal notices.

     The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL', 'SHALL
     NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'NOT RECOMMENDED',
     'MAY', and 'OPTIONAL' in this document are to be interpreted as
     described in BCP 14 (RFC 2119) (RFC 8174) when, and only when,
     they appear in all capitals, as shown here.";

  // RFC Ed.: replace XXXX with actual RFC number and remove
  // this note
  // replace the revision date with the module publication date
  // the format is (year-month-day)

  revision 2023-06-27 {
    description
      "Initial revision";
    reference
      "RFC XXXX: A YANG Data Model for requesting path computation";
  }

  // RFC Ed.: replace XXXX with actual RFC number and remove
  // this note

  /*
   * Features
   */
  
  feature svec {
    description
      "This feature indicates that the server supports synchronized 
      path computation requests.";
    reference
      "Section 7.13 of RFC5440: Path Computation Element (PCE) 
      Communication Protocol (PCEP).";
  }

  feature compute-priority {
    description
      "This feature indicates that the server supports path 
      computation request's priority";
    reference
      "Section 7.4.1 of RFC5440: Path Computation Element (PCE) 
      Communication Protocol (PCEP).";
  }

  /*
   * Identities
   */

  identity tunnel-action-path-compute-delete {
    base te-types:tunnel-action-type;
    description
      "Action type to delete the transient states
      of computed paths, as described in section 3.3.1 of
      RFC XXXX.";
    reference
      "RFC XXXX: A YANG Data Model for requesting path computation";
  }

  /*
   * Groupings
   */

  grouping protection-restoration-properties {
    description
      "This grouping defines the restoration and protection types
       for a path in the path computation request.";
    leaf protection-type {
      type identityref {
        base te-types:lsp-protection-type;
      }
      default "te-types:lsp-protection-unprotected";
      description
        "LSP protection type.";
    }
    leaf restoration-type {
      type identityref {
        base te-types:lsp-restoration-type;
      }
      default "te-types:lsp-restoration-restore-any";
      description
        "LSP restoration type.";
    }
    leaf restoration-scheme {
      type identityref {
        base te-types:restoration-scheme-type;
      }
      default "te-types:restoration-scheme-preconfigured";
      description
        "LSP restoration scheme.";
    }
  } // grouping protection-restoration-properties

  grouping requested-info {
    description
      "This grouping defines the information which is requested
       (e.g., metrics), in the path computation request, to be
       returned in the path computation response.";
    list requested-metrics {
      key "metric-type";
      description
        "The list of the requested metrics.

         The metrics listed here MUST be returned in the response.
         Returning other metrics in the response is OPTIONAL.";
      leaf metric-type {
        type identityref {
          base te-types:path-metric-type;
        }
        description
          "The metric requested to be returned in the response";
      }
    }
    leaf return-srlgs {
      type boolean;
      default "false";
      description
        "If true, path Shared Risk Link Groups (SRLGs) MUST be
         returned in the response.
         If false, returning path SRLGs in the response OPTIONAL.";
    }
    leaf return-affinities {
      type boolean;
      default "false";
      description
        "If true, path affinities MUST be returned in the response.
         If false, returning path affinities in the response is
         OPTIONAL.";
    }
  } // grouping requested-info

  grouping requested-state {
    description
      "Configuration for the transient state used
       to report the computed path";
    container requested-state {
      presence
        "Request temporary reporting of the computed path state";
      description
        "Configures attributes for the temporary reporting of the
         computed path state (e.g., expiration timer).";
      leaf timer {
        type uint16;
        units "minutes";
        default "10";
        description
          "The timeout after which the transient state reporting
          the computed path SHOULD be removed.";
      }
      leaf transaction-id {
        type string;
        description
          "The transaction-id associated with this path computation
          to be used for fast deletion of the transient states
          associated with multiple path computations.

          This transaction-id can be used to explicitly delete all
          the transient states of all the computed paths associated
          with the same transaction-id.

          When one path associated with a transaction-id is setup,
          the transient states of all the other computed paths
          with the same transaction-id are automatically removed.

          If not specified, the transient state is removed only
          when the timer expires (when the timer is specified)
          or not created at all (stateless path computation,
          when the timer is not specified).";
      }
    }
  } // grouping requested-state

  grouping reported-state {
    description
      "This grouping defines the information, returned in the path
       computation response, reporting the transient state related
       to the computed path";
    leaf tunnel-ref {
      type te:tunnel-ref;
      description
        "
         Reference to the tunnel that reports the transient state
         of the computed path.

         If no transient state is created, this attribute is
         omitted.
        ";
    }
    choice path-role {
      description
        "The transient state of the computed path can be reported
         as a primary, primary-reverse, secondary or
         a secondary-reverse path of a te-tunnel";
      case primary {
        leaf primary-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:primary-paths/te:primary-path/"
               + "te:name";
          }
          must '../tunnel-ref' {
            description
              "The primary-path name can only be reported
               if the tunnel name is also reported.";
          }
          description
            "
             Reference to the primary-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case primary
      case primary-reverse {
        leaf primary-reverse-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:primary-paths/te:primary-path/"
               + "te:name";
          }
          must '../tunnel-ref' {
            description
              "The primary-reverse-path name can only be reported
               if the tunnel name is also reported.";
          }
          description
            "
             Reference to the primary-reverse-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case primary-reverse
      case secondary {
        leaf secondary-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:secondary-paths/te:secondary-path/"
               + "te:name";
          }
          must '../tunnel-ref' {
            description
              "The secondary-path name can only be reported
               if the tunnel name is also reported.";
          }
          description
            "
             Reference to the secondary-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case secondary
      case secondary-reverse {
        leaf secondary-reverse-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:secondary-reverse-paths/"
               + "te:secondary-reverse-path/te:name";
          }
          must '../tunnel-ref' {
            description
              "The secondary-reverse-path name can only be reported
               if the tunnel name is also reported.";
          }
          description
            "
             Reference to the secondary-reverse-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case secondary
    } // choice path
  } // grouping reported-state

  grouping synchronization-constraints {
    description
      "Global constraints applicable to synchronized path
       computation requests.";
    container svec-constraints {
      description
        "global svec constraints";
      list path-metric-bound {
        key "metric-type";
        description
          "list of bound metrics";
        leaf metric-type {
          type identityref {
            base te-types:svec-metric-type;
          }
          description
            "SVEC metric type.";
          reference
            "RFC5541: Encoding of Objective Functions in the Path
            Computation Element Communication Protocol (PCEP).";
        }
        leaf upper-bound {
          type uint64;
          description
            "Upper bound on SVEC metric";
        }
      }
    }
    uses te-types:generic-path-srlgs;
    container exclude-objects {
      description
        "Resources to be excluded";
      list excludes {
        description
          "List of Explicit Route Objects to always exclude
           from synchronized path computation";
        uses te-types:explicit-route-hop;
      }
    }
  } // grouping synchronization-constraints

  grouping synchronization-optimization {
    description
      "Optimizations applicable to synchronized path
       computation requests.";
    container optimizations {
      description
        "The objective function container that includes attributes
         to impose when computing a synchronized set of paths";
      choice algorithm {
        description
          "Optimizations algorithm.";
        case metric {
          if-feature "te-types:path-optimization-metric";
          list optimization-metric {
            key "metric-type";
            description
              "svec path metric type";
            leaf metric-type {
              type identityref {
                base te-types:svec-metric-type;
              }
              description
                "TE path metric type usable for computing a set of
                synchronized requests";
            }
            leaf weight {
              type uint8;
              description
                "Metric normalization weight";
            }
          }
        }
        case objective-function {
          if-feature
            "te-types:path-optimization-objective-function";
          container objective-function {
            description
              "The objective function container that includes
               attributes to impose when computing a TE path";
            leaf objective-function-type {
              type identityref {
                base te-types:svec-objective-function-type;
              }
              description
                "Objective function entry";
            }
          }
        }
      }
    }
  } // grouping synchronization-optimization

  grouping synchronization-info {
    description
      "Information for synchronized path computation requests.";
    list synchronization {
      description
        "List of Synchronization VECtors.";
      container svec {
        description
          "Synchronization VECtor";
        leaf relaxable {
          type boolean;
          default "true";
          description
            "If this leaf is true, taking into account this svec is
             OPTIONAL and the path computation process is
             free to ignore svec content.
             Otherwise, it MUST take into account this svec.";
        }
        uses te-types:generic-path-disjointness;
        leaf-list request-id {
          type uint32;
          description
            "This list reports the set of path computation
             requests that are requested to be synchronized.";
        }
      }
      uses synchronization-constraints;
      uses synchronization-optimization;
    }
  } // grouping synchronization-info

  /*
   * Augment TE RPCs
   */

  augment "/te:tunnels-path-compute/te:input/te:path-compute-info" {
    description
      "Augments Path Computation RPC input";
    list path-request {
      key "request-id";
      description
        "The list of the requested paths to be computed";
      leaf request-id {
        type uint32;
        mandatory true;
        description
          "Each path computation request is uniquely identified
           within the RPC request by the request-id.";
      }
      leaf compute-priority {
        if-feature compute-priority;
        type uint8;
        default 0;
        description
          "The path computation request's priority (from 1 to 7) 
          which can be used to constraint the order by which the 
          path computation server processes the path computation 
          requests.

          A higher numerical value of the priority field reflects a 
          higher priority.

          It MUST be set to the default value (i.e., 0) when 
          unused.";
        reference
          "Section 7.4.1 of RFC5440: Path Computation Element (PCE) 
          Communication Protocol (PCEP).";
      }
      choice tunnel-attributes {
        default "value";
        description
          "Whether the tunnel attributes are specified by value
           within this path computation request or by reference.
           The reference could be either to an existing te-tunnel
           or to an entry in the tunnel-attributes list";
        case reference {
          container tunnel-reference {
            description
              "Attributes for a requested path that belongs to
              either an exiting te-tunnel or to an entry in the
              tunnel-attributes list.";
            choice tunnel-exist {
              mandatory true;
              description
                "Whether the tunnel reference is to an existing
                te-tunnel or to an entry in the tunnel-attributes
                list";
              case tunnel-ref {
                leaf tunnel-ref {
                  type te:tunnel-ref;
                  mandatory true;
                  description
                    "The referenced te-tunnel instance";
                }
              } // case tunnel-ref
              case tunnel-attributes-ref {
                leaf tunnel-attributes-ref {
                  type leafref {
                    path "/te:tunnels-path-compute/"
                      + "te:path-compute-info/"
                      + "te-pc:tunnel-attributes/te-pc:tunnel-name";
                  }
                  mandatory true;
                  description
                    "The referenced te-tunnel instance";
                }
              } // case tunnel-attributes-ref 
            } // choice tunnel-exist
            leaf path-name {
              type string;
              description
                "TE path name.";
            }
            choice path-role {
              mandatory true;
              description
                "Whether this path is a primary, or a reverse
                primary, or a secondary, or a reverse secondary
                path.";
              case primary-path {
                container primary-path {
                  presence "Indicates that the requested path
                            is a primary path";
                  description
                    "TE primary path";
                  uses te:path-forward-properties;
                  uses te:k-requested-paths;
                } // container primary-path
              } // case primary-path
              case secondary-path {
                container secondary-path {
                  description
                    "TE secondary path";
                  leaf secondary-reverse-path {
                    type leafref {
                      path "/te:tunnels-path-compute/"
                        + "te:path-compute-info/te-pc:path-request/"
                        + "te-pc:request-id";
                    }
                    description
                      "A reference to the reverse secondary path 
                      when co-routed with the secondary path.";
                  }
                  leaf preference {
                    type uint8 {
                      range "1..255";
                    }
                    default "1";
                    description
                      "Specifies a preference for this path. The 
                      lower the number higher the preference.";
                  }
                  uses protection-restoration-properties;
                  list primary-path-ref {
                    min-elements 1;
                    description
                      "The list of primary paths that reference
                      this path as a candidate secondary path";
                    choice primary-path-exist {
                      mandatory true;
                      description
                        "Whether the path reference is to an existing
                        te-tunnel path or to another path request";
                      case path-ref {
                        leaf primary-path-ref {
                          type leafref {
                            path "/te:te/te:tunnels/te:tunnel"
                              + "[te:name=current()/../../../"
                              + "tunnel-ref]/te:primary-paths/"
                              + "te:primary-path/te:name";
                          }
                          must '../../../tunnel-ref' {
                            description
                              "The primary-path can be referenced
                              if also the tunnel is referenced.";
                          }
                          mandatory true;
                          description
                            "The referenced primary path";
                        }
                      } // case path-ref
                      case path-request-ref {
                        leaf path-request-ref {
                          type leafref {
                            path "/te:tunnels-path-compute/"
                              + "te:path-compute-info/"
                              + "te-pc:path-request/"
                              + "te-pc:request-id";
                          }
                          mandatory true;
                          description
                            "The referenced primary path request";
                        }
                      } // case path-request-ref 
                    } // choice primary-path-exist
                  } // list primary-path-ref
                } // container secondary-path
              } // case secondary-path
              case primary-reverse-path {
                container primary-reverse-path {
                  description
                    "TE primary reverse path";
                  choice primary-path-exist {
                    mandatory true;
                    description
                      "Whether the path reference to the primary
                      paths for which this path is the reverse-path
                      is to an existing te-tunnel path or to
                      another path request.";
                    case path-ref {
                      leaf primary-path-ref {
                        type leafref {
                          path "/te:te/te:tunnels/te:tunnel[te:name"
                            + "=current()/../../tunnel-ref]/"
                            + "te:primary-paths/te:primary-path/"
                            + "te:name";
                        }
                        must '../../tunnel-ref' {
                          description
                            "The primary-path can be referenced
                            if also the tunnel is referenced.";
                        }
                        mandatory true;
                        description
                          "The referenced primary path";
                      }
                    } // case path-ref
                    case path-request-ref {
                      leaf path-request-ref {
                        type leafref {
                          path "/te:tunnels-path-compute/"
                            + "te:path-compute-info/"
                            + "te-pc:path-request/"
                            + "te-pc:request-id";
                        }
                        mandatory true;
                        description
                          "The referenced primary path request";
                      }
                    } // case path-request-ref 
                  } // choice primary-path-exist
                } // container primary-reverse-path
              } // case primary-reverse-path
              case secondary-reverse-path {
                container secondary-reverse-path {
                  description
                    "TE secondary reverse path";
                  // uses te:path-preference;
                  leaf preference {
                    type uint8 {
                      range "1..255";
                    }
                    default "1";
                    description
                      "Specifies a preference for this path. The 
                      lower the number higher the preference.";
                  }
                  uses protection-restoration-properties;
                  list primary-reverse-path {
                    min-elements 1;
                    description
                      "The list of primary reverse paths that
                      reference this path as a candidate
                      secondary reverse path";
                    choice primary-reverse-path-exist {
                      mandatory true;
                      description
                        "Whether the path reference is to an existing
                        te-tunnel path or to another path request";
                      case path-ref {
                        leaf primary-path-ref {
                          type leafref {
                            path "/te:te/te:tunnels/te:tunnel"
                              + "[te:name=current()/../../../"
                              + "tunnel-ref]/te:primary-paths/"
                              + "te:primary-path/te:name";
                          }
                          must '../../../tunnel-ref' {
                            description
                              "The primary-path can be referenced
                              if also the tunnel is referenced.";
                          }
                          mandatory true;
                          description
                            "The referenced primary path";
                        }
                      } // case path-ref
                      case path-request-ref {
                        leaf path-request-ref {
                          type leafref {
                            path "/te:tunnels-path-compute/"
                              + "te:path-compute-info/"
                              + "te-pc:path-request/"
                              + "te-pc:request-id";
                          }
                          mandatory true;
                          description
                            "The referenced primary reverse path
                            request";
                        }
                      } // case path-request-ref 
                    } // choice primary-reverse-path-exist
                  } // list primary-reverse-path-ref
                } // container secondary-reverse-path
              } // case secondary-reverse-path
            } // choice tunnel-path-role
          }
        } // case reference
        case value {
          leaf tunnel-name {
            type string;
            description
              "TE tunnel name.";
          }
          leaf path-name {
            type string;
            description
              "TE path name.";
          }
          choice path-role {
            when 'not (./source) and not (./destination)' {
              description
                "When the tunnel attributes are specified by value
                within this path computation, it is assumed that the
                requested path will be the only path of a tunnel.

                If the requested path is a transit segment path
                (i.e., the source and destination containers are 
                not present), it could be of any type. Otherwise it 
                could only be a primary path.";
            }
            default primary-path;
            description
              "Indicates whether the requested path is a primary
              path, a secondary path, a reverse primary path or a
              reverse secondary path.";
            case primary-path {
              description
                "The requested path is a primary path.";
            }
            container secondary-path {
              presence
                "Indicates that the requested path is a secondary
                path.";
              description
                "The name of the primary path which the requested
                secondary path belongs to.";
              leaf primary-path-name {
                type string;
                description
                  "TE primary path name.";
              }
            } // container secondary-path
            container primary-reverse-path {
              presence
                "Indicates that the requested path is a primary
                reverse path.";
              description
                "The name of the primary path which the requested
                primary reverse path belongs to.";
              leaf primary-path-name {
                type string;
                description
                  "TE primary path name.";
              }
            } // container primary-reverse-path
            container secondary-reverse-path {
              presence
                "Indicates that the requested path is a secondary
                reverse path.";
              description
                "The names of the primary path and of the primary
                reverse path which the requested secondary reverse
                path belongs to.";
              leaf primary-path-name {
                type string;
                description
                  "TE primary path name.";
              }
              leaf primary-reverse-path-name {
                type string;
                description
                  "TE primary reverse path name.";
              }
            } // container primary-reverse-path
          } // choice path-role
          uses te:k-requested-paths;
          uses te-types:encoding-and-switching-type;
          uses te:tunnel-common-attributes;
          uses te-types:te-topology-identifier;
        } // case value
      } // choice tunnel-attributes
      uses te:path-compute-info;
      uses requested-info;
      uses requested-state;
    }
    list tunnel-attributes {
      key "tunnel-name";
      description
        "Tunnel attributes common to multiple request paths";
      leaf tunnel-name {
        type string;
        description
          "TE tunnel name.";
      }
      uses te-types:encoding-and-switching-type;
      uses te:tunnel-common-attributes;
      uses te:tunnel-associations-properties;
      uses protection-restoration-properties;
      uses te-types:tunnel-constraints;
      uses te:tunnel-hierarchy-properties {
        augment "hierarchy/dependency-tunnels" {
          description
            "Augment with the list of dependency tunnel requests.";
          list dependency-tunnel-attributes {
            key "name";
            description
              "A tunnel request entry that this tunnel request can
               potentially depend on.";
            leaf name {
              type leafref {
                path "/te:tunnels-path-compute/"
                   + "te:path-compute-info/te-pc:tunnel-attributes/"
                   + "te-pc:tunnel-name";
              }
              description
                "Dependency tunnel request name.";
            }
            uses te-types:encoding-and-switching-type;
          }
        }
      }
    }
    uses synchronization-info {
      if-feature svec;
    }
  } // path-compute rpc input

  augment "/te:tunnels-path-compute/te:output/"
        + "te:path-compute-result" {
    description
      "Auguments Path Computation RPC output";
    list response {
      key "response-id";
      config false;
      description
        "response";
      leaf response-id {
        type uint32;
        description
          "The response-id has the same value of the
           corresponding request-id.";
      }
      uses te:path-computation-response;
      uses reported-state;
    }
  } // path-compute rpc output

  augment "/te:tunnels-actions/te:input/te:tunnel-info/"
        + "te:filter-type" {
    description
      "Augment Tunnels Action RPC input filter types";
    case path-compute-transactions {
      when "derived-from-or-self(../te:action-info/te:action, "
         + "'tunnel-action-path-compute-delete')";
      description
        "Path Delete RPC input";
      leaf-list path-compute-transaction-id {
        type string;
        description
          "The list of the transaction-id values of the
           transient states to be deleted";
      }
    }
  } // path-delete rpc input

  augment "/te:tunnels-actions/te:output" {
    description
      "Augment Tunnels Action RPC output with path delete result";
    container path-computed-delete-result {
      description
        "Path Delete RPC output";
      leaf-list path-compute-transaction-id {
        type string;
        description
          "The list of the transaction-id values of the
           transient states that have been successfully deleted";
      }
    }
  } // path-delete rpc output
}
]]></sourcecode></figure>

</section>
</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>This document describes use cases of requesting Path Computation
   using YANG data models, which could be used at the ABNO Control
   Interface <xref target="RFC7491"/> and/or between controllers in ACTN <xref target="RFC8453"/>. As
   such, it does not introduce any new security considerations compared
   to the ones related to YANG specification, ABNO specification and
   ACTN Framework defined in <xref target="RFC7950"/>, <xref target="RFC7491"/> and <xref target="RFC8453"/>.</t>

<t>The YANG module defined in this document is designed to be accessed via
   the NETCONF protocol <xref target="RFC6241"/> or RESTCONF protocol <xref target="RFC8040"/>. The
   lowest NETCONF layer is the secure transport layer, and the
   mandatory-to-implement secure transport is Secure Shell (SSH)
   <xref target="RFC6242"/>. The lowest RESTCONF layer is HTTPS, and the mandatory-to-
   implement secure transport is TLS <xref target="RFC8446"/>.</t>

<t>The Network Configuration Access Control Model (NACM) 
   <xref target="RFC8341"/> provides the means to
   restrict access for particular NETCONF or RESTCONF users to a
   preconfigured subset of all available NETCONF or RESTCONF protocol
   operations and content.</t>

<t>The YANG module defined in this document augments the "tunnels-path-compute" and the "tunnel-actions" RPCs defined in <xref target="I-D.ietf-teas-yang-te"/>. The security considerations provided in <xref target="I-D.ietf-teas-yang-te"/> are also applicable to the YANG module
   defined in this document.</t>

<t>The RPC defined in this document can also be used for Denial-of-service (DoS) attacks. The security considerations defines in section 10.7.2 of <xref target="RFC5440"/> also applies to the use of this RPC.</t>

<t>The definition of the input shaping/policing mechanisms and of their configuration is outside the scope of this document.</t>

<t>Some of the RPC operations defined in this YANG module may be considered
   sensitive or vulnerable in some network environments.  It is thus
   important to control access to these operations. These are the
   operations and their sensitivity/vulnerability:</t>

<t>"te-pc:response/computed-paths-properties": provides the same information provided by the "te:computed-paths-properties" defined in <xref target="I-D.ietf-teas-yang-te"/>. The security considerations provided in <xref target="I-D.ietf-teas-yang-te"/> for the TE tunnel state apply also to this subtree.</t>

<t>"te-pc:response/te-pc:tunnel-ref", "te-pc:response/te-pc:primary-path-ref", "te-pc:response/te-pc:primary-reverse-path-ref", "te-pc:response/te-pc:secondary-path-ref" and "te-pc:response/te-pc:secondary-reverse-path-ref" provides a reference where the same information provided in "te-pc:response/computed-paths-properties" is temporarly stored with the operational datastore (see <xref target="temp-state"/>). Therefore access to this information does not provide any additional security issue that the information provided with "te-pc:response/computed-paths-properties".</t>

<t>"/te:tunnels-actions": the YANG model defined in this document augments this action with a new action type that allows deleting the transient states of computed paths (see <xref target="temp-state"/>). A malicious use of this action would have no impact on the paths carrying live traffic but it would preclude the client from using the "transient states" to request the set-up of exactly that path, if still available.</t>

<t>The security considerations spelled out in the
   YANG specification <xref target="RFC7950"/> apply for this document as well.</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>This document registers the following URIs in the "ns" subregistry
   within the "IETF XML registry" <xref target="RFC3688"/>.</t>

<figure><artwork><![CDATA[
      URI: urn:ietf:params:xml:ns:yang:ietf-te-path-computation
      Registrant Contact:  The IESG.
      XML: N/A, the requested URI is an XML namespace.
]]></artwork></figure>

<t>This document registers a YANG module in the "YANG Module Names"
   registry <xref target="RFC7950"/>.</t>

<figure><artwork><![CDATA[
      name:      ietf-te-path-computation
      namespace: urn:ietf:params:xml:ns:yang:ietf-te-path-computation
      prefix:    te-pc
      reference: this document
]]></artwork></figure>

</section>


  </middle>

  <back>


    <references title='Normative References'>



<reference anchor='RFC6241' target='https://www.rfc-editor.org/info/rfc6241'>
  <front>
    <title>Network Configuration Protocol (NETCONF)</title>
    <author fullname='R. Enns' initials='R.' role='editor' surname='Enns'/>
    <author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'/>
    <author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'/>
    <author fullname='A. Bierman' initials='A.' role='editor' surname='Bierman'/>
    <date month='June' year='2011'/>
    <abstract>
      <t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices. It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages. The NETCONF protocol operations are realized as remote procedure calls (RPCs). This document obsoletes RFC 4741. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='6241'/>
  <seriesInfo name='DOI' value='10.17487/RFC6241'/>
</reference>

<reference anchor='RFC8040' target='https://www.rfc-editor.org/info/rfc8040'>
  <front>
    <title>RESTCONF Protocol</title>
    <author fullname='A. Bierman' initials='A.' surname='Bierman'/>
    <author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'/>
    <author fullname='K. Watsen' initials='K.' surname='Watsen'/>
    <date month='January' year='2017'/>
    <abstract>
      <t>This document describes an HTTP-based protocol that provides a programmatic interface for accessing data defined in YANG, using the datastore concepts defined in the Network Configuration Protocol (NETCONF).</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8040'/>
  <seriesInfo name='DOI' value='10.17487/RFC8040'/>
</reference>

<reference anchor='RFC8795' target='https://www.rfc-editor.org/info/rfc8795'>
  <front>
    <title>YANG Data Model for Traffic Engineering (TE) Topologies</title>
    <author fullname='X. Liu' initials='X.' surname='Liu'/>
    <author fullname='I. Bryskin' initials='I.' surname='Bryskin'/>
    <author fullname='V. Beeram' initials='V.' surname='Beeram'/>
    <author fullname='T. Saad' initials='T.' surname='Saad'/>
    <author fullname='H. Shah' initials='H.' surname='Shah'/>
    <author fullname='O. Gonzalez de Dios' initials='O.' surname='Gonzalez de Dios'/>
    <date month='August' year='2020'/>
    <abstract>
      <t>This document defines a YANG data model for representing, retrieving, and manipulating Traffic Engineering (TE) Topologies. The model serves as a base model that other technology-specific TE topology models can augment.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8795'/>
  <seriesInfo name='DOI' value='10.17487/RFC8795'/>
</reference>


<reference anchor='I-D.ietf-teas-yang-te' target='https://datatracker.ietf.org/doc/html/draft-ietf-teas-yang-te-36'>
   <front>
      <title>A YANG Data Model for Traffic Engineering Tunnels, Label Switched Paths and Interfaces</title>
      <author fullname='Tarek Saad' initials='T.' surname='Saad'>
         <organization>Cisco Systems Inc</organization>
      </author>
      <author fullname='Rakesh Gandhi' initials='R.' surname='Gandhi'>
         <organization>Cisco Systems Inc</organization>
      </author>
      <author fullname='Xufeng Liu' initials='X.' surname='Liu'>
         <organization>Alef Edge</organization>
      </author>
      <author fullname='Vishnu Pavan Beeram' initials='V. P.' surname='Beeram'>
         <organization>Juniper Networks</organization>
      </author>
      <author fullname='Igor Bryskin' initials='I.' surname='Bryskin'>
         <organization>Individual</organization>
      </author>
      <date day='2' month='February' year='2024'/>
      <abstract>
	 <t>   This document defines a YANG data model for the provisioning and
   management of Traffic Engineering (TE) tunnels, Label Switched Paths
   (LSPs), and interfaces.  The model covers data that is independent of
   any technology or dataplane encapsulation and is divided into two
   YANG modules that cover device-specific, and device independent data.

   This model covers data for configuration, operational state, remote
   procedural calls, and event notifications.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-teas-yang-te-36'/>
   
</reference>

<reference anchor='RFC7950' target='https://www.rfc-editor.org/info/rfc7950'>
  <front>
    <title>The YANG 1.1 Data Modeling Language</title>
    <author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'/>
    <date month='August' year='2016'/>
    <abstract>
      <t>YANG is a data modeling language used to model configuration data, state data, Remote Procedure Calls, and notifications for network management protocols. This document describes the syntax and semantics of version 1.1 of the YANG language. YANG version 1.1 is a maintenance release of the YANG language, addressing ambiguities and defects in the original specification. There are a small number of backward incompatibilities from YANG version 1. This document also specifies the YANG mappings to the Network Configuration Protocol (NETCONF).</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='7950'/>
  <seriesInfo name='DOI' value='10.17487/RFC7950'/>
</reference>

<reference anchor='RFC5440' target='https://www.rfc-editor.org/info/rfc5440'>
  <front>
    <title>Path Computation Element (PCE) Communication Protocol (PCEP)</title>
    <author fullname='JP. Vasseur' initials='JP.' role='editor' surname='Vasseur'/>
    <author fullname='JL. Le Roux' initials='JL.' role='editor' surname='Le Roux'/>
    <date month='March' year='2009'/>
    <abstract>
      <t>This document specifies the Path Computation Element (PCE) Communication Protocol (PCEP) for communications between a Path Computation Client (PCC) and a PCE, or between two PCEs. Such interactions include path computation requests and path computation replies as well as notifications of specific states related to the use of a PCE in the context of Multiprotocol Label Switching (MPLS) and Generalized MPLS (GMPLS) Traffic Engineering. PCEP is designed to be flexible and extensible so as to easily allow for the addition of further messages and objects, should further requirements be expressed in the future. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='5440'/>
  <seriesInfo name='DOI' value='10.17487/RFC5440'/>
</reference>

<reference anchor='RFC2119' target='https://www.rfc-editor.org/info/rfc2119'>
  <front>
    <title>Key words for use in RFCs to Indicate Requirement Levels</title>
    <author fullname='S. Bradner' initials='S.' surname='Bradner'/>
    <date month='March' year='1997'/>
    <abstract>
      <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
    </abstract>
  </front>
  <seriesInfo name='BCP' value='14'/>
  <seriesInfo name='RFC' value='2119'/>
  <seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>

<reference anchor='RFC8174' target='https://www.rfc-editor.org/info/rfc8174'>
  <front>
    <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
    <author fullname='B. Leiba' initials='B.' surname='Leiba'/>
    <date month='May' year='2017'/>
    <abstract>
      <t>RFC 2119 specifies common key words that may be used in protocol specifications. This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</t>
    </abstract>
  </front>
  <seriesInfo name='BCP' value='14'/>
  <seriesInfo name='RFC' value='8174'/>
  <seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>

<reference anchor='RFC7926' target='https://www.rfc-editor.org/info/rfc7926'>
  <front>
    <title>Problem Statement and Architecture for Information Exchange between Interconnected Traffic-Engineered Networks</title>
    <author fullname='A. Farrel' initials='A.' role='editor' surname='Farrel'/>
    <author fullname='J. Drake' initials='J.' surname='Drake'/>
    <author fullname='N. Bitar' initials='N.' surname='Bitar'/>
    <author fullname='G. Swallow' initials='G.' surname='Swallow'/>
    <author fullname='D. Ceccarelli' initials='D.' surname='Ceccarelli'/>
    <author fullname='X. Zhang' initials='X.' surname='Zhang'/>
    <date month='July' year='2016'/>
    <abstract>
      <t>In Traffic-Engineered (TE) systems, it is sometimes desirable to establish an end-to-end TE path with a set of constraints (such as bandwidth) across one or more networks from a source to a destination. TE information is the data relating to nodes and TE links that is used in the process of selecting a TE path. TE information is usually only available within a network. We call such a zone of visibility of TE information a domain. An example of a domain may be an IGP area or an Autonomous System.</t>
      <t>In order to determine the potential to establish a TE path through a series of connected networks, it is necessary to have available a certain amount of TE information about each network. This need not be the full set of TE information available within each network but does need to express the potential of providing TE connectivity. This subset of TE information is called TE reachability information.</t>
      <t>This document sets out the problem statement for the exchange of TE information between interconnected TE networks in support of end-to-end TE path establishment and describes the best current practice architecture to meet this problem statement. For reasons that are explained in this document, this work is limited to simple TE constraints and information that determine TE reachability.</t>
    </abstract>
  </front>
  <seriesInfo name='BCP' value='206'/>
  <seriesInfo name='RFC' value='7926'/>
  <seriesInfo name='DOI' value='10.17487/RFC7926'/>
</reference>

<reference anchor='RFC8340' target='https://www.rfc-editor.org/info/rfc8340'>
  <front>
    <title>YANG Tree Diagrams</title>
    <author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'/>
    <author fullname='L. Berger' initials='L.' role='editor' surname='Berger'/>
    <date month='March' year='2018'/>
    <abstract>
      <t>This document captures the current syntax used in YANG module tree diagrams. The purpose of this document is to provide a single location for this definition. This syntax may be updated from time to time based on the evolution of the YANG language.</t>
    </abstract>
  </front>
  <seriesInfo name='BCP' value='215'/>
  <seriesInfo name='RFC' value='8340'/>
  <seriesInfo name='DOI' value='10.17487/RFC8340'/>
</reference>


<reference anchor='I-D.ietf-teas-rfc8776-update' target='https://datatracker.ietf.org/doc/html/draft-ietf-teas-rfc8776-update-09'>
   <front>
      <title>Common YANG Data Types for Traffic Engineering</title>
      <author fullname='Italo Busi' initials='I.' surname='Busi'>
         <organization>Huawei</organization>
      </author>
      <author fullname='Aihua Guo' initials='A.' surname='Guo'>
         <organization>Futurewei Technologies</organization>
      </author>
      <author fullname='Xufeng Liu' initials='X.' surname='Liu'>
         <organization>Alef Edge</organization>
      </author>
      <author fullname='Tarek Saad' initials='T.' surname='Saad'>
         <organization>Cisco Systems Inc.</organization>
      </author>
      <author fullname='Igor Bryskin' initials='I.' surname='Bryskin'>
         <organization>Individual</organization>
      </author>
      <date day='29' month='January' year='2024'/>
      <abstract>
	 <t>   This document defines a collection of common data types and groupings
   in YANG data modeling language.  These derived common types and
   groupings are intended to be imported by modules that model Traffic
   Engineering (TE) configuration and state capabilities.  This document
   obsoletes RFC 8776.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-teas-rfc8776-update-09'/>
   
</reference>

<reference anchor='RFC5441' target='https://www.rfc-editor.org/info/rfc5441'>
  <front>
    <title>A Backward-Recursive PCE-Based Computation (BRPC) Procedure to Compute Shortest Constrained Inter-Domain Traffic Engineering Label Switched Paths</title>
    <author fullname='JP. Vasseur' initials='JP.' role='editor' surname='Vasseur'/>
    <author fullname='R. Zhang' initials='R.' surname='Zhang'/>
    <author fullname='N. Bitar' initials='N.' surname='Bitar'/>
    <author fullname='JL. Le Roux' initials='JL.' surname='Le Roux'/>
    <date month='April' year='2009'/>
    <abstract>
      <t>The ability to compute shortest constrained Traffic Engineering Label Switched Paths (TE LSPs) in Multiprotocol Label Switching (MPLS) and Generalized MPLS (GMPLS) networks across multiple domains has been identified as a key requirement. In this context, a domain is a collection of network elements within a common sphere of address management or path computational responsibility such as an IGP area or an Autonomous Systems. This document specifies a procedure relying on the use of multiple Path Computation Elements (PCEs) to compute such inter-domain shortest constrained paths across a predetermined sequence of domains, using a backward-recursive path computation technique. This technique preserves confidentiality across domains, which is sometimes required when domains are managed by different service providers. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='5441'/>
  <seriesInfo name='DOI' value='10.17487/RFC5441'/>
</reference>

<reference anchor='RFC5541' target='https://www.rfc-editor.org/info/rfc5541'>
  <front>
    <title>Encoding of Objective Functions in the Path Computation Element Communication Protocol (PCEP)</title>
    <author fullname='JL. Le Roux' initials='JL.' surname='Le Roux'/>
    <author fullname='JP. Vasseur' initials='JP.' surname='Vasseur'/>
    <author fullname='Y. Lee' initials='Y.' surname='Lee'/>
    <date month='June' year='2009'/>
    <abstract>
      <t>The computation of one or a set of Traffic Engineering Label Switched Paths (TE LSPs) in MultiProtocol Label Switching (MPLS) and Generalized MPLS (GMPLS) networks is subject to a set of one or more specific optimization criteria, referred to as objective functions (e.g., minimum cost path, widest path, etc.).</t>
      <t>In the Path Computation Element (PCE) architecture, a Path Computation Client (PCC) may want a path to be computed for one or more TE LSPs according to a specific objective function. Thus, the PCC needs to instruct the PCE to use the correct objective function. Furthermore, it is possible that not all PCEs support the same set of objective functions; therefore, it is useful for the PCC to be able to automatically discover the set of objective functions supported by each PCE.</t>
      <t>This document defines extensions to the PCE communication Protocol (PCEP) to allow a PCE to indicate the set of objective functions it supports. Extensions are also defined so that a PCC can indicate in a path computation request the required objective function, and a PCE can report in a path computation reply the objective function that was used for path computation.</t>
      <t>This document defines objective function code types for six objective functions previously listed in the PCE requirements work, and provides the definition of four new metric types that apply to a set of synchronized requests. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='5541'/>
  <seriesInfo name='DOI' value='10.17487/RFC5541'/>
</reference>

<reference anchor='RFC6242' target='https://www.rfc-editor.org/info/rfc6242'>
  <front>
    <title>Using the NETCONF Protocol over Secure Shell (SSH)</title>
    <author fullname='M. Wasserman' initials='M.' surname='Wasserman'/>
    <date month='June' year='2011'/>
    <abstract>
      <t>This document describes a method for invoking and running the Network Configuration Protocol (NETCONF) within a Secure Shell (SSH) session as an SSH subsystem. This document obsoletes RFC 4742. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='6242'/>
  <seriesInfo name='DOI' value='10.17487/RFC6242'/>
</reference>

<reference anchor='RFC8446' target='https://www.rfc-editor.org/info/rfc8446'>
  <front>
    <title>The Transport Layer Security (TLS) Protocol Version 1.3</title>
    <author fullname='E. Rescorla' initials='E.' surname='Rescorla'/>
    <date month='August' year='2018'/>
    <abstract>
      <t>This document specifies version 1.3 of the Transport Layer Security (TLS) protocol. TLS allows client/server applications to communicate over the Internet in a way that is designed to prevent eavesdropping, tampering, and message forgery.</t>
      <t>This document updates RFCs 5705 and 6066, and obsoletes RFCs 5077, 5246, and 6961. This document also specifies new requirements for TLS 1.2 implementations.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8446'/>
  <seriesInfo name='DOI' value='10.17487/RFC8446'/>
</reference>

<reference anchor='RFC8341' target='https://www.rfc-editor.org/info/rfc8341'>
  <front>
    <title>Network Configuration Access Control Model</title>
    <author fullname='A. Bierman' initials='A.' surname='Bierman'/>
    <author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'/>
    <date month='March' year='2018'/>
    <abstract>
      <t>The standardization of network configuration interfaces for use with the Network Configuration Protocol (NETCONF) or the RESTCONF protocol requires a structured and secure operating environment that promotes human usability and multi-vendor interoperability. There is a need for standard mechanisms to restrict NETCONF or RESTCONF protocol access for particular users to a preconfigured subset of all available NETCONF or RESTCONF protocol operations and content. This document defines such an access control model.</t>
      <t>This document obsoletes RFC 6536.</t>
    </abstract>
  </front>
  <seriesInfo name='STD' value='91'/>
  <seriesInfo name='RFC' value='8341'/>
  <seriesInfo name='DOI' value='10.17487/RFC8341'/>
</reference>

<reference anchor='RFC3688' target='https://www.rfc-editor.org/info/rfc3688'>
  <front>
    <title>The IETF XML Registry</title>
    <author fullname='M. Mealling' initials='M.' surname='Mealling'/>
    <date month='January' year='2004'/>
    <abstract>
      <t>This document describes an IANA maintained registry for IETF standards which use Extensible Markup Language (XML) related items such as Namespaces, Document Type Declarations (DTDs), Schemas, and Resource Description Framework (RDF) Schemas.</t>
    </abstract>
  </front>
  <seriesInfo name='BCP' value='81'/>
  <seriesInfo name='RFC' value='3688'/>
  <seriesInfo name='DOI' value='10.17487/RFC3688'/>
</reference>




    </references>

    <references title='Informative References'>



<reference anchor='RFC7491' target='https://www.rfc-editor.org/info/rfc7491'>
  <front>
    <title>A PCE-Based Architecture for Application-Based Network Operations</title>
    <author fullname='D. King' initials='D.' surname='King'/>
    <author fullname='A. Farrel' initials='A.' surname='Farrel'/>
    <date month='March' year='2015'/>
    <abstract>
      <t>Services such as content distribution, distributed databases, or inter-data center connectivity place a set of new requirements on the operation of networks. They need on-demand and application-specific reservation of network connectivity, reliability, and resources (such as bandwidth) in a variety of network applications (such as point-to-point connectivity, network virtualization, or mobile back-haul) and in a range of network technologies from packet (IP/MPLS) down to optical. An environment that operates to meet these types of requirements is said to have Application-Based Network Operations (ABNO). ABNO brings together many existing technologies and may be seen as the use of a toolbox of existing components enhanced with a few new elements.</t>
      <t>This document describes an architecture and framework for ABNO, showing how these components fit together. It provides a cookbook of existing technologies to satisfy the architecture and meet the needs of the applications.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='7491'/>
  <seriesInfo name='DOI' value='10.17487/RFC7491'/>
</reference>

<reference anchor='RFC8453' target='https://www.rfc-editor.org/info/rfc8453'>
  <front>
    <title>Framework for Abstraction and Control of TE Networks (ACTN)</title>
    <author fullname='D. Ceccarelli' initials='D.' role='editor' surname='Ceccarelli'/>
    <author fullname='Y. Lee' initials='Y.' role='editor' surname='Lee'/>
    <date month='August' year='2018'/>
    <abstract>
      <t>Traffic Engineered (TE) networks have a variety of mechanisms to facilitate the separation of the data plane and control plane. They also have a range of management and provisioning protocols to configure and activate network resources. These mechanisms represent key technologies for enabling flexible and dynamic networking. The term "Traffic Engineered network" refers to a network that uses any connection-oriented technology under the control of a distributed or centralized control plane to support dynamic provisioning of end-to- end connectivity.</t>
      <t>Abstraction of network resources is a technique that can be applied to a single network domain or across multiple domains to create a single virtualized network that is under the control of a network operator or the customer of the operator that actually owns the network resources.</t>
      <t>This document provides a framework for Abstraction and Control of TE Networks (ACTN) to support virtual network services and connectivity services.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8453'/>
  <seriesInfo name='DOI' value='10.17487/RFC8453'/>
</reference>

<reference anchor='RFC8454' target='https://www.rfc-editor.org/info/rfc8454'>
  <front>
    <title>Information Model for Abstraction and Control of TE Networks (ACTN)</title>
    <author fullname='Y. Lee' initials='Y.' surname='Lee'/>
    <author fullname='S. Belotti' initials='S.' surname='Belotti'/>
    <author fullname='D. Dhody' initials='D.' surname='Dhody'/>
    <author fullname='D. Ceccarelli' initials='D.' surname='Ceccarelli'/>
    <author fullname='B. Yoon' initials='B.' surname='Yoon'/>
    <date month='September' year='2018'/>
    <abstract>
      <t>This document provides an information model for Abstraction and Control of TE Networks (ACTN).</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8454'/>
  <seriesInfo name='DOI' value='10.17487/RFC8454'/>
</reference>


<reference anchor='I-D.ietf-ccamp-otn-topo-yang' target='https://datatracker.ietf.org/doc/html/draft-ietf-ccamp-otn-topo-yang-17'>
   <front>
      <title>A YANG Data Model for Optical Transport Network Topology</title>
      <author fullname='Haomian Zheng' initials='H.' surname='Zheng'>
         <organization>Huawei Technologies</organization>
      </author>
      <author fullname='Italo Busi' initials='I.' surname='Busi'>
         <organization>Huawei Technologies</organization>
      </author>
      <author fullname='Xufeng Liu' initials='X.' surname='Liu'>
         <organization>IBM Corporation</organization>
      </author>
      <author fullname='Sergio Belotti' initials='S.' surname='Belotti'>
         <organization>Nokia</organization>
      </author>
      <author fullname='Oscar Gonzalez de Dios' initials='O. G.' surname='de Dios'>
         <organization>Telefonica</organization>
      </author>
      <date day='10' month='July' year='2023'/>
      <abstract>
	 <t>   This document describes a YANG data model to describe the topologies
   of an Optical Transport Network (OTN).  It is independent of control
   plane protocols and captures topological and resource-related
   information pertaining to OTN.  This model enables clients, which
   interact with a transport domain controller, for OTN topology-related
   operations such as obtaining the relevant topology resource
   information.


	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-ccamp-otn-topo-yang-17'/>
   
</reference>

<reference anchor='RFC4655' target='https://www.rfc-editor.org/info/rfc4655'>
  <front>
    <title>A Path Computation Element (PCE)-Based Architecture</title>
    <author fullname='A. Farrel' initials='A.' surname='Farrel'/>
    <author fullname='J.-P. Vasseur' initials='J.-P.' surname='Vasseur'/>
    <author fullname='J. Ash' initials='J.' surname='Ash'/>
    <date month='August' year='2006'/>
    <abstract>
      <t>Constraint-based path computation is a fundamental building block for traffic engineering systems such as Multiprotocol Label Switching (MPLS) and Generalized Multiprotocol Label Switching (GMPLS) networks. Path computation in large, multi-domain, multi-region, or multi-layer networks is complex and may require special computational components and cooperation between the different network domains.</t>
      <t>This document specifies the architecture for a Path Computation Element (PCE)-based model to address this problem space. This document does not attempt to provide a detailed description of all the architectural components, but rather it describes a set of building blocks for the PCE architecture from which solutions may be constructed. This memo provides information for the Internet community.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='4655'/>
  <seriesInfo name='DOI' value='10.17487/RFC4655'/>
</reference>

<reference anchor='RFC8342' target='https://www.rfc-editor.org/info/rfc8342'>
  <front>
    <title>Network Management Datastore Architecture (NMDA)</title>
    <author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'/>
    <author fullname='J. Schoenwaelder' initials='J.' surname='Schoenwaelder'/>
    <author fullname='P. Shafer' initials='P.' surname='Shafer'/>
    <author fullname='K. Watsen' initials='K.' surname='Watsen'/>
    <author fullname='R. Wilton' initials='R.' surname='Wilton'/>
    <date month='March' year='2018'/>
    <abstract>
      <t>Datastores are a fundamental concept binding the data models written in the YANG data modeling language to network management protocols such as the Network Configuration Protocol (NETCONF) and RESTCONF. This document defines an architectural framework for datastores based on the experience gained with the initial simpler model, addressing requirements that were not well supported in the initial model. This document updates RFC 7950.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8342'/>
  <seriesInfo name='DOI' value='10.17487/RFC8342'/>
</reference>

<reference anchor='RFC6805' target='https://www.rfc-editor.org/info/rfc6805'>
  <front>
    <title>The Application of the Path Computation Element Architecture to the Determination of a Sequence of Domains in MPLS and GMPLS</title>
    <author fullname='D. King' initials='D.' role='editor' surname='King'/>
    <author fullname='A. Farrel' initials='A.' role='editor' surname='Farrel'/>
    <date month='November' year='2012'/>
    <abstract>
      <t>Computing optimum routes for Label Switched Paths (LSPs) across multiple domains in MPLS Traffic Engineering (MPLS-TE) and GMPLS networks presents a problem because no single point of path computation is aware of all of the links and resources in each domain. A solution may be achieved using the Path Computation Element (PCE) architecture.</t>
      <t>Where the sequence of domains is known a priori, various techniques can be employed to derive an optimum path. If the domains are simply connected, or if the preferred points of interconnection are also known, the Per-Domain Path Computation technique can be used. Where there are multiple connections between domains and there is no preference for the choice of points of interconnection, the Backward-Recursive PCE-based Computation (BRPC) procedure can be used to derive an optimal path.</t>
      <t>This document examines techniques to establish the optimum path when the sequence of domains is not known in advance. The document shows how the PCE architecture can be extended to allow the optimum sequence of domains to be selected, and the optimum end-to-end path to be derived through the use of a hierarchical relationship between domains. This document is not an Internet Standards Track specification; it is published for informational purposes.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='6805'/>
  <seriesInfo name='DOI' value='10.17487/RFC6805'/>
</reference>

<reference anchor='RFC7446' target='https://www.rfc-editor.org/info/rfc7446'>
  <front>
    <title>Routing and Wavelength Assignment Information Model for Wavelength Switched Optical Networks</title>
    <author fullname='Y. Lee' initials='Y.' role='editor' surname='Lee'/>
    <author fullname='G. Bernstein' initials='G.' role='editor' surname='Bernstein'/>
    <author fullname='D. Li' initials='D.' surname='Li'/>
    <author fullname='W. Imajuku' initials='W.' surname='Imajuku'/>
    <date month='February' year='2015'/>
    <abstract>
      <t>This document provides a model of information needed by the Routing and Wavelength Assignment (RWA) process in Wavelength Switched Optical Networks (WSONs). The purpose of the information described in this model is to facilitate constrained optical path computation in WSONs. This model takes into account compatibility constraints between WSON signal attributes and network elements but does not include constraints due to optical impairments. Aspects of this information that may be of use to other technologies utilizing a GMPLS control plane are discussed.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='7446'/>
  <seriesInfo name='DOI' value='10.17487/RFC7446'/>
</reference>




    </references>


<section anchor="examples"><name>Examples</name>

<t>This section contains examples of use of the model with RESTCONF
<xref target="RFC8040"/> and JSON encoding.</t>

<t>These examples show how path computation can be requested for the tunnels configuration provided in Appendix A of <xref target="I-D.ietf-teas-yang-te"/>.</t>

<section anchor="basic-example"><name>Basic Path Computation</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 12.1 of of <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>In this case, the TE Tunnel has only one primary path with no specific constraints.</t>

<figure><artwork type="ascii-art"><![CDATA[
POST /restconf/operations/ietf-te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="basic.json"><![CDATA[
{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 1,
          "tunnel-name": "Example_LSP_Tunnel_A_2",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "192.0.2.1",
          "destination": "192.0.2.4",
          "bidirectional": "false",
          "signaling-type": "te-types:path-setup-rsvp"
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="transient-state-example"><name>Path Computation with transient state</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 12.1 of of <xref target="I-D.ietf-teas-yang-te"/> requesting some transient state to be reported within the operational datastore, as described <xref target="temp-state"/>.</t>

<t>In this case, the TE Tunnel has only one primary path with no specific constraints.</t>

<figure><artwork type="ascii-art"><![CDATA[
POST /restconf/operations/ietf-te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="transient-state.json"><![CDATA[
{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 2,
          "tunnel-name": "Example_LSP_Tunnel_A_2",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "192.0.2.1",
          "destination": "192.0.2.4",
          "bidirectional": "false",
          "signaling-type": "te-types:path-setup-rsvp",
          "requested-state": {
            "transaction-id": "example"
          }
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="global-path-constraint-example"><name>Path Computation with Global Path Constraint</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 12.3 of of <xref target="I-D.ietf-teas-yang-te"/>. The 'named path constraint' is created in section 12.2 of <xref target="I-D.ietf-teas-yang-te"/> applies to this path computation request.</t>

<figure><artwork type="ascii-art"><![CDATA[
POST /restconf/operations/ietf-te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="global-path-constraint.json"><![CDATA[
{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 3,
          "tunnel-name": "Example_LSP_Tunnel_A_4_1",
          "path-name": "Simple_LSP_1",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "192.0.2.1",
          "destination": "192.0.2.4",
          "bidirectional": "false",
          "signaling-type": "path-setup-rsvp",
          "named-path-constraint": "max-hop-3",
          "requested-state": {}
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="tunnel-path-constraint-example"><name>Path Computation with Per-tunnel Path Constraint</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 12.4 of of <xref target="I-D.ietf-teas-yang-te"/>, using a per tunnel path constraint.</t>

<figure><artwork type="ascii-art"><![CDATA[
POST /restconf/operations/ietf-te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="tunnel-path-constraint.json"><![CDATA[
{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 4,
          "tunnel-name": "Example_LSP_Tunnel_A_4_2",
          "path-name": "path1",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "192.0.2.1",
          "destination": "192.0.2.4",
          "bidirectional": "false",
          "signaling-type": "te-types:path-setup-rsvp",
          "path-metric-bounds": {
            "path-metric-bound": [
              {
                "metric-type": "te-types:path-metric-hop",
                "upper-bound": "3"
              }
            ]
          }
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="path-computation-result"><name>Path Computation result</name>

<t>This example reports the output of the path computation RPC request described in <xref target="tunnel-path-constraint-example"/>.</t>

<figure><artwork type="ascii-art"><![CDATA[
HTTP/1.1 200 OK
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="computed-path.json"><![CDATA[
{
  "ietf-te:output": {
    "path-compute-result": {
      "ietf-te-path-computation:response": [
        {
          "response-id": 3,
          "computed-paths-properties": {
            "computed-path-properties": [
              {
                "k-index": "1",
                "path-properties": {
                  "path-route-objects": {
                    "path-route-object": [
                      {
                        "index": "1",
                        "numbered-node-hop": {
                          "node-id": "192.0.2.2"
                        }
                      },
                      {
                        "index": "2",
                        "numbered-node-hop": {
                          "node-id": "192.0.2.4"
                        }
                      }
                    ]
                  }
                }
              }
            ]
          },
          "tunnel-ref": "Example_LSP_Tunnel_A_4_1",
          "primary-path-ref": "path1"
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="path-computation-with-primary-and-secondary-paths"><name>Path Computation with Primary and Secondary Paths</name>

<t>This section contains examples of use of the model to compute primary and secondary paths described in section 12.6 of <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>These examples consider the cases where:
- primary and reverse paths are unidirectional and not co-routed (example-1);
- primary and reverse paths are bidirectional (example-3);
- primary and reverse paths are unidirectional and co-routed (example-4).</t>

<figure><artwork type="ascii-art"><![CDATA[
POST /restconf/operations/ietf-te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>

<figure><sourcecode type="json" markers="false" name="primary-secondary-paths.json"><![CDATA[
{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 1,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "primary-1 (fwd)",
            "primary-path": {}
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 2,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "primary-2 (rev)",
            "primary-reverse-path": {
              "primary-path-request-ref": 1
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.3",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 3,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-1 (fwd)",
            "secondary-path": {
              "primary-path": [
                {
                  "path-request-ref": 1
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.1"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 4,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-2 (fwd)",
            "secondary-path": {
              "primary-path": [
                {
                  "path-request-ref": 1
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.5",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 5,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-3 (rev)",
            "secondary-reverse-path": {
              "primary-reverse-path": [
                {
                  "path-request-ref": 2
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.5"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.4",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 6,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-4 (rev)",
            "secondary-reverse-path": {
              "primary-reverse-path": [
                {
                  "path-request-ref": 2
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.4"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.3",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 7,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-5 (rev)",
            "secondary-reverse-path": {
              "primary-reverse-path": [
                {
                  "path-request-ref": 2
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.3"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.1",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 8,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-3",
            "path-name": "primary-1 (bidir)",
            "primary-path": {}
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 9,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-3",
            "path-name": "secondary-1 (bidir)",
            "secondary-path": {
              "primary-path": [
                {
                  "path-request-ref": 8
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.1"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 10,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-3",
            "path-name": "secondary-2 (bidir)",
            "secondary-path": {
              "primary-path": [
                {
                  "path-request-ref": 8
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.5",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 11,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-4",
            "path-name": "primary-1 (fwd)",
            "primary-path": {
              "co-routed": [null]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 12,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-4",
            "path-name": "primary-2 (rev)",
            "primary-reverse-path": {
              "primary-path-request-ref": 11
            }
          }
        },
        {
          "request-id": 13,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-4",
            "path-name": "secondary-1 (fwd)",
            "secondary-path": {
              "primary-path": [
                {
                  "co-routed": [null],
                  "path-request-ref": 11
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.1"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 14,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-4",
            "path-name": "secondary-2 (fwd)",
            "secondary-path": {
              "primary-path": [
                {
                  "co-routed": [null],
                  "path-request-ref": 11
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.5",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 15,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-3 (rev)",
            "secondary-reverse-path": {
              "primary-reverse-path": [
                {
                  "path-request-ref": 12
                }
              ]
            }
          }
        },
        {
          "request-id": 16,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-4 (rev)",
            "secondary-reverse-path": {
              "primary-reverse-path": [
                {
                  "path-request-ref": 12
                }
              ]
            }
          }
        }
      ],
      "ietf-te-path-computation:tunnel-attributes": [
        {
          "tunnel-name": "example-1",
          "source": "192.0.2.1",
          "destination": "192.0.2.5",
          "bidirectional": "false"
        },
        {
          "tunnel-name": "example-3",
          "source": "192.0.2.1",
          "destination": "192.0.2.5",
          "bidirectional": "true"
        },
        {
          "tunnel-name": "example-4",
          "source": "192.0.2.1",
          "destination": "192.0.2.5",
          "bidirectional": "false"
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
</section>
<section numbered="false" anchor="acknowledgments"><name>Acknowledgments</name>

<t>The authors would like to thank Karthik Sethuraman, Igor Bryskin and Xian Zhang for
participating in the initial discussions that have triggered this
work and providing valuable insights.</t>

<t>The authors would like to thank the authors of the TE tunnel YANG
data model <xref target="I-D.ietf-teas-yang-te"/>, in particular Igor Bryskin, Vishnu Pavan
Beeram, Tarek Saad and Xufeng Liu, for their inputs to the
discussions and support in having consistency between the Path
Computation and TE tunnel YANG data models.</t>

<t>The authors would like to thank Adrian Farrel, Dhruv Dhody, Igor
Bryskin, Julien Meuric and Lou Berger for their valuable input to the
discussions that has clarified that the path being set up is not
necessarily the same as the path that has been previously computed
and, in particular to Dhruv Dhody, for his suggestion to describe the
need for a path verification phase to check that the actual path
being set up meets the required end-to-end metrics and constraints.</t>

<t>The authors would like to thank Aihua Guo, Lou Berger, Shaolong Gan,
Martin Bjorklund and Tom Petch for their useful comments on how to
define XPath statements in YANG RPCs.</t>

<t>The authors would like to thank Haomian Zheng, Yanlei Zheng, Tom
Petch, Aihua Guo and Martin Bjorklund for their review and valuable
comments to this document.</t>

<t>Previous versions of document were prepared using 2-Word-v2.0.template.dot.</t>

<t>This document was prepared using kramdown.</t>

</section>

    <section anchor="contributors" numbered="false" toc="include" removeInRFC="false">
        <name>Contributors</name>
    <contact initials="D." surname="Ceccarelli" fullname="Daniele Ceccarelli">
      <organization>Cisco</organization>
      <address>
        <email>daniele.ietf@gmail.com</email>
      </address>
    </contact>
    <contact initials="V." surname="Lopez" fullname="Victor Lopez">
      <organization>Nokia</organization>
      <address>
        <email>victor.lopez@nokia.com</email>
      </address>
    </contact>
    <contact initials="R." surname="Vilalta" fullname="Ricard Vilalta">
      <organization>CTTC</organization>
      <address>
        <email>ricard.vilalta@cttc.es</email>
      </address>
    </contact>
    <contact initials="M." surname="Scharf" fullname="Michael Scharf">
      <organization>Nokia</organization>
      <address>
        <email>michael.scharf@gmail.com</email>
      </address>
    </contact>
    <contact initials="D." surname="Beller" fullname="Dieter Beller">
      <organization>Nokia</organization>
      <address>
        <email>dieter.beller@nokia.com</email>
      </address>
    </contact>
    <contact initials="G." surname="Bruno" fullname="Gianmarco Bruno">
      <organization>Ericsson</organization>
      <address>
        <email>gianmarco.bruno@ericsson.com</email>
      </address>
    </contact>
    <contact initials="F." surname="Lazzeri" fullname="Francesco Lazzeri">
      <organization>Individual</organization>
      <address>
      </address>
    </contact>
    <contact initials="Y." surname="Lee" fullname="Young Lee">
      <organization>Samsung Electronics</organization>
      <address>
        <email>younglee.tx@gmail.com</email>
      </address>
    </contact>
    <contact initials="C." surname="Perocchio" fullname="Carlo Perocchio">
      <organization>Ericsson</organization>
      <address>
        <email>carlo.perocchio@ericsson.com</email>
      </address>
    </contact>
    <contact initials="O." surname="Dugeon" fullname="Olivier Dugeon">
      <organization>Orange Labs</organization>
      <address>
        <email>olivier.dugeon@orange.com</email>
      </address>
    </contact>
    <contact initials="J." surname="Meuric" fullname="Julien Meuric">
      <organization>Orange Labs</organization>
      <address>
        <email>julien.meuric@orange.com</email>
      </address>
    </contact>
    </section>

  </back>

<!-- ##markdown-source:
H4sIAAAAAAAAA+y963ocN5Io+F/fp3fIYf8w2a4qWjfbTbfbpkjK1h7rMqLa
nj6j2fmSVUkyR8XKmsws0bSpfZZ9ln2yjRuAABLIzJLdPd19XGdOm6oCAoFA
IBARCERMp9O7d+bVolxdHGSb9nz6+d07d++0ZbssDrLD7C+Hz7/JjvM2z55V
i2KZnVd1Vhf/vSmaFnpk67y9zObV1XrT5m1ZrbBvfnZWF+8Osr/k0ADbv8RG
R7rRopqv8isYYFHn5+20LGDctsib6Q30mSLQqQI6vX//7p1mc3ZVNg38s71Z
Q8+nJ6+f3L1zXdVvL+pqsz7IXp8cnmY/wL8Rr2/wO5hX3hYXVX1zkDXt4u6d
cl0fZG29adr7n3zyh0/uI7ZNm68W/5kvqxUAvSmau3fW5UH27201n2RNVbd1
cd7AXzdX/AegdVWs2uY/aKab9rKqD+7eybIp/k+W8ayetgAve7xpSv62rpCY
xaJsq5q/qWqg9reb/Loos9fF/HJVLauLEkfHX4urvFweZCWCmZ0BmK8vqekM
Ru8MdlrUFyWMViyrtu0f8Hn1tsy9IRrqPDvjzl+vsEF0lBfNPK+zb6rVT/my
+ClbFNlxWQm65aqBBrPErzTy62JZnFercu4PXyHU2YX0WwDCVfN1a9tGMTlc
ber8Iju9zOurXA3xTVVdLAsPfL5qLvOvL+iHKCxgUQBUKihHl+Uqz/4Mo3Nz
R6nLEpjz4R++nmOLDTWYzYnh58CTdXm2aWO8cJyvSphQdlTMYa7FcumNVjbz
yhtmwc1nuCW+vsDvooh/X85htOy7al381LvA76jhbIkNe5b3FVC7XgDYZb5s
NVWPXr8+8gDW1HL2jlt+PW/b+Yz51gP4rJxf5iAvTuE/9XkvilfcdNZQ055J
HwNRiho5fVn0s/WCWiJbQ8ueaX9T5qurvJ7D9qk3q0rBPIF5Ng3KKgX2wjSf
nWHzrwtpFIX9pM5X8wLWN/su/+knaKqgP10tynflYpMvuyxZbUB+fVcUqvlp
ftXgtyfLYt7WuDV8QXGDfZZFMWt/7CHfUV6DVHpZ1NUceHhwsnNsPlub5v2T
fbGE+cDaHG8uCgOHQL8AKlwUQIIzH+WKO8wW1OHrippFQf9fm2VZrLJnxQYQ
GAH5v6j97Irae4Dv3plOpxm0b+t83uK/odfry6IuMtiZWTMvVnkNEmiSwRED
bL5c3oBsy/LsEjCFZb/E77LT6ry9hvbT4+K8XBULgvK8aK/l6Nk9PX6+l6FM
KH5sJ9k1wW8v4f9Xa5TyCBNOxSs62rJ1XQEjFIvs7IYA5dlrOBLPy3l2sroA
8EB1hPn6ZC9b8RimS51d5TfZWYHid4M9YNYtnrcEp2ybbL6kr9oqg1XEIbOr
zbItp4sKKLXqnN0zYEtEtClg7Zuiwb8JlsC5rjbLBWAByAJIUQJoZq9PushB
E4YNhK2uGFAJcjLXwzfYDKawaYgCBMxhPb+sqoZpV63b8gqI35lAM8N1fH1Z
NhkoFRs8mw0ODRDzCs5WkKjNlUY5nDiOnG8usC8SG8d7VVxVgPlLYP5isYEF
PAJuaLLdVy+Pmj0432jlkTlePTnK/gKfmbDTm3/Hb06On75+8Sp7/uL1yUH2
cgmaTQGjr5f5vLA9susS0KDB4JvV5uoMqFaxqIyqRYBPBRIFlja7zBsgG+yK
9eZsWTaXxcKM/6yqi+pdUQMPezQBcszhjAKi4GogwWWRHX8iWXi9FWmEZhM4
SHJSBqdnOS4W0BhUpAppUswuZpPs+cnroxfPn2TCf69OTunfe6AywSELa4yM
I3jiNrwqFws8ru/e+fkg+x1yRvUe//U74EL4e7GZG30Sf1/Pp1eof77/bdf+
Xezay7yFhgjZ7N62uigAas1sjROJUY4AqkEQj870Zm6RcfuDut/AxnArbTgq
X69hjjSvRXl+DisG8wVsgWyw0Rr4kzeT/Q1UePxjjpwDfNHCaQp7uzkgnsyy
Q4Q3Z5PjMXG5MEj2ApaCvgd2P3z8/AVzCmjZbjjg05+/gp382cM/3Hv/foIs
eA2sdwlKqAaM6jroZCBQqqoGoytHNQ7no1bm7h0cwwyx5GVp87fINBkqSReF
sEG+nG+WDHe3KYrsSXmBwuoemDqrTOOzNzNzlNMPu4DhA2jwPIC+wA8yX5zl
0WvYDwzi84ePHuCUeFPkovAyZmaTwSo3Ri7CWMyTGUJxm6ojd6ELSwUQbNRe
UfMMUEEJdwTWGnBibdfiyA2+e/T8aC+jeTwjJjomJrp7J0bk3WfHp0ckjqAv
TPz50RS/QXHDYwK4Z0/3JmDWrboIZQafZ6fHRzTiS9wzaI/iVhfk7t7R2L18
rsbDsabwjRoPUHr5dG+WGdYBOj98/16JamALLXWurAWOqL0kcX3UldX2KECS
rMH0MLIatvRyw1wsO4h2LgJEsxZtGjkPea7B7omsOonWZfGuWDazzD+E86aB
P1hU8K7Hs92CaEh4q2GBiGDowv/2HDIstOWg+fnnfwGafXr/IbA3nDr2xJEf
Pv/k4SeG76FX6INAXZoMeVimo5MG10njhhwA8ytwswDzsIZp5DHMpISj2skE
xhaAxk4BdJ5gA4YBZ8IxLPnpBiQD/GlXwiz6YsKHV2ucAqCaXKyqpgWo1/nN
hMSrpSd5ZxbonXG8Adv4NUveEsgvxPjsD4/ev59lTzY1yugrUBIm9qBQQzXr
Yl7iBBZFC8o0iV0+Ko5pvWiUJWs+dDjargTJdreinzrA0cw6AnYBVn86PSb7
dgoW8dV6WrWrKXYgLQfWEifxAvQ95C0g6KpZV3Wrz+ts9wUKJ9OGvFNgsbfw
/fGf9xxSMP+JEcKs3rnDERgP1+skQDUjualI5o6iLH8HJMnPymXZ3tB5hGsY
zDSDzV5dN6xPaQEhip0h5iCrK33K6VIzguEtIswaTsWzJWm7wMn7apcKvxqd
dlXAodjktags7iBocBDAH5dOOJo2AG587gwbe05yuPyJztu1W3M4mvJVRSd/
MHyFcuLikuWDt500VdvNaoWEY5WCN4NVr1CTFdzlYLL7xKrPgoW/DEZDWDZV
1hTtdLOeQNdl0UJHnBvPFv5h1VoCs8VayBKKIsWzIEgsNd2eBHayDK+Vec1c
vqaOhyguZ7i7mTGBL0GwMb2ErZnfwDbRlknPuER4NAFoe8Pg2BXXGOTjskSI
wCWkdLDMPke1gsUm9MjVhOlIh8F2RKGbVqvlzQ7hO4EjQC1XP0aKIcJZ05RK
GnxRAV2A2UCHBmUoX93wKbNmbeas2rCYAD2F+JFIpExKOTgbUA7g1xLmWvBR
le0A6+5Q3/PNivZEjrtcpqBIisf0w08fPUJ1CPnIHMS+exvgyPGC36uD9aU5
ifHQeblnOS0YiCDwaj96iMfYL7Tu8r+hbde3iubg0Kgje4GQagy7WU0Kp5uv
8gumIwp5EEAwmUOluhsF9cHD+0Kk3/0ue12gzBMJhb6BIntb3IAhVC+abOfZ
n09f70z4v2ig49+vTv71z09fnRzj36ffHn73nf3jjrQ4/fbFn787dn+5nkcv
nj07eX7MneHbzPvqzs6zw7/sMK/svHj5+umL54ff7XSpgIcru0JI41zXLKma
O94Genz08v/7f+89FNa4f+/eH0AQyHF17zPUHWG9VzwabkT5J5D15g4YS0Ve
k3KxXMK6rfF2oSHGay6r61WGnDK7Y5bw5Jhc2Rn9z59YUotyUyjlZiHKDUqP
HNZyiR5KIydgnNcnYkI6LZb2qfwIm5n8NIAv/GNZrt42rP5clO9A1xapb3W4
oxMPqcOkVkf7a4+QWmXo1mlvWBqgkMvXeF6aE5k3BM4ld+YwgsWLrgptVKvd
uQYXdb6+FDozGLRFbxCK2mCgmwB345lXooxebGpzYnj2OxEX8CU4gixjniu7
UZ+PywovtvgILDVeSE6zS3GMagXwJoQ7LMmmnVbnU9OWxSCoZu0ccHgC0y1+
zFEmTliTYFFqbHwiWWC4M5nkQPguP0N3P6AE5/yCV2b3u9OXe3yw3hh9GXWh
lVMqgYJII3Q+4E9n8MV1uWgvmbYoxmUyjo5CFUFIDmAYiWaEVp+xgzx5bZiI
TUSfuU88Bi35OCXhVRdLxhlG6vKqqHTMV2RLiV68Rr9hw16LgrYE8Rf0I/9G
FgzJewRBbMh9RXtX1E2YZbjM0P+HguxK1kHz7CdYaMOJqHM6JTWYW56xnwVA
HK7MgvMaigOG3VPM06vs6TcvUTbluBvQkbFpq1V1VW2a7PSmaYurmVVK7n/6
/r1W65wQJoVe5JjRetXR0ODMz6vNKjj5WM+xQr0u8FIxh513ZYbBrxb8lSa/
lqvnFerjrEJWIiOi5ywcIWq0lzW0+ZFcSGxePMeN9Ty/QiuOej0NRprQbQWt
OE3NMQvrxuoorM7+CziCmQfl/poHWyiNki6l8UKOf0M1p5qXds8rM6auC7CP
VgtLWFBrwFwqSMXdLAst4UmDAXk9Zagy3VuZbSafW4bD3TPvc5u9sh40/Cd0
nvqf8N/pn7AzcMmU3XsCXlRD/aX5iRzr/xs+/yEjQ2e/hXTOOh/pjE531Xm6
nnc7d2IPcM5Pjv4NPtKS/dGOihmFSny5Y1mGRVpnXWQ5dmiT0B0B3c4DZ7UF
SKPgkoAGjF0QACeUFyt2enoMOOvA6Llk6FHF++8YgiFwPUYPUZ/PP//ss0/B
FoPNMH6kK1B4eaqwg4uZuRGA/T4lHVduDf7c4CVNYzcoGVWNaCOwVA3ZSb56
bF2axkJAPbZRfnKCBJKpqPlwPz1+7vmJULJ1HPJKClobawuFmCdKIGo0mMt5
a5Yb3eFOtz/btJ4fD48IMIlY3phmxiBCsQeqEQqZ4nyz1EgKcfi3RoBf5u8K
XhQKr0G/1KJYF8zQfIAH7kFFptb6nw5AEZi/Ldp946xB7+eF2JK7P/+8rsrp
Zv7+/d4XBM27CgidaYAg3ag4J/XPP18tpDttOxLVRziXWoQ0/AXrtSrEzwE9
FnMZcUYsw7MlyXhWr+f0E8H6+efL9bygf5u1WCOYdwWczUKy7BLPlsopgLyU
Ma+clejeFEHNyspZwX6dx0Cpa2zyqphv6gZG6uq31ii8J2h+qz2xRmtjvefT
zz8xeg9doTGpzQmXXJbggDOMNCEVUpoL+kbrwbsqdtlkhtrvQP8w/iHadHwg
kqaxprENELq4+Pnn8/JiarmBkP5/4APybl6W01wcgL2fj8MT5+PhPredL8b0
CYg3qo93FzFynO1xQxoIHT4eSwM1VnoEj7gfD7XuoB5AiGAlP3+vB4hB7va8
Tf4jBjnWn9cz1d+HH+vPNkW6v2GUVH91aRTtr+FvP38ffpLyH6cobxbu435+
iq253yDsOjOf72epT6rrgfvTlyadFl7Xj/uZK2jkdQU98F52+2XW+/+g0X0i
RDDqx6NG/bg7Ko57kOjhPgdC/G7XJGENfZNdx3xGdY3zVbqrwo52TnYb8EO6
64H37yMPl4OxXfdpJaYfv9m66779yvYd2XXffWX79nc1VN3PhHWIwm8UtZNd
haqCLf1N47q/o10RMvxwaH/OsmP192P4X7vOSSnDVHUIE7U99ogdKkKmN4py
hmbemqe7St9b3XNsV6YqI7xvVKA/9moZDvIbR22RUAex9prns5NM83ysvfrY
Yx7VJdb0nCpljdO0Em70u527d0DLQsV6ip6ML3cIghhZs/bHdse4d3xdDd0L
18Vyif91v6jbRRXRkAF8ZzGwv5NdUKQZsiTfN0qmsyKcQxsdGaRB1m0JTd6V
xbUYWHxDz2eBcXFqZXQC1sw53h/ki0Up3llprpuBTsuQXISXDUBEpAKX9FOy
1zjWYeEunOzVNC+5On9tbCIbdBKb4K2OVhTRCSykpMtKO90IQhluznXVNCU6
DdUKuEgtsmyN8YJQri+rpYVFIAztYDnRqbjzrqzbDY4D+vsO2/r2O/Q0NTuG
ftZKZXtoTh5Q8pOGPqgolwQkxZtbj66ipHVJijawMT9GkJTDepS7V5n9DQyA
70ayzGcKE/xj+ItsmfYSLOOLy9hq6HgV/FkTY8+zvcOQKBMGdlks141cL6an
wqbn25W4OOuCrxysvRu9VPc5Wi/6NmbXZIvPLAVl0rtSxO6ubQLIpE86Birf
JEugMgCED47bPkSGIGRWN+S2UUQmDl/P4MrMBPbddGJoTBSqvh52u0+A9rN9
c/wxwhE0JoLtPTzQX2Tfv7xHX3//8mH2wqBhgXS6T2Sy+D9vQiSyfYOEahtB
Qn6Qyb4Jp2KQiKJgF0J+xxnclxk8MjMIEOigEALpTCRLLUSnZ7erZSbNMx4C
XSA0jQcyjU+zF6iLvXqIUPTw3E9QkxW//U/9cZj7DKuGnyi0Da0T7KgGN+AA
rQdD5kO4V+zg9ocRhlpHygiQbQRTZ9NaUTVLnze+WIrg64hCOot3aKAmI1/w
dbf7eDLGEWXGh64+Qsy9Z3jqMAAnZgZETPyjRQyNb/HwgHjo6u4dOTMgYaZx
LIIt2sVC8/qbLPwEgiYhYGSDhd0DAWO+DnGI7NLYRGIYDHcNViGGwYjxnagZ
EC/+Z6rEi/5ejx+TNalZTAakS+ITbE83+lbC5lcRLnbsXyRdLBnSBkJMungw
FBlIvFghgPJFz7FnhkpCSW+WKyidzGf/9sWTNGm1CjPzhdN5XVGMNCPRQUSt
uUMjMNzM5/bFofKnONGikIgKKEV5dlzC/71hfExnByShwvAHR76l/7yZ3r44
MZfY+2HbDhL+4r9hjn8Dc4isTFKFMb25D11Bh0vSVWFmcSBIzce3gPmbLpSE
CuM+RMI3FpN4Ww+BCBAkGhESKHmsJX9XhTE9FLFpZH/4uAozC4Hof9y+OAqk
TleFiXw6i5ZSYWaDdoAGktJhtlJiOlAtHQ7nZKa/vLxpaJN/3ydbEipMz6y7
nBwzk2ZeCx9CRMZso7/E5UtXM0+qLin5MlZ1SUiWoHtaZ4lKltE6S0yiJIYO
T/yoRBmrqoRyJEXwiJoRypHR+klHdoTmT69KomXHNipJWlr06iBdafFBOsiH
qBwxP7B2BXoOYTrv7VMb84RCPRFsol5h89hCA/Y8xN3YgQFHVuCAA7wIjnn1
rUJLyGF2zp7Rpy9J47DeOdiUOKFX942H7RCD6tccQJN2PA5id0m+UAzJZLR2
ApfsjvHJro2gFT2GI4TL1j1cMK46gnNe5C5Us5bA4Ka10Iwr1+ho/PZWYvK/
f3lv+v3Lh+xrhVG+f3kf/v1oz7x44mgdE2s739QUpNO0ebtpQnwJSF001abG
d7MSbxqzMOVp5DsAXdVT+95L+xLzlpOhFI12dPaQN3j9qlf7hYLbVZVVOHJO
nIN3CFWLIdQwhGEeotoE388CRIJUrvDR0nxebfBRiGCkIozpfcxq4gK/8TUz
Oq9VG96csA/K+Q1RBVd2WSwuCl4gbyU99y+92cI5c3oDgsNLxkG8EuflJmIT
JeB2cntEp0WA5eAHTG01LcjDgG7lGhkIw7UidxdjvLx9F8fxHj1X1YlrLOdf
9D7kbPR6ID2/vPdJtn/QNfblgz9Js9hg+4Dem2n0Qz9FAgX29ZQI9KNPvNnK
hat3B+jOkT5yZJn4NSNRBqZBT1/Rk7rjvhnuu98d13haqcF+jETyU2S+5vMG
GpjDkmn1yPvJ78MtsjcHSR8A/sSt0qxzv/s1eXl/LfbsCaA4iB21JqJ++N61
c/MjXXey7oErP3lnrPdgwzvc5NsRB5uSvPaqKu2ZiLz+aOzZmziOzCM5DD+d
0wVdUn4p0UVQXDS8gaXPwazAB0KlvF/kmFkPpIVj3RFB8OK6qE1EpzmojtRL
FHoCcgNrUM7lKYU8hnS3gvpRCgY2OqXFDUPSHtCzhzm/29TL767k+o87iuKV
5XJ9epZXrrJXVbasVhfoW8qX5WJfPSxBiP1ARDWgQRucC79S4zWUN//4foPf
JGeLsplvmsboWzXlbQFy5eqOF/cLx+1KLOozL+rXZiUJn1oYbRIxluQvGE8A
HbhrY9561/KKzt5Ly9EoCUqAcFcmNQK1m5r+dEBb5dGtmdnV9h4998N4P/SA
NZ8gcnUgZvPWS3YxFBXqRf/FA10CTFQ84PgI2jjc8VGjMU9jT8Toh0WLDkVK
pnoBi5kQzEivvvjS4djOQWzvpbD18YrSJxnTORQTGh/R++F+DOehvunYZHuu
qmDQ+PC6V+REjx/yuleMKsO9btX/RnvFZuD3/7fe/rG59I3vTSOx0gd90/Yg
xqYXqEUhgrccY8lLKnFrqf5qcBu6GBv/TaSlgaHay5/7cSK86bZUMA4FZwla
7E7twLT8xrX81ocRQH8Th7GfxiNCjzexuez30KMzaParrOmxXtMn2/fvGX/E
BPq5OqBiDED4lf87APjLLwUQw8BqISyvAwDu1/tRGkSsCw9Av/EBytTVcuri
voz14elVrLCQv6z0n0V1fHxat4mHgIJKBhoi2wTWZae1+KtApSN1VzxXOrsU
B0Uc8lOmPTZYPO1GHVPWSfhBTjRBwvNusfpIYEQF/BDvmfOcsS+H4Rc5ZXiy
762NpoxpezCJG0wJ37VdUE63nN8JRkLy0MKa55sgDSbPRJCkUMmuU84zRpxT
LtvlGUoaQp04z9LE6MNkXhWSL6j2QwhdRx7XxTXGmGMMQ2hmIEBDDBE6Dp06
5BrJG/2Ip9BLa+gTloxWTDGDRitmcGIo1h8YhpDWxbwAM3Ix01a5ySr4umcG
eQMLHEVbvam7e8f4Nj2L+3B6NIH/OZ5kJ9NvCeUn02/NmFGQddFu6pWjAG+d
ZaE2Bm8r9dwc91Jz4NI9wKjG2sYgbJtBCEHuOlPo7h3Dv8YAluScOC96W0qP
AnlgBHZW4F6wGC02gAY0jXhnxYIGdkQ5sGLPvG9AZyYPoJv93ojVuC4xowLl
a9ATPp4CYbOm5NfKd+9Ifgga1yLczdFpPR8+i969E19s5RWBIc16RpJvykSe
nis72Nqz/pL2bh/Mjr/S09V7gGjrspU4earxuXtHbiTC0GJ33KnH0ns2YZKC
h4kqnQUuASS7vLACLIH+nn7nna8BhVykmmOvBnjBJGwrm2bDCZF4/7qH6v4J
gLz635sS876UF+LLv/+JFm6cDo2utcrWZUgBbm8vQbYuC+W6MjdFOtOc3EFE
s8mm5RjyyLK8KluFPYv42KVH4FBrutwYzQhFvrLz4rqoE0iUSraLR+9aJ3j0
eMietGXDqMMUkc1L62N5Qonn6sLkG5xk/BiY0gGu55SIgTP6KN+RvOAW55F6
8915763XTL+dn8jWoaRFjln5YOw+ahYyRd4DqMG198k9iLC5ETwmEwbR10Jb
+YzG+4vAzl9WG5vItsf7c5u9UBn6+vxE23irbu3/Rf0TBoRp1XnCnRik41+I
97WGQ8IPZLt8P415Sewoie4D7qTh7i7j7pjugc8r5VoKXWOm+212fKSAx1xz
kWaqe2e4mJcnbBYgr4e7zboGXtise8FFH+NlETw6/iJL4nj3A/fNS/f9Qael
6a68Oqqhebr4RnX3WpruDvCB/3Azk+AjSwWvpep+fHQvu6WXwNbx4fB03g5q
ed+01KPfwgfHuM1entzzzfMMv7vPJr+09Lv/5+2t/ZI7vFHd99XoumXf3N8o
KgzM3TeIzUNQjwr8rdcyIb1MG5zxA8s2Xft/0KWuqBf7fYy3PxQ3jvO/H5Cp
PIWug9TfuX0QDiJ/MYRBr7Drd3z0QDgtOouu0I7gYLgl/AyMbfjsj9POZ3hM
/qu3WfqOl3UP42Dp0T3S72oJRMKp0o2aYi2FU+DKA0tMiXxuUoqRxhbmvbmX
7YLE2MPWRUl3XigWqprWjFVaRGhZ5YvsqpQbae9dotHjjAEsvgawPivM+bfq
2AXWpIeBpzAaq6Y4Iv7zwZ7kSqS2mmydqCOHqcbH02J8TcW6hTgprEMZo8Rk
Hp4GhwnObcLuE/1Y2KUY9JMJOSzVI1U0NdhytckRCQPO5mSQMN4bSXOlw8is
baCf9SqEdnNJTOSnxRmmiOcXsRkSdWLV9K1+v+9MHDa4qHxJDYtFtNKrLEOC
MPKHUW90u8kPzSNczg7Kj1nBDMOkT4Pswhg8sLEHZOdIkFXLS+JcOWoEw+Qm
Lb5lCzFn0GGncydSLF8jQV/WHDFpo8QeGZPFyVSysA/qVVKnS5UJmIIf5K31
Kc2bYVHmw93vT1++3svOl/mF9mm+epntvpLFf5nXIHJaMr4566BnwJl190xw
XmjOm0hGCqG4M2JaO9nu41cvj/YyGPKyWnCWafYTZPigvlzN+c6ddivQleBR
+MERYAzdmia/KMgLUsmaYZVBxyXOl4rheeRhpQxaq3fV8p3LvqktWvLp2IlK
1kXnuSqcr6YpOFbzDGZqEDDRFrV97G1SbL2i9H6wsQVrni2wJ3or/DSwOOFm
XRcgbFFa80zczGgKlCWLF/joZJad2Kk1quYHYHyF9frYtyAzoWIr1gPpDE4M
JqQ9wCVC0Dl5yGwP82THEI9IcHAshI250IDFMcHssksmC9wOh6OYBGjzy7J4
V5ghtPthZhkdz1DaMDZIKcPag9cmsYPxEiIj2W0iWfoeIJaYpJwzydqB02w8
1qjumI4f9/2WuvEWd8nu4z35IvLbEf827tL8tu+3fhAmhA+1ekw1PlX5N9+M
AhF7vuz+fDMEghMwx0HQux/ToAcLHRmoVL0/wc/HmiBpEPvBF6SkaSz6QXxs
yPZ/O74wARcj+cJORiH8Xbl6m2iMa5VER8F6qnm9B57p0D+9d0Os3Run4jUz
jH6419PsjfdFqplloWn/oObP09sxzfqgxdbU1/+17DJWAMmqU5FVYfgmdTCC
bEDdt2lIUXExV37pvKFOS7G5Q/uK3Nk4SDpvuIAXqWcmjbU5EIzI5xIPszA1
uMLRVzLtQYI5kJkNDv2bN368gXjkZqzTiVFeTJeJubHLvVPyOGx4xHpAZ0Q6
8TeNReelX2UBzg5P4ZpEs5oTkqf407G9jkTtAu/PMDc9m2SwEni3umqupUaX
VhmsgmjyiIqCGGbs7GqDLnmnpw1iLiBd+wCVluLHtlg1nOulMqtLYGzC0T5F
T+t5XlEnAmH1uOsKtPNrqiqsM8MKYgeoKCBL4GQo+/FluVyQImOtFdXCU2kI
OQk2jaoO4RUFsyOx73pTrys2rRqyTdHcRcXJjq81Q8vkvdX0OPV9ZhRoo5Li
TeRZm5cu721cQ5plL1ZzpR5hinbDHk6BtMqjUJnGmAgQSyfiY9LJWBe29+1u
6MbPfYXKWTVeDyO+jOlhjVLEvEpfgUKWC7p24xt5EAxr1XlXSsxyCOW/litd
C4fjbKXiHXseoNeSb8fqijPWMwxKwGxoJqq1TVN8Lncylpz6KtYSJKYgdh1L
W34YDJ47ciLatxDbfW4doJ4PDfkrALpFSj0aaPM3xWjMRwMK1yHb5ksFyGoy
5nGS9+X92JcP3JceoBDbbb6MAbLYbvNlBBAt9r3byJf3Y18+uP2rY/Tr0ciM
RV9qVox+2Q/o9vHze/coGv7x8/v3bu2X9x/Ilw/u3fYC6h88/mUMEGu4W9GI
DKW/HkYeje4bGt1XNHpoaHS/n0b282ut2nga9QKKMXEIyEMqAQgJ9OC2HxC0
efDgNg5Ii6uPhwXbx/6XKVH7Jvwi/ISP85Iy20CKYhRJNJQW/gwpSqNYwqKe
U4QgRfkolvio7ziaMhM/VLv/4f2PNeSRgNIYfQigwS+2BaRl9i8BRAfGw9u/
I4zSX4wGJMf8w18IKLVFtgc09mOcHeHAW39Cb4i2IIw3xDNvxcqy1TnJrBbr
tnMxqk0NE31uev4tPSdirWijNuq5sI5v308xCw1esjyM8wB9LrkEXForyHhg
rIXofBahdyI0rVRcH8K3Vq59WqoNMCbSRMUnbkMjzxMU7a2r0QRFdOCfMK9H
WS610BpNoYSTKHQRqTug7N6EQxB7HEQPZjykXAEx3YnmxtBslOMIAPJN4gNl
7Xet/Jh7QicC9hYvdAeYu661M/rLVpwAdPdCIaPkL2jGLHxwZeUWn9aZi5ll
z+z720RpJJOQGn0jtq0tM57gEOsRC2pQiX+Byknpl7+qRGlkoG6t24B9UkWW
JFSUHFuddOMjhyIfgfUzmbLgcmtuRVdP/aZYweju2+dRaKErmX0WChe7rn6h
4TQ2fVV2UXaHq2PeYUdReoYDcIvfZY+LFYzEjiepoa0q+fXUf0WAsqA2jU9w
RzpfVk2xlNcmS65yZm8cO0UD2QUoIQW7JpZiry/QekK1libeeun09fZhgRFg
pvSxKYe4yK6oIq1biEbBHK5tbKL1sUzXmaEkVWSF2dqkA45ohIepMRZ6Qt2r
/DSRLIC+8HOcl2kjxbj9ms9u4siO6l0LByetKo5NkqxMRV1X9RRWZoUzXa/J
E1dzSbylKSKNcf8Wg5l50hBkSqjsUd6AgoAScF2V+FIJvYFYvpsD0pk4UcpQ
yIa8a/IqhANSMioyq3od5ZHcI7cXH1Q7vPC5DPyjaoRv6IVBU7TE5/T2yRJ2
FttGOT4tuTC5CM5zvJG326ihKpv0k0kcUpwDevpJzfIGzil0MZcO2ES4ZdWU
TcuvuwS4jW8/u9GvMwwf46o5DjIZk5bAzBtk/F1uhYzGwT65EQNWYRmoGW2L
+ZK8xuP1TBFDAuPNLBIzWM2XmwU/sLo3y06pkneWb1APak29XEIOvqrq8if6
5oAI6qDYZ4jKLW1K5jZ08WJSXcxBAixm+OLGNbU1su/eoQsR9wu1x0cCV8X8
Ml+VzRUQt1g1XP3X0ouD/5FvaQ1kx2NQGQeRUKTOu6K+LHJ5V1au8E5nbuMC
5QVfjm+tWF4tMP8/SYMhdGiJVCWOOcyQn5A0uFnfFjeNPFnkez6DEZC+LnLO
76EqxjFP0tLen3EaFVy0+c1B9r+KYm0qRevlxLm5d0sKFbtChImrRW5yvNTl
O0AzQhKYKmz7Fe4f3FZSAgHxBzGD9/547VTULT/AsCUgUc/BkErugI/tQNYB
GzUu3Qec3CWxwA/0vMcu5txN1OiewD5379i9gIPnSwz9oaVSzz6DZ3Gwh+f0
pIfeLaEq565x8FCiXF4x9iOag6b7mg/WA6nL60kMiaRriL/r4hJvDBEyd5kg
yXFD8YzqFb2sBNJIABc9z7EDt8BFK1uWpaYHXHzHNhG1RpqXc2KZVsK96s0q
MjwPBJPFq0ykKr0xXdNaWfxpig9n2bNysVgW07PqRzAPQMFdgHiCLXQAooS0
gNpWkwZltDYPJrUMv3vHngyyeUwlbbQa7Bzd00U6+eywiCkXXG6ycyDoNawb
NHp++JrZiOJpz/IlcmRth1gU62V1QwJkJf2L1bsSzkdWNJlEDQkxeVeFHdy5
4KyJw2VT4XK1Bja+9jOdzjYX/iMl6AfH6BWzyCNYzapCgQ7sANx/kD01+qXB
9TpnO7g0P/TRj3WOCjcmEmlZnoHtXhZGiRKeL36E7UHGpK6aCh32MTZXxaxa
mbQEnq9zE+OW1fm6XKBOeFHzNXUxr6ZyKOIpTRpPyxOzp+sJX4rzwz9z3EQU
Tg7GzZrNmTyIJT1BLj7PN6s5lwmS9E+5OVJlHrierMopYYKvDKP6rSGc0eJw
92BWJqe8GSEur8K4jGuAxUppHQCnkRrcgIipauSMV0RDqX0TopcRmPRo3ExI
qXpUsJyqqDdYmLOdbtb7cDLhe3JqsA+HVEHR4rpQuAnVnSht2pzOr8j4RWRA
els4XDrX6mR4MqH967rzOWAkGBHpPEeJ4hRROW1ewmmBmiTOyv2YmY1aF3Bi
FIQAHLtYcpmOYXSbFMjmbQ0sgoeTCNJTKSKPtYdqPlvklfoNnj0XF5we7MXh
M39xREi9kGVbnpdLwoMKPqCAwigNfvXHBDgrbirEQlRuijIxtJ9Y9Iky2O1f
q1N/rYy1xVW/8c4eds6NiQihElCo2C9hD9KLaq3UOYWuNa83te+GNHlYBv/V
ZGPtx47NLQbkU/eVSAjP7rBarathbGxisVxdUef3XpyJaUQFoYxSaqttWTai
QPriRymADgtG4SAqn+jcC0g34cDiO0QaXlzUxUXeesXYvRJYTMKdSbyK/Gd/
uP+psviU+8AzQ5mh0AemXv5qq3QiuocLW6nqG7s8Z/iEID0tYxS/PumE2fOk
zYTbyw1KIRsARK5OlxyOFRrdniXGmjfcQCCNS5vKfjkMuncOgKhTx8YwRafm
3l6sbBo4g5nNr+vOLp6O2aJEbZ2cThYNn7NXSG8MlSaSU2YDmWFnUvrdSK89
fS3LB/IZdAIj2ntj86yXJz577H9RtOHrCa98GXDkwoJJPAXvoWLpvF8D1MtC
8oXeMo2hRe+sEK9Wy7IJTjqUZWKssttLntNzCsYq8oLf4P/nJjjgNOvnbtNS
xhvetHZ7y5QkXMiTQG4XT4ySBau4QX1WfOerJR7P5Kl14JifjSs1OktfBOjZ
wo5AD3Vugha7k+YF8DElIaxQMCFcaQKprNcxgOHUl8i6QYw9yR0vyUQ/JMUr
jK9XF9LDl/xJVKGRPCg8Ip/Vlpc7Ike/5O/QDkZaFNPq/NzV76MVMu8zuksk
r/TD3ezni0jqdjoOtl+Eve7ZLijiKaNrzkiWuCPzGvXzmwlLkcVGnm0oxKI+
qwAzhVWgzCKHURqGLosFaRjUollVQHOhUcI9xtMbRTFnKDVomwpDRb3rk/5Z
kBLD5z815OqWLsFD3jirCh/a4XnOxbUI0A5noaCsN8qOgnWpyx93TOIku8tt
9nPhGudFdOobzAdX7fQyx5dsr8rmLUXrZ9/U1WYNKvbpq+++kcwopPAbvQH1
0nLeuNxIpMkA5jUKHzKX+c9uScm+zCIDMyRxRIDQtgSd/l2+lMvR8Ngh5au5
NB4SPZARvew51OI3sq6+xhQmNaYLs+HatROPcUXemFeTzDPptMbsIHobf5cY
KVrqImadrmRir3sKudKFJ6va7qlnVAAYiTOQlJfVFfaQBy8V8erCvPvS+eu1
WmCvFDrVE2L6WoZ2rqqc649mZVGSymaBv62u0cCfsIxHv5q7+MivOCH/eTgX
c6qrW+BhZvZyvNBJgAcBaSHONw5yBHlWKMDHwPzGeLndabEDWvJOlEFoH1yV
F5f0EBhVHZWaOaZPO31rz74sUIeWuz9EXuPzDpcqDNBesX/AbpamvIJxSP+P
ZgKniG1DOpU92d62vFjrIhMqrbek835IE2CVSbshQVdu0e8jbn833zPod10u
5Koa3xXv/XUrDyTT1qd6eMnqP9XJ6hM9qIOd4fTs+st7n3xDXf7PrW7gkeP+
N7bvb9UNXHUDj0YPmEb/SNUNfFH0IcUNTiRqiLQte+szv6zQ29VT8mBq2voB
YOcdfUQk64CCw3dIKtajLfatFZpdF6QMkOOJnnfZx1GLOr/GIJtGLr8BAXIe
YyupfKBeSMdkIJxq97NvzvbF0UdpFmC3leigZH/VRB0NHzUucuwcgPkRUsAx
BIlGNJIaFEry5KtjPF/iMU6BSTCOSVR3946x3774BZMBWRXMBgToiNnILEjJ
F1UEzH9sey/rTspOJruoWE1wkVamKgQrMpGaRS6r27KbPVXIkVOFvCV7ss2z
eTMWDtV6ZGk2Z7wFdok2sop7VjPpDm/O81dEF9Kk2LHquwN0qg996OtYPcvb
Rn+J6Dw2eaHOMGviFp2WYfx4tgAGh0FYBayjUcrl639tmtbPkuHMYnIwVRQe
set5N2BYdKdnz6fNf29A79gDq2bTmrS1HP6G6iVrNGubs2KSqXtJ9lDxPgWd
t7Y6nIRk7FNWDlRETOCa+NLZ2woj/JihOoxXtX/Mnmd4Cw7fCZimhWbtHPSX
4kcYkvKEWIBocle08+A/MMmzTXPDdheAEH3UCMFT0Gc5yenzqgTV/BWSL9t9
cfr8Fd6YYPIGGhc0p2L6RFJgnGDEDIE5wiAZjsvbfXJytJc9Llv+GSEV2e7j
E4CDmGaH1j+vqKAMAy+3r/Vbelwj1zbk8VOJbVBjxrWhhJZ0a0MMKM72nahg
xXCJM5PUuarLC3wZC9tK2Xs/gFhFjgSYp7Bf5peFqz333CQ73v3h9MXzvYmo
wPgQ9rOHDz+VV7osWyS8NVaHReJpXBm2SpI3Kumg0Dgu+VaGU4yu8aYEZrr7
w/GzPXMHfGAdOoHPleJJJV0orGULaOxgeuhyvmMMOPZmYUjNvKDHjCsbRtaA
EefylaCDAm9nzkxOUbmLyZfX+U0jqXGdvUJQqJQLwdqs0b27YA9j0gWkPQTx
JcRL6Ap2XnlVcAAYRzOhnNsxMq1GNwRbEXgk7GT2HblNMY7nOqeYejsFW6XG
a/496HhRrKbnmLeGYGBvewfAe7ag66vD6f9mvwzM4cyE9gqdTHkVyzYBOo0h
nEt6AgxxjmECIDRakHw/ISU5X7WT02SEWltsvcxXbJLi5TaHAICkLKuFxGls
1njPX9g8R87IPeANyXtA1yoiPA2OaHnBmV4DKGaYmbOKnY8/JeOdRwhFJlpw
TUkeJ0n0lTOpMyK1Cxt0l3sTDBOj5DCNO9spfMEuXwBB4jwYHwyXWBFlBVeb
VkCitbupe4yzm5HgPcB3lUt6A65WGsSa9TEsbyYuW69HTuUHCM768KphQ5pI
2QZRTMqA5YzKmUruXa6gm6RLgqNxouUrs4PKGMbINhzbAVCazRVIecCcylOJ
+uVvH7N1sGqSZoOJCkTurABOaYOvBTrCj9nC4wqV1wfR1UHyMChRXipbSYFK
jOBembTF9HtTrUEFoGA6ETh4BLL6cgHyvb28Cm5i6GwAIpbzhG+RlMmVy3pG
u9w8oTBfhmo9uo3rhUtEPVh964XHEBPRQVxiNg2cYpV2hBQ7kuE7uvc6Y4WM
x/UcMYiBA9tQiop3jfO/UVyXX8jThhvb+xSqDIbpJVYEAG9hDBDsrm5eqCVK
OB6KN4p4YMQ15G0ZKQUGnADMVzZw9qZcxqMNKeJwJCH7hJiKjohuLLqOJapF
EMOLJiYc7x8ik0moYDRB41wibzqKqohRspep7AxDfm4yCVChteEVZO/pUhLn
1s+ob01fq4yMclulY3feFsV60DRNqu9wtCxItEqFhiJfNVbxooQfTEDjzfTc
t+RB3c6B6YI/Eg5Mbb7xJQXYxhzWbHSOUDdSQYMdOqh4B+PjlsJ08goGlaTG
0rFstW4jybkl/pQvYJfl22JZXlbVwpJJBXSI2SnnQCO7joUcrr2hdhiJzlpw
UxRXepm7ZpWpZJAn2E0sG15a/VyhcTffYpRJsE4EIysh0RXRtanxtEXZFubr
bHAJxe2fqm5oXnJFDU8Xl2Zz6ytdHkUpb3t5+aPNfTm2dWBCtEYM39+WLvxI
Z+cYVYbSVrLQaT69TJWoWBrjXVdJjpT48Mp7dFR+84ZLHEA/dIL8H0XcFxGf
DMFOT47jv8nMiftk6K0BRjh71Sfwp4OhK6h5zvGnGF54vkFVVtWcCJ+XrfOm
cV4QWXAtub9IESLmx9meELuuAEWuqnHYUGaa/z12hO0J9xDZKEFtSDa+0jL+
mokVP8gOd+8YL5Ju9ekjlmQD1VMByMq8PYk5mUxFAZ+cXacSl9KIu5UiTq3g
+l0FVUSv393vf7vrdy/STOt9Xkwqvbho5Ew8u3E7Wq7n+a4b/iH+FlhkWH18
qRAW2JAkuvbUtrMidBkZxrTvsjksU2RU/d6bZi5m6qKgutx8T5Mm70SPFSuk
g2WRws3+cJI9nmRHnOLWsq2hh0gplXia+0tIsL0U5MiRFHL3rQCOIdiD3Mkk
ezLJvuHiXdaA1gjGkQuecds1QGFNcfBcchcP+gpLcpHVpPmHAzHztSu4xW08
xw97GXV5YEACn93WNwqDv12lKiMk3MGsIpuEDXwZ7NWbiu2fzm10GO/RrcIT
K1E1AuuJso8F+dcnx+S2mji3dzRES/xXh9PH06PpyfSb6bdW/qrq0ynu7NZG
AjDUn0BJPaK7d7oVkh5vQBNZ8EMdwoPD2Xs2Ah6+GEKZwWmFGMHBw8N1ijAZ
jrIH8G4nvFSJhbJTIbjJhopi3b0Tr4qVjS+KdfdOtCqWrqE0EVPI6hpS8urx
9JhMRjMyU/S0omI/vZyOjmCbe0CodIEKOm0VrRPWxRQsxFod7p1slSBp8xZd
Isjch01YXbobAalNHrJBJBr+nds/CEordtZ/leS+cLoIIeAaCZX0og+95zeZ
CORiZeN1Gh2zQTTgDnj6WWcLhhJbhzWCQTl8QS+HjHbQcUbMIg9pFxgcXPNj
egN8t2nByrq353ajG0qPw+3u7xmBSsoxGs70RI8ufkT5Yx8Pr7fZJhgsmB0u
4RhAFxTAv5GnbwglQJE9gbC88fkrpCZWtUIwzPPs9st54Y04olC583P25eFB
aMsCWBcEywWKKznlFbE4eggSAXUkrBXJTnDTpLzaV+mt0qW/g81cGkodXVoy
cEB1FoljfBCOqThJ60VPKDlS3OTaoIc45Mult1CeAgtiBQux0bQ4KJ62lvEU
r4N0ol4wv51W0+J1j+iLqAFkpha7r8f6kaasxx7ZLzAEdtMUkeg5U7C9IyC0
YiYxT8m6cCa4KR1DSyG5KQWRAxvQ+xoWFEUuKOorWzbU3Zjq6FxK5eGKNThJ
o6UR7Wz2aDrHxIjSc6yXxWINtys9Z/W77hyMSnW4sn4FuXRwCvM8cEB4tEyi
G4RgEqcgoaVj8/79rKtK+p4G0eI8f5kp98e1Z594Vwesb7ABSG+Dy9ZFEbOf
0ka+cgFFFUVoAKPePhGl/WSr8m4q/u3xQNgbfw6y/wz+X399mzD7WSp8jSOn
XmTZ8xevsycnh6dPH393At++iAdJcTjTbRYLRcJvJCaL53OoSnZRl24IUmaS
X/G/n2hCHASw+/Jk3apW0qML5MWUg8QU8Y/sX5nJDf6iH4gurLQfBJjFiy71
A+ku1AAQXII/fnn/E5mOQZk8Cn/8MnvwiZsq/2Y7RDDZPzBxbNEFtb+pkEUH
ZN/FHtofo0tswL0JAzYPVJa+ntg2DydLKAtk30zxkfrZInCsl1hPjDqYffFC
LaT5++PoEn8ctKK/BRNNJrtXYkt8K5T1lsLQ5I0Cwp+Po0v8cdCKIkTt6rxx
KHeJ1/3mwC2nA4Ij/ulLGO/NyCXed116N2D8k96AndFww9uvTvQS33awTIq+
Wz1vbxdHigco0Rfds7d9oZ5WzPIi/knv05H1zAKSJJp3FyfM6Nc5XaO15J2y
Y1rtvo5oF3thYKcGHE/tR2FoFJOXmUpU8vIlYYGz6p9jeaGqLv2HlO5WOYIc
n+4p3Zzt54xNC1DitJVooYXKk3rzpVQF75FV95qRNdJumWeOE6rkGnmzRlX7
jOLPJH0C5fyRr4hW3uR+4Oub0vgIVayhUb7dFY8hdbcWs3ZrEaS4l4hmThUH
tHsLfRLiYpJuj7G1FE2zihNfaRjF27oKAwWN6m5rn8sXHuSTBOTcKnAyLVPH
GxmImOfuHbu4vQzjLbdZX++BrvGN6BpqXXfY4fRk+sSESOL63PvkE+t/PjNJ
UfY4XFZHgWWX5QVd/17mXv09dp51Bmq4dLkbKfuDGwc2pR2IPDOH0yOv7efR
tp23msNuzzRr2H2adh3aUEaJbuIZVfgHooumrrs/NOJAXAMY0WJyeuiHLjga
5V+SyF9zKdtBJ/Fwuk9syJWQWGap594cuUQut6rH6jqcYE7LI7FPdinyiK13
CSFme1UV6esCGf/khj/2ZBhreIw+gD4ODm/+qCOOR/vNLBgB5IPMgi/vPcoC
s4AlyJfZ/UduqvKbeZD0z20W8AztzxaBpFlARPx1zYII8UabBX188rG3xPdk
ibtmwSDHpsk5HkjvEvcC+fs0C8JPwixwKPaKvvhnhLqOKWY/QFnvFCQdqbRT
bNBUp+HVuvtjdV3Z2NOvGVYR6NA259ko7b+RMx6fxK4uyG23rlpOYMina/wM
50Qa4aPueeBPnHQ98ga7BFxzP0z6ycREybVVq2by6JOJ6OKcFAa+Yi1GWudB
+88+2bPu8SCXMCVb6iziq5dHQXqJaK7gybhkwRNamgYMj6pWjt+BTDbdbCAm
z/Sj2b2ZVIU+H5Utl94jSGFe/BsGKM43SxVhSl9ZJsHAQFT6d2TNplbN2lHE
IIS1rxfXHF8vSNINhGsJRs80WDHcBd1+CZi2plG94WcCth0ncaDSpPxG3v6y
N7GBAhLhJyFyymDsxpRLWKxWOzE7tE3jySGBTW9WZZdOFd3ivL/aCuN0LaLu
tT8R0Lz1Z9rGCcJ8zOWQbXXyvN3UMGnWrvf5ZeckKyhJBunZJIcILCXQ4fJw
JtrSxKVvGlpj9ejfxnMxZJ0lllje5IxjnBrOYGfD0fyFpzscyx/MGrgn5MaU
Pfubiwus37fQ+YdlnCvJ6mF1bil3XRfLG/OULQAfICALD5RGknC0bTeOnorf
Gt6XVFKwgDfOxIyml2FGlSjw7OXzoz0X/Cp3fe015raTqAi5dKZ0gzpIk+B8
d/ryAMPMKbz89T0b1GljusxAq+zZ8SkMxTX48niuapyRqq9QtixjKYJ94oa5
r5582CyHZjwehrd5o9Mq6y1APelC1xh/MBFXh1DRjXLJrY14QcrS05jIRqTQ
DPtumHalqaCcS7wGr4x5BeciIBwBzbM6RRr9+/2IE0lF1vGLKlpSFWelItAd
EpTbn1fSAee7sbmpoWfxFkgDuHeydzgZbOWIldG4u1XyjVWVXWzyOl+1hco2
SBKUKlaYEhU6FRZ6PVzeDGQIdVFvNqoptLk4yKQIgVxv84OLq/y/MN+l3O4a
pqIJ2czPWeS6NzdHuh0to2dssAROlpWU/R4rWCxcCJqFT/Q0z61NSD1KExL+
1E77lWxuUX6Z0/NywfpfMPOocjJJ8lFLc3qaYdKyt+ECONdBl3GFc0SoG5Yh
dtFuOtNJblRt+RF2jnWVAp90JQ9oGVEevxLWsDb4qEXyH82yY1fN0Y+DQ8ph
stglBqiDhFhImIJIgJrf09mgdArToWet1k3Ual+zqpaiT1yiMsheYADMjqte
zBqhIazMCVCzi2V1hqegeT3WaJnc9W/JNG3iYonm2uMyAUVrqp1alseISCPL
YYY2n2q2vsRkfiRjyF1oYx1x/anljb/7ZOZpHrgqCimD0ZlUtntu1sy9IQhi
I0SOToQ++PSO8vdG6qe4kSwdVbMUjfr3AjFTqWrXcyid429kA+FvxzYhn/dz
NR6GCjvj7feqBOxQMFSxwrBv+zI4tn5wHBVGA3Eh+hLagJcG15lOzi0lWKPA
CAqmjWg6YUw1bKdcJ0cz5/9uZ3pORIgktJJRj6WXgfJJ8oB2IZVe0eJBFD2F
7P4TDZX0jY4iJDEX4uSn18mA0sQYVKjzjND9deQG4jVRGVBFPKgsxeYOx2bK
9MoquTOTlYIwslmKUyklSgmkHn0Gd5PWE0iXJE213/roqlNKZWlkAkG6Z9r7
buhdcTHjEby64dixNDp75MHmrMhx1UueQ14qdYNNd5feN6Ys4WxMKhEzZ2Vb
ERw7d9+O6KYtoHVVeTT6NHSxbUzmFHlvZrpGHpwFLCGS2qkveetHH1s1JTiU
5aEo9fZ5EE8uYXowNEqCCqcCZnJ+R/nLKn4uOiOXgNEknGhBYcc6CBGiVMyp
jzq7z2ykdy+hiPkJoFEn0ulyslPK6r40Za+UfOCiMV3pKh1fmfc+mKxEKkfg
mmPqamGLhClE3Z+bujQXeX2W01vz5VIcEvTaAC8HF7J2EjeO5QRIJJ5t6kWx
4uT6WHPd7qNq1V14Mi3NYwKqAEHWq7+SrADiMBL1WFytp6Q0u3c7BSobeG7X
NmOMOdk8RqNusYJersyURAaTM8IWijd3TlZXFx0OvVBVrYuZhwbcRJ05yTdA
IH3OW4oDf8e1Bkwl9ChIo8TzrjOuGE5Eke3wzS0vOSCLCSSbCtTIVheG8qhi
du/SvB0rXO5q73mhk1PuQJKdilYgn8Nki9id7HmmutHb/ZvFbS58lWDedL6r
StYH7IYx9LfeLvP6klL7BMURkpa2UTOaAt9Q87gSndip7CRuzYjbKnwJhhCf
Pzs+zKhII+4IrNfBWVo+f/DwvlfqKr4tA+5wkt+lErZmHfPlTYJzJix74qen
1DgI8kUmJokaSstmdN4GlgAvtsuchVzhlj0fOEock9KBabJO2Ny99mE3m8mK
u5OT0Yd//BA8taZ53JPALrzImepAWYr5EseeCzr03UVKtPR8jKtgtM7VgdYS
FbaZcHiJzewhgQbKFuEHAuJQN2+5rBq6Z+s7ot4tbe3wtr39Cr2ulqLaSner
zIpMl9g2mBmZFVM0Nb7mxuac6G/Bw2WtAYm5ZRMFMxlvlKc1ttKkgpUrD0mW
j6RxJTVAp+GQYs1g6RJHv4ukkiwmM7hVN5O8IM4VDEZhEErZS1YgsO+1lEhl
ceorR93SeCYVesTC6THgrAqSdFT4mqZRS36wbiEhhKt8Z44YE5VkjTpmXMSV
PILkBmpLk+C1u230O2k1lPMuWYEnslHsZcrhYs4D+8TYFP+k4U32BEvPDxor
1F8B8N07Apmj69j5KI/PcnGuAKyzqmr3un5LHRWlLCJXUMS5q1Iyim009xwG
S522coECGKzAGO5k5bCu0J2OkbrD7pFYqvqwSicz6FmFiX+0N8X48OaXBdZa
9R6lx9wnfNXXCEN7XoBQUpN+fu3yLAhvmwSVkiBI/KqiyMqxb5VZVElsPaeF
vfdBs6Ci90C5SssAcrq01ziyoY3/5ap6h66emMZpw+TShhifl55PmDMN2MWN
BEsGGqS9j7L3jcZGEK8fW6eUUM1PVOKOVSGhyc2NB1XVI+Q4FhRUHawwxAZU
vtwUNhOiISP8ee8TzPlHVyqUxFDlkuI+qiySkiUennpTSLqrjqPGZDF06mub
X8gr55jaZ44geYKnKtpNMU+c0Yi5rus5TFuui9SKm8SUEn4a6NohTHtvyEdr
XrYGPsAoOS0RPx1idhvUDeUkBXSKKKsF+omPreVU8wSRkyj5VFCOB3Obox2e
EmNodomYLlQLBdn/uKB6Efomy3hBWRz4g1Wo7G7aCp38c9Z5asqy4ySvyGXW
FvKUS35dF2CZbRraRXqWkVE9G4V5ybxyM1erND33gC+X/G4ONlkoJi8QZcYk
LUlSxgmtRAUySf9SjwD5UJ4Xq7wuK/tHszdj1UqoING6vktNDTQxbjgqTsoj
yRVmd3Qm6t7EMoirq5C7V6ih8W4yLuoFy6jWmd28fPzEb+f4PsydyHxe7LFc
UaXplVbMdq9S2hJM1nNOMu9VZtOYCftT40tNFwx7hasoGW7NYzdzsrpV7YRN
u9fo7sHbTZf8HbnEUeyqe5TEex7j6pPQL4FiYmD1Sor9TfJGpdCLHd5scFun
T8ADMj2dmjNtHPM+ghU3WpO9PUcMUeZRFgvnkouID1LI2D/CtQu7VQo5pgTm
JkVsScD6u7ejQ6tyhKxC89GSL97lQMULOMmaMISns2x8TkguFuEjk3w5t3fk
JOzlS3Zcyg8m+55fztcOyTllHj18+InzGfg+80Yu/TpdO/MPUW/shQCHgjAc
ldtS3txSytHUcWryBnKpHT5nTE1XU5TXBMBci65KZUcJEMW3OBVedhVQCnpZ
y9tmxlmIQr3nUYI89W3xI2fOs4kiEs+Pzd3v3BZwCXOsW4VCasjsS/0YydhM
g5iXuOw9IjCpsD2VxSFR0swmpDSGY2TsvDT5PVCkUJMzBlbWs1h+Hu/OkeLI
vNw7Y7G1CAEFJfWwn61H5RjDZodT51M7nB67BzpGAqdh3Q9hnUy/tbCewN8E
K5J92WUeGEq54RQVfbR4OW0usNwQEsyyhTw3L1Yu0IDymL7eduFpD7kSS16i
Nn1pFEgtrjS+i7sZI+Tcdowi1nUUEI2sQuEEnRzkTuZvKeb48GtuVnMQbKvy
JzQ/8uZS4fBi5VLn2fcprlqZKmkNm7qR6c4kUpNkGmtFPKjXKuN0HptVbPwJ
ZRnxioxpDa8614esGD4NTLM5l1xANFKQ93sWkb1iiYBFDeeeAFIZ9zZnU5si
oi4x262jLdJTHCRmZnDIU/Y3FHMYU2XasyOqGb+yZRNZVTkbO2RlcvLxY+MW
bD1Dky5nvXZvcPg6nLtbVRwreRWFOa8ePbyHkoa8IdAL7EAcW2JRN1fOam5E
oirR170sEgtATv4gSJcoqcLawmBfrS6ZHIziqwfSEzDUNPoENF7fSchivrkg
DYt9JTgN9h3W6/nIaGGx/Al3pp5JdWmu8TmtsquRltmMRSP3qhGaCAwYagw0
L3TZX4HEuyihRLbfFgdSmVcHvRf4Pc0E/9A/TDGiSx4NfDyd0iBTmc/vs3+X
v8BE+w9uc0tPEXgZxwzKM+6MyoE1btwap92sgcULGpX/dMN2WqGpmvpsQDV4
cD/oaMhIGAKetgKUbXcbbapaAmZvgV6L4sf/0J0yIYl94uC/Q0C9C5P8Be+F
Dde5VE8ocYrpxiSJpbOPPOVjGJkNRWC1TpP6fP75Z599OuVL3Pfv+ZSimvVX
+Y8kD0Fst/mPotNdgbaNkUFAhSupEe1ZOeGOl3BuPBZl63L5iyKi77q3FVaF
tZuHTwDYeyu8emY7Lc8cA86cvDX1CXhE9r9gwJNWl5lN5LzuKs3WSk0N69gM
WnKqM96NNf+2MB5AhWF2gmOYvrKRmTSiMHSM3DwICjUet7dT+9VU1DYjNGbZ
4xvj9GNCCojIsN0Awd/9Lju1p7SNpvGWKuagU+ZahwNge1yVEgnXdGFbRcUM
4jxG1qrZ9RfA3jw54u6Rn6AuliaJv9S+bN4V851MSjlgZbkrrKBgb5SYs+WE
Cyf+/cmRqUq4e/o91i15eXTyUg7e8ATxLb/Y01SUn8H8QWR4EixDdAOJQ5P6
ETWWr/jrswqOdDnjVLNF2fwXWj0rsEGwJYhRElD6+y5oQ7/fJ0QjYTQNa7Eo
EDQGhwvyq32Yk/wTrLsiFIXYRf2MX/HatjewcSONVYqArwTDTx96GBIGTb28
aKbLsklg6H4H/DYYrRPDjH7IhpEin3iDNEO4KWxQwPdhg7+PwqYfGRqGcGlr
I3XMb1T3B6sFE892kJGfG48PHeRdXKK9r4Jf+MeDXc6WBQII04ZOL6v1Xreh
jNNpGm1p5oNt5PwGJpZ/9vUAgMRNwvbmn0N4YyqIkXibpn1YUJt2LagDHvT3
WLwHMHedFqXUUvpKOtG49tvEpEH/Gj/tSONfd+J6iT9kkf/KxAK1iAmQJpFt
MkQc2xC/gPOiPbDfjJ7tME8v87NiGcFWoNHPcUxdI6QOtku1yUSRVV20D9cJ
F/lx19ZUUSJE4czHwF72M3IMTK1hG0DDlIPlfdj/tju8NE2dPiF9R5xBYZfr
Ai+6vjI/4En0eWxe1jCfGsN8L2hmP31T74LpkMGsQqdldLx4U8tlHgkSxkqg
vnRyHMlL3NLdABvFmOmd0WT7je/QIOH7fF1ryT6NQVOFH1IvSjDL7cMPq73L
O1/1RE0Ve/ZREv+O8Z1YrVT7rAIjhcL6JPZNq4HkUCGfI6jbiQEZGapNz6QQ
xd5FG5MaLYsC1qUE95A6ppj3gOLXvMY3fM8sFNuwwvvOLMHdOzS+gixo1PbC
xh+FIMDSHGhYr0/4Qbeako6rvHsnpEYKbnmx9gA//eblrwQZpJ0H+dtq7QPV
Sfc52ZBqTU5F85Sg01kxMKbEHuDgCIomvXMxtZV+pnzXQpHNsO9MA1cKiAKQ
7OPOBH06bNgdG+u8TSvA9bKY4k34lAu/0dF4kOE/bJYnXAj+9e4dLnm/xahk
TL4yT42kJ2vOfQ4DV02G8hqTx4usd8SIu9vwsSyzL5XcRb9K+a0tVRMOyD42
gIDhtnLToTOHcTEi9zhOv2nkkLHTV999gyG/MHXaQBO5v5G7UfIL7016Tc2d
o53sfJnbIPidZyevXz092iFIysr0LMuDnqRH9piq+e424cHKwmb9p2ag9UCn
4NyUT9pA0X2xPJDZYFNayYhFF0PSkXpq+Cc5SLRDysoKCDfC4Ap62Fnki6ty
NSWnXD/BBbWbrnXYM5GbXlsxNYuxq2N7hqPhf5KD2V4Uipt1zM/Y5BNWemzm
wwZ7ctrbrV7XjE9jPmrNho37FOajEU+Z/DHMSRzFHAD2D63VBxD0AbVtX+14
Yi0zbVlYPTjutUqoo+Yd69S8q/aqqcsLOXFAxx/NmPJrSsQLrAmJeeM3x8yU
TqjsqeeWBoekcO642sK56492wGnq+kDcjKOC+9a2H7JyLFicAzPuVynUfL+j
39ORJto97Nl3H9KZYvdi5LzI6Y0OpgRoGk6PRD782JnfyW1PcExETzdyWiIv
ZsHtsbNhjEfePaGOPOVxDnuyJThuMx0bfEUFyOX1rxdUG8ZZUCCJX5hB3vQ8
JU3iht/Yl1TXyHveIakkJcFDtFisKjDcl7ZDHq1fVlWjkJKLFHsxGckptVvc
L/a8uwZToppught6F2nDmOyTD/uko+eSQXa5K60eD42ys7aE42JOK7lcNWug
niWpVyd4TSO/+IDketNchP3gBaM6XnBhqSPGVIBNrFVfTiRDMRO8YMJ4/PAE
U0q8rlqOduQBpM6TmLzB/bM1VQOkVRw4vvQv6qlgi+VyGyxqb9O6yu/uZoeb
SIDuFbsJ3EsK7/LHGtIWKwIjt4gNZ1JSKHueAg/HJW1ViyeBYURMLJt7WzSR
csP7uszw69cvJ1Q4bCFVXJjC11IHhOTsnsncNAYnwr0y79AVCSlAciXoKorZ
oLvCO5o5ZFEiyCXCHV1yscy2uZmmwg/VLKqXzObcRPNib1w+2FDJg498iuFQ
cGApKv+Hd5jop13+R6s55upClqF74KROOX+dvhrTg1ggdqRpfcXzXZvLOMc1
X23Xs6nnwgTsRnfdsZp4feMPAwrF6MZnpfV750sPq9jJrtjIVx5vo5qJSBTt
UBwgbl3Qi/dIlzE9mvllcWX7pHogseXd5NReIdehliQeh1oICJ04NYxeGmnK
Z6mldF9TNbBAVd+EWAZKdpzGdHfhCD2CxiDQN+spJ5Fvb/SaK+/1rblxWC6i
TSNtsV5VvtxmK10C3fGBtWPJzOwUzIQEu/lGOLnRLQIqZD4wjB0mt5VukPXr
lx2JRDZmx5Ptxx/YMKzxugIfDZcSby1eYtcIqFTfGJ9UXCBz8BnLdNJuxAVM
4f6chWBdKAcTgjVxgu4kUeXG8V4gpZXIG0vWAughJGb2cknOqUKeQrBLDHJP
KoUg76oEidPL65kiCdcTi6CBHuEevSQ8Qn0c7t5xZ2gXCR3ttiexgDY2lh8e
3b2jc0HaJH9MwsG3/HfveLVwYw8ybMRf9BEMxgcFBozKvvH+wEuLMtGUpVPW
Ju/jtEMSo2NTRVIbViy9bDrhg/IehVxysxit3FPGffVbXLHYHbN62QfdIhVs
YsaFvKBwglDecdJzSnHFSt/NatpRdWOWXaAUBnyeL/GJgyqMwfHM0Sfn8tjd
6IaLSkq0Wu6si2mc0VL6VSewrfXyEHdlTBQ10Zn9dYvG5TvniIv+5pUyL1jx
um3OgkdesLF+K0SwVmhMWLq3WJR8Cq0NBrFZbblSepXmOpWFXaZuRRArClRf
vQRe3hYzXfeWLSGn1S4wz1Iwg/O1d7/XkkMMibYpG3lQT/kA6FW2iHYQIGI0
pWbKJpN+gGsX/u6dXVcmNMew+nP4DU276kBQnJrXoDFhNJEkhhzB/oXtwoUU
qfQcnlmm+ESUFhOTnE4xnt0UNkcUjSAnDkCHSZAnVpc5VeZolwhOaEqBcVm3
IR/cbvdU+SpQ2w52LT339E++iaJo7jXJ/HFoniGYzA3loMUbdQbNgo+NrJ5q
fSs1jtJ5kkNmCbvNji5sFZ84HZh4aiS8iIEd5xNNvNXLDuGVUhesFbGN19zH
P4lKF5EPnkEX/a+Cn287yHenkw1ZtfyJqdeud9rCHeq9lcbslGVK7dXZnhKe
y+KJlkhJSFkzFv/ec4q49ymQeARHXm6nFcwRfhxWFJQvJ/TjxF9wyqNTTLJc
qGx5vjZtixyRWmfy3MgvXN1YcLSDnNu20XYmpZB5vtwU/LaCvHmegzvIRDpR
r8fosL3hAIZd8RNOnIMQ/Yv0tmkqvzGta/u1bSkvwBXLy8EnD/I5PyZxAddG
wjaxg7ZPYI/dWiQIBGM63EN5YNpY9FOtrNGs2/1LtJ2RFmpYKzWiIiJE1JK6
F5VY618ZITfbAZSykDoDSGX9SJlPCrludz1eZ279suvshuMA/AvClZ9MQSfw
6d2IufdC0Es26bHORDvkPfRVKjvTQW6VdJsaO2OE0rxQLxjM/hItnIUMbTAV
FYMADqiim3kIYreeFl9SWjwxnRubZxGTdOQrgwTBkgRc3hQJPjkNVMaCiHi0
NnSQjUXXZWjrAvNm1RvKx8fG1LgCH+Js9+30qG3Obu3hXHu95rksXI+JHl4x
Ri10uYCLWeleemW6+ncvSpXhzh6nQePd5js2k2xmI49ypfW649ypy5EjXV+s
q3wVZtUJiv+26INcbuqqTJ3aJm1pcqfoBGyOQ7VxkWVqeO8qzmwZzLbq3bDJ
VVqozbrzUbh44Ogbrxf3n3+22W1XFv9LqmHWUU/90XpO0nA8v+mHDjh4aqam
qTv88tkOD5/1HZKpHtko/fvsxpmdXXe1lsByRI05OVTZhEBGl/GL8bxz/KEX
yUsCZE4JynbbuQQNHBhWlVcgveoC0deOe+lDV83XzDOoaOBNMtjjwUSDt/2S
GkVGwDeXXDxJ6CeLQ7kM9KNOb27qLnjDeeVzk+ICvluUVEvDH3eUqPgVt1xC
nYQJundi0S6ZkVi6W8oJknW2zcGuGWe4eUScGRdF0kPRMyLHZo0aOVOOAtXR
Gzn1fMJbGW8THyrWDLiOHzA77+6N5mLNWraAlfOv9vpijWrr+YvVWcq2I+lR
pGv4SNg+eg2aURvTiIt+UcGziYuLMKpFCYvgJtoTFVFdfAuBwdJihGSUAeJi
w3oEeAB7N1h5ATxsfZh8wnrEUG7owbaUFVuekx+2u7fZ2r90X3/gpv7QHR2j
X3JfR5nD393WPe/nC9c8MaEcjKVXl6R3d/tXYtYQmHgbXxM8voc/YM84t1ff
nnF7ObJrtEbhDtyxhy0ag1VTeDTsUF9tp+gRLB2cXT1yi2W/RBdM/pratcmj
2esZ1aT7NnEAYGgf688HbuXUiAO7OTLZX3ZEj9rSCd7tObI7+7mZfMiRndzU
9shW4+NRu81xndjqQ8e2ugoePLY1ufTxbW5wo0f4U0eiiLmSD3vHxekfeMg7
LixVmsZ5LUyhBAyp2jdOnpkrHqiQigej22y4gV5EydqCfZlxzZK8T3rUpoiM
S9utJ8HXuAjI1a6KejgocEgl8LTFuZY5Fa1Tl+/KQ2MCjjU/88ASkEAJifGI
uVq3N9lH+hnKVIJ3p5J/4iO+O2aFr6fQ7r3+IrsT37itvGgmE8jcWRZJqq1y
yHOuU2roXtGpWgE2Lbt6/mFuN5iOnGrHC3KffpffAB4v80TGM3k83bg3yyra
m3l4SRA6E7BPhq1OyfUCTLpZW+DChdqZoJrIG87BAsaxq39iVX7kIBGSClcb
TiJSywkmXhtpa2WYNpFN6A0xs67byw5h64bFKIJCeSt7A+smQzug74TPRoYt
Rhv5b+psW2neDXye/omzpxX7Moj8d39lvJ4dIN0b5Nitr9ele22c7hKdlh/f
HZthlpphqAl4zbeZSzZqLolTv7uanZsiWyEHHyXnzdAlhBM9wt7x8DKRlaau
Vugzh3117VVdNRy7uAHEyzmFBAepd2U4U0FGxIl50oMnBWsKbMueyzVAS7cw
Ixh/KPaW102lq/I+YaS567OsEKALine9+yLmI/1dNpqvuv1VZhqvN+Yax5+7
w48bfSDQPNNtx4Sbex3GBJ17HQZCzxOboLOy4XPKaBVCzhHfOZQoN2ZYOtlj
XT0c8bFXpcY+ABveQ/KwzajISd0LtHB9ODltYLOi1NbmAf9S3XTZk6RP5hEk
ekIThoJrrSqdEBVOvhBhU0pvPZ/iRagE22Sv8VJ0UeYXdX4l6/Lzz0CyqWn3
XiIPQa5cm4gR18Xce4VI2NwaKBGw7uxig/EaLNd0zk7O+oJiLsjhAuPjt4ns
d1/6n+z5i9cnB9lHb1DvA9P9ugZdhUwTWONXT46yzz/7w/0s6PQlAmbMDpKo
jU88+mtlO/3gp720sWXY6KsLr6N7fmH2+s9h5/dfebB/i3X8B451/Ovc6XJb
s5wK7Q6HRTrOK84ksNDTDY/zeNfO9d1XvWP+1a6Y0964r/oWe5h+o4m43Su5
OIzt3s0Nwxh+SZeay293g2G3rHtujBn5bxLj8H/u3U2K4n+LwI4+mZGWGLpv
XGIM7VMHISUvPgyClhbjIfx2YdHfLduKi/+xnj78Fp/9ixD6J4nP7lAiqhSq
T8zq+Z98IfOxzQcRXags9Butrg9Cd5HXPnQ19fmZ/I5Bvocg04PDVr14+UdB
OZ2igj8ReyMb5YALGHZUvgfXYWTWB9dhfO6HgTQb8SZwdOov3xY34Uka9oMm
+HvUJiWEu7shfbpjh3LRWR7csfc+jbTtbhu3bpqmxSrGRmqNBclitbmSWPxh
Wk2pgMqiWAwQLduCaNm2RMu2IFo2LGuGiZZ1VjZBNBlN+FknvAn8VUoCC0GV
6EDf38Fl8eM0kqgnkiPcrVc3R7geSuUIp0OlJzV4OO2xqcEjh3o8xem4VXZQ
gmzhkU/shHP9jTda8jdGCzkE3aSnd9Pu9wMS6AJF3f6yxNSoD+8OY4QQvNIR
0VZmiVNlJFKdzOEVLynR0yvzTr3ppi5xdfoOvV4AZmn7Dr84AL+SQTe7/zhy
BWUcxpLLL+gwjGxfcYdtpzp6pg7AqAIOvQRLV74YIFmyCsY2RLNs1h5sRbjO
LebWpA/4PPsVWD37Fbg9+4VsMKaHGmhrdglrfwwwSaQOyPBsBmuCbEnV7SSI
rhUyMLugbsgwWn4NkcFV4pOimF+uSDkeOi8C9A52QfspUD8Y300GlY5bjKc+
dSt2D0HJl+Wbu3d+Qimx5cw/jKmzzFJ5K8bG7L4DhBK8XDLsnoaqrbnOSSgF
EW3GxP/1aTNZRJvx+/VrMw7HD9VmHIQ+bUaTY7Q2Yz+322gzulf2IdpMGsBI
bSYCYEttJkGu/qM5Sa7egzmC7BbazOBUR8/UAfgQbcYn2GhtJiTZWG2ml2ij
tJleCKO0mQiErbWZNIzx2kwExvbaTATIgOAPeqiBtmaXAW1GjzROm4nMZltt
Zoiq20mQHm0m89sOaDNZt0OvNtP9jNNmup/bMdpMtFs2QptJdTSf7bWZ+MzH
MnXnM0abodUoi7O6yN8WdURhyMI2mGja/iPl8ckiHXurJdiResq8decb8V6l
q7vdBpilqrt1N8Po6m6KqHhPszDRcabIa8drFbmE5InZK4AonCaISUslOh7a
OH27I/O3APNTdxR7CkXzJ+vP9rmU9WebvMr9/dI5lsdgSyuhy/J2XK+dFv3+
0YhntN/Z3VO4V2OQqO10298qqKzjD5wsp+M16yndFBnZq9cURy5apCmOWd/q
qYM1XY4pZP9YDSaNYqfw0m3q93H4jyBtUFepO1qaoMkKSh+yztFaSbfmzPJr
Zsc/6Urat1HrVqzaab68zm86M4y657lp1KC9/SAj1krVjuGqRGq/seodvr0G
angKjzJKE536DdGw0zjjMzblqPUUn3LMXgoRGTYs+1Hvxdx12sKAVJMeMhq9
aQ8YiumJ9xmH6V59BuEAX30oa30od33oMm2zVHGDzVugpJEWYjHSMOud9fCO
6hpg3skUNbpsiyxtaOk22YCOGLS97VEZu02ztBEVbWw+HcMpajVFptHhjn4L
KOkFlcMj5QaNnEx0ZA7FkGYf6jVNe0qzsd5Ru3iDHlFv7cZ6QWOdBj2fXqfR
3s7OlFPuusiUEw46D5FRnswe1Hsx/6ADR016hJfSTXvYM5mY+IA3MtFrwAOZ
RVhkjNcx1m+Mp7FniT54mbZZqqSH0C1Qn1fQw2K8JzA96+EdFfX4OWxTXj5v
yIRnL/PH6nVKZJ2h+3wUERwSXrtuY/MZd+BEprHlgaNoHbs0dHAjF4Wd3yOX
g9bOA7NbUrV48cluFfHlAZCoEzqWJRqljkJpr1oSJdIxcVn8DIweex4yTdvN
Ye5mPcR2o3luLMN1uS37ED76JUwkhDHFSn8jS+bzSxEXVKPnPFbwBLPt4eQ6
X10U07OyvcrX2LQvupM925v2t43c4Yx/Uo79bSP/U27kf5LS4v5UKP2IE0lC
lrYEYeFBC6LwTTtMJ5fzPRor85pu1OKfoLxtuLDjXgXJbt/mPZCiQeolEO3D
+LOlvwfUftUKuvEmvz3t+e1pTz/Rss7K/o897fn7LPq8KjirVXdJUF7YH33Z
/A9dKHpIxRjQLAKF4gPiJ/6Z609HG/2WyPF/OJGj3/ivm5Sw682Nqh5ht1+a
y7Drso64uiOD/pIEiJExe4b8pVkTt5XUruc/VL5F06y5Wc0v62olMYCYACX7
uXlX2Eesph18Zb+wx+Ay/1ExsMezrlkY0JIOXdGgTfq639PXWjtQGOm4vhDE
uFiyTG/ZIfvRa9wTS5YpDDpRTgGGySgnf7B0lJPXLhbl1MVGRTlFsYlEOcWx
6UcmGuWUGa0u8trGISM/Ny4hjwfZu9HN/H2YvtHVDc2pGL/RDVqa+fTf6PZ2
St3oxjsN3eimpxxcbfZN2b/YjCPSd6M7BvVezJXCM+ZGtzPp9I1uZNrJG92h
icdvdId6xW90472Gb3R7+/Xc6Mb7jbjRjXccfaObhUsV3uhm3QWK3OjGsRi8
0R0x6+EdpW909Y+ZdrBGMXWNfNdzt02WNJOibW+jVlOqaeYbUYONzWfIU52c
xmhntbSPJOFQNOkk4dA/qyQcVqsbysYRkHF0No4ITUfoCWGXIPWGMh/9eSVf
cHQ/fVPvgnlz906HEmYhEq85RjVNmUJjEh5XmzaW8bgums2ydTmP68qWr6CM
x/zn1KY87rSa9mQ97mqSdWXr43LWr6mrsBHoJWFT1RIwA7tA3Q/q5Yd+8mOI
yufRxgHsqIgyzfpZN5Cy0CmeSiatyem++Xy+udosc+IA+1ghUH1jSCZeVEQH
GfO4IouJ+Loao5kGPXqeXPTP5aarRvdMJPoQY3AWY1fH9ux5ntHtYnvFXmok
Jp8wZ2IzH7ZsktPebvW69k4a81FrNmwFpTAfjXjKNoph7r3gGMJdNw4iFlK4
jI6qTQFImmMfZJcFsxptooUU3tZai/cfb7gF/bex4T7ImEvRaci8CfDczsTr
neS4Oer+Wxt+H2gBBrTawhhMUmusXZgEMNZEzKJ8uZW1GAexleGY9S28gPjg
xR/soAbZjkMGDE/7hxyfY2zQYBYfYI5mPbTcQk6kTNTAVkWmS1urXbMV2qcN
16jpR0dArw0bNToHjNmUocoDpu3aVD/ziRm4YB1tO+NR3Nv59NjEwdHfvfLM
Yiw7ivBjKe2TNovdu3abaz8+83HaUaDvYNKXADFLq6jrqqZiOINGmWsadx9D
B27CRR3X5vyJqmK6PQZpNW1+tWapR2EIWJh3mmP5zvIq3LG6b13kjXKcxRRF
WXdbUKbv9W+n7ozt3818bn+1qcQ9n4LTH4Mk8/743mVqF6RJtd0P2svHbYdI
gbZ5w+NA/aTrIcaDQKMYZ13gMZwV8JijgwP0Gq+okywYsiX+87xctpLYw3k6
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
OK/x+oApMWwzHoAB26s1YG0Ry/K9qaoCYRuylZWZz8rs3cbK2A6QYWXwjz+J
eWnoIdG3eo3l1OEkFRqZU+SYKPGgXsizQJP4EoyZSZN4VisajM/uFpJdrRzT
T9/KYXNaNc30uWwap0kVTJdeOk2kY+m2x7Zl0l7l2zI66aqxszdOuyINhNfb
3vbe/7ZoOyEyvkoMhUg5a2QqVHpqpZnIU2AL3kjVkaYt+UZbs2kjBTgDGzgK
rki/nVJe7NcJK9ESl2uQWaIYdVlTV2MXuRVkq46qiVfNGKEJuBShmqBCl9Im
n8CGvN+Sdq9XgVBRDspQSlajYfUWP6y9Ww3L/cUn18eOtsViLVWm0rmK4pHw
HK66fb6t1tLF2WFDNWvML7uUIgyF5xYDdfMQ2972dIRyM9jfmmqdm7egU9Nc
a17jkwYxfes4RR5QsstK+ZV0RN9fX+sYNJgYYZgXkkW6I6EwI/LaEBviLZ2d
zZ/quzPckvzZ3SbPOkhxkLG3ucQO8ZK6xO4DCHVo6AqAuao3aXGwTsH0Wy6z
UP0db+PkcrRZbKyZBmtTWrA9wRUyPpyZC13Hn1z6167VWW/WESWzwe2hf5uu
0HIt2HGtzo1XAPeC5lxcWrh7lx7xJI5TF77wfBZcM7LtRmLiDhx/CzHpeRtg
D8rFRM9LcjHbXmoUCBNOodn4+5G03eWVNHckcJGSlue4lZkkM2euVsrcznOV
m14llRYb+efT9yq5O40ksvDaKiJ735Mhd4fAvo169Vbqtezq5dpTL516PV5e
9Xp8j+q1W+IpuXO4K9XMangXdeut1E22dEnyA1C3veVVtyf3qG57K3V7aOrm
Cq0unbot8d7sx3tUt8crdXto6lY8gV1CdSs5qFoGdXv69dWtYFxKY7MUrl9F
Zx/Epv7ZNxcUI2ZWIirfdlv/dGWJZctV1OxrK9jO9j1qWG+lYd7Sa9gqcHZH
DVvAQXQhcHG3g+iCbqkUBBS/KJtMvmPpX17BWsDRdUPBWujRdeXZ9fxcWsCx
aw2X7vXYtai6bgFuwHni8modXHma/HNXc7WAA9rGingPB7QrRVw5pMWmy6CI
q6PcgsLdOdo9/yysTvgWOgvy19zqlucXFxjbqkgytu7WlfD+9pfeLMtRdumt
icCVkGrfl10cqYS7fAdK7QuA35CpSn74l7te0ZDqYjocqXZZg7qUa47siK9x
ePvDsyi+nAQjhr8TtyE8P5uN4yQV0HGT8EwgqPrRmfebn8zG4Zk3CGbjLPHP
/ajtHZzGifc8uU7PQsJT9n4P/cj7zxjxtU/iZH2NsW9DIA0v6ApMFAIjRTyU
MB1maUpwcDn4N6jM6SmSTHeK19cI0RP7ZpQq7AdBxQXwZxqejgW4Sd0AZtr3
4qpJDlOJEGbrazlCduV1YxiHBuqrM6Ht/TNMx1HmffAvsDTK8yAAVrW9Iz8J
gHW+P2I2ZScBjONtmLXlJegwYVRWiUEKxGjsoasv2ZQBjiNkFPKBbqykM6oc
IlG4cVh47wYvXuSXdPB5c7A6Gngj9u2PEpzc136SBJO293KcZBfw/3h0zXIA
g5U8+DVDnEHvXZAl4ZDe/TbOvOdBAvOqjVebRryd6Rq3EIvUGwKnuT6qgpGk
a5zHAYHyBDMvmyJWRRTP1teiADEr4YHJdY6v6WsX2VW3hDQ/hSUHMRgn1wq2
cX0NqLYnGgg0Ro0jYSRTENiUgSJjdSOJBxMFAn3N5zfD2pYjG07HWEICbzqN
g+FZPjJ/OMv8iaicaozwPAjElVZc6ULUkiAaISw2ltnhW78K8dmA/qmd3nCc
+d4vWdzWJqvtDcZ+jAXivF9A39fX3iE3Iu/5H6CUkyxiaT6Kz70PwWw41uY2
S4OTbELFrghfE0aLSHUIk83X/L3f6SYZASpwk1AA7yNsdCOS3/jxOdsbUKa2
928/mgSh/OsI7x4RVe18bERuYQw51SgIiPoZjZRwrq+pMUgkEwPj+IMQHpxZ
llms6iSBEC4R4hXkizDrBUxBr/OvOBl1LnAhQeAnxK3vjuJZV92Uyx/3U/vp
M7Ano/gygtb/B7fi2nB4uwIA

-->

</rfc>

