<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.17 (Ruby 2.7.0) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc comments="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-teas-yang-path-computation-19" category="std" consensus="true" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="Yang for Path Computation">A YANG Data Model for requesting path computation</title>

    <author initials="I." surname="Busi" fullname="Italo Busi" role="editor">
      <organization>Huawei Technologies</organization>
      <address>
        <email>italo.busi@huawei.com</email>
      </address>
    </author>
    <author initials="S." surname="Belotti" fullname="Sergio Belotti" role="editor">
      <organization>Nokia</organization>
      <address>
        <email>sergio.belotti@nokia.com</email>
      </address>
    </author>
    <author initials="O." surname="Gonzalez de Dios" fullname="Oscar Gonzalez de Dios">
      <organization>Telefonica</organization>
      <address>
        <email>oscar.gonzalezdedios@telefonica.com</email>
      </address>
    </author>
    <author initials="A." surname="Sharma" fullname="Anurag Sharma">
      <organization>Google</organization>
      <address>
        <email>ansha@google.com</email>
      </address>
    </author>
    <author initials="Y." surname="Shi" fullname="Yan Shi">
      <organization>China Unicom</organization>
      <address>
        <email>shiyan49@chinaunicom.cn</email>
      </address>
    </author>
    <author initials="D." surname="Ceccarelli" fullname="Daniele Ceccarelli">
      <organization>Ericsson</organization>
      <address>
        <email>daniele.ceccarelli@ericsson.com</email>
      </address>
    </author>

    <date year="2022" month="October" day="21"/>

    
    <workgroup>TEAS Working Group</workgroup>
    

    <abstract>


<t>There are scenarios, typically in a hierarchical Software-Defined
   Networking (SDN) context, where the topology information provided by
   a Traffic Engineering (TE) network provider may be insufficient for
   its client to perform multi-domain path computation. In these cases the
   client would need to request the TE network provider to compute some
   intra-domain paths to be used by the client to choose the optimal multi-domain paths.</t>

<t>This document provides a mechanism to request path computation by augmenting the Remote Procedure Calls (RPCs) defined in RFC YYYY.</t>

<t>[RFC EDITOR NOTE: Please replace RFC YYYY with the RFC number of
   draft-ietf-teas-yang-te once it has been published.</t>

<t>Moreover, this document describes some use cases where the path
   computation request, via YANG-based protocols (e.g., NETCONF or
   RESTCONF), can be needed.</t>



    </abstract>



  </front>

  <middle>


<section anchor="intro"><name>Introduction</name>

<t anchor="pc-model">There are scenarios, typically in a hierarchical Software-Defined
   Networking (SDN) context, where the topology information provided by
   a Traffic Engineering (TE) network provider may be insufficient for
   its client to perform multi-domain path computation. In these cases the
   client would need to request the TE network provider to compute some
   intra-domain paths that could be used together with its topology information
   to compute the multi-domain path.</t>

<t>These types of scenarios can be applied to different interfaces in
   different reference architectures:</t>

<t><list style="symbols">
  <t>Application-Based Network Operations (ABNO) control interface
<xref target="RFC7491"/>, in which an Application Service Coordinator can request the
ABNO controller to take in charge path calculation (see Figure 1
in <xref target="RFC7491"/>).</t>
  <t>Abstraction and Control of TE Networks (ACTN) <xref target="RFC8453"/>, where a
controller hierarchy is defined.
In the ACTN context, path computation is needed on the interface
between Customer Network Controller (CNC)  and Multi-Domain
Service Coordinator (MDSC), called CNC-MDSC Interface (CMI),
and on the interface between MSDC and Provisioning Network
Controller (PNC), called MDSC-PNC Interface  (MPI). 
<xref target="RFC8454"/> describes an information model for the Path
Computation request.  <vspace blankLines='1'/>
Multiple protocol solutions can be used for communication between
different controller hierarchical levels. This document assumes that
the controllers are communicating using YANG-based protocols (e.g.,
NETCONF <xref target="RFC6241"/> or RESTCONF <xref target="RFC8040"/>).  <vspace blankLines='1'/>
Path Computation Elements (PCEs), controllers and orchestrators
perform their operations based on Traffic Engineering Databases
(TED). Such TEDs can be described, in a technology agnostic way, with
the YANG data model for TE Topologies <xref target="RFC8795"/>. Furthermore, the
technology specific details of the TED are modelled in the technology
specific topology models, e.g., the <xref target="I-D.ietf-ccamp-otn-topo-yang"/> for Optical Transport
Network (OTN) Optical Data Unit (ODU) technologies, which augment the
common TE topology model in <xref target="RFC8795"/>.  <vspace blankLines='1'/>
The availability of such topology models allows the provisioning of
the TED using YANG-based protocols (e.g., NETCONF or RESTCONF).
Furthermore, it enables a PCE/controller performing the necessary
abstractions or modifications and offering this customized topology
to another PCE/controller or high level orchestrator.  <vspace blankLines='1'/>
The tunnels that can be provided over the networks described with the
topology models can be also set-up, deleted and modified via YANG-
based protocols (e.g., NETCONF or RESTCONF) using the TE tunnel YANG
data model <xref target="I-D.ietf-teas-yang-te"/>.  <vspace blankLines='1'/>
This document defines a YANG data model <xref target="RFC7950"/> that augments the RPC defined in <xref target="I-D.ietf-teas-yang-te"/>. The use of this RPC is complimentary to the configuration of a TE tunnel path in "compute-only" mode, as described in <xref target="I-D.ietf-teas-yang-te"/>.  <vspace blankLines='1'/>
The YANG data model definition does not make any assumption about
whether that the client or the server implement a "PCE"
functionality, as defined in <xref target="RFC4655"/>, and the Path Computation
Element Communication Protocol (PCEP) protocol, as defined in
<xref target="RFC5440"/>.  <vspace blankLines='1'/>
Moreover, this document describes some use cases where a path
computation request, via YANG-based protocols (e.g., NETCONF or
RESTCONF), can be needed.  <vspace blankLines='1'/>
The YANG data model defined in this document conforms to the Network
Management Datastore Architecture <xref target="RFC8342"/>.</t>
</list></t>

<section anchor="terminology"><name>Terminology</name>

<t>TED:</t>

<ul empty="true"><li>
  <t>The traffic engineering database is a collection of all TE
   information about all TE nodes and TE links in a given network.</t>
</li></ul>

<t>PCE:</t>

<ul empty="true"><li>
  <t>A Path Computation Element (PCE) is an entity that is capable of
   computing a network path or route based on a network graph, and of
   applying computational constraints during the computation.  The PCE
   entity is an application that can be located within a network node or
   component, on an out-of-network server, etc.  For example, a PCE
   would be able to compute the path of a TE Label Switched Path (LSP)
   by operating on the TED and considering bandwidth and other
   constraints applicable to the TE LSP service request. <xref target="RFC4655"/>.</t>
</li></ul>

<t>Domain:</t>

<ul empty="true"><li>
  <t>TE information is the data relating to nodes and TE links
   that is used in the process of selecting a TE path.  TE information
   is usually only available within a network.  We call such a zone of
   visibility of TE information a domain.  An example of a domain may be
   an IGP area or an Autonomous System. <xref target="RFC7926"/></t>
</li></ul>

<t>The terminology for describing YANG data models is found in
   <xref target="RFC7950"/>.</t>

</section>
<section anchor="tree-diagram"><name>Tree Diagram</name>

<t>Tree diagrams used in this document follow the notation defined in
   <xref target="RFC8340"/>.</t>

</section>
<section anchor="prefixes-in-data-node-names"><name>Prefixes in Data Node Names</name>

<t>In this document, names of data nodes and other data model objects
   are prefixed using the standard prefix associated with the
   corresponding YANG imported modules, as shown in <xref target="tab-prefix"/>.</t>

<texttable title="Prefixes and corresponding YANG modules" anchor="tab-prefix">
      <ttcol align='left'>Prefix</ttcol>
      <ttcol align='left'>YANG module</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>te-types</c>
      <c>ietf-te-types</c>
      <c>[RFCZZZZ]</c>
      <c>te</c>
      <c>ietf-te</c>
      <c>[RFCYYYY]</c>
      <c>te-pc</c>
      <c>ietf-te-path-computation</c>
      <c>RFCXXXX</c>
</texttable>

<t>RFC Editor Note:
Please replace XXXX with the RFC number assigned to this document.
Please replace YYYY with the RFC number of <xref target="I-D.ietf-teas-yang-te"/> once it has been published.
Please replace ZZZZ with the RFC number of <xref target="I-D.ietf-teas-rfc8776-update"/> once it has been published.
Please remove this note.</t>

</section>
</section>
<section anchor="use-cases"><name>Use Cases</name>

<t>This section presents some use cases, where a client needs to request
   underlying SDN controllers for path computation.</t>

<t>The use of the YANG data model defined in this document is not
   restricted to these use cases but can be used in any other use case
   when deemed useful.</t>

<t>The presented uses cases have been grouped, depending on the
   different underlying topologies: Packet/Optical Integration (<xref target="poi-uc"/>);
   multi-domain Traffic Engineered (TE) Networks (<xref target="md-uc"/>); and Data Center
   Interconnections (<xref target="dci-uc"/>). Use cases in <xref target="brpc-uc"/> and <xref target="hpce-uc"/>
   respectively present how to
   apply this YANG data model for standard multi-domain PCE i.e.
   Backward Recursive Path Computation <xref target="RFC5441"/> and Hierarchical PCE
   <xref target="RFC6805"/>.</t>

<section anchor="poi-uc"><name>Packet/Optical Integration</name>

<t>In this use case, an optical domain is used to provide connectivity
   to some nodes of a packet domain (see <xref target="fig-poi-uc"/>).</t>

<figure title="Packet/Optical Integration use case" anchor="fig-poi-uc"><artwork type="ascii-art" name="poi-use-case.txt"><![CDATA[
                                +----------------+
                                |                |
                                | Packet/Optical |
                                |  Coordinator   |
                                |                |
                                +---+------+-----+
                                    |      |
                       +------------+      |
                       |                   +-----------+
                +------V-----+                         |
                |            |                  +------V-----+
                | Packet     |                  |            |
                | Domain     |                  | Optical    |
                | Controller |                  | Domain     |
                |            |                  | Controller |
                +------+-----+                  +-------+----+
                       |                                |
              .........V.........................       |
              :          packet domain          :       |
          +----+                               +----+   |
          | R1 |= = = = = = = = = = = = = = = =| R2 |   |
          +-+--+                               +--+-+   |
            | :                                 : |     |
            | :................................ : |     |
            |                                     |     |
            |               +-----+               |     |
            |    ...........| Opt |...........    |     |
            |    :          |  C  |          :    |     |
            |    :         /+--+--+\         :    |     |
            |    :        /    |    \        :    |     |
            |    :       /     |     \       :    |     |
            |   +-----+ /   +--+--+   \ +-----+   |     |
            |   | Opt |/    | Opt |    \| Opt |   |     |
            +---|  A  |     |  D  |     |  B  |---+     |
                +-----+\    +--+--+    /+-----+         |
                 :      \      |      /      :          |
                 :       \     |     /       :          |
                 :        \ +--+--+  / optical<---------+
                 :         \| Opt |/  domain :
                 :..........|  E  |..........:
                            +-----+
]]></artwork></figure>

<t><xref target="fig-poi-uc"/> as well as <xref target="fig-poi-abstraction"/> describe two different
   examples of packet/optical topologies and only show a partial view of the
   packet network connectivity, before additional packet connectivity is
   provided by the optical network.</t>

<t>It is assumed that the Optical Domain Controller provides to the
   Packet/Optical Coordinator an abstracted view of the optical network.
   A possible abstraction could be to represent the whole optical
   network as one "virtual node" with "virtual ports" connected to the
   access links, as shown in <xref target="fig-poi-abstraction"/>.</t>

<t>It is also assumed that Packet Domain Controller can provide the
   Packet/Optical Coordinator the information it needs to set up
   connectivity between packet nodes through the optical network (e.g.,
   the access links).</t>

<t>The path computation request helps the Packet/Optical Coordinator to
   know the real connections that can be provided by the optical
   network.</t>

<figure title="Packet and Optical Topology Abstractions" anchor="fig-poi-abstraction"><artwork type="ascii-art" name="poi-topology-abstraction.txt"><![CDATA[
                       ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,.
                      ,  Packet/Optical Coordinator view          ,
                     ,                              +----+       , .
                    ,                               |    |      ,
                   ,                                | R2 |     ,   .
                  ,  +----+  +------------ +       /+----+    ,
                 ,   |    |  |             |/-----/ / /      ,     .
                ,    | R1 |--O VP1     VP4 O       / /      ,
               ,     |    |\ |             | /----/ /      ,       .
              ,      +----+ \|             |/      /      ,
             ,        /      O VP2     VP5 O      /      ,         .
            ,        /       |             |  +----+    ,
           ,        /        |             |  |    |   ,           .
          ,        /         O VP3     VP6 O--| R4 |  ,
         ,     +----+ /-----/|_____________|  +----+ ,             .
        ,      |    |/       +------------ +        ,
       ,       | R3 |                              ,               .
      ,        +----+                             ,,,,,,,,,,,,,,,,,
     ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,                ,.
     . Packet Domain Controller view                +----+       ,
       only packet nodes and packet links           |    |      ,  .
     . with access links to the optical network     | R2 |     ,
                  ,  +----+                        /+----+    ,    .
     .           ,   |    |                 /-----/ / /      ,
                ,    | R1 |---                     / /      ,      .
     .         ,     +----+\                 /----/ /      ,
              ,        /    \               /      /      ,        .
     .       ,        /                           /      ,
            ,        /                        +----+    ,          .
     .     ,        /                         |    |   ,
          ,        /                       ---| R4 |  ,            .
     .   ,     +----+ /-----/                 +----+ ,
        ,      |    |/                              ,              .
     . ,       | R3 |                              ,
      ,        +----+                             ,,,,,,,,,,,,,,,,,.
     .,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,                ,
       Optical Domain Controller view                            , .
     . only optical nodes,        +--+                          ,
       optical links and         /|OF|                         ,   .
     . access links from the  +--++--+             /          ,
       packet network         |OA|    \     /-----/ /        ,     .
     .          ,          ---+--+--\  +--+/       /        ,
               ,           \   |  \  \-|OE|-------/        ,       .
     .        ,             \  |   \ /-+--+               ,
             ,               \+--+  X    |               ,         .
     .      ,                 |OB|-/ \   |              ,
           ,                  +--+-\  \+--+            ,           .
     .    ,                  /   \  \--|OD|---        ,
         ,            /-----/     +--+ +--+          ,             .
     .  ,            /            |OC|/             ,
       ,                          +--+             ,               .
     .,                                           ,,,,,,,,,,,,,,,,,,
      ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,                ,
     . Actual Physical View                         +----+       ,
                    ,             +--+              |    |      ,
     .             ,             /|OF|              | R2 |     ,
                  ,  +----+   +--++--+             /+----+    ,
     .           ,   |    |   |OA|    \     /-----/ / /      ,
                ,    | R1 |---+--+--\  +--+/       / /      ,
     .         ,     +----+\   |  \  \-|OE|-------/ /      ,
              ,        /    \  |   \ /-+--+        /      ,
     .       ,        /      \+--+  X    |        /      ,
            ,        /        |OB|-/ \   |    +----+    ,
     .     ,        /         +--+-\  \+--+   |    |   ,
          ,        /         /   \  \--|OD|---| R4 |  ,
     .   ,     +----+ /-----/     +--+ +--+   +----+ ,
        ,      |    |/            |OC|/             ,
     . ,       | R3 |             +--+             ,
      ,        +----+                             ,
     .,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
]]></artwork></figure>

<t>In this use case, the Packet/Optical Coordinator needs to set up an
   optimal underlying path for an IP link between R1 and R2.</t>

<t>As depicted in <xref target="fig-poi-abstraction"/>, the Packet/Optical Coordinator has only an
   "abstracted view" of the physical network, and it does not know the
   feasibility or the cost of the possible optical paths (e.g., VP1-VP4
   and VP2-VP5), which depend on the current status of the physical
   resources within the optical network and on vendor-specific optical
   attributes.</t>

<t>The Packet/Optical Coordinator can request the underlying Optical
   Domain Controller to compute a set of potential optimal paths, taking
   into account optical constraints. Then, based on its own constraints,
   policy and knowledge (e.g. cost of the access links), it can choose
   which one of these potential paths to use to set up the optimal end-
   to-end path crossing optical network.</t>

<figure title="Packet/Optical Integration path computation example" anchor="fig-poi-example"><artwork type="ascii-art" name="poi-example.txt"><![CDATA[
                    ............................
                    :                          :
                    O VP1                  VP4 O
           cost=10 /:\                        /:\ cost=10
                  / : \----------------------/ : \
          +----+ /  :         cost=50          :  \ +----+
          |    |/   :                          :   \|    |
          | R1 |    :                          :    | R2 |
          |    |\   :                          :   /|    |
          +----+ \  :  /--------------------\  :  / +----+
                  \ : /       cost=55        \ : /
            cost=5 \:/                        \:/ cost=5
                    O VP2                  VP5 O
                    :                          :
                    :..........................:
]]></artwork></figure>

<t>For example, in <xref target="fig-poi-example"/>, the Packet/Optical Coordinator can request
   the Optical Domain Controller to compute the paths between VP1-VP4
   and VP2-VP5 and then decide to set up the optimal end-to-end path
   using the VP2-VP5 optical path even if this is not the optimal path
   from the optical domain perspective.</t>

<t>Considering the dynamicity of the connectivity constraints of an
   optical domain, it is possible that a path computed by the Optical
   Domain Controller when requested by the Packet/Optical Coordinator is
   no longer valid/available when the Packet/Optical Coordinator
   requests it to be set up. This is further discussed in <xref target="rpc-motivation"/>.</t>

</section>
<section anchor="md-uc"><name>Multi-domain TE networks</name>

<t>In this use case there are two TE domains which are interconnected
   together by multiple inter-domains links.</t>

<t>A possible example could be a multi-domain optical network.</t>

<figure title="Multi-domain multi-link interconnection" anchor="md-ml-connection"><artwork type="ascii-art" name="multi-domain-use-case.txt"><![CDATA[
                            +--------------+
                            | Multi-Domain |
                            | Controller   |
                            +---+------+---+
                                |      |
                   +------------+      |
                   |                   +-----------+
            +------V-----+                         |
            |            |                         |
            | TE Domain  |                  +------V-----+
            | Controller |                  |            |
            |      1     |                  | TE Domain  |
            +------+-----+                  | Controller |
                   |                        |      2     |
                   |                        +------+-----+
          .........V..........                     |
          :                  :                     |
         +-----+             :                     |
         |     |             :            .........V..........
         |  X  |             :            :                  :
         |     |          +-----+      +-----+                :
         +-----+          |     |      |     |               :
          :               |  C  |------|  E  |               :
      +-----+    +-----+ /|     |      |     |\ +-----+    +-----+
      |     |    |     |/ +-----+      +-----+ \|     |    |     |
      |  A  |----|  B  |     :            :     |  G  |----|  H  |
      |     |    |     |\    :            :    /|     |    |     |
      +-----+    +-----+ \+-----+      +-----+/ +-----+    +-----+
          :               |     |      |     |               :
          :               |  D  |------|  F  |               :
          :               |     |      |     |          +-----+
          :               +-----+      +-----+          |     |
          :                  :            :             |  Y  |
          :                  :            :             |     |
          :   TE domain 1    :            : TE domain 2 +-----+
          :..................:            :.................:
]]></artwork></figure>

<t>In order to set up an end-to-end multi-domain TE path (e.g., between
   nodes A and H), the Multi-Domain Controller needs to know the
   feasibility or the cost of the possible TE paths within the two TE
   domains, which depend on the current status of the physical resources
   within each TE domain. This is more challenging in case of optical
   networks because the optimal paths depend also on vendor-specific
   optical attributes (which may be different in the two domains if they
   are provided by different vendors).</t>

<t>In order to set up a multi-domain TE path (e.g., between nodes A and
   H), the Multi-Domain Controller can request the TE Domain Controllers
   to compute a set of intra-domain optimal paths and take decisions
   based on the information received. For example:</t>

<t><list style="symbols">
  <t>The Multi-Domain Controller asks TE Domain Controllers to provide
set of paths between A-C, A-D, E-H and F-H</t>
  <t>TE Domain Controllers return a set of feasible paths with the
associated costs: the path A-C is not part of this set (in optical
networks, it is typical to have some paths not being feasible due
to optical constraints that are known only by the Optical Domain
Controller)</t>
  <t>The Multi-Domain Controller will select the path A-D-F-H since it
is the only feasible multi-domain path and then request the TE
Domain Controllers to set up the A-D and F-H intra-domain paths</t>
  <t>If there are multiple feasible paths, the Multi-Domain Controller
can select the optimal path knowing the cost of the intra-domain
paths (provided by the TE domain controllers) and the cost of the
inter-domain links (known by the Multi-Domain Controller)  <vspace blankLines='1'/>
This approach may have some scalability issues when the number of TE
domains is quite big (e.g. 20).  <vspace blankLines='1'/>
In this case, it would be worthwhile using the abstract TE topology
information provided by the TE Domain Controllers to limit the number
of potential optimal end-to-end paths and then request path
computation from fewer TE Domain Controllers in order to decide what
the optimal path within this limited set is.  <vspace blankLines='1'/>
For more details, see <xref target="topo-pc-complement"/>.</t>
</list></t>

</section>
<section anchor="dci-uc"><name>Data Center Interconnections</name>

<t>In these use case, there is a TE domain which is used to provide
   connectivity between Data Centers which are connected with the TE
   domain using access links.</t>

<figure title="Data Center Interconnection use case" anchor="fig-dci-uc"><artwork type="ascii-art" name="dci-use-case.txt"><![CDATA[
                        +--------------+
                        | Cloud Network|
                        | Orchestrator |
                        +--------------+
                          |  |  |  |
            +-------------+  |  |  +------------------------+
            |                |  +------------------+        |
            |       +--------V---+                 |        |
            |       |            |                 |        |
            |       | TE Network |                 |        |
     +------V-----+ | Controller |          +------V-----+  |
     | DC         | +------------+          | DC         |  |
     | Controller |     |                   | Controller |  |
     +------------+     |   +-----+         +------------+  |
          |         ....V...|     |........         |       |
          |         :       |  P  |       :         |       |
     .....V.....    :      /+-----+\      :    .....V.....  |
     :         :  +-----+ /    |    \ +-----+  :         :  |
     :  DC1 || :  |     |/     |     \|     |  :  DC2 || :  |
     :    ||||----| PE1 |      |      | PE2 |----   |||| :  |
     : _|||||| :  |     |\     |     /|     |  : _|||||| :  |
     :         :  +-----+ \ +-----+ / +-----+  :         :  |
     :.........:    :      \|     |/      :    :.........:  |
                    :.......| PE3 |.......:                 |
                            |     |                         |
                            +-----+               +---------V--+
                          .....|.....             | DC         |
                          :         :             | Controller |
                          :  DC3 || :             +------------+
                          :    |||| :                  |
                          : _|||||| <------------------+
                          :         :
                          :.........:
]]></artwork></figure>

<t>In this use case, there is the need to transfer data from Data Center
   1 (DC1) to either DC2 or DC3 (e.g. workload migration).</t>

<t>The optimal decision depends both on the cost of the TE path (DC1-DC2
   or DC1-DC3) and of the Data Center resources within DC2 or DC3.</t>

<t>The Cloud Network Orchestrator needs to make a decision for optimal
   connection based on TE network constraints and Data Center resources.</t>

<t>It may not be able to make this decision because it has only an
   abstract view of the TE network (as in <xref target="poi-uc"/>).</t>

<t>The Cloud Network Orchestrator can request to the TE Network
   Controller to compute the cost of the possible TE paths (e.g., DC1-
   DC2 and DC1-DC3) and to the DC Controller to provide the information
   it needs about the required Data Center resources within DC2 and DC3
   and then it can take the decision about the optimal solution based on
   this information and its policy.</t>

</section>
<section anchor="brpc-uc"><name>Backward Recursive Path Computation scenario</name>

<t><xref target="RFC5441"/> has defined the Virtual Source Path Tree (VSPT) flag within the RP (Request Parameters) object in order to compute inter-domain paths following a
   "Backward Recursive Path Computation" (BRPC) method. The main
   principle is to forward the PCReq message up to the destination
   domain. Then, each PCE involved in the computation will compute its
   part of the path and send it back to the requester through PCE
   Response message. The resulting computation is spread from
   destination PCE to source PCE. Each PCE is in charge of merging the
   path it received with the one it calculated. At the end, the source
   PCE merges its local part of the path with the received one to
   achieve the end-to-end path.</t>

<t><xref target="fig-brpc-example"/> below show a typical BRPC scenario where 3 PCEs cooperate to
   compute inter-domain paths.</t>

<figure title="BRPC Scenario" anchor="fig-brpc-example"><artwork type="ascii-art" name="brpc-scenario.txt"><![CDATA[
                   +----------------+          +----------------+
                   |  Domain (B)    |          |  Domain (C)    |
                   |                |          |                |
                   |        /-------|---PCEP---|--------\       |
                   |       /        |          |         \      |
                   |   (PCE)        |          |   -    (PCE)   |
                   |    /           <---------->  |D|           |
                   |   /            |  Inter   |   -            |
                   +---|----^-------+  Domain  +----------------+
                       |    |          Link
                     PCEP   |
                       |    | Inter-domain Link
                       |    |
                   +---|----v-------+
                   |   |            |
                   |   | Domain (A) |
                   |   \            |
                   |  (PCE)    -    |
                   |          |S|   |
                   |           -    |
                   +----------------+
]]></artwork></figure>

<t>In this use case, a client can use the YANG data model defined in
   this document to request path computation from the PCE that controls
   the source of the tunnel. For example, a client can request to the
   PCE of domain A to compute a path from a source S, within domain A,
   to a destination D, within domain C. Then PCE of domain A will use
   PCEP protocol, as per <xref target="RFC5441"/>, to compute the path from S to D and
   in turn gives the final answer to the requester.</t>

</section>
<section anchor="hpce-uc"><name>Hierarchical PCE scenario</name>

<t><xref target="RFC6805"/> has defined an architecture and extensions to the PCE
   standard to compute inter-domain path following a hierarchical
   method. Two new roles have been defined: parent PCE and child PCE.
   The parent PCE is in charge to coordinate the end-to-end path
   computation. For that purpose it sends to each child PCE involved in
   the multi-domain path computation a PCE Request message to obtain the
   local part of the path. Once received all answer through PCE Response
   message, the parent PCE will merge the different local parts of the
   path to achieve the end-to-end path.</t>

<t><xref target="fig-hpce-example"/> below shows a typical hierarchical scenario where a parent
   PCE request end-to-end path to the different child PCE. Note that a
   PCE could take independently the role of child or parent PCE
   depending of which PCE will request the path.</t>

<figure title="Hierarchical domain topology from RFC6805" anchor="fig-hpce-example"><artwork type="ascii-art" name="hierarchical-domain-topology.txt"><![CDATA[
    -----------------------------------------------------------------
    |   Domain 5                                                      |
    |                              -----                              |
    |                             |PCE 5|                             |
    |                              -----                              |
    |                                                                 |
    |    ----------------     ----------------     ----------------   |
    |   | Domain 1       |   | Domain 2       |   | Domain 3       |  |
    |   |                |   |                |   |                |  |
    |   |        -----   |   |        -----   |   |        -----   |  |
    |   |       |PCE 1|  |   |       |PCE 2|  |   |       |PCE 3|  |  |
    |   |        -----   |   |        -----   |   |        -----   |  |
    |   |                |   |                |   |                |  |
    |   |            ----|   |----        ----|   |----            |  |
    |   |           |BN11+---+BN21|      |BN23+---+BN31|           |  |
    |   |   -        ----|   |----        ----|   |----        -   |  |
    |   |  |S|           |   |                |   |           |D|  |  |
    |   |   -        ----|   |----        ----|   |----        -   |  |
    |   |           |BN12+---+BN22|      |BN24+---+BN32|           |  |
    |   |            ----|   |----        ----|   |----            |  |
    |   |                |   |                |   |                |  |
    |   |         ----   |   |                |   |   ----         |  |
    |   |        |BN13|  |   |                |   |  |BN33|        |  |
    |    -----------+----     ----------------     ----+-----------   |
    |                \                                /               |
    |                 \       ----------------       /                |
    |                  \     |                |     /                 |
    |                   \    |----        ----|    /                  |
    |                    ----+BN41|      |BN42+----                   |
    |                        |----        ----|                       |
    |                        |                |                       |
    |                        |        -----   |                       |
    |                        |       |PCE 4|  |                       |
    |                        |        -----   |                       |
    |                        |                |                       |
    |                        | Domain 4       |                       |
    |                         ----------------                        |
    |                                                                 |
     -----------------------------------------------------------------
]]></artwork></figure>

<t>In this use case, a client can use the YANG data model defined in
   this document to request to the parent PCE a path from a source S to
   a destination D. The parent PCE will in turn contact the child PCEs
   through PCEP protocol to compute the end-to-end path and then return
   the computed path to the client, using the YANG data model defined in
   this document. For example the YANG data model can be used to request
   to PCE5 acting as parent PCE to compute a path from source S, within
   domain 1, to destination D, within domain 3. PCE5 will contact child
   PCEs of domain 1, 2 and 3 to obtain local part of the end-to-end path
   through the PCEP protocol. Once received the PCRep message, it
   merges the answers to compute the end-to-end path and send it back to
   the client.</t>

</section>
</section>
<section anchor="motivations"><name>Motivations</name>

<t>This section provides the motivation for the YANG data model defined
   in this document.</t>

<t><xref target="yang-motivation"/> describes the motivation for a YANG data model to request
   path computation.</t>

<t><xref target="topo-interaction"/> describes the motivation for a YANG data model which
   complements the TE topology YANG data model defined in <xref target="RFC8795"/>.</t>

<t><xref target="rpc-motivation"/> describes the motivation for a YANG RPC which complements
   the TE tunnel YANG data model defined in <xref target="I-D.ietf-teas-yang-te"/>.</t>

<section anchor="yang-motivation"><name>Motivation for a YANG Model</name>

<section anchor="benefits-of-common-data-models"><name>Benefits of common data models</name>

<t>The YANG data model for requesting path computation is closely
   aligned with the YANG data models that provide (abstract) TE topology
   information, i.e., <xref target="RFC8795"/> as well as that are used to configure
   and manage TE tunnels, i.e., <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>There are many benefits in aligning the data model used for path
   computation requests with the YANG data models used for TE topology
   information and for TE tunnels configuration and management:</t>

<t><list style="symbols">
  <t>There is no need for an error-prone mapping or correlation of
information.</t>
  <t>It is possible to use the same endpoint identifiers in path
computation requests and in the topology modeling.</t>
  <t>The attributes used for path computation constraints are the same
as those used when setting up a TE tunnel.</t>
</list></t>

</section>
<section anchor="benefits-of-a-single-interface"><name>Benefits of a single interface</name>

<t>The system integration effort is typically lower if a single,
   consistent interface is used by controllers, i.e., one data modeling
   language (i.e., YANG) and a common protocol (e.g., NETCONF or
   RESTCONF).</t>

<t>Practical benefits of using a single, consistent interface include:</t>

<t><list style="numbers">
  <t>Simple authentication and authorization: The interface between
different components has to be secured. If different protocols
have different security mechanisms, ensuring a common access
control model may result in overhead. For instance, there may be a
need to deal with different security mechanisms, e.g., different
credentials or keys. This can result in increased integration
effort.</t>
  <t>Consistency: Keeping data consistent over multiple different
interfaces or protocols is not trivial. For instance, the sequence
of actions can matter in certain use cases, or transaction
semantics could be desired. While ensuring consistency within one
protocol can already be challenging, it is typically cumbersome to
achieve that across different protocols.</t>
  <t>Testing: System integration requires comprehensive testing,
including corner cases. The more different technologies are
involved, the more difficult it is to run comprehensive test cases
and ensure proper integration.</t>
  <t>Middle-box friendliness: Provider and consumer of path computation
requests may be located in different networks, and middle-boxes
such as firewalls, NATs, or load balancers may be deployed. In
such environments it is simpler to deploy a single protocol. Also,
it may be easier to debug connectivity problems.</t>
  <t>Tooling reuse: Implementers may want to implement path computation
requests with tools and libraries that already exist in
controllers and/or orchestrators, e.g., leveraging the rapidly
growing eco-system for YANG tooling.</t>
</list></t>

</section>
<section anchor="extensibility"><name>Extensibility</name>

<t>Path computation is only a subset of the typical functionality of a
   controller. In many use cases, issuing path computation requests
   comes along with the need to access other functionality on the same
   system. In addition to obtaining TE topology, for instance also
   configuration of services (set-up/modification/deletion) may be
   required, as well as:</t>

<t><list style="numbers">
  <t>Receiving notifications for topology changes as well as
integration with fault management</t>
  <t>Performance management such as retrieving monitoring and telemetry
data</t>
  <t>Service assurance, e.g., by triggering OAM functionality</t>
  <t>Other fulfilment and provisioning actions beyond tunnels and
services, such as changing QoS configurations  <vspace blankLines='1'/>
YANG is a very extensible and flexible data modeling language that
can be used for all these use cases.</t>
</list></t>

</section>
</section>
<section anchor="topo-interaction"><name>Interactions with TE topology</name>

<t>The use cases described in <xref target="use-cases"/> have been described assuming
   that the topology view exported by each underlying controller to its
   client is aggregated using the "virtual node model", defined in
   <xref target="RFC7926"/>.</t>

<t>TE topology information, e.g., as provided by <xref target="RFC8795"/>, could in
   theory be used by an underlying controller to provide TE information
   to its client thus allowing a PCE available within its client to
   perform multi-domain path computation on its own, without requesting
   path computations to the underlying controllers.</t>

<t>In case the client does not implement a PCE function, as discussed in
   <xref target="intro"/>, it could not perform path computation based on TE topology
   information and would instead need to request path computation from
   the underlying controllers to get the information it needs to find
   the optimal end-to-end path.</t>

<t>In case the client implements a PCE function, as discussed in 
   <xref target="intro"/>, the TE topology information needs to be complete and accurate,
   which would bring to scalability issues.</t>

<t>Using TE topology to provide a "virtual link model" aggregation, as
   described in <xref target="RFC7926"/>, may be insufficient, unless the aggregation
   provides complete and accurate information, which would still cause
   scalability issues, as described in <xref target="topo-aggregation"/> below.</t>

<t>Using TE topology abstraction, as described in <xref target="RFC7926"/>, may lead to
   compute an unfeasible path, as described in <xref target="RFC7926"/> in 
   <xref target="topo-abstraction"/> below.</t>

<t>Therefore when computing an optimal multi-domain path, there is a
   scalability trade-off between providing complete and accurate TE
   information and the number of path computation requests to the
   underlying controllers.</t>

<t>The TE topology information used, in a complimentary way, to reduce
   the number for path computation requests to the underlying
   controllers, are described in <xref target="topo-pc-complement"/> below.</t>

<section anchor="topo-aggregation"><name>TE topology aggregation</name>

<t>Using the TE topology model, as defined in <xref target="RFC8795"/>, the underlying
   controller can export the whole TE domain as a single TE node with a
   "detailed connectivity matrix" (which provides specific TE
   attributes, such as delay, Shared Risk Link Groups (SRLGs) and other
   TE metrics, between each ingress and egress links).</t>

<t>The information provided by the "detailed connectivity matrix" would
   be equivalent to the information that should be provided by "virtual
   link model" as defined in <xref target="RFC7926"/>.</t>

<t>For example, in the Packet/Optical Integration use case, described in
   <xref target="poi-uc"/>, the Optical Domain Controller can make the information
   shown in <xref target="fig-poi-example"/> available to the Packet/Optical Coordinator as part
   of the TE topology information and the Packet/Optical Coordinator
   could use this information to calculate on its own the optimal path
   between R1 and R2, without requesting any additional information to
   the Optical Domain Controller.</t>

<t>However, when designing the amount of information to provide within
   the "detailed connectivity matrix", there is a tradeoff to be
   considered between accuracy (i.e., providing "all" the information
   that might be needed by the PCE available within the client) and
   scalability.</t>

<t><xref target="poi-multi-path"/> below shows another example, similar to <xref target="fig-poi-example"/>, where
   there are two possible Optical paths between VP1 and VP4 with
   different properties (e.g., available bandwidth and cost).</t>

<figure title="Packet/Optical Integration path computation Example with multiple choices" anchor="poi-multi-path"><artwork type="ascii-art" name="poi-example-multiple.txt"><![CDATA[
                    ............................
                    :  /--------------------\  :
                    : /       cost=65        \ :
                    :/    available-bw=10G    \:
                    O VP1                  VP4 O
           cost=10 /:\                        /:\ cost=10
                  / : \----------------------/ : \
          +----+ /  :         cost=50          :  \ +----+
          |    |/   :     available-bw=2G      :   \|    |
          | R1 |    :                          :    | R2 |
          |    |\   :                          :   /|    |
          +----+ \  :  /--------------------\  :  / +----+
                  \ : /       cost=55        \ : /
            cost=5 \:/    available-bw=3G     \:/ cost=5
                    O VP2                  VP5 O
                    :                          :
                    :..........................:
]]></artwork></figure>

<t>If the information in the "detailed connectivity matrix" is not
   complete/accurate, we can have the following drawbacks:</t>

<t><list style="symbols">
  <t>If only the VP1-VP4 path with available bandwidth of 2 Gb/s and
cost 50 is reported, the client's PCE will fail to compute a 5
Gb/s path between routers R1 and R2, although this would be
feasible;</t>
  <t>If only the VP1-VP4 path with available bandwidth of 10 Gb/s and
cost 65 is reported, the client's PCE will compute, as optimal,
the 1 Gb/s path between R1 and R2 going through the VP2-VP5 path
within the optical domain while the optimal path would actually be
the one going thought the VP1-VP4 sub-path (with cost 50) within
the optical domain.  <vspace blankLines='1'/>
Reporting all the information, as in <xref target="poi-multi-path"/>, using the "detailed
 connectivity matrix", is quite challenging from a scalability
 perspective. The amount of this information is not just based on
 number of end points (which would scale as N-square), but also on
 many other parameters, including client rate, user
 constraints/policies for the service, e.g. max latency &lt; N ms, max
 cost, etc., exclusion policies to route around busy links, min
 Optical Signal to Noise Ratio (OSNR) margin, max pre-Forward Error
 Correction (FEC) Bit Error Rate (BER) etc. All these constraints
 could be different based on connectivity requirements.  <vspace blankLines='1'/>
It is also worth noting that the "connectivity matrix" has been
 originally defined in Wavelength Switched Optical Networks (WSON),
 <xref target="RFC7446"/>, to report the connectivity constrains of a physical node
 within the Wavelength Division Multiplexing (WDM) network: the
 information it contains is pretty "static" and therefore, once taken
 and stored in the TE data base, it can be always being considered
 valid and up-to-date in path computation request.  <vspace blankLines='1'/>
The "connectivity matrix" is sometimes confused with "optical reach
 table" that contain multiple (e.g. k-shortest) regen-free reachable
 paths for every A-Z node combination in the network. Optical reach
 tables can be calculated offline, utilizing vendor optical design and
 planning tools, and periodically uploaded to the Controller: these
 optical path reach tables are fairly static. However, to get the
 connectivity matrix, between any two sites, either a regen free path
 can be used, if one is available, or multiple regen free paths are
 concatenated to get from the source to the destination, which can be
 a very large combination. Additionally, when the optical path within
 optical domain needs to be computed, it can result in different paths
 based on input objective, constraints, and network conditions. In
 summary, even though "optical reach table" is fairly static, which
 regen free paths to build the connectivity matrix between any source
 and destination is very dynamic, and is done using very sophisticated
 routing algorithms.  <vspace blankLines='1'/>
Using the "basic connectivity matrix" with an abstract node to
 abstract the information regarding the connectivity constraints of an
 Optical domain, would make this information more "dynamic" since the
 connectivity constraints of an optical domain can change over time
 because some optical paths that are feasible at a given time may
 become unfeasible at a later time when e.g., another optical path is
 established.  <vspace blankLines='1'/>
The information in the "detailed connectivity matrix" is even more
 dynamic since the establishment of another optical path may change
 some of the parameters (e.g., delay or available bandwidth) in the
 "detailed connectivity matrix" while not changing the feasibility of
 the path.  <vspace blankLines='1'/>
There is therefore the need to keep the information in the "detailed
 connectivity matrix" updated which means that there another tradeoff
 between the accuracy (i.e., providing "all" the information that
 might be needed by the client's PCE) and having up-to-date
 information. The more the information is provided and the longer it
 takes to keep it up-to-date which increases the likelihood that the
 client's PCE computes paths using not updated information.  <vspace blankLines='1'/>
It seems therefore quite challenging to have a "detailed connectivity
 matrix" that provides accurate, scalable and updated information to
 allow the client's PCE to take optimal decisions by its own.  <vspace blankLines='1'/>
Considering the example in <xref target="poi-multi-path"/> with the approach defined in this
 document, the client, when it needs to set up an end-to-end path, it
 can request the Optical Domain Controller to compute a set of optimal
 paths (e.g., for VP1-VP4 and VP2-VP5) and take decisions based on the
 information received:</t>
  <t>When setting up a 5 Gb/s path between routers R1 and R2, the
Optical Domain Controller may report only the VP1-VP4 path as the
only feasible path: the Packet/Optical Coordinator can
successfully set up the end-to-end path passing though this
optical path;</t>
  <t>When setting up a 1 Gb/s path between routers R1 and R2, the
Optical Domain Controller (knowing that the path requires only 1
Gb/s) can report both the VP1-VP4 path, with cost 50, and the VP2-
VP5 path, with cost 65. The Packet/Optical Coordinator can then
compute the optimal path which is passing thought the VP1-VP4 sub-
path (with cost 50) within the optical domain.</t>
</list></t>

</section>
<section anchor="topo-abstraction"><name>TE topology abstraction</name>

<t>Using the TE topology model, as defined in <xref target="RFC8795"/>, the underlying
   controller can export to its client an abstract TE topology, composed
   by a set of TE nodes and TE links, representing the abstract view of
   the topology under its control.</t>

<t>For example, in the multi-domain TE network use case, described in
   <xref target="md-uc"/>, the TE Domain Controller 1 can export a TE topology
   encompassing the TE nodes A, B, C and D and the TE links
   interconnecting them. In a similar way, the TE Domain Controller 2
   can export a TE topology encompassing the TE nodes E, F, G and H and
   the TE links interconnecting them.</t>

<t>In this example, for simplicity reasons, each abstract TE node maps
   with each physical node, but this is not necessary.</t>

<t>In order to set up a multi-domain TE path (e.g., between nodes A and
   H), the Multi-Domain Controller can compute by its own an optimal
   end-to-end path based on the abstract TE topology information
   provided by the domain controllers. For example:</t>

<t><list style="symbols">
  <t>Multi-Domain Controller can compute, based on its own TED data,
the optimal multi-domain path being A-B-C-E-G-H, and then request
the TE Domain Controllers to set up the A-B-C and E-G-H intra-
domain paths</t>
  <t>But, during path set-up, the TE Domain Controller may find out
that A-B-C intra-domain path is not feasible (as discussed in
<xref target="md-uc"/>, in optical networks it is typical to have some paths
not being feasible due to optical constraints that are known only
by the Optical Domain Controller), while only the path A-B-D is
feasible</t>
  <t>So what the Multi-Domain Controller has computed is not good and
it needs to re-start the path computation from scratch  <vspace blankLines='1'/>
As discussed in <xref target="topo-aggregation"/>, providing more extensive abstract
information from the TE Domain Controllers to the Multi-Domain
Controller may lead to scalability problems.  <vspace blankLines='1'/>
In a sense this is similar to the problem of routing and wavelength
assignment within an optical domain. It is possible to do first
routing (step 1) and then wavelength assignment (step 2), but the
chances of ending up with a good path is low. Alternatively, it is
possible to do combined routing and wavelength assignment, which is
known to be a more optimal and effective way for optical path set-up.
Similarly, it is possible to first compute an abstract end-to-end
path within the Multi-Domain Controller (step 1) and then compute an
intra-domain path within each optical domain (step 2), but there are
more chances not to find a path or to get a suboptimal path than by
performing multiple per-domain path computations and then stitching
them together.</t>
</list></t>

</section>
<section anchor="topo-pc-complement"><name>Complementary use of the TE topology</name>

<t>As discussed in <xref target="md-uc"/>, there are some scalability issues with
   path computation requests in a multi-domain TE network with many TE
   domains, in terms of the number of requests to send to the TE Domain
   Controllers. It would therefore be worthwhile using the abstract TE
   topology information provided by the TE Domain Controllers to limit
   the number of requests.</t>

<t>An example can be described considering the multi-domain abstract TE
   topology shown in <xref target="fig-topo-many-domains"/>. In this example, an end-to-end TE path
   between domains A and F needs to be set up. The transit TE domain
   should be selected between domains B, C, D and E.</t>

<figure title="Multi-domain with many domains (Topology information)" anchor="fig-topo-many-domains"><artwork type="ascii-art" name="many-domains-topology.txt"><![CDATA[
                          .........B.........
                          : _ _ _ _ _ _ _ _ :
                          :/               \:
                      +---O  NOT FEASIBLE   O---+
                cost=5|   :                 :   |
    ......A......     |   :.................:   |     ......F......
    :           :     |                         |     :           :
    :           O-----+   .........C.........   +-----O           :
    :           :         : /-------------\ :         :           :
    :           :         :/               \:         :           :
    :  cost<=20 O---------O   cost <= 30    O---------O cost<=20  :
    :          /: cost=5  :                 : cost=5  :\          :
    :  /------/ :         :.................:         : \------\  :
    : /         :                                     :         \ :
    :/ cost<=25 :         .........D.........         : cost<=25 \:
    O-----------O-------+ : /-------------\ : +-------O-----------O
    :\          : cost=5| :/               \: |cost=5 :          /:
    : \         :       +-O   cost <= 30    O-+       :         / :
    :  \------\ :         :                 :         : /------/  :
    : cost>=30 \:         :.................:         :/ cost>=30 :
    :           O-----+                         +-----O           :
    :...........:     |   .........E.........   |     :...........:
                      |   : /-------------\ :   |
                cost=5|   :/               \:   |cost=5
                      +---O   cost >= 30    O---+
                          :                 :
                          :.................:
]]></artwork></figure>

<t>The actual cost of each intra-domain path is not known a priori from
   the abstract topology information. The Multi-Domain Controller only
   knows, from the TE topology provided by the underlying domain
   controllers, the feasibility of some intra-domain paths and some
   upper-bound and/or lower-bound cost information. With this
   information, together with the cost of inter-domain links, the Multi-
   Domain Controller can understand by its own that:</t>

<t><list style="symbols">
  <t>Domain B cannot be selected as the path connecting domains A and F
is not feasible;</t>
  <t>Domain E cannot be selected as a transit domain since it is known
from the abstract topology information provided by domain
controllers that the cost of the multi-domain path A-E-F (which is
100, in the best case) will be always be higher than the cost of
the multi-domain paths A-D-F (which is 90, in the worst case) and
A-C-F (which is 80, in the worst case).  <vspace blankLines='1'/>
Therefore, the Multi-Domain Controller can understand by its own that
 the optimal multi-domain path could be either A-D-F or A-C-F but it
 cannot know which one of the two possible option actually provides
 the optimal end-to-end path.  <vspace blankLines='1'/>
The Multi-Domain Controller can therefore request path computation
 only to the TE Domain Controllers A, D, C and F (and not to all the
 possible TE Domain Controllers).</t>
</list></t>

<figure title="Multi-domain with many domains (Path Computation information)" anchor="fig-pc-many-domains"><artwork type="ascii-art" name="many-domain-path-computation.txt"><![CDATA[
                          .........B.........
                          :                 :
                      +---O                 O---+
    ......A......     |   :.................:   |     ......F......
    :           :     |                         |     :           :
    :           O-----+   .........C.........   +-----O           :
    :           :         : /-------------\ :         :           :
    :           :         :/               \:         :           :
    :  cost=15  O---------O    cost = 25    O---------O  cost=10  :
    :          /: cost=5  :                 : cost=5  :\          :
    :  /------/ :         :.................:         : \------\  :
    : /         :                                     :         \ :
    :/ cost=10  :         .........D.........         : cost=15  \:
    O-----------O-------+ : /-------------\ : +-------O-----------O
    :           : cost=5| :/               \: |cost=5 :           :
    :           :       +-O    cost = 15    O-+       :           :
    :           :         :                 :         :           :
    :           :         :.................:         :           :
    :           O-----+                         +-----O           :
    :...........:     |   .........E.........   |     :...........:
                      |   :                 :   |
                      +---O                 O---+
                          :.................:
]]></artwork></figure>

<t>Based on these requests, the Multi-Domain Controller can know the
   actual cost of each intra-domain paths which belongs to potential
   optimal end-to-end paths, as shown in <xref target="fig-pc-many-domains"/>, and then compute the
   optimal end-to-end path (e.g., A-D-F, having total cost of 50,
   instead of A-C-F having a total cost of 70).</t>

</section>
</section>
<section anchor="rpc-motivation"><name>Path Computation RPC</name>

<t>The TE tunnel YANG data model, defined in <xref target="I-D.ietf-teas-yang-te"/>, can support
   the need to request path computation, as described in section 5.1.2
   of <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>This solution is stateful since the state of each created "compute-
   only" TE tunnel path needs to be maintained, in the YANG datastores
   (at least in the running datastore and operational datastore), and
   updated, when underlying network conditions change.</t>

<t>The RPC mechanism allows requesting path computation using a simple
   atomic operation, without creating any state in the YANG datastores,
   and it is the natural option/choice, especially with stateless PCE.</t>

<t>It is very useful to provide both the options of using an RPC as well
   as of setting up TE tunnel paths in "compute-only" mode. It is
   suggested to use the RPC as much as possible and to rely on
   "compute-only" TE tunnel paths, when really needed.</t>

<t>Using the RPC solution would imply that the underlying controller
   (e.g., a PNC) computes a path twice during the process to set up an
   LSP: at time T1, when its client (e.g., an MDSC) sends a path
   computation RPC request to it, and later, at time T2, when the same
   client (MDSC) creates a TE tunnel requesting the set-up of the LSP.
   The underlying assumption is that, if network conditions have not
   changed, the same path that has been computed at time T1 is also
   computed at time T2 by the underlying controller (e.g. PNC) and
   therefore the path that is set up at time T2 is exactly the same path
   that has been computed at time T1.</t>

<t>However, since the operation is stateless, there is no guarantee that
   the returned path would still be available when path set-up is
   requested: this does not cause major issues when the time between
   path computation and path set-up is short (especially if compared
   with the time that would be needed to update the information of a
   very detailed connectivity matrix).</t>

<t>In most of the cases, there is even no need to guarantee that the
   path that has been set up is the exactly same as the path that has
   been returned by path computation, especially if it has the same or
   even better metrics. Depending on the abstraction level applied by
   the server, the client may also not know the actual computed path.</t>

<t>The most important requirement is that the required global objectives
   (e.g., multi-domain path metrics and constraints) are met. For this
   reason a path verification phase is always necessary to verify that
   the actual path that has been set up meets the global objectives (for
   example in a multi-domain network, the resulting end-to-end path
   meets the required end-to-end metrics and constraints).</t>

<t>In most of the cases, even if the path being set up is not exactly
   the same as the path returned by path computation, its metrics and
   constraints are "good enough" and the path verification passes
   successfully. In the few corner cases where the path verification
   fails, it is possible repeat the whole process (path computation,
   path set-up and path verification).</t>

<t>In case it is required to set up at T2 exactly the same path computed
   at T1, the RPC solution should not be used and, instead, a "compute-
   only" TE tunnel path should be set up, allowing also notifications in
   case the computed path has been changed.</t>

<t>In this case, at time T1, the client (MDSC) creates a TE tunnel in a
   compute-only mode in the running datastore and later, at time T2,
   changes the configuration of that TE tunnel (not to be any more in a
   compute-only mode) to trigger the set-up of the LSP over the path
   which have been computed at time T1 and reported in the operational
   datastore.</t>

<t>It is worth noting that also using the "compute-only" TE tunnel path,
   although increasing the likelihood that the computed path is
   available at path set-up, does not guarantee that because
   notifications may not be reliable or delivered on time. Path
   verification is needed also in this case.</t>

<t>The solution based on "compute-only" TE tunnel path has also the
   following drawbacks:</t>

<t><list style="symbols">
  <t>Several messages required for any path computation</t>
  <t>Requires persistent storage in the underlying controller</t>
  <t>Need for garbage collection for stranded paths</t>
  <t>Process burden to detect changes on the computed paths in order to
provide notifications update</t>
</list></t>

<section anchor="temp-state"><name>Temporary reporting of the computed path state</name>

<t>This section describes an optional extension to the stateless
   behavior of the path computation RPC, where the underlying
   controller, after having received a path computation RPC request,
   maintains some "transient state" associated with the computed path,
   allowing the client to request the set-up of exactly that path, if
   still available.</t>

<t>This is similar to the "compute-only" TE tunnel path solution but, to
   avoid the drawbacks of the stateful approach, is leveraging the path
   computation RPC and the separation between configuration and
   operational datastore, as defined in the NMDA architecture <xref target="RFC8342"/>.</t>

<t>The underlying controller, after having computed a path, as requested
   by a path computation RPC, also creates a TE tunnel instance within
   the operational datastore, to store that computed path. This would be
   similar to a "compute-only" TE tunnel path, with the only difference
   that there is no associated TE tunnel instance within the running
   datastore.</t>

<t>Since the underlying controller stores in the operational datastore
   the computed path based on an abstract topology it exposes, it also
   remembers, internally, which is the actual native path (physical
   path), within its native topology (physical topology), associated
   with that compute-only TE tunnel instance.</t>

<t>Afterwards, the client (e.g., MDSC) can request the set-up of that
   specific path by creating a TE tunnel instance (not in compute-only
   mode) in the running datastore using the same tunnel-name of
   the existing TE tunnel in the operational datastore: this will
   trigger the underlying controller to set up that path, if still
   available.</t>

<t>There are still cases where the path being set up is not exactly the
   same as the path that has been computed:</t>

<t><list style="symbols">
  <t>When the tunnel is configured with path constraints which are not
compatible with the computed path;</t>
  <t>When the tunnel set-up is requested after the resources of the
computed path are no longer available;</t>
  <t>When the tunnel set-up is requested after the computed path is no
longer known (e.g. due to a server reboot) by the underlying
controller.  <vspace blankLines='1'/>
In all these cases, the underlying controller should compute and set
 up a new path.  <vspace blankLines='1'/>
Therefore the "path verification" phase, as described in <xref target="rpc-motivation"/>
 above, is always needed to check that the path that has been set up
 is still "good enough".  <vspace blankLines='1'/>
Since this new approach is not completely stateless, garbage
 collection is implemented using a timeout that, when it expires,
 triggers the removal of the computed path from the operational
 datastore. This operation is fully controlled by the underlying
 controller without the need for any action to be taken by the client
 that is not able to act on the operational datastore. The default
 value of this timeout is 10 minutes but a different value may be
 configured by the client.  <vspace blankLines='1'/>
In addition, it is possible for the client to tag each path
 computation request with a transaction-id allowing for a faster
 removal of all the paths associated with a transaction-id, without
 waiting for their timers to expire.  <vspace blankLines='1'/>
The underlying controller can remove from the operational datastore
 all the paths computed with a given transaction-id which have not
 been set up either when it receives a Path Delete RPC request for
 that transaction-id or, automatically, right after the set-up up of a
 path that has been previously computed with that transaction-id.  <vspace blankLines='1'/>
This possibility is useful when multiple paths are computed but, at
 most, only one is set up (e.g., in multi-domain path computation
 scenario scenarios). After the selected path has been set up (e.g, in
 one domain during multi-domain path set-up), all the other
 alternative computed paths can be automatically deleted by the
 underlying controller (since no longer needed). The client can also
 request, using the Path Delete RPC request, the underlying controller
 to remove all the computed paths, if none of them is going to be set
 up (e.g., in a transit domain not being selected by multi-domain path
 computation and so not being automatically deleted).  <vspace blankLines='1'/>
This approach is complimentary and not alternative to the timer which
 is always needed to avoid stranded computed paths being stored in the
 operational datastore when no path is set up and no explicit Path
 Delete RPC request is received.</t>
</list></t>

</section>
</section>
</section>
<section anchor="path-computation-and-optimization-for-multiple-paths"><name>Path computation and optimization for multiple paths</name>

<t>There are use cases, where it is advantageous to request path
   computation for a set of paths, through a network or through a
   network domain, using a single request <xref target="RFC5440"/>.</t>

<t>In this case, sending a single request for multiple path
   computations, instead of sending multiple requests for each path
   computation, would reduce the protocol overhead and it would consume
   less resources (e.g., threads in the client and server).</t>

<t>In the context of a typical multi-domain TE network, there could
   multiple choices for the ingress/egress points of a domain and the
   Multi-Domain Controller needs to request path computation between all
   the ingress/egress pairs to select the best pair. For example, in the
   example of <xref target="md-uc"/>, the Multi-Domain Controller needs to request
   the TE Network Controller 1 to compute the A-C and the A-D paths and
   to the TE Network Controller 2 to compute the E-H and the F-H paths.</t>

<t>It is also possible that the Multi-Domain Controller receives a
   request to set up a group of multiple end to end connections. The
   Multi-Domain Controller needs to request each TE domain Controller to
   compute multiple paths, one (or more) for each end to end connection.</t>

<t>There are also scenarios where it can be needed to request path
   computation for a set of paths in a synchronized fashion.</t>

<t>One example could be computing multiple diverse paths. Computing a
   set of diverse paths in an unsynchronized fashion, leads to the
   possibility of not being able to satisfy the diversity requirement.
   In this case, it is preferable to compute a sub-optimal primary path
   for which a diversely routed secondary path exists.</t>

<t>There are also scenarios where it is needed to request optimizing a
   set of paths using objective functions that apply to the whole set of
   paths, see <xref target="RFC5541"/>, e.g. to minimize the sum of the costs of all
   the computed paths in the set.</t>

</section>
<section anchor="yang-data-model-for-requesting-path-computation"><name>YANG data model for requesting Path Computation</name>

<t>This document define a YANG RPC to request path computation as an
   "augmentation" of tunnel-rpc, defined in <xref target="I-D.ietf-teas-yang-te"/>. This model
   provides the RPC input attributes that are needed to request path
   computation and the RPC output attributes that are needed to report
   the computed paths.</t>

<figure><artwork type="ascii-art" name="overview.txt"><![CDATA[
     augment /te:tunnels-path-compute/te:input/te:path-compute-info:
       +-- path-request* [request-id]
       |  +-- request-id                            uint32
       |  ...........

     augment /te:tunnels-path-compute/te:output/te:path-compute-result:
       +--ro response* [response-id]
          +--ro response-id                         uint32
          +--ro computed-paths-properties
          |  +--ro computed-path-properties* [k-index]
          |     +--ro k-index            uint8
          |     +--ro path-properties
          |     ...........
]]></artwork></figure>

<t>This model extensively re-uses the grouping defined in <xref target="I-D.ietf-teas-yang-te"/>
   and <xref target="RFC8776"/> to ensure maximal syntax and semantics commonality.</t>

<t>This YANG data model allows one RPC to include multiple path
   requests, each path request being identified by a request-id.
   Therefore, one RPC can return multiple responses, one for each path
   request, being identified by a response-id equal to the corresponding
   request-id. Each response reports one or more computed paths, as
   requested by the k-requested-paths attribute. By default, each
   response reports one computed path.</t>

<section anchor="synchronization-of-multiple-path-computation-requests"><name>Synchronization of multiple path computation requests</name>

<t>The YANG data model permits the synchronization of a set of multiple
   path requests (identified by specific request-id) all related to a
   "svec" container emulating the syntax of the Synchronization VECtor
   (SVEC) PCEP object, defined in <xref target="RFC5440"/>.</t>

<figure><artwork type="ascii-art" name="synchronization.txt"><![CDATA[
       +-- synchronization* []
          +-- svec
          |  +-- relaxable?           boolean
          |  +-- disjointness?        te-path-disjointness
          |  +-- request-id-number*   uint32
          +-- svec-constraints
          |  +-- path-metric-bound* [metric-type]
          |     +-- metric-type    identityref
          |     +-- upper-bound?   uint64
          +-- path-srlgs-lists
          |  +-- path-srlgs-list* [usage]
          |     +-- usage     identityref
          |     +-- values*   srlg
          +-- path-srlgs-names
          |  +-- path-srlgs-name* [usage]
          |     +-- usage    identityref
          |     +-- names*   string
          +-- exclude-objects
          |  +-- excludes* []
          |     +-- (type)?
          |        +--:(numbered-node-hop)
          |        |  +-- numbered-node-hop
          |        |     +-- node-id     te-node-id
          |        |     +-- hop-type?   te-hop-type
          |        +--:(numbered-link-hop)
          |        |  +-- numbered-link-hop
          |        |     +-- link-tp-id    te-tp-id
          |        |     +-- hop-type?     te-hop-type
          |        |     +-- direction?    te-link-direction
          |        +--:(unnumbered-link-hop)
          |        |  +-- unnumbered-link-hop
          |        |     +-- link-tp-id    te-tp-id
          |        |     +-- node-id       te-node-id
          |        |     +-- hop-type?     te-hop-type
          |        |     +-- direction?    te-link-direction
          |        +--:(as-number)
          |        |  +-- as-number-hop
          |        |     +-- as-number    inet:as-number
          |        |     +-- hop-type?    te-hop-type
          |        +--:(label)
          |           +-- label-hop
          |              +-- te-label
          |                 +-- (technology)?
          |                 |  +--:(generic)
          |                 |     +-- generic?
          |                 |             rt-types:generalized-label
          |                 +-- direction?       te-label-direction
          +-- optimizations
             +-- (algorithm)?
                +--:(metric) {te-types:path-optimization-metric}?
                |  +-- optimization-metric* [metric-type]
                |     +-- metric-type    identityref
                |     +-- weight?        uint8
                +--:(objective-function)
                         {te-types:path-optimization-objective-
   function}?
                   +-- objective-function
                      +-- objective-function-type?   identityref
]]></artwork></figure>

<t>The model, in addition to the metric types, defined in <xref target="RFC8776"/>,
   which can be applied to each individual path request, supports also
   additional metric types, which apply to a set of synchronized
   requests, as referenced in <xref target="RFC5541"/>. These additional metric types
   are defined by the following YANG identities:</t>

<t><list style="symbols">
  <t>svec-metric-type: base YANG identity from which cumulative metric
types identities are derived.</t>
  <t>svec-metric-cumul-te: cumulative TE cost metric type, as defined
in <xref target="RFC5541"/>.</t>
  <t>svec-metric-cumul-igp: cumulative IGP cost metric type, as defined
in <xref target="RFC5541"/>.</t>
  <t>svec-metric-cumul-hop: cumulative Hop metric type, representing
the cumulative version of the Hop metric type defined in
<xref target="RFC8776"/>.</t>
  <t>svec-metric-aggregate-bandwidth-consumption: aggregate bandwidth
consumption metric type, as defined in <xref target="RFC5541"/>.</t>
  <t>svec-metric-load-of-the-most-loaded-link: load of the most loaded
link metric type, as defined in <xref target="RFC5541"/>.</t>
</list></t>

</section>
<section anchor="returned-metric-values"><name>Returned metric values</name>

<t>This YANG data model provides a way to return the values of the
   metrics computed by the path computation in the output of RPC,
   together with other important information (e.g. SRLG, affinities,
   explicit route), emulating the syntax of the "C" flag of the "METRIC"
   PCEP object <xref target="RFC5440"/>:</t>

<figure><artwork type="ascii-art" name="returned-metrics.txt"><![CDATA[
          |     +--ro path-properties
          |        +--ro path-metric* [metric-type]
          |        |  +--ro metric-type           identityref
          |        |  +--ro accumulative-value?   uint64
          |        +--ro path-affinities-values
          |        |  +--ro path-affinities-value* [usage]
          |        |     +--ro usage    identityref
          |        |     +--ro value?   admin-groups
          |        +--ro path-affinity-names
          |        |  +--ro path-affinity-name* [usage]
          |        |     +--ro usage            identityref
          |        |     +--ro affinity-name* [name]
          |        |        +--ro name    string
          |        +--ro path-srlgs-lists
          |        |  +--ro path-srlgs-list* [usage]
          |        |     +--ro usage     identityref
          |        |     +--ro values*   srlg
          |        +--ro path-srlgs-names
          |        |  +--ro path-srlgs-name* [usage]
          |        |     +--ro usage    identityref
          |        |     +--ro names*   string
          |        +--ro path-route-objects
          |        ...........
          |        +--ro te-bandwidth
          |        |  +--ro (technology)?
          |        |     +--:(generic)
          |        |        +--ro generic?   te-bandwidth
          |        +--ro disjointness-type?
          |                te-types:te-path-disjointness
]]></artwork></figure>

<t>It also allows the client to request which information (metrics, SRLG
   and/or affinities) should be returned:</t>

<figure><artwork type="ascii-art" name="requested-metrics.txt"><![CDATA[
       |  +-- request-id                            uint32
       |  ...........
       |  +-- requested-metrics* [metric-type]
       |  |  +-- metric-type    identityref
       |  +-- return-srlgs?                         boolean
       |  +-- return-affinities?                    boolean
       |  ...........
]]></artwork></figure>

<t>This feature is essential for path computation in a multi-domain TE
   network as described in <xref target="md-uc"/>. In this case, the metrics
   returned by a path computation requested to a given underlying
   controller must be used by the client to compute the best end-to-end
   path. If they are missing, the client cannot compare different paths
   calculated by the underlying controllers and choose the best one for
   the optimal end-to-end (e2e) path.</t>

</section>
<section anchor="multiple-paths-requests-for-the-same-te-tunnel"><name>Multiple Paths Requests for the same TE tunnel</name>

<t>The YANG data model allows including multiple requests for different
   paths intended to be used within the same tunnel or within different
   tunnels.</t>

<t>When multiple requested paths are intended to be used within the same
   tunnel (e.g., requesting path computation for the primary and
   secondary paths of a protected tunnel), the set of attributes that
   are intended to be configured on per-tunnel basis rather than on per-
   path basis are common to all these path requests. These attributes
   includes both attributes which can be configured only a per-tunnel
   basis (e.g., tunnel-name, source/destination TTP, encoding and
   switching-type) as well attributes which can be configured both on a
   per-tunnel and on a per-path basis (e.g., the te-bandwidth or the
   associations).</t>

<t>Therefore, a tunnel-attributes list is defined, within the path
   computation request RPC:</t>

<figure><artwork type="ascii-art" name="tunnel-attributes-list.txt"><![CDATA[
       +-- tunnel-attributes* [tunnel-name]
       |  +-- tunnel-name               string
       |  +-- encoding?                 identityref
       |  +-- switching-type?           identityref
       |  +-- source?                   te-types:te-node-id
       |  +-- destination?              te-types:te-node-id
       |  +-- src-tunnel-tp-id?         binary
       |  +-- dst-tunnel-tp-id?         binary
       |  +-- bidirectional?            boolean
       |  +-- association-objects
       |  ...........
       |  +-- protection-type?          identityref
       |  +-- restoration-type?         identityref
       |  +-- restoration-scheme?       identityref
       |  +-- te-topology-identifier
       |  |  +-- provider-id?   te-global-id
       |  |  +-- client-id?     te-global-id
       |  |  +-- topology-id?   te-topology-id
       |  +-- te-bandwidth
       |  |  +-- (technology)?
       |  |     +--:(generic)
       |  |        +-- generic?   te-bandwidth
       |  +-- link-protection?          identityref
       |  +-- setup-priority?           uint8
       |  +-- hold-priority?            uint8
       |  +-- signaling-type?           identityref
       |  +-- hierarchy
       |     +-- dependency-tunnels
       |     ............ 
       |     +-- hierarchical-link
       |     ............ 
]]></artwork></figure>

<t>The path requests that are intended to be used within the same tunnel
   should reference the same entry in the tunnel-attributes list. This
   allows:</t>

<t><list style="symbols">
  <t>avoiding repeating the same set of per-tunnel parameters on
multiple requested paths;</t>
  <t>the server to understand what attributes are intended to be
configured on a per-tunnel basis (e.g., the te-bandwidth
configured in the tunnel-attributes) and what attributes are
intended to be configured on a per-path basis(e.g., the te-
bandwidth configured in the path-request). This could be useful
especially when the server also creates a TE tunnel instance
within the operational datastore to report the computed paths, as
described in <xref target="temp-state"/>: in this case, the tunnel-name is also
used as the suggested name for that TE tunnel instance.  <vspace blankLines='1'/>
The YANG data model allows also including requests for paths intended
 to modify existing tunnels (e.g., adding a protection path for an
 existing un-protected tunnel). In this case, the per-tunnel
 attributes are already provided in an existing TE tunnel instance and
 do not need to be re-configured in the path computation request RPC.
 Therefore, these requests should reference an existing TE tunnel
 instance.  <vspace blankLines='1'/>
It is also possible to request computing paths without indicating in
 which tunnel they are intended to be used (e.g., in case of an
 unprotected tunnel). In this case, the per-tunnel attributes could be
 provided together with the per-path attributes in the path request,
 without using the tunnel-attributes list.  <vspace blankLines='1'/>
The choices below are defined to distinguish the cases above:</t>
  <t>whether the per-tunnel attributes are configured by reference
(providing a leafref), to:  <list style="symbols">
      <t>either a TE tunnel instance, if it exists;</t>
      <t>or to an entry of the tunnel-attributes list, if the TE tunnel
instance does not exist;</t>
    </list></t>
  <t>or by value, providing the set of tunnel attributes within the
path request:</t>
</list></t>

<figure><artwork type="ascii-art" name="tunnel-attributes.txt"><![CDATA[
       |  +-- (tunnel-attributes)?
       |  |  +--:(reference)
       |  |  |  +-- tunnel-reference
       |  |  |     +-- (tunnel-exist)?
       |  |  |     |  +--:(tunnel-ref)
       |  |  |     |  |  +-- tunnel-ref                te:tunnel-ref
       |  |  |     |  +--:(tunnel-attributes-ref)
       |  |  |     |     +-- tunnel-attributes-ref     leafref
       |  |  |     +-- path-name?                      string
       |  |  |     +-- (path-role)
       |  |  |        +--:(primary-path)
       |  |  |         ...........
       |  |  +--:(value)
       |  |     +-- tunnel-name?                    string
       |  |     ...........
       |  |     +-- encoding?                       identityref
       |  |     +-- switching-type?                 identityref
       |  |     ...........
]]></artwork></figure>

<section anchor="tunnel-attributes-specified-by-value"><name>Tunnel attributes specified by value</name>

<t>The (value) case provides the set of attributes that are configured
   only on per-tunnel basis (e.g., tunnel-name, source/destination TTP,
   encoding and switching-type).</t>

<t>In this case, it is assumed that the requested path will be the only
   path within a tunnel.</t>

<t>If the only path within a tunnel is the transit segment of a multi-domain end-to-end path, it can be of any type (primary, secondary, reverse-primary
   or reverse-secondary). The (path-role) choice is used to specify its role in the path request:</t>

<figure><artwork type="ascii-art" name="tunnel-by-value.txt"><![CDATA[
       |  |     +-- (path-role)?
       |  |     |  +--:(primary-path)
       |  |     |  +--:(secondary-path)
       |  |     |  |  +-- secondary-path!
       |  |     |  |     +-- primary-path-name?   string
       |  |     |  +--:(primary-reverse-path)
       |  |     |  |  +-- primary-reverse-path!
       |  |     |  |     +-- primary-path-name?   string
       |  |     |  +--:(secondary-reverse-path)
       |  |     |     +-- secondary-reverse-path
       |  |     |        +-- primary-path-name?           string
       |  |     |        +-- primary-reverse-path-name?   string
       |  |     ...........
]]></artwork></figure>

<t>In all the other cases, the only path within a tunnel is a primary path.</t>

<t>The secondary-path, the primary-reverse-path and the secondary-
   reverse-path are presence container used to indicate the role of the
   path: by default, the path is assumed to be a primary path.</t>

<t>They optionally can contain the name of the primary-path under which
   the requested path could be associated within the YANG tree structure
   defined in <xref target="I-D.ietf-teas-yang-te"/>, which could be useful when the server also
   creates a TE tunnel instance within the operational datastore to
   report the computed paths, as described in <xref target="temp-state"/>: in this
   case, the tunnel-name and the path names are also used as the
   suggested name for that TE tunnel and path instances.</t>

</section>
<section anchor="tunnel-attributes-specified-by-reference"><name>Tunnel attributes specified by reference</name>

<t>The (reference) case provides the information needed to associate
   multiple path requests that are intended to be used within the same
   tunnel.</t>

<t>In order to indicate the role of the path being requested within the
   intended tunnel (e.g., primary or secondary path), the (path-role)
   choice is defined:</t>

<figure><artwork type="ascii-art" name="tunnel-by-reference.txt"><![CDATA[
       |  |  |     +-- (path-role)
       |  |  |        +--:(primary-path)
       |  |  |        |  +-- primary-path!
       |  |  |        |     ...........
       |  |  |        +--:(secondary-path)
       |  |  |        |  +-- secondary-path
       |  |  |        |     ...........
       |  |  |        +--:(primary-reverse-path)
       |  |  |        |  +-- primary-reverse-path
       |  |  |        |     ...........
       |  |  |        +--:(secondary-reverse-path)
       |  |  |           +-- secondary-reverse-path
       |  |  |              +-- preference?                 uint8
       |  |  |              +-- protection-type?            identityref
       |  |  |              +-- restoration-type?           identityref
       |  |  |              +-- restoration-scheme?         identityref
       |  |  |              +-- primary-reverse-path-ref* []
       |  |  |                 +-- (primary-reverse-path-exist)?
       |  |  |                    +--:(path-ref)
       |  |  |                    |  +-- primary-path-ref    leafref
       |  |  |                    +--:(path-request-ref)
       |  |  |                       +-- path-request-ref    leafref
]]></artwork></figure>

<t>The primary-path is a presence container used to indicate that the
   requested path is intended to be used as a primary path. It can also
   contain some attributes which are configured only on primary paths
   (e.g., the k-requested-paths).</t>

<t>The secondary-path container indicates that the requested path is
   intended to be used as a secondary path and it contains at least
   references to one or more primary paths which can use it as a
   candidate secondary path:</t>

<figure><artwork type="ascii-art" name="secondary-path.txt"><![CDATA[
       |  |  |        |  +-- secondary-path
       |  |  |        |     ...........
       |  |  |        |     +-- primary-path-ref* []
       |  |  |        |        +-- (primary-path-exist)?
       |  |  |        |           +--:(path-ref)
       |  |  |        |           |  +-- primary-path-ref    leafref
       |  |  |        |           +--:(path-request-ref)
       |  |  |        |              +-- path-request-ref    leafref
]]></artwork></figure>

<t>A requested secondary path can reference any requested primary paths,
   and, in case they are intended to be used within an existing TE
   tunnel, it could also reference any existing primary-paths.</t>

<t>The secondary-path container can also contain some attributes which
   are configured only on secondary paths (e.g., the protection-type).</t>

<t>The primary-reverse-path container indicates that the requested path
   is intended to be used as a primary reverse path and it contains only
   the reference to the primary path which is intended to use it as a
   reverse path:</t>

<figure><artwork type="ascii-art" name="primary-reverse-path.txt"><![CDATA[
       |  |  |        |  +-- primary-reverse-path
       |  |  |        |     +-- (primary-path-exist)?
       |  |  |        |        +--:(path-ref)
       |  |  |        |        |  +-- primary-path-ref    leafref
       |  |  |        |        +--:(path-request-ref)
       |  |  |        |           +-- path-request-ref    leafref
]]></artwork></figure>

<t>A requested primary reverse path can reference either a requested
   primary path, or, in case it is intended to be used within an
   existing TE tunnel, an existing primary-path.</t>

<t>The secondary-reverse-path container indicates that the requested
   path is intended to be used as a secondary reverse path and it
   contains at least references to one or more primary paths, whose
   primary reverse path can use it as a candidate secondary reverse
   path:</t>

<figure><artwork type="ascii-art" name="secondary-reverse-path.txt"><![CDATA[
       |  |  |           +-- secondary-reverse-path
       |  |  |              ...........
       |  |  |              +-- primary-reverse-path-ref* []
       |  |  |                 +-- (primary-reverse-path-exist)?
       |  |  |                    +--:(path-ref)
       |  |  |                    |  +-- primary-path-ref    leafref
       |  |  |                    +--:(path-request-ref)
       |  |  |                       +-- path-request-ref    leafref
]]></artwork></figure>

<t>A requested secondary reverse path can reference any requested
   primary paths, and, in case they are intended to be used within an
   existing TE tunnel, it could reference also existing primary-paths.</t>

<t>The secondary-reverse-path container can also contain some attributes
   which are configured only on secondary reverse paths (e.g., the
   protection-type).</t>

<t>In case the requested path is a transit segment of a multi-domain
   end-to-end path, the primary-path may not be needed to be
   setup/computed. However, the request for path computation of a
   secondary-path or a primary-reverse or of a secondary-reverse-path
   requires that the primary-path exists or it is requested within the
   same RPC request. In the latter case, the path request for the
   primary-path should have an empty 'route-object-include-exclude' list,
   as described in section 5.1.1 of <xref target="I-D.ietf-teas-yang-te"/>, to indicate to the server that
   path computation is not requested and no path properties will
   therefore be returned in the RPC response.</t>

</section>
</section>
<section anchor="multi-layer-path-computation"><name>Multi-Layer Path Computation</name>

<t>The models supports requesting multi-layer path computation following
   the same approach based on dependency tunnels, as defined in <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>The tunnel-attributes of a given client-layer path request can
   reference server-layer TE tunnels which can already exist in the YANG
   datastore or be specified in the tunnel-attributes list, within the
   same RPC request:</t>

<figure><artwork type="ascii-art" name="dependency-tunnels.txt"><![CDATA[
       |     +-- dependency-tunnels
       |     |  +-- dependency-tunnel* [name]
       |     |  |  +-- name              -> /te:te/tunnels/tunnel/name
       |     |  |  +-- encoding?         identityref
       |     |  |  +-- switching-type?   identityref
       |     |  +-- dependency-tunnel-attributes* [name]
       |     |     +-- name              leafref
       |     |     +-- encoding?         identityref
       |     |     +-- switching-type?   identityref
]]></artwork></figure>

<t>In a similar way as in <xref target="I-D.ietf-teas-yang-te"/>, the server-layer tunnel
   attributes should provide the information of what would be the
   dynamic link in the client layer topology supported by that tunnel,
   if instantiated:</t>

<figure><artwork type="ascii-art" name="hierarchical-link.txt"><![CDATA[
       |     +-- hierarchical-link
       |        +-- local-te-node-id?         te-types:te-node-id
       |        +-- local-te-link-tp-id?      te-types:te-tp-id
       |        +-- remote-te-node-id?        te-types:te-node-id
       |        +-- te-topology-identifier
       |           +-- provider-id?   te-global-id
       |           +-- client-id?     te-global-id
       |           +-- topology-id?   te-topology-id
]]></artwork></figure>

<t>It is worth noting that since path computation RPC is stateless, the
   dynamic hierarchical links configured for the server-layer tunnel
   attributes cannot be used for path computation of any client-layer
   path unless explicitly referenced in the dependency-tunnel-attributes
   list within the same RPC request.</t>

</section>
</section>
<section anchor="yang-data-model-for-te-path-computation"><name>YANG data model for TE path computation</name>

<section anchor="pc-tree"><name>Tree diagram</name>

<t><xref target="fig-pc-tree"/> below shows the tree diagram of the YANG data model defined
   in module ietf-te-path-computation.yang, defined in <xref target="pc-yang"/>.</t>

<figure title="TE path computation tree diagram" anchor="fig-pc-tree"><artwork type="ascii-art" name="ietf-te-path-computation.tree"><![CDATA[
module: ietf-te-path-computation

  augment /te:tunnels-path-compute/te:input/te:path-compute-info:
    +-- path-request* [request-id]
    |  +-- request-id                            uint32
    |  +-- (tunnel-attributes)?
    |  |  +--:(reference)
    |  |  |  +-- tunnel-reference
    |  |  |     +-- (tunnel-exist)?
    |  |  |     |  +--:(tunnel-ref)
    |  |  |     |  |  +-- tunnel-ref                te:tunnel-ref
    |  |  |     |  +--:(tunnel-attributes-ref)
    |  |  |     |     +-- tunnel-attributes-ref     leafref
    |  |  |     +-- path-name?                      string
    |  |  |     +-- (path-role)
    |  |  |        +--:(primary-path)
    |  |  |        |  +-- primary-path!
    |  |  |        |     +-- preference?          uint8
    |  |  |        |     +-- co-routed?           empty
    |  |  |        |     +-- k-requested-paths?   uint8
    |  |  |        +--:(secondary-path)
    |  |  |        |  +-- secondary-path
    |  |  |        |     +-- preference?           uint8
    |  |  |        |     +-- co-routed?            empty
    |  |  |        |     +-- protection-type?      identityref
    |  |  |        |     +-- restoration-type?     identityref
    |  |  |        |     +-- restoration-scheme?   identityref
    |  |  |        |     +-- primary-path-ref* []
    |  |  |        |        +-- (primary-path-exist)?
    |  |  |        |           +--:(path-ref)
    |  |  |        |           |  +-- primary-path-ref    leafref
    |  |  |        |           +--:(path-request-ref)
    |  |  |        |              +-- path-request-ref    leafref
    |  |  |        +--:(primary-reverse-path)
    |  |  |        |  +-- primary-reverse-path
    |  |  |        |     +-- (primary-path-exist)?
    |  |  |        |        +--:(path-ref)
    |  |  |        |        |  +-- primary-path-ref    leafref
    |  |  |        |        +--:(path-request-ref)
    |  |  |        |           +-- path-request-ref    leafref
    |  |  |        +--:(secondary-reverse-path)
    |  |  |           +-- secondary-reverse-path
    |  |  |              +-- protection-type?            identityref
    |  |  |              +-- restoration-type?           identityref
    |  |  |              +-- restoration-scheme?         identityref
    |  |  |              +-- primary-reverse-path-ref* []
    |  |  |                 +-- (primary-reverse-path-exist)?
    |  |  |                    +--:(path-ref)
    |  |  |                    |  +-- primary-path-ref    leafref
    |  |  |                    +--:(path-request-ref)
    |  |  |                       +-- path-request-ref    leafref
    |  |  +--:(value)
    |  |     +-- tunnel-name?                    string
    |  |     +-- path-name?                      string
    |  |     +-- (path-role)?
    |  |     |  +--:(primary-path)
    |  |     |  +--:(secondary-path)
    |  |     |  |  +-- secondary-path!
    |  |     |  |     +-- primary-path-name?   string
    |  |     |  +--:(primary-reverse-path)
    |  |     |  |  +-- primary-reverse-path!
    |  |     |  |     +-- primary-path-name?   string
    |  |     |  +--:(secondary-reverse-path)
    |  |     |     +-- secondary-reverse-path!
    |  |     |        +-- primary-path-name?           string
    |  |     |        +-- primary-reverse-path-name?   string
    |  |     +-- k-requested-paths?              uint8
    |  |     +-- encoding?                       identityref
    |  |     +-- switching-type?                 identityref
    |  |     +-- source?                         te-types:te-node-id
    |  |     +-- destination?                    te-types:te-node-id
    |  |     +-- src-tunnel-tp-id?               binary
    |  |     +-- dst-tunnel-tp-id?               binary
    |  |     +-- bidirectional?                  boolean
    |  |     +-- te-topology-identifier
    |  |        +-- provider-id?   te-global-id
    |  |        +-- client-id?     te-global-id
    |  |        +-- topology-id?   te-topology-id
    |  +-- association-objects
    |  |  +-- association-object* [association-key]
    |  |  |  +-- association-key    string
    |  |  |  +-- type?              identityref
    |  |  |  +-- id?                uint16
    |  |  |  +-- source
    |  |  |     +-- id?     te-gen-node-id
    |  |  |     +-- type?   enumeration
    |  |  +-- association-object-extended* [association-key]
    |  |     +-- association-key    string
    |  |     +-- type?              identityref
    |  |     +-- id?                uint16
    |  |     +-- source
    |  |     |  +-- id?     te-gen-node-id
    |  |     |  +-- type?   enumeration
    |  |     +-- global-source?     uint32
    |  |     +-- extended-id?       yang:hex-string
    |  +-- optimizations
    |  |  +-- (algorithm)?
    |  |     +--:(metric) {path-optimization-metric}?
    |  |     |  +-- optimization-metric* [metric-type]
    |  |     |  |  +-- metric-type                       identityref
    |  |     |  |  +-- weight?                           uint8
    |  |     |  |  +-- explicit-route-exclude-objects
    |  |     |  |  |  +-- route-object-exclude-object* [index]
    |  |     |  |  |     +-- index                        uint32
    |  |     |  |  |     +-- (type)?
    |  |     |  |  |        +--:(numbered-node-hop)
    |  |     |  |  |        |  +-- numbered-node-hop
    |  |     |  |  |        |     +-- node-id     te-node-id
    |  |     |  |  |        |     +-- hop-type?   te-hop-type
    |  |     |  |  |        +--:(numbered-link-hop)
    |  |     |  |  |        |  +-- numbered-link-hop
    |  |     |  |  |        |     +-- link-tp-id    te-tp-id
    |  |     |  |  |        |     +-- hop-type?     te-hop-type
    |  |     |  |  |        |     +-- direction?    te-link-direction
    |  |     |  |  |        +--:(unnumbered-link-hop)
    |  |     |  |  |        |  +-- unnumbered-link-hop
    |  |     |  |  |        |     +-- link-tp-id    te-tp-id
    |  |     |  |  |        |     +-- node-id       te-node-id
    |  |     |  |  |        |     +-- hop-type?     te-hop-type
    |  |     |  |  |        |     +-- direction?    te-link-direction
    |  |     |  |  |        +--:(as-number)
    |  |     |  |  |        |  +-- as-number-hop
    |  |     |  |  |        |     +-- as-number    inet:as-number
    |  |     |  |  |        |     +-- hop-type?    te-hop-type
    |  |     |  |  |        +--:(label)
    |  |     |  |  |        |  +-- label-hop
    |  |     |  |  |        |     +-- te-label
    |  |     |  |  |        |        +-- (technology)?
    |  |     |  |  |        |        |  +--:(generic)
    |  |     |  |  |        |        |     +-- generic?
    |  |     |  |  |        |        |             rt-types:generalized-label
    |  |     |  |  |        |        +-- direction?
    |  |     |  |  |        |                te-label-direction
    |  |     |  |  |        +--:(srlg)
    |  |     |  |  |           +-- srlg
    |  |     |  |  |              +-- srlg?   uint32
    |  |     |  |  +-- explicit-route-include-objects
    |  |     |  |     +-- route-object-include-object* [index]
    |  |     |  |        +-- index                        uint32
    |  |     |  |        +-- (type)?
    |  |     |  |           +--:(numbered-node-hop)
    |  |     |  |           |  +-- numbered-node-hop
    |  |     |  |           |     +-- node-id     te-node-id
    |  |     |  |           |     +-- hop-type?   te-hop-type
    |  |     |  |           +--:(numbered-link-hop)
    |  |     |  |           |  +-- numbered-link-hop
    |  |     |  |           |     +-- link-tp-id    te-tp-id
    |  |     |  |           |     +-- hop-type?     te-hop-type
    |  |     |  |           |     +-- direction?    te-link-direction
    |  |     |  |           +--:(unnumbered-link-hop)
    |  |     |  |           |  +-- unnumbered-link-hop
    |  |     |  |           |     +-- link-tp-id    te-tp-id
    |  |     |  |           |     +-- node-id       te-node-id
    |  |     |  |           |     +-- hop-type?     te-hop-type
    |  |     |  |           |     +-- direction?    te-link-direction
    |  |     |  |           +--:(as-number)
    |  |     |  |           |  +-- as-number-hop
    |  |     |  |           |     +-- as-number    inet:as-number
    |  |     |  |           |     +-- hop-type?    te-hop-type
    |  |     |  |           +--:(label)
    |  |     |  |              +-- label-hop
    |  |     |  |                 +-- te-label
    |  |     |  |                    +-- (technology)?
    |  |     |  |                    |  +--:(generic)
    |  |     |  |                    |     +-- generic?
    |  |     |  |                    |             rt-types:generalized-label
    |  |     |  |                    +-- direction?
    |  |     |  |                            te-label-direction
    |  |     |  +-- tiebreakers
    |  |     |     +-- tiebreaker* [tiebreaker-type]
    |  |     |        +-- tiebreaker-type    identityref
    |  |     +--:(objective-function)
    |  |              {path-optimization-objective-function}?
    |  |        +-- objective-function
    |  |           +-- objective-function-type?   identityref
    |  +-- named-path-constraint?                leafref
    |  |       {te-types:named-path-constraints}?
    |  +-- te-bandwidth
    |  |  +-- (technology)?
    |  |     +--:(generic)
    |  |        +-- generic?   te-bandwidth
    |  +-- link-protection?                      identityref
    |  +-- setup-priority?                       uint8
    |  +-- hold-priority?                        uint8
    |  +-- signaling-type?                       identityref
    |  +-- path-metric-bounds
    |  |  +-- path-metric-bound* [metric-type]
    |  |     +-- metric-type    identityref
    |  |     +-- upper-bound?   uint64
    |  +-- path-affinities-values
    |  |  +-- path-affinities-value* [usage]
    |  |     +-- usage    identityref
    |  |     +-- value?   admin-groups
    |  +-- path-affinity-names
    |  |  +-- path-affinity-name* [usage]
    |  |     +-- usage            identityref
    |  |     +-- affinity-name* [name]
    |  |        +-- name    string
    |  +-- path-srlgs-lists
    |  |  +-- path-srlgs-list* [usage]
    |  |     +-- usage     identityref
    |  |     +-- values*   srlg
    |  +-- path-srlgs-names
    |  |  +-- path-srlgs-name* [usage]
    |  |     +-- usage    identityref
    |  |     +-- names*   string
    |  +-- disjointness?                         te-path-disjointness
    |  +-- explicit-route-objects-always
    |  |  +-- route-object-exclude-always* [index]
    |  |  |  +-- index                        uint32
    |  |  |  +-- (type)?
    |  |  |     +--:(numbered-node-hop)
    |  |  |     |  +-- numbered-node-hop
    |  |  |     |     +-- node-id     te-node-id
    |  |  |     |     +-- hop-type?   te-hop-type
    |  |  |     +--:(numbered-link-hop)
    |  |  |     |  +-- numbered-link-hop
    |  |  |     |     +-- link-tp-id    te-tp-id
    |  |  |     |     +-- hop-type?     te-hop-type
    |  |  |     |     +-- direction?    te-link-direction
    |  |  |     +--:(unnumbered-link-hop)
    |  |  |     |  +-- unnumbered-link-hop
    |  |  |     |     +-- link-tp-id    te-tp-id
    |  |  |     |     +-- node-id       te-node-id
    |  |  |     |     +-- hop-type?     te-hop-type
    |  |  |     |     +-- direction?    te-link-direction
    |  |  |     +--:(as-number)
    |  |  |     |  +-- as-number-hop
    |  |  |     |     +-- as-number    inet:as-number
    |  |  |     |     +-- hop-type?    te-hop-type
    |  |  |     +--:(label)
    |  |  |        +-- label-hop
    |  |  |           +-- te-label
    |  |  |              +-- (technology)?
    |  |  |              |  +--:(generic)
    |  |  |              |     +-- generic?
    |  |  |              |             rt-types:generalized-label
    |  |  |              +-- direction?       te-label-direction
    |  |  +-- route-object-include-exclude* [index]
    |  |     +-- explicit-route-usage?        identityref
    |  |     +-- index                        uint32
    |  |     +-- (type)?
    |  |        +--:(numbered-node-hop)
    |  |        |  +-- numbered-node-hop
    |  |        |     +-- node-id     te-node-id
    |  |        |     +-- hop-type?   te-hop-type
    |  |        +--:(numbered-link-hop)
    |  |        |  +-- numbered-link-hop
    |  |        |     +-- link-tp-id    te-tp-id
    |  |        |     +-- hop-type?     te-hop-type
    |  |        |     +-- direction?    te-link-direction
    |  |        +--:(unnumbered-link-hop)
    |  |        |  +-- unnumbered-link-hop
    |  |        |     +-- link-tp-id    te-tp-id
    |  |        |     +-- node-id       te-node-id
    |  |        |     +-- hop-type?     te-hop-type
    |  |        |     +-- direction?    te-link-direction
    |  |        +--:(as-number)
    |  |        |  +-- as-number-hop
    |  |        |     +-- as-number    inet:as-number
    |  |        |     +-- hop-type?    te-hop-type
    |  |        +--:(label)
    |  |        |  +-- label-hop
    |  |        |     +-- te-label
    |  |        |        +-- (technology)?
    |  |        |        |  +--:(generic)
    |  |        |        |     +-- generic?
    |  |        |        |             rt-types:generalized-label
    |  |        |        +-- direction?       te-label-direction
    |  |        +--:(srlg)
    |  |           +-- srlg
    |  |              +-- srlg?   uint32
    |  +-- path-in-segment!
    |  |  +-- label-restrictions
    |  |     +-- label-restriction* [index]
    |  |        +-- restriction?    enumeration
    |  |        +-- index           uint32
    |  |        +-- label-start
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-end
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-step
    |  |        |  +-- (technology)?
    |  |        |     +--:(generic)
    |  |        |        +-- generic?   int32
    |  |        +-- range-bitmap?   yang:hex-string
    |  +-- path-out-segment!
    |  |  +-- label-restrictions
    |  |     +-- label-restriction* [index]
    |  |        +-- restriction?    enumeration
    |  |        +-- index           uint32
    |  |        +-- label-start
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-end
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-step
    |  |        |  +-- (technology)?
    |  |        |     +--:(generic)
    |  |        |        +-- generic?   int32
    |  |        +-- range-bitmap?   yang:hex-string
    |  +-- requested-metrics* [metric-type]
    |  |  +-- metric-type    identityref
    |  +-- return-srlgs?                         boolean
    |  +-- return-affinities?                    boolean
    |  +-- requested-state!
    |     +-- timer?            uint16
    |     +-- transaction-id?   string
    +-- tunnel-attributes* [tunnel-name]
    |  +-- tunnel-name               string
    |  +-- encoding?                 identityref
    |  +-- switching-type?           identityref
    |  +-- source?                   te-types:te-node-id
    |  +-- destination?              te-types:te-node-id
    |  +-- src-tunnel-tp-id?         binary
    |  +-- dst-tunnel-tp-id?         binary
    |  +-- bidirectional?            boolean
    |  +-- association-objects
    |  |  +-- association-object* [association-key]
    |  |  |  +-- association-key    string
    |  |  |  +-- type?              identityref
    |  |  |  +-- id?                uint16
    |  |  |  +-- source
    |  |  |     +-- id?     te-gen-node-id
    |  |  |     +-- type?   enumeration
    |  |  +-- association-object-extended* [association-key]
    |  |     +-- association-key    string
    |  |     +-- type?              identityref
    |  |     +-- id?                uint16
    |  |     +-- source
    |  |     |  +-- id?     te-gen-node-id
    |  |     |  +-- type?   enumeration
    |  |     +-- global-source?     uint32
    |  |     +-- extended-id?       yang:hex-string
    |  +-- protection-type?          identityref
    |  +-- restoration-type?         identityref
    |  +-- restoration-scheme?       identityref
    |  +-- te-topology-identifier
    |  |  +-- provider-id?   te-global-id
    |  |  +-- client-id?     te-global-id
    |  |  +-- topology-id?   te-topology-id
    |  +-- te-bandwidth
    |  |  +-- (technology)?
    |  |     +--:(generic)
    |  |        +-- generic?   te-bandwidth
    |  +-- link-protection?          identityref
    |  +-- setup-priority?           uint8
    |  +-- hold-priority?            uint8
    |  +-- signaling-type?           identityref
    |  +-- hierarchy
    |     +-- dependency-tunnels
    |     |  +-- dependency-tunnel* [name]
    |     |  |  +-- name              -> /te:te/tunnels/tunnel/name
    |     |  |  +-- encoding?         identityref
    |     |  |  +-- switching-type?   identityref
    |     |  +-- dependency-tunnel-attributes* [name]
    |     |     +-- name              leafref
    |     |     +-- encoding?         identityref
    |     |     +-- switching-type?   identityref
    |     +-- hierarchical-link
    |        +-- local-te-node-id?         te-types:te-node-id
    |        +-- local-te-link-tp-id?      te-types:te-tp-id
    |        +-- remote-te-node-id?        te-types:te-node-id
    |        +-- te-topology-identifier
    |           +-- provider-id?   te-global-id
    |           +-- client-id?     te-global-id
    |           +-- topology-id?   te-topology-id
    +-- synchronization* []
       +-- svec
       |  +-- relaxable?      boolean
       |  +-- disjointness?   te-path-disjointness
       |  +-- request-id*     uint32
       +-- svec-constraints
       |  +-- path-metric-bound* [metric-type]
       |     +-- metric-type    identityref
       |     +-- upper-bound?   uint64
       +-- path-srlgs-lists
       |  +-- path-srlgs-list* [usage]
       |     +-- usage     identityref
       |     +-- values*   srlg
       +-- path-srlgs-names
       |  +-- path-srlgs-name* [usage]
       |     +-- usage    identityref
       |     +-- names*   string
       +-- exclude-objects
       |  +-- excludes* []
       |     +-- (type)?
       |        +--:(numbered-node-hop)
       |        |  +-- numbered-node-hop
       |        |     +-- node-id     te-node-id
       |        |     +-- hop-type?   te-hop-type
       |        +--:(numbered-link-hop)
       |        |  +-- numbered-link-hop
       |        |     +-- link-tp-id    te-tp-id
       |        |     +-- hop-type?     te-hop-type
       |        |     +-- direction?    te-link-direction
       |        +--:(unnumbered-link-hop)
       |        |  +-- unnumbered-link-hop
       |        |     +-- link-tp-id    te-tp-id
       |        |     +-- node-id       te-node-id
       |        |     +-- hop-type?     te-hop-type
       |        |     +-- direction?    te-link-direction
       |        +--:(as-number)
       |        |  +-- as-number-hop
       |        |     +-- as-number    inet:as-number
       |        |     +-- hop-type?    te-hop-type
       |        +--:(label)
       |           +-- label-hop
       |              +-- te-label
       |                 +-- (technology)?
       |                 |  +--:(generic)
       |                 |     +-- generic?
       |                 |             rt-types:generalized-label
       |                 +-- direction?       te-label-direction
       +-- optimizations
          +-- (algorithm)?
             +--:(metric) {te-types:path-optimization-metric}?
             |  +-- optimization-metric* [metric-type]
             |     +-- metric-type    identityref
             |     +-- weight?        uint8
             +--:(objective-function)
                      {te-types:path-optimization-objective-function}?
                +-- objective-function
                   +-- objective-function-type?   identityref
  augment /te:tunnels-path-compute/te:output/te:path-compute-result:
    +--ro response* [response-id]
       +--ro response-id                         uint32
       +--ro computed-paths-properties
       |  +--ro computed-path-properties* [k-index]
       |     +--ro k-index            uint8
       |     +--ro path-properties
       |        +--ro path-metric* [metric-type]
       |        |  +--ro metric-type           identityref
       |        |  +--ro accumulative-value?   uint64
       |        +--ro path-affinities-values
       |        |  +--ro path-affinities-value* [usage]
       |        |     +--ro usage    identityref
       |        |     +--ro value?   admin-groups
       |        +--ro path-affinity-names
       |        |  +--ro path-affinity-name* [usage]
       |        |     +--ro usage            identityref
       |        |     +--ro affinity-name* [name]
       |        |        +--ro name    string
       |        +--ro path-srlgs-lists
       |        |  +--ro path-srlgs-list* [usage]
       |        |     +--ro usage     identityref
       |        |     +--ro values*   srlg
       |        +--ro path-srlgs-names
       |        |  +--ro path-srlgs-name* [usage]
       |        |     +--ro usage    identityref
       |        |     +--ro names*   string
       |        +--ro path-route-objects
       |        |  +--ro path-route-object* [index]
       |        |     +--ro index                        uint32
       |        |     +--ro (type)?
       |        |        +--:(numbered-node-hop)
       |        |        |  +--ro numbered-node-hop
       |        |        |     +--ro node-id     te-node-id
       |        |        |     +--ro hop-type?   te-hop-type
       |        |        +--:(numbered-link-hop)
       |        |        |  +--ro numbered-link-hop
       |        |        |     +--ro link-tp-id    te-tp-id
       |        |        |     +--ro hop-type?     te-hop-type
       |        |        |     +--ro direction?    te-link-direction
       |        |        +--:(unnumbered-link-hop)
       |        |        |  +--ro unnumbered-link-hop
       |        |        |     +--ro link-tp-id    te-tp-id
       |        |        |     +--ro node-id       te-node-id
       |        |        |     +--ro hop-type?     te-hop-type
       |        |        |     +--ro direction?    te-link-direction
       |        |        +--:(as-number)
       |        |        |  +--ro as-number-hop
       |        |        |     +--ro as-number    inet:as-number
       |        |        |     +--ro hop-type?    te-hop-type
       |        |        +--:(label)
       |        |           +--ro label-hop
       |        |              +--ro te-label
       |        |                 +--ro (technology)?
       |        |                 |  +--:(generic)
       |        |                 |     +--ro generic?
       |        |                 |             rt-types:generalized-label
       |        |                 +--ro direction?
       |        |                         te-label-direction
       |        +--ro te-bandwidth
       |        |  +--ro (technology)?
       |        |     +--:(generic)
       |        |        +--ro generic?   te-bandwidth
       |        +--ro disjointness-type?
       |                te-types:te-path-disjointness
       +--ro computed-path-error-infos
       |  +--ro computed-path-error-info* []
       |     +--ro error-description?   string
       |     +--ro error-timestamp?     yang:date-and-time
       |     +--ro error-reason?        identityref
       +--ro tunnel-ref?                         te:tunnel-ref
       +--ro (path-role)?
          +--:(primary)
          |  +--ro primary-path-ref?             leafref
          +--:(primary-reverse)
          |  +--ro primary-reverse-path-ref?     leafref
          +--:(secondary)
          |  +--ro secondary-path-ref?           leafref
          +--:(secondary-reverse)
             +--ro secondary-reverse-path-ref?   leafref
  augment /te:tunnels-actions/te:input/te:tunnel-info/te:filter-type:
    +--:(path-compute-transactions)
       +-- path-compute-transaction-id*   string
  augment /te:tunnels-actions/te:output:
    +--ro path-computed-delete-result
       +--ro path-compute-transaction-id*   string
]]></artwork></figure>

</section>
<section anchor="pc-yang"><name>YANG module</name>

<figure title="TE path computation YANG module" anchor="fig-pc-yang"><sourcecode type="yang" markers="true" name="ietf-te-path-computation@2022-10-21.yang"><![CDATA[
module ietf-te-path-computation {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-te-path-computation";
  prefix te-pc;

  import ietf-te {
    prefix te;
    reference
      "RFCYYYY: A YANG Data Model for Traffic Engineering Tunnels
       and Interfaces";
  }

  /* Note: The RFC Editor will replace YYYY with the number assigned
     to the RFC once draft-ietf-teas-yang-te becomes an RFC.*/

  import ietf-te-types {
    prefix te-types;
    reference
      "RFC8776: Common YANG Data Types for Traffic Engineering.
      
      RFCZZZZ: Updated Common YANG Data Types for Traffic 
      Engineering";
  }

  /* Note: The RFC Editor will replace YYYY with the number assigned
     to the RFC once draft-ietf-teas-rfc8776-update becomes an RFC.*/

  organization
    "Traffic Engineering Architecture and Signaling (TEAS)
     Working Group";
  contact
    "WG Web: <https://datatracker.ietf.org/wg/teas/>
     WG List:  <mailto:teas@ietf.org>

     Editor:   Italo Busi
               <mailto:italo.busi@huawei.com>

     Editor:   Sergio Belotti
               <mailto:sergio.belotti@nokia.com>

     Editor:   Victor Lopez
               <mailto:victor.lopez@nokia.com>

     Editor:   Oscar Gonzalez de Dios
               <mailto:oscar.gonzalezdedios@telefonica.com>

     Editor:   Anurag Sharma
               <mailto:ansha@google.com>

     Editor:   Yan Shi
               <mailto:shiyan49@chinaunicom.cn>

     Editor:   Ricard Vilalta
               <mailto:ricard.vilalta@cttc.es>

     Editor:   Karthik Sethuraman
               <mailto:karthik.sethuraman@necam.com>

     Editor:   Michael Scharf
               <mailto:michael.scharf@gmail.com>

     Editor:   Daniele Ceccarelli
               <mailto:daniele.ceccarelli@ericsson.com>
     
    ";
  description
    "This module defines a YANG data model for requesting Traffic
     Engineering (TE) path computation. The YANG data model defined
     in this document augments the RPCs defined in the generic TE
     module (ietf-te).

     The model fully conforms to the
     Network Management Datastore Architecture (NMDA).

     Copyright (c) 2022 IETF Trust and the persons
     identified as authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with
     or without modification, is permitted pursuant to, and
     subject to the license terms contained in, the Revised
     BSD License set forth in Section 4.c of the IETF Trust's
     Legal Provisions Relating to IETF Documents
     (https://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC XXXX; see
     the RFC itself for full legal notices.

     The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL', 'SHALL
     NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'NOT RECOMMENDED',
     'MAY', and 'OPTIONAL' in this document are to be interpreted as
     described in BCP 14 (RFC 2119) (RFC 8174) when, and only when,
     they appear in all capitals, as shown here.";

  // RFC Ed.: replace XXXX with actual RFC number and remove
  // this note
  // replace the revision date with the module publication date
  // the format is (year-month-day)

  revision 2022-10-21 {
    description
      "Initial revision";
    reference
      "RFC XXXX: A YANG Data Model for requesting path computation";
  }

  // RFC Ed.: replace XXXX with actual RFC number and remove
  // this note

  /*
   * Identities
   */

  identity tunnel-action-path-compute-delete {
    base te-types:tunnel-actions-type;
    description
      "Action type to delete the transient states
      of computed paths, as described in section 3.3.1 of
      RFC XXXX.";
    reference
      "RFC XXXX: A YANG Data Model for requesting path computation";
  }

  /*
   * Groupings
   */

  grouping protection-restoration-properties {
    description
      "This grouping defines the restoration and protection types
       for a path in the path computation request.";
    leaf protection-type {
      type identityref {
        base te-types:lsp-protection-type;
      }
      default "te-types:lsp-protection-unprotected";
      description
        "LSP protection type.";
    }
    leaf restoration-type {
      type identityref {
        base te-types:lsp-restoration-type;
      }
      default "te-types:lsp-restoration-restore-any";
      description
        "LSP restoration type.";
    }
    leaf restoration-scheme {
      type identityref {
        base te-types:restoration-scheme-type;
      }
      default "te-types:restoration-scheme-preconfigured";
      description
        "LSP restoration scheme.";
    }
  } // grouping protection-restoration-properties

  grouping requested-info {
    description
      "This grouping defines the information which is requested
       (e.g., metrics), in the path computation request, to be
       returned in the path computation response.";
    list requested-metrics {
      key "metric-type";
      description
        "The list of the requested metrics.

         The metrics listed here MUST be returned in the response.
         Returning other metrics in the response is OPTIONAL.";
      leaf metric-type {
        type identityref {
          base te-types:path-metric-type;
        }
        description
          "The metric requested to be returned in the response";
      }
    }
    leaf return-srlgs {
      type boolean;
      default "false";
      description
        "If true, path Shared Risk Link Groups (SRLGs) MUST be
         returned in the response.
         If false, returning path SRLGs in the response OPTIONAL.";
    }
    leaf return-affinities {
      type boolean;
      default "false";
      description
        "If true, path affinities MUST be returned in the response.
         If false, returning path affinities in the response is
         OPTIONAL.";
    }
  } // grouping requested-info

  grouping requested-state {
    description
      "Configuration for the transient state used
       to report the computed path";
    container requested-state {
      presence
        "Request temporary reporting of the computed path state";
      description
        "Configures attributes for the temporary reporting of the
         computed path state (e.g., expiration timer).";
      leaf timer {
        type uint16;
        units "minutes";
        default "10";
        description
          "The timeout after which the transient state reporting
          the computed path SHOULD be removed.";
      }
      leaf transaction-id {
        type string;
        description
          "The transaction-id associated with this path computation
          to be used for fast deletion of the transient states
          associated with multiple path computations.

          This transaction-id can be used to explicitly delete all
          the transient states of all the computed paths associated
          with the same transaction-id.

          When one path associated with a transaction-id is setup,
          the transient states of all the other computed paths
          with the same transaction-id are automatically removed.

          If not specified, the transient state is removed only
          when the timer expires (when the timer is specified)
          or not created at all (stateless path computation,
          when the timer is not specified).";
      }
    }
  } // grouping requested-state

  grouping reported-state {
    description
      "This grouping defines the information, returned in the path
       computation response, reporting the transient state related
       to the computed path";
    leaf tunnel-ref {
      type te:tunnel-ref;
      description
        "
         Reference to the tunnel that reports the transient state
         of the computed path.

         If no transient state is created, this attribute is
         omitted.
        ";
    }
    choice path-role {
      description
        "The transient state of the computed path can be reported
         as a primary, primary-reverse, secondary or
         a secondary-reverse path of a te-tunnel";
      case primary {
        leaf primary-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:primary-paths/te:primary-path/"
               + "te:name";
          }
          must '../tunnel-ref' {
            description
              "The primary-path name can only be reported
               if the tunnel name is also reported.";
          }
          description
            "
             Reference to the primary-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case primary
      case primary-reverse {
        leaf primary-reverse-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:primary-paths/te:primary-path/"
               + "te:name";
          }
          must '../tunnel-ref' {
            description
              "The primary-reverse-path name can only be reported
               if the tunnel name is also reported.";
          }
          description
            "
             Reference to the primary-reverse-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case primary-reverse
      case secondary {
        leaf secondary-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:secondary-paths/te:secondary-path/"
               + "te:name";
          }
          must '../tunnel-ref' {
            description
              "The secondary-path name can only be reported
               if the tunnel name is also reported.";
          }
          description
            "
             Reference to the secondary-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case secondary
      case secondary-reverse {
        leaf secondary-reverse-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:secondary-reverse-paths/"
               + "te:secondary-reverse-path/te:name";
          }
          must '../tunnel-ref' {
            description
              "The secondary-reverse-path name can only be reported
               if the tunnel name is also reported.";
          }
          description
            "
             Reference to the secondary-reverse-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case secondary
    } // choice path
  } // grouping reported-state

  grouping synchronization-constraints {
    description
      "Global constraints applicable to synchronized path
       computation requests.";
    container svec-constraints {
      description
        "global svec constraints";
      list path-metric-bound {
        key "metric-type";
        description
          "list of bound metrics";
        leaf metric-type {
          type identityref {
            base te-types:svec-metric-type;
          }
          description
            "SVEC metric type.";
          reference
            "RFC5541: Encoding of Objective Functions in the Path
            Computation Element Communication Protocol (PCEP).";
        }
        leaf upper-bound {
          type uint64;
          description
            "Upper bound on SVEC metric";
        }
      }
    }
    uses te-types:generic-path-srlgs;
    container exclude-objects {
      description
        "Resources to be excluded";
      list excludes {
        description
          "List of Explicit Route Objects to always exclude
           from synchronized path computation";
        uses te-types:explicit-route-hop;
      }
    }
  } // grouping synchronization-constraints

  grouping synchronization-optimization {
    description
      "Optimizations applicable to synchronized path
       computation requests.";
    container optimizations {
      description
        "The objective function container that includes attributes
         to impose when computing a synchronized set of paths";
      choice algorithm {
        description
          "Optimizations algorithm.";
        case metric {
          if-feature "te-types:path-optimization-metric";
          list optimization-metric {
            key "metric-type";
            description
              "svec path metric type";
            leaf metric-type {
              type identityref {
                base te-types:svec-metric-type;
              }
              description
                "TE path metric type usable for computing a set of
                synchronized requests";
            }
            leaf weight {
              type uint8;
              description
                "Metric normalization weight";
            }
          }
        }
        case objective-function {
          if-feature
            "te-types:path-optimization-objective-function";
          container objective-function {
            description
              "The objective function container that includes
               attributes to impose when computing a TE path";
            leaf objective-function-type {
              type identityref {
                base te-types:svec-objective-function-type;
              }
              description
                "Objective function entry";
            }
          }
        }
      }
    }
  } // grouping synchronization-optimization

  grouping synchronization-info {
    description
      "Information for synchronized path computation requests.";
    list synchronization {
      description
        "List of Synchronization VECtors.";
      container svec {
        description
          "Synchronization VECtor";
        leaf relaxable {
          type boolean;
          default "true";
          description
            "If this leaf is true, taking into account this svec is
             OPTIONAL and the path computation process is
             free to ignore svec content.
             Otherwise, it MUST take into account this svec.";
        }
        uses te-types:generic-path-disjointness;
        leaf-list request-id {
          type uint32;
          description
            "This list reports the set of path computation
             requests that are requested to be synchronized.";
        }
      }
      uses synchronization-constraints;
      uses synchronization-optimization;
    }
  } // grouping synchronization-info

  /*
   * Augment TE RPCs
   */

  augment "/te:tunnels-path-compute/te:input/te:path-compute-info" {
    description
      "Augments Path Computation RPC input";
    list path-request {
      key "request-id";
      description
        "The list of the requested paths to be computed";
      leaf request-id {
        type uint32;
        mandatory true;
        description
          "Each path computation request is uniquely identified
           within the RPC request by the request-id.";
      }
      choice tunnel-attributes {
        default "value";
        description
          "Whether the tunnel attributes are specified by value
           within this path computation request or by reference.
           The reference could be either to an existing te-tunnel
           or to an entry in the tunnel-attributes list";
        case reference {
          container tunnel-reference {
            description
              "Attributes for a requested path that belongs to
              either an exiting te-tunnel or to an entry in the
              tunnel-attributes list.";
            choice tunnel-exist {
              description
                "Whether the tunnel reference is to an existing
                te-tunnel or to an entry in the tunnel-attributes
                list";
              case tunnel-ref {
                leaf tunnel-ref {
                  type te:tunnel-ref;
                  mandatory true;
                  description
                    "The referenced te-tunnel instance";
                }
              } // case tunnel-ref
              case tunnel-attributes-ref {
                leaf tunnel-attributes-ref {
                  type leafref {
                    path "/te:tunnels-path-compute/"
                      + "te:path-compute-info/"
                      + "te-pc:tunnel-attributes/te-pc:tunnel-name";
                  }
                  mandatory true;
                  description
                    "The referenced te-tunnel instance";
                }
              } // case tunnel-attributes-ref 
            } // choice tunnel-exist
            leaf path-name {
              type string;
              description
                "TE path name.";
            }
            choice path-role {
              mandatory true;
              description
                "Whether this path is a primary, or a reverse
                primary, or a secondary, or a reverse secondary
                path.";
              case primary-path {
                container primary-path {
                  presence "Indicates that the requested path
                            is a primary path";
                  description
                    "TE primary path";
                  uses te:path-forward-properties;
                  uses te:k-requested-paths;
                } // container primary-path
              } // case primary-path
              case secondary-path {
                container secondary-path {
                  description
                    "TE secondary path";
                  uses te:path-forward-properties;
                  uses protection-restoration-properties;
                  list primary-path-ref {
                    min-elements 1;
                    description
                      "The list of primary paths that reference
                      this path as a candidate secondary path";
                    choice primary-path-exist {
                      description
                        "Whether the path reference is to an existing
                        te-tunnel path or to another path request";
                      case path-ref {
                        leaf primary-path-ref {
                          type leafref {
                            path "/te:te/te:tunnels/te:tunnel"
                              + "[te:name=current()/../../../"
                              + "tunnel-ref]/te:primary-paths/"
                              + "te:primary-path/te:name";
                          }
                          must '../../../tunnel-ref' {
                            description
                              "The primary-path can be referenced
                              if also the tunnel is referenced.";
                          }
                          mandatory true;
                          description
                            "The referenced primary path";
                        }
                      } // case path-ref
                      case path-request-ref {
                        leaf path-request-ref {
                          type leafref {
                            path "/te:tunnels-path-compute/"
                              + "te:path-compute-info/"
                              + "te-pc:path-request/"
                              + "te-pc:request-id";
                          }
                          mandatory true;
                          description
                            "The referenced primary path request";
                        }
                      } // case path-request-ref 
                    } // choice primary-path-exist
                  } // list primary-path-ref
                } // container secondary-path
              } // case secondary-path
              case primary-reverse-path {
                container primary-reverse-path {
                  description
                    "TE primary reverse path";
                  choice primary-path-exist {
                    description
                      "Whether the path reference to the primary
                      paths for which this path is the reverse-path
                      is to an existing te-tunnel path or to
                      another path request.";
                    case path-ref {
                      leaf primary-path-ref {
                        type leafref {
                          path "/te:te/te:tunnels/te:tunnel[te:name"
                            + "=current()/../../tunnel-ref]/"
                            + "te:primary-paths/te:primary-path/"
                            + "te:name";
                        }
                        must '../../tunnel-ref' {
                          description
                            "The primary-path can be referenced
                            if also the tunnel is referenced.";
                        }
                        mandatory true;
                        description
                          "The referenced primary path";
                      }
                    } // case path-ref
                    case path-request-ref {
                      leaf path-request-ref {
                        type leafref {
                          path "/te:tunnels-path-compute/"
                            + "te:path-compute-info/"
                            + "te-pc:path-request/"
                            + "te-pc:request-id";
                        }
                        mandatory true;
                        description
                          "The referenced primary path request";
                      }
                    } // case path-request-ref 
                  } // choice primary-path-exist
                } // container primary-reverse-path
              } // case primary-reverse-path
              case secondary-reverse-path {
                container secondary-reverse-path {
                  description
                    "TE secondary reverse path";
                  // uses te:path-preference;
                  uses protection-restoration-properties;
                  list primary-reverse-path-ref {
                    min-elements 1;
                    description
                      "The list of primary reverse paths that
                      reference this path as a candidate
                      secondary reverse path";
                    choice primary-reverse-path-exist {
                      description
                        "Whether the path reference is to an existing
                        te-tunnel path or to another path request";
                      case path-ref {
                        leaf primary-path-ref {
                          type leafref {
                            path "/te:te/te:tunnels/te:tunnel"
                              + "[te:name=current()/../../../"
                              + "tunnel-ref]/te:primary-paths/"
                              + "te:primary-path/te:name";
                          }
                          must '../../../tunnel-ref' {
                            description
                              "The primary-path can be referenced
                              if also the tunnel is referenced.";
                          }
                          mandatory true;
                          description
                            "The referenced primary path";
                        }
                      } // case path-ref
                      case path-request-ref {
                        leaf path-request-ref {
                          type leafref {
                            path "/te:tunnels-path-compute/"
                              + "te:path-compute-info/"
                              + "te-pc:path-request/"
                              + "te-pc:request-id";
                          }
                          mandatory true;
                          description
                            "The referenced primary reverse path
                            request";
                        }
                      } // case path-request-ref 
                    } // choice primary-reverse-path-exist
                  } // list primary-reverse-path-ref
                } // container secondary-reverse-path
              } // case secondary-reverse-path
            } // choice tunnel-path-role
          }
        } // case reference
        case value {
          leaf tunnel-name {
            type string;
            description
              "TE tunnel name.";
          }
          leaf path-name {
            type string;
            description
              "TE path name.";
          }
          choice path-role {
            when 'not (./source) and not (./destination) and
                  not (./src-tunnel-tp-id) and
                  not (./dst-tunnel-tp-id)' {
              description
                "When the tunnel attributes are specified by value
                within this path computation, it is assumed that the
                requested path will be the only path of a tunnel.

                If the requested path is a transit segment path
                (i.e., the source, src-tp-id, destination and
                dst-tp-id attributes are empty), it
                could be of any type. Otherwise it could only be a
                primary path.";
            }
            default primary-path;
            description
              "Indicates whether the requested path is a primary
              path, a secondary path, a reverse primary path or a
              reverse secondary path.";
            case primary-path {
              description
                "The requested path is a primary path.";
            }
            container secondary-path {
              presence
                "Indicates that the requested path is a secondary
                path.";
              description
                "The name of the primary path which the requested
                secondary path belongs to.";
              leaf primary-path-name {
                type string;
                description
                  "TE primary path name.";
              }
            } // container secondary-path
            container primary-reverse-path {
              presence
                "Indicates that the requested path is a primary
                reverse path.";
              description
                "The name of the primary path which the requested
                primary reverse path belongs to.";
              leaf primary-path-name {
                type string;
                description
                  "TE primary path name.";
              }
            } // container primary-reverse-path
            container secondary-reverse-path {
              presence
                "Indicates that the requested path is a secondary
                reverse path.";
              description
                "The names of the primary path and of the primary
                reverse path which the requested secondary reverse
                path belongs to.";
              leaf primary-path-name {
                type string;
                description
                  "TE primary path name.";
              }
              leaf primary-reverse-path-name {
                type string;
                description
                  "TE primary reverse path name.";
              }
            } // container primary-reverse-path
          } // choice path-role
          uses te:k-requested-paths;
          uses te:encoding-and-switching-type;
          uses te:tunnel-common-attributes;
          uses te-types:te-topology-identifier;
        } // case value
      } // choice tunnel-attributes
      uses te:path-compute-info;
      uses requested-info;
      uses requested-state;
    }
    list tunnel-attributes {
      key "tunnel-name";
      description
        "Tunnel attributes common to multiple request paths";
      leaf tunnel-name {
        type string;
        description
          "TE tunnel name.";
      }
      uses te:encoding-and-switching-type;
      uses te:tunnel-common-attributes;
      uses te:tunnel-associations-properties;
      uses protection-restoration-properties;
      uses te-types:tunnel-constraints;
      uses te:tunnel-hierarchy-properties {
        augment "hierarchy/dependency-tunnels" {
          description
            "Augment with the list of dependency tunnel requests.";
          list dependency-tunnel-attributes {
            key "name";
            description
              "A tunnel request entry that this tunnel request can
               potentially depend on.";
            leaf name {
              type leafref {
                path "/te:tunnels-path-compute/"
                   + "te:path-compute-info/te-pc:tunnel-attributes/"
                   + "te-pc:tunnel-name";
              }
              description
                "Dependency tunnel request name.";
            }
            uses te:encoding-and-switching-type;
          }
        }
      }
    }
    uses synchronization-info;
  } // path-compute rpc input

  augment "/te:tunnels-path-compute/te:output/"
        + "te:path-compute-result" {
    description
      "Auguments Path Computation RPC output";
    list response {
      key "response-id";
      config false;
      description
        "response";
      leaf response-id {
        type uint32;
        description
          "The response-id has the same value of the
           corresponding request-id.";
      }
      uses te:path-computation-response;
      uses reported-state;
    }
  } // path-compute rpc output

  augment "/te:tunnels-actions/te:input/te:tunnel-info/"
        + "te:filter-type" {
    description
      "Augment Tunnels Action RPC input filter types";
    case path-compute-transactions {
      when "derived-from-or-self(../te:action-info/te:action, "
         + "'tunnel-action-path-compute-delete')";
      description
        "Path Delete RPC input";
      leaf-list path-compute-transaction-id {
        type string;
        description
          "The list of the transaction-id values of the
           transient states to be deleted";
      }
    }
  } // path-delete rpc input

  augment "/te:tunnels-actions/te:output" {
    description
      "Augment Tunnels Action RPC output with path delete result";
    container path-computed-delete-result {
      description
        "Path Delete RPC output";
      leaf-list path-compute-transaction-id {
        type string;
        description
          "The list of the transaction-id values of the
           transient states that have been successfully deleted";
      }
    }
  } // path-delete rpc output
}
]]></sourcecode></figure>

</section>
</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>This document describes use cases of requesting Path Computation
   using YANG data models, which could be used at the ABNO Control
   Interface <xref target="RFC7491"/> and/or between controllers in ACTN <xref target="RFC8453"/>. As
   such, it does not introduce any new security considerations compared
   to the ones related to YANG specification, ABNO specification and
   ACTN Framework defined in <xref target="RFC7950"/>, <xref target="RFC7491"/> and <xref target="RFC8453"/>.</t>

<t>The YANG module defined in this document is designed to be accessed via
   the NETCONF protocol <xref target="RFC6241"/> or RESTCONF protocol <xref target="RFC8040"/>. The
   lowest NETCONF layer is the secure transport layer, and the
   mandatory-to-implement secure transport is Secure Shell (SSH)
   <xref target="RFC6242"/>. The lowest RESTCONF layer is HTTPS, and the mandatory-to-
   implement secure transport is TLS <xref target="RFC8446"/>.</t>

<t>The Network Configuration Access Control Model (NACM) 
   <xref target="RFC8341"/> provides the means to
   restrict access for particular NETCONF or RESTCONF users to a
   preconfigured subset of all available NETCONF or RESTCONF protocol
   operations and content.</t>

<t>The YANG module defined in this document augments the "tunnels-path-compute" and the "tunnel-actions" RPCs defined in <xref target="I-D.ietf-teas-yang-te"/>. The security considerations provided in <xref target="I-D.ietf-teas-yang-te"/> are also applicable to the YANG module
   defined in this document.</t>

<t>Some of the RPC operations defined in this YANG module may be considered
   sensitive or vulnerable in some network environments.  It is thus
   important to control access to these operations. These are the
   operations and their sensitivity/vulnerability:</t>

<t>"te-pc:response/computed-paths-properties": provides the same information provided by the "te:computed-paths-properties" defined in <xref target="I-D.ietf-teas-yang-te"/>. The security considerations provided in <xref target="I-D.ietf-teas-yang-te"/> for the TE tunnel state apply also to this subtree.</t>

<t>"te-pc:response/te-pc:tunnel-ref", "te-pc:response/te-pc:primary-path-ref", "te-pc:response/te-pc:primary-reverse-path-ref", "te-pc:response/te-pc:secondary-path-ref" and "te-pc:response/te-pc:secondary-reverse-path-ref" provides a reference where the same information provided in "te-pc:response/computed-paths-properties" is temporarly stored with the operational datastore (see <xref target="temp-state"/>). Therefore access to this information does not provide any additional security issue that the information provided with "te-pc:response/computed-paths-properties".</t>

<t>"/te:tunnels-actions": the YANG model defined in this document augments this action with a new action type that allows deleting the transient states of computed paths (see <xref target="temp-state"/>). A malicious use of this action would have no impact on the paths carrying live traffic but it would preclude the client from using the "transient states" to request the set-up of exactly that path, if still available.</t>

<t>The security considerations spelled out in the
   YANG specification <xref target="RFC7950"/> apply for this document as well.</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>This document registers the following URIs in the "ns" subregistry
   within the "IETF XML registry" <xref target="RFC3688"/>.</t>

<figure><artwork><![CDATA[
      URI: urn:ietf:params:xml:ns:yang:ietf-te-path-computation
      Registrant Contact:  The IESG.
      XML: N/A, the requested URI is an XML namespace.
]]></artwork></figure>

<t>This document registers a YANG module in the "YANG Module Names"
   registry <xref target="RFC7950"/>.</t>

<figure><artwork><![CDATA[
      name:      ietf-te-path-computation
      namespace: urn:ietf:params:xml:ns:yang:ietf-te-path-computation
      prefix:    te-pc
      reference: this document
]]></artwork></figure>

</section>


  </middle>

  <back>


    <references title='Normative References'>





<reference anchor='RFC6241' target='https://www.rfc-editor.org/info/rfc6241'>
<front>
<title>Network Configuration Protocol (NETCONF)</title>
<author fullname='R. Enns' initials='R.' role='editor' surname='Enns'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'><organization/></author>
<author fullname='A. Bierman' initials='A.' role='editor' surname='Bierman'><organization/></author>
<date month='June' year='2011'/>
<abstract><t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices.  It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages.  The NETCONF protocol operations are realized as remote procedure calls (RPCs).  This document obsoletes RFC 4741.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6241'/>
<seriesInfo name='DOI' value='10.17487/RFC6241'/>
</reference>



<reference anchor='RFC8040' target='https://www.rfc-editor.org/info/rfc8040'>
<front>
<title>RESTCONF Protocol</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<date month='January' year='2017'/>
<abstract><t>This document describes an HTTP-based protocol that provides a programmatic interface for accessing data defined in YANG, using the datastore concepts defined in the Network Configuration Protocol (NETCONF).</t></abstract>
</front>
<seriesInfo name='RFC' value='8040'/>
<seriesInfo name='DOI' value='10.17487/RFC8040'/>
</reference>



<reference anchor='RFC8795' target='https://www.rfc-editor.org/info/rfc8795'>
<front>
<title>YANG Data Model for Traffic Engineering (TE) Topologies</title>
<author fullname='X. Liu' initials='X.' surname='Liu'><organization/></author>
<author fullname='I. Bryskin' initials='I.' surname='Bryskin'><organization/></author>
<author fullname='V. Beeram' initials='V.' surname='Beeram'><organization/></author>
<author fullname='T. Saad' initials='T.' surname='Saad'><organization/></author>
<author fullname='H. Shah' initials='H.' surname='Shah'><organization/></author>
<author fullname='O. Gonzalez de Dios' initials='O.' surname='Gonzalez de Dios'><organization/></author>
<date month='August' year='2020'/>
<abstract><t>This document defines a YANG data model for representing, retrieving, and manipulating Traffic Engineering (TE) Topologies. The model serves as a base model that other technology-specific TE topology models can augment.</t></abstract>
</front>
<seriesInfo name='RFC' value='8795'/>
<seriesInfo name='DOI' value='10.17487/RFC8795'/>
</reference>


<reference anchor='I-D.ietf-teas-yang-te'>
   <front>
      <title>A YANG Data Model for Traffic Engineering Tunnels, Label Switched Paths and Interfaces</title>
      <author fullname='Tarek Saad' initials='T.' surname='Saad'>
         <organization>Juniper Networks</organization>
      </author>
      <author fullname='Rakesh Gandhi' initials='R.' surname='Gandhi'>
         <organization>Cisco Systems Inc</organization>
      </author>
      <author fullname='Xufeng Liu' initials='X.' surname='Liu'>
         <organization>IBM Corporation</organization>
      </author>
      <author fullname='Vishnu Pavan Beeram' initials='V. P.' surname='Beeram'>
         <organization>Juniper Networks</organization>
      </author>
      <author fullname='Igor Bryskin' initials='I.' surname='Bryskin'>
         <organization>Individual</organization>
      </author>
      <author fullname='Oscar Gonzalez de Dios' initials='O. G.' surname='de Dios'>
         <organization>Telefonica</organization>
      </author>
      <date day='11' month='July' year='2022'/>
      <abstract>
	 <t>   This document defines a YANG data model for the provisioning and
   management of Traffic Engineering (TE) tunnels, Label Switched Paths
   (LSPs), and interfaces.  The model covers data that is independent of
   any technology or dataplane encapsulation and is divided into two
   YANG modules that cover device-specific, and device independent data.

   This model covers data for configuration, operational state, remote
   procedural calls, and event notifications.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-teas-yang-te-30'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-teas-yang-te-30.txt' type='TXT'/>
</reference>



<reference anchor='RFC7950' target='https://www.rfc-editor.org/info/rfc7950'>
<front>
<title>The YANG 1.1 Data Modeling Language</title>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<date month='August' year='2016'/>
<abstract><t>YANG is a data modeling language used to model configuration data, state data, Remote Procedure Calls, and notifications for network management protocols.  This document describes the syntax and semantics of version 1.1 of the YANG language.  YANG version 1.1 is a maintenance release of the YANG language, addressing ambiguities and defects in the original specification.  There are a small number of backward incompatibilities from YANG version 1.  This document also specifies the YANG mappings to the Network Configuration Protocol (NETCONF).</t></abstract>
</front>
<seriesInfo name='RFC' value='7950'/>
<seriesInfo name='DOI' value='10.17487/RFC7950'/>
</reference>



<reference anchor='RFC5440' target='https://www.rfc-editor.org/info/rfc5440'>
<front>
<title>Path Computation Element (PCE) Communication Protocol (PCEP)</title>
<author fullname='JP. Vasseur' initials='JP.' role='editor' surname='Vasseur'><organization/></author>
<author fullname='JL. Le Roux' initials='JL.' role='editor' surname='Le Roux'><organization/></author>
<date month='March' year='2009'/>
<abstract><t>This document specifies the Path Computation Element (PCE) Communication Protocol (PCEP) for communications between a Path Computation Client (PCC) and a PCE, or between two PCEs.  Such interactions include path computation requests and path computation replies as well as notifications of specific states related to the use of a PCE in the context of Multiprotocol Label Switching (MPLS) and Generalized MPLS (GMPLS) Traffic Engineering.  PCEP is designed to be flexible and extensible so as to easily allow for the addition of further messages and objects, should further requirements be expressed in the future.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5440'/>
<seriesInfo name='DOI' value='10.17487/RFC5440'/>
</reference>



<reference anchor='RFC7926' target='https://www.rfc-editor.org/info/rfc7926'>
<front>
<title>Problem Statement and Architecture for Information Exchange between Interconnected Traffic-Engineered Networks</title>
<author fullname='A. Farrel' initials='A.' role='editor' surname='Farrel'><organization/></author>
<author fullname='J. Drake' initials='J.' surname='Drake'><organization/></author>
<author fullname='N. Bitar' initials='N.' surname='Bitar'><organization/></author>
<author fullname='G. Swallow' initials='G.' surname='Swallow'><organization/></author>
<author fullname='D. Ceccarelli' initials='D.' surname='Ceccarelli'><organization/></author>
<author fullname='X. Zhang' initials='X.' surname='Zhang'><organization/></author>
<date month='July' year='2016'/>
<abstract><t>In Traffic-Engineered (TE) systems, it is sometimes desirable to establish an end-to-end TE path with a set of constraints (such as bandwidth) across one or more networks from a source to a destination.  TE information is the data relating to nodes and TE links that is used in the process of selecting a TE path.  TE information is usually only available within a network.  We call such a zone of visibility of TE information a domain.  An example of a domain may be an IGP area or an Autonomous System.</t><t>In order to determine the potential to establish a TE path through a series of connected networks, it is necessary to have available a certain amount of TE information about each network.  This need not be the full set of TE information available within each network but does need to express the potential of providing TE connectivity. This subset of TE information is called TE reachability information.</t><t>This document sets out the problem statement for the exchange of TE information between interconnected TE networks in support of end-to-end TE path establishment and describes the best current practice architecture to meet this problem statement.  For reasons that are explained in this document, this work is limited to simple TE constraints and information that determine TE reachability.</t></abstract>
</front>
<seriesInfo name='BCP' value='206'/>
<seriesInfo name='RFC' value='7926'/>
<seriesInfo name='DOI' value='10.17487/RFC7926'/>
</reference>



<reference anchor='RFC8340' target='https://www.rfc-editor.org/info/rfc8340'>
<front>
<title>YANG Tree Diagrams</title>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='L. Berger' initials='L.' role='editor' surname='Berger'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>This document captures the current syntax used in YANG module tree diagrams.  The purpose of this document is to provide a single location for this definition.  This syntax may be updated from time to time based on the evolution of the YANG language.</t></abstract>
</front>
<seriesInfo name='BCP' value='215'/>
<seriesInfo name='RFC' value='8340'/>
<seriesInfo name='DOI' value='10.17487/RFC8340'/>
</reference>


<reference anchor='I-D.ietf-teas-rfc8776-update'>
   <front>
      <title>Updated Common YANG Data Types for Traffic Engineering</title>
      <author fullname='Italo Busi' initials='I.' surname='Busi'>
         <organization>Huawei</organization>
      </author>
      <author fullname='Aihua Guo' initials='A.' surname='Guo'>
         <organization>Futurewei Technologies</organization>
      </author>
      <author fullname='Xufeng Liu' initials='X.' surname='Liu'>
         <organization>IBM Corporation</organization>
      </author>
      <author fullname='Tarek Saad' initials='T.' surname='Saad'>
         <organization>Juniper Networks</organization>
      </author>
      <author fullname='Rakesh Gandhi' initials='R.' surname='Gandhi'>
         <organization>Cisco Systems, Inc.</organization>
      </author>
      <author fullname='Vishnu Pavan Beeram' initials='V. P.' surname='Beeram'>
         <organization>Juniper Networks</organization>
      </author>
      <author fullname='Igor Bryskin' initials='I.' surname='Bryskin'>
         <organization>Individual</organization>
      </author>
      <date day='11' month='July' year='2022'/>
      <abstract>
	 <t>   This document defines few additional common data types and groupings
   in YANG data modeling language to be imported by modules that model
   Traffic Engineering (TE) configuration and state capabilities.

   This document updates RFC 8776 with a new revision of the module
   ietf-te-types.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-teas-rfc8776-update-00'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-teas-rfc8776-update-00.txt' type='TXT'/>
</reference>



<reference anchor='RFC5441' target='https://www.rfc-editor.org/info/rfc5441'>
<front>
<title>A Backward-Recursive PCE-Based Computation (BRPC) Procedure to Compute Shortest Constrained Inter-Domain Traffic Engineering Label Switched Paths</title>
<author fullname='JP. Vasseur' initials='JP.' role='editor' surname='Vasseur'><organization/></author>
<author fullname='R. Zhang' initials='R.' surname='Zhang'><organization/></author>
<author fullname='N. Bitar' initials='N.' surname='Bitar'><organization/></author>
<author fullname='JL. Le Roux' initials='JL.' surname='Le Roux'><organization/></author>
<date month='April' year='2009'/>
<abstract><t>The ability to compute shortest constrained Traffic Engineering Label Switched Paths (TE LSPs) in Multiprotocol Label Switching (MPLS) and Generalized MPLS (GMPLS) networks across multiple domains has been identified as a key requirement.  In this context, a domain is a collection of network elements within a common sphere of address management or path computational responsibility such as an IGP area or an Autonomous Systems.  This document specifies a procedure relying on the use of multiple Path Computation Elements (PCEs) to compute such inter-domain shortest constrained paths across a predetermined sequence of domains, using a backward-recursive path computation technique.  This technique preserves confidentiality across domains, which is sometimes required when domains are managed by different service providers.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5441'/>
<seriesInfo name='DOI' value='10.17487/RFC5441'/>
</reference>



<reference anchor='RFC5541' target='https://www.rfc-editor.org/info/rfc5541'>
<front>
<title>Encoding of Objective Functions in the Path Computation Element Communication Protocol (PCEP)</title>
<author fullname='JL. Le Roux' initials='JL.' surname='Le Roux'><organization/></author>
<author fullname='JP. Vasseur' initials='JP.' surname='Vasseur'><organization/></author>
<author fullname='Y. Lee' initials='Y.' surname='Lee'><organization/></author>
<date month='June' year='2009'/>
<abstract><t>The computation of one or a set of Traffic Engineering Label Switched Paths (TE LSPs) in MultiProtocol Label Switching (MPLS) and Generalized MPLS (GMPLS) networks is subject to a set of one or more specific optimization criteria, referred to as objective functions (e.g., minimum cost path, widest path, etc.).</t><t>In the Path Computation Element (PCE) architecture, a Path Computation Client (PCC) may want a path to be computed for one or more TE LSPs according to a specific objective function.  Thus, the PCC needs to instruct the PCE to use the correct objective function. Furthermore, it is possible that not all PCEs support the same set of objective functions; therefore, it is useful for the PCC to be able to automatically discover the set of objective functions supported by each PCE.</t><t>This document defines extensions to the PCE communication Protocol (PCEP) to allow a PCE to indicate the set of objective functions it supports.  Extensions are also defined so that a PCC can indicate in a path computation request the required objective function, and a PCE can report in a path computation reply the objective function that was used for path computation.</t><t>This document defines objective function code types for six objective functions previously listed in the PCE requirements work, and provides the definition of four new metric types that apply to a set of synchronized requests.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5541'/>
<seriesInfo name='DOI' value='10.17487/RFC5541'/>
</reference>



<reference anchor='RFC8776' target='https://www.rfc-editor.org/info/rfc8776'>
<front>
<title>Common YANG Data Types for Traffic Engineering</title>
<author fullname='T. Saad' initials='T.' surname='Saad'><organization/></author>
<author fullname='R. Gandhi' initials='R.' surname='Gandhi'><organization/></author>
<author fullname='X. Liu' initials='X.' surname='Liu'><organization/></author>
<author fullname='V. Beeram' initials='V.' surname='Beeram'><organization/></author>
<author fullname='I. Bryskin' initials='I.' surname='Bryskin'><organization/></author>
<date month='June' year='2020'/>
<abstract><t>This document defines a collection of common data types and groupings in YANG data modeling language. These derived common types and groupings are intended to be imported by modules that model Traffic Engineering (TE) configuration and state capabilities.</t></abstract>
</front>
<seriesInfo name='RFC' value='8776'/>
<seriesInfo name='DOI' value='10.17487/RFC8776'/>
</reference>



<reference anchor='RFC6242' target='https://www.rfc-editor.org/info/rfc6242'>
<front>
<title>Using the NETCONF Protocol over Secure Shell (SSH)</title>
<author fullname='M. Wasserman' initials='M.' surname='Wasserman'><organization/></author>
<date month='June' year='2011'/>
<abstract><t>This document describes a method for invoking and running the Network Configuration Protocol (NETCONF) within a Secure Shell (SSH) session as an SSH subsystem.  This document obsoletes RFC 4742.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6242'/>
<seriesInfo name='DOI' value='10.17487/RFC6242'/>
</reference>



<reference anchor='RFC8446' target='https://www.rfc-editor.org/info/rfc8446'>
<front>
<title>The Transport Layer Security (TLS) Protocol Version 1.3</title>
<author fullname='E. Rescorla' initials='E.' surname='Rescorla'><organization/></author>
<date month='August' year='2018'/>
<abstract><t>This document specifies version 1.3 of the Transport Layer Security (TLS) protocol.  TLS allows client/server applications to communicate over the Internet in a way that is designed to prevent eavesdropping, tampering, and message forgery.</t><t>This document updates RFCs 5705 and 6066, and obsoletes RFCs 5077, 5246, and 6961.  This document also specifies new requirements for TLS 1.2 implementations.</t></abstract>
</front>
<seriesInfo name='RFC' value='8446'/>
<seriesInfo name='DOI' value='10.17487/RFC8446'/>
</reference>



<reference anchor='RFC8341' target='https://www.rfc-editor.org/info/rfc8341'>
<front>
<title>Network Configuration Access Control Model</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>The standardization of network configuration interfaces for use with the Network Configuration Protocol (NETCONF) or the RESTCONF protocol requires a structured and secure operating environment that promotes human usability and multi-vendor interoperability.  There is a need for standard mechanisms to restrict NETCONF or RESTCONF protocol access for particular users to a preconfigured subset of all available NETCONF or RESTCONF protocol operations and content.  This document defines such an access control model.</t><t>This document obsoletes RFC 6536.</t></abstract>
</front>
<seriesInfo name='STD' value='91'/>
<seriesInfo name='RFC' value='8341'/>
<seriesInfo name='DOI' value='10.17487/RFC8341'/>
</reference>



<reference anchor='RFC3688' target='https://www.rfc-editor.org/info/rfc3688'>
<front>
<title>The IETF XML Registry</title>
<author fullname='M. Mealling' initials='M.' surname='Mealling'><organization/></author>
<date month='January' year='2004'/>
<abstract><t>This document describes an IANA maintained registry for IETF standards which use Extensible Markup Language (XML) related items such as Namespaces, Document Type Declarations (DTDs), Schemas, and Resource Description Framework (RDF) Schemas.</t></abstract>
</front>
<seriesInfo name='BCP' value='81'/>
<seriesInfo name='RFC' value='3688'/>
<seriesInfo name='DOI' value='10.17487/RFC3688'/>
</reference>




    </references>

    <references title='Informative References'>





<reference anchor='RFC7491' target='https://www.rfc-editor.org/info/rfc7491'>
<front>
<title>A PCE-Based Architecture for Application-Based Network Operations</title>
<author fullname='D. King' initials='D.' surname='King'><organization/></author>
<author fullname='A. Farrel' initials='A.' surname='Farrel'><organization/></author>
<date month='March' year='2015'/>
<abstract><t>Services such as content distribution, distributed databases, or inter-data center connectivity place a set of new requirements on the operation of networks.  They need on-demand and application-specific reservation of network connectivity, reliability, and resources (such as bandwidth) in a variety of network applications (such as point-to-point connectivity, network virtualization, or mobile back-haul) and in a range of network technologies from packet (IP/MPLS) down to optical.  An environment that operates to meet these types of requirements is said to have Application-Based Network Operations (ABNO).  ABNO brings together many existing technologies and may be seen as the use of a toolbox of existing components enhanced with a few new elements.</t><t>This document describes an architecture and framework for ABNO, showing how these components fit together.  It provides a cookbook of existing technologies to satisfy the architecture and meet the needs of the applications.</t></abstract>
</front>
<seriesInfo name='RFC' value='7491'/>
<seriesInfo name='DOI' value='10.17487/RFC7491'/>
</reference>



<reference anchor='RFC8453' target='https://www.rfc-editor.org/info/rfc8453'>
<front>
<title>Framework for Abstraction and Control of TE Networks (ACTN)</title>
<author fullname='D. Ceccarelli' initials='D.' role='editor' surname='Ceccarelli'><organization/></author>
<author fullname='Y. Lee' initials='Y.' role='editor' surname='Lee'><organization/></author>
<date month='August' year='2018'/>
<abstract><t>Traffic Engineered (TE) networks have a variety of mechanisms to facilitate the separation of the data plane and control plane.  They also have a range of management and provisioning protocols to configure and activate network resources.  These mechanisms represent key technologies for enabling flexible and dynamic networking.  The term &quot;Traffic Engineered network&quot; refers to a network that uses any connection-oriented technology under the control of a distributed or centralized control plane to support dynamic provisioning of end-to- end connectivity.</t><t>Abstraction of network resources is a technique that can be applied to a single network domain or across multiple domains to create a single virtualized network that is under the control of a network operator or the customer of the operator that actually owns the network resources.</t><t>This document provides a framework for Abstraction and Control of TE Networks (ACTN) to support virtual network services and connectivity services.</t></abstract>
</front>
<seriesInfo name='RFC' value='8453'/>
<seriesInfo name='DOI' value='10.17487/RFC8453'/>
</reference>



<reference anchor='RFC8454' target='https://www.rfc-editor.org/info/rfc8454'>
<front>
<title>Information Model for Abstraction and Control of TE Networks (ACTN)</title>
<author fullname='Y. Lee' initials='Y.' surname='Lee'><organization/></author>
<author fullname='S. Belotti' initials='S.' surname='Belotti'><organization/></author>
<author fullname='D. Dhody' initials='D.' surname='Dhody'><organization/></author>
<author fullname='D. Ceccarelli' initials='D.' surname='Ceccarelli'><organization/></author>
<author fullname='B. Yoon' initials='B.' surname='Yoon'><organization/></author>
<date month='September' year='2018'/>
<abstract><t>This document provides an information model for Abstraction and Control of TE Networks (ACTN).</t></abstract>
</front>
<seriesInfo name='RFC' value='8454'/>
<seriesInfo name='DOI' value='10.17487/RFC8454'/>
</reference>


<reference anchor='I-D.ietf-ccamp-otn-topo-yang'>
   <front>
      <title>A YANG Data Model for Optical Transport Network Topology</title>
      <author fullname='Haomian Zheng' initials='H.' surname='Zheng'>
         <organization>Huawei Technologies</organization>
      </author>
      <author fullname='Italo Busi' initials='I.' surname='Busi'>
         <organization>Huawei Technologies</organization>
      </author>
      <author fullname='Xufeng Liu' initials='X.' surname='Liu'>
         <organization>IBM Corporation</organization>
      </author>
      <author fullname='Sergio Belotti' initials='S.' surname='Belotti'>
         <organization>Nokia</organization>
      </author>
      <author fullname='Oscar Gonzalez de Dios' initials='O. G.' surname='de Dios'>
         <organization>Telefonica</organization>
      </author>
      <date day='11' month='July' year='2022'/>
      <abstract>
	 <t>   This document describes a YANG data model to describe the topologies
   of an Optical Transport Network (OTN).  It is independent of control
   plane protocols and captures topological and resource related
   information pertaining to OTN.  This model enables clients, which
   interact with a transport domain controller, for OTN topology related
   operations such as obtaining the relevant topology resource
   information.


	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-ccamp-otn-topo-yang-15'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-ccamp-otn-topo-yang-15.txt' type='TXT'/>
</reference>



<reference anchor='RFC4655' target='https://www.rfc-editor.org/info/rfc4655'>
<front>
<title>A Path Computation Element (PCE)-Based Architecture</title>
<author fullname='A. Farrel' initials='A.' surname='Farrel'><organization/></author>
<author fullname='J.-P. Vasseur' initials='J.-P.' surname='Vasseur'><organization/></author>
<author fullname='J. Ash' initials='J.' surname='Ash'><organization/></author>
<date month='August' year='2006'/>
<abstract><t>Constraint-based path computation is a fundamental building block for traffic engineering systems such as Multiprotocol Label Switching (MPLS) and Generalized Multiprotocol Label Switching (GMPLS) networks.  Path computation in large, multi-domain, multi-region, or multi-layer networks is complex and may require special computational components and cooperation between the different network domains.</t><t>This document specifies the architecture for a Path Computation Element (PCE)-based model to address this problem space.  This document does not attempt to provide a detailed description of all the architectural components, but rather it describes a set of building blocks for the PCE architecture from which solutions may be constructed.  This memo provides information for the Internet community.</t></abstract>
</front>
<seriesInfo name='RFC' value='4655'/>
<seriesInfo name='DOI' value='10.17487/RFC4655'/>
</reference>



<reference anchor='RFC8342' target='https://www.rfc-editor.org/info/rfc8342'>
<front>
<title>Network Management Datastore Architecture (NMDA)</title>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' surname='Schoenwaelder'><organization/></author>
<author fullname='P. Shafer' initials='P.' surname='Shafer'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<author fullname='R. Wilton' initials='R.' surname='Wilton'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>Datastores are a fundamental concept binding the data models written in the YANG data modeling language to network management protocols such as the Network Configuration Protocol (NETCONF) and RESTCONF. This document defines an architectural framework for datastores based on the experience gained with the initial simpler model, addressing requirements that were not well supported in the initial model.  This document updates RFC 7950.</t></abstract>
</front>
<seriesInfo name='RFC' value='8342'/>
<seriesInfo name='DOI' value='10.17487/RFC8342'/>
</reference>



<reference anchor='RFC6805' target='https://www.rfc-editor.org/info/rfc6805'>
<front>
<title>The Application of the Path Computation Element Architecture to the Determination of a Sequence of Domains in MPLS and GMPLS</title>
<author fullname='D. King' initials='D.' role='editor' surname='King'><organization/></author>
<author fullname='A. Farrel' initials='A.' role='editor' surname='Farrel'><organization/></author>
<date month='November' year='2012'/>
<abstract><t>Computing optimum routes for Label Switched Paths (LSPs) across multiple domains in MPLS Traffic Engineering (MPLS-TE) and GMPLS networks presents a problem because no single point of path computation is aware of all of the links and resources in each domain.  A solution may be achieved using the Path Computation Element (PCE) architecture.</t><t>Where the sequence of domains is known a priori, various techniques can be employed to derive an optimum path.  If the domains are simply connected, or if the preferred points of interconnection are also known, the Per-Domain Path Computation technique can be used.  Where there are multiple connections between domains and there is no preference for the choice of points of interconnection, the Backward-Recursive PCE-based Computation (BRPC) procedure can be used to derive an optimal path.</t><t>This document examines techniques to establish the optimum path when the sequence of domains is not known in advance.  The document shows how the PCE architecture can be extended to allow the optimum sequence of domains to be selected, and the optimum end-to-end path to be derived through the use of a hierarchical relationship between domains.  This document is not an Internet Standards Track  specification; it is published for informational purposes.</t></abstract>
</front>
<seriesInfo name='RFC' value='6805'/>
<seriesInfo name='DOI' value='10.17487/RFC6805'/>
</reference>



<reference anchor='RFC7446' target='https://www.rfc-editor.org/info/rfc7446'>
<front>
<title>Routing and Wavelength Assignment Information Model for Wavelength Switched Optical Networks</title>
<author fullname='Y. Lee' initials='Y.' role='editor' surname='Lee'><organization/></author>
<author fullname='G. Bernstein' initials='G.' role='editor' surname='Bernstein'><organization/></author>
<author fullname='D. Li' initials='D.' surname='Li'><organization/></author>
<author fullname='W. Imajuku' initials='W.' surname='Imajuku'><organization/></author>
<date month='February' year='2015'/>
<abstract><t>This document provides a model of information needed by the Routing and Wavelength Assignment (RWA) process in Wavelength Switched Optical Networks (WSONs).  The purpose of the information described in this model is to facilitate constrained optical path computation in WSONs.  This model takes into account compatibility constraints between WSON signal attributes and network elements but does not include constraints due to optical impairments.  Aspects of this information that may be of use to other technologies utilizing a GMPLS control plane are discussed.</t></abstract>
</front>
<seriesInfo name='RFC' value='7446'/>
<seriesInfo name='DOI' value='10.17487/RFC7446'/>
</reference>




    </references>


<section anchor="examples"><name>Examples</name>

<t>This section contains examples of use of the model with RESTCONF
<xref target="RFC8040"/> and JSON encoding.</t>

<t>These examples show how path computation can be requested for the tunnels configuration provided in Appendix A of <xref target="I-D.ietf-teas-yang-te"/>.</t>

<section anchor="basic-example"><name>Basic Path Computation</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 13.1 of of <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>In this case, the TE Tunnel has only one primary path with no specific constraints.</t>

<figure><artwork type="ascii-art"><![CDATA[
POST /restconf/operations/ietf-te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="basic.json"><![CDATA[
{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 1,
          "tunnel-name": "Example_LSP_Tunnel_A_2",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "10.0.0.1",
          "destination": "10.0.0.4",
          "bidirectional": "false",
          "signaling-type": "te-types:path-setup-rsvp"
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="transient-state-example"><name>Path Computation with transient state</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 13.1 of of <xref target="I-D.ietf-teas-yang-te"/> requesting some transient state to be reported within the operational datastore, as described <xref target="temp-state"/>.</t>

<t>In this case, the TE Tunnel has only one primary path with no specific constraints.</t>

<figure><artwork type="ascii-art"><![CDATA[
POST /restconf/operations/ietf-te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="transient-state.json"><![CDATA[
{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 2,
          "tunnel-name": "Example_LSP_Tunnel_A_2",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "10.0.0.1",
          "destination": "10.0.0.4",
          "bidirectional": "false",
          "signaling-type": "te-types:path-setup-rsvp",
          "requested-state": {
            "transaction-id": "example"
          }
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="global-path-constraint-example"><name>Path Computation with Global Path Constraint</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 13.3 of of <xref target="I-D.ietf-teas-yang-te"/>. The 'named path constraint' is created in section 13.2 of <xref target="I-D.ietf-teas-yang-te"/> applies to this path computation request.</t>

<figure><artwork type="ascii-art"><![CDATA[
POST /restconf/operations/ietf-te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="global-path-constraint.json"><![CDATA[
{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 3,
          "tunnel-name": "Example_LSP_Tunnel_A_4_1",
          "path-name": "Simple_LSP_1",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "10.0.0.1",
          "destination": "10.0.0.4",
          "bidirectional": "false",
          "signaling-type": "path-setup-rsvp",
          "named-path-constraint": "max-hop-3",
          "requested-state": {}
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="tunnel-path-constraint-example"><name>Path Computation with Per-tunnel Path Constraint</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 13.4 of of <xref target="I-D.ietf-teas-yang-te"/>, using a per tunnel path constraint.</t>

<figure><artwork type="ascii-art"><![CDATA[
POST /restconf/operations/ietf-te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="tunnel-path-constraint.json"><![CDATA[
{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 4,
          "tunnel-name": "Example_LSP_Tunnel_A_4_2",
          "path-name": "path1",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "10.0.0.1",
          "destination": "10.0.0.4",
          "bidirectional": "false",
          "signaling-type": "te-types:path-setup-rsvp",
          "path-metric-bounds": {
            "path-metric-bound": [
              {
                "metric-type": "te-types:path-metric-hop",
                "upper-bound": "3"
              }
            ]
          }
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="path-computation-result"><name>Path Computation result</name>

<t>This example reports the output of the path computation RPC request described in <xref target="tunnel-path-constraint-example"/>.</t>

<figure><artwork type="ascii-art"><![CDATA[
HTTP/1.1 200 OK
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="tunnel-path-constraint.json"><![CDATA[
{
  "ietf-te:output": {
    "path-compute-result": {
      "ietf-te-path-computation:response": [
        {
          "response-id": 3,
          "computed-paths-properties": {
            "computed-path-properties": [
              {
                "k-index": "1",
                "path-properties": {
                  "path-route-objects": {
                    "path-route-object": [
                      {
                        "index": "1",
                        "numbered-node-hop": {
                          "node-id": "10.0.0.2"
                        }
                      },
                      {
                        "index": "2",
                        "numbered-node-hop": {
                          "node-id": "10.0.0.4"
                        }
                      }
                    ]
                  }
                }
              }
            ]
          },
          "tunnel-ref": "Example_LSP_Tunnel_A_4_1",
          "primary-path-ref": "path1"
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
</section>
<section numbered="false" anchor="acknowledgments"><name>Acknowledgments</name>

<t>The authors would like to thank Igor Bryskin and Xian Zhang for
   participating in the initial discussions that have triggered this
   work and providing valuable insights.</t>

<t>The authors would like to thank the authors of the TE tunnel YANG
   data model <xref target="I-D.ietf-teas-yang-te"/>, in particular Igor Bryskin, Vishnu Pavan
   Beeram, Tarek Saad and Xufeng Liu, for their inputs to the
   discussions and support in having consistency between the Path
   Computation and TE tunnel YANG data models.</t>

<t>The authors would like to thank Adrian Farrel, Dhruv Dhody, Igor
   Bryskin, Julien Meuric and Lou Berger for their valuable input to the
   discussions that has clarified that the path being set up is not
   necessarily the same as the path that has been previously computed
   and, in particular to Dhruv Dhody, for his suggestion to describe the
   need for a path verification phase to check that the actual path
   being set up meets the required end-to-end metrics and constraints.</t>

<t>The authors would like to thank Aihua Guo, Lou Berger, Shaolong Gan,
   Martin Bjorklund and Tom Petch for their useful comments on how to
   define XPath statements in YANG RPCs.</t>

<t>The authors would like to thank Haomian Zheng, Yanlei Zheng, Tom
   Petch, Aihua Guo and Martin Bjorklund for their review and valuable
   comments to this document.</t>

<t>Previous versions of document were prepared using 2-Word-v2.0.template.dot.</t>

<t>This document was prepared using kramdown.</t>

</section>

    <section anchor="contributors" numbered="false" toc="include" removeInRFC="false">
        <name>Contributors</name>
    <contact initials="V." surname="Lopez" fullname="Victor Lopez">
      <organization>Nokia</organization>
      <address>
        <email>victor.lopez@nokia.com</email>
      </address>
    </contact>
    <contact initials="R." surname="Vilalta" fullname="Ricard Vilalta">
      <organization>CTTC</organization>
      <address>
        <email>ricard.vilalta@cttc.es</email>
      </address>
    </contact>
    <contact initials="K." surname="Sethuraman" fullname="Karthik Sethuraman">
      <organization>NEC</organization>
      <address>
        <email>karthik.sethuraman@necam.com</email>
      </address>
    </contact>
    <contact initials="M." surname="Scharf" fullname="Michael Scharf">
      <organization>Nokia</organization>
      <address>
        <email>michael.scharf@gmail.com</email>
      </address>
    </contact>
    <contact initials="D." surname="Beller" fullname="Dieter Beller">
      <organization>Nokia</organization>
      <address>
        <email>dieter.beller@nokia.com</email>
      </address>
    </contact>
    <contact initials="G." surname="Bruno" fullname="Gianmarco Bruno">
      <organization>Ericsson</organization>
      <address>
        <email>gianmarco.bruno@ericsson.com</email>
      </address>
    </contact>
    <contact initials="F." surname="Lazzeri" fullname="Francesco Lazzeri">
      <organization>Ericsson</organization>
      <address>
        <email>francesco.lazzeri@ericsson.com</email>
      </address>
    </contact>
    <contact initials="Y." surname="Lee" fullname="Young Lee">
      <organization>Samsung Electronics</organization>
      <address>
        <email>younglee.tx@gmail.com</email>
      </address>
    </contact>
    <contact initials="C." surname="Perocchio" fullname="Carlo Perocchio">
      <organization>Ericsson</organization>
      <address>
        <email>carlo.perocchio@ericsson.com</email>
      </address>
    </contact>
    <contact initials="O." surname="Dugeon" fullname="Olivier Dugeon">
      <organization>Orange Labs</organization>
      <address>
        <email>olivier.dugeon@orange.com</email>
      </address>
    </contact>
    <contact initials="J." surname="Meuric" fullname="Julien Meuric">
      <organization>Orange Labs</organization>
      <address>
        <email>julien.meuric@orange.com</email>
      </address>
    </contact>
    </section>

  </back>

<!-- ##markdown-source:
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
Hn748GHx9Oz150CnXdeTfKUapqCQgBZnJmzCg7hg9a6/atrO1MlaArIL2KB4
hiBcLMlJBclWbtCXsM07jv9CNQdHoaLTG4kxpW84dLmg2XLxSelNRxSMueuR
MoDHkpZqhrXTANHruqcCt7u225VAiL6hWsHSuduR49WcWet6WW2wOG6FNDVV
e3GhuOTgy+pd3dmV/uzVE5D+3AM2GuKGVXRBgEi91UeLpaGDo+IvDd2+rC7L
dfECo6dQvesAOl7LYFW4hts/ERYyPQ7N2dQjoKpy55IgTvq9xy5ABKM+Eibw
b6WSEo1AVOBveF7/L/h8AnMxjGTO8brvqvUFbR7kO7A/EHWsYQfams+dGJAM
zLfqil9+9edXr3854/8Wz57T3y/P/uefn748e4J/v/rT4y+/tH8Y3uV2r/70
/M9fPnF/uf6nz7/66uzZEwYB3xbeVwLll189/ssvaaGLXz5/8frp82ePv/xl
Ymu2lVSGxkLRLahxVLzW0NsrovvZ6YviwaPiEOnx8MGD3x7xn7958OtHR8X7
q2rDw1GZZvqno+ENFpKtSqwGX5RAvmW5xSOeS8dinblNgfVwFweiiB8fiwK2
OLGaFy4Na16gs+yA+tjCKGCbFcX7vaukN80Slsf82wDh+srMbwVpX1aXE4bY
7s7XsoOogQVYFVw3E1nm8AYmMweFE10m5c0RY20Bo9iYP/hw/vCB0Y8jaQ3y
+ineDpZr2+1gSGum6ecMDCXPQ4Hta7g/IVlZYyYU/714yj6UWuoYWotBXCv2
oQsbqZ71ylauodM5Vea2XindjX1Zn+Tp+ZhlDt0JA08LYK5fiCW9kd/pOY/V
vmDTG2vbVlHPVI7+aPERVY5WBgiRbvE3WDVDZVLdoblP5Ev5Vsfy66B7VX16
gBlJUFpQRn3g7WJhEUO4YYjUTpW94BrkJR8BttS3NulNHUtDNHTjhG8QDJYF
r6Ryz7lfQkZZd9t5AOYT0/YH8wdMqtyt++Ig1223kX9Uq4NPXK+IWECuL1+9
CAlhJ/WDmlv4XOKukwvhTJ2d7sd/o4f0Zsr09LpPmh+/7rjLDGMokyeZ6AqH
mCsCu+9MGYY/1x9Q9E3fZsG2dG8JUTe52x7UNZu5rnndOcB2OofV4nIxk+CY
7mg2tg9nfPbb/mEd+kQ/KUpvNzBWrI0efbqVRmXoQAXrjC3Ha9JBu95ojRa0
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
E/+sXF5lBSqKB7Bg4e/1jXq75XEnBoeIWYwEND3Pb/REMa4lEZokCnmU2NsX
qSLjKBPYFK/FN1cVBbQoJ50CjbvHhm0gmgQ3PaVEIJOdIBxK5zfOo+CLrtc0
deO+Azm1XpF9WzNiDb5grr6t+UmDvUn3QDS2HZ7axvMQkwrZKjJG3Nie1FJK
k/WfptoNa2SP/WC9MuBmFlL4gHhziZwd9hciMAV8AqQnHelZSRosQsXGZy6i
dqyRDetQCU5yFKu7YCFjACMTi2cSgwiXV+ZGamQiuEZ1zMXfeAjmY3H0JytV
JhKSiOntiZWiTQ1HTwnfxdNMKL3OVexwHqKOo+0UQo23Hr54MR91AZM6veJ7
EfnIxXt4oI10mG+XJ9EEjr3v43uVLIXx84+84MEaBdaMujDQOz9h1xGV6fYm
bclFMbET5m09EQg3kkg/JAVUIhDMfEaWYarwMsdY7YWBiej2burdx29mr2X8
bvElpwKA10oZyeUFBiW2kDunxlq6cHW0GVfobK9ETY71rNwm4o+mTtIbMIHo
+CEeGAUjRgnvdThG35ftSr2MGuzzdu4CSUl/TO0j2ghJOuZ32FCr4Pp6fOnG
204kposc+SuQc/SNWrIrWwaDEY3ug8mGK74T6ooHSXgTKBFYEZrDOnMFnLzd
ch8nCSggdAnSpaaX3VMo7OSVnnZGrdpjVoGaRejtpWTZ2dnzhYNURePi4HYB
S7smNz8jnEaWEz8TIloj9CaoDeaTi9+wf2b1AfMBvSAdzsH/N6W/DvyIogEn
AQgiBpPhHeEnqY6Yjw3/4P8bCAIJP5MYkT9xqK0NrDa6zBiI+oLDQZTdQA8b
TP/Euag/wzQYV832nnSoqo0fXyOIqiNFNseULceugklbb48Od956e2nu5rO3
Bu91RI1dz22PbilnVOrzD8Vc4yJ5HyZz7JDu4kUTRadY0jjCHsnDflTj8tWf
vM413C4VVruH2jzWY091Vr8CSS/Z3jrCFL1nQD/wI6tzEFhJQmeVeXKpTCJJ
dGPplAMSqSJJjSPXO6WIZI+BiXrI3lrIdEE4qoEY7WJEQIF4ivSP4YjSsPsd
HiIkQIwpHgNSUSsdkzWO/aTjj9E2fpSuMTTtqUfBxKneTcfIIDhVv9hTu9hb
t7jThrqDXnFHreJOOsWeGsU/CAuNaxJTWWlYi9hXh8j4YYYOnOx7mil+mek6
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
KXquewIA

-->

</rfc>

