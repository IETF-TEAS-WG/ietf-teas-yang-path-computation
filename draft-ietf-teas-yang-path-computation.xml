<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.4.19 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc comments="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-teas-yang-path-computation-17" category="std">

  <front>
    <title abbrev="Yang for Path Computation">A YANG Data Model for requesting path computation</title>

    <author initials="I." surname="Busi" fullname="Italo Busi" role="editor">
      <organization>Huawei Technologies</organization>
      <address>
        <email>italo.busi@huawei.com</email>
      </address>
    </author>
    <author initials="S." surname="Belotti" fullname="Sergio Belotti" role="editor">
      <organization>Nokia</organization>
      <address>
        <email>sergio.belotti@nokia.com</email>
      </address>
    </author>
    <author initials="O." surname="Gonzalez de Dios" fullname="Oscar Gonzalez de Dios">
      <organization>Telefonica</organization>
      <address>
        <email>oscar.gonzalezdedios@telefonica.com</email>
      </address>
    </author>
    <author initials="A." surname="Sharma" fullname="Anurag Sharma">
      <organization>Google</organization>
      <address>
        <email>ansha@google.com</email>
      </address>
    </author>
    <author initials="Y." surname="Shi" fullname="Yan Shi">
      <organization>China Unicom</organization>
      <address>
        <email>shiyan49@chinaunicom.cn</email>
      </address>
    </author>
    <author initials="D." surname="Ceccarelli" fullname="Daniele Ceccarelli">
      <organization>Ericsson</organization>
      <address>
        <email>daniele.ceccarelli@ericsson.com</email>
      </address>
    </author>

    <date year="2022" month="January" day="24"/>

    
    <workgroup>TEAS Working Group</workgroup>
    

    <abstract>


<t>There are scenarios, typically in a hierarchical Software-Defined
   Networking (SDN) context, where the topology information provided by
   a Traffic Engineering (TE) network provider may be insufficient for
   its client to perform end-to-end path computation. In these cases the
   client would need to request the provider to calculate some (partial)
   feasible paths.</t>

<t>This document defines a YANG data model for a Remote Procedure Call
   (RPC) to request path computation. This model complements the
   solution, defined in RFC YYYY, to configure a TE tunnel path in
   "compute-only" mode.</t>

<t>[RFC EDITOR NOTE: Please replace RFC YYYY with the RFC number of
   draft-ietf-teas-yang-te once it has been published.</t>

<t>Moreover this document describes some use cases where a path
   computation request, via YANG-based protocols (e.g., NETCONF or
   RESTCONF), can be needed.</t>



    </abstract>


  </front>

  <middle>


<section anchor="intro"><name>Introduction</name>

<t anchor="pc-model">There are scenarios, typically in a hierarchical Software-Defined
   Networking (SDN) context, where the topology information provided by
   a Traffic Engineering (TE) network provider may be insufficient for
   its client to perform end-to-end path computation. In these cases the
   client would need to request the provider to calculate some (partial)
   feasible paths, complementing its topology knowledge, to make end-to-
   end path computation feasible.</t>

<t>These types of scenarios can be applied to different interfaces in
   different reference architectures:</t>

<t><list style="symbols">
  <t>Application-Based Network Operations (ABNO) control interface
<xref target="RFC7491"/>, in which an Application Service Coordinator can request
ABNO controller to take in charge path calculation (see Figure 1
in <xref target="RFC7491"/>).</t>
  <t>Abstraction and Control of TE Networks (ACTN) <xref target="RFC8453"/>, where a
controller hierarchy is defined, the need for path computation
arises on the interface between Customer Network Controller (CNC)
and Multi-Domain Service Coordinator (MDSC), called CNC-MDSC
Interface (CMI), and on the interface between MSDC and
Provisioning Network Controller (PNC), called MDSC-PNC Interface
(MPI). <xref target="RFC8454"/> describes an information model for the Path
Computation request.  <vspace blankLines='1'/>
Multiple protocol solutions can be used for communication between
different controller hierarchical levels. This document assumes that
the controllers are communicating using YANG-based protocols (e.g.,
NETCONF <xref target="RFC6241"/> or RESTCONF <xref target="RFC8040"/>).  <vspace blankLines='1'/>
Path Computation Elements (PCEs), controllers and orchestrators
perform their operations based on Traffic Engineering Databases
(TED). Such TEDs can be described, in a technology agnostic way, with
the YANG data model for TE Topologies <xref target="RFC8795"/>. Furthermore, the
technology specific details of the TED are modelled in the technology
specific topology models, e.g., the <xref target="I-D.ietf-ccamp-otn-topo-yang"/> for Optical Transport
Network (OTN) Optical Data Unit (ODU) technologies, which augment the
common TE topology model in <xref target="RFC8795"/>.  <vspace blankLines='1'/>
The availability of such topology models allows the provisioning of
the TED using YANG-based protocols (e.g., NETCONF or RESTCONF).
Furthermore, it enables a PCE/controller performing the necessary
abstractions or modifications and offering this customized topology
to another PCE/controller or high level orchestrator.  <vspace blankLines='1'/>
The tunnels that can be provided over the networks described with the
topology models can be also set-up, deleted and modified via YANG-
based protocols (e.g., NETCONF or RESTCONF) using the TE tunnel YANG
data model <xref target="I-D.ietf-teas-yang-te"/>.  <vspace blankLines='1'/>
This document defines a YANG data model <xref target="RFC7950"/> for an RPC to
request path computation, which complements the solution defined in
<xref target="I-D.ietf-teas-yang-te"/>, to configure a TE tunnel path in "compute-only" mode.  <vspace blankLines='1'/>
The YANG data model definition does not make any assumption about
whether that the client or the server implement a "PCE"
functionality, as defined in <xref target="RFC4655"/>, and the Path Computation
Element Communication Protocol (PCEP) protocol, as defined in
<xref target="RFC5440"/>.  <vspace blankLines='1'/>
Moreover, this document describes some use cases where a path
computation request, via YANG-based protocols (e.g., NETCONF or
RESTCONF), can be needed.  <vspace blankLines='1'/>
The YANG data model defined in this document conforms to the Network
Management Datastore Architecture <xref target="RFC8342"/>.</t>
</list></t>

<section anchor="terminology"><name>Terminology</name>

<t>TED:</t>

<t><list style='empty'>
  <t>The traffic engineering database is a collection of all TE
   information about all TE nodes and TE links in a given network.</t>
</list></t>

<t>PCE:</t>

<t><list style='empty'>
  <t>A Path Computation Element (PCE) is an entity that is capable of
   computing a network path or route based on a network graph, and of
   applying computational constraints during the computation.  The PCE
   entity is an application that can be located within a network node or
   component, on an out-of-network server, etc.  For example, a PCE
   would be able to compute the path of a TE Label Switched Path (LSP)
   by operating on the TED and considering bandwidth and other
   constraints applicable to the TE LSP service request. <xref target="RFC4655"/>.</t>
</list></t>

<t>Domain:</t>

<t><list style='empty'>
  <t>TE information is the data relating to nodes and TE links
   that is used in the process of selecting a TE path.  TE information
   is usually only available within a network.  We call such a zone of
   visibility of TE information a domain.  An example of a domain may be
   an IGP area or an Autonomous System. <xref target="RFC7926"/></t>
</list></t>

<t>The terminology for describing YANG data models is found in
   <xref target="RFC7950"/>.</t>

</section>
<section anchor="tree-diagram"><name>Tree Diagram</name>

<t>Tree diagrams used in this document follow the notation defined in
   <xref target="RFC8340"/>.</t>

</section>
<section anchor="prefixes-in-data-node-names"><name>Prefixes in Data Node Names</name>

<t>In this document, names of data nodes and other data model objects
   are prefixed using the standard prefix associated with the
   corresponding YANG imported modules, as shown in <xref target="tab-prefix"/>.</t>

<texttable title="Prefixes and corresponding YANG modules" anchor="tab-prefix">
      <ttcol align='left'>Prefix</ttcol>
      <ttcol align='left'>YANG module</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>inet</c>
      <c>ietf-inet-types</c>
      <c><xref target="RFC6991"/></c>
      <c>te-types</c>
      <c>ietf-te-types</c>
      <c><xref target="RFC8776"/></c>
      <c>te</c>
      <c>ietf-te</c>
      <c>[RFCYYYY]</c>
      <c>te-pc</c>
      <c>ietf-te-path-computation</c>
      <c>RFCXXXX</c>
</texttable>

<t>RFC Editor Note:
Please replace XXXX with the RFC number assigned to this document.
Please replace RFC YYYY with the RFC number of <xref target="I-D.ietf-teas-yang-te"/> once it has been published.
Please remove this note.</t>

</section>
</section>
<section anchor="use-cases"><name>Use Cases</name>

<t>This section presents some use cases, where a client needs to request
   underlying SDN controllers for path computation.</t>

<t>The use of the YANG data model defined in this document is not
   restricted to these use cases but can be used in any other use case
   when deemed useful.</t>

<t>The presented uses cases have been grouped, depending on the
   different underlying topologies: a) Packet/Optical Integration; b)
   multi-domain Traffic Engineered (TE) Networks; and c) Data Center
   Interconnections. Use cases d) and e) respectively present how to
   apply this YANG data model for standard multi-domain PCE i.e.
   Backward Recursive Path Computation <xref target="RFC5441"/> and Hierarchical PCE
   <xref target="RFC6805"/>.</t>

<section anchor="poi-uc"><name>Packet/Optical Integration</name>

<t>In this use case, an optical domain is used to provide connectivity
   to some nodes of a packet domain (see <xref target="fig-poi-uc"/>).</t>

<figure title="Packet/Optical Integration use case" anchor="fig-poi-uc"><artwork><![CDATA[
                                +----------------+
                                |                |
                                | Packet/Optical |
                                |  Coordinator   |
                                |                |
                                +---+------+-----+
                                    |      |
                       +------------+      |
                       |                   +-----------+
                +------V-----+                         |
                |            |                  +------V-----+
                | Packet     |                  |            |
                | Domain     |                  | Optical    |
                | Controller |                  | Domain     |
                |            |                  | Controller |
                +------+-----+                  +-------+----+
                       |                                |
              .........V.........................       |
              :          packet domain          :       |
          +----+                               +----+   |
          | R1 |= = = = = = = = = = = = = = = =| R2 |   |
          +-+--+                               +--+-+   |
            | :                                 : |     |
            | :................................ : |     |
            |                                     |     |
            |               +-----+               |     |
            |    ...........| Opt |...........    |     |
            |    :          |  C  |          :    |     |
            |    :         /+--+--+\         :    |     |
            |    :        /    |    \        :    |     |
            |    :       /     |     \       :    |     |
            |   +-----+ /   +--+--+   \ +-----+   |     |
            |   | Opt |/    | Opt |    \| Opt |   |     |
            +---|  A  |     |  D  |     |  B  |---+     |
                +-----+\    +--+--+    /+-----+         |
                 :      \      |      /      :          |
                 :       \     |     /       :          |
                 :        \ +--+--+  / optical<---------+
                 :         \| Opt |/  domain :
                 :..........|  E  |..........:
                            +-----+
]]></artwork></figure>

<t><xref target="fig-poi-uc"/> as well as <xref target="fig-poi-abstraction"/> below only show a partial view of the
   packet network connectivity, before additional packet connectivity is
   provided by the optical network.</t>

<t>It is assumed that the Optical Domain Controller provides to the
   Packet/Optical Coordinator an abstracted view of the optical network.
   A possible abstraction could be to represent the whole optical
   network as one "virtual node" with "virtual ports" connected to the
   access links, as shown in <xref target="fig-poi-abstraction"/>.</t>

<t>It is also assumed that Packet Domain Controller can provide the
   Packet/Optical Coordinator the information it needs to set up
   connectivity between packet nodes through the optical network (e.g.,
   the access links).</t>

<t>The path computation request helps the Packet/Optical Coordinator to
   know the real connections that can be provided by the optical
   network.</t>

<figure title="Packet and Optical Topology Abstractions" anchor="fig-poi-abstraction"><artwork><![CDATA[
                       ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,.
                      ,  Packet/Optical Coordinator view          ,
                     ,                              +----+       , .
                    ,                               |    |      ,
                   ,                                | R2 |     ,   .
                  ,  +----+  +------------ +       /+----+    ,
                 ,   |    |  |             |/-----/ / /      ,     .
                ,    | R1 |--O VP1     VP4 O       / /      ,
               ,     |    |\ |             | /----/ /      ,       .
              ,      +----+ \|             |/      /      ,
             ,        /      O VP2     VP5 O      /      ,         .
            ,        /       |             |  +----+    ,
           ,        /        |             |  |    |   ,           .
          ,        /         O VP3     VP6 O--| R4 |  ,
         ,     +----+ /-----/|_____________|  +----+ ,             .
        ,      |    |/       +------------ +        ,
       ,       | R3 |                              ,               .
      ,        +----+                             ,,,,,,,,,,,,,,,,,
     ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,                ,.
     . Packet Domain Controller view                +----+       ,
       only packet nodes and packet links           |    |      ,  .
     . with access links to the optical network     | R2 |     ,
                  ,  +----+                        /+----+    ,    .
     .           ,   |    |                 /-----/ / /      ,
                ,    | R1 |---                     / /      ,      .
     .         ,     +----+\                 /----/ /      ,
              ,        /    \               /      /      ,        .
     .       ,        /                           /      ,
            ,        /                        +----+    ,          .
     .     ,        /                         |    |   ,
          ,        /                       ---| R4 |  ,            .
     .   ,     +----+ /-----/                 +----+ ,
        ,      |    |/                              ,              .
     . ,       | R3 |                              ,
      ,        +----+                             ,,,,,,,,,,,,,,,,,.
     .,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,                ,
       Optical Domain Controller view                            , .
     . only optical nodes,        +--+                          ,
       optical links and         /|OF|                         ,   .
     . access links from the  +--++--+             /          ,
       packet network         |OA|    \     /-----/ /        ,     .
     .          ,          ---+--+--\  +--+/       /        ,
               ,           \   |  \  \-|OE|-------/        ,       .
     .        ,             \  |   \ /-+--+               ,
             ,               \+--+  X    |               ,         .
     .      ,                 |OB|-/ \   |              ,
           ,                  +--+-\  \+--+            ,           .
     .    ,                  /   \  \--|OD|---        ,
         ,            /-----/     +--+ +--+          ,             .
     .  ,            /            |OC|/             ,
       ,                          +--+             ,               .
     .,                                           ,,,,,,,,,,,,,,,,,,
      ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,                ,
     . Actual Physical View                         +----+       ,
                    ,             +--+              |    |      ,
     .             ,             /|OF|              | R2 |     ,
                  ,  +----+   +--++--+             /+----+    ,
     .           ,   |    |   |OA|    \     /-----/ / /      ,
                ,    | R1 |---+--+--\  +--+/       / /      ,
     .         ,     +----+\   |  \  \-|OE|-------/ /      ,
              ,        /    \  |   \ /-+--+        /      ,
     .       ,        /      \+--+  X    |        /      ,
            ,        /        |OB|-/ \   |    +----+    ,
     .     ,        /         +--+-\  \+--+   |    |   ,
          ,        /         /   \  \--|OD|---| R4 |  ,
     .   ,     +----+ /-----/     +--+ +--+   +----+ ,
        ,      |    |/            |OC|/             ,
     . ,       | R3 |             +--+             ,
      ,        +----+                             ,
     .,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
]]></artwork></figure>

<t>In this use case, the Packet/Optical Coordinator needs to set up an
   optimal underlying path for an IP link between R1 and R2.</t>

<t>As depicted in <xref target="fig-poi-abstraction"/>, the Packet/Optical Coordinator has only an
   "abstracted view" of the physical network, and it does not know the
   feasibility or the cost of the possible optical paths (e.g., VP1-VP4
   and VP2-VP5), which depend on the current status of the physical
   resources within the optical network and on vendor-specific optical
   attributes.</t>

<t>The Packet/Optical Coordinator can request the underlying Optical
   Domain Controller to compute a set of potential optimal paths, taking
   into account optical constraints. Then, based on its own constraints,
   policy and knowledge (e.g. cost of the access links), it can choose
   which one of these potential paths to use to set up the optimal end-
   to-end path crossing optical network.</t>

<figure title="Packet/Optical Integration path computation example" anchor="fig-poi-example"><artwork><![CDATA[
                    ............................
                    :                          :
                    O VP1                  VP4 O
           cost=10 /:\                        /:\ cost=10
                  / : \----------------------/ : \
          +----+ /  :         cost=50          :  \ +----+
          |    |/   :                          :   \|    |
          | R1 |    :                          :    | R2 |
          |    |\   :                          :   /|    |
          +----+ \  :  /--------------------\  :  / +----+
                  \ : /       cost=55        \ : /
            cost=5 \:/                        \:/ cost=5
                    O VP2                  VP5 O
                    :                          :
                    :..........................:
]]></artwork></figure>

<t>For example, in <xref target="fig-poi-example"/>, the Packet/Optical Coordinator can request
   the Optical Domain Controller to compute the paths between VP1-VP4
   and VP2-VP5 and then decide to set up the optimal end-to-end path
   using the VP2-VP5 optical path even if this is not the optimal path
   from the optical domain perspective.</t>

<t>Considering the dynamicity of the connectivity constraints of an
   optical domain, it is possible that a path computed by the Optical
   Domain Controller when requested by the Packet/Optical Coordinator is
   no longer valid/available when the Packet/Optical Coordinator
   requests it to be set up. This is further discussed in <xref target="rpc-motivation"/>.</t>

</section>
<section anchor="md-uc"><name>Multi-domain TE networks</name>

<t>In this use case there are two TE domains which are interconnected
   together by multiple inter-domains links.</t>

<t>A possible example could be a multi-domain optical network.</t>

<figure title="Multi-domain multi-link interconnection" anchor="md-ml-connection"><artwork><![CDATA[
                            +--------------+
                            | Multi-Domain |
                            | Controller   |
                            +---+------+---+
                                |      |
                   +------------+      |
                   |                   +-----------+
            +------V-----+                         |
            |            |                         |
            | TE Domain  |                  +------V-----+
            | Controller |                  |            |
            |      1     |                  | TE Domain  |
            +------+-----+                  | Controller |
                   |                        |      2     |
                   |                        +------+-----+
          .........V..........                     |
          :                  :                     |
         +-----+             :                     |
         |     |             :            .........V..........
         |  X  |             :            :                  :
         |     |          +-----+      +-----+                :
         +-----+          |     |      |     |               :
          :               |  C  |------|  E  |               :
      +-----+    +-----+ /|     |      |     |\ +-----+    +-----+
      |     |    |     |/ +-----+      +-----+ \|     |    |     |
      |  A  |----|  B  |     :            :     |  G  |----|  H  |
      |     |    |     |\    :            :    /|     |    |     |
      +-----+    +-----+ \+-----+      +-----+/ +-----+    +-----+
          :               |     |      |     |               :
          :               |  D  |------|  F  |               :
          :               |     |      |     |          +-----+
          :               +-----+      +-----+          |     |
          :                  :            :             |  Y  |
          :                  :            :             |     |
          :   TE domain 1    :            : TE domain 2 +-----+
          :..................:            :.................:
]]></artwork></figure>

<t>In order to set up an end-to-end multi-domain TE path (e.g., between
   nodes A and H), the Multi-Domain Controller needs to know the
   feasibility or the cost of the possible TE paths within the two TE
   domains, which depend on the current status of the physical resources
   within each TE domain. This is more challenging in case of optical
   networks because the optimal paths depend also on vendor-specific
   optical attributes (which may be different in the two domains if they
   are provided by different vendors).</t>

<t>In order to set up a multi-domain TE path (e.g., between nodes A and
   H), the Multi-Domain Controller can request the TE Domain Controllers
   to compute a set of intra-domain optimal paths and take decisions
   based on the information received. For example:</t>

<t><list style="symbols">
  <t>The Multi-Domain Controller asks TE Domain Controllers to provide
set of paths between A-C, A-D, E-H and F-H</t>
  <t>TE Domain Controllers return a set of feasible paths with the
associated costs: the path A-C is not part of this set (in optical
networks, it is typical to have some paths not being feasible due
to optical constraints that are known only by the Optical Domain
Controller)</t>
  <t>The Multi-Domain Controller will select the path A-D-F-H since it
is the only feasible multi-domain path and then request the TE
Domain Controllers to set up the A-D and F-H intra-domain paths</t>
  <t>If there are multiple feasible paths, the Multi-Domain Controller
can select the optimal path knowing the cost of the intra-domain
paths (provided by the TE domain controllers) and the cost of the
inter-domain links (known by the Multi-Domain Controller)  <vspace blankLines='1'/>
This approach may have some scalability issues when the number of TE
domains is quite big (e.g. 20).  <vspace blankLines='1'/>
In this case, it would be worthwhile using the abstract TE topology
information provided by the TE Domain Controllers to limit the number
of potential optimal end-to-end paths and then request path
computation from fewer TE Domain Controllers in order to decide what
the optimal path within this limited set is.  <vspace blankLines='1'/>
For more details, see <xref target="topo-pc-complement"/>.</t>
</list></t>

</section>
<section anchor="data-center-interconnections"><name>Data Center Interconnections</name>

<t>In these use case, there is a TE domain which is used to provide
   connectivity between Data Centers which are connected with the TE
   domain using access links.</t>

<figure title="Data Center Interconnection use case" anchor="fig-dci-uc"><artwork><![CDATA[
                        +--------------+
                        | Cloud Network|
                        | Orchestrator |
                        +--------------+
                          |  |  |  |
            +-------------+  |  |  +------------------------+
            |                |  +------------------+        |
            |       +--------V---+                 |        |
            |       |            |                 |        |
            |       | TE Network |                 |        |
     +------V-----+ | Controller |          +------V-----+  |
     | DC         | +------------+          | DC         |  |
     | Controller |     |                   | Controller |  |
     +------------+     |   +-----+         +------------+  |
          |         ....V...|     |........         |       |
          |         :       |  P  |       :         |       |
     .....V.....    :      /+-----+\      :    .....V.....  |
     :         :  +-----+ /    |    \ +-----+  :         :  |
     :  DC1 || :  |     |/     |     \|     |  :  DC2 || :  |
     :    ||||----| PE1 |      |      | PE2 |----   |||| :  |
     : _|||||| :  |     |\     |     /|     |  : _|||||| :  |
     :         :  +-----+ \ +-----+ / +-----+  :         :  |
     :.........:    :      \|     |/      :    :.........:  |
                    :.......| PE3 |.......:                 |
                            |     |                         |
                            +-----+               +---------V--+
                          .....|.....             | DC         |
                          :         :             | Controller |
                          :  DC3 || :             +------------+
                          :    |||| :                  |
                          : _|||||| <------------------+
                          :         :
                          :.........:
]]></artwork></figure>

<t>In this use case, there is the need to transfer data from Data Center
   1 (DC1) to either DC2 or DC3 (e.g. workload migration).</t>

<t>The optimal decision depends both on the cost of the TE path (DC1-DC2
   or DC1-DC3) and of the Data Center resources within DC2 or DC3.</t>

<t>The Cloud Network Orchestrator needs to make a decision for optimal
   connection based on TE network constraints and Data Center resources.</t>

<t>It may not be able to make this decision because it has only an
   abstract view of the TE network (as in <xref target="poi-uc"/>).</t>

<t>The Cloud Network Orchestrator can request to the TE Network
   Controller to compute the cost of the possible TE paths (e.g., DC1-
   DC2 and DC1-DC3) and to the DC Controller to provide the information
   it needs about the required Data Center resources within DC2 and DC3
   and then it can take the decision about the optimal solution based on
   this information and its policy.</t>

</section>
<section anchor="backward-recursive-path-computation-scenario"><name>Backward Recursive Path Computation scenario</name>

<t><xref target="RFC5441"/> has defined the Virtual Source Path Tree (VSPT) TLV within
   PCE Reply Object in order to compute inter-domain paths following a
   "Backward Recursive Path Computation" (BRPC) method. The main
   principle is to forward the PCE request message up to the destination
   domain. Then, each PCE involved in the computation will compute its
   part of the path and send it back to the requester through PCE
   Response message. The resulting computation is spread from
   destination PCE to source PCE. Each PCE is in charge of merging the
   path it received with the one it calculated. At the end, the source
   PCE merges its local part of the path with the received one to
   achieve the end-to-end path.</t>

<t><xref target="fig-brpc-example"/> below show a typical BRPC scenario where 3 PCEs cooperate to
   compute inter-domain paths.</t>

<figure title="BRPC Scenario" anchor="fig-brpc-example"><artwork><![CDATA[
                   +----------------+          +----------------+
                   |  Domain (B)    |          |  Domain (C)    |
                   |                |          |                |
                   |        /-------|---PCEP---|--------\       |
                   |       /        |          |         \      |
                   |   (PCE)        |          |   -    (PCE)   |
                   |    /           <---------->  |D|           |
                   |   /            |  Inter   |   -            |
                   +---|----^-------+  Domain  +----------------+
                       |    |          Link
                     PCEP   |
                       |    | Inter-domain Link
                       |    |
                   +---|----v-------+
                   |   |            |
                   |   | Domain (A) |
                   |   \            |
                   |  (PCE)    -    |
                   |          |S|   |
                   |           -    |
                   +----------------+
]]></artwork></figure>

<t>In this use case, a client can use the YANG data model defined in
   this document to request path computation from the PCE that controls
   the source of the tunnel. For example, a client can request to the
   PCE of domain A to compute a path from a source S, within domain A,
   to a destination D, within domain C. Then PCE of domain A will use
   PCEP protocol, as per <xref target="RFC5441"/>, to compute the path from S to D and
   in turn gives the final answer to the requester.</t>

</section>
<section anchor="hierarchical-pce-scenario"><name>Hierarchical PCE scenario</name>

<t><xref target="RFC6805"/> has defined an architecture and extensions to the PCE
   standard to compute inter-domain path following a hierarchical
   method. Two new roles have been defined: parent PCE and child PCE.
   The parent PCE is in charge to coordinate the end-to-end path
   computation. For that purpose it sends to each child PCE involved in
   the multi-domain path computation a PCE Request message to obtain the
   local part of the path. Once received all answer through PCE Response
   message, the parent PCE will merge the different local parts of the
   path to achieve the end-to-end path.</t>

<t><xref target="fig-hpce-example"/> below shows a typical hierarchical scenario where a parent
   PCE request end-to-end path to the different child PCE. Note that a
   PCE could take independently the role of child or parent PCE
   depending of which PCE will request the path.</t>

<figure title="Hierarchical domain topology from RFC6805" anchor="fig-hpce-example"><artwork><![CDATA[
    -----------------------------------------------------------------
    |   Domain 5                                                      |
    |                              -----                              |
    |                             |PCE 5|                             |
    |                              -----                              |
    |                                                                 |
    |    ----------------     ----------------     ----------------   |
    |   | Domain 1       |   | Domain 2       |   | Domain 3       |  |
    |   |                |   |                |   |                |  |
    |   |        -----   |   |        -----   |   |        -----   |  |
    |   |       |PCE 1|  |   |       |PCE 2|  |   |       |PCE 3|  |  |
    |   |        -----   |   |        -----   |   |        -----   |  |
    |   |                |   |                |   |                |  |
    |   |            ----|   |----        ----|   |----            |  |
    |   |           |BN11+---+BN21|      |BN23+---+BN31|           |  |
    |   |   -        ----|   |----        ----|   |----        -   |  |
    |   |  |S|           |   |                |   |           |D|  |  |
    |   |   -        ----|   |----        ----|   |----        -   |  |
    |   |           |BN12+---+BN22|      |BN24+---+BN32|           |  |
    |   |            ----|   |----        ----|   |----            |  |
    |   |                |   |                |   |                |  |
    |   |         ----   |   |                |   |   ----         |  |
    |   |        |BN13|  |   |                |   |  |BN33|        |  |
    |    -----------+----     ----------------     ----+-----------   |
    |                \                                /               |
    |                 \       ----------------       /                |
    |                  \     |                |     /                 |
    |                   \    |----        ----|    /                  |
    |                    ----+BN41|      |BN42+----                   |
    |                        |----        ----|                       |
    |                        |                |                       |
    |                        |        -----   |                       |
    |                        |       |PCE 4|  |                       |
    |                        |        -----   |                       |
    |                        |                |                       |
    |                        | Domain 4       |                       |
    |                         ----------------                        |
    |                                                                 |
     -----------------------------------------------------------------
]]></artwork></figure>

<t>In this use case, a client can use the YANG data model defined in
   this document to request to the parent PCE a path from a source S to
   a destination D. The parent PCE will in turn contact the child PCEs
   through PCEP protocol to compute the end-to-end path and then return
   the computed path to the client, using the YANG data model defined in
   this document. For example the YANG data model can be used to request
   to PCE5 acting as parent PCE to compute a path from source S, within
   domain 1, to destination D, within domain 3. PCE5 will contact child
   PCEs of domain 1, 2 and 3 to obtain local part of the end-to-end path
   through the PCEP protocol. Once received the PCE Response message, it
   merges the answers to compute the end-to-end path and send it back to
   the client.</t>

</section>
</section>
<section anchor="motivations"><name>Motivations</name>

<t>This section provides the motivation for the YANG data model defined
   in this document.</t>

<t><xref target="yang-motivation"/> describes the motivation for a YANG data model to request
   path computation.</t>

<t><xref target="topo-interaction"/> describes the motivation for a YANG data model which
   complements the TE topology YANG data model defined in <xref target="RFC8795"/>.</t>

<t><xref target="rpc-motivation"/> describes the motivation for a YANG RPC which complements
   the TE tunnel YANG data model defined in <xref target="I-D.ietf-teas-yang-te"/>.</t>

<section anchor="yang-motivation"><name>Motivation for a YANG Model</name>

<section anchor="benefits-of-common-data-models"><name>Benefits of common data models</name>

<t>The YANG data model for requesting path computation is closely
   aligned with the YANG data models that provide (abstract) TE topology
   information, i.e., <xref target="RFC8795"/> as well as that are used to configure
   and manage TE tunnels, i.e., <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>There are many benefits in aligning the data model used for path
   computation requests with the YANG data models used for TE topology
   information and for TE tunnels configuration and management:</t>

<t><list style="symbols">
  <t>There is no need for an error-prone mapping or correlation of
information.</t>
  <t>It is possible to use the same endpoint identifiers in path
computation requests and in the topology modeling.</t>
  <t>The attributes used for path computation constraints are the same
as those used when setting up a TE tunnel.</t>
</list></t>

</section>
<section anchor="benefits-of-a-single-interface"><name>Benefits of a single interface</name>

<t>The system integration effort is typically lower if a single,
   consistent interface is used by controllers, i.e., one data modeling
   language (i.e., YANG) and a common protocol (e.g., NETCONF or
   RESTCONF).</t>

<t>Practical benefits of using a single, consistent interface include:</t>

<t><list style="numbers">
  <t>Simple authentication and authorization: The interface between
different components has to be secured. If different protocols
have different security mechanisms, ensuring a common access
control model may result in overhead. For instance, there may be a
need to deal with different security mechanisms, e.g., different
credentials or keys. This can result in increased integration
effort.</t>
  <t>Consistency: Keeping data consistent over multiple different
interfaces or protocols is not trivial. For instance, the sequence
of actions can matter in certain use cases, or transaction
semantics could be desired. While ensuring consistency within one
protocol can already be challenging, it is typically cumbersome to
achieve that across different protocols.</t>
  <t>Testing: System integration requires comprehensive testing,
including corner cases. The more different technologies are
involved, the more difficult it is to run comprehensive test cases
and ensure proper integration.</t>
  <t>Middle-box friendliness: Provider and consumer of path computation
requests may be located in different networks, and middle-boxes
such as firewalls, NATs, or load balancers may be deployed. In
such environments it is simpler to deploy a single protocol. Also,
it may be easier to debug connectivity problems.</t>
  <t>Tooling reuse: Implementers may want to implement path computation
requests with tools and libraries that already exist in
controllers and/or orchestrators, e.g., leveraging the rapidly
growing eco-system for YANG tooling.</t>
</list></t>

</section>
<section anchor="extensibility"><name>Extensibility</name>

<t>Path computation is only a subset of the typical functionality of a
   controller. In many use cases, issuing path computation requests
   comes along with the need to access other functionality on the same
   system. In addition to obtaining TE topology, for instance also
   configuration of services (set-up/modification/deletion) may be
   required, as well as:</t>

<t><list style="numbers">
  <t>Receiving notifications for topology changes as well as
integration with fault management</t>
  <t>Performance management such as retrieving monitoring and telemetry
data</t>
  <t>Service assurance, e.g., by triggering OAM functionality</t>
  <t>Other fulfilment and provisioning actions beyond tunnels and
services, such as changing QoS configurations  <vspace blankLines='1'/>
YANG is a very extensible and flexible data modeling language that
can be used for all these use cases.</t>
</list></t>

</section>
</section>
<section anchor="topo-interaction"><name>Interactions with TE topology</name>

<t>The use cases described in <xref target="use-cases"/> have been described assuming
   that the topology view exported by each underlying controller to its
   client is aggregated using the "virtual node model", defined in
   <xref target="RFC7926"/>.</t>

<t>TE topology information, e.g., as provided by <xref target="RFC8795"/>, could in
   theory be used by an underlying controller to provide TE information
   to its client thus allowing a PCE available within its client to
   perform multi-domain path computation on its own, without requesting
   path computations to the underlying controllers.</t>

<t>In case the client does not implement a PCE function, as discussed in
   <xref target="intro"/>, it could not perform path computation based on TE topology
   information and would instead need to request path computation from
   the underlying controllers to get the information it needs to find
   the optimal end-to-end path.</t>

<t>In case the client implements a PCE function, as discussed in 
   <xref target="intro"/>, the TE topology information needs to be complete and accurate,
   which would bring to scalability issues.</t>

<t>Using TE topology to provide a "virtual link model" aggregation, as
   described in <xref target="RFC7926"/>, may be insufficient, unless the aggregation
   provides complete and accurate information, which would still cause
   scalability issues, as described in <xref target="topo-aggregation"/> below.</t>

<t>Using TE topology abstraction, as described in <xref target="RFC7926"/>, may lead to
   compute an unfeasible path, as described in <xref target="RFC7926"/> in 
   <xref target="topo-abstraction"/> below.</t>

<t>Therefore when computing an optimal multi-domain path, there is a
   scalability trade-off between providing complete and accurate TE
   information and the number of path computation requests to the
   underlying controllers.</t>

<t>The TE topology information used, in a complimentary way, to reduce
   the number for path computation requests to the underlying
   controllers, are described in <xref target="topo-pc-complement"/> below.</t>

<section anchor="topo-aggregation"><name>TE topology aggregation</name>

<t>Using the TE topology model, as defined in <xref target="RFC8795"/>, the underlying
   controller can export the whole TE domain as a single TE node with a
   "detailed connectivity matrix" (which provides specific TE
   attributes, such as delay, Shared Risk Link Groups (SRLGs) and other
   TE metrics, between each ingress and egress links).</t>

<t>The information provided by the "detailed connectivity matrix" would
   be equivalent to the information that should be provided by "virtual
   link model" as defined in <xref target="RFC7926"/>.</t>

<t>For example, in the Packet/Optical Integration use case, described in
   <xref target="poi-uc"/>, the Optical Domain Controller can make the information
   shown in <xref target="fig-poi-example"/> available to the Packet/Optical Coordinator as part
   of the TE topology information and the Packet/Optical Coordinator
   could use this information to calculate on its own the optimal path
   between R1 and R2, without requesting any additional information to
   the Optical Domain Controller.</t>

<t>However, when designing the amount of information to provide within
   the "detailed connectivity matrix", there is a tradeoff to be
   considered between accuracy (i.e., providing "all" the information
   that might be needed by the PCE available within the client) and
   scalability.</t>

<t><xref target="poi-multi-path"/> below shows another example, similar to <xref target="fig-poi-example"/>, where
   there are two possible Optical paths between VP1 and VP4 with
   different properties (e.g., available bandwidth and cost).</t>

<figure title="Packet/Optical Integration path computation Example with multiple choices" anchor="poi-multi-path"><artwork><![CDATA[
                    ............................
                    :  /--------------------\  :
                    : /       cost=65        \ :
                    :/    available-bw=10G    \:
                    O VP1                  VP4 O
           cost=10 /:\                        /:\ cost=10
                  / : \----------------------/ : \
          +----+ /  :         cost=50          :  \ +----+
          |    |/   :     available-bw=2G      :   \|    |
          | R1 |    :                          :    | R2 |
          |    |\   :                          :   /|    |
          +----+ \  :  /--------------------\  :  / +----+
                  \ : /       cost=55        \ : /
            cost=5 \:/    available-bw=3G     \:/ cost=5
                    O VP2                  VP5 O
                    :                          :
                    :..........................:
]]></artwork></figure>

<t>If the information in the "detailed connectivity matrix" is not
   complete/accurate, we can have the following drawbacks:</t>

<t><list style="symbols">
  <t>If only the VP1-VP4 path with available bandwidth of 2 Gb/s and
cost 50 is reported, the client's PCE will fail to compute a 5
Gb/s path between routers R1 and R2, although this would be
feasible;</t>
  <t>If only the VP1-VP4 path with available bandwidth of 10 Gb/s and
cost 60 is reported, the client's PCE will compute, as optimal,
the 1 Gb/s path between R1 and R2 going through the VP2-VP5 path
within the optical domain while the optimal path would actually be
the one going thought the VP1-VP4 sub-path (with cost 50) within
the optical domain.  <vspace blankLines='1'/>
Reporting all the information, as in <xref target="poi-multi-path"/>, using the "detailed
 connectivity matrix", is quite challenging from a scalability
 perspective. The amount of this information is not just based on
 number of end points (which would scale as N-square), but also on
 many other parameters, including client rate, user
 constraints/policies for the service, e.g. max latency &lt; N ms, max
 cost, etc., exclusion policies to route around busy links, min
 Optical Signal to Noise Ratio (OSNR) margin, max pre-Forward Error
 Correction (FEC) Bit Error Rate (BER) etc. All these constraints
 could be different based on connectivity requirements.  <vspace blankLines='1'/>
It is also worth noting that the "connectivity matrix" has been
 originally defined in Wavelength Switched Optical Networks (WSON),
 <xref target="RFC7446"/>, to report the connectivity constrains of a physical node
 within the Wavelength Division Multiplexing (WDM) network: the
 information it contains is pretty "static" and therefore, once taken
 and stored in the TE data base, it can be always being considered
 valid and up-to-date in path computation request.  <vspace blankLines='1'/>
The "connectivity matrix" is sometimes confused with "optical reach
 table" that contain multiple (e.g. k-shortest) regen-free reachable
 paths for every A-Z node combination in the network. Optical reach
 tables can be calculated offline, utilizing vendor optical design and
 planning tools, and periodically uploaded to the Controller: these
 optical path reach tables are fairly static. However, to get the
 connectivity matrix, between any two sites, either a regen free path
 can be used, if one is available, or multiple regen free paths are
 concatenated to get from the source to the destination, which can be
 a very large combination. Additionally, when the optical path within
 optical domain needs to be computed, it can result in different paths
 based on input objective, constraints, and network conditions. In
 summary, even though "optical reach table" is fairly static, which
 regen free paths to build the connectivity matrix between any source
 and destination is very dynamic, and is done using very sophisticated
 routing algorithms.  <vspace blankLines='1'/>
Using the "basic connectivity matrix" with an abstract node to
 abstract the information regarding the connectivity constraints of an
 Optical domain, would make this information more "dynamic" since the
 connectivity constraints of an optical domain can change over time
 because some optical paths that are feasible at a given time may
 become unfeasible at a later time when e.g., another optical path is
 established.  <vspace blankLines='1'/>
The information in the "detailed connectivity matrix" is even more
 dynamic since the establishment of another optical path may change
 some of the parameters (e.g., delay or available bandwidth) in the
 "detailed connectivity matrix" while not changing the feasibility of
 the path.  <vspace blankLines='1'/>
There is therefore the need to keep the information in the "detailed
 connectivity matrix" updated which means that there another tradeoff
 between the accuracy (i.e., providing "all" the information that
 might be needed by the client's PCE) and having up-to-date
 information. The more the information is provided and the longer it
 takes to keep it up-to-date which increases the likelihood that the
 client's PCE computes paths using not updated information.  <vspace blankLines='1'/>
It seems therefore quite challenging to have a "detailed connectivity
 matrix" that provides accurate, scalable and updated information to
 allow the client's PCE to take optimal decisions by its own.  <vspace blankLines='1'/>
Considering the example in <xref target="poi-multi-path"/> with the approach defined in this
 document, the client, when it needs to set up an end-to-end path, it
 can request the Optical Domain Controller to compute a set of optimal
 paths (e.g., for VP1-VP4 and VP2-VP5) and take decisions based on the
 information received:</t>
  <t>When setting up a 5 Gb/s path between routers R1 and R2, the
Optical Domain Controller may report only the VP1-VP4 path as the
only feasible path: the Packet/Optical Coordinator can
successfully set up the end-to-end path passing though this
optical path;</t>
  <t>When setting up a 1 Gb/s path between routers R1 and R2, the
Optical Domain Controller (knowing that the path requires only 1
Gb/s) can report both the VP1-VP4 path, with cost 50, and the VP2-
VP5 path, with cost 65. The Packet/Optical Coordinator can then
compute the optimal path which is passing thought the VP1-VP4 sub-
path (with cost 50) within the optical domain.</t>
</list></t>

</section>
<section anchor="topo-abstraction"><name>TE topology abstraction</name>

<t>Using the TE topology model, as defined in <xref target="RFC8795"/>, the underlying
   controller can export to its client an abstract TE topology, composed
   by a set of TE nodes and TE links, representing the abstract view of
   the topology under its control.</t>

<t>For example, in the multi-domain TE network use case, described in
   <xref target="md-uc"/>, the TE Domain Controller 1 can export a TE topology
   encompassing the TE nodes A, B, C and D and the TE links
   interconnecting them. In a similar way, the TE Domain Controller 2
   can export a TE topology encompassing the TE nodes E, F, G and H and
   the TE links interconnecting them.</t>

<t>In this example, for simplicity reasons, each abstract TE node maps
   with each physical node, but this is not necessary.</t>

<t>In order to set up a multi-domain TE path (e.g., between nodes A and
   H), the Multi-Domain Controller can compute by its own an optimal
   end-to-end path based on the abstract TE topology information
   provided by the domain controllers. For example:</t>

<t><list style="symbols">
  <t>Multi-Domain Controller can compute, based on its own TED data,
the optimal multi-domain path being A-B-C-E-G-H, and then request
the TE Domain Controllers to set up the A-B-C and E-G-H intra-
domain paths</t>
  <t>But, during path set-up, the TE Domain Controller may find out
that A-B-C intra-domain path is not feasible (as discussed in
<xref target="md-uc"/>, in optical networks it is typical to have some paths
not being feasible due to optical constraints that are known only
by the Optical Domain Controller), while only the path A-B-D is
feasible</t>
  <t>So what the Multi-Domain Controller has computed is not good and
it needs to re-start the path computation from scratch  <vspace blankLines='1'/>
As discussed in <xref target="topo-aggregation"/>, providing more extensive abstract
information from the TE Domain Controllers to the Multi-Domain
Controller may lead to scalability problems.  <vspace blankLines='1'/>
In a sense this is similar to the problem of routing and wavelength
assignment within an optical domain. It is possible to do first
routing (step 1) and then wavelength assignment (step 2), but the
chances of ending up with a good path is low. Alternatively, it is
possible to do combined routing and wavelength assignment, which is
known to be a more optimal and effective way for optical path set-up.
Similarly, it is possible to first compute an abstract end-to-end
path within the Multi-Domain Controller (step 1) and then compute an
intra-domain path within each optical domain (step 2), but there are
more chances not to find a path or to get a suboptimal path than by
performing multiple per-domain path computations and then stitching
them together.</t>
</list></t>

</section>
<section anchor="topo-pc-complement"><name>Complementary use of the TE topology</name>

<t>As discussed in <xref target="md-uc"/>, there are some scalability issues with
   path computation requests in a multi-domain TE network with many TE
   domains, in terms of the number of requests to send to the TE Domain
   Controllers. It would therefore be worthwhile using the abstract TE
   topology information provided by the TE Domain Controllers to limit
   the number of requests.</t>

<t>An example can be described considering the multi-domain abstract TE
   topology shown in <xref target="fig-topo-many-domains"/>. In this example, an end-to-end TE path
   between domains A and F needs to be set up. The transit TE domain
   should be selected between domains B, C, D and E.</t>

<figure title="Multi-domain with many domains (Topology information)" anchor="fig-topo-many-domains"><artwork><![CDATA[
                          .........B.........
                          : _ _ _ _ _ _ _ _ :
                          :/               \:
                      +---O  NOT FEASIBLE   O---+
                cost=5|   :                 :   |
    ......A......     |   :.................:   |     ......F......
    :           :     |                         |     :           :
    :           O-----+   .........C.........   +-----O           :
    :           :         : /-------------\ :         :           :
    :           :         :/               \:         :           :
    :  cost<=20 O---------O   cost <= 30    O---------O cost<=20  :
    :          /: cost=5  :                 : cost=5  :\          :
    :  /------/ :         :.................:         : \------\  :
    : /         :                                     :         \ :
    :/ cost<=25 :         .........D.........         : cost<=25 \:
    O-----------O-------+ : /-------------\ : +-------O-----------O
    :\          : cost=5| :/               \: |cost=5 :          /:
    : \         :       +-O   cost <= 30    O-+       :         / :
    :  \------\ :         :                 :         : /------/  :
    : cost>=30 \:         :.................:         :/ cost>=30 :
    :           O-----+                         +-----O           :
    :...........:     |   .........E.........   |     :...........:
                      |   : /-------------\ :   |
                cost=5|   :/               \:   |cost=5
                      +---O   cost >= 30    O---+
                          :                 :
                          :.................:
]]></artwork></figure>

<t>The actual cost of each intra-domain path is not known a priori from
   the abstract topology information. The Multi-Domain Controller only
   knows, from the TE topology provided by the underlying domain
   controllers, the feasibility of some intra-domain paths and some
   upper-bound and/or lower-bound cost information. With this
   information, together with the cost of inter-domain links, the Multi-
   Domain Controller can understand by its own that:</t>

<t><list style="symbols">
  <t>Domain B cannot be selected as the path connecting domains A and F
is not feasible;</t>
  <t>Domain E cannot be selected as a transit domain since it is known
from the abstract topology information provided by domain
controllers that the cost of the multi-domain path A-E-F (which is
100, in the best case) will be always be higher than the cost of
the multi-domain paths A-D-F (which is 90, in the worst case) and
A-C-F (which is 80, in the worst case).  <vspace blankLines='1'/>
Therefore, the Multi-Domain Controller can understand by its own that
 the optimal multi-domain path could be either A-D-F or A-C-F but it
 cannot know which one of the two possible option actually provides
 the optimal end-to-end path.  <vspace blankLines='1'/>
The Multi-Domain Controller can therefore request path computation
 only to the TE Domain Controllers A, D, C and F (and not to all the
 possible TE Domain Controllers).</t>
</list></t>

<figure title="Multi-domain with many domains (Path Computation information)" anchor="fig-pc-many-domains"><artwork><![CDATA[
                          .........B.........
                          :                 :
                      +---O                 O---+
    ......A......     |   :.................:   |     ......F......
    :           :     |                         |     :           :
    :           O-----+   .........C.........   +-----O           :
    :           :         : /-------------\ :         :           :
    :           :         :/               \:         :           :
    :  cost=15  O---------O    cost = 25    O---------O  cost=10  :
    :          /: cost=5  :                 : cost=5  :\          :
    :  /------/ :         :.................:         : \------\  :
    : /         :                                     :         \ :
    :/ cost=10  :         .........D.........         : cost=15  \:
    O-----------O-------+ : /-------------\ : +-------O-----------O
    :           : cost=5| :/               \: |cost=5 :           :
    :           :       +-O    cost = 15    O-+       :           :
    :           :         :                 :         :           :
    :           :         :.................:         :           :
    :           O-----+                         +-----O           :
    :...........:     |   .........E.........   |     :...........:
                      |   :                 :   |
                      +---O                 O---+
                          :.................:
]]></artwork></figure>

<t>Based on these requests, the Multi-Domain Controller can know the
   actual cost of each intra-domain paths which belongs to potential
   optimal end-to-end paths, as shown in <xref target="fig-pc-many-domains"/>, and then compute the
   optimal end-to-end path (e.g., A-D-F, having total cost of 50,
   instead of A-C-F having a total cost of 70).</t>

</section>
</section>
<section anchor="rpc-motivation"><name>Path Computation RPC</name>

<t>The TE tunnel YANG data model, defined in <xref target="I-D.ietf-teas-yang-te"/>, can support
   the need to request path computation, as described in section 5.1.2
   of <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>This solution is stateful since the state of each created "compute-
   only" TE tunnel path needs to be maintained, in the YANG datastores
   (at least in the running datastore and operational datastore), and
   updated, when underlying network conditions change.</t>

<t>The RPC mechanism allows requesting path computation using a simple
   atomic operation, without creating any state in the YANG datastores,
   and it is the natural option/choice, especially with stateless PCE.</t>

<t>It is very useful to provide both the options of using an RPC as well
   as of setting up TE tunnel paths in "compute-only" mode. It is
   suggested to use the RPC as much as possible and to rely on
   "compute-only" TE tunnel paths, when really needed.</t>

<t>Using the RPC solution would imply that the underlying controller
   (e.g., a PNC) computes a path twice during the process to set up an
   LSP: at time T1, when its client (e.g., an MDSC) sends a path
   computation RPC request to it, and later, at time T2, when the same
   client (MDSC) creates a TE tunnel requesting the set-up of the LSP.
   The underlying assumption is that, if network conditions have not
   changed, the same path that has been computed at time T1 is also
   computed at time T2 by the underlying controller (e.g. PNC) and
   therefore the path that is set up at time T2 is exactly the same path
   that has been computed at time T1.</t>

<t>However, since the operation is stateless, there is no guarantee that
   the returned path would still be available when path set-up is
   requested: this does not cause major issues when the time between
   path computation and path set-up is short (especially if compared
   with the time that would be needed to update the information of a
   very detailed connectivity matrix).</t>

<t>In most of the cases, there is even no need to guarantee that the
   path that has been set up is the exactly same as the path that has
   been returned by path computation, especially if it has the same or
   even better metrics. Depending on the abstraction level applied by
   the server, the client may also not know the actual computed path.</t>

<t>The most important requirement is that the required global objectives
   (e.g., multi-domain path metrics and constraints) are met. For this
   reason a path verification phase is always necessary to verify that
   the actual path that has been set up meets the global objectives (for
   example in a multi-domain network, the resulting end-to-end path
   meets the required end-to-end metrics and constraints).</t>

<t>In most of the cases, even if the path being set up is not exactly
   the same as the path returned by path computation, its metrics and
   constraints are "good enough" and the path verification passes
   successfully. In the few corner cases where the path verification
   fails, it is possible repeat the whole process (path computation,
   path set-up and path verification).</t>

<t>In case it is required to set up at T2 exactly the same path computed
   at T1, the RPC solution should not be used and, instead, a "compute-
   only" TE tunnel path should be set up, allowing also notifications in
   case the computed path has been changed.</t>

<t>In this case, at time T1, the client (MDSC) creates a TE tunnel in a
   compute-only mode in the running datastore and later, at time T2,
   changes the configuration of that TE tunnel (not to be any more in a
   compute-only mode) to trigger the set-up of the LSP over the path
   which have been computed at time T1 and reported in the operational
   datastore.</t>

<t>It is worth noting that also using the "compute-only" TE tunnel path,
   although increasing the likelihood that the computed path is
   available at path set-up, does not guarantee that because
   notifications may not be reliable or delivered on time. Path
   verification is needed also in this case.</t>

<t>The solution based on "compute-only" TE tunnel path has also the
   following drawbacks:</t>

<t><list style="symbols">
  <t>Several messages required for any path computation</t>
  <t>Requires persistent storage in the underlying controller</t>
  <t>Need for garbage collection for stranded paths</t>
  <t>Process burden to detect changes on the computed paths in order to
provide notifications update</t>
</list></t>

<section anchor="temp-state"><name>Temporary reporting of the computed path state</name>

<t>This section describes an optional extension to the stateless
   behavior of the path computation RPC, where the underlying
   controller, after having received a path computation RPC request,
   maintains some "transient state" associated with the computed path,
   allowing the client to request the set-up of exactly that path, if
   still available.</t>

<t>This is similar to the "compute-only" TE tunnel path solution but, to
   avoid the drawbacks of the stateful approach, is leveraging the path
   computation RPC and the separation between configuration and
   operational datastore, as defined in the NMDA architecture <xref target="RFC8342"/>.</t>

<t>The underlying controller, after having computed a path, as requested
   by a path computation RPC, also creates a TE tunnel instance within
   the operational datastore, to store that computed path. This would be
   similar to a "compute-only" TE tunnel path, with the only difference
   that there is no associated TE tunnel instance within the running
   datastore.</t>

<t>Since the underlying controller stores in the operational datastore
   the computed path based on an abstract topology it exposes, it also
   remembers, internally, which is the actual native path (physical
   path), within its native topology (physical topology), associated
   with that compute-only TE tunnel instance.</t>

<t>Afterwards, the client (e.g., MDSC) can request the set-up of that
   specific path by creating a TE tunnel instance (not in compute-only
   mode) in the running datastore using the same tunnel-name of
   the existing TE tunnel in the operational datastore: this will
   trigger the underlying controller to set up that path, if still
   available.</t>

<t>There are still cases where the path being set up is not exactly the
   same as the path that has been computed:</t>

<t><list style="symbols">
  <t>When the tunnel is configured with path constraints which are not
compatible with the computed path;</t>
  <t>When the tunnel set-up is requested after the resources of the
computed path are no longer available;</t>
  <t>When the tunnel set-up is requested after the computed path is no
longer known (e.g. due to a server reboot) by the underlying
controller.  <vspace blankLines='1'/>
In all these cases, the underlying controller should compute and set
 up a new path.  <vspace blankLines='1'/>
Therefore the "path verification" phase, as described in <xref target="rpc-motivation"/>
 above, is always needed to check that the path that has been set up
 is still "good enough".  <vspace blankLines='1'/>
Since this new approach is not completely stateless, garbage
 collection is implemented using a timeout that, when it expires,
 triggers the removal of the computed path from the operational
 datastore. This operation is fully controlled by the underlying
 controller without the need for any action to be taken by the client
 that is not able to act on the operational datastore. The default
 value of this timeout is 10 minutes but a different value may be
 configured by the client.  <vspace blankLines='1'/>
In addition, it is possible for the client to tag each path
 computation request with a transaction-id allowing for a faster
 removal of all the paths associated with a transaction-id, without
 waiting for their timers to expire.  <vspace blankLines='1'/>
The underlying controller can remove from the operational datastore
 all the paths computed with a given transaction-id which have not
 been set up either when it receives a Path Delete RPC request for
 that transaction-id or, automatically, right after the set-up up of a
 path that has been previously computed with that transaction-id.  <vspace blankLines='1'/>
This possibility is useful when multiple paths are computed but, at
 most, only one is set up (e.g., in multi-domain path computation
 scenario scenarios). After the selected path has been set up (e.g, in
 one domain during multi-domain path set-up), all the other
 alternative computed paths can be automatically deleted by the
 underlying controller (since no longer needed). The client can also
 request, using the Path Delete RPC request, the underlying controller
 to remove all the computed paths, if none of them is going to be set
 up (e.g., in a transit domain not being selected by multi-domain path
 computation and so not being automatically deleted).  <vspace blankLines='1'/>
This approach is complimentary and not alternative to the timer which
 is always needed to avoid stranded computed paths being stored in the
 operational datastore when no path is set up and no explicit Path
 Delete RPC request is received.</t>
</list></t>

</section>
</section>
</section>
<section anchor="path-computation-and-optimization-for-multiple-paths"><name>Path computation and optimization for multiple paths</name>

<t>There are use cases, where it is advantageous to request path
   computation for a set of paths, through a network or through a
   network domain, using a single request <xref target="RFC5440"/>.</t>

<t>In this case, sending a single request for multiple path
   computations, instead of sending multiple requests for each path
   computation, would reduce the protocol overhead and it would consume
   less resources (e.g., threads in the client and server).</t>

<t>In the context of a typical multi-domain TE network, there could
   multiple choices for the ingress/egress points of a domain and the
   Multi-Domain Controller needs to request path computation between all
   the ingress/egress pairs to select the best pair. For example, in the
   example of <xref target="md-uc"/>, the Multi-Domain Controller needs to request
   the TE Network Controller 1 to compute the A-C and the A-D paths and
   to the TE Network Controller 2 to compute the E-H and the F-H paths.</t>

<t>It is also possible that the Multi-Domain Controller receives a
   request to set up a group of multiple end to end connections. The
   Multi-Domain Controller needs to request each TE domain Controller to
   compute multiple paths, one (or more) for each end to end connection.</t>

<t>There are also scenarios where it can be needed to request path
   computation for a set of paths in a synchronized fashion.</t>

<t>One example could be computing multiple diverse paths. Computing a
   set of diverse paths in an unsynchronized fashion, leads to the
   possibility of not being able to satisfy the diversity requirement.
   In this case, it is preferable to compute a sub-optimal primary path
   for which a diversely routed secondary path exists.</t>

<t>There are also scenarios where it is needed to request optimizing a
   set of paths using objective functions that apply to the whole set of
   paths, see <xref target="RFC5541"/>, e.g. to minimize the sum of the costs of all
   the computed paths in the set.</t>

</section>
<section anchor="yang-data-model-for-requesting-path-computation"><name>YANG data model for requesting Path Computation</name>

<t>This document define a YANG RPC to request path computation as an
   "augmentation" of tunnel-rpc, defined in <xref target="I-D.ietf-teas-yang-te"/>. This model
   provides the RPC input attributes that are needed to request path
   computation and the RPC output attributes that are needed to report
   the computed paths.</t>

<figure><artwork><![CDATA[
     augment /te:tunnels-path-compute/te:input/te:path-compute-info:
       +-- path-request* [request-id]
       |  +-- request-id                            uint32
       |  ...........

     augment /te:tunnels-path-compute/te:output/te:path-compute-result:
       +--ro response* [response-id]
          +--ro response-id                         uint32
          +--ro computed-paths-properties
          |  +--ro computed-path-properties* [k-index]
          |     +--ro k-index            uint8
          |     +--ro path-properties
          |     ...........
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>This model extensively re-uses the grouping defined in <xref target="I-D.ietf-teas-yang-te"/>
   and <xref target="RFC8776"/> to ensure maximal syntax and semantics commonality.</t>

<t>This YANG data model allows one RPC to include multiple path
   requests, each path request being identified by a request-id.
   Therefore, one RPC can return multiple responses, one for each path
   request, being identified by a response-id equal to the corresponding
   request-id. Each response reports one or more computed paths, as
   requested by the k-requested-paths attribute. By default, each
   response reports one computed path.</t>

<section anchor="synchronization-of-multiple-path-computation-requests"><name>Synchronization of multiple path computation requests</name>

<t>The YANG data model permits the synchronization of a set of multiple
   path requests (identified by specific request-id) all related to a
   "svec" container emulating the syntax of the Synchronization VECtor
   (SVEC) PCEP object, defined in <xref target="RFC5440"/>.</t>

<figure><artwork><![CDATA[
       +-- synchronization* []
          +-- svec
          |  +-- relaxable?           boolean
          |  +-- disjointness?        te-path-disjointness
          |  +-- request-id-number*   uint32
          +-- svec-constraints
          |  +-- path-metric-bound* [metric-type]
          |     +-- metric-type    identityref
          |     +-- upper-bound?   uint64
          +-- path-srlgs-lists
          |  +-- path-srlgs-list* [usage]
          |     +-- usage     identityref
          |     +-- values*   srlg
          +-- path-srlgs-names
          |  +-- path-srlgs-name* [usage]
          |     +-- usage    identityref
          |     +-- names*   string
          +-- exclude-objects
          |  +-- excludes* []
          |     +-- (type)?
          |        +--:(numbered-node-hop)
          |        |  +-- numbered-node-hop
          |        |     +-- node-id     te-node-id
          |        |     +-- hop-type?   te-hop-type
          |        +--:(numbered-link-hop)
          |        |  +-- numbered-link-hop
          |        |     +-- link-tp-id    te-tp-id
          |        |     +-- hop-type?     te-hop-type
          |        |     +-- direction?    te-link-direction
          |        +--:(unnumbered-link-hop)
          |        |  +-- unnumbered-link-hop
          |        |     +-- link-tp-id    te-tp-id
          |        |     +-- node-id       te-node-id
          |        |     +-- hop-type?     te-hop-type
          |        |     +-- direction?    te-link-direction
          |        +--:(as-number)
          |        |  +-- as-number-hop
          |        |     +-- as-number    inet:as-number
          |        |     +-- hop-type?    te-hop-type
          |        +--:(label)
          |           +-- label-hop
          |              +-- te-label
          |                 +-- (technology)?
          |                 |  +--:(generic)
          |                 |     +-- generic?
          |                 |             rt-types:generalized-label
          |                 +-- direction?       te-label-direction
          +-- optimizations
             +-- (algorithm)?
                +--:(metric) {te-types:path-optimization-metric}?
                |  +-- optimization-metric* [metric-type]
                |     +-- metric-type    identityref
                |     +-- weight?        uint8
                +--:(objective-function)
                         {te-types:path-optimization-objective-
   function}?
                   +-- objective-function
                      +-- objective-function-type?   identityref
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>The model, in addition to the metric types, defined in <xref target="RFC8776"/>,
   which can be applied to each individual path request, supports also
   additional metric types, which apply to a set of synchronized
   requests, as referenced in <xref target="RFC5541"/>. These additional metric types
   are defined by the following YANG identities:</t>

<t><list style="symbols">
  <t>svec-metric-type: base YANG identity from which cumulative metric
types identities are derived.</t>
  <t>svec-metric-cumul-te: cumulative TE cost metric type, as defined
in <xref target="RFC5541"/>.</t>
  <t>svec-metric-cumul-igp: cumulative IGP cost metric type, as defined
in <xref target="RFC5541"/>.</t>
  <t>svec-metric-cumul-hop: cumulative Hop metric type, representing
the cumulative version of the Hop metric type defined in
<xref target="RFC8776"/>.</t>
  <t>svec-metric-aggregate-bandwidth-consumption: aggregate bandwidth
consumption metric type, as defined in <xref target="RFC5541"/>.</t>
  <t>svec-metric-load-of-the-most-loaded-link: load of the most loaded
link metric type, as defined in <xref target="RFC5541"/>.</t>
</list></t>

</section>
<section anchor="returned-metric-values"><name>Returned metric values</name>

<t>This YANG data model provides a way to return the values of the
   metrics computed by the path computation in the output of RPC,
   together with other important information (e.g. srlg, affinities,
   explicit route), emulating the syntax of the "C" flag of the "METRIC"
   PCEP object <xref target="RFC5440"/>:</t>

<figure><artwork><![CDATA[
          |     +--ro path-properties
          |        +--ro path-metric* [metric-type]
          |        |  +--ro metric-type           identityref
          |        |  +--ro accumulative-value?   uint64
          |        +--ro path-affinities-values
          |        |  +--ro path-affinities-value* [usage]
          |        |     +--ro usage    identityref
          |        |     +--ro value?   admin-groups
          |        +--ro path-affinity-names
          |        |  +--ro path-affinity-name* [usage]
          |        |     +--ro usage            identityref
          |        |     +--ro affinity-name* [name]
          |        |        +--ro name    string
          |        +--ro path-srlgs-lists
          |        |  +--ro path-srlgs-list* [usage]
          |        |     +--ro usage     identityref
          |        |     +--ro values*   srlg
          |        +--ro path-srlgs-names
          |        |  +--ro path-srlgs-name* [usage]
          |        |     +--ro usage    identityref
          |        |     +--ro names*   string
          |        +--ro path-route-objects
          |        ...........
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>It also allows the client to request which information (metrics, srlg
   and/or affinities) should be returned:</t>

<figure><artwork><![CDATA[
       |  +-- request-id                            uint32
       |  ...........
       |  +-- requested-metrics* [metric-type]
       |  |  +-- metric-type    identityref
       |  +-- return-srlgs?                         boolean
       |  +-- return-affinities?                    boolean
       |  ...........
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>This feature is essential for path computation in a multi-domain TE
   network as described in <xref target="md-uc"/>. In this case, the metrics
   returned by a path computation requested to a given underlying
   controller must be used by the client to compute the best end-to-end
   path. If they are missing, the client cannot compare different paths
   calculated by the underlying controllers and choose the best one for
   the optimal end-to-end (e2e) path.</t>

</section>
<section anchor="multiple-paths-requests-for-the-same-te-tunnel"><name>Multiple Paths Requests for the same TE tunnel</name>

<t>The YANG data model allows including multiple requests for different
   paths intended to be used within the same tunnel or within different
   tunnels.</t>

<t>When multiple requested paths are intended to be used within the same
   tunnel (e.g., requesting path computation for the primary and
   secondary paths of a protected tunnel), the set of attributes that
   are intended to be configured on per-tunnel basis rather than on per-
   path basis are common to all these path requests. These attributes
   includes both attributes which can be configured only a per-tunnel
   basis (e.g., tunnel-name, source/destination TTP, encoding and
   switching-type) as well attributes which can be configured both on a
   per-tunnel and on a per-path basis (e.g., the te-bandwidth or the
   associations).</t>

<t>Therefore, a tunnel-attributes list is defined, within the path
   computation request RPC:</t>

<figure><artwork><![CDATA[
       +-- tunnel-attributes* [tunnel-name]
       |  +-- tunnel-name               string
       |  +-- encoding?                 identityref
       |  +-- switching-type?           identityref
       |  ...........
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>The path requests that are intended to be used within the same tunnel
   should reference the same entry in the tunnel-attributes list. This
   allows:</t>

<t><list style="symbols">
  <t>avoiding repeating the same set of per-tunnel parameters on
multiple requested paths;</t>
  <t>the server to understand what attributes are intended to be
configured on a per-tunnel basis (e.g., the te-bandwidth
configured in the tunnel-attributes) and what attributes are
intended to be configured on a per-path basis(e.g., the te-
bandwidth configured in the path-request). This could be useful
especially when the server also creates a TE tunnel instance
within the operational datastore to report the computed paths, as
described in <xref target="temp-state"/>: in this case, the tunnel-name is also
used as the suggested name for that TE tunnel instance.  <vspace blankLines='1'/>
The YANG data model allows also including requests for paths intended
 to modify existing tunnels (e.g., adding a protection path for an
 existing un-protected tunnel). In this case, the per-tunnel
 attributes are already provided in an existing TE tunnel instance and
 do not need to be re-configured in the path computation request RPC.
 Therefore, these requests should reference an existing TE tunnel
 instance.  <vspace blankLines='1'/>
It is also possible to request computing paths without indicating in
 which tunnel they are intended to be used (e.g., in case of an
 unprotected tunnel). In this case, the per-tunnel attributes could be
 provided together with the per-path attributes in the path request,
 without using the tunnel-attributes list.  <vspace blankLines='1'/>
The choices below are defined to distinguish the cases above:</t>
  <t>whether the per-tunnel attributes are configured by reference
(providing a leafref), to:  <list style="symbols">
      <t>either a TE tunnel instance, if it exists;</t>
      <t>or to an entry of the tunnel-attributes list, if the TE tunnel
instance does not exist;</t>
    </list></t>
  <t>or by value, providing the set of tunnel attributes within the
path request:</t>
</list></t>

<figure><artwork><![CDATA[
       |  +-- (tunnel-attributes)?
       |  |  +--:(reference)
       |  |  |  +-- tunnel-reference
       |  |  |     +-- (tunnel-exist)?
       |  |  |     |  +--:(tunnel-ref)
       |  |  |     |  |  +-- tunnel-ref                te:tunnel-ref
       |  |  |     |  +--:(tunnel-attributes-ref)
       |  |  |     |     +-- tunnel-attributes-ref     leafref
       |  |  ...........
       |  |  +--:(value)
       |  |     +-- tunnel-name?                    string
       |  |     ...........
       |  |     +-- encoding?                       identityref
       |  |     +-- switching-type?                 identityref
       |  |     ...........
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<section anchor="tunnel-attributes-specified-by-value"><name>Tunnel attributes specified by value</name>

<t>The (value) case provides the set of attributes that are configured
   only on per-tunnel basis (e.g., tunnel-name, source/destination TTP,
   encoding and switching-type).</t>

<t>In this case, it is assumed that the requested path will be the only
   path within a tunnel.</t>

<t>If the requested path is a transit segment of a multi-domain end-to-
   end path, it can be of any type (primary, secondary, reverse-primary
   or reverse-secondary), as specified by the (path-role) choice:</t>

<figure><artwork><![CDATA[
       |  |     +-- (path-role)?
       |  |     |  +--:(primary-path)
       |  |     |  +--:(secondary-path)
       |  |     |  |  +-- secondary-path!
       |  |     |  |     +-- primary-path-name?   string
       |  |     |  +--:(primary-reverse-path)
       |  |     |  |  +-- primary-reverse-path!
       |  |     |  |     +-- primary-path-name?   string
       |  |     |  +--:(secondary-reverse-path)
       |  |     |     +-- secondary-reverse-path!
       |  |     |        +-- primary-path-name?           string
       |  |     |        +-- primary-reverse-path-name?   string
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>In all the other cases, the requested path can only be a primary
   path.</t>

<t>The secondary-path, the primary-reverse-path and the secondary-
   reverse-path are presence container used to indicate the role of the
   path: by default, the path is assumed to be a primary path.</t>

<t>They optionally can contain the name of the primary-path under which
   the requested path could be associated within the YANG tree structure
   defined in <xref target="I-D.ietf-teas-yang-te"/>, which could be useful when the server also
   creates a TE tunnel instance within the operational datastore to
   report the computed paths, as described in <xref target="temp-state"/>: in this
   case, the tunnel-name and the path names are also used as the
   suggested name for that TE tunnel and path instances.</t>

</section>
<section anchor="tunnel-attributes-specified-by-reference"><name>Tunnel attributes specified by reference</name>

<t>The (reference) case provides the information needed to associate
   multiple path requests that are intended to be used within the same
   tunnel.</t>

<t>In order to indicate the role of the path being requested within the
   intended tunnel (e.g., primary or secondary path), the (path-role)
   choice is defined:</t>

<figure><artwork><![CDATA[
       |  |  |     +-- (path-role)
       |  |  |        +--:(primary-path)
       |  |  |        |  +-- primary-path!
       |  |  |        |     ...........
       |  |  |        +--:(secondary-path)
       |  |  |        |  +-- secondary-path
       |  |  |        |     ...........
       |  |  |        +--:(primary-reverse-path)
       |  |  |        |  +-- primary-reverse-path
       |  |  |        |     ...........
       |  |  |        +--:(secondary-reverse-path)
       |  |  |           +-- secondary-reverse-path
       |  |  |              ...........
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>The primary-path is a presence container used to indicate that the
   requested path is intended to be used as a primary path. It can also
   contain some attributes which are configured only on primary paths
   (e.g., the k-requested-paths).</t>

<t>The secondary-path container indicates that the requested path is
   intended to be used as a secondary path and it contains at least
   references to one or more primary paths which can use it as a
   candidate secondary path:</t>

<figure><artwork><![CDATA[
       |  |  |        |  +-- secondary-path
       |  |  |        |     ...........
       |  |  |        |     +-- primary-path-ref* []
       |  |  |        |        +-- (primary-path-exist)?
       |  |  |        |           +--:(path-ref)
       |  |  |        |           |  +-- primary-path-ref    leafref
       |  |  |        |           +--:(path-request-ref)
       |  |  |        |              +-- path-request-ref    leafref
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>A requested secondary path can reference any requested primary paths,
   and, in case they are intended to be used within an existing TE
   tunnel, it could also reference any existing primary-paths.</t>

<t>The secondary-path container can also contain some attributes which
   are configured only on secondary paths (e.g., the protection-type).</t>

<t>The primary-reverse-path container indicates that the requested path
   is intended to be used as a primary reverse path and it contains only
   the reference to the primary path which is intended to use it as a
   reverse path:</t>

<figure><artwork><![CDATA[
       |  |  |        |  +-- primary-reverse-path
       |  |  |        |     +-- (primary-path-exist)?
       |  |  |        |        +--:(path-ref)
       |  |  |        |        |  +-- primary-path-ref    leafref
       |  |  |        |        +--:(path-request-ref)
       |  |  |        |           +-- path-request-ref    leafref
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>A requested primary reverse path can reference either a requested
   primary path, or, in case it is intended to be used within an
   existing TE tunnel, an existing primary-path.</t>

<t>The secondary-reverse-path container indicates that the requested
   path is intended to be used as a secondary reverse path and it
   contains at least references to one or more primary paths, whose
   primary reverse path can use it as a candidate secondary reverse
   path:</t>

<figure><artwork><![CDATA[
       |  |  |           +-- secondary-reverse-path
       |  |  |              ...........
       |  |  |              +-- primary-reverse-path-ref* []
       |  |  |                 +-- (primary-reverse-path-exist)?
       |  |  |                    +--:(path-ref)
       |  |  |                    |  +-- primary-path-ref    leafref
       |  |  |                    +--:(path-request-ref)
       |  |  |                       +-- path-request-ref    leafref
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>A requested secondary reverse path can reference any requested
   primary paths, and, in case they are intended to be used within an
   existing TE tunnel, it could reference also existing primary-paths.</t>

<t>The secondary-reverse-path container can also contain some attributes
   which are configured only on secondary reverse paths (e.g., the
   protection-type).</t>

<t>In case the requested path is a transit segment of a multi-domain
   end-to-end path, the primary-path may not be needed to be
   setup/computed. However, the request for path computation of a
   secondary-path or a primary-reverse or of a secondary-reverse-path
   requires that the primary-path exists or it is requested within the
   same RPC request. In the latter case, the path request for the
   primary-path should have an empty ERO to indicate to the server that
   path computation is not requested and no path properties will
   therefore be returned in the RPC response.</t>

</section>
</section>
<section anchor="multi-layer-path-computation"><name>Multi-Layer Path Computation</name>

<t>The models supports requesting multi-layer path computation following
   the same approach based on dependency tunnels, as defined in <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>The tunnel-attributes of a given client-layer path request can
   reference server-layer TE tunnels which can already exist in the YANG
   datastore or be specified in the tunnel-attributes list, within the
   same RPC request:</t>

<figure><artwork><![CDATA[
       |     +-- dependency-tunnels
       |     |  +-- dependency-tunnel* [name]
       |     |  |  +-- name              -> /te:te/tunnels/tunnel/name
       |     |  |  +-- encoding?         identityref
       |     |  |  +-- switching-type?   identityref
       |     |  +-- dependency-tunnel-attributes* [name]
       |     |     +-- name              leafref
       |     |     +-- encoding?         identityref
       |     |     +-- switching-type?   identityref
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>In a similar way as in <xref target="I-D.ietf-teas-yang-te"/>, the server-layer tunnel
   attributes should provide the information of what would be the
   dynamic link in the client layer topology supported by that tunnel,
   if instantiated:</t>

<figure><artwork><![CDATA[
       |     +-- hierarchical-link
       |        +-- local-te-node-id?         te-types:te-node-id
       |        +-- local-te-link-tp-id?      te-types:te-tp-id
       |        +-- remote-te-node-id?        te-types:te-node-id
       |        +-- te-topology-identifier
       |           +-- provider-id?   te-global-id
       |           +-- client-id?     te-global-id
       |           +-- topology-id?   te-topology-id
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>It is worth noting that since path computation RPC is stateless, the
   dynamic hierarchical links configured for the server-layer tunnel
   attributes cannot be used for path computation of any client-layer
   path unless explicitly referenced in the dependency-tunnel-attributes
   list within the same RPC request.</t>

</section>
</section>
<section anchor="yang-data-model-for-te-path-computation"><name>YANG data model for TE path computation</name>

<section anchor="pc-tree"><name>Tree diagram</name>

<t><xref target="fig-pc-tree"/> below shows the tree diagram of the YANG data model defined
   in module ietf-te-path-computation.yang, defined in <xref target="pc-yang"/>.</t>

<figure title="TE path computation tree diagram" anchor="fig-pc-tree"><artwork><![CDATA[
module: ietf-te-path-computation

  augment /te:tunnels-path-compute/te:input/te:path-compute-info:
    +-- path-request* [request-id]
    |  +-- request-id                            uint32
    |  +-- (tunnel-attributes)?
    |  |  +--:(reference)
    |  |  |  +-- tunnel-reference
    |  |  |     +-- (tunnel-exist)?
    |  |  |     |  +--:(tunnel-ref)
    |  |  |     |  |  +-- tunnel-ref                te:tunnel-ref
    |  |  |     |  +--:(tunnel-attributes-ref)
    |  |  |     |     +-- tunnel-attributes-ref     leafref
    |  |  |     +-- path-name?                      string
    |  |  |     +-- (path-role)
    |  |  |        +--:(primary-path)
    |  |  |        |  +-- primary-path!
    |  |  |        |     +-- preference?          uint8
    |  |  |        |     +-- k-requested-paths?   uint8
    |  |  |        +--:(secondary-path)
    |  |  |        |  +-- secondary-path
    |  |  |        |     +-- preference?           uint8
    |  |  |        |     +-- protection-type?      identityref
    |  |  |        |     +-- restoration-type?     identityref
    |  |  |        |     +-- restoration-scheme?   identityref
    |  |  |        |     +-- primary-path-ref* []
    |  |  |        |        +-- (primary-path-exist)?
    |  |  |        |           +--:(path-ref)
    |  |  |        |           |  +-- primary-path-ref    leafref
    |  |  |        |           +--:(path-request-ref)
    |  |  |        |              +-- path-request-ref    leafref
    |  |  |        +--:(primary-reverse-path)
    |  |  |        |  +-- primary-reverse-path
    |  |  |        |     +-- (primary-path-exist)?
    |  |  |        |        +--:(path-ref)
    |  |  |        |        |  +-- primary-path-ref    leafref
    |  |  |        |        +--:(path-request-ref)
    |  |  |        |           +-- path-request-ref    leafref
    |  |  |        +--:(secondary-reverse-path)
    |  |  |           +-- secondary-reverse-path
    |  |  |              +-- preference?                 uint8
    |  |  |              +-- protection-type?            identityref
    |  |  |              +-- restoration-type?           identityref
    |  |  |              +-- restoration-scheme?         identityref
    |  |  |              +-- primary-reverse-path-ref* []
    |  |  |                 +-- (primary-reverse-path-exist)?
    |  |  |                    +--:(path-ref)
    |  |  |                    |  +-- primary-path-ref    leafref
    |  |  |                    +--:(path-request-ref)
    |  |  |                       +-- path-request-ref    leafref
    |  |  +--:(value)
    |  |     +-- tunnel-name?                    string
    |  |     +-- path-name?                      string
    |  |     +-- (path-role)?
    |  |     |  +--:(primary-path)
    |  |     |  +--:(secondary-path)
    |  |     |  |  +-- secondary-path!
    |  |     |  |     +-- primary-path-name?   string
    |  |     |  +--:(primary-reverse-path)
    |  |     |  |  +-- primary-reverse-path!
    |  |     |  |     +-- primary-path-name?   string
    |  |     |  +--:(secondary-reverse-path)
    |  |     |     +-- secondary-reverse-path!
    |  |     |        +-- primary-path-name?           string
    |  |     |        +-- primary-reverse-path-name?   string
    |  |     +-- k-requested-paths?              uint8
    |  |     +-- encoding?                       identityref
    |  |     +-- switching-type?                 identityref
    |  |     +-- source?                         te-types:te-node-id
    |  |     +-- destination?                    te-types:te-node-id
    |  |     +-- src-tunnel-tp-id?               binary
    |  |     +-- dst-tunnel-tp-id?               binary
    |  |     +-- bidirectional?                  boolean
    |  |     +-- te-topology-identifier
    |  |        +-- provider-id?   te-global-id
    |  |        +-- client-id?     te-global-id
    |  |        +-- topology-id?   te-topology-id
    |  +-- association-objects
    |  |  +-- association-object* [association-key]
    |  |  |  +-- association-key    string
    |  |  |  +-- type?              identityref
    |  |  |  +-- id?                uint16
    |  |  |  +-- source
    |  |  |     +-- id?     te-gen-node-id
    |  |  |     +-- type?   enumeration
    |  |  +-- association-object-extended* [association-key]
    |  |     +-- association-key    string
    |  |     +-- type?              identityref
    |  |     +-- id?                uint16
    |  |     +-- source
    |  |     |  +-- id?     te-gen-node-id
    |  |     |  +-- type?   enumeration
    |  |     +-- global-source?     uint32
    |  |     +-- extended-id?       yang:hex-string
    |  +-- optimizations
    |  |  +-- (algorithm)?
    |  |     +--:(metric) {path-optimization-metric}?
    |  |     |  +-- optimization-metric* [metric-type]
    |  |     |  |  +-- metric-type                       identityref
    |  |     |  |  +-- weight?                           uint8
    |  |     |  |  +-- explicit-route-exclude-objects
    |  |     |  |  |  +-- route-object-exclude-object* [index]
    |  |     |  |  |     +-- index                        uint32
    |  |     |  |  |     +-- (type)?
    |  |     |  |  |        +--:(numbered-node-hop)
    |  |     |  |  |        |  +-- numbered-node-hop
    |  |     |  |  |        |     +-- node-id     te-node-id
    |  |     |  |  |        |     +-- hop-type?   te-hop-type
    |  |     |  |  |        +--:(numbered-link-hop)
    |  |     |  |  |        |  +-- numbered-link-hop
    |  |     |  |  |        |     +-- link-tp-id    te-tp-id
    |  |     |  |  |        |     +-- hop-type?     te-hop-type
    |  |     |  |  |        |     +-- direction?    te-link-direction
    |  |     |  |  |        +--:(unnumbered-link-hop)
    |  |     |  |  |        |  +-- unnumbered-link-hop
    |  |     |  |  |        |     +-- link-tp-id    te-tp-id
    |  |     |  |  |        |     +-- node-id       te-node-id
    |  |     |  |  |        |     +-- hop-type?     te-hop-type
    |  |     |  |  |        |     +-- direction?    te-link-direction
    |  |     |  |  |        +--:(as-number)
    |  |     |  |  |        |  +-- as-number-hop
    |  |     |  |  |        |     +-- as-number    inet:as-number
    |  |     |  |  |        |     +-- hop-type?    te-hop-type
    |  |     |  |  |        +--:(label)
    |  |     |  |  |        |  +-- label-hop
    |  |     |  |  |        |     +-- te-label
    |  |     |  |  |        |        +-- (technology)?
    |  |     |  |  |        |        |  +--:(generic)
    |  |     |  |  |        |        |     +-- generic?
    |  |     |  |  |        |        |             rt-types:generalized-label
    |  |     |  |  |        |        +-- direction?
    |  |     |  |  |        |                te-label-direction
    |  |     |  |  |        +--:(srlg)
    |  |     |  |  |           +-- srlg
    |  |     |  |  |              +-- srlg?   uint32
    |  |     |  |  +-- explicit-route-include-objects
    |  |     |  |     +-- route-object-include-object* [index]
    |  |     |  |        +-- index                        uint32
    |  |     |  |        +-- (type)?
    |  |     |  |           +--:(numbered-node-hop)
    |  |     |  |           |  +-- numbered-node-hop
    |  |     |  |           |     +-- node-id     te-node-id
    |  |     |  |           |     +-- hop-type?   te-hop-type
    |  |     |  |           +--:(numbered-link-hop)
    |  |     |  |           |  +-- numbered-link-hop
    |  |     |  |           |     +-- link-tp-id    te-tp-id
    |  |     |  |           |     +-- hop-type?     te-hop-type
    |  |     |  |           |     +-- direction?    te-link-direction
    |  |     |  |           +--:(unnumbered-link-hop)
    |  |     |  |           |  +-- unnumbered-link-hop
    |  |     |  |           |     +-- link-tp-id    te-tp-id
    |  |     |  |           |     +-- node-id       te-node-id
    |  |     |  |           |     +-- hop-type?     te-hop-type
    |  |     |  |           |     +-- direction?    te-link-direction
    |  |     |  |           +--:(as-number)
    |  |     |  |           |  +-- as-number-hop
    |  |     |  |           |     +-- as-number    inet:as-number
    |  |     |  |           |     +-- hop-type?    te-hop-type
    |  |     |  |           +--:(label)
    |  |     |  |              +-- label-hop
    |  |     |  |                 +-- te-label
    |  |     |  |                    +-- (technology)?
    |  |     |  |                    |  +--:(generic)
    |  |     |  |                    |     +-- generic?
    |  |     |  |                    |             rt-types:generalized-label
    |  |     |  |                    +-- direction?
    |  |     |  |                            te-label-direction
    |  |     |  +-- tiebreakers
    |  |     |     +-- tiebreaker* [tiebreaker-type]
    |  |     |        +-- tiebreaker-type    identityref
    |  |     +--:(objective-function)
    |  |              {path-optimization-objective-function}?
    |  |        +-- objective-function
    |  |           +-- objective-function-type?   identityref
    |  +-- named-path-constraint?                leafref
    |  |       {te-types:named-path-constraints}?
    |  +-- te-bandwidth
    |  |  +-- (technology)?
    |  |     +--:(generic)
    |  |        +-- generic?   te-bandwidth
    |  +-- link-protection?                      identityref
    |  +-- setup-priority?                       uint8
    |  +-- hold-priority?                        uint8
    |  +-- signaling-type?                       identityref
    |  +-- path-metric-bounds
    |  |  +-- path-metric-bound* [metric-type]
    |  |     +-- metric-type    identityref
    |  |     +-- upper-bound?   uint64
    |  +-- path-affinities-values
    |  |  +-- path-affinities-value* [usage]
    |  |     +-- usage    identityref
    |  |     +-- value?   admin-groups
    |  +-- path-affinity-names
    |  |  +-- path-affinity-name* [usage]
    |  |     +-- usage            identityref
    |  |     +-- affinity-name* [name]
    |  |        +-- name    string
    |  +-- path-srlgs-lists
    |  |  +-- path-srlgs-list* [usage]
    |  |     +-- usage     identityref
    |  |     +-- values*   srlg
    |  +-- path-srlgs-names
    |  |  +-- path-srlgs-name* [usage]
    |  |     +-- usage    identityref
    |  |     +-- names*   string
    |  +-- disjointness?                         te-path-disjointness
    |  +-- explicit-route-objects-always
    |  |  +-- route-object-exclude-always* [index]
    |  |  |  +-- index                        uint32
    |  |  |  +-- (type)?
    |  |  |     +--:(numbered-node-hop)
    |  |  |     |  +-- numbered-node-hop
    |  |  |     |     +-- node-id     te-node-id
    |  |  |     |     +-- hop-type?   te-hop-type
    |  |  |     +--:(numbered-link-hop)
    |  |  |     |  +-- numbered-link-hop
    |  |  |     |     +-- link-tp-id    te-tp-id
    |  |  |     |     +-- hop-type?     te-hop-type
    |  |  |     |     +-- direction?    te-link-direction
    |  |  |     +--:(unnumbered-link-hop)
    |  |  |     |  +-- unnumbered-link-hop
    |  |  |     |     +-- link-tp-id    te-tp-id
    |  |  |     |     +-- node-id       te-node-id
    |  |  |     |     +-- hop-type?     te-hop-type
    |  |  |     |     +-- direction?    te-link-direction
    |  |  |     +--:(as-number)
    |  |  |     |  +-- as-number-hop
    |  |  |     |     +-- as-number    inet:as-number
    |  |  |     |     +-- hop-type?    te-hop-type
    |  |  |     +--:(label)
    |  |  |        +-- label-hop
    |  |  |           +-- te-label
    |  |  |              +-- (technology)?
    |  |  |              |  +--:(generic)
    |  |  |              |     +-- generic?
    |  |  |              |             rt-types:generalized-label
    |  |  |              +-- direction?       te-label-direction
    |  |  +-- route-object-include-exclude* [index]
    |  |     +-- explicit-route-usage?        identityref
    |  |     +-- index                        uint32
    |  |     +-- (type)?
    |  |        +--:(numbered-node-hop)
    |  |        |  +-- numbered-node-hop
    |  |        |     +-- node-id     te-node-id
    |  |        |     +-- hop-type?   te-hop-type
    |  |        +--:(numbered-link-hop)
    |  |        |  +-- numbered-link-hop
    |  |        |     +-- link-tp-id    te-tp-id
    |  |        |     +-- hop-type?     te-hop-type
    |  |        |     +-- direction?    te-link-direction
    |  |        +--:(unnumbered-link-hop)
    |  |        |  +-- unnumbered-link-hop
    |  |        |     +-- link-tp-id    te-tp-id
    |  |        |     +-- node-id       te-node-id
    |  |        |     +-- hop-type?     te-hop-type
    |  |        |     +-- direction?    te-link-direction
    |  |        +--:(as-number)
    |  |        |  +-- as-number-hop
    |  |        |     +-- as-number    inet:as-number
    |  |        |     +-- hop-type?    te-hop-type
    |  |        +--:(label)
    |  |        |  +-- label-hop
    |  |        |     +-- te-label
    |  |        |        +-- (technology)?
    |  |        |        |  +--:(generic)
    |  |        |        |     +-- generic?
    |  |        |        |             rt-types:generalized-label
    |  |        |        +-- direction?       te-label-direction
    |  |        +--:(srlg)
    |  |           +-- srlg
    |  |              +-- srlg?   uint32
    |  +-- path-in-segment!
    |  |  +-- label-restrictions
    |  |     +-- label-restriction* [index]
    |  |        +-- restriction?    enumeration
    |  |        +-- index           uint32
    |  |        +-- label-start
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-end
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-step
    |  |        |  +-- (technology)?
    |  |        |     +--:(generic)
    |  |        |        +-- generic?   int32
    |  |        +-- range-bitmap?   yang:hex-string
    |  +-- path-out-segment!
    |  |  +-- label-restrictions
    |  |     +-- label-restriction* [index]
    |  |        +-- restriction?    enumeration
    |  |        +-- index           uint32
    |  |        +-- label-start
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-end
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-step
    |  |        |  +-- (technology)?
    |  |        |     +--:(generic)
    |  |        |        +-- generic?   int32
    |  |        +-- range-bitmap?   yang:hex-string
    |  +-- requested-metrics* [metric-type]
    |  |  +-- metric-type    identityref
    |  +-- return-srlgs?                         boolean
    |  +-- return-affinities?                    boolean
    |  +-- requested-state!
    |     +-- timer?            uint16
    |     +-- transaction-id?   string
    +-- tunnel-attributes* [tunnel-name]
    |  +-- tunnel-name               string
    |  +-- encoding?                 identityref
    |  +-- switching-type?           identityref
    |  +-- source?                   te-types:te-node-id
    |  +-- destination?              te-types:te-node-id
    |  +-- src-tunnel-tp-id?         binary
    |  +-- dst-tunnel-tp-id?         binary
    |  +-- bidirectional?            boolean
    |  +-- association-objects
    |  |  +-- association-object* [association-key]
    |  |  |  +-- association-key    string
    |  |  |  +-- type?              identityref
    |  |  |  +-- id?                uint16
    |  |  |  +-- source
    |  |  |     +-- id?     te-gen-node-id
    |  |  |     +-- type?   enumeration
    |  |  +-- association-object-extended* [association-key]
    |  |     +-- association-key    string
    |  |     +-- type?              identityref
    |  |     +-- id?                uint16
    |  |     +-- source
    |  |     |  +-- id?     te-gen-node-id
    |  |     |  +-- type?   enumeration
    |  |     +-- global-source?     uint32
    |  |     +-- extended-id?       yang:hex-string
    |  +-- protection-type?          identityref
    |  +-- restoration-type?         identityref
    |  +-- restoration-scheme?       identityref
    |  +-- te-topology-identifier
    |  |  +-- provider-id?   te-global-id
    |  |  +-- client-id?     te-global-id
    |  |  +-- topology-id?   te-topology-id
    |  +-- te-bandwidth
    |  |  +-- (technology)?
    |  |     +--:(generic)
    |  |        +-- generic?   te-bandwidth
    |  +-- link-protection?          identityref
    |  +-- setup-priority?           uint8
    |  +-- hold-priority?            uint8
    |  +-- signaling-type?           identityref
    |  +-- hierarchy
    |     +-- dependency-tunnels
    |     |  +-- dependency-tunnel* [name]
    |     |  |  +-- name              -> /te:te/tunnels/tunnel/name
    |     |  |  +-- encoding?         identityref
    |     |  |  +-- switching-type?   identityref
    |     |  +-- dependency-tunnel-attributes* [name]
    |     |     +-- name              leafref
    |     |     +-- encoding?         identityref
    |     |     +-- switching-type?   identityref
    |     +-- hierarchical-link
    |        +-- local-te-node-id?         te-types:te-node-id
    |        +-- local-te-link-tp-id?      te-types:te-tp-id
    |        +-- remote-te-node-id?        te-types:te-node-id
    |        +-- te-topology-identifier
    |           +-- provider-id?   te-global-id
    |           +-- client-id?     te-global-id
    |           +-- topology-id?   te-topology-id
    +-- synchronization* []
       +-- svec
       |  +-- relaxable?           boolean
       |  +-- disjointness?        te-path-disjointness
       |  +-- request-id-number*   uint32
       +-- svec-constraints
       |  +-- path-metric-bound* [metric-type]
       |     +-- metric-type    identityref
       |     +-- upper-bound?   uint64
       +-- path-srlgs-lists
       |  +-- path-srlgs-list* [usage]
       |     +-- usage     identityref
       |     +-- values*   srlg
       +-- path-srlgs-names
       |  +-- path-srlgs-name* [usage]
       |     +-- usage    identityref
       |     +-- names*   string
       +-- exclude-objects
       |  +-- excludes* []
       |     +-- (type)?
       |        +--:(numbered-node-hop)
       |        |  +-- numbered-node-hop
       |        |     +-- node-id     te-node-id
       |        |     +-- hop-type?   te-hop-type
       |        +--:(numbered-link-hop)
       |        |  +-- numbered-link-hop
       |        |     +-- link-tp-id    te-tp-id
       |        |     +-- hop-type?     te-hop-type
       |        |     +-- direction?    te-link-direction
       |        +--:(unnumbered-link-hop)
       |        |  +-- unnumbered-link-hop
       |        |     +-- link-tp-id    te-tp-id
       |        |     +-- node-id       te-node-id
       |        |     +-- hop-type?     te-hop-type
       |        |     +-- direction?    te-link-direction
       |        +--:(as-number)
       |        |  +-- as-number-hop
       |        |     +-- as-number    inet:as-number
       |        |     +-- hop-type?    te-hop-type
       |        +--:(label)
       |           +-- label-hop
       |              +-- te-label
       |                 +-- (technology)?
       |                 |  +--:(generic)
       |                 |     +-- generic?
       |                 |             rt-types:generalized-label
       |                 +-- direction?       te-label-direction
       +-- optimizations
          +-- (algorithm)?
             +--:(metric) {te-types:path-optimization-metric}?
             |  +-- optimization-metric* [metric-type]
             |     +-- metric-type    identityref
             |     +-- weight?        uint8
             +--:(objective-function)
                      {te-types:path-optimization-objective-function}?
                +-- objective-function
                   +-- objective-function-type?   identityref
  augment /te:tunnels-path-compute/te:output/te:path-compute-result:
    +--ro response* [response-id]
       +--ro response-id                         uint32
       +--ro computed-paths-properties
       |  +--ro computed-path-properties* [k-index]
       |     +--ro k-index            uint8
       |     +--ro path-properties
       |        +--ro path-metric* [metric-type]
       |        |  +--ro metric-type           identityref
       |        |  +--ro accumulative-value?   uint64
       |        +--ro path-affinities-values
       |        |  +--ro path-affinities-value* [usage]
       |        |     +--ro usage    identityref
       |        |     +--ro value?   admin-groups
       |        +--ro path-affinity-names
       |        |  +--ro path-affinity-name* [usage]
       |        |     +--ro usage            identityref
       |        |     +--ro affinity-name* [name]
       |        |        +--ro name    string
       |        +--ro path-srlgs-lists
       |        |  +--ro path-srlgs-list* [usage]
       |        |     +--ro usage     identityref
       |        |     +--ro values*   srlg
       |        +--ro path-srlgs-names
       |        |  +--ro path-srlgs-name* [usage]
       |        |     +--ro usage    identityref
       |        |     +--ro names*   string
       |        +--ro path-route-objects
       |        |  +--ro path-route-object* [index]
       |        |     +--ro index                        uint32
       |        |     +--ro (type)?
       |        |        +--:(numbered-node-hop)
       |        |        |  +--ro numbered-node-hop
       |        |        |     +--ro node-id     te-node-id
       |        |        |     +--ro hop-type?   te-hop-type
       |        |        +--:(numbered-link-hop)
       |        |        |  +--ro numbered-link-hop
       |        |        |     +--ro link-tp-id    te-tp-id
       |        |        |     +--ro hop-type?     te-hop-type
       |        |        |     +--ro direction?    te-link-direction
       |        |        +--:(unnumbered-link-hop)
       |        |        |  +--ro unnumbered-link-hop
       |        |        |     +--ro link-tp-id    te-tp-id
       |        |        |     +--ro node-id       te-node-id
       |        |        |     +--ro hop-type?     te-hop-type
       |        |        |     +--ro direction?    te-link-direction
       |        |        +--:(as-number)
       |        |        |  +--ro as-number-hop
       |        |        |     +--ro as-number    inet:as-number
       |        |        |     +--ro hop-type?    te-hop-type
       |        |        +--:(label)
       |        |           +--ro label-hop
       |        |              +--ro te-label
       |        |                 +--ro (technology)?
       |        |                 |  +--:(generic)
       |        |                 |     +--ro generic?
       |        |                 |             rt-types:generalized-label
       |        |                 +--ro direction?
       |        |                         te-label-direction
       |        +--ro te-bandwidth
       |        |  +--ro (technology)?
       |        |     +--:(generic)
       |        |        +--ro generic?   te-bandwidth
       |        +--ro disjointness-type?
       |                te-types:te-path-disjointness
       +--ro computed-path-error-infos
       |  +--ro computed-path-error-info* []
       |     +--ro error-description?   string
       |     +--ro error-timestamp?     yang:date-and-time
       |     +--ro error-reason?        identityref
       +--ro tunnel-ref?                         te:tunnel-ref
       +--ro (path-role)?
          +--:(primary)
          |  +--ro primary-path-ref?             leafref
          +--:(primary-reverse)
          |  +--ro primary-reverse-path-ref?     leafref
          +--:(secondary)
          |  +--ro secondary-path-ref?           leafref
          +--:(secondary-reverse)
             +--ro secondary-reverse-path-ref?   leafref
  augment /te:tunnels-actions/te:input/te:tunnel-info/te:filter-type:
    +--:(path-compute-transactions)
       +-- path-compute-transaction-id*   string
  augment /te:tunnels-actions/te:output:
    +--ro path-computed-delete-result
       +--ro path-compute-transaction-id*   string
]]></artwork></figure>

</section>
<section anchor="pc-yang"><name>YANG module</name>

<figure title="TE path computation YANG module" anchor="fig-pc-yang"><artwork><![CDATA[
<CODE BEGINS> file "ietf-te-path-computation@2022-01-24.yang"
module ietf-te-path-computation {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-te-path-computation";
  prefix te-pc;

  import ietf-te {
    prefix te;
    reference
      "RFCYYYY: A YANG Data Model for Traffic Engineering Tunnels
       and Interfaces";
  }

  /* Note: The RFC Editor will replace YYYY with the number assigned
     to the RFC once draft-ietf-teas-yang-te becomes an RFC.*/

  import ietf-te-types {
    prefix te-types;
    reference
      "RFC8776: Common YANG Data Types for Traffic Engineering.";
  }

  organization
    "Traffic Engineering Architecture and Signaling (TEAS)
     Working Group";
  contact
    "WG Web:   <http://tools.ietf.org/wg/teas/>
     WG List:  <mailto:teas@ietf.org>

     Editor:   Italo Busi
               <mailto:italo.busi@huawei.com>

     Editor:   Sergio Belotti
               <mailto:sergio.belotti@nokia.com>

     Editor:   Victor Lopez
               <mailto:victor.lopez@nokia.com>

     Editor:   Oscar Gonzalez de Dios
               <mailto:oscar.gonzalezdedios@telefonica.com>

     Editor:   Anurag Sharma
               <mailto:ansha@google.com>

     Editor:   Yan Shi
               <mailto:shiyan49@chinaunicom.cn>

     Editor:   Ricard Vilalta
               <mailto:ricard.vilalta@cttc.es>

     Editor:   Karthik Sethuraman
               <mailto:karthik.sethuraman@necam.com>

     Editor:   Michael Scharf
               <mailto:michael.scharf@gmail.com>

     Editor:   Daniele Ceccarelli
               <mailto:daniele.ceccarelli@ericsson.com>
     
    ";
  description
    "This module defines a YANG data model for requesting Traffic
     Engineering (TE) path computation. The YANG model defined in
     this document is based on RPCs augmenting the RPCs defined in
     the generic TE module (ietf-te).
     The model fully conforms to the
     Network Management Datastore Architecture (NMDA).

     Copyright (c) 2022 IETF Trust and the persons
     identified as authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject
     to the license terms contained in, the Simplified BSD License
     set forth in Section 4.c of the IETF Trust's Legal Provisions

     Relating to IETF Documents
     (http://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC XXXX; see
     the RFC itself for full legal notices.";

  // RFC Ed.: replace XXXX with actual RFC number and remove
  // this note
  // replace the revision date with the module publication date
  // the format is (year-month-day)

  revision 2022-01-24 {
    description
      "Initial revision";
    reference
      "RFC XXXX: A YANG Data Model for requesting path computation";
  }

  // RFC Ed.: replace XXXX with actual RFC number and remove
  // this note

  /*
   * Identities
   */

  identity svec-metric-type {
    description
      "Base identity for SVEC metric type.";
    reference
      "RFC5541: Encoding of Objective Functions in the Path
       Computation Element Communication Protocol (PCEP).";
  }

  identity svec-metric-cumul-te {
    base svec-metric-type;
    description
      "Cumulative TE cost.";
    reference
      "RFC5541: Encoding of Objective Functions in the Path
       Computation Element Communication Protocol (PCEP).";
  }

  identity svec-metric-cumul-igp {
    base svec-metric-type;
    description
      "Cumulative IGP cost.";
    reference
      "RFC5541: Encoding of Objective Functions in the Path
       Computation Element Communication Protocol (PCEP).";
  }

  identity svec-metric-cumul-hop {
    base svec-metric-type;
    description
      "Cumulative Hop path metric.";
    reference
      "RFC8776: Common YANG Data Types for Traffic Engineering.";
  }

  identity svec-metric-aggregate-bandwidth-consumption {
    base svec-metric-type;
    description
      "Aggregate bandwidth consumption.";
    reference
      "RFC5541: Encoding of Objective Functions in the Path
       Computation Element Communication Protocol (PCEP).";
  }

  identity svec-metric-load-of-the-most-loaded-link {
    base svec-metric-type;
    description
      "Load of the most loaded link.";
    reference
      "RFC5541: Encoding of Objective Functions in the Path
       Computation Element Communication Protocol (PCEP).";
  }

  identity tunnel-action-path-compute-delete {
    base te:tunnel-actions-type;
    description
      "Action type to delete the transient states
       of computed paths, as described in section 3.3.1 of
       RFC XXXX.";
    reference
      "RFC XXXX: A YANG Data Model for requesting path computation";
  }

  /*
   * Groupings
   */

  grouping protection-restoration-properties {
    description
      "This grouping defines the restoration and protection types
       for a path in the path computation request.";
    leaf protection-type {
      type identityref {
        base te-types:lsp-protection-type;
      }
      default "te-types:lsp-protection-unprotected";
      description
        "LSP protection type.";
    }
    leaf restoration-type {
      type identityref {
        base te-types:lsp-restoration-type;
      }
      default "te-types:lsp-restoration-restore-any";
      description
        "LSP restoration type.";
    }
    leaf restoration-scheme {
      type identityref {
        base te-types:restoration-scheme-type;
      }
      default "te-types:restoration-scheme-preconfigured";
      description
        "LSP restoration scheme.";
    }
  } // grouping protection-restoration-properties

  grouping requested-info {
    description
      "This grouping defines the information (e.g., metrics)
       which is requested, in the path computation request, to be
       returned in the path computation response.";
    list requested-metrics {
      key "metric-type";
      description
        "The list of the requested metrics.
         The metrics listed here must be returned in the response.
         Returning other metrics in the response is optional.";
      leaf metric-type {
        type identityref {
          base te-types:path-metric-type;
        }
        description
          "The metric that must be returned in the response";
      }
    }
    leaf return-srlgs {
      type boolean;
      default "false";
      description
        "If true, path srlgs must be returned in the response.
         If false, returning path srlgs in the response optional.";
    }
    leaf return-affinities {
      type boolean;
      default "false";
      description
        "If true, path affinities must be returned in the response.
         If false, returning path affinities in the response is
         optional.";
    }
  } // grouping requested-info

  grouping requested-state {
    description
      "Configuration for the transient state used
       to report the computed path";
    container requested-state {
      presence
        "Request temporary reporting of the computed path state";
      description
        "Configures attributes for the temporary reporting of the
         computed path state (e.g., expiration timer).";
      leaf timer {
        type uint16;
        units "minutes";
        default "10";
        description
          "The timeout after which the transient state reporting
          the computed path should be removed.";
      }
      leaf transaction-id {
        type string;
        description
          "The transaction-id associated with this path computation
          to be used for fast deletion of the transient states
          associated with multiple path computations.

          This transaction-id can be used to explicitly delete all
          the transient states of all the computed paths associated
          with the same transaction-id.

          When one path associated with a transaction-id is setup,
          the transient states of all the other computed paths
          with the same transaction-id are automatically removed.

          If not specified, the transient state is removed only
          when the timer expires (when the timer is specified)
          or not created at all (stateless path computation,
          when the timer is not specified).";
      }
    }
  } // grouping requested-state

  grouping reported-state {
    description
      "This grouping defines the information, returned in the path
       computation response, reporting the transient state related
       to the computed path";
    leaf tunnel-ref {
      type te:tunnel-ref;
      description
        "
         Reference to the tunnel that reports the transient state
         of the computed path.

         If no transient state is created, this attribute is
         omitted.
        ";
    }
    choice path-role {
      description
        "The transient state of the computed path can be reported
         as a primary, primary-reverse, secondary or
         a secondary-reverse path of a te-tunnel";
      case primary {
        leaf primary-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:primary-paths/te:primary-path/"
               + "te:name";
          }
          must '../tunnel-ref' {
            description
              "The primary-path name can only be reported
               if also the tunnel name is reported.";
          }
          description
            "
             Reference to the primary-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case primary
      case primary-reverse {
        leaf primary-reverse-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:primary-paths/te:primary-path/"
               + "te:name";
          }
          must '../tunnel-ref' {
            description
              "The primary-reverse-path name can only be reported
               if also the tunnel name is reported.";
          }
          description
            "
             Reference to the primary-reverse-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case primary-reverse
      case secondary {
        leaf secondary-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:secondary-paths/te:secondary-path/"
               + "te:name";
          }
          must '../tunnel-ref' {
            description
              "The secondary-path name can only be reported
               if also the tunnel name is reported.";
          }
          description
            "
             Reference to the secondary-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case secondary
      case secondary-reverse {
        leaf secondary-reverse-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:secondary-reverse-paths/"
               + "te:secondary-reverse-path/te:name";
          }
          must '../tunnel-ref' {
            description
              "The secondary-reverse-path name can only be reported
               if also the tunnel name is reported.";
          }
          description
            "
             Reference to the secondary-reverse-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case secondary
    } // choice path
  } // grouping reported-state

  grouping synchronization-constraints {
    description
      "Global constraints applicable to synchronized path
       computation requests.";
    container svec-constraints {
      description
        "global svec constraints";
      list path-metric-bound {
        key "metric-type";
        description
          "list of bound metrics";
        leaf metric-type {
          type identityref {
            base svec-metric-type;
          }
          description
            "SVEC metric type.";
          reference
            "RFC5541: Encoding of Objective Functions in the Path
            Computation Element Communication Protocol (PCEP).";
        }
        leaf upper-bound {
          type uint64;
          description
            "Upper bound on SVEC metric";
        }
      }
    }
    uses te-types:generic-path-srlgs;
    container exclude-objects {
      description
        "Resources to be excluded";
      list excludes {
        description
          "List of Explicit Route Objects to always exclude
           from synchronized path computation";
        uses te-types:explicit-route-hop;
      }
    }
  } // grouping synchronization-constraints

  grouping synchronization-optimization {
    description
      "Optimizations applicable to synchronized path
       computation requests.";
    container optimizations {
      description
        "The objective function container that includes attributes
         to impose when computing a synchronized set of paths";
      choice algorithm {
        description
          "Optimizations algorithm.";
        case metric {
          if-feature "te-types:path-optimization-metric";
          list optimization-metric {
            key "metric-type";
            description
              "svec path metric type";
            leaf metric-type {
              type identityref {
                base svec-metric-type;
              }
              description
                "TE path metric type usable for computing a set of
                synchronized requests";
            }
            leaf weight {
              type uint8;
              description
                "Metric normalization weight";
            }
          }
        }
        case objective-function {
          if-feature
            "te-types:path-optimization-objective-function";
          container objective-function {
            description
              "The objective function container that includes
               attributes to impose when computing a TE path";
            leaf objective-function-type {
              type identityref {
                base te-types:objective-function-type;
              }
              default "te-types:of-minimize-cost-path";
              description
                "Objective function entry";
            }
          }
        }
      }
    }
  } // grouping synchronization-optimization

  grouping synchronization-info {
    description
      "Information for synchronized path computation requests.";
    list synchronization {
      description
        "List of Synchronization VECtors.";
      container svec {
        description
          "Synchronization VECtor";
        leaf relaxable {
          type boolean;
          default "true";
          description
            "If this leaf is true, path computation process is
             free to ignore svec content.
             Otherwise, it must take into account this svec.";
        }
        uses te-types:generic-path-disjointness;
        leaf-list request-id-number {
          type uint32;
          description
            "This list reports the set of path computation
             requests that must be synchronized.";
        }
      }
      uses synchronization-constraints;
      uses synchronization-optimization;
    }
  } // grouping synchronization-info

  /*
   * Augment TE RPCs
   */

  augment "/te:tunnels-path-compute/te:input/te:path-compute-info" {
    description
      "Path Computation RPC input";
    list path-request {
      key "request-id";
      description
        "The list of the requested paths to be computed";
      leaf request-id {
        type uint32;
        mandatory true;
        description
          "Each path computation request is uniquely identified
           within the RPC request by the request-id-number.";
      }
      choice tunnel-attributes {
        default "value";
        description
          "Whether the tunnel attributes are specified by value
           within this path computation request or by reference.
           The reference could be either to an existing te-tunnel
           or to an entry in the tunnel-attributes list";
        case reference {
          container tunnel-reference {
            description
              "Attributes for a requested path that belongs to
              either an exiting te-tunnel or to an entry in the
              tunnel-attributes list.";
            choice tunnel-exist {
              description
                "Whether the tunnel reference is to an existing
                te-tunnel or to an entry in the tunnel-attributes
                list";
              case tunnel-ref {
                leaf tunnel-ref {
                  type te:tunnel-ref;
                  mandatory true;
                  description
                    "The referenced te-tunnel instance";
                }
              } // case tunnel-ref
              case tunnel-attributes-ref {
                leaf tunnel-attributes-ref {
                  type leafref {
                    path "/te:tunnels-path-compute/"
                      + "te:path-compute-info/"
                      + "te-pc:tunnel-attributes/te-pc:tunnel-name";
                  }
                  mandatory true;
                  description
                    "The referenced te-tunnel instance";
                }
              } // case tunnel-attributes-ref 
            } // choice tunnel-exist
            leaf path-name {
              type string;
              description
                "TE path name.";
            }
            choice path-role {
              mandatory true;
              description
                "Whether this path is a primary, or a reverse
                primary, or a secondary, or a reverse secondary
                path.";
              case primary-path {
                container primary-path {
                  presence "Indicates that the requested path
                            is a primary path";
                  description
                    "TE primary path";
                  uses te:path-preference;
                  uses te:k-requested-paths;
                } // container primary-path
              } // case primary-path
              case secondary-path {
                container secondary-path {
                  description
                    "TE secondary path";
                  uses te:path-preference;
                  uses protection-restoration-properties;
                  list primary-path-ref {
                    min-elements 1;
                    description
                      "The list of primary paths that reference
                      this path as a candidate secondary path";
                    choice primary-path-exist {
                      description
                        "Whether the path reference is to an existing
                        te-tunnel path or to another path request";
                      case path-ref {
                        leaf primary-path-ref {
                          type leafref {
                            path "/te:te/te:tunnels/te:tunnel"
                              + "[te:name=current()/../../../"
                              + "tunnel-ref]/te:primary-paths/"
                              + "te:primary-path/te:name";
                          }
                          must '../../../tunnel-ref' {
                            description
                              "The primary-path can be referenced
                              if also the tunnel is referenced.";
                          }
                          mandatory true;
                          description
                            "The referenced primary path";
                        }
                      } // case path-ref
                      case path-request-ref {
                        leaf path-request-ref {
                          type leafref {
                            path "/te:tunnels-path-compute/"
                              + "te:path-compute-info/"
                              + "te-pc:path-request/"
                              + "te-pc:request-id";
                          }
                          mandatory true;
                          description
                            "The referenced primary path request";
                        }
                      } // case path-request-ref 
                    } // choice primary-path-exist
                  } // list primary-path-ref
                } // container secondary-path
              } // case secondary-path
              case primary-reverse-path {
                container primary-reverse-path {
                  description
                    "TE primary reverse path";
                  choice primary-path-exist {
                    description
                      "Whether the path reference to the primary
                      paths for which this path is the reverse-path
                      is to an existing te-tunnel path or to
                      another path request.";
                    case path-ref {
                      leaf primary-path-ref {
                        type leafref {
                          path "/te:te/te:tunnels/te:tunnel[te:name"
                            + "=current()/../../tunnel-ref]/"
                            + "te:primary-paths/te:primary-path/"
                            + "te:name";
                        }
                        must '../../tunnel-ref' {
                          description
                            "The primary-path can be referenced
                            if also the tunnel is referenced.";
                        }
                        mandatory true;
                        description
                          "The referenced primary path";
                      }
                    } // case path-ref
                    case path-request-ref {
                      leaf path-request-ref {
                        type leafref {
                          path "/te:tunnels-path-compute/"
                            + "te:path-compute-info/"
                            + "te-pc:path-request/"
                            + "te-pc:request-id";
                        }
                        mandatory true;
                        description
                          "The referenced primary path request";
                      }
                    } // case path-request-ref 
                  } // choice primary-path-exist
                } // container primary-reverse-path
              } // case primary-reverse-path
              case secondary-reverse-path {
                container secondary-reverse-path {
                  description
                    "TE secondary reverse path";
                  uses te:path-preference;
                  uses protection-restoration-properties;
                  list primary-reverse-path-ref {
                    min-elements 1;
                    description
                      "The list of primary reverse paths that
                      reference this path as a candidate
                      secondary reverse path";
                    choice primary-reverse-path-exist {
                      description
                        "Whether the path reference is to an existing
                        te-tunnel path or to another path request";
                      case path-ref {
                        leaf primary-path-ref {
                          type leafref {
                            path "/te:te/te:tunnels/te:tunnel"
                              + "[te:name=current()/../../../"
                              + "tunnel-ref]/te:primary-paths/"
                              + "te:primary-path/te:name";
                          }
                          must '../../../tunnel-ref' {
                            description
                              "The primary-path can be referenced
                              if also the tunnel is referenced.";
                          }
                          mandatory true;
                          description
                            "The referenced primary path";
                        }
                      } // case path-ref
                      case path-request-ref {
                        leaf path-request-ref {
                          type leafref {
                            path "/te:tunnels-path-compute/"
                              + "te:path-compute-info/"
                              + "te-pc:path-request/"
                              + "te-pc:request-id";
                          }
                          mandatory true;
                          description
                            "The referenced primary reverse path
                            request";
                        }
                      } // case path-request-ref 
                    } // choice primary-reverse-path-exist
                  } // list primary-reverse-path-ref
                } // container secondary-reverse-path
              } // case secondary-reverse-path
            } // choice tunnel-path-role
          }
        } // case reference
        case value {
          leaf tunnel-name {
            type string;
            description
              "TE tunnel name.";
          }
          leaf path-name {
            type string;
            description
              "TE path name.";
          }
          choice path-role {
            when 'not (./source) and not (./destination) and
                  not (./src-tunnel-tp-id) and
                  not (./dst-tunnel-tp-id)' {
              description
                "When the tunnel attributes are specified by value
                within this path computation, it is assumed that the
                requested path will be the only path of a tunnel.

                If the requested path is a transit segment path, it
                could be of any type. Otherwise it could only be a
                primary path.";
            }
            default primary-path;
            description
              "Indicates whether the requested path is a primary
              path, a secondary path, a reverse primary path or a
              reverse secondary path.";
            case primary-path {
              description
                "The requested path is a primary path.";
            }
            container secondary-path {
              presence
                "Indicates that the requested path is a secondary
                path.";
              description
                "The name of the primary path which the requested
                primary reverse path belongs to.";
              leaf primary-path-name {
                type string;
                description
                  "TE primary path name.";
              }
            } // container secondary-path
            container primary-reverse-path {
              presence
                "Indicates that the requested path is a primary
                reverse path.";
              description
                "The name of the primary path which the requested
                primary reverse path belongs to.";
              leaf primary-path-name {
                type string;
                description
                  "TE primary path name.";
              }
            } // container primary-reverse-path
            container secondary-reverse-path {
              presence
                "Indicates that the requested path is a secondary
                reverse path.";
              description
                "The names of the primary path and of the primary
                reverse path which the requested secondary reverse
                path belongs to.";
              leaf primary-path-name {
                type string;
                description
                  "TE primary path name.";
              }
              leaf primary-reverse-path-name {
                type string;
                description
                  "TE primary reverse path name.";
              }
            } // container primary-reverse-path
          } // choice path-role
          uses te:k-requested-paths;
          uses te:encoding-and-switching-type;
          uses te:tunnel-common-attributes;
          uses te-types:te-topology-identifier;
        } // case value
      } // choice tunnel-attributes
      uses te:path-compute-info;
      uses requested-info;
      uses requested-state;
    }
    list tunnel-attributes {
      key "tunnel-name";
      description
        "Tunnel attributes common to multiple request paths";
      leaf tunnel-name {
        type string;
        description
          "TE tunnel name.";
      }
      uses te:encoding-and-switching-type;
      uses te:tunnel-common-attributes;
      uses te:tunnel-associations-properties;
      uses protection-restoration-properties;
      uses te-types:tunnel-constraints;
      uses te:tunnel-hierarchy-properties {
        augment "hierarchy/dependency-tunnels" {
          description
            "Augment with the list of dependency tunnel requests.";
          list dependency-tunnel-attributes {
            key "name";
            description
              "A tunnel request entry that this tunnel request can
               potentially depend on.";
            leaf name {
              type leafref {
                path "/te:tunnels-path-compute/"
                   + "te:path-compute-info/te-pc:tunnel-attributes/"
                   + "te-pc:tunnel-name";
              }
              description
                "Dependency tunnel request name.";
            }
            uses te:encoding-and-switching-type;
          }
        }
      }
    }
    uses synchronization-info;
  } // path-compute rpc input

  augment "/te:tunnels-path-compute/te:output/"
        + "te:path-compute-result" {
    description
      "Path Computation RPC output";
    list response {
      key "response-id";
      config false;
      description
        "response";
      leaf response-id {
        type uint32;
        description
          "The response-id has the same value of the
           corresponding request-id.";
      }
      uses te:path-computation-response;
      uses reported-state;
    }
  } // path-compute rpc output

  augment "/te:tunnels-actions/te:input/te:tunnel-info/"
        + "te:filter-type" {
    description
      "Augment Tunnels Action RPC input filter types";
    case path-compute-transactions {
      when "derived-from-or-self(../te:action-info/te:action, "
         + "'tunnel-action-path-compute-delete')";
      description
        "Path Delete Action RPC";
      leaf-list path-compute-transaction-id {
        type string;
        description
          "The list of the transaction-id values of the
           transient states to be deleted";
      }
    }
  } // path-delete rpc input

  augment "/te:tunnels-actions/te:output" {
    description
      "Augment Tunnels Action RPC output with path delete result";
    container path-computed-delete-result {
      description
        "Path Delete RPC output";
      leaf-list path-compute-transaction-id {
        type string;
        description
          "The list of the transaction-id values of the
           transient states that have been successfully deleted";
      }
    }
  } // path-delete rpc output
}
]]></artwork></figure>

</section>
</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>This document describes use cases of requesting Path Computation
   using YANG data models, which could be used at the ABNO Control
   Interface <xref target="RFC7491"/> and/or between controllers in ACTN <xref target="RFC8453"/>. As
   such, it does not introduce any new security considerations compared
   to the ones related to YANG specification, ABNO specification and
   ACTN Framework defined in <xref target="RFC7950"/>, <xref target="RFC7491"/> and <xref target="RFC8453"/>.</t>

<t>The YANG module defined in this document is designed to be accessed via
   the NETCONF protocol <xref target="RFC6241"/> or RESTCONF protocol <xref target="RFC8040"/>. The
   lowest NETCONF layer is the secure transport layer, and the
   mandatory-to-implement secure transport is Secure Shell (SSH)
   <xref target="RFC6242"/>. The lowest RESTCONF layer is HTTPS, and the mandatory-to-
   implement secure transport is TLS <xref target="RFC8446"/>.</t>

<t>The Network Configuration Access Control Model (NACM) 
   <xref target="RFC8341"/> provides the means to
   restrict access for particular NETCONF or RESTCONF users to a
   preconfigured subset of all available NETCONF or RESTCONF protocol
   operations and content.</t>

<t>The YANG module defined in this document augments the "tunnels-path-compute" and the "tunnel-actions" RPCs defined in <xref target="I-D.ietf-teas-yang-te"/>. The security considerations provided in <xref target="I-D.ietf-teas-yang-te"/> are also applicable to the YANG module
   defined in this document.</t>

<t>Some of the RPC operations defined in this YANG module may be considered
   sensitive or vulnerable in some network environments.  It is thus
   important to control access to these operations. These are the
   operations and their sensitivity/vulnerability:</t>

<t>"te-pc:response/computed-paths-properties": provides the same information provided by the readable data nodes of the "te:computed-paths-properties" defined in <xref target="I-D.ietf-teas-yang-te"/>. The security considerations provided in <xref target="I-D.ietf-teas-yang-te"/> apply also to this subtree.</t>

<t>[Editors' note] There are no security considerations for the "te:computed-paths-properties" in the version -28 of <xref target="I-D.ietf-teas-yang-te"/> and they should be added in a future update.</t>

<t>"te-pc:response/te-pc:tunnel-ref", "te-pc:response/te-pc:primary-path-ref", "te-pc:response/te-pc:primary-reverse-path-ref", "te-pc:response/te-pc:secondary-path-ref" and "te-pc:response/te-pc:secondary-reverse-path-ref" provides a reference where the same information provided in "te-pc:response/computed-paths-properties" is temporarly stored with the operational datastore (see <xref target="temp-state"/>). Therefore access to this information does not provide any additional security issue that the information provided with "te-pc:response/computed-paths-properties".</t>

<t>"/te:tunnels-actions": the YANG model defined in this document augments this action with a new action type that allows deleting the transient states of computed paths (see <xref target="temp-state"/>). A malicious use of this action would have no impact on the paths carrying live traffic but it would preclude the client from using the "transient states" to request the set-up of exactly that path, if still available.</t>

<t>The security considerations spelled out in the
   YANG specification <xref target="RFC7950"/> apply for this document as well.</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>This document registers the following URIs in the "ns" subregistry
   within the "IETF XML registry" <xref target="RFC3688"/>.</t>

<figure><artwork><![CDATA[
      URI: urn:ietf:params:xml:ns:yang:ietf-te-path-computation
      Registrant Contact:  The IESG.
      XML: N/A, the requested URI is an XML namespace.
]]></artwork></figure>

<t>This document registers a YANG module in the "YANG Module Names"
   registry <xref target="RFC7950"/>.</t>

<figure><artwork><![CDATA[
      name:      ietf-te-path-computation
      namespace: urn:ietf:params:xml:ns:yang:ietf-te-path-computation
      prefix:    te-pc
      reference: this document
]]></artwork></figure>

</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference anchor='RFC6241' target='https://www.rfc-editor.org/info/rfc6241'>
<front>
<title>Network Configuration Protocol (NETCONF)</title>
<author fullname='R. Enns' initials='R.' role='editor' surname='Enns'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'><organization/></author>
<author fullname='A. Bierman' initials='A.' role='editor' surname='Bierman'><organization/></author>
<date month='June' year='2011'/>
<abstract><t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices.  It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages.  The NETCONF protocol operations are realized as remote procedure calls (RPCs).  This document obsoletes RFC 4741.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6241'/>
<seriesInfo name='DOI' value='10.17487/RFC6241'/>
</reference>



<reference anchor='RFC8040' target='https://www.rfc-editor.org/info/rfc8040'>
<front>
<title>RESTCONF Protocol</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<date month='January' year='2017'/>
<abstract><t>This document describes an HTTP-based protocol that provides a programmatic interface for accessing data defined in YANG, using the datastore concepts defined in the Network Configuration Protocol (NETCONF).</t></abstract>
</front>
<seriesInfo name='RFC' value='8040'/>
<seriesInfo name='DOI' value='10.17487/RFC8040'/>
</reference>



<reference anchor='RFC8795' target='https://www.rfc-editor.org/info/rfc8795'>
<front>
<title>YANG Data Model for Traffic Engineering (TE) Topologies</title>
<author fullname='X. Liu' initials='X.' surname='Liu'><organization/></author>
<author fullname='I. Bryskin' initials='I.' surname='Bryskin'><organization/></author>
<author fullname='V. Beeram' initials='V.' surname='Beeram'><organization/></author>
<author fullname='T. Saad' initials='T.' surname='Saad'><organization/></author>
<author fullname='H. Shah' initials='H.' surname='Shah'><organization/></author>
<author fullname='O. Gonzalez de Dios' initials='O.' surname='Gonzalez de Dios'><organization/></author>
<date month='August' year='2020'/>
<abstract><t>This document defines a YANG data model for representing, retrieving, and manipulating Traffic Engineering (TE) Topologies. The model serves as a base model that other technology-specific TE topology models can augment.</t></abstract>
</front>
<seriesInfo name='RFC' value='8795'/>
<seriesInfo name='DOI' value='10.17487/RFC8795'/>
</reference>


<reference anchor='I-D.ietf-teas-yang-te'>
   <front>
      <title>A YANG Data Model for Traffic Engineering Tunnels, Label Switched Paths and Interfaces</title>
      <author fullname='Tarek Saad'>
	 <organization>Juniper Networks</organization>
      </author>
      <author fullname='Rakesh Gandhi'>
	 <organization>Cisco Systems Inc</organization>
      </author>
      <author fullname='Xufeng Liu'>
	 <organization>Volta Networks</organization>
      </author>
      <author fullname='Vishnu Pavan Beeram'>
	 <organization>Juniper Networks</organization>
      </author>
      <author fullname='Igor Bryskin'>
	 <organization>Individual</organization>
      </author>
      <author fullname='Oscar Gonzalez de Dios'>
	 <organization>Telefonica</organization>
      </author>
      <date day='25' month='October' year='2021'/>
      <abstract>
	 <t>   This document defines a YANG data model for the provisioning and
   management of Traffic Engineering (TE) tunnels, Label Switched Paths
   (LSPs), and interfaces.  The model is divided into YANG modules that
   classify data into generic, device-specific, technology agnostic, and
   technology-specific elements.

   This model covers data for configuration, operational state, remote
   procedural calls, and event notifications.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-teas-yang-te-28'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-teas-yang-te-28.txt' type='TXT'/>
</reference>



<reference anchor='RFC7950' target='https://www.rfc-editor.org/info/rfc7950'>
<front>
<title>The YANG 1.1 Data Modeling Language</title>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<date month='August' year='2016'/>
<abstract><t>YANG is a data modeling language used to model configuration data, state data, Remote Procedure Calls, and notifications for network management protocols.  This document describes the syntax and semantics of version 1.1 of the YANG language.  YANG version 1.1 is a maintenance release of the YANG language, addressing ambiguities and defects in the original specification.  There are a small number of backward incompatibilities from YANG version 1.  This document also specifies the YANG mappings to the Network Configuration Protocol (NETCONF).</t></abstract>
</front>
<seriesInfo name='RFC' value='7950'/>
<seriesInfo name='DOI' value='10.17487/RFC7950'/>
</reference>



<reference anchor='RFC5440' target='https://www.rfc-editor.org/info/rfc5440'>
<front>
<title>Path Computation Element (PCE) Communication Protocol (PCEP)</title>
<author fullname='JP. Vasseur' initials='JP.' role='editor' surname='Vasseur'><organization/></author>
<author fullname='JL. Le Roux' initials='JL.' role='editor' surname='Le Roux'><organization/></author>
<date month='March' year='2009'/>
<abstract><t>This document specifies the Path Computation Element (PCE) Communication Protocol (PCEP) for communications between a Path Computation Client (PCC) and a PCE, or between two PCEs.  Such interactions include path computation requests and path computation replies as well as notifications of specific states related to the use of a PCE in the context of Multiprotocol Label Switching (MPLS) and Generalized MPLS (GMPLS) Traffic Engineering.  PCEP is designed to be flexible and extensible so as to easily allow for the addition of further messages and objects, should further requirements be expressed in the future.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5440'/>
<seriesInfo name='DOI' value='10.17487/RFC5440'/>
</reference>



<reference anchor='RFC7926' target='https://www.rfc-editor.org/info/rfc7926'>
<front>
<title>Problem Statement and Architecture for Information Exchange between Interconnected Traffic-Engineered Networks</title>
<author fullname='A. Farrel' initials='A.' role='editor' surname='Farrel'><organization/></author>
<author fullname='J. Drake' initials='J.' surname='Drake'><organization/></author>
<author fullname='N. Bitar' initials='N.' surname='Bitar'><organization/></author>
<author fullname='G. Swallow' initials='G.' surname='Swallow'><organization/></author>
<author fullname='D. Ceccarelli' initials='D.' surname='Ceccarelli'><organization/></author>
<author fullname='X. Zhang' initials='X.' surname='Zhang'><organization/></author>
<date month='July' year='2016'/>
<abstract><t>In Traffic-Engineered (TE) systems, it is sometimes desirable to establish an end-to-end TE path with a set of constraints (such as bandwidth) across one or more networks from a source to a destination.  TE information is the data relating to nodes and TE links that is used in the process of selecting a TE path.  TE information is usually only available within a network.  We call such a zone of visibility of TE information a domain.  An example of a domain may be an IGP area or an Autonomous System.</t><t>In order to determine the potential to establish a TE path through a series of connected networks, it is necessary to have available a certain amount of TE information about each network.  This need not be the full set of TE information available within each network but does need to express the potential of providing TE connectivity. This subset of TE information is called TE reachability information.</t><t>This document sets out the problem statement for the exchange of TE information between interconnected TE networks in support of end-to-end TE path establishment and describes the best current practice architecture to meet this problem statement.  For reasons that are explained in this document, this work is limited to simple TE constraints and information that determine TE reachability.</t></abstract>
</front>
<seriesInfo name='BCP' value='206'/>
<seriesInfo name='RFC' value='7926'/>
<seriesInfo name='DOI' value='10.17487/RFC7926'/>
</reference>



<reference anchor='RFC8340' target='https://www.rfc-editor.org/info/rfc8340'>
<front>
<title>YANG Tree Diagrams</title>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='L. Berger' initials='L.' role='editor' surname='Berger'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>This document captures the current syntax used in YANG module tree diagrams.  The purpose of this document is to provide a single location for this definition.  This syntax may be updated from time to time based on the evolution of the YANG language.</t></abstract>
</front>
<seriesInfo name='BCP' value='215'/>
<seriesInfo name='RFC' value='8340'/>
<seriesInfo name='DOI' value='10.17487/RFC8340'/>
</reference>



<reference anchor='RFC6991' target='https://www.rfc-editor.org/info/rfc6991'>
<front>
<title>Common YANG Data Types</title>
<author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'><organization/></author>
<date month='July' year='2013'/>
<abstract><t>This document introduces a collection of common data types to be used with the YANG data modeling language.  This document obsoletes RFC 6021.</t></abstract>
</front>
<seriesInfo name='RFC' value='6991'/>
<seriesInfo name='DOI' value='10.17487/RFC6991'/>
</reference>



<reference anchor='RFC8776' target='https://www.rfc-editor.org/info/rfc8776'>
<front>
<title>Common YANG Data Types for Traffic Engineering</title>
<author fullname='T. Saad' initials='T.' surname='Saad'><organization/></author>
<author fullname='R. Gandhi' initials='R.' surname='Gandhi'><organization/></author>
<author fullname='X. Liu' initials='X.' surname='Liu'><organization/></author>
<author fullname='V. Beeram' initials='V.' surname='Beeram'><organization/></author>
<author fullname='I. Bryskin' initials='I.' surname='Bryskin'><organization/></author>
<date month='June' year='2020'/>
<abstract><t>This document defines a collection of common data types and groupings in YANG data modeling language. These derived common types and groupings are intended to be imported by modules that model Traffic Engineering (TE) configuration and state capabilities.</t></abstract>
</front>
<seriesInfo name='RFC' value='8776'/>
<seriesInfo name='DOI' value='10.17487/RFC8776'/>
</reference>



<reference anchor='RFC5441' target='https://www.rfc-editor.org/info/rfc5441'>
<front>
<title>A Backward-Recursive PCE-Based Computation (BRPC) Procedure to Compute Shortest Constrained Inter-Domain Traffic Engineering Label Switched Paths</title>
<author fullname='JP. Vasseur' initials='JP.' role='editor' surname='Vasseur'><organization/></author>
<author fullname='R. Zhang' initials='R.' surname='Zhang'><organization/></author>
<author fullname='N. Bitar' initials='N.' surname='Bitar'><organization/></author>
<author fullname='JL. Le Roux' initials='JL.' surname='Le Roux'><organization/></author>
<date month='April' year='2009'/>
<abstract><t>The ability to compute shortest constrained Traffic Engineering Label Switched Paths (TE LSPs) in Multiprotocol Label Switching (MPLS) and Generalized MPLS (GMPLS) networks across multiple domains has been identified as a key requirement.  In this context, a domain is a collection of network elements within a common sphere of address management or path computational responsibility such as an IGP area or an Autonomous Systems.  This document specifies a procedure relying on the use of multiple Path Computation Elements (PCEs) to compute such inter-domain shortest constrained paths across a predetermined sequence of domains, using a backward-recursive path computation technique.  This technique preserves confidentiality across domains, which is sometimes required when domains are managed by different service providers.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5441'/>
<seriesInfo name='DOI' value='10.17487/RFC5441'/>
</reference>



<reference anchor='RFC5541' target='https://www.rfc-editor.org/info/rfc5541'>
<front>
<title>Encoding of Objective Functions in the Path Computation Element Communication Protocol (PCEP)</title>
<author fullname='JL. Le Roux' initials='JL.' surname='Le Roux'><organization/></author>
<author fullname='JP. Vasseur' initials='JP.' surname='Vasseur'><organization/></author>
<author fullname='Y. Lee' initials='Y.' surname='Lee'><organization/></author>
<date month='June' year='2009'/>
<abstract><t>The computation of one or a set of Traffic Engineering Label Switched Paths (TE LSPs) in MultiProtocol Label Switching (MPLS) and Generalized MPLS (GMPLS) networks is subject to a set of one or more specific optimization criteria, referred to as objective functions (e.g., minimum cost path, widest path, etc.).</t><t>In the Path Computation Element (PCE) architecture, a Path Computation Client (PCC) may want a path to be computed for one or more TE LSPs according to a specific objective function.  Thus, the PCC needs to instruct the PCE to use the correct objective function. Furthermore, it is possible that not all PCEs support the same set of objective functions; therefore, it is useful for the PCC to be able to automatically discover the set of objective functions supported by each PCE.</t><t>This document defines extensions to the PCE communication Protocol (PCEP) to allow a PCE to indicate the set of objective functions it supports.  Extensions are also defined so that a PCC can indicate in a path computation request the required objective function, and a PCE can report in a path computation reply the objective function that was used for path computation.</t><t>This document defines objective function code types for six objective functions previously listed in the PCE requirements work, and provides the definition of four new metric types that apply to a set of synchronized requests.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5541'/>
<seriesInfo name='DOI' value='10.17487/RFC5541'/>
</reference>



<reference anchor='RFC6242' target='https://www.rfc-editor.org/info/rfc6242'>
<front>
<title>Using the NETCONF Protocol over Secure Shell (SSH)</title>
<author fullname='M. Wasserman' initials='M.' surname='Wasserman'><organization/></author>
<date month='June' year='2011'/>
<abstract><t>This document describes a method for invoking and running the Network Configuration Protocol (NETCONF) within a Secure Shell (SSH) session as an SSH subsystem.  This document obsoletes RFC 4742.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6242'/>
<seriesInfo name='DOI' value='10.17487/RFC6242'/>
</reference>



<reference anchor='RFC8446' target='https://www.rfc-editor.org/info/rfc8446'>
<front>
<title>The Transport Layer Security (TLS) Protocol Version 1.3</title>
<author fullname='E. Rescorla' initials='E.' surname='Rescorla'><organization/></author>
<date month='August' year='2018'/>
<abstract><t>This document specifies version 1.3 of the Transport Layer Security (TLS) protocol.  TLS allows client/server applications to communicate over the Internet in a way that is designed to prevent eavesdropping, tampering, and message forgery.</t><t>This document updates RFCs 5705 and 6066, and obsoletes RFCs 5077, 5246, and 6961.  This document also specifies new requirements for TLS 1.2 implementations.</t></abstract>
</front>
<seriesInfo name='RFC' value='8446'/>
<seriesInfo name='DOI' value='10.17487/RFC8446'/>
</reference>



<reference anchor='RFC8341' target='https://www.rfc-editor.org/info/rfc8341'>
<front>
<title>Network Configuration Access Control Model</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>The standardization of network configuration interfaces for use with the Network Configuration Protocol (NETCONF) or the RESTCONF protocol requires a structured and secure operating environment that promotes human usability and multi-vendor interoperability.  There is a need for standard mechanisms to restrict NETCONF or RESTCONF protocol access for particular users to a preconfigured subset of all available NETCONF or RESTCONF protocol operations and content.  This document defines such an access control model.</t><t>This document obsoletes RFC 6536.</t></abstract>
</front>
<seriesInfo name='STD' value='91'/>
<seriesInfo name='RFC' value='8341'/>
<seriesInfo name='DOI' value='10.17487/RFC8341'/>
</reference>



<reference anchor='RFC3688' target='https://www.rfc-editor.org/info/rfc3688'>
<front>
<title>The IETF XML Registry</title>
<author fullname='M. Mealling' initials='M.' surname='Mealling'><organization/></author>
<date month='January' year='2004'/>
<abstract><t>This document describes an IANA maintained registry for IETF standards which use Extensible Markup Language (XML) related items such as Namespaces, Document Type Declarations (DTDs), Schemas, and Resource Description Framework (RDF) Schemas.</t></abstract>
</front>
<seriesInfo name='BCP' value='81'/>
<seriesInfo name='RFC' value='3688'/>
<seriesInfo name='DOI' value='10.17487/RFC3688'/>
</reference>




    </references>

    <references title='Informative References'>





<reference anchor='RFC7491' target='https://www.rfc-editor.org/info/rfc7491'>
<front>
<title>A PCE-Based Architecture for Application-Based Network Operations</title>
<author fullname='D. King' initials='D.' surname='King'><organization/></author>
<author fullname='A. Farrel' initials='A.' surname='Farrel'><organization/></author>
<date month='March' year='2015'/>
<abstract><t>Services such as content distribution, distributed databases, or inter-data center connectivity place a set of new requirements on the operation of networks.  They need on-demand and application-specific reservation of network connectivity, reliability, and resources (such as bandwidth) in a variety of network applications (such as point-to-point connectivity, network virtualization, or mobile back-haul) and in a range of network technologies from packet (IP/MPLS) down to optical.  An environment that operates to meet these types of requirements is said to have Application-Based Network Operations (ABNO).  ABNO brings together many existing technologies and may be seen as the use of a toolbox of existing components enhanced with a few new elements.</t><t>This document describes an architecture and framework for ABNO, showing how these components fit together.  It provides a cookbook of existing technologies to satisfy the architecture and meet the needs of the applications.</t></abstract>
</front>
<seriesInfo name='RFC' value='7491'/>
<seriesInfo name='DOI' value='10.17487/RFC7491'/>
</reference>



<reference anchor='RFC8453' target='https://www.rfc-editor.org/info/rfc8453'>
<front>
<title>Framework for Abstraction and Control of TE Networks (ACTN)</title>
<author fullname='D. Ceccarelli' initials='D.' role='editor' surname='Ceccarelli'><organization/></author>
<author fullname='Y. Lee' initials='Y.' role='editor' surname='Lee'><organization/></author>
<date month='August' year='2018'/>
<abstract><t>Traffic Engineered (TE) networks have a variety of mechanisms to facilitate the separation of the data plane and control plane.  They also have a range of management and provisioning protocols to configure and activate network resources.  These mechanisms represent key technologies for enabling flexible and dynamic networking.  The term &quot;Traffic Engineered network&quot; refers to a network that uses any connection-oriented technology under the control of a distributed or centralized control plane to support dynamic provisioning of end-to- end connectivity.</t><t>Abstraction of network resources is a technique that can be applied to a single network domain or across multiple domains to create a single virtualized network that is under the control of a network operator or the customer of the operator that actually owns the network resources.</t><t>This document provides a framework for Abstraction and Control of TE Networks (ACTN) to support virtual network services and connectivity services.</t></abstract>
</front>
<seriesInfo name='RFC' value='8453'/>
<seriesInfo name='DOI' value='10.17487/RFC8453'/>
</reference>



<reference anchor='RFC8454' target='https://www.rfc-editor.org/info/rfc8454'>
<front>
<title>Information Model for Abstraction and Control of TE Networks (ACTN)</title>
<author fullname='Y. Lee' initials='Y.' surname='Lee'><organization/></author>
<author fullname='S. Belotti' initials='S.' surname='Belotti'><organization/></author>
<author fullname='D. Dhody' initials='D.' surname='Dhody'><organization/></author>
<author fullname='D. Ceccarelli' initials='D.' surname='Ceccarelli'><organization/></author>
<author fullname='B. Yoon' initials='B.' surname='Yoon'><organization/></author>
<date month='September' year='2018'/>
<abstract><t>This document provides an information model for Abstraction and Control of TE Networks (ACTN).</t></abstract>
</front>
<seriesInfo name='RFC' value='8454'/>
<seriesInfo name='DOI' value='10.17487/RFC8454'/>
</reference>


<reference anchor='I-D.ietf-ccamp-otn-topo-yang'>
   <front>
      <title>A YANG Data Model for Optical Transport Network Topology</title>
      <author fullname='Haomian Zheng'>
	 <organization>Huawei Technologies</organization>
      </author>
      <author fullname='Italo Busi'>
	 <organization>Huawei Technologies</organization>
      </author>
      <author fullname='Xufeng Liu'>
	 <organization>Volta Networks</organization>
      </author>
      <author fullname='Sergio Belotti'>
	 <organization>Nokia</organization>
      </author>
      <author fullname='Oscar Gonzalez de Dios'>
	 <organization>Telefonica</organization>
      </author>
      <date day='12' month='July' year='2021'/>
      <abstract>
	 <t>   This document describes a YANG data model to describe the topologies
   of an Optical Transport Network (OTN).  It is independent of control
   plane protocols and captures topological and resource related
   information pertaining to OTN.  This model enables clients, which
   interact with a transport domain controller, for OTN topology related
   operations such as obtaining the relevant topology resource
   information.


	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-ccamp-otn-topo-yang-13'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-ccamp-otn-topo-yang-13.txt' type='TXT'/>
</reference>



<reference anchor='RFC4655' target='https://www.rfc-editor.org/info/rfc4655'>
<front>
<title>A Path Computation Element (PCE)-Based Architecture</title>
<author fullname='A. Farrel' initials='A.' surname='Farrel'><organization/></author>
<author fullname='J.-P. Vasseur' initials='J.-P.' surname='Vasseur'><organization/></author>
<author fullname='J. Ash' initials='J.' surname='Ash'><organization/></author>
<date month='August' year='2006'/>
<abstract><t>Constraint-based path computation is a fundamental building block for traffic engineering systems such as Multiprotocol Label Switching (MPLS) and Generalized Multiprotocol Label Switching (GMPLS) networks.  Path computation in large, multi-domain, multi-region, or multi-layer networks is complex and may require special computational components and cooperation between the different network domains.</t><t>This document specifies the architecture for a Path Computation Element (PCE)-based model to address this problem space.  This document does not attempt to provide a detailed description of all the architectural components, but rather it describes a set of building blocks for the PCE architecture from which solutions may be constructed.  This memo provides information for the Internet community.</t></abstract>
</front>
<seriesInfo name='RFC' value='4655'/>
<seriesInfo name='DOI' value='10.17487/RFC4655'/>
</reference>



<reference anchor='RFC8342' target='https://www.rfc-editor.org/info/rfc8342'>
<front>
<title>Network Management Datastore Architecture (NMDA)</title>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' surname='Schoenwaelder'><organization/></author>
<author fullname='P. Shafer' initials='P.' surname='Shafer'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<author fullname='R. Wilton' initials='R.' surname='Wilton'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>Datastores are a fundamental concept binding the data models written in the YANG data modeling language to network management protocols such as the Network Configuration Protocol (NETCONF) and RESTCONF. This document defines an architectural framework for datastores based on the experience gained with the initial simpler model, addressing requirements that were not well supported in the initial model.  This document updates RFC 7950.</t></abstract>
</front>
<seriesInfo name='RFC' value='8342'/>
<seriesInfo name='DOI' value='10.17487/RFC8342'/>
</reference>



<reference anchor='RFC6805' target='https://www.rfc-editor.org/info/rfc6805'>
<front>
<title>The Application of the Path Computation Element Architecture to the Determination of a Sequence of Domains in MPLS and GMPLS</title>
<author fullname='D. King' initials='D.' role='editor' surname='King'><organization/></author>
<author fullname='A. Farrel' initials='A.' role='editor' surname='Farrel'><organization/></author>
<date month='November' year='2012'/>
<abstract><t>Computing optimum routes for Label Switched Paths (LSPs) across multiple domains in MPLS Traffic Engineering (MPLS-TE) and GMPLS networks presents a problem because no single point of path computation is aware of all of the links and resources in each domain.  A solution may be achieved using the Path Computation Element (PCE) architecture.</t><t>Where the sequence of domains is known a priori, various techniques can be employed to derive an optimum path.  If the domains are simply connected, or if the preferred points of interconnection are also known, the Per-Domain Path Computation technique can be used.  Where there are multiple connections between domains and there is no preference for the choice of points of interconnection, the Backward-Recursive PCE-based Computation (BRPC) procedure can be used to derive an optimal path.</t><t>This document examines techniques to establish the optimum path when the sequence of domains is not known in advance.  The document shows how the PCE architecture can be extended to allow the optimum sequence of domains to be selected, and the optimum end-to-end path to be derived through the use of a hierarchical relationship between domains.  This document is not an Internet Standards Track  specification; it is published for informational purposes.</t></abstract>
</front>
<seriesInfo name='RFC' value='6805'/>
<seriesInfo name='DOI' value='10.17487/RFC6805'/>
</reference>



<reference anchor='RFC7446' target='https://www.rfc-editor.org/info/rfc7446'>
<front>
<title>Routing and Wavelength Assignment Information Model for Wavelength Switched Optical Networks</title>
<author fullname='Y. Lee' initials='Y.' role='editor' surname='Lee'><organization/></author>
<author fullname='G. Bernstein' initials='G.' role='editor' surname='Bernstein'><organization/></author>
<author fullname='D. Li' initials='D.' surname='Li'><organization/></author>
<author fullname='W. Imajuku' initials='W.' surname='Imajuku'><organization/></author>
<date month='February' year='2015'/>
<abstract><t>This document provides a model of information needed by the Routing and Wavelength Assignment (RWA) process in Wavelength Switched Optical Networks (WSONs).  The purpose of the information described in this model is to facilitate constrained optical path computation in WSONs.  This model takes into account compatibility constraints between WSON signal attributes and network elements but does not include constraints due to optical impairments.  Aspects of this information that may be of use to other technologies utilizing a GMPLS control plane are discussed.</t></abstract>
</front>
<seriesInfo name='RFC' value='7446'/>
<seriesInfo name='DOI' value='10.17487/RFC7446'/>
</reference>




    </references>


<section anchor="examples"><name>Examples</name>

<t>This section contains examples of use of the model with RESTCONF
<xref target="RFC8040"/> and JSON encoding.</t>

<t>These examples show how path computation can be requested for the tunnels configuration provided in Appendix A of <xref target="I-D.ietf-teas-yang-te"/>.</t>

<section anchor="basic-example"><name>Basic Path Computation</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 13.1 of of <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>In this case, the TE Tunnel has only one primary path with no specific constraints.</t>

<figure><artwork><![CDATA[
POST /restconf/operations/ietf-te:te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 1,
          "tunnel-name": "Example_LSP_Tunnel_A_2",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "10.0.0.1",
          "destination": "10.0.0.4",
          "bidirectional": "false",
          "signaling-type": "te-types:path-setup-rsvp"
        }
      ]
    }
  }
}
]]></artwork></figure>

</section>
<section anchor="transient-state-example"><name>Path Computation with transient state</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 13.1 of of <xref target="I-D.ietf-teas-yang-te"/> requesting some transient state to be reported within the operational datastore, as described <xref target="temp-state"/>.</t>

<t>In this case, the TE Tunnel has only one primary path with no specific constraints.</t>

<figure><artwork><![CDATA[
POST /restconf/operations/ietf-te:te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 2,
          "tunnel-name": "Example_LSP_Tunnel_A_2",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "10.0.0.1",
          "destination": "10.0.0.4",
          "bidirectional": "false",
          "signaling-type": "te-types:path-setup-rsvp",
          "requested-state": {
            "transaction-id": "example"
          }
        }
      ]
    }
  }
}
]]></artwork></figure>

</section>
<section anchor="global-path-constraint-example"><name>Path Computation with Global Path Constraint</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 13.3 of of <xref target="I-D.ietf-teas-yang-te"/>. The 'named path constraint' is created in section 13.2 of <xref target="I-D.ietf-teas-yang-te"/> applies to this path computation request.</t>

<figure><artwork><![CDATA[
POST /restconf/operations/ietf-te:te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 3,
          "tunnel-name": "Example_LSP_Tunnel_A_4_1",
          "path-name": "Simple_LSP_1",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "10.0.0.1",
          "destination": "10.0.0.4",
          "bidirectional": "false",
          "signaling-type": "path-setup-rsvp",
          "named-path-constraint": "max-hop-3",
          "requested-state": {}
        }
      ]
    }
  }
}
]]></artwork></figure>

</section>
<section anchor="tunnel-path-constraint-example"><name>Path Computation with Per-tunnel Path Constraint</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 13.4 of of <xref target="I-D.ietf-teas-yang-te"/>, using a per tunnel path constraint.</t>

<figure><artwork><![CDATA[
POST /restconf/operations/ietf-te:te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 4,
          "tunnel-name": "Example_LSP_Tunnel_A_4_2",
          "path-name": "path1",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "10.0.0.1",
          "destination": "10.0.0.4",
          "bidirectional": "false",
          "signaling-type": "te-types:path-setup-rsvp",
          "path-metric-bounds": {
            "path-metric-bound": [
              {
                "metric-type": "te-types:path-metric-hop",
                "upper-bound": "3"
              }
            ]
          }
        }
      ]
    }
  }
}
]]></artwork></figure>

</section>
<section anchor="path-computation-result"><name>Path Computation result</name>

<t>This example reports the output of the path computation RPC request described in <xref target="tunnel-path-constraint-example"/>.</t>

<figure><artwork><![CDATA[
HTTP/1.1 200 OK
Host: example.com
Content-Type: application/yang-data+json

{
  "ietf-te:output": {
    "path-compute-result": {
      "ietf-te-path-computation:response": [
        {
          "response-id": 3,
          "computed-paths-properties": {
            "computed-path-properties": [
              {
                "k-index": "1",
                "path-properties": {
                  "path-route-objects": {
                    "path-route-object": [
                      {
                        "index": "1",
                        "numbered-node-hop": {
                          "node-id": "10.0.0.2"
                        }
                      },
                      {
                        "index": "2",
                        "numbered-node-hop": {
                          "node-id": "10.0.0.4"
                        }
                      }
                    ]
                  }
                }
              }
            ]
          },
          "tunnel-ref": "Example_LSP_Tunnel_A_4_1",
          "primary-path-ref": "path1"
        }
      ]
    }
  }
}
]]></artwork></figure>

</section>
</section>
<section numbered="false" anchor="acknowledgments"><name>Acknowledgments</name>

<t>The authors would like to thank Igor Bryskin and Xian Zhang for
   participating in the initial discussions that have triggered this
   work and providing valuable insights.</t>

<t>The authors would like to thank the authors of the TE tunnel YANG
   data model <xref target="I-D.ietf-teas-yang-te"/>, in particular Igor Bryskin, Vishnu Pavan
   Beeram, Tarek Saad and Xufeng Liu, for their inputs to the
   discussions and support in having consistency between the Path
   Computation and TE tunnel YANG data models.</t>

<t>The authors would like to thank Adrian Farrel, Dhruv Dhody, Igor
   Bryskin, Julien Meuric and Lou Berger for their valuable input to the
   discussions that has clarified that the path being set up is not
   necessarily the same as the path that has been previously computed
   and, in particular to Dhruv Dhody, for his suggestion to describe the
   need for a path verification phase to check that the actual path
   being set up meets the required end-to-end metrics and constraints.</t>

<t>The authors would like to thank Aihua Guo, Lou Berger, Shaolong Gan,
   Martin Bjorklund and Tom Petch for their useful comments on how to
   define XPath statements in YANG RPCs.</t>

<t>The authors would like to thank Haomian Zheng, Yanlei Zheng, Tom
   Petch, Aihua Guo and Martin Bjorklund for their review and valuable
   comments to this document.</t>

<t>Previous versions of document were prepared using 2-Word-v2.0.template.dot.</t>

<t>This document was prepared using kramdown.</t>

</section>

    <section anchor="contributors" numbered="false" toc="include" removeInRFC="false">
        <name>Contributors</name>
    <contact initials="V." surname="Lopez" fullname="Victor Lopez">
      <organization>Nokia</organization>
      <address>
        <email>victor.lopez@nokia.com</email>
      </address>
    </contact>
    <contact initials="R." surname="Vilalta" fullname="Ricard Vilalta">
      <organization>CTTC</organization>
      <address>
        <email>ricard.vilalta@cttc.es</email>
      </address>
    </contact>
    <contact initials="K." surname="Sethuraman" fullname="Karthik Sethuraman">
      <organization>NEC</organization>
      <address>
        <email>karthik.sethuraman@necam.com</email>
      </address>
    </contact>
    <contact initials="M." surname="Scharf" fullname="Michael Scharf">
      <organization>Nokia</organization>
      <address>
        <email>michael.scharf@gmail.com</email>
      </address>
    </contact>
    <contact initials="D." surname="Beller" fullname="Dieter Beller">
      <organization>Nokia</organization>
      <address>
        <email>dieter.beller@nokia.com</email>
      </address>
    </contact>
    <contact initials="G." surname="Bruno" fullname="Gianmarco Bruno">
      <organization>Ericsson</organization>
      <address>
        <email>gianmarco.bruno@ericsson.com</email>
      </address>
    </contact>
    <contact initials="F." surname="Lazzeri" fullname="Francesco Lazzeri">
      <organization>Ericsson</organization>
      <address>
        <email>francesco.lazzeri@ericsson.com</email>
      </address>
    </contact>
    <contact initials="Y." surname="Lee" fullname="Young Lee">
      <organization>Samsung Electronics</organization>
      <address>
        <email>younglee.tx@gmail.com</email>
      </address>
    </contact>
    <contact initials="C." surname="Perocchio" fullname="Carlo Perocchio">
      <organization>Ericsson</organization>
      <address>
        <email>carlo.perocchio@ericsson.com</email>
      </address>
    </contact>
    <contact initials="O." surname="Dugeon" fullname="Olivier Dugeon">
      <organization>Orange Labs</organization>
      <address>
        <email>olivier.dugeon@orange.com</email>
      </address>
    </contact>
    <contact initials="J." surname="Meuric" fullname="Julien Meuric">
      <organization>Orange Labs</organization>
      <address>
        <email>julien.meuric@orange.com</email>
      </address>
    </contact>
    </section>

  </back>

<!-- ##markdown-source:
H4sIAMTU7mEAA+y9a3sbx5Ew+h2/opf5EHINgNbNSegkNkXRjs7ako6otTdn
tWefITAkZwVisDMD0XSo89tP16W7q28zA1pJnLzGXkwBfamurq5bV1fNZrPJ
ol5W68sjte0uZr+dTLqqW5VH6lj9+fjF1+pZ0RXq23pZrtRF3aim/N9t2Xa6
vdoU3ZVa1NebbVd0Vb2eTIrz86Z8f6T+XOifofUraHIimizrxbq41qMvm+Ki
m1WlnrIri3Z2q7vMYMSZGHH24DeTm7p5d9nU282RenN6fKa+1/+G2b+G7yaL
oisv6+b2SLXdclJtmiPVNdu2e/jpp7/79OFk0nbFevnfxape6zlvy3ayqY7U
f3b1Yqrauuma8qLVf91e0x966uty3bX/pZey7a7q5mii1Ez/n1IE9fNOD6We
btsKv2xqQFS5rLq6wS/qRqPxT9vipqzUm3Jxta5X9WWlp4Ufy+uiWh2pCsaY
n+sxvrzClnM9bTDPWdlcVnqiclV3Xd9cL+p3VSFHb7Hn/Jx6frmG3xMTvGwX
RaO+rtc/FqvyR7Us1bOqJjCrdat/n6d/xEnflKvyol5XC2/mGoacX3KvpYa0
br/sbNMEEMfrbVNcqrOrorku3PBf1/XlqpRDF+v2qvjyEr9PjKPJTQ9SuRFO
rqp1of5dT4ttHXKuKk1nj3/35QIabPH3+WIdDPesWFcabHVSLvSKytVKjHza
VIu2rddy1CW1ny9s+y9LbobA6vO17prqfNvFBPVdtdDfqm/qTfljz66+x2bz
FTTL7ulrjeVmqYdcFatO4PPkzZsTOViD7ebvqd2Xi65bzJFE5WD/VjTdVfVO
U2J3pXfpulgL8E698d5R03lrm365LhfFdQLEb6vFVaE5yZn+T3PRs+Brajhv
seGXl/BtYrxnmoGUDZyTVdl3KpbYDk6FbpdF4NdVsb4umoU+eM12Xffv+qVp
PD+Hxv6W++N+1RTrRdnqcb8pfvxRN+wf+cI0n6+oed/Yf663mhl+U5ZuzLPi
uoUvT1flomvg8Hn85xZ6rMpy3v2QxetJ0Wg+96ps6oU+KgOYWEDj+cY07oP2
5ap6X+kNe7a9LGtBUS/1ki9LjZ5zD9Sams+X2PzLGlslhv2/tquqXKtvy62e
enDU/8HW82tsLQedzGYzpRt3TbHoJtDlzVXZlEofatUuynXRaJY2Vd3tRp+g
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
l2cDIlY1tGRnIaQEdiGMEcmoVzXcpxAvriRUgEemMJihXuvhpgi43oltN6sv
ZqYpnV2tGHQLDcFXeq3lDwUc5ClJMzz+aH8CRwdsIS9CZkMSFlF0QVzpm+Ic
3MUaIC1slrQp+9+cvUIj9PzW6Gkgi9dOn9HIA/yAIQs/nesvbqpld0VoBc5D
K3EoZIwwOCwH9Dy4HDAvjNrtsRiiHDJEJDGfehRZEZfGM9eUKwJXzxITJ2kT
REuot7MytgG/VkvWb4knAIlKdwNkwUZ7M+KRgBG26PIADm70HL2+cHN19+9L
NF5I+SnUj3p/mfpA13HKUbCwQjMLWLoe4Xhttpm2jn5gnwaS8Vo9//oVqJqF
Inl3vO3qdX1db1t1dtt25fXcisWHn3344DQKxzhQVDI7NbqW4GUtrPqi3q59
Hk1ilrlQU8JtVqGP2TXNAF8s6QuJdMkJL2rQ/0hxqZkbpISBZnd2oleNbvAD
eh9IkX0BR+hFoQ0mnPd5MMkUXdm4xbggRxykigmOXZ//jyYBJBbQ3Dc001Lo
MHjrCXdB9BuI4HpR2aPttOWmKbUSvl5aZGqRq3XyElWq7Qr0bC342qv6Zk3i
VXPjGQ2KC73jdSr+3NEo1Fl5nzv12vpd4J+Tu5n/Cf+d/0n31dCUnRwctRz4
ckaOIvETG5K/A1cIzKspSjbivv6Xft/f/uY3n9m+fgPuq6LPHbl3wXv7X7Re
mHeziPtG196Aq69O/kN/uCW6OR3qFd7Q/2HP0hgxvGgzeQ/39FlCRzPeHWtC
7MqjSeBoxslSTmZNOtXlmrxrHsHOwyEGfNU96mivr9rOcq11KwJBH0JQRgEp
+sDOUJlC3/C/t+D5b/mIoTLesr6gMdeiwuzrYNazZTRQUJda4RWFgTRDKRsS
wmfPXniuhJSXy+laMA3b2aPVLlofmQFaPFWLziAfvKBOeTzfdp6LB1i61raJ
W5hmrGsDu9LKC7CI8mK7cgAyVuiXlke+Kt6XtA0YdwFui2W5KYmwSMz6biOB
n866J45UcaDl9eJd2R0aix48YpfkV/lcnaMMv0ZfHouL0MOi4UJfufFNfk6U
fkAc9QQgb4iZ6j/0tqxps9s5UgKtZnmAncoDwOcGGmjj9dasXF0BY6+tokWb
kfK9WJ7qQawVGlXNSzTin+rF3kCL1+Vi27R6nliJtFYD8CKA60/Sz8bqEakY
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
MKzmWJvDHhbMMpq1q39jCQOz5PKFpRmGQjq5EhNZ9brTiq6CmppSX9MQmBXW
oIv0XJtA9YIvJiwivfpbhAurs8XOlx0/EyMcWGTZaPndPnd2nJ4PTvjTx7kD
zDwZaPM3hGfMR4wT7oDa5Us3jlUyzIMV78uHqS8fuS/lOCGou3yZGMeCusuX
8Ti4yw/uEl8+TH356O6vDM9Hw4+ZCb+UFJj8snecu6cvHjzAYOunLx4+uLNf
PnzEXz56cNc3Tv/U6S8T45DauRN+0GL5a8Hj4eehwc9DgZ/HBj8Pe/FjPx9p
v8bjp2+cFOmG43ggpccB5Dy66x9Ht3n06C45juROnwzzsU/8LzN89W34RfgJ
H2rl+LMZKAlPIulLls/TQEn8pHLH5OUFDpSkn1QKmh65MyPSfSzO++OHn8iB
x42Th+ce4wx+seM4kj//hHFQNDy++9nAk/9i7Dgsyh//tHFy52LnccZ+2NsQ
Trvzx3dHSEvAuCM805QNJVsvDu1ftk3/Jq4KNiGkgZl0Fhj3sO8amIfGJ9oD
xmIHH0fBoX7WMmGPh7XXnJsgdAiE1o6ILIPhjcVpHxNKk4gQNBXhcTvgx/O7
JDvLuhV+qQ39L72oJ6rgGketxE7GJRM6ZNz1iHowpQi4HnfMoznNyLcjhHJE
N9t9rfDS6PHoAu2RsLpjczvhJJCZUb1tC81y4+YK71UghJFscryfwJBFtN7b
MRsfXOnYzcd9Bp+P+tY+uUxWTzGpecFHYVvaKrUZ6jD+J79uDFn6WP1FvvMU
dfISs8Q1FH3CSRdh4ShFdCvZfMk7zoPWuvHzyLKLsspoT3mXuO5o/MZ1FEzg
h40KQJqd9MtW5kHJl68EphtuCj23TULzLQwOv/9KPS3Xeg5y+XAFVlGUK1t5
EAbjHbT5VILbwsWqbssVvVxYUR0ie/sWFf8itxvfmu+bUIGDnoDeKdZumXpb
JDNu24B1w6lszUxze36NlRAd9lsx5EClUBsJDmV7zg0KoYwPrNQ+JXf4spWc
e+pFtj34sf17IpxhTaYJV3I1a3YNrm35R/tEgiJt1rWr/Q1PiJqmbmZ6R9aw
ys0G3V8NVariuuX1xURMT3XKnwcv32srpNviGtnbpq7gpQu436DuKwU8I1aS
KMFgBH4W41WW1QDhlECd4mmNh2gPy160S+OAmiCx1C1TCsatt2VHRa83ssDq
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
Mj1d1ir7iOZZbqnBM9L+LuaTt+YC4Rbd0qgUiY5B90j8+ghViXuiuLX0zhLZ
Zo1b6RjPenZT5kLZNHWDKdGHDAvXMukb1O2pBZWK3hgmktIxZHOIyGi74npD
HAtvPKF6wKyACkZVWHpEdm3KohU3aQn1hzfbJi3vewMW5ja33aPcn/ZHm1BT
msFOKQrSq/qTB0VIggFN0snegcM0s1/0DWyzZyaH9HOOhtAODZmCVsVDp+B1
Q6dMcwrBab1c/rxNQIjwz4tq1fGDbWubc2paY7mLaJ72QOytyrXS0tZTjwdA
I4eB9AzIgZf6RKxK60DwaWscBFgUAYo5iGINSpP6qvzDXqLwg1e1Ye+DrQOB
RRawDgSWcKAqC1xy4fcnL5+dqqenXz9/cfZHpZFaqr1c+YUvH3768OHs0wez
h4+xnMPeZKDog/rLhE72DAgAvngwf/C5/g4tkU2x0JNtm/UR9D/aFBrq9uiH
69XRuj1CfpAbdw/GgBTU1Q94pbX4HCpDVNdYyZ474dyi1ef4T7+gglJ7r786
+bP+HKljQs4zqG/xrSuv0YBRu1Cn60utd5QNFqLz6zFB5a7na02LF3o9LYL2
AcA5/Ff1AsqiYBUrPY2iailY0kvDsVnB8mFurPuBFTZYySlauK0vWfPjimIw
Qg2FUpYapG4WlQBS5/q8aaxCaTLddv6vhzFOSFaEmKFv8/j57W9+89kRVBC7
1hvokPQGx8ogae7wUDeXhbnixFH3Ukg9hmtpiJHYNiWi9MwELKj9N6fHZ3x+
v6+bd/Dd1+AlwTmwUt+Cjtfe91+r78vzI/3n76+6bnN0eNjV9arFgklzDcjh
zeUhIO3wjzzc1+qbqu10h99fF5qh1Efw65em+R8n1Ix2DoZ93hWrWj3dtlXo
kjQDVNBifq5bfHm1LW7Kaq63JR7orGwuKz1Suaq7LjtYi63m59Tqy3X9rirS
431XLYC4vqk35Y+50d5jm/kK2vSN9bJdFI36ul7/WKzKH9WyVM+qus2NWkPr
+SW3XpZL3fZLKNlzUa+rRWaK4/W2KS7V2VXRXBe5kTVXvCq+vKzry1WZHubP
mtjPrvLou6r06Xj8uy8hQKLYanDq6/liHY/zWgPaLDUSV8Wqy8LTYKv5e2r1
5aLrFvOyjUf7t6Lprqp3eo+7K73M6yLyX5sR31HLeWtbfrkuF8V1erXfVour
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

-->

</rfc>

