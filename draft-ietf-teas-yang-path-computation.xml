<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.6.5 (Ruby 2.7.2) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc comments="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-teas-yang-path-computation-17" category="std" consensus="true" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="Yang for Path Computation">A YANG Data Model for requesting path computation</title>

    <author initials="I." surname="Busi" fullname="Italo Busi" role="editor">
      <organization>Huawei Technologies</organization>
      <address>
        <email>italo.busi@huawei.com</email>
      </address>
    </author>
    <author initials="S." surname="Belotti" fullname="Sergio Belotti" role="editor">
      <organization>Nokia</organization>
      <address>
        <email>sergio.belotti@nokia.com</email>
      </address>
    </author>
    <author initials="O." surname="Gonzalez de Dios" fullname="Oscar Gonzalez de Dios">
      <organization>Telefonica</organization>
      <address>
        <email>oscar.gonzalezdedios@telefonica.com</email>
      </address>
    </author>
    <author initials="A." surname="Sharma" fullname="Anurag Sharma">
      <organization>Google</organization>
      <address>
        <email>ansha@google.com</email>
      </address>
    </author>
    <author initials="Y." surname="Shi" fullname="Yan Shi">
      <organization>China Unicom</organization>
      <address>
        <email>shiyan49@chinaunicom.cn</email>
      </address>
    </author>
    <author initials="D." surname="Ceccarelli" fullname="Daniele Ceccarelli">
      <organization>Ericsson</organization>
      <address>
        <email>daniele.ceccarelli@ericsson.com</email>
      </address>
    </author>

    <date year="2022" month="March" day="11"/>

    
    <workgroup>TEAS Working Group</workgroup>
    

    <abstract>


<t>There are scenarios, typically in a hierarchical Software-Defined
   Networking (SDN) context, where the topology information provided by
   a Traffic Engineering (TE) network provider may be insufficient for
   its client to perform multi-domain path computation. In these cases the
   client would need to request the TE network provider to compute some
   intra-domain paths.</t>

<t>This document defines a YANG data model which contains Remote Procedure Calls
   (RPCs) to request path computation. This model complements the
   solution, defined in RFC YYYY, to configure a TE tunnel path in
   "compute-only" mode.</t>

<t>[RFC EDITOR NOTE: Please replace RFC YYYY with the RFC number of
   draft-ietf-teas-yang-te once it has been published.</t>

<t>Moreover, this document describes some use cases where the path
   computation request, via YANG-based protocols (e.g., NETCONF or
   RESTCONF), can be needed.</t>



    </abstract>



  </front>

  <middle>


<section anchor="intro"><name>Introduction</name>

<t anchor="pc-model">There are scenarios, typically in a hierarchical Software-Defined
   Networking (SDN) context, where the topology information provided by
   a Traffic Engineering (TE) network provider may be insufficient for
   its client to perform multi-domain path computation. In these cases the
   client would need to request the TE network provider to compute some
   intra-domain paths that could be used together with its topology information
   to compute the multi-domain path.</t>

<t>These types of scenarios can be applied to different interfaces in
   different reference architectures:</t>

<t><list style="symbols">
  <t>Application-Based Network Operations (ABNO) control interface
<xref target="RFC7491"/>, in which an Application Service Coordinator can request the
ABNO controller to take in charge path calculation (see Figure 1
in <xref target="RFC7491"/>).</t>
  <t>Abstraction and Control of TE Networks (ACTN) <xref target="RFC8453"/>, where a
controller hierarchy is defined.
In the ACTN context, path computation is needed on the interface
between Customer Network Controller (CNC)  and Multi-Domain
Service Coordinator (MDSC), called CNC-MDSC Interface (CMI),
and on the interface between MSDC and Provisioning Network
Controller (PNC), called MDSC-PNC Interface  (MPI). 
<xref target="RFC8454"/> describes an information model for the Path
Computation request.  <vspace blankLines='1'/>
Multiple protocol solutions can be used for communication between
different controller hierarchical levels. This document assumes that
the controllers are communicating using YANG-based protocols (e.g.,
NETCONF <xref target="RFC6241"/> or RESTCONF <xref target="RFC8040"/>).  <vspace blankLines='1'/>
Path Computation Elements (PCEs), controllers and orchestrators
perform their operations based on Traffic Engineering Databases
(TED). Such TEDs can be described, in a technology agnostic way, with
the YANG data model for TE Topologies <xref target="RFC8795"/>. Furthermore, the
technology specific details of the TED are modelled in the technology
specific topology models, e.g., the <xref target="I-D.ietf-ccamp-otn-topo-yang"/> for Optical Transport
Network (OTN) Optical Data Unit (ODU) technologies, which augment the
common TE topology model in <xref target="RFC8795"/>.  <vspace blankLines='1'/>
The availability of such topology models allows the provisioning of
the TED using YANG-based protocols (e.g., NETCONF or RESTCONF).
Furthermore, it enables a PCE/controller performing the necessary
abstractions or modifications and offering this customized topology
to another PCE/controller or high level orchestrator.  <vspace blankLines='1'/>
The tunnels that can be provided over the networks described with the
topology models can be also set-up, deleted and modified via YANG-
based protocols (e.g., NETCONF or RESTCONF) using the TE tunnel YANG
data model <xref target="I-D.ietf-teas-yang-te"/>.  <vspace blankLines='1'/>
This document defines a YANG data model <xref target="RFC7950"/> for an RPC to
request path computation, which complements the solution defined in
<xref target="I-D.ietf-teas-yang-te"/>, to configure a TE tunnel path in "compute-only" mode.  <vspace blankLines='1'/>
The YANG data model definition does not make any assumption about
whether that the client or the server implement a "PCE"
functionality, as defined in <xref target="RFC4655"/>, and the Path Computation
Element Communication Protocol (PCEP) protocol, as defined in
<xref target="RFC5440"/>.  <vspace blankLines='1'/>
Moreover, this document describes some use cases where a path
computation request, via YANG-based protocols (e.g., NETCONF or
RESTCONF), can be needed.  <vspace blankLines='1'/>
The YANG data model defined in this document conforms to the Network
Management Datastore Architecture <xref target="RFC8342"/>.</t>
</list></t>

<section anchor="terminology"><name>Terminology</name>

<t>TED:</t>

<ul empty="true"><li>
  <t>The traffic engineering database is a collection of all TE
   information about all TE nodes and TE links in a given network.</t>
</li></ul>

<t>PCE:</t>

<ul empty="true"><li>
  <t>A Path Computation Element (PCE) is an entity that is capable of
   computing a network path or route based on a network graph, and of
   applying computational constraints during the computation.  The PCE
   entity is an application that can be located within a network node or
   component, on an out-of-network server, etc.  For example, a PCE
   would be able to compute the path of a TE Label Switched Path (LSP)
   by operating on the TED and considering bandwidth and other
   constraints applicable to the TE LSP service request. <xref target="RFC4655"/>.</t>
</li></ul>

<t>Domain:</t>

<ul empty="true"><li>
  <t>TE information is the data relating to nodes and TE links
   that is used in the process of selecting a TE path.  TE information
   is usually only available within a network.  We call such a zone of
   visibility of TE information a domain.  An example of a domain may be
   an IGP area or an Autonomous System. <xref target="RFC7926"/></t>
</li></ul>

<t>The terminology for describing YANG data models is found in
   <xref target="RFC7950"/>.</t>

</section>
<section anchor="tree-diagram"><name>Tree Diagram</name>

<t>Tree diagrams used in this document follow the notation defined in
   <xref target="RFC8340"/>.</t>

</section>
<section anchor="prefixes-in-data-node-names"><name>Prefixes in Data Node Names</name>

<t>In this document, names of data nodes and other data model objects
   are prefixed using the standard prefix associated with the
   corresponding YANG imported modules, as shown in <xref target="tab-prefix"/>.</t>

<texttable title="Prefixes and corresponding YANG modules" anchor="tab-prefix">
      <ttcol align='left'>Prefix</ttcol>
      <ttcol align='left'>YANG module</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>inet</c>
      <c>ietf-inet-types</c>
      <c><xref target="RFC6991"/></c>
      <c>te-types</c>
      <c>ietf-te-types</c>
      <c><xref target="RFC8776"/></c>
      <c>te</c>
      <c>ietf-te</c>
      <c>[RFCYYYY]</c>
      <c>te-pc</c>
      <c>ietf-te-path-computation</c>
      <c>RFCXXXX</c>
</texttable>

<t>RFC Editor Note:
Please replace XXXX with the RFC number assigned to this document.
Please replace RFC YYYY with the RFC number of <xref target="I-D.ietf-teas-yang-te"/> once it has been published.
Please remove this note.</t>

</section>
</section>
<section anchor="use-cases"><name>Use Cases</name>

<t>This section presents some use cases, where a client needs to request
   underlying SDN controllers for path computation.</t>

<t>The use of the YANG data model defined in this document is not
   restricted to these use cases but can be used in any other use case
   when deemed useful.</t>

<t>The presented uses cases have been grouped, depending on the
   different underlying topologies: a) Packet/Optical Integration; b)
   multi-domain Traffic Engineered (TE) Networks; and c) Data Center
   Interconnections. Use cases d) and e) respectively present how to
   apply this YANG data model for standard multi-domain PCE i.e.
   Backward Recursive Path Computation <xref target="RFC5441"/> and Hierarchical PCE
   <xref target="RFC6805"/>.</t>

<section anchor="poi-uc"><name>Packet/Optical Integration</name>

<t>In this use case, an optical domain is used to provide connectivity
   to some nodes of a packet domain (see <xref target="fig-poi-uc"/>).</t>

<figure title="Packet/Optical Integration use case" anchor="fig-poi-uc"><artwork><![CDATA[
                                +----------------+
                                |                |
                                | Packet/Optical |
                                |  Coordinator   |
                                |                |
                                +---+------+-----+
                                    |      |
                       +------------+      |
                       |                   +-----------+
                +------V-----+                         |
                |            |                  +------V-----+
                | Packet     |                  |            |
                | Domain     |                  | Optical    |
                | Controller |                  | Domain     |
                |            |                  | Controller |
                +------+-----+                  +-------+----+
                       |                                |
              .........V.........................       |
              :          packet domain          :       |
          +----+                               +----+   |
          | R1 |= = = = = = = = = = = = = = = =| R2 |   |
          +-+--+                               +--+-+   |
            | :                                 : |     |
            | :................................ : |     |
            |                                     |     |
            |               +-----+               |     |
            |    ...........| Opt |...........    |     |
            |    :          |  C  |          :    |     |
            |    :         /+--+--+\         :    |     |
            |    :        /    |    \        :    |     |
            |    :       /     |     \       :    |     |
            |   +-----+ /   +--+--+   \ +-----+   |     |
            |   | Opt |/    | Opt |    \| Opt |   |     |
            +---|  A  |     |  D  |     |  B  |---+     |
                +-----+\    +--+--+    /+-----+         |
                 :      \      |      /      :          |
                 :       \     |     /       :          |
                 :        \ +--+--+  / optical<---------+
                 :         \| Opt |/  domain :
                 :..........|  E  |..........:
                            +-----+
]]></artwork></figure>

<t><xref target="fig-poi-uc"/> as well as <xref target="fig-poi-abstraction"/> below only show a partial view of the
   packet network connectivity, before additional packet connectivity is
   provided by the optical network.</t>

<t>It is assumed that the Optical Domain Controller provides to the
   Packet/Optical Coordinator an abstracted view of the optical network.
   A possible abstraction could be to represent the whole optical
   network as one "virtual node" with "virtual ports" connected to the
   access links, as shown in <xref target="fig-poi-abstraction"/>.</t>

<t>It is also assumed that Packet Domain Controller can provide the
   Packet/Optical Coordinator the information it needs to set up
   connectivity between packet nodes through the optical network (e.g.,
   the access links).</t>

<t>The path computation request helps the Packet/Optical Coordinator to
   know the real connections that can be provided by the optical
   network.</t>

<figure title="Packet and Optical Topology Abstractions" anchor="fig-poi-abstraction"><artwork><![CDATA[
                       ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,.
                      ,  Packet/Optical Coordinator view          ,
                     ,                              +----+       , .
                    ,                               |    |      ,
                   ,                                | R2 |     ,   .
                  ,  +----+  +------------ +       /+----+    ,
                 ,   |    |  |             |/-----/ / /      ,     .
                ,    | R1 |--O VP1     VP4 O       / /      ,
               ,     |    |\ |             | /----/ /      ,       .
              ,      +----+ \|             |/      /      ,
             ,        /      O VP2     VP5 O      /      ,         .
            ,        /       |             |  +----+    ,
           ,        /        |             |  |    |   ,           .
          ,        /         O VP3     VP6 O--| R4 |  ,
         ,     +----+ /-----/|_____________|  +----+ ,             .
        ,      |    |/       +------------ +        ,
       ,       | R3 |                              ,               .
      ,        +----+                             ,,,,,,,,,,,,,,,,,
     ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,                ,.
     . Packet Domain Controller view                +----+       ,
       only packet nodes and packet links           |    |      ,  .
     . with access links to the optical network     | R2 |     ,
                  ,  +----+                        /+----+    ,    .
     .           ,   |    |                 /-----/ / /      ,
                ,    | R1 |---                     / /      ,      .
     .         ,     +----+\                 /----/ /      ,
              ,        /    \               /      /      ,        .
     .       ,        /                           /      ,
            ,        /                        +----+    ,          .
     .     ,        /                         |    |   ,
          ,        /                       ---| R4 |  ,            .
     .   ,     +----+ /-----/                 +----+ ,
        ,      |    |/                              ,              .
     . ,       | R3 |                              ,
      ,        +----+                             ,,,,,,,,,,,,,,,,,.
     .,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,                ,
       Optical Domain Controller view                            , .
     . only optical nodes,        +--+                          ,
       optical links and         /|OF|                         ,   .
     . access links from the  +--++--+             /          ,
       packet network         |OA|    \     /-----/ /        ,     .
     .          ,          ---+--+--\  +--+/       /        ,
               ,           \   |  \  \-|OE|-------/        ,       .
     .        ,             \  |   \ /-+--+               ,
             ,               \+--+  X    |               ,         .
     .      ,                 |OB|-/ \   |              ,
           ,                  +--+-\  \+--+            ,           .
     .    ,                  /   \  \--|OD|---        ,
         ,            /-----/     +--+ +--+          ,             .
     .  ,            /            |OC|/             ,
       ,                          +--+             ,               .
     .,                                           ,,,,,,,,,,,,,,,,,,
      ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,                ,
     . Actual Physical View                         +----+       ,
                    ,             +--+              |    |      ,
     .             ,             /|OF|              | R2 |     ,
                  ,  +----+   +--++--+             /+----+    ,
     .           ,   |    |   |OA|    \     /-----/ / /      ,
                ,    | R1 |---+--+--\  +--+/       / /      ,
     .         ,     +----+\   |  \  \-|OE|-------/ /      ,
              ,        /    \  |   \ /-+--+        /      ,
     .       ,        /      \+--+  X    |        /      ,
            ,        /        |OB|-/ \   |    +----+    ,
     .     ,        /         +--+-\  \+--+   |    |   ,
          ,        /         /   \  \--|OD|---| R4 |  ,
     .   ,     +----+ /-----/     +--+ +--+   +----+ ,
        ,      |    |/            |OC|/             ,
     . ,       | R3 |             +--+             ,
      ,        +----+                             ,
     .,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
]]></artwork></figure>

<t>In this use case, the Packet/Optical Coordinator needs to set up an
   optimal underlying path for an IP link between R1 and R2.</t>

<t>As depicted in <xref target="fig-poi-abstraction"/>, the Packet/Optical Coordinator has only an
   "abstracted view" of the physical network, and it does not know the
   feasibility or the cost of the possible optical paths (e.g., VP1-VP4
   and VP2-VP5), which depend on the current status of the physical
   resources within the optical network and on vendor-specific optical
   attributes.</t>

<t>The Packet/Optical Coordinator can request the underlying Optical
   Domain Controller to compute a set of potential optimal paths, taking
   into account optical constraints. Then, based on its own constraints,
   policy and knowledge (e.g. cost of the access links), it can choose
   which one of these potential paths to use to set up the optimal end-
   to-end path crossing optical network.</t>

<figure title="Packet/Optical Integration path computation example" anchor="fig-poi-example"><artwork><![CDATA[
                    ............................
                    :                          :
                    O VP1                  VP4 O
           cost=10 /:\                        /:\ cost=10
                  / : \----------------------/ : \
          +----+ /  :         cost=50          :  \ +----+
          |    |/   :                          :   \|    |
          | R1 |    :                          :    | R2 |
          |    |\   :                          :   /|    |
          +----+ \  :  /--------------------\  :  / +----+
                  \ : /       cost=55        \ : /
            cost=5 \:/                        \:/ cost=5
                    O VP2                  VP5 O
                    :                          :
                    :..........................:
]]></artwork></figure>

<t>For example, in <xref target="fig-poi-example"/>, the Packet/Optical Coordinator can request
   the Optical Domain Controller to compute the paths between VP1-VP4
   and VP2-VP5 and then decide to set up the optimal end-to-end path
   using the VP2-VP5 optical path even if this is not the optimal path
   from the optical domain perspective.</t>

<t>Considering the dynamicity of the connectivity constraints of an
   optical domain, it is possible that a path computed by the Optical
   Domain Controller when requested by the Packet/Optical Coordinator is
   no longer valid/available when the Packet/Optical Coordinator
   requests it to be set up. This is further discussed in <xref target="rpc-motivation"/>.</t>

</section>
<section anchor="md-uc"><name>Multi-domain TE networks</name>

<t>In this use case there are two TE domains which are interconnected
   together by multiple inter-domains links.</t>

<t>A possible example could be a multi-domain optical network.</t>

<figure title="Multi-domain multi-link interconnection" anchor="md-ml-connection"><artwork><![CDATA[
                            +--------------+
                            | Multi-Domain |
                            | Controller   |
                            +---+------+---+
                                |      |
                   +------------+      |
                   |                   +-----------+
            +------V-----+                         |
            |            |                         |
            | TE Domain  |                  +------V-----+
            | Controller |                  |            |
            |      1     |                  | TE Domain  |
            +------+-----+                  | Controller |
                   |                        |      2     |
                   |                        +------+-----+
          .........V..........                     |
          :                  :                     |
         +-----+             :                     |
         |     |             :            .........V..........
         |  X  |             :            :                  :
         |     |          +-----+      +-----+                :
         +-----+          |     |      |     |               :
          :               |  C  |------|  E  |               :
      +-----+    +-----+ /|     |      |     |\ +-----+    +-----+
      |     |    |     |/ +-----+      +-----+ \|     |    |     |
      |  A  |----|  B  |     :            :     |  G  |----|  H  |
      |     |    |     |\    :            :    /|     |    |     |
      +-----+    +-----+ \+-----+      +-----+/ +-----+    +-----+
          :               |     |      |     |               :
          :               |  D  |------|  F  |               :
          :               |     |      |     |          +-----+
          :               +-----+      +-----+          |     |
          :                  :            :             |  Y  |
          :                  :            :             |     |
          :   TE domain 1    :            : TE domain 2 +-----+
          :..................:            :.................:
]]></artwork></figure>

<t>In order to set up an end-to-end multi-domain TE path (e.g., between
   nodes A and H), the Multi-Domain Controller needs to know the
   feasibility or the cost of the possible TE paths within the two TE
   domains, which depend on the current status of the physical resources
   within each TE domain. This is more challenging in case of optical
   networks because the optimal paths depend also on vendor-specific
   optical attributes (which may be different in the two domains if they
   are provided by different vendors).</t>

<t>In order to set up a multi-domain TE path (e.g., between nodes A and
   H), the Multi-Domain Controller can request the TE Domain Controllers
   to compute a set of intra-domain optimal paths and take decisions
   based on the information received. For example:</t>

<t><list style="symbols">
  <t>The Multi-Domain Controller asks TE Domain Controllers to provide
set of paths between A-C, A-D, E-H and F-H</t>
  <t>TE Domain Controllers return a set of feasible paths with the
associated costs: the path A-C is not part of this set (in optical
networks, it is typical to have some paths not being feasible due
to optical constraints that are known only by the Optical Domain
Controller)</t>
  <t>The Multi-Domain Controller will select the path A-D-F-H since it
is the only feasible multi-domain path and then request the TE
Domain Controllers to set up the A-D and F-H intra-domain paths</t>
  <t>If there are multiple feasible paths, the Multi-Domain Controller
can select the optimal path knowing the cost of the intra-domain
paths (provided by the TE domain controllers) and the cost of the
inter-domain links (known by the Multi-Domain Controller)  <vspace blankLines='1'/>
This approach may have some scalability issues when the number of TE
domains is quite big (e.g. 20).  <vspace blankLines='1'/>
In this case, it would be worthwhile using the abstract TE topology
information provided by the TE Domain Controllers to limit the number
of potential optimal end-to-end paths and then request path
computation from fewer TE Domain Controllers in order to decide what
the optimal path within this limited set is.  <vspace blankLines='1'/>
For more details, see <xref target="topo-pc-complement"/>.</t>
</list></t>

</section>
<section anchor="data-center-interconnections"><name>Data Center Interconnections</name>

<t>In these use case, there is a TE domain which is used to provide
   connectivity between Data Centers which are connected with the TE
   domain using access links.</t>

<figure title="Data Center Interconnection use case" anchor="fig-dci-uc"><artwork><![CDATA[
                        +--------------+
                        | Cloud Network|
                        | Orchestrator |
                        +--------------+
                          |  |  |  |
            +-------------+  |  |  +------------------------+
            |                |  +------------------+        |
            |       +--------V---+                 |        |
            |       |            |                 |        |
            |       | TE Network |                 |        |
     +------V-----+ | Controller |          +------V-----+  |
     | DC         | +------------+          | DC         |  |
     | Controller |     |                   | Controller |  |
     +------------+     |   +-----+         +------------+  |
          |         ....V...|     |........         |       |
          |         :       |  P  |       :         |       |
     .....V.....    :      /+-----+\      :    .....V.....  |
     :         :  +-----+ /    |    \ +-----+  :         :  |
     :  DC1 || :  |     |/     |     \|     |  :  DC2 || :  |
     :    ||||----| PE1 |      |      | PE2 |----   |||| :  |
     : _|||||| :  |     |\     |     /|     |  : _|||||| :  |
     :         :  +-----+ \ +-----+ / +-----+  :         :  |
     :.........:    :      \|     |/      :    :.........:  |
                    :.......| PE3 |.......:                 |
                            |     |                         |
                            +-----+               +---------V--+
                          .....|.....             | DC         |
                          :         :             | Controller |
                          :  DC3 || :             +------------+
                          :    |||| :                  |
                          : _|||||| <------------------+
                          :         :
                          :.........:
]]></artwork></figure>

<t>In this use case, there is the need to transfer data from Data Center
   1 (DC1) to either DC2 or DC3 (e.g. workload migration).</t>

<t>The optimal decision depends both on the cost of the TE path (DC1-DC2
   or DC1-DC3) and of the Data Center resources within DC2 or DC3.</t>

<t>The Cloud Network Orchestrator needs to make a decision for optimal
   connection based on TE network constraints and Data Center resources.</t>

<t>It may not be able to make this decision because it has only an
   abstract view of the TE network (as in <xref target="poi-uc"/>).</t>

<t>The Cloud Network Orchestrator can request to the TE Network
   Controller to compute the cost of the possible TE paths (e.g., DC1-
   DC2 and DC1-DC3) and to the DC Controller to provide the information
   it needs about the required Data Center resources within DC2 and DC3
   and then it can take the decision about the optimal solution based on
   this information and its policy.</t>

</section>
<section anchor="backward-recursive-path-computation-scenario"><name>Backward Recursive Path Computation scenario</name>

<t><xref target="RFC5441"/> has defined the Virtual Source Path Tree (VSPT) TLV within
   PCE Reply Object in order to compute inter-domain paths following a
   "Backward Recursive Path Computation" (BRPC) method. The main
   principle is to forward the PCE request message up to the destination
   domain. Then, each PCE involved in the computation will compute its
   part of the path and send it back to the requester through PCE
   Response message. The resulting computation is spread from
   destination PCE to source PCE. Each PCE is in charge of merging the
   path it received with the one it calculated. At the end, the source
   PCE merges its local part of the path with the received one to
   achieve the end-to-end path.</t>

<t><xref target="fig-brpc-example"/> below show a typical BRPC scenario where 3 PCEs cooperate to
   compute inter-domain paths.</t>

<figure title="BRPC Scenario" anchor="fig-brpc-example"><artwork><![CDATA[
                   +----------------+          +----------------+
                   |  Domain (B)    |          |  Domain (C)    |
                   |                |          |                |
                   |        /-------|---PCEP---|--------\       |
                   |       /        |          |         \      |
                   |   (PCE)        |          |   -    (PCE)   |
                   |    /           <---------->  |D|           |
                   |   /            |  Inter   |   -            |
                   +---|----^-------+  Domain  +----------------+
                       |    |          Link
                     PCEP   |
                       |    | Inter-domain Link
                       |    |
                   +---|----v-------+
                   |   |            |
                   |   | Domain (A) |
                   |   \            |
                   |  (PCE)    -    |
                   |          |S|   |
                   |           -    |
                   +----------------+
]]></artwork></figure>

<t>In this use case, a client can use the YANG data model defined in
   this document to request path computation from the PCE that controls
   the source of the tunnel. For example, a client can request to the
   PCE of domain A to compute a path from a source S, within domain A,
   to a destination D, within domain C. Then PCE of domain A will use
   PCEP protocol, as per <xref target="RFC5441"/>, to compute the path from S to D and
   in turn gives the final answer to the requester.</t>

</section>
<section anchor="hierarchical-pce-scenario"><name>Hierarchical PCE scenario</name>

<t><xref target="RFC6805"/> has defined an architecture and extensions to the PCE
   standard to compute inter-domain path following a hierarchical
   method. Two new roles have been defined: parent PCE and child PCE.
   The parent PCE is in charge to coordinate the end-to-end path
   computation. For that purpose it sends to each child PCE involved in
   the multi-domain path computation a PCE Request message to obtain the
   local part of the path. Once received all answer through PCE Response
   message, the parent PCE will merge the different local parts of the
   path to achieve the end-to-end path.</t>

<t><xref target="fig-hpce-example"/> below shows a typical hierarchical scenario where a parent
   PCE request end-to-end path to the different child PCE. Note that a
   PCE could take independently the role of child or parent PCE
   depending of which PCE will request the path.</t>

<figure title="Hierarchical domain topology from RFC6805" anchor="fig-hpce-example"><artwork><![CDATA[
    -----------------------------------------------------------------
    |   Domain 5                                                      |
    |                              -----                              |
    |                             |PCE 5|                             |
    |                              -----                              |
    |                                                                 |
    |    ----------------     ----------------     ----------------   |
    |   | Domain 1       |   | Domain 2       |   | Domain 3       |  |
    |   |                |   |                |   |                |  |
    |   |        -----   |   |        -----   |   |        -----   |  |
    |   |       |PCE 1|  |   |       |PCE 2|  |   |       |PCE 3|  |  |
    |   |        -----   |   |        -----   |   |        -----   |  |
    |   |                |   |                |   |                |  |
    |   |            ----|   |----        ----|   |----            |  |
    |   |           |BN11+---+BN21|      |BN23+---+BN31|           |  |
    |   |   -        ----|   |----        ----|   |----        -   |  |
    |   |  |S|           |   |                |   |           |D|  |  |
    |   |   -        ----|   |----        ----|   |----        -   |  |
    |   |           |BN12+---+BN22|      |BN24+---+BN32|           |  |
    |   |            ----|   |----        ----|   |----            |  |
    |   |                |   |                |   |                |  |
    |   |         ----   |   |                |   |   ----         |  |
    |   |        |BN13|  |   |                |   |  |BN33|        |  |
    |    -----------+----     ----------------     ----+-----------   |
    |                \                                /               |
    |                 \       ----------------       /                |
    |                  \     |                |     /                 |
    |                   \    |----        ----|    /                  |
    |                    ----+BN41|      |BN42+----                   |
    |                        |----        ----|                       |
    |                        |                |                       |
    |                        |        -----   |                       |
    |                        |       |PCE 4|  |                       |
    |                        |        -----   |                       |
    |                        |                |                       |
    |                        | Domain 4       |                       |
    |                         ----------------                        |
    |                                                                 |
     -----------------------------------------------------------------
]]></artwork></figure>

<t>In this use case, a client can use the YANG data model defined in
   this document to request to the parent PCE a path from a source S to
   a destination D. The parent PCE will in turn contact the child PCEs
   through PCEP protocol to compute the end-to-end path and then return
   the computed path to the client, using the YANG data model defined in
   this document. For example the YANG data model can be used to request
   to PCE5 acting as parent PCE to compute a path from source S, within
   domain 1, to destination D, within domain 3. PCE5 will contact child
   PCEs of domain 1, 2 and 3 to obtain local part of the end-to-end path
   through the PCEP protocol. Once received the PCE Response message, it
   merges the answers to compute the end-to-end path and send it back to
   the client.</t>

</section>
</section>
<section anchor="motivations"><name>Motivations</name>

<t>This section provides the motivation for the YANG data model defined
   in this document.</t>

<t><xref target="yang-motivation"/> describes the motivation for a YANG data model to request
   path computation.</t>

<t><xref target="topo-interaction"/> describes the motivation for a YANG data model which
   complements the TE topology YANG data model defined in <xref target="RFC8795"/>.</t>

<t><xref target="rpc-motivation"/> describes the motivation for a YANG RPC which complements
   the TE tunnel YANG data model defined in <xref target="I-D.ietf-teas-yang-te"/>.</t>

<section anchor="yang-motivation"><name>Motivation for a YANG Model</name>

<section anchor="benefits-of-common-data-models"><name>Benefits of common data models</name>

<t>The YANG data model for requesting path computation is closely
   aligned with the YANG data models that provide (abstract) TE topology
   information, i.e., <xref target="RFC8795"/> as well as that are used to configure
   and manage TE tunnels, i.e., <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>There are many benefits in aligning the data model used for path
   computation requests with the YANG data models used for TE topology
   information and for TE tunnels configuration and management:</t>

<t><list style="symbols">
  <t>There is no need for an error-prone mapping or correlation of
information.</t>
  <t>It is possible to use the same endpoint identifiers in path
computation requests and in the topology modeling.</t>
  <t>The attributes used for path computation constraints are the same
as those used when setting up a TE tunnel.</t>
</list></t>

</section>
<section anchor="benefits-of-a-single-interface"><name>Benefits of a single interface</name>

<t>The system integration effort is typically lower if a single,
   consistent interface is used by controllers, i.e., one data modeling
   language (i.e., YANG) and a common protocol (e.g., NETCONF or
   RESTCONF).</t>

<t>Practical benefits of using a single, consistent interface include:</t>

<t><list style="numbers">
  <t>Simple authentication and authorization: The interface between
different components has to be secured. If different protocols
have different security mechanisms, ensuring a common access
control model may result in overhead. For instance, there may be a
need to deal with different security mechanisms, e.g., different
credentials or keys. This can result in increased integration
effort.</t>
  <t>Consistency: Keeping data consistent over multiple different
interfaces or protocols is not trivial. For instance, the sequence
of actions can matter in certain use cases, or transaction
semantics could be desired. While ensuring consistency within one
protocol can already be challenging, it is typically cumbersome to
achieve that across different protocols.</t>
  <t>Testing: System integration requires comprehensive testing,
including corner cases. The more different technologies are
involved, the more difficult it is to run comprehensive test cases
and ensure proper integration.</t>
  <t>Middle-box friendliness: Provider and consumer of path computation
requests may be located in different networks, and middle-boxes
such as firewalls, NATs, or load balancers may be deployed. In
such environments it is simpler to deploy a single protocol. Also,
it may be easier to debug connectivity problems.</t>
  <t>Tooling reuse: Implementers may want to implement path computation
requests with tools and libraries that already exist in
controllers and/or orchestrators, e.g., leveraging the rapidly
growing eco-system for YANG tooling.</t>
</list></t>

</section>
<section anchor="extensibility"><name>Extensibility</name>

<t>Path computation is only a subset of the typical functionality of a
   controller. In many use cases, issuing path computation requests
   comes along with the need to access other functionality on the same
   system. In addition to obtaining TE topology, for instance also
   configuration of services (set-up/modification/deletion) may be
   required, as well as:</t>

<t><list style="numbers">
  <t>Receiving notifications for topology changes as well as
integration with fault management</t>
  <t>Performance management such as retrieving monitoring and telemetry
data</t>
  <t>Service assurance, e.g., by triggering OAM functionality</t>
  <t>Other fulfilment and provisioning actions beyond tunnels and
services, such as changing QoS configurations  <vspace blankLines='1'/>
YANG is a very extensible and flexible data modeling language that
can be used for all these use cases.</t>
</list></t>

</section>
</section>
<section anchor="topo-interaction"><name>Interactions with TE topology</name>

<t>The use cases described in <xref target="use-cases"/> have been described assuming
   that the topology view exported by each underlying controller to its
   client is aggregated using the "virtual node model", defined in
   <xref target="RFC7926"/>.</t>

<t>TE topology information, e.g., as provided by <xref target="RFC8795"/>, could in
   theory be used by an underlying controller to provide TE information
   to its client thus allowing a PCE available within its client to
   perform multi-domain path computation on its own, without requesting
   path computations to the underlying controllers.</t>

<t>In case the client does not implement a PCE function, as discussed in
   <xref target="intro"/>, it could not perform path computation based on TE topology
   information and would instead need to request path computation from
   the underlying controllers to get the information it needs to find
   the optimal end-to-end path.</t>

<t>In case the client implements a PCE function, as discussed in 
   <xref target="intro"/>, the TE topology information needs to be complete and accurate,
   which would bring to scalability issues.</t>

<t>Using TE topology to provide a "virtual link model" aggregation, as
   described in <xref target="RFC7926"/>, may be insufficient, unless the aggregation
   provides complete and accurate information, which would still cause
   scalability issues, as described in <xref target="topo-aggregation"/> below.</t>

<t>Using TE topology abstraction, as described in <xref target="RFC7926"/>, may lead to
   compute an unfeasible path, as described in <xref target="RFC7926"/> in 
   <xref target="topo-abstraction"/> below.</t>

<t>Therefore when computing an optimal multi-domain path, there is a
   scalability trade-off between providing complete and accurate TE
   information and the number of path computation requests to the
   underlying controllers.</t>

<t>The TE topology information used, in a complimentary way, to reduce
   the number for path computation requests to the underlying
   controllers, are described in <xref target="topo-pc-complement"/> below.</t>

<section anchor="topo-aggregation"><name>TE topology aggregation</name>

<t>Using the TE topology model, as defined in <xref target="RFC8795"/>, the underlying
   controller can export the whole TE domain as a single TE node with a
   "detailed connectivity matrix" (which provides specific TE
   attributes, such as delay, Shared Risk Link Groups (SRLGs) and other
   TE metrics, between each ingress and egress links).</t>

<t>The information provided by the "detailed connectivity matrix" would
   be equivalent to the information that should be provided by "virtual
   link model" as defined in <xref target="RFC7926"/>.</t>

<t>For example, in the Packet/Optical Integration use case, described in
   <xref target="poi-uc"/>, the Optical Domain Controller can make the information
   shown in <xref target="fig-poi-example"/> available to the Packet/Optical Coordinator as part
   of the TE topology information and the Packet/Optical Coordinator
   could use this information to calculate on its own the optimal path
   between R1 and R2, without requesting any additional information to
   the Optical Domain Controller.</t>

<t>However, when designing the amount of information to provide within
   the "detailed connectivity matrix", there is a tradeoff to be
   considered between accuracy (i.e., providing "all" the information
   that might be needed by the PCE available within the client) and
   scalability.</t>

<t><xref target="poi-multi-path"/> below shows another example, similar to <xref target="fig-poi-example"/>, where
   there are two possible Optical paths between VP1 and VP4 with
   different properties (e.g., available bandwidth and cost).</t>

<figure title="Packet/Optical Integration path computation Example with multiple choices" anchor="poi-multi-path"><artwork><![CDATA[
                    ............................
                    :  /--------------------\  :
                    : /       cost=65        \ :
                    :/    available-bw=10G    \:
                    O VP1                  VP4 O
           cost=10 /:\                        /:\ cost=10
                  / : \----------------------/ : \
          +----+ /  :         cost=50          :  \ +----+
          |    |/   :     available-bw=2G      :   \|    |
          | R1 |    :                          :    | R2 |
          |    |\   :                          :   /|    |
          +----+ \  :  /--------------------\  :  / +----+
                  \ : /       cost=55        \ : /
            cost=5 \:/    available-bw=3G     \:/ cost=5
                    O VP2                  VP5 O
                    :                          :
                    :..........................:
]]></artwork></figure>

<t>If the information in the "detailed connectivity matrix" is not
   complete/accurate, we can have the following drawbacks:</t>

<t><list style="symbols">
  <t>If only the VP1-VP4 path with available bandwidth of 2 Gb/s and
cost 50 is reported, the client's PCE will fail to compute a 5
Gb/s path between routers R1 and R2, although this would be
feasible;</t>
  <t>If only the VP1-VP4 path with available bandwidth of 10 Gb/s and
cost 60 is reported, the client's PCE will compute, as optimal,
the 1 Gb/s path between R1 and R2 going through the VP2-VP5 path
within the optical domain while the optimal path would actually be
the one going thought the VP1-VP4 sub-path (with cost 50) within
the optical domain.  <vspace blankLines='1'/>
Reporting all the information, as in <xref target="poi-multi-path"/>, using the "detailed
 connectivity matrix", is quite challenging from a scalability
 perspective. The amount of this information is not just based on
 number of end points (which would scale as N-square), but also on
 many other parameters, including client rate, user
 constraints/policies for the service, e.g. max latency &lt; N ms, max
 cost, etc., exclusion policies to route around busy links, min
 Optical Signal to Noise Ratio (OSNR) margin, max pre-Forward Error
 Correction (FEC) Bit Error Rate (BER) etc. All these constraints
 could be different based on connectivity requirements.  <vspace blankLines='1'/>
It is also worth noting that the "connectivity matrix" has been
 originally defined in Wavelength Switched Optical Networks (WSON),
 <xref target="RFC7446"/>, to report the connectivity constrains of a physical node
 within the Wavelength Division Multiplexing (WDM) network: the
 information it contains is pretty "static" and therefore, once taken
 and stored in the TE data base, it can be always being considered
 valid and up-to-date in path computation request.  <vspace blankLines='1'/>
The "connectivity matrix" is sometimes confused with "optical reach
 table" that contain multiple (e.g. k-shortest) regen-free reachable
 paths for every A-Z node combination in the network. Optical reach
 tables can be calculated offline, utilizing vendor optical design and
 planning tools, and periodically uploaded to the Controller: these
 optical path reach tables are fairly static. However, to get the
 connectivity matrix, between any two sites, either a regen free path
 can be used, if one is available, or multiple regen free paths are
 concatenated to get from the source to the destination, which can be
 a very large combination. Additionally, when the optical path within
 optical domain needs to be computed, it can result in different paths
 based on input objective, constraints, and network conditions. In
 summary, even though "optical reach table" is fairly static, which
 regen free paths to build the connectivity matrix between any source
 and destination is very dynamic, and is done using very sophisticated
 routing algorithms.  <vspace blankLines='1'/>
Using the "basic connectivity matrix" with an abstract node to
 abstract the information regarding the connectivity constraints of an
 Optical domain, would make this information more "dynamic" since the
 connectivity constraints of an optical domain can change over time
 because some optical paths that are feasible at a given time may
 become unfeasible at a later time when e.g., another optical path is
 established.  <vspace blankLines='1'/>
The information in the "detailed connectivity matrix" is even more
 dynamic since the establishment of another optical path may change
 some of the parameters (e.g., delay or available bandwidth) in the
 "detailed connectivity matrix" while not changing the feasibility of
 the path.  <vspace blankLines='1'/>
There is therefore the need to keep the information in the "detailed
 connectivity matrix" updated which means that there another tradeoff
 between the accuracy (i.e., providing "all" the information that
 might be needed by the client's PCE) and having up-to-date
 information. The more the information is provided and the longer it
 takes to keep it up-to-date which increases the likelihood that the
 client's PCE computes paths using not updated information.  <vspace blankLines='1'/>
It seems therefore quite challenging to have a "detailed connectivity
 matrix" that provides accurate, scalable and updated information to
 allow the client's PCE to take optimal decisions by its own.  <vspace blankLines='1'/>
Considering the example in <xref target="poi-multi-path"/> with the approach defined in this
 document, the client, when it needs to set up an end-to-end path, it
 can request the Optical Domain Controller to compute a set of optimal
 paths (e.g., for VP1-VP4 and VP2-VP5) and take decisions based on the
 information received:</t>
  <t>When setting up a 5 Gb/s path between routers R1 and R2, the
Optical Domain Controller may report only the VP1-VP4 path as the
only feasible path: the Packet/Optical Coordinator can
successfully set up the end-to-end path passing though this
optical path;</t>
  <t>When setting up a 1 Gb/s path between routers R1 and R2, the
Optical Domain Controller (knowing that the path requires only 1
Gb/s) can report both the VP1-VP4 path, with cost 50, and the VP2-
VP5 path, with cost 65. The Packet/Optical Coordinator can then
compute the optimal path which is passing thought the VP1-VP4 sub-
path (with cost 50) within the optical domain.</t>
</list></t>

</section>
<section anchor="topo-abstraction"><name>TE topology abstraction</name>

<t>Using the TE topology model, as defined in <xref target="RFC8795"/>, the underlying
   controller can export to its client an abstract TE topology, composed
   by a set of TE nodes and TE links, representing the abstract view of
   the topology under its control.</t>

<t>For example, in the multi-domain TE network use case, described in
   <xref target="md-uc"/>, the TE Domain Controller 1 can export a TE topology
   encompassing the TE nodes A, B, C and D and the TE links
   interconnecting them. In a similar way, the TE Domain Controller 2
   can export a TE topology encompassing the TE nodes E, F, G and H and
   the TE links interconnecting them.</t>

<t>In this example, for simplicity reasons, each abstract TE node maps
   with each physical node, but this is not necessary.</t>

<t>In order to set up a multi-domain TE path (e.g., between nodes A and
   H), the Multi-Domain Controller can compute by its own an optimal
   end-to-end path based on the abstract TE topology information
   provided by the domain controllers. For example:</t>

<t><list style="symbols">
  <t>Multi-Domain Controller can compute, based on its own TED data,
the optimal multi-domain path being A-B-C-E-G-H, and then request
the TE Domain Controllers to set up the A-B-C and E-G-H intra-
domain paths</t>
  <t>But, during path set-up, the TE Domain Controller may find out
that A-B-C intra-domain path is not feasible (as discussed in
<xref target="md-uc"/>, in optical networks it is typical to have some paths
not being feasible due to optical constraints that are known only
by the Optical Domain Controller), while only the path A-B-D is
feasible</t>
  <t>So what the Multi-Domain Controller has computed is not good and
it needs to re-start the path computation from scratch  <vspace blankLines='1'/>
As discussed in <xref target="topo-aggregation"/>, providing more extensive abstract
information from the TE Domain Controllers to the Multi-Domain
Controller may lead to scalability problems.  <vspace blankLines='1'/>
In a sense this is similar to the problem of routing and wavelength
assignment within an optical domain. It is possible to do first
routing (step 1) and then wavelength assignment (step 2), but the
chances of ending up with a good path is low. Alternatively, it is
possible to do combined routing and wavelength assignment, which is
known to be a more optimal and effective way for optical path set-up.
Similarly, it is possible to first compute an abstract end-to-end
path within the Multi-Domain Controller (step 1) and then compute an
intra-domain path within each optical domain (step 2), but there are
more chances not to find a path or to get a suboptimal path than by
performing multiple per-domain path computations and then stitching
them together.</t>
</list></t>

</section>
<section anchor="topo-pc-complement"><name>Complementary use of the TE topology</name>

<t>As discussed in <xref target="md-uc"/>, there are some scalability issues with
   path computation requests in a multi-domain TE network with many TE
   domains, in terms of the number of requests to send to the TE Domain
   Controllers. It would therefore be worthwhile using the abstract TE
   topology information provided by the TE Domain Controllers to limit
   the number of requests.</t>

<t>An example can be described considering the multi-domain abstract TE
   topology shown in <xref target="fig-topo-many-domains"/>. In this example, an end-to-end TE path
   between domains A and F needs to be set up. The transit TE domain
   should be selected between domains B, C, D and E.</t>

<figure title="Multi-domain with many domains (Topology information)" anchor="fig-topo-many-domains"><artwork><![CDATA[
                          .........B.........
                          : _ _ _ _ _ _ _ _ :
                          :/               \:
                      +---O  NOT FEASIBLE   O---+
                cost=5|   :                 :   |
    ......A......     |   :.................:   |     ......F......
    :           :     |                         |     :           :
    :           O-----+   .........C.........   +-----O           :
    :           :         : /-------------\ :         :           :
    :           :         :/               \:         :           :
    :  cost<=20 O---------O   cost <= 30    O---------O cost<=20  :
    :          /: cost=5  :                 : cost=5  :\          :
    :  /------/ :         :.................:         : \------\  :
    : /         :                                     :         \ :
    :/ cost<=25 :         .........D.........         : cost<=25 \:
    O-----------O-------+ : /-------------\ : +-------O-----------O
    :\          : cost=5| :/               \: |cost=5 :          /:
    : \         :       +-O   cost <= 30    O-+       :         / :
    :  \------\ :         :                 :         : /------/  :
    : cost>=30 \:         :.................:         :/ cost>=30 :
    :           O-----+                         +-----O           :
    :...........:     |   .........E.........   |     :...........:
                      |   : /-------------\ :   |
                cost=5|   :/               \:   |cost=5
                      +---O   cost >= 30    O---+
                          :                 :
                          :.................:
]]></artwork></figure>

<t>The actual cost of each intra-domain path is not known a priori from
   the abstract topology information. The Multi-Domain Controller only
   knows, from the TE topology provided by the underlying domain
   controllers, the feasibility of some intra-domain paths and some
   upper-bound and/or lower-bound cost information. With this
   information, together with the cost of inter-domain links, the Multi-
   Domain Controller can understand by its own that:</t>

<t><list style="symbols">
  <t>Domain B cannot be selected as the path connecting domains A and F
is not feasible;</t>
  <t>Domain E cannot be selected as a transit domain since it is known
from the abstract topology information provided by domain
controllers that the cost of the multi-domain path A-E-F (which is
100, in the best case) will be always be higher than the cost of
the multi-domain paths A-D-F (which is 90, in the worst case) and
A-C-F (which is 80, in the worst case).  <vspace blankLines='1'/>
Therefore, the Multi-Domain Controller can understand by its own that
 the optimal multi-domain path could be either A-D-F or A-C-F but it
 cannot know which one of the two possible option actually provides
 the optimal end-to-end path.  <vspace blankLines='1'/>
The Multi-Domain Controller can therefore request path computation
 only to the TE Domain Controllers A, D, C and F (and not to all the
 possible TE Domain Controllers).</t>
</list></t>

<figure title="Multi-domain with many domains (Path Computation information)" anchor="fig-pc-many-domains"><artwork><![CDATA[
                          .........B.........
                          :                 :
                      +---O                 O---+
    ......A......     |   :.................:   |     ......F......
    :           :     |                         |     :           :
    :           O-----+   .........C.........   +-----O           :
    :           :         : /-------------\ :         :           :
    :           :         :/               \:         :           :
    :  cost=15  O---------O    cost = 25    O---------O  cost=10  :
    :          /: cost=5  :                 : cost=5  :\          :
    :  /------/ :         :.................:         : \------\  :
    : /         :                                     :         \ :
    :/ cost=10  :         .........D.........         : cost=15  \:
    O-----------O-------+ : /-------------\ : +-------O-----------O
    :           : cost=5| :/               \: |cost=5 :           :
    :           :       +-O    cost = 15    O-+       :           :
    :           :         :                 :         :           :
    :           :         :.................:         :           :
    :           O-----+                         +-----O           :
    :...........:     |   .........E.........   |     :...........:
                      |   :                 :   |
                      +---O                 O---+
                          :.................:
]]></artwork></figure>

<t>Based on these requests, the Multi-Domain Controller can know the
   actual cost of each intra-domain paths which belongs to potential
   optimal end-to-end paths, as shown in <xref target="fig-pc-many-domains"/>, and then compute the
   optimal end-to-end path (e.g., A-D-F, having total cost of 50,
   instead of A-C-F having a total cost of 70).</t>

</section>
</section>
<section anchor="rpc-motivation"><name>Path Computation RPC</name>

<t>The TE tunnel YANG data model, defined in <xref target="I-D.ietf-teas-yang-te"/>, can support
   the need to request path computation, as described in section 5.1.2
   of <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>This solution is stateful since the state of each created "compute-
   only" TE tunnel path needs to be maintained, in the YANG datastores
   (at least in the running datastore and operational datastore), and
   updated, when underlying network conditions change.</t>

<t>The RPC mechanism allows requesting path computation using a simple
   atomic operation, without creating any state in the YANG datastores,
   and it is the natural option/choice, especially with stateless PCE.</t>

<t>It is very useful to provide both the options of using an RPC as well
   as of setting up TE tunnel paths in "compute-only" mode. It is
   suggested to use the RPC as much as possible and to rely on
   "compute-only" TE tunnel paths, when really needed.</t>

<t>Using the RPC solution would imply that the underlying controller
   (e.g., a PNC) computes a path twice during the process to set up an
   LSP: at time T1, when its client (e.g., an MDSC) sends a path
   computation RPC request to it, and later, at time T2, when the same
   client (MDSC) creates a TE tunnel requesting the set-up of the LSP.
   The underlying assumption is that, if network conditions have not
   changed, the same path that has been computed at time T1 is also
   computed at time T2 by the underlying controller (e.g. PNC) and
   therefore the path that is set up at time T2 is exactly the same path
   that has been computed at time T1.</t>

<t>However, since the operation is stateless, there is no guarantee that
   the returned path would still be available when path set-up is
   requested: this does not cause major issues when the time between
   path computation and path set-up is short (especially if compared
   with the time that would be needed to update the information of a
   very detailed connectivity matrix).</t>

<t>In most of the cases, there is even no need to guarantee that the
   path that has been set up is the exactly same as the path that has
   been returned by path computation, especially if it has the same or
   even better metrics. Depending on the abstraction level applied by
   the server, the client may also not know the actual computed path.</t>

<t>The most important requirement is that the required global objectives
   (e.g., multi-domain path metrics and constraints) are met. For this
   reason a path verification phase is always necessary to verify that
   the actual path that has been set up meets the global objectives (for
   example in a multi-domain network, the resulting end-to-end path
   meets the required end-to-end metrics and constraints).</t>

<t>In most of the cases, even if the path being set up is not exactly
   the same as the path returned by path computation, its metrics and
   constraints are "good enough" and the path verification passes
   successfully. In the few corner cases where the path verification
   fails, it is possible repeat the whole process (path computation,
   path set-up and path verification).</t>

<t>In case it is required to set up at T2 exactly the same path computed
   at T1, the RPC solution should not be used and, instead, a "compute-
   only" TE tunnel path should be set up, allowing also notifications in
   case the computed path has been changed.</t>

<t>In this case, at time T1, the client (MDSC) creates a TE tunnel in a
   compute-only mode in the running datastore and later, at time T2,
   changes the configuration of that TE tunnel (not to be any more in a
   compute-only mode) to trigger the set-up of the LSP over the path
   which have been computed at time T1 and reported in the operational
   datastore.</t>

<t>It is worth noting that also using the "compute-only" TE tunnel path,
   although increasing the likelihood that the computed path is
   available at path set-up, does not guarantee that because
   notifications may not be reliable or delivered on time. Path
   verification is needed also in this case.</t>

<t>The solution based on "compute-only" TE tunnel path has also the
   following drawbacks:</t>

<t><list style="symbols">
  <t>Several messages required for any path computation</t>
  <t>Requires persistent storage in the underlying controller</t>
  <t>Need for garbage collection for stranded paths</t>
  <t>Process burden to detect changes on the computed paths in order to
provide notifications update</t>
</list></t>

<section anchor="temp-state"><name>Temporary reporting of the computed path state</name>

<t>This section describes an optional extension to the stateless
   behavior of the path computation RPC, where the underlying
   controller, after having received a path computation RPC request,
   maintains some "transient state" associated with the computed path,
   allowing the client to request the set-up of exactly that path, if
   still available.</t>

<t>This is similar to the "compute-only" TE tunnel path solution but, to
   avoid the drawbacks of the stateful approach, is leveraging the path
   computation RPC and the separation between configuration and
   operational datastore, as defined in the NMDA architecture <xref target="RFC8342"/>.</t>

<t>The underlying controller, after having computed a path, as requested
   by a path computation RPC, also creates a TE tunnel instance within
   the operational datastore, to store that computed path. This would be
   similar to a "compute-only" TE tunnel path, with the only difference
   that there is no associated TE tunnel instance within the running
   datastore.</t>

<t>Since the underlying controller stores in the operational datastore
   the computed path based on an abstract topology it exposes, it also
   remembers, internally, which is the actual native path (physical
   path), within its native topology (physical topology), associated
   with that compute-only TE tunnel instance.</t>

<t>Afterwards, the client (e.g., MDSC) can request the set-up of that
   specific path by creating a TE tunnel instance (not in compute-only
   mode) in the running datastore using the same tunnel-name of
   the existing TE tunnel in the operational datastore: this will
   trigger the underlying controller to set up that path, if still
   available.</t>

<t>There are still cases where the path being set up is not exactly the
   same as the path that has been computed:</t>

<t><list style="symbols">
  <t>When the tunnel is configured with path constraints which are not
compatible with the computed path;</t>
  <t>When the tunnel set-up is requested after the resources of the
computed path are no longer available;</t>
  <t>When the tunnel set-up is requested after the computed path is no
longer known (e.g. due to a server reboot) by the underlying
controller.  <vspace blankLines='1'/>
In all these cases, the underlying controller should compute and set
 up a new path.  <vspace blankLines='1'/>
Therefore the "path verification" phase, as described in <xref target="rpc-motivation"/>
 above, is always needed to check that the path that has been set up
 is still "good enough".  <vspace blankLines='1'/>
Since this new approach is not completely stateless, garbage
 collection is implemented using a timeout that, when it expires,
 triggers the removal of the computed path from the operational
 datastore. This operation is fully controlled by the underlying
 controller without the need for any action to be taken by the client
 that is not able to act on the operational datastore. The default
 value of this timeout is 10 minutes but a different value may be
 configured by the client.  <vspace blankLines='1'/>
In addition, it is possible for the client to tag each path
 computation request with a transaction-id allowing for a faster
 removal of all the paths associated with a transaction-id, without
 waiting for their timers to expire.  <vspace blankLines='1'/>
The underlying controller can remove from the operational datastore
 all the paths computed with a given transaction-id which have not
 been set up either when it receives a Path Delete RPC request for
 that transaction-id or, automatically, right after the set-up up of a
 path that has been previously computed with that transaction-id.  <vspace blankLines='1'/>
This possibility is useful when multiple paths are computed but, at
 most, only one is set up (e.g., in multi-domain path computation
 scenario scenarios). After the selected path has been set up (e.g, in
 one domain during multi-domain path set-up), all the other
 alternative computed paths can be automatically deleted by the
 underlying controller (since no longer needed). The client can also
 request, using the Path Delete RPC request, the underlying controller
 to remove all the computed paths, if none of them is going to be set
 up (e.g., in a transit domain not being selected by multi-domain path
 computation and so not being automatically deleted).  <vspace blankLines='1'/>
This approach is complimentary and not alternative to the timer which
 is always needed to avoid stranded computed paths being stored in the
 operational datastore when no path is set up and no explicit Path
 Delete RPC request is received.</t>
</list></t>

</section>
</section>
</section>
<section anchor="path-computation-and-optimization-for-multiple-paths"><name>Path computation and optimization for multiple paths</name>

<t>There are use cases, where it is advantageous to request path
   computation for a set of paths, through a network or through a
   network domain, using a single request <xref target="RFC5440"/>.</t>

<t>In this case, sending a single request for multiple path
   computations, instead of sending multiple requests for each path
   computation, would reduce the protocol overhead and it would consume
   less resources (e.g., threads in the client and server).</t>

<t>In the context of a typical multi-domain TE network, there could
   multiple choices for the ingress/egress points of a domain and the
   Multi-Domain Controller needs to request path computation between all
   the ingress/egress pairs to select the best pair. For example, in the
   example of <xref target="md-uc"/>, the Multi-Domain Controller needs to request
   the TE Network Controller 1 to compute the A-C and the A-D paths and
   to the TE Network Controller 2 to compute the E-H and the F-H paths.</t>

<t>It is also possible that the Multi-Domain Controller receives a
   request to set up a group of multiple end to end connections. The
   Multi-Domain Controller needs to request each TE domain Controller to
   compute multiple paths, one (or more) for each end to end connection.</t>

<t>There are also scenarios where it can be needed to request path
   computation for a set of paths in a synchronized fashion.</t>

<t>One example could be computing multiple diverse paths. Computing a
   set of diverse paths in an unsynchronized fashion, leads to the
   possibility of not being able to satisfy the diversity requirement.
   In this case, it is preferable to compute a sub-optimal primary path
   for which a diversely routed secondary path exists.</t>

<t>There are also scenarios where it is needed to request optimizing a
   set of paths using objective functions that apply to the whole set of
   paths, see <xref target="RFC5541"/>, e.g. to minimize the sum of the costs of all
   the computed paths in the set.</t>

</section>
<section anchor="yang-data-model-for-requesting-path-computation"><name>YANG data model for requesting Path Computation</name>

<t>This document define a YANG RPC to request path computation as an
   "augmentation" of tunnel-rpc, defined in <xref target="I-D.ietf-teas-yang-te"/>. This model
   provides the RPC input attributes that are needed to request path
   computation and the RPC output attributes that are needed to report
   the computed paths.</t>

<figure><artwork><![CDATA[
     augment /te:tunnels-path-compute/te:input/te:path-compute-info:
       +-- path-request* [request-id]
       |  +-- request-id                            uint32
       |  ...........

     augment /te:tunnels-path-compute/te:output/te:path-compute-result:
       +--ro response* [response-id]
          +--ro response-id                         uint32
          +--ro computed-paths-properties
          |  +--ro computed-path-properties* [k-index]
          |     +--ro k-index            uint8
          |     +--ro path-properties
          |     ...........
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>This model extensively re-uses the grouping defined in <xref target="I-D.ietf-teas-yang-te"/>
   and <xref target="RFC8776"/> to ensure maximal syntax and semantics commonality.</t>

<t>This YANG data model allows one RPC to include multiple path
   requests, each path request being identified by a request-id.
   Therefore, one RPC can return multiple responses, one for each path
   request, being identified by a response-id equal to the corresponding
   request-id. Each response reports one or more computed paths, as
   requested by the k-requested-paths attribute. By default, each
   response reports one computed path.</t>

<section anchor="synchronization-of-multiple-path-computation-requests"><name>Synchronization of multiple path computation requests</name>

<t>The YANG data model permits the synchronization of a set of multiple
   path requests (identified by specific request-id) all related to a
   "svec" container emulating the syntax of the Synchronization VECtor
   (SVEC) PCEP object, defined in <xref target="RFC5440"/>.</t>

<figure><artwork><![CDATA[
       +-- synchronization* []
          +-- svec
          |  +-- relaxable?           boolean
          |  +-- disjointness?        te-path-disjointness
          |  +-- request-id-number*   uint32
          +-- svec-constraints
          |  +-- path-metric-bound* [metric-type]
          |     +-- metric-type    identityref
          |     +-- upper-bound?   uint64
          +-- path-srlgs-lists
          |  +-- path-srlgs-list* [usage]
          |     +-- usage     identityref
          |     +-- values*   srlg
          +-- path-srlgs-names
          |  +-- path-srlgs-name* [usage]
          |     +-- usage    identityref
          |     +-- names*   string
          +-- exclude-objects
          |  +-- excludes* []
          |     +-- (type)?
          |        +--:(numbered-node-hop)
          |        |  +-- numbered-node-hop
          |        |     +-- node-id     te-node-id
          |        |     +-- hop-type?   te-hop-type
          |        +--:(numbered-link-hop)
          |        |  +-- numbered-link-hop
          |        |     +-- link-tp-id    te-tp-id
          |        |     +-- hop-type?     te-hop-type
          |        |     +-- direction?    te-link-direction
          |        +--:(unnumbered-link-hop)
          |        |  +-- unnumbered-link-hop
          |        |     +-- link-tp-id    te-tp-id
          |        |     +-- node-id       te-node-id
          |        |     +-- hop-type?     te-hop-type
          |        |     +-- direction?    te-link-direction
          |        +--:(as-number)
          |        |  +-- as-number-hop
          |        |     +-- as-number    inet:as-number
          |        |     +-- hop-type?    te-hop-type
          |        +--:(label)
          |           +-- label-hop
          |              +-- te-label
          |                 +-- (technology)?
          |                 |  +--:(generic)
          |                 |     +-- generic?
          |                 |             rt-types:generalized-label
          |                 +-- direction?       te-label-direction
          +-- optimizations
             +-- (algorithm)?
                +--:(metric) {te-types:path-optimization-metric}?
                |  +-- optimization-metric* [metric-type]
                |     +-- metric-type    identityref
                |     +-- weight?        uint8
                +--:(objective-function)
                         {te-types:path-optimization-objective-
   function}?
                   +-- objective-function
                      +-- objective-function-type?   identityref
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>The model, in addition to the metric types, defined in <xref target="RFC8776"/>,
   which can be applied to each individual path request, supports also
   additional metric types, which apply to a set of synchronized
   requests, as referenced in <xref target="RFC5541"/>. These additional metric types
   are defined by the following YANG identities:</t>

<t><list style="symbols">
  <t>svec-metric-type: base YANG identity from which cumulative metric
types identities are derived.</t>
  <t>svec-metric-cumul-te: cumulative TE cost metric type, as defined
in <xref target="RFC5541"/>.</t>
  <t>svec-metric-cumul-igp: cumulative IGP cost metric type, as defined
in <xref target="RFC5541"/>.</t>
  <t>svec-metric-cumul-hop: cumulative Hop metric type, representing
the cumulative version of the Hop metric type defined in
<xref target="RFC8776"/>.</t>
  <t>svec-metric-aggregate-bandwidth-consumption: aggregate bandwidth
consumption metric type, as defined in <xref target="RFC5541"/>.</t>
  <t>svec-metric-load-of-the-most-loaded-link: load of the most loaded
link metric type, as defined in <xref target="RFC5541"/>.</t>
</list></t>

</section>
<section anchor="returned-metric-values"><name>Returned metric values</name>

<t>This YANG data model provides a way to return the values of the
   metrics computed by the path computation in the output of RPC,
   together with other important information (e.g. srlg, affinities,
   explicit route), emulating the syntax of the "C" flag of the "METRIC"
   PCEP object <xref target="RFC5440"/>:</t>

<figure><artwork><![CDATA[
          |     +--ro path-properties
          |        +--ro path-metric* [metric-type]
          |        |  +--ro metric-type           identityref
          |        |  +--ro accumulative-value?   uint64
          |        +--ro path-affinities-values
          |        |  +--ro path-affinities-value* [usage]
          |        |     +--ro usage    identityref
          |        |     +--ro value?   admin-groups
          |        +--ro path-affinity-names
          |        |  +--ro path-affinity-name* [usage]
          |        |     +--ro usage            identityref
          |        |     +--ro affinity-name* [name]
          |        |        +--ro name    string
          |        +--ro path-srlgs-lists
          |        |  +--ro path-srlgs-list* [usage]
          |        |     +--ro usage     identityref
          |        |     +--ro values*   srlg
          |        +--ro path-srlgs-names
          |        |  +--ro path-srlgs-name* [usage]
          |        |     +--ro usage    identityref
          |        |     +--ro names*   string
          |        +--ro path-route-objects
          |        ...........
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>It also allows the client to request which information (metrics, srlg
   and/or affinities) should be returned:</t>

<figure><artwork><![CDATA[
       |  +-- request-id                            uint32
       |  ...........
       |  +-- requested-metrics* [metric-type]
       |  |  +-- metric-type    identityref
       |  +-- return-srlgs?                         boolean
       |  +-- return-affinities?                    boolean
       |  ...........
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>This feature is essential for path computation in a multi-domain TE
   network as described in <xref target="md-uc"/>. In this case, the metrics
   returned by a path computation requested to a given underlying
   controller must be used by the client to compute the best end-to-end
   path. If they are missing, the client cannot compare different paths
   calculated by the underlying controllers and choose the best one for
   the optimal end-to-end (e2e) path.</t>

</section>
<section anchor="multiple-paths-requests-for-the-same-te-tunnel"><name>Multiple Paths Requests for the same TE tunnel</name>

<t>The YANG data model allows including multiple requests for different
   paths intended to be used within the same tunnel or within different
   tunnels.</t>

<t>When multiple requested paths are intended to be used within the same
   tunnel (e.g., requesting path computation for the primary and
   secondary paths of a protected tunnel), the set of attributes that
   are intended to be configured on per-tunnel basis rather than on per-
   path basis are common to all these path requests. These attributes
   includes both attributes which can be configured only a per-tunnel
   basis (e.g., tunnel-name, source/destination TTP, encoding and
   switching-type) as well attributes which can be configured both on a
   per-tunnel and on a per-path basis (e.g., the te-bandwidth or the
   associations).</t>

<t>Therefore, a tunnel-attributes list is defined, within the path
   computation request RPC:</t>

<figure><artwork><![CDATA[
       +-- tunnel-attributes* [tunnel-name]
       |  +-- tunnel-name               string
       |  +-- encoding?                 identityref
       |  +-- switching-type?           identityref
       |  ...........
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>The path requests that are intended to be used within the same tunnel
   should reference the same entry in the tunnel-attributes list. This
   allows:</t>

<t><list style="symbols">
  <t>avoiding repeating the same set of per-tunnel parameters on
multiple requested paths;</t>
  <t>the server to understand what attributes are intended to be
configured on a per-tunnel basis (e.g., the te-bandwidth
configured in the tunnel-attributes) and what attributes are
intended to be configured on a per-path basis(e.g., the te-
bandwidth configured in the path-request). This could be useful
especially when the server also creates a TE tunnel instance
within the operational datastore to report the computed paths, as
described in <xref target="temp-state"/>: in this case, the tunnel-name is also
used as the suggested name for that TE tunnel instance.  <vspace blankLines='1'/>
The YANG data model allows also including requests for paths intended
 to modify existing tunnels (e.g., adding a protection path for an
 existing un-protected tunnel). In this case, the per-tunnel
 attributes are already provided in an existing TE tunnel instance and
 do not need to be re-configured in the path computation request RPC.
 Therefore, these requests should reference an existing TE tunnel
 instance.  <vspace blankLines='1'/>
It is also possible to request computing paths without indicating in
 which tunnel they are intended to be used (e.g., in case of an
 unprotected tunnel). In this case, the per-tunnel attributes could be
 provided together with the per-path attributes in the path request,
 without using the tunnel-attributes list.  <vspace blankLines='1'/>
The choices below are defined to distinguish the cases above:</t>
  <t>whether the per-tunnel attributes are configured by reference
(providing a leafref), to:  <list style="symbols">
      <t>either a TE tunnel instance, if it exists;</t>
      <t>or to an entry of the tunnel-attributes list, if the TE tunnel
instance does not exist;</t>
    </list></t>
  <t>or by value, providing the set of tunnel attributes within the
path request:</t>
</list></t>

<figure><artwork><![CDATA[
       |  +-- (tunnel-attributes)?
       |  |  +--:(reference)
       |  |  |  +-- tunnel-reference
       |  |  |     +-- (tunnel-exist)?
       |  |  |     |  +--:(tunnel-ref)
       |  |  |     |  |  +-- tunnel-ref                te:tunnel-ref
       |  |  |     |  +--:(tunnel-attributes-ref)
       |  |  |     |     +-- tunnel-attributes-ref     leafref
       |  |  ...........
       |  |  +--:(value)
       |  |     +-- tunnel-name?                    string
       |  |     ...........
       |  |     +-- encoding?                       identityref
       |  |     +-- switching-type?                 identityref
       |  |     ...........
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<section anchor="tunnel-attributes-specified-by-value"><name>Tunnel attributes specified by value</name>

<t>The (value) case provides the set of attributes that are configured
   only on per-tunnel basis (e.g., tunnel-name, source/destination TTP,
   encoding and switching-type).</t>

<t>In this case, it is assumed that the requested path will be the only
   path within a tunnel.</t>

<t>If the requested path is a transit segment of a multi-domain end-to-
   end path, it can be of any type (primary, secondary, reverse-primary
   or reverse-secondary), as specified by the (path-role) choice:</t>

<figure><artwork><![CDATA[
       |  |     +-- (path-role)?
       |  |     |  +--:(primary-path)
       |  |     |  +--:(secondary-path)
       |  |     |  |  +-- secondary-path!
       |  |     |  |     +-- primary-path-name?   string
       |  |     |  +--:(primary-reverse-path)
       |  |     |  |  +-- primary-reverse-path!
       |  |     |  |     +-- primary-path-name?   string
       |  |     |  +--:(secondary-reverse-path)
       |  |     |     +-- secondary-reverse-path!
       |  |     |        +-- primary-path-name?           string
       |  |     |        +-- primary-reverse-path-name?   string
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>In all the other cases, the requested path can only be a primary
   path.</t>

<t>The secondary-path, the primary-reverse-path and the secondary-
   reverse-path are presence container used to indicate the role of the
   path: by default, the path is assumed to be a primary path.</t>

<t>They optionally can contain the name of the primary-path under which
   the requested path could be associated within the YANG tree structure
   defined in <xref target="I-D.ietf-teas-yang-te"/>, which could be useful when the server also
   creates a TE tunnel instance within the operational datastore to
   report the computed paths, as described in <xref target="temp-state"/>: in this
   case, the tunnel-name and the path names are also used as the
   suggested name for that TE tunnel and path instances.</t>

</section>
<section anchor="tunnel-attributes-specified-by-reference"><name>Tunnel attributes specified by reference</name>

<t>The (reference) case provides the information needed to associate
   multiple path requests that are intended to be used within the same
   tunnel.</t>

<t>In order to indicate the role of the path being requested within the
   intended tunnel (e.g., primary or secondary path), the (path-role)
   choice is defined:</t>

<figure><artwork><![CDATA[
       |  |  |     +-- (path-role)
       |  |  |        +--:(primary-path)
       |  |  |        |  +-- primary-path!
       |  |  |        |     ...........
       |  |  |        +--:(secondary-path)
       |  |  |        |  +-- secondary-path
       |  |  |        |     ...........
       |  |  |        +--:(primary-reverse-path)
       |  |  |        |  +-- primary-reverse-path
       |  |  |        |     ...........
       |  |  |        +--:(secondary-reverse-path)
       |  |  |           +-- secondary-reverse-path
       |  |  |              ...........
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>The primary-path is a presence container used to indicate that the
   requested path is intended to be used as a primary path. It can also
   contain some attributes which are configured only on primary paths
   (e.g., the k-requested-paths).</t>

<t>The secondary-path container indicates that the requested path is
   intended to be used as a secondary path and it contains at least
   references to one or more primary paths which can use it as a
   candidate secondary path:</t>

<figure><artwork><![CDATA[
       |  |  |        |  +-- secondary-path
       |  |  |        |     ...........
       |  |  |        |     +-- primary-path-ref* []
       |  |  |        |        +-- (primary-path-exist)?
       |  |  |        |           +--:(path-ref)
       |  |  |        |           |  +-- primary-path-ref    leafref
       |  |  |        |           +--:(path-request-ref)
       |  |  |        |              +-- path-request-ref    leafref
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>A requested secondary path can reference any requested primary paths,
   and, in case they are intended to be used within an existing TE
   tunnel, it could also reference any existing primary-paths.</t>

<t>The secondary-path container can also contain some attributes which
   are configured only on secondary paths (e.g., the protection-type).</t>

<t>The primary-reverse-path container indicates that the requested path
   is intended to be used as a primary reverse path and it contains only
   the reference to the primary path which is intended to use it as a
   reverse path:</t>

<figure><artwork><![CDATA[
       |  |  |        |  +-- primary-reverse-path
       |  |  |        |     +-- (primary-path-exist)?
       |  |  |        |        +--:(path-ref)
       |  |  |        |        |  +-- primary-path-ref    leafref
       |  |  |        |        +--:(path-request-ref)
       |  |  |        |           +-- path-request-ref    leafref
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>A requested primary reverse path can reference either a requested
   primary path, or, in case it is intended to be used within an
   existing TE tunnel, an existing primary-path.</t>

<t>The secondary-reverse-path container indicates that the requested
   path is intended to be used as a secondary reverse path and it
   contains at least references to one or more primary paths, whose
   primary reverse path can use it as a candidate secondary reverse
   path:</t>

<figure><artwork><![CDATA[
       |  |  |           +-- secondary-reverse-path
       |  |  |              ...........
       |  |  |              +-- primary-reverse-path-ref* []
       |  |  |                 +-- (primary-reverse-path-exist)?
       |  |  |                    +--:(path-ref)
       |  |  |                    |  +-- primary-path-ref    leafref
       |  |  |                    +--:(path-request-ref)
       |  |  |                       +-- path-request-ref    leafref
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>A requested secondary reverse path can reference any requested
   primary paths, and, in case they are intended to be used within an
   existing TE tunnel, it could reference also existing primary-paths.</t>

<t>The secondary-reverse-path container can also contain some attributes
   which are configured only on secondary reverse paths (e.g., the
   protection-type).</t>

<t>In case the requested path is a transit segment of a multi-domain
   end-to-end path, the primary-path may not be needed to be
   setup/computed. However, the request for path computation of a
   secondary-path or a primary-reverse or of a secondary-reverse-path
   requires that the primary-path exists or it is requested within the
   same RPC request. In the latter case, the path request for the
   primary-path should have an empty ERO to indicate to the server that
   path computation is not requested and no path properties will
   therefore be returned in the RPC response.</t>

</section>
</section>
<section anchor="multi-layer-path-computation"><name>Multi-Layer Path Computation</name>

<t>The models supports requesting multi-layer path computation following
   the same approach based on dependency tunnels, as defined in <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>The tunnel-attributes of a given client-layer path request can
   reference server-layer TE tunnels which can already exist in the YANG
   datastore or be specified in the tunnel-attributes list, within the
   same RPC request:</t>

<figure><artwork><![CDATA[
       |     +-- dependency-tunnels
       |     |  +-- dependency-tunnel* [name]
       |     |  |  +-- name              -> /te:te/tunnels/tunnel/name
       |     |  |  +-- encoding?         identityref
       |     |  |  +-- switching-type?   identityref
       |     |  +-- dependency-tunnel-attributes* [name]
       |     |     +-- name              leafref
       |     |     +-- encoding?         identityref
       |     |     +-- switching-type?   identityref
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>In a similar way as in <xref target="I-D.ietf-teas-yang-te"/>, the server-layer tunnel
   attributes should provide the information of what would be the
   dynamic link in the client layer topology supported by that tunnel,
   if instantiated:</t>

<figure><artwork><![CDATA[
       |     +-- hierarchical-link
       |        +-- local-te-node-id?         te-types:te-node-id
       |        +-- local-te-link-tp-id?      te-types:te-tp-id
       |        +-- remote-te-node-id?        te-types:te-node-id
       |        +-- te-topology-identifier
       |           +-- provider-id?   te-global-id
       |           +-- client-id?     te-global-id
       |           +-- topology-id?   te-topology-id
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>It is worth noting that since path computation RPC is stateless, the
   dynamic hierarchical links configured for the server-layer tunnel
   attributes cannot be used for path computation of any client-layer
   path unless explicitly referenced in the dependency-tunnel-attributes
   list within the same RPC request.</t>

</section>
</section>
<section anchor="yang-data-model-for-te-path-computation"><name>YANG data model for TE path computation</name>

<section anchor="pc-tree"><name>Tree diagram</name>

<t><xref target="fig-pc-tree"/> below shows the tree diagram of the YANG data model defined
   in module ietf-te-path-computation.yang, defined in <xref target="pc-yang"/>.</t>

<figure title="TE path computation tree diagram" anchor="fig-pc-tree"><artwork type="ascii-art" name="ietf-te-path-computation.tree"><![CDATA[
module: ietf-te-path-computation

  augment /te:tunnels-path-compute/te:input/te:path-compute-info:
    +-- path-request* [request-id]
    |  +-- request-id                            uint32
    |  +-- (tunnel-attributes)?
    |  |  +--:(reference)
    |  |  |  +-- tunnel-reference
    |  |  |     +-- (tunnel-exist)?
    |  |  |     |  +--:(tunnel-ref)
    |  |  |     |  |  +-- tunnel-ref                te:tunnel-ref
    |  |  |     |  +--:(tunnel-attributes-ref)
    |  |  |     |     +-- tunnel-attributes-ref     leafref
    |  |  |     +-- path-name?                      string
    |  |  |     +-- (path-role)
    |  |  |        +--:(primary-path)
    |  |  |        |  +-- primary-path!
    |  |  |        |     +-- preference?          uint8
    |  |  |        |     +-- k-requested-paths?   uint8
    |  |  |        +--:(secondary-path)
    |  |  |        |  +-- secondary-path
    |  |  |        |     +-- preference?           uint8
    |  |  |        |     +-- protection-type?      identityref
    |  |  |        |     +-- restoration-type?     identityref
    |  |  |        |     +-- restoration-scheme?   identityref
    |  |  |        |     +-- primary-path-ref* []
    |  |  |        |        +-- (primary-path-exist)?
    |  |  |        |           +--:(path-ref)
    |  |  |        |           |  +-- primary-path-ref    leafref
    |  |  |        |           +--:(path-request-ref)
    |  |  |        |              +-- path-request-ref    leafref
    |  |  |        +--:(primary-reverse-path)
    |  |  |        |  +-- primary-reverse-path
    |  |  |        |     +-- (primary-path-exist)?
    |  |  |        |        +--:(path-ref)
    |  |  |        |        |  +-- primary-path-ref    leafref
    |  |  |        |        +--:(path-request-ref)
    |  |  |        |           +-- path-request-ref    leafref
    |  |  |        +--:(secondary-reverse-path)
    |  |  |           +-- secondary-reverse-path
    |  |  |              +-- preference?                 uint8
    |  |  |              +-- protection-type?            identityref
    |  |  |              +-- restoration-type?           identityref
    |  |  |              +-- restoration-scheme?         identityref
    |  |  |              +-- primary-reverse-path-ref* []
    |  |  |                 +-- (primary-reverse-path-exist)?
    |  |  |                    +--:(path-ref)
    |  |  |                    |  +-- primary-path-ref    leafref
    |  |  |                    +--:(path-request-ref)
    |  |  |                       +-- path-request-ref    leafref
    |  |  +--:(value)
    |  |     +-- tunnel-name?                    string
    |  |     +-- path-name?                      string
    |  |     +-- (path-role)?
    |  |     |  +--:(primary-path)
    |  |     |  +--:(secondary-path)
    |  |     |  |  +-- secondary-path!
    |  |     |  |     +-- primary-path-name?   string
    |  |     |  +--:(primary-reverse-path)
    |  |     |  |  +-- primary-reverse-path!
    |  |     |  |     +-- primary-path-name?   string
    |  |     |  +--:(secondary-reverse-path)
    |  |     |     +-- secondary-reverse-path!
    |  |     |        +-- primary-path-name?           string
    |  |     |        +-- primary-reverse-path-name?   string
    |  |     +-- k-requested-paths?              uint8
    |  |     +-- encoding?                       identityref
    |  |     +-- switching-type?                 identityref
    |  |     +-- source?                         te-types:te-node-id
    |  |     +-- destination?                    te-types:te-node-id
    |  |     +-- src-tunnel-tp-id?               binary
    |  |     +-- dst-tunnel-tp-id?               binary
    |  |     +-- bidirectional?                  boolean
    |  |     +-- te-topology-identifier
    |  |        +-- provider-id?   te-global-id
    |  |        +-- client-id?     te-global-id
    |  |        +-- topology-id?   te-topology-id
    |  +-- association-objects
    |  |  +-- association-object* [association-key]
    |  |  |  +-- association-key    string
    |  |  |  +-- type?              identityref
    |  |  |  +-- id?                uint16
    |  |  |  +-- source
    |  |  |     +-- id?     te-gen-node-id
    |  |  |     +-- type?   enumeration
    |  |  +-- association-object-extended* [association-key]
    |  |     +-- association-key    string
    |  |     +-- type?              identityref
    |  |     +-- id?                uint16
    |  |     +-- source
    |  |     |  +-- id?     te-gen-node-id
    |  |     |  +-- type?   enumeration
    |  |     +-- global-source?     uint32
    |  |     +-- extended-id?       yang:hex-string
    |  +-- optimizations
    |  |  +-- (algorithm)?
    |  |     +--:(metric) {path-optimization-metric}?
    |  |     |  +-- optimization-metric* [metric-type]
    |  |     |  |  +-- metric-type                       identityref
    |  |     |  |  +-- weight?                           uint8
    |  |     |  |  +-- explicit-route-exclude-objects
    |  |     |  |  |  +-- route-object-exclude-object* [index]
    |  |     |  |  |     +-- index                        uint32
    |  |     |  |  |     +-- (type)?
    |  |     |  |  |        +--:(numbered-node-hop)
    |  |     |  |  |        |  +-- numbered-node-hop
    |  |     |  |  |        |     +-- node-id     te-node-id
    |  |     |  |  |        |     +-- hop-type?   te-hop-type
    |  |     |  |  |        +--:(numbered-link-hop)
    |  |     |  |  |        |  +-- numbered-link-hop
    |  |     |  |  |        |     +-- link-tp-id    te-tp-id
    |  |     |  |  |        |     +-- hop-type?     te-hop-type
    |  |     |  |  |        |     +-- direction?    te-link-direction
    |  |     |  |  |        +--:(unnumbered-link-hop)
    |  |     |  |  |        |  +-- unnumbered-link-hop
    |  |     |  |  |        |     +-- link-tp-id    te-tp-id
    |  |     |  |  |        |     +-- node-id       te-node-id
    |  |     |  |  |        |     +-- hop-type?     te-hop-type
    |  |     |  |  |        |     +-- direction?    te-link-direction
    |  |     |  |  |        +--:(as-number)
    |  |     |  |  |        |  +-- as-number-hop
    |  |     |  |  |        |     +-- as-number    inet:as-number
    |  |     |  |  |        |     +-- hop-type?    te-hop-type
    |  |     |  |  |        +--:(label)
    |  |     |  |  |        |  +-- label-hop
    |  |     |  |  |        |     +-- te-label
    |  |     |  |  |        |        +-- (technology)?
    |  |     |  |  |        |        |  +--:(generic)
    |  |     |  |  |        |        |     +-- generic?
    |  |     |  |  |        |        |             rt-types:generalized-label
    |  |     |  |  |        |        +-- direction?
    |  |     |  |  |        |                te-label-direction
    |  |     |  |  |        +--:(srlg)
    |  |     |  |  |           +-- srlg
    |  |     |  |  |              +-- srlg?   uint32
    |  |     |  |  +-- explicit-route-include-objects
    |  |     |  |     +-- route-object-include-object* [index]
    |  |     |  |        +-- index                        uint32
    |  |     |  |        +-- (type)?
    |  |     |  |           +--:(numbered-node-hop)
    |  |     |  |           |  +-- numbered-node-hop
    |  |     |  |           |     +-- node-id     te-node-id
    |  |     |  |           |     +-- hop-type?   te-hop-type
    |  |     |  |           +--:(numbered-link-hop)
    |  |     |  |           |  +-- numbered-link-hop
    |  |     |  |           |     +-- link-tp-id    te-tp-id
    |  |     |  |           |     +-- hop-type?     te-hop-type
    |  |     |  |           |     +-- direction?    te-link-direction
    |  |     |  |           +--:(unnumbered-link-hop)
    |  |     |  |           |  +-- unnumbered-link-hop
    |  |     |  |           |     +-- link-tp-id    te-tp-id
    |  |     |  |           |     +-- node-id       te-node-id
    |  |     |  |           |     +-- hop-type?     te-hop-type
    |  |     |  |           |     +-- direction?    te-link-direction
    |  |     |  |           +--:(as-number)
    |  |     |  |           |  +-- as-number-hop
    |  |     |  |           |     +-- as-number    inet:as-number
    |  |     |  |           |     +-- hop-type?    te-hop-type
    |  |     |  |           +--:(label)
    |  |     |  |              +-- label-hop
    |  |     |  |                 +-- te-label
    |  |     |  |                    +-- (technology)?
    |  |     |  |                    |  +--:(generic)
    |  |     |  |                    |     +-- generic?
    |  |     |  |                    |             rt-types:generalized-label
    |  |     |  |                    +-- direction?
    |  |     |  |                            te-label-direction
    |  |     |  +-- tiebreakers
    |  |     |     +-- tiebreaker* [tiebreaker-type]
    |  |     |        +-- tiebreaker-type    identityref
    |  |     +--:(objective-function)
    |  |              {path-optimization-objective-function}?
    |  |        +-- objective-function
    |  |           +-- objective-function-type?   identityref
    |  +-- named-path-constraint?                leafref
    |  |       {te-types:named-path-constraints}?
    |  +-- te-bandwidth
    |  |  +-- (technology)?
    |  |     +--:(generic)
    |  |        +-- generic?   te-bandwidth
    |  +-- link-protection?                      identityref
    |  +-- setup-priority?                       uint8
    |  +-- hold-priority?                        uint8
    |  +-- signaling-type?                       identityref
    |  +-- path-metric-bounds
    |  |  +-- path-metric-bound* [metric-type]
    |  |     +-- metric-type    identityref
    |  |     +-- upper-bound?   uint64
    |  +-- path-affinities-values
    |  |  +-- path-affinities-value* [usage]
    |  |     +-- usage    identityref
    |  |     +-- value?   admin-groups
    |  +-- path-affinity-names
    |  |  +-- path-affinity-name* [usage]
    |  |     +-- usage            identityref
    |  |     +-- affinity-name* [name]
    |  |        +-- name    string
    |  +-- path-srlgs-lists
    |  |  +-- path-srlgs-list* [usage]
    |  |     +-- usage     identityref
    |  |     +-- values*   srlg
    |  +-- path-srlgs-names
    |  |  +-- path-srlgs-name* [usage]
    |  |     +-- usage    identityref
    |  |     +-- names*   string
    |  +-- disjointness?                         te-path-disjointness
    |  +-- explicit-route-objects-always
    |  |  +-- route-object-exclude-always* [index]
    |  |  |  +-- index                        uint32
    |  |  |  +-- (type)?
    |  |  |     +--:(numbered-node-hop)
    |  |  |     |  +-- numbered-node-hop
    |  |  |     |     +-- node-id     te-node-id
    |  |  |     |     +-- hop-type?   te-hop-type
    |  |  |     +--:(numbered-link-hop)
    |  |  |     |  +-- numbered-link-hop
    |  |  |     |     +-- link-tp-id    te-tp-id
    |  |  |     |     +-- hop-type?     te-hop-type
    |  |  |     |     +-- direction?    te-link-direction
    |  |  |     +--:(unnumbered-link-hop)
    |  |  |     |  +-- unnumbered-link-hop
    |  |  |     |     +-- link-tp-id    te-tp-id
    |  |  |     |     +-- node-id       te-node-id
    |  |  |     |     +-- hop-type?     te-hop-type
    |  |  |     |     +-- direction?    te-link-direction
    |  |  |     +--:(as-number)
    |  |  |     |  +-- as-number-hop
    |  |  |     |     +-- as-number    inet:as-number
    |  |  |     |     +-- hop-type?    te-hop-type
    |  |  |     +--:(label)
    |  |  |        +-- label-hop
    |  |  |           +-- te-label
    |  |  |              +-- (technology)?
    |  |  |              |  +--:(generic)
    |  |  |              |     +-- generic?
    |  |  |              |             rt-types:generalized-label
    |  |  |              +-- direction?       te-label-direction
    |  |  +-- route-object-include-exclude* [index]
    |  |     +-- explicit-route-usage?        identityref
    |  |     +-- index                        uint32
    |  |     +-- (type)?
    |  |        +--:(numbered-node-hop)
    |  |        |  +-- numbered-node-hop
    |  |        |     +-- node-id     te-node-id
    |  |        |     +-- hop-type?   te-hop-type
    |  |        +--:(numbered-link-hop)
    |  |        |  +-- numbered-link-hop
    |  |        |     +-- link-tp-id    te-tp-id
    |  |        |     +-- hop-type?     te-hop-type
    |  |        |     +-- direction?    te-link-direction
    |  |        +--:(unnumbered-link-hop)
    |  |        |  +-- unnumbered-link-hop
    |  |        |     +-- link-tp-id    te-tp-id
    |  |        |     +-- node-id       te-node-id
    |  |        |     +-- hop-type?     te-hop-type
    |  |        |     +-- direction?    te-link-direction
    |  |        +--:(as-number)
    |  |        |  +-- as-number-hop
    |  |        |     +-- as-number    inet:as-number
    |  |        |     +-- hop-type?    te-hop-type
    |  |        +--:(label)
    |  |        |  +-- label-hop
    |  |        |     +-- te-label
    |  |        |        +-- (technology)?
    |  |        |        |  +--:(generic)
    |  |        |        |     +-- generic?
    |  |        |        |             rt-types:generalized-label
    |  |        |        +-- direction?       te-label-direction
    |  |        +--:(srlg)
    |  |           +-- srlg
    |  |              +-- srlg?   uint32
    |  +-- path-in-segment!
    |  |  +-- label-restrictions
    |  |     +-- label-restriction* [index]
    |  |        +-- restriction?    enumeration
    |  |        +-- index           uint32
    |  |        +-- label-start
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-end
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-step
    |  |        |  +-- (technology)?
    |  |        |     +--:(generic)
    |  |        |        +-- generic?   int32
    |  |        +-- range-bitmap?   yang:hex-string
    |  +-- path-out-segment!
    |  |  +-- label-restrictions
    |  |     +-- label-restriction* [index]
    |  |        +-- restriction?    enumeration
    |  |        +-- index           uint32
    |  |        +-- label-start
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-end
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-step
    |  |        |  +-- (technology)?
    |  |        |     +--:(generic)
    |  |        |        +-- generic?   int32
    |  |        +-- range-bitmap?   yang:hex-string
    |  +-- requested-metrics* [metric-type]
    |  |  +-- metric-type    identityref
    |  +-- return-srlgs?                         boolean
    |  +-- return-affinities?                    boolean
    |  +-- requested-state!
    |     +-- timer?            uint16
    |     +-- transaction-id?   string
    +-- tunnel-attributes* [tunnel-name]
    |  +-- tunnel-name               string
    |  +-- encoding?                 identityref
    |  +-- switching-type?           identityref
    |  +-- source?                   te-types:te-node-id
    |  +-- destination?              te-types:te-node-id
    |  +-- src-tunnel-tp-id?         binary
    |  +-- dst-tunnel-tp-id?         binary
    |  +-- bidirectional?            boolean
    |  +-- association-objects
    |  |  +-- association-object* [association-key]
    |  |  |  +-- association-key    string
    |  |  |  +-- type?              identityref
    |  |  |  +-- id?                uint16
    |  |  |  +-- source
    |  |  |     +-- id?     te-gen-node-id
    |  |  |     +-- type?   enumeration
    |  |  +-- association-object-extended* [association-key]
    |  |     +-- association-key    string
    |  |     +-- type?              identityref
    |  |     +-- id?                uint16
    |  |     +-- source
    |  |     |  +-- id?     te-gen-node-id
    |  |     |  +-- type?   enumeration
    |  |     +-- global-source?     uint32
    |  |     +-- extended-id?       yang:hex-string
    |  +-- protection-type?          identityref
    |  +-- restoration-type?         identityref
    |  +-- restoration-scheme?       identityref
    |  +-- te-topology-identifier
    |  |  +-- provider-id?   te-global-id
    |  |  +-- client-id?     te-global-id
    |  |  +-- topology-id?   te-topology-id
    |  +-- te-bandwidth
    |  |  +-- (technology)?
    |  |     +--:(generic)
    |  |        +-- generic?   te-bandwidth
    |  +-- link-protection?          identityref
    |  +-- setup-priority?           uint8
    |  +-- hold-priority?            uint8
    |  +-- signaling-type?           identityref
    |  +-- hierarchy
    |     +-- dependency-tunnels
    |     |  +-- dependency-tunnel* [name]
    |     |  |  +-- name              -> /te:te/tunnels/tunnel/name
    |     |  |  +-- encoding?         identityref
    |     |  |  +-- switching-type?   identityref
    |     |  +-- dependency-tunnel-attributes* [name]
    |     |     +-- name              leafref
    |     |     +-- encoding?         identityref
    |     |     +-- switching-type?   identityref
    |     +-- hierarchical-link
    |        +-- local-te-node-id?         te-types:te-node-id
    |        +-- local-te-link-tp-id?      te-types:te-tp-id
    |        +-- remote-te-node-id?        te-types:te-node-id
    |        +-- te-topology-identifier
    |           +-- provider-id?   te-global-id
    |           +-- client-id?     te-global-id
    |           +-- topology-id?   te-topology-id
    +-- synchronization* []
       +-- svec
       |  +-- relaxable?           boolean
       |  +-- disjointness?        te-path-disjointness
       |  +-- request-id-number*   uint32
       +-- svec-constraints
       |  +-- path-metric-bound* [metric-type]
       |     +-- metric-type    identityref
       |     +-- upper-bound?   uint64
       +-- path-srlgs-lists
       |  +-- path-srlgs-list* [usage]
       |     +-- usage     identityref
       |     +-- values*   srlg
       +-- path-srlgs-names
       |  +-- path-srlgs-name* [usage]
       |     +-- usage    identityref
       |     +-- names*   string
       +-- exclude-objects
       |  +-- excludes* []
       |     +-- (type)?
       |        +--:(numbered-node-hop)
       |        |  +-- numbered-node-hop
       |        |     +-- node-id     te-node-id
       |        |     +-- hop-type?   te-hop-type
       |        +--:(numbered-link-hop)
       |        |  +-- numbered-link-hop
       |        |     +-- link-tp-id    te-tp-id
       |        |     +-- hop-type?     te-hop-type
       |        |     +-- direction?    te-link-direction
       |        +--:(unnumbered-link-hop)
       |        |  +-- unnumbered-link-hop
       |        |     +-- link-tp-id    te-tp-id
       |        |     +-- node-id       te-node-id
       |        |     +-- hop-type?     te-hop-type
       |        |     +-- direction?    te-link-direction
       |        +--:(as-number)
       |        |  +-- as-number-hop
       |        |     +-- as-number    inet:as-number
       |        |     +-- hop-type?    te-hop-type
       |        +--:(label)
       |           +-- label-hop
       |              +-- te-label
       |                 +-- (technology)?
       |                 |  +--:(generic)
       |                 |     +-- generic?
       |                 |             rt-types:generalized-label
       |                 +-- direction?       te-label-direction
       +-- optimizations
          +-- (algorithm)?
             +--:(metric) {te-types:path-optimization-metric}?
             |  +-- optimization-metric* [metric-type]
             |     +-- metric-type    identityref
             |     +-- weight?        uint8
             +--:(objective-function)
                      {te-types:path-optimization-objective-function}?
                +-- objective-function
                   +-- objective-function-type?   identityref
  augment /te:tunnels-path-compute/te:output/te:path-compute-result:
    +--ro response* [response-id]
       +--ro response-id                         uint32
       +--ro computed-paths-properties
       |  +--ro computed-path-properties* [k-index]
       |     +--ro k-index            uint8
       |     +--ro path-properties
       |        +--ro path-metric* [metric-type]
       |        |  +--ro metric-type           identityref
       |        |  +--ro accumulative-value?   uint64
       |        +--ro path-affinities-values
       |        |  +--ro path-affinities-value* [usage]
       |        |     +--ro usage    identityref
       |        |     +--ro value?   admin-groups
       |        +--ro path-affinity-names
       |        |  +--ro path-affinity-name* [usage]
       |        |     +--ro usage            identityref
       |        |     +--ro affinity-name* [name]
       |        |        +--ro name    string
       |        +--ro path-srlgs-lists
       |        |  +--ro path-srlgs-list* [usage]
       |        |     +--ro usage     identityref
       |        |     +--ro values*   srlg
       |        +--ro path-srlgs-names
       |        |  +--ro path-srlgs-name* [usage]
       |        |     +--ro usage    identityref
       |        |     +--ro names*   string
       |        +--ro path-route-objects
       |        |  +--ro path-route-object* [index]
       |        |     +--ro index                        uint32
       |        |     +--ro (type)?
       |        |        +--:(numbered-node-hop)
       |        |        |  +--ro numbered-node-hop
       |        |        |     +--ro node-id     te-node-id
       |        |        |     +--ro hop-type?   te-hop-type
       |        |        +--:(numbered-link-hop)
       |        |        |  +--ro numbered-link-hop
       |        |        |     +--ro link-tp-id    te-tp-id
       |        |        |     +--ro hop-type?     te-hop-type
       |        |        |     +--ro direction?    te-link-direction
       |        |        +--:(unnumbered-link-hop)
       |        |        |  +--ro unnumbered-link-hop
       |        |        |     +--ro link-tp-id    te-tp-id
       |        |        |     +--ro node-id       te-node-id
       |        |        |     +--ro hop-type?     te-hop-type
       |        |        |     +--ro direction?    te-link-direction
       |        |        +--:(as-number)
       |        |        |  +--ro as-number-hop
       |        |        |     +--ro as-number    inet:as-number
       |        |        |     +--ro hop-type?    te-hop-type
       |        |        +--:(label)
       |        |           +--ro label-hop
       |        |              +--ro te-label
       |        |                 +--ro (technology)?
       |        |                 |  +--:(generic)
       |        |                 |     +--ro generic?
       |        |                 |             rt-types:generalized-label
       |        |                 +--ro direction?
       |        |                         te-label-direction
       |        +--ro te-bandwidth
       |        |  +--ro (technology)?
       |        |     +--:(generic)
       |        |        +--ro generic?   te-bandwidth
       |        +--ro disjointness-type?
       |                te-types:te-path-disjointness
       +--ro computed-path-error-infos
       |  +--ro computed-path-error-info* []
       |     +--ro error-description?   string
       |     +--ro error-timestamp?     yang:date-and-time
       |     +--ro error-reason?        identityref
       +--ro tunnel-ref?                         te:tunnel-ref
       +--ro (path-role)?
          +--:(primary)
          |  +--ro primary-path-ref?             leafref
          +--:(primary-reverse)
          |  +--ro primary-reverse-path-ref?     leafref
          +--:(secondary)
          |  +--ro secondary-path-ref?           leafref
          +--:(secondary-reverse)
             +--ro secondary-reverse-path-ref?   leafref
  augment /te:tunnels-actions/te:input/te:tunnel-info/te:filter-type:
    +--:(path-compute-transactions)
       +-- path-compute-transaction-id*   string
  augment /te:tunnels-actions/te:output:
    +--ro path-computed-delete-result
       +--ro path-compute-transaction-id*   string
]]></artwork></figure>

</section>
<section anchor="pc-yang"><name>YANG module</name>

<figure title="TE path computation YANG module" anchor="fig-pc-yang"><sourcecode type="yang" markers="true" name="ietf-te-path-computation@2022-01-24.yang"><![CDATA[
module ietf-te-path-computation {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-te-path-computation";
  prefix te-pc;

  import ietf-te {
    prefix te;
    reference
      "RFCYYYY: A YANG Data Model for Traffic Engineering Tunnels
       and Interfaces";
  }

  /* Note: The RFC Editor will replace YYYY with the number assigned
     to the RFC once draft-ietf-teas-yang-te becomes an RFC.*/

  import ietf-te-types {
    prefix te-types;
    reference
      "RFC8776: Common YANG Data Types for Traffic Engineering.";
  }

  organization
    "Traffic Engineering Architecture and Signaling (TEAS)
     Working Group";
  contact
    "WG Web:   <http://tools.ietf.org/wg/teas/>
     WG List:  <mailto:teas@ietf.org>

     Editor:   Italo Busi
               <mailto:italo.busi@huawei.com>

     Editor:   Sergio Belotti
               <mailto:sergio.belotti@nokia.com>

     Editor:   Victor Lopez
               <mailto:victor.lopez@nokia.com>

     Editor:   Oscar Gonzalez de Dios
               <mailto:oscar.gonzalezdedios@telefonica.com>

     Editor:   Anurag Sharma
               <mailto:ansha@google.com>

     Editor:   Yan Shi
               <mailto:shiyan49@chinaunicom.cn>

     Editor:   Ricard Vilalta
               <mailto:ricard.vilalta@cttc.es>

     Editor:   Karthik Sethuraman
               <mailto:karthik.sethuraman@necam.com>

     Editor:   Michael Scharf
               <mailto:michael.scharf@gmail.com>

     Editor:   Daniele Ceccarelli
               <mailto:daniele.ceccarelli@ericsson.com>
     
    ";
  description
    "This module defines a YANG data model for requesting Traffic
     Engineering (TE) path computation. The YANG model defined in
     this document is based on RPCs augmenting the RPCs defined in
     the generic TE module (ietf-te).
     The model fully conforms to the
     Network Management Datastore Architecture (NMDA).

     Copyright (c) 2022 IETF Trust and the persons
     identified as authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject
     to the license terms contained in, the Simplified BSD License
     set forth in Section 4.c of the IETF Trust's Legal Provisions

     Relating to IETF Documents
     (http://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC XXXX; see
     the RFC itself for full legal notices.";

  // RFC Ed.: replace XXXX with actual RFC number and remove
  // this note
  // replace the revision date with the module publication date
  // the format is (year-month-day)

  revision 2022-01-24 {
    description
      "Initial revision";
    reference
      "RFC XXXX: A YANG Data Model for requesting path computation";
  }

  // RFC Ed.: replace XXXX with actual RFC number and remove
  // this note

  /*
   * Identities
   */

  identity svec-metric-type {
    description
      "Base identity for SVEC metric type.";
    reference
      "RFC5541: Encoding of Objective Functions in the Path
       Computation Element Communication Protocol (PCEP).";
  }

  identity svec-metric-cumul-te {
    base svec-metric-type;
    description
      "Cumulative TE cost.";
    reference
      "RFC5541: Encoding of Objective Functions in the Path
       Computation Element Communication Protocol (PCEP).";
  }

  identity svec-metric-cumul-igp {
    base svec-metric-type;
    description
      "Cumulative IGP cost.";
    reference
      "RFC5541: Encoding of Objective Functions in the Path
       Computation Element Communication Protocol (PCEP).";
  }

  identity svec-metric-cumul-hop {
    base svec-metric-type;
    description
      "Cumulative Hop path metric.";
    reference
      "RFC8776: Common YANG Data Types for Traffic Engineering.";
  }

  identity svec-metric-aggregate-bandwidth-consumption {
    base svec-metric-type;
    description
      "Aggregate bandwidth consumption.";
    reference
      "RFC5541: Encoding of Objective Functions in the Path
       Computation Element Communication Protocol (PCEP).";
  }

  identity svec-metric-load-of-the-most-loaded-link {
    base svec-metric-type;
    description
      "Load of the most loaded link.";
    reference
      "RFC5541: Encoding of Objective Functions in the Path
       Computation Element Communication Protocol (PCEP).";
  }

  identity tunnel-action-path-compute-delete {
    base te:tunnel-actions-type;
    description
      "Action type to delete the transient states
       of computed paths, as described in section 3.3.1 of
       RFC XXXX.";
    reference
      "RFC XXXX: A YANG Data Model for requesting path computation";
  }

  /*
   * Groupings
   */

  grouping protection-restoration-properties {
    description
      "This grouping defines the restoration and protection types
       for a path in the path computation request.";
    leaf protection-type {
      type identityref {
        base te-types:lsp-protection-type;
      }
      default "te-types:lsp-protection-unprotected";
      description
        "LSP protection type.";
    }
    leaf restoration-type {
      type identityref {
        base te-types:lsp-restoration-type;
      }
      default "te-types:lsp-restoration-restore-any";
      description
        "LSP restoration type.";
    }
    leaf restoration-scheme {
      type identityref {
        base te-types:restoration-scheme-type;
      }
      default "te-types:restoration-scheme-preconfigured";
      description
        "LSP restoration scheme.";
    }
  } // grouping protection-restoration-properties

  grouping requested-info {
    description
      "This grouping defines the information (e.g., metrics)
       which is requested, in the path computation request, to be
       returned in the path computation response.";
    list requested-metrics {
      key "metric-type";
      description
        "The list of the requested metrics.
         The metrics listed here must be returned in the response.
         Returning other metrics in the response is optional.";
      leaf metric-type {
        type identityref {
          base te-types:path-metric-type;
        }
        description
          "The metric that must be returned in the response";
      }
    }
    leaf return-srlgs {
      type boolean;
      default "false";
      description
        "If true, path srlgs must be returned in the response.
         If false, returning path srlgs in the response optional.";
    }
    leaf return-affinities {
      type boolean;
      default "false";
      description
        "If true, path affinities must be returned in the response.
         If false, returning path affinities in the response is
         optional.";
    }
  } // grouping requested-info

  grouping requested-state {
    description
      "Configuration for the transient state used
       to report the computed path";
    container requested-state {
      presence
        "Request temporary reporting of the computed path state";
      description
        "Configures attributes for the temporary reporting of the
         computed path state (e.g., expiration timer).";
      leaf timer {
        type uint16;
        units "minutes";
        default "10";
        description
          "The timeout after which the transient state reporting
          the computed path should be removed.";
      }
      leaf transaction-id {
        type string;
        description
          "The transaction-id associated with this path computation
          to be used for fast deletion of the transient states
          associated with multiple path computations.

          This transaction-id can be used to explicitly delete all
          the transient states of all the computed paths associated
          with the same transaction-id.

          When one path associated with a transaction-id is setup,
          the transient states of all the other computed paths
          with the same transaction-id are automatically removed.

          If not specified, the transient state is removed only
          when the timer expires (when the timer is specified)
          or not created at all (stateless path computation,
          when the timer is not specified).";
      }
    }
  } // grouping requested-state

  grouping reported-state {
    description
      "This grouping defines the information, returned in the path
       computation response, reporting the transient state related
       to the computed path";
    leaf tunnel-ref {
      type te:tunnel-ref;
      description
        "
         Reference to the tunnel that reports the transient state
         of the computed path.

         If no transient state is created, this attribute is
         omitted.
        ";
    }
    choice path-role {
      description
        "The transient state of the computed path can be reported
         as a primary, primary-reverse, secondary or
         a secondary-reverse path of a te-tunnel";
      case primary {
        leaf primary-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:primary-paths/te:primary-path/"
               + "te:name";
          }
          must '../tunnel-ref' {
            description
              "The primary-path name can only be reported
               if also the tunnel name is reported.";
          }
          description
            "
             Reference to the primary-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case primary
      case primary-reverse {
        leaf primary-reverse-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:primary-paths/te:primary-path/"
               + "te:name";
          }
          must '../tunnel-ref' {
            description
              "The primary-reverse-path name can only be reported
               if also the tunnel name is reported.";
          }
          description
            "
             Reference to the primary-reverse-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case primary-reverse
      case secondary {
        leaf secondary-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:secondary-paths/te:secondary-path/"
               + "te:name";
          }
          must '../tunnel-ref' {
            description
              "The secondary-path name can only be reported
               if also the tunnel name is reported.";
          }
          description
            "
             Reference to the secondary-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case secondary
      case secondary-reverse {
        leaf secondary-reverse-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:secondary-reverse-paths/"
               + "te:secondary-reverse-path/te:name";
          }
          must '../tunnel-ref' {
            description
              "The secondary-reverse-path name can only be reported
               if also the tunnel name is reported.";
          }
          description
            "
             Reference to the secondary-reverse-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case secondary
    } // choice path
  } // grouping reported-state

  grouping synchronization-constraints {
    description
      "Global constraints applicable to synchronized path
       computation requests.";
    container svec-constraints {
      description
        "global svec constraints";
      list path-metric-bound {
        key "metric-type";
        description
          "list of bound metrics";
        leaf metric-type {
          type identityref {
            base svec-metric-type;
          }
          description
            "SVEC metric type.";
          reference
            "RFC5541: Encoding of Objective Functions in the Path
            Computation Element Communication Protocol (PCEP).";
        }
        leaf upper-bound {
          type uint64;
          description
            "Upper bound on SVEC metric";
        }
      }
    }
    uses te-types:generic-path-srlgs;
    container exclude-objects {
      description
        "Resources to be excluded";
      list excludes {
        description
          "List of Explicit Route Objects to always exclude
           from synchronized path computation";
        uses te-types:explicit-route-hop;
      }
    }
  } // grouping synchronization-constraints

  grouping synchronization-optimization {
    description
      "Optimizations applicable to synchronized path
       computation requests.";
    container optimizations {
      description
        "The objective function container that includes attributes
         to impose when computing a synchronized set of paths";
      choice algorithm {
        description
          "Optimizations algorithm.";
        case metric {
          if-feature "te-types:path-optimization-metric";
          list optimization-metric {
            key "metric-type";
            description
              "svec path metric type";
            leaf metric-type {
              type identityref {
                base svec-metric-type;
              }
              description
                "TE path metric type usable for computing a set of
                synchronized requests";
            }
            leaf weight {
              type uint8;
              description
                "Metric normalization weight";
            }
          }
        }
        case objective-function {
          if-feature
            "te-types:path-optimization-objective-function";
          container objective-function {
            description
              "The objective function container that includes
               attributes to impose when computing a TE path";
            leaf objective-function-type {
              type identityref {
                base te-types:objective-function-type;
              }
              default "te-types:of-minimize-cost-path";
              description
                "Objective function entry";
            }
          }
        }
      }
    }
  } // grouping synchronization-optimization

  grouping synchronization-info {
    description
      "Information for synchronized path computation requests.";
    list synchronization {
      description
        "List of Synchronization VECtors.";
      container svec {
        description
          "Synchronization VECtor";
        leaf relaxable {
          type boolean;
          default "true";
          description
            "If this leaf is true, path computation process is
             free to ignore svec content.
             Otherwise, it must take into account this svec.";
        }
        uses te-types:generic-path-disjointness;
        leaf-list request-id-number {
          type uint32;
          description
            "This list reports the set of path computation
             requests that must be synchronized.";
        }
      }
      uses synchronization-constraints;
      uses synchronization-optimization;
    }
  } // grouping synchronization-info

  /*
   * Augment TE RPCs
   */

  augment "/te:tunnels-path-compute/te:input/te:path-compute-info" {
    description
      "Path Computation RPC input";
    list path-request {
      key "request-id";
      description
        "The list of the requested paths to be computed";
      leaf request-id {
        type uint32;
        mandatory true;
        description
          "Each path computation request is uniquely identified
           within the RPC request by the request-id-number.";
      }
      choice tunnel-attributes {
        default "value";
        description
          "Whether the tunnel attributes are specified by value
           within this path computation request or by reference.
           The reference could be either to an existing te-tunnel
           or to an entry in the tunnel-attributes list";
        case reference {
          container tunnel-reference {
            description
              "Attributes for a requested path that belongs to
              either an exiting te-tunnel or to an entry in the
              tunnel-attributes list.";
            choice tunnel-exist {
              description
                "Whether the tunnel reference is to an existing
                te-tunnel or to an entry in the tunnel-attributes
                list";
              case tunnel-ref {
                leaf tunnel-ref {
                  type te:tunnel-ref;
                  mandatory true;
                  description
                    "The referenced te-tunnel instance";
                }
              } // case tunnel-ref
              case tunnel-attributes-ref {
                leaf tunnel-attributes-ref {
                  type leafref {
                    path "/te:tunnels-path-compute/"
                      + "te:path-compute-info/"
                      + "te-pc:tunnel-attributes/te-pc:tunnel-name";
                  }
                  mandatory true;
                  description
                    "The referenced te-tunnel instance";
                }
              } // case tunnel-attributes-ref 
            } // choice tunnel-exist
            leaf path-name {
              type string;
              description
                "TE path name.";
            }
            choice path-role {
              mandatory true;
              description
                "Whether this path is a primary, or a reverse
                primary, or a secondary, or a reverse secondary
                path.";
              case primary-path {
                container primary-path {
                  presence "Indicates that the requested path
                            is a primary path";
                  description
                    "TE primary path";
                  uses te:path-preference;
                  uses te:k-requested-paths;
                } // container primary-path
              } // case primary-path
              case secondary-path {
                container secondary-path {
                  description
                    "TE secondary path";
                  uses te:path-preference;
                  uses protection-restoration-properties;
                  list primary-path-ref {
                    min-elements 1;
                    description
                      "The list of primary paths that reference
                      this path as a candidate secondary path";
                    choice primary-path-exist {
                      description
                        "Whether the path reference is to an existing
                        te-tunnel path or to another path request";
                      case path-ref {
                        leaf primary-path-ref {
                          type leafref {
                            path "/te:te/te:tunnels/te:tunnel"
                              + "[te:name=current()/../../../"
                              + "tunnel-ref]/te:primary-paths/"
                              + "te:primary-path/te:name";
                          }
                          must '../../../tunnel-ref' {
                            description
                              "The primary-path can be referenced
                              if also the tunnel is referenced.";
                          }
                          mandatory true;
                          description
                            "The referenced primary path";
                        }
                      } // case path-ref
                      case path-request-ref {
                        leaf path-request-ref {
                          type leafref {
                            path "/te:tunnels-path-compute/"
                              + "te:path-compute-info/"
                              + "te-pc:path-request/"
                              + "te-pc:request-id";
                          }
                          mandatory true;
                          description
                            "The referenced primary path request";
                        }
                      } // case path-request-ref 
                    } // choice primary-path-exist
                  } // list primary-path-ref
                } // container secondary-path
              } // case secondary-path
              case primary-reverse-path {
                container primary-reverse-path {
                  description
                    "TE primary reverse path";
                  choice primary-path-exist {
                    description
                      "Whether the path reference to the primary
                      paths for which this path is the reverse-path
                      is to an existing te-tunnel path or to
                      another path request.";
                    case path-ref {
                      leaf primary-path-ref {
                        type leafref {
                          path "/te:te/te:tunnels/te:tunnel[te:name"
                            + "=current()/../../tunnel-ref]/"
                            + "te:primary-paths/te:primary-path/"
                            + "te:name";
                        }
                        must '../../tunnel-ref' {
                          description
                            "The primary-path can be referenced
                            if also the tunnel is referenced.";
                        }
                        mandatory true;
                        description
                          "The referenced primary path";
                      }
                    } // case path-ref
                    case path-request-ref {
                      leaf path-request-ref {
                        type leafref {
                          path "/te:tunnels-path-compute/"
                            + "te:path-compute-info/"
                            + "te-pc:path-request/"
                            + "te-pc:request-id";
                        }
                        mandatory true;
                        description
                          "The referenced primary path request";
                      }
                    } // case path-request-ref 
                  } // choice primary-path-exist
                } // container primary-reverse-path
              } // case primary-reverse-path
              case secondary-reverse-path {
                container secondary-reverse-path {
                  description
                    "TE secondary reverse path";
                  uses te:path-preference;
                  uses protection-restoration-properties;
                  list primary-reverse-path-ref {
                    min-elements 1;
                    description
                      "The list of primary reverse paths that
                      reference this path as a candidate
                      secondary reverse path";
                    choice primary-reverse-path-exist {
                      description
                        "Whether the path reference is to an existing
                        te-tunnel path or to another path request";
                      case path-ref {
                        leaf primary-path-ref {
                          type leafref {
                            path "/te:te/te:tunnels/te:tunnel"
                              + "[te:name=current()/../../../"
                              + "tunnel-ref]/te:primary-paths/"
                              + "te:primary-path/te:name";
                          }
                          must '../../../tunnel-ref' {
                            description
                              "The primary-path can be referenced
                              if also the tunnel is referenced.";
                          }
                          mandatory true;
                          description
                            "The referenced primary path";
                        }
                      } // case path-ref
                      case path-request-ref {
                        leaf path-request-ref {
                          type leafref {
                            path "/te:tunnels-path-compute/"
                              + "te:path-compute-info/"
                              + "te-pc:path-request/"
                              + "te-pc:request-id";
                          }
                          mandatory true;
                          description
                            "The referenced primary reverse path
                            request";
                        }
                      } // case path-request-ref 
                    } // choice primary-reverse-path-exist
                  } // list primary-reverse-path-ref
                } // container secondary-reverse-path
              } // case secondary-reverse-path
            } // choice tunnel-path-role
          }
        } // case reference
        case value {
          leaf tunnel-name {
            type string;
            description
              "TE tunnel name.";
          }
          leaf path-name {
            type string;
            description
              "TE path name.";
          }
          choice path-role {
            when 'not (./source) and not (./destination) and
                  not (./src-tunnel-tp-id) and
                  not (./dst-tunnel-tp-id)' {
              description
                "When the tunnel attributes are specified by value
                within this path computation, it is assumed that the
                requested path will be the only path of a tunnel.

                If the requested path is a transit segment path, it
                could be of any type. Otherwise it could only be a
                primary path.";
            }
            default primary-path;
            description
              "Indicates whether the requested path is a primary
              path, a secondary path, a reverse primary path or a
              reverse secondary path.";
            case primary-path {
              description
                "The requested path is a primary path.";
            }
            container secondary-path {
              presence
                "Indicates that the requested path is a secondary
                path.";
              description
                "The name of the primary path which the requested
                primary reverse path belongs to.";
              leaf primary-path-name {
                type string;
                description
                  "TE primary path name.";
              }
            } // container secondary-path
            container primary-reverse-path {
              presence
                "Indicates that the requested path is a primary
                reverse path.";
              description
                "The name of the primary path which the requested
                primary reverse path belongs to.";
              leaf primary-path-name {
                type string;
                description
                  "TE primary path name.";
              }
            } // container primary-reverse-path
            container secondary-reverse-path {
              presence
                "Indicates that the requested path is a secondary
                reverse path.";
              description
                "The names of the primary path and of the primary
                reverse path which the requested secondary reverse
                path belongs to.";
              leaf primary-path-name {
                type string;
                description
                  "TE primary path name.";
              }
              leaf primary-reverse-path-name {
                type string;
                description
                  "TE primary reverse path name.";
              }
            } // container primary-reverse-path
          } // choice path-role
          uses te:k-requested-paths;
          uses te:encoding-and-switching-type;
          uses te:tunnel-common-attributes;
          uses te-types:te-topology-identifier;
        } // case value
      } // choice tunnel-attributes
      uses te:path-compute-info;
      uses requested-info;
      uses requested-state;
    }
    list tunnel-attributes {
      key "tunnel-name";
      description
        "Tunnel attributes common to multiple request paths";
      leaf tunnel-name {
        type string;
        description
          "TE tunnel name.";
      }
      uses te:encoding-and-switching-type;
      uses te:tunnel-common-attributes;
      uses te:tunnel-associations-properties;
      uses protection-restoration-properties;
      uses te-types:tunnel-constraints;
      uses te:tunnel-hierarchy-properties {
        augment "hierarchy/dependency-tunnels" {
          description
            "Augment with the list of dependency tunnel requests.";
          list dependency-tunnel-attributes {
            key "name";
            description
              "A tunnel request entry that this tunnel request can
               potentially depend on.";
            leaf name {
              type leafref {
                path "/te:tunnels-path-compute/"
                   + "te:path-compute-info/te-pc:tunnel-attributes/"
                   + "te-pc:tunnel-name";
              }
              description
                "Dependency tunnel request name.";
            }
            uses te:encoding-and-switching-type;
          }
        }
      }
    }
    uses synchronization-info;
  } // path-compute rpc input

  augment "/te:tunnels-path-compute/te:output/"
        + "te:path-compute-result" {
    description
      "Path Computation RPC output";
    list response {
      key "response-id";
      config false;
      description
        "response";
      leaf response-id {
        type uint32;
        description
          "The response-id has the same value of the
           corresponding request-id.";
      }
      uses te:path-computation-response;
      uses reported-state;
    }
  } // path-compute rpc output

  augment "/te:tunnels-actions/te:input/te:tunnel-info/"
        + "te:filter-type" {
    description
      "Augment Tunnels Action RPC input filter types";
    case path-compute-transactions {
      when "derived-from-or-self(../te:action-info/te:action, "
         + "'tunnel-action-path-compute-delete')";
      description
        "Path Delete Action RPC";
      leaf-list path-compute-transaction-id {
        type string;
        description
          "The list of the transaction-id values of the
           transient states to be deleted";
      }
    }
  } // path-delete rpc input

  augment "/te:tunnels-actions/te:output" {
    description
      "Augment Tunnels Action RPC output with path delete result";
    container path-computed-delete-result {
      description
        "Path Delete RPC output";
      leaf-list path-compute-transaction-id {
        type string;
        description
          "The list of the transaction-id values of the
           transient states that have been successfully deleted";
      }
    }
  } // path-delete rpc output
}
]]></sourcecode></figure>

</section>
</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>This document describes use cases of requesting Path Computation
   using YANG data models, which could be used at the ABNO Control
   Interface <xref target="RFC7491"/> and/or between controllers in ACTN <xref target="RFC8453"/>. As
   such, it does not introduce any new security considerations compared
   to the ones related to YANG specification, ABNO specification and
   ACTN Framework defined in <xref target="RFC7950"/>, <xref target="RFC7491"/> and <xref target="RFC8453"/>.</t>

<t>The YANG module defined in this document is designed to be accessed via
   the NETCONF protocol <xref target="RFC6241"/> or RESTCONF protocol <xref target="RFC8040"/>. The
   lowest NETCONF layer is the secure transport layer, and the
   mandatory-to-implement secure transport is Secure Shell (SSH)
   <xref target="RFC6242"/>. The lowest RESTCONF layer is HTTPS, and the mandatory-to-
   implement secure transport is TLS <xref target="RFC8446"/>.</t>

<t>The Network Configuration Access Control Model (NACM) 
   <xref target="RFC8341"/> provides the means to
   restrict access for particular NETCONF or RESTCONF users to a
   preconfigured subset of all available NETCONF or RESTCONF protocol
   operations and content.</t>

<t>The YANG module defined in this document augments the "tunnels-path-compute" and the "tunnel-actions" RPCs defined in <xref target="I-D.ietf-teas-yang-te"/>. The security considerations provided in <xref target="I-D.ietf-teas-yang-te"/> are also applicable to the YANG module
   defined in this document.</t>

<t>Some of the RPC operations defined in this YANG module may be considered
   sensitive or vulnerable in some network environments.  It is thus
   important to control access to these operations. These are the
   operations and their sensitivity/vulnerability:</t>

<t>"te-pc:response/computed-paths-properties": provides the same information provided by the "te:computed-paths-properties" defined in <xref target="I-D.ietf-teas-yang-te"/>. The security considerations provided in <xref target="I-D.ietf-teas-yang-te"/> for the TE tunnel state apply also to this subtree.</t>

<t>"te-pc:response/te-pc:tunnel-ref", "te-pc:response/te-pc:primary-path-ref", "te-pc:response/te-pc:primary-reverse-path-ref", "te-pc:response/te-pc:secondary-path-ref" and "te-pc:response/te-pc:secondary-reverse-path-ref" provides a reference where the same information provided in "te-pc:response/computed-paths-properties" is temporarly stored with the operational datastore (see <xref target="temp-state"/>). Therefore access to this information does not provide any additional security issue that the information provided with "te-pc:response/computed-paths-properties".</t>

<t>"/te:tunnels-actions": the YANG model defined in this document augments this action with a new action type that allows deleting the transient states of computed paths (see <xref target="temp-state"/>). A malicious use of this action would have no impact on the paths carrying live traffic but it would preclude the client from using the "transient states" to request the set-up of exactly that path, if still available.</t>

<t>The security considerations spelled out in the
   YANG specification <xref target="RFC7950"/> apply for this document as well.</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>This document registers the following URIs in the "ns" subregistry
   within the "IETF XML registry" <xref target="RFC3688"/>.</t>

<figure><artwork><![CDATA[
      URI: urn:ietf:params:xml:ns:yang:ietf-te-path-computation
      Registrant Contact:  The IESG.
      XML: N/A, the requested URI is an XML namespace.
]]></artwork></figure>

<t>This document registers a YANG module in the "YANG Module Names"
   registry <xref target="RFC7950"/>.</t>

<figure><artwork><![CDATA[
      name:      ietf-te-path-computation
      namespace: urn:ietf:params:xml:ns:yang:ietf-te-path-computation
      prefix:    te-pc
      reference: this document
]]></artwork></figure>

</section>


  </middle>

  <back>


    <references title='Normative References'>





<reference anchor='RFC6241' target='https://www.rfc-editor.org/info/rfc6241'>
<front>
<title>Network Configuration Protocol (NETCONF)</title>
<author fullname='R. Enns' initials='R.' role='editor' surname='Enns'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'><organization/></author>
<author fullname='A. Bierman' initials='A.' role='editor' surname='Bierman'><organization/></author>
<date month='June' year='2011'/>
<abstract><t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices.  It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages.  The NETCONF protocol operations are realized as remote procedure calls (RPCs).  This document obsoletes RFC 4741.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6241'/>
<seriesInfo name='DOI' value='10.17487/RFC6241'/>
</reference>



<reference anchor='RFC8040' target='https://www.rfc-editor.org/info/rfc8040'>
<front>
<title>RESTCONF Protocol</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<date month='January' year='2017'/>
<abstract><t>This document describes an HTTP-based protocol that provides a programmatic interface for accessing data defined in YANG, using the datastore concepts defined in the Network Configuration Protocol (NETCONF).</t></abstract>
</front>
<seriesInfo name='RFC' value='8040'/>
<seriesInfo name='DOI' value='10.17487/RFC8040'/>
</reference>



<reference anchor='RFC8795' target='https://www.rfc-editor.org/info/rfc8795'>
<front>
<title>YANG Data Model for Traffic Engineering (TE) Topologies</title>
<author fullname='X. Liu' initials='X.' surname='Liu'><organization/></author>
<author fullname='I. Bryskin' initials='I.' surname='Bryskin'><organization/></author>
<author fullname='V. Beeram' initials='V.' surname='Beeram'><organization/></author>
<author fullname='T. Saad' initials='T.' surname='Saad'><organization/></author>
<author fullname='H. Shah' initials='H.' surname='Shah'><organization/></author>
<author fullname='O. Gonzalez de Dios' initials='O.' surname='Gonzalez de Dios'><organization/></author>
<date month='August' year='2020'/>
<abstract><t>This document defines a YANG data model for representing, retrieving, and manipulating Traffic Engineering (TE) Topologies. The model serves as a base model that other technology-specific TE topology models can augment.</t></abstract>
</front>
<seriesInfo name='RFC' value='8795'/>
<seriesInfo name='DOI' value='10.17487/RFC8795'/>
</reference>


<reference anchor='I-D.ietf-teas-yang-te'>
   <front>
      <title>A YANG Data Model for Traffic Engineering Tunnels, Label Switched Paths and Interfaces</title>
      <author fullname='Tarek Saad'>
	 <organization>Juniper Networks</organization>
      </author>
      <author fullname='Rakesh Gandhi'>
	 <organization>Cisco Systems Inc</organization>
      </author>
      <author fullname='Xufeng Liu'>
	 <organization>Volta Networks</organization>
      </author>
      <author fullname='Vishnu Pavan Beeram'>
	 <organization>Juniper Networks</organization>
      </author>
      <author fullname='Igor Bryskin'>
	 <organization>Individual</organization>
      </author>
      <author fullname='Oscar Gonzalez de Dios'>
	 <organization>Telefonica</organization>
      </author>
      <date day='7' month='February' year='2022'/>
      <abstract>
	 <t>   This document defines a YANG data model for the provisioning and
   management of Traffic Engineering (TE) tunnels, Label Switched Paths
   (LSPs), and interfaces.  The model is divided into YANG modules that
   classify data into generic, device-specific, technology agnostic, and
   technology-specific elements.

   This model covers data for configuration, operational state, remote
   procedural calls, and event notifications.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-teas-yang-te-29'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-teas-yang-te-29.txt' type='TXT'/>
</reference>



<reference anchor='RFC7950' target='https://www.rfc-editor.org/info/rfc7950'>
<front>
<title>The YANG 1.1 Data Modeling Language</title>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<date month='August' year='2016'/>
<abstract><t>YANG is a data modeling language used to model configuration data, state data, Remote Procedure Calls, and notifications for network management protocols.  This document describes the syntax and semantics of version 1.1 of the YANG language.  YANG version 1.1 is a maintenance release of the YANG language, addressing ambiguities and defects in the original specification.  There are a small number of backward incompatibilities from YANG version 1.  This document also specifies the YANG mappings to the Network Configuration Protocol (NETCONF).</t></abstract>
</front>
<seriesInfo name='RFC' value='7950'/>
<seriesInfo name='DOI' value='10.17487/RFC7950'/>
</reference>



<reference anchor='RFC5440' target='https://www.rfc-editor.org/info/rfc5440'>
<front>
<title>Path Computation Element (PCE) Communication Protocol (PCEP)</title>
<author fullname='JP. Vasseur' initials='JP.' role='editor' surname='Vasseur'><organization/></author>
<author fullname='JL. Le Roux' initials='JL.' role='editor' surname='Le Roux'><organization/></author>
<date month='March' year='2009'/>
<abstract><t>This document specifies the Path Computation Element (PCE) Communication Protocol (PCEP) for communications between a Path Computation Client (PCC) and a PCE, or between two PCEs.  Such interactions include path computation requests and path computation replies as well as notifications of specific states related to the use of a PCE in the context of Multiprotocol Label Switching (MPLS) and Generalized MPLS (GMPLS) Traffic Engineering.  PCEP is designed to be flexible and extensible so as to easily allow for the addition of further messages and objects, should further requirements be expressed in the future.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5440'/>
<seriesInfo name='DOI' value='10.17487/RFC5440'/>
</reference>



<reference anchor='RFC7926' target='https://www.rfc-editor.org/info/rfc7926'>
<front>
<title>Problem Statement and Architecture for Information Exchange between Interconnected Traffic-Engineered Networks</title>
<author fullname='A. Farrel' initials='A.' role='editor' surname='Farrel'><organization/></author>
<author fullname='J. Drake' initials='J.' surname='Drake'><organization/></author>
<author fullname='N. Bitar' initials='N.' surname='Bitar'><organization/></author>
<author fullname='G. Swallow' initials='G.' surname='Swallow'><organization/></author>
<author fullname='D. Ceccarelli' initials='D.' surname='Ceccarelli'><organization/></author>
<author fullname='X. Zhang' initials='X.' surname='Zhang'><organization/></author>
<date month='July' year='2016'/>
<abstract><t>In Traffic-Engineered (TE) systems, it is sometimes desirable to establish an end-to-end TE path with a set of constraints (such as bandwidth) across one or more networks from a source to a destination.  TE information is the data relating to nodes and TE links that is used in the process of selecting a TE path.  TE information is usually only available within a network.  We call such a zone of visibility of TE information a domain.  An example of a domain may be an IGP area or an Autonomous System.</t><t>In order to determine the potential to establish a TE path through a series of connected networks, it is necessary to have available a certain amount of TE information about each network.  This need not be the full set of TE information available within each network but does need to express the potential of providing TE connectivity. This subset of TE information is called TE reachability information.</t><t>This document sets out the problem statement for the exchange of TE information between interconnected TE networks in support of end-to-end TE path establishment and describes the best current practice architecture to meet this problem statement.  For reasons that are explained in this document, this work is limited to simple TE constraints and information that determine TE reachability.</t></abstract>
</front>
<seriesInfo name='BCP' value='206'/>
<seriesInfo name='RFC' value='7926'/>
<seriesInfo name='DOI' value='10.17487/RFC7926'/>
</reference>



<reference anchor='RFC8340' target='https://www.rfc-editor.org/info/rfc8340'>
<front>
<title>YANG Tree Diagrams</title>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='L. Berger' initials='L.' role='editor' surname='Berger'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>This document captures the current syntax used in YANG module tree diagrams.  The purpose of this document is to provide a single location for this definition.  This syntax may be updated from time to time based on the evolution of the YANG language.</t></abstract>
</front>
<seriesInfo name='BCP' value='215'/>
<seriesInfo name='RFC' value='8340'/>
<seriesInfo name='DOI' value='10.17487/RFC8340'/>
</reference>



<reference anchor='RFC6991' target='https://www.rfc-editor.org/info/rfc6991'>
<front>
<title>Common YANG Data Types</title>
<author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'><organization/></author>
<date month='July' year='2013'/>
<abstract><t>This document introduces a collection of common data types to be used with the YANG data modeling language.  This document obsoletes RFC 6021.</t></abstract>
</front>
<seriesInfo name='RFC' value='6991'/>
<seriesInfo name='DOI' value='10.17487/RFC6991'/>
</reference>



<reference anchor='RFC8776' target='https://www.rfc-editor.org/info/rfc8776'>
<front>
<title>Common YANG Data Types for Traffic Engineering</title>
<author fullname='T. Saad' initials='T.' surname='Saad'><organization/></author>
<author fullname='R. Gandhi' initials='R.' surname='Gandhi'><organization/></author>
<author fullname='X. Liu' initials='X.' surname='Liu'><organization/></author>
<author fullname='V. Beeram' initials='V.' surname='Beeram'><organization/></author>
<author fullname='I. Bryskin' initials='I.' surname='Bryskin'><organization/></author>
<date month='June' year='2020'/>
<abstract><t>This document defines a collection of common data types and groupings in YANG data modeling language. These derived common types and groupings are intended to be imported by modules that model Traffic Engineering (TE) configuration and state capabilities.</t></abstract>
</front>
<seriesInfo name='RFC' value='8776'/>
<seriesInfo name='DOI' value='10.17487/RFC8776'/>
</reference>



<reference anchor='RFC5441' target='https://www.rfc-editor.org/info/rfc5441'>
<front>
<title>A Backward-Recursive PCE-Based Computation (BRPC) Procedure to Compute Shortest Constrained Inter-Domain Traffic Engineering Label Switched Paths</title>
<author fullname='JP. Vasseur' initials='JP.' role='editor' surname='Vasseur'><organization/></author>
<author fullname='R. Zhang' initials='R.' surname='Zhang'><organization/></author>
<author fullname='N. Bitar' initials='N.' surname='Bitar'><organization/></author>
<author fullname='JL. Le Roux' initials='JL.' surname='Le Roux'><organization/></author>
<date month='April' year='2009'/>
<abstract><t>The ability to compute shortest constrained Traffic Engineering Label Switched Paths (TE LSPs) in Multiprotocol Label Switching (MPLS) and Generalized MPLS (GMPLS) networks across multiple domains has been identified as a key requirement.  In this context, a domain is a collection of network elements within a common sphere of address management or path computational responsibility such as an IGP area or an Autonomous Systems.  This document specifies a procedure relying on the use of multiple Path Computation Elements (PCEs) to compute such inter-domain shortest constrained paths across a predetermined sequence of domains, using a backward-recursive path computation technique.  This technique preserves confidentiality across domains, which is sometimes required when domains are managed by different service providers.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5441'/>
<seriesInfo name='DOI' value='10.17487/RFC5441'/>
</reference>



<reference anchor='RFC5541' target='https://www.rfc-editor.org/info/rfc5541'>
<front>
<title>Encoding of Objective Functions in the Path Computation Element Communication Protocol (PCEP)</title>
<author fullname='JL. Le Roux' initials='JL.' surname='Le Roux'><organization/></author>
<author fullname='JP. Vasseur' initials='JP.' surname='Vasseur'><organization/></author>
<author fullname='Y. Lee' initials='Y.' surname='Lee'><organization/></author>
<date month='June' year='2009'/>
<abstract><t>The computation of one or a set of Traffic Engineering Label Switched Paths (TE LSPs) in MultiProtocol Label Switching (MPLS) and Generalized MPLS (GMPLS) networks is subject to a set of one or more specific optimization criteria, referred to as objective functions (e.g., minimum cost path, widest path, etc.).</t><t>In the Path Computation Element (PCE) architecture, a Path Computation Client (PCC) may want a path to be computed for one or more TE LSPs according to a specific objective function.  Thus, the PCC needs to instruct the PCE to use the correct objective function. Furthermore, it is possible that not all PCEs support the same set of objective functions; therefore, it is useful for the PCC to be able to automatically discover the set of objective functions supported by each PCE.</t><t>This document defines extensions to the PCE communication Protocol (PCEP) to allow a PCE to indicate the set of objective functions it supports.  Extensions are also defined so that a PCC can indicate in a path computation request the required objective function, and a PCE can report in a path computation reply the objective function that was used for path computation.</t><t>This document defines objective function code types for six objective functions previously listed in the PCE requirements work, and provides the definition of four new metric types that apply to a set of synchronized requests.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5541'/>
<seriesInfo name='DOI' value='10.17487/RFC5541'/>
</reference>



<reference anchor='RFC6242' target='https://www.rfc-editor.org/info/rfc6242'>
<front>
<title>Using the NETCONF Protocol over Secure Shell (SSH)</title>
<author fullname='M. Wasserman' initials='M.' surname='Wasserman'><organization/></author>
<date month='June' year='2011'/>
<abstract><t>This document describes a method for invoking and running the Network Configuration Protocol (NETCONF) within a Secure Shell (SSH) session as an SSH subsystem.  This document obsoletes RFC 4742.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6242'/>
<seriesInfo name='DOI' value='10.17487/RFC6242'/>
</reference>



<reference anchor='RFC8446' target='https://www.rfc-editor.org/info/rfc8446'>
<front>
<title>The Transport Layer Security (TLS) Protocol Version 1.3</title>
<author fullname='E. Rescorla' initials='E.' surname='Rescorla'><organization/></author>
<date month='August' year='2018'/>
<abstract><t>This document specifies version 1.3 of the Transport Layer Security (TLS) protocol.  TLS allows client/server applications to communicate over the Internet in a way that is designed to prevent eavesdropping, tampering, and message forgery.</t><t>This document updates RFCs 5705 and 6066, and obsoletes RFCs 5077, 5246, and 6961.  This document also specifies new requirements for TLS 1.2 implementations.</t></abstract>
</front>
<seriesInfo name='RFC' value='8446'/>
<seriesInfo name='DOI' value='10.17487/RFC8446'/>
</reference>



<reference anchor='RFC8341' target='https://www.rfc-editor.org/info/rfc8341'>
<front>
<title>Network Configuration Access Control Model</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>The standardization of network configuration interfaces for use with the Network Configuration Protocol (NETCONF) or the RESTCONF protocol requires a structured and secure operating environment that promotes human usability and multi-vendor interoperability.  There is a need for standard mechanisms to restrict NETCONF or RESTCONF protocol access for particular users to a preconfigured subset of all available NETCONF or RESTCONF protocol operations and content.  This document defines such an access control model.</t><t>This document obsoletes RFC 6536.</t></abstract>
</front>
<seriesInfo name='STD' value='91'/>
<seriesInfo name='RFC' value='8341'/>
<seriesInfo name='DOI' value='10.17487/RFC8341'/>
</reference>



<reference anchor='RFC3688' target='https://www.rfc-editor.org/info/rfc3688'>
<front>
<title>The IETF XML Registry</title>
<author fullname='M. Mealling' initials='M.' surname='Mealling'><organization/></author>
<date month='January' year='2004'/>
<abstract><t>This document describes an IANA maintained registry for IETF standards which use Extensible Markup Language (XML) related items such as Namespaces, Document Type Declarations (DTDs), Schemas, and Resource Description Framework (RDF) Schemas.</t></abstract>
</front>
<seriesInfo name='BCP' value='81'/>
<seriesInfo name='RFC' value='3688'/>
<seriesInfo name='DOI' value='10.17487/RFC3688'/>
</reference>




    </references>

    <references title='Informative References'>





<reference anchor='RFC7491' target='https://www.rfc-editor.org/info/rfc7491'>
<front>
<title>A PCE-Based Architecture for Application-Based Network Operations</title>
<author fullname='D. King' initials='D.' surname='King'><organization/></author>
<author fullname='A. Farrel' initials='A.' surname='Farrel'><organization/></author>
<date month='March' year='2015'/>
<abstract><t>Services such as content distribution, distributed databases, or inter-data center connectivity place a set of new requirements on the operation of networks.  They need on-demand and application-specific reservation of network connectivity, reliability, and resources (such as bandwidth) in a variety of network applications (such as point-to-point connectivity, network virtualization, or mobile back-haul) and in a range of network technologies from packet (IP/MPLS) down to optical.  An environment that operates to meet these types of requirements is said to have Application-Based Network Operations (ABNO).  ABNO brings together many existing technologies and may be seen as the use of a toolbox of existing components enhanced with a few new elements.</t><t>This document describes an architecture and framework for ABNO, showing how these components fit together.  It provides a cookbook of existing technologies to satisfy the architecture and meet the needs of the applications.</t></abstract>
</front>
<seriesInfo name='RFC' value='7491'/>
<seriesInfo name='DOI' value='10.17487/RFC7491'/>
</reference>



<reference anchor='RFC8453' target='https://www.rfc-editor.org/info/rfc8453'>
<front>
<title>Framework for Abstraction and Control of TE Networks (ACTN)</title>
<author fullname='D. Ceccarelli' initials='D.' role='editor' surname='Ceccarelli'><organization/></author>
<author fullname='Y. Lee' initials='Y.' role='editor' surname='Lee'><organization/></author>
<date month='August' year='2018'/>
<abstract><t>Traffic Engineered (TE) networks have a variety of mechanisms to facilitate the separation of the data plane and control plane.  They also have a range of management and provisioning protocols to configure and activate network resources.  These mechanisms represent key technologies for enabling flexible and dynamic networking.  The term &quot;Traffic Engineered network&quot; refers to a network that uses any connection-oriented technology under the control of a distributed or centralized control plane to support dynamic provisioning of end-to- end connectivity.</t><t>Abstraction of network resources is a technique that can be applied to a single network domain or across multiple domains to create a single virtualized network that is under the control of a network operator or the customer of the operator that actually owns the network resources.</t><t>This document provides a framework for Abstraction and Control of TE Networks (ACTN) to support virtual network services and connectivity services.</t></abstract>
</front>
<seriesInfo name='RFC' value='8453'/>
<seriesInfo name='DOI' value='10.17487/RFC8453'/>
</reference>



<reference anchor='RFC8454' target='https://www.rfc-editor.org/info/rfc8454'>
<front>
<title>Information Model for Abstraction and Control of TE Networks (ACTN)</title>
<author fullname='Y. Lee' initials='Y.' surname='Lee'><organization/></author>
<author fullname='S. Belotti' initials='S.' surname='Belotti'><organization/></author>
<author fullname='D. Dhody' initials='D.' surname='Dhody'><organization/></author>
<author fullname='D. Ceccarelli' initials='D.' surname='Ceccarelli'><organization/></author>
<author fullname='B. Yoon' initials='B.' surname='Yoon'><organization/></author>
<date month='September' year='2018'/>
<abstract><t>This document provides an information model for Abstraction and Control of TE Networks (ACTN).</t></abstract>
</front>
<seriesInfo name='RFC' value='8454'/>
<seriesInfo name='DOI' value='10.17487/RFC8454'/>
</reference>


<reference anchor='I-D.ietf-ccamp-otn-topo-yang'>
   <front>
      <title>A YANG Data Model for Optical Transport Network Topology</title>
      <author fullname='Haomian Zheng'>
	 <organization>Huawei Technologies</organization>
      </author>
      <author fullname='Italo Busi'>
	 <organization>Huawei Technologies</organization>
      </author>
      <author fullname='Xufeng Liu'>
	 <organization>Volta Networks</organization>
      </author>
      <author fullname='Sergio Belotti'>
	 <organization>Nokia</organization>
      </author>
      <author fullname='Oscar Gonzalez de Dios'>
	 <organization>Telefonica</organization>
      </author>
      <date day='7' month='March' year='2022'/>
      <abstract>
	 <t>   This document describes a YANG data model to describe the topologies
   of an Optical Transport Network (OTN).  It is independent of control
   plane protocols and captures topological and resource related
   information pertaining to OTN.  This model enables clients, which
   interact with a transport domain controller, for OTN topology related
   operations such as obtaining the relevant topology resource
   information.


	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-ccamp-otn-topo-yang-14'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-ccamp-otn-topo-yang-14.txt' type='TXT'/>
</reference>



<reference anchor='RFC4655' target='https://www.rfc-editor.org/info/rfc4655'>
<front>
<title>A Path Computation Element (PCE)-Based Architecture</title>
<author fullname='A. Farrel' initials='A.' surname='Farrel'><organization/></author>
<author fullname='J.-P. Vasseur' initials='J.-P.' surname='Vasseur'><organization/></author>
<author fullname='J. Ash' initials='J.' surname='Ash'><organization/></author>
<date month='August' year='2006'/>
<abstract><t>Constraint-based path computation is a fundamental building block for traffic engineering systems such as Multiprotocol Label Switching (MPLS) and Generalized Multiprotocol Label Switching (GMPLS) networks.  Path computation in large, multi-domain, multi-region, or multi-layer networks is complex and may require special computational components and cooperation between the different network domains.</t><t>This document specifies the architecture for a Path Computation Element (PCE)-based model to address this problem space.  This document does not attempt to provide a detailed description of all the architectural components, but rather it describes a set of building blocks for the PCE architecture from which solutions may be constructed.  This memo provides information for the Internet community.</t></abstract>
</front>
<seriesInfo name='RFC' value='4655'/>
<seriesInfo name='DOI' value='10.17487/RFC4655'/>
</reference>



<reference anchor='RFC8342' target='https://www.rfc-editor.org/info/rfc8342'>
<front>
<title>Network Management Datastore Architecture (NMDA)</title>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' surname='Schoenwaelder'><organization/></author>
<author fullname='P. Shafer' initials='P.' surname='Shafer'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<author fullname='R. Wilton' initials='R.' surname='Wilton'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>Datastores are a fundamental concept binding the data models written in the YANG data modeling language to network management protocols such as the Network Configuration Protocol (NETCONF) and RESTCONF. This document defines an architectural framework for datastores based on the experience gained with the initial simpler model, addressing requirements that were not well supported in the initial model.  This document updates RFC 7950.</t></abstract>
</front>
<seriesInfo name='RFC' value='8342'/>
<seriesInfo name='DOI' value='10.17487/RFC8342'/>
</reference>



<reference anchor='RFC6805' target='https://www.rfc-editor.org/info/rfc6805'>
<front>
<title>The Application of the Path Computation Element Architecture to the Determination of a Sequence of Domains in MPLS and GMPLS</title>
<author fullname='D. King' initials='D.' role='editor' surname='King'><organization/></author>
<author fullname='A. Farrel' initials='A.' role='editor' surname='Farrel'><organization/></author>
<date month='November' year='2012'/>
<abstract><t>Computing optimum routes for Label Switched Paths (LSPs) across multiple domains in MPLS Traffic Engineering (MPLS-TE) and GMPLS networks presents a problem because no single point of path computation is aware of all of the links and resources in each domain.  A solution may be achieved using the Path Computation Element (PCE) architecture.</t><t>Where the sequence of domains is known a priori, various techniques can be employed to derive an optimum path.  If the domains are simply connected, or if the preferred points of interconnection are also known, the Per-Domain Path Computation technique can be used.  Where there are multiple connections between domains and there is no preference for the choice of points of interconnection, the Backward-Recursive PCE-based Computation (BRPC) procedure can be used to derive an optimal path.</t><t>This document examines techniques to establish the optimum path when the sequence of domains is not known in advance.  The document shows how the PCE architecture can be extended to allow the optimum sequence of domains to be selected, and the optimum end-to-end path to be derived through the use of a hierarchical relationship between domains.  This document is not an Internet Standards Track  specification; it is published for informational purposes.</t></abstract>
</front>
<seriesInfo name='RFC' value='6805'/>
<seriesInfo name='DOI' value='10.17487/RFC6805'/>
</reference>



<reference anchor='RFC7446' target='https://www.rfc-editor.org/info/rfc7446'>
<front>
<title>Routing and Wavelength Assignment Information Model for Wavelength Switched Optical Networks</title>
<author fullname='Y. Lee' initials='Y.' role='editor' surname='Lee'><organization/></author>
<author fullname='G. Bernstein' initials='G.' role='editor' surname='Bernstein'><organization/></author>
<author fullname='D. Li' initials='D.' surname='Li'><organization/></author>
<author fullname='W. Imajuku' initials='W.' surname='Imajuku'><organization/></author>
<date month='February' year='2015'/>
<abstract><t>This document provides a model of information needed by the Routing and Wavelength Assignment (RWA) process in Wavelength Switched Optical Networks (WSONs).  The purpose of the information described in this model is to facilitate constrained optical path computation in WSONs.  This model takes into account compatibility constraints between WSON signal attributes and network elements but does not include constraints due to optical impairments.  Aspects of this information that may be of use to other technologies utilizing a GMPLS control plane are discussed.</t></abstract>
</front>
<seriesInfo name='RFC' value='7446'/>
<seriesInfo name='DOI' value='10.17487/RFC7446'/>
</reference>




    </references>


<section anchor="examples"><name>Examples</name>

<t>This section contains examples of use of the model with RESTCONF
<xref target="RFC8040"/> and JSON encoding.</t>

<t>These examples show how path computation can be requested for the tunnels configuration provided in Appendix A of <xref target="I-D.ietf-teas-yang-te"/>.</t>

<section anchor="basic-example"><name>Basic Path Computation</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 13.1 of of <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>In this case, the TE Tunnel has only one primary path with no specific constraints.</t>

<figure><artwork type="ascii-art"><![CDATA[
POST /restconf/operations/ietf-te:te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="basic.json"><![CDATA[
{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 1,
          "tunnel-name": "Example_LSP_Tunnel_A_2",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "10.0.0.1",
          "destination": "10.0.0.4",
          "bidirectional": "false",
          "signaling-type": "te-types:path-setup-rsvp"
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="transient-state-example"><name>Path Computation with transient state</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 13.1 of of <xref target="I-D.ietf-teas-yang-te"/> requesting some transient state to be reported within the operational datastore, as described <xref target="temp-state"/>.</t>

<t>In this case, the TE Tunnel has only one primary path with no specific constraints.</t>

<figure><artwork type="ascii-art"><![CDATA[
POST /restconf/operations/ietf-te:te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="transient-state.json"><![CDATA[
{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 2,
          "tunnel-name": "Example_LSP_Tunnel_A_2",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "10.0.0.1",
          "destination": "10.0.0.4",
          "bidirectional": "false",
          "signaling-type": "te-types:path-setup-rsvp",
          "requested-state": {
            "transaction-id": "example"
          }
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="global-path-constraint-example"><name>Path Computation with Global Path Constraint</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 13.3 of of <xref target="I-D.ietf-teas-yang-te"/>. The 'named path constraint' is created in section 13.2 of <xref target="I-D.ietf-teas-yang-te"/> applies to this path computation request.</t>

<figure><artwork type="ascii-art"><![CDATA[
POST /restconf/operations/ietf-te:te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="global-path-constraint.json"><![CDATA[
{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 3,
          "tunnel-name": "Example_LSP_Tunnel_A_4_1",
          "path-name": "Simple_LSP_1",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "10.0.0.1",
          "destination": "10.0.0.4",
          "bidirectional": "false",
          "signaling-type": "path-setup-rsvp",
          "named-path-constraint": "max-hop-3",
          "requested-state": {}
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="tunnel-path-constraint-example"><name>Path Computation with Per-tunnel Path Constraint</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 13.4 of of <xref target="I-D.ietf-teas-yang-te"/>, using a per tunnel path constraint.</t>

<figure><artwork type="ascii-art"><![CDATA[
POST /restconf/operations/ietf-te:te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="tunnel-path-constraint.json"><![CDATA[
{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 4,
          "tunnel-name": "Example_LSP_Tunnel_A_4_2",
          "path-name": "path1",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "10.0.0.1",
          "destination": "10.0.0.4",
          "bidirectional": "false",
          "signaling-type": "te-types:path-setup-rsvp",
          "path-metric-bounds": {
            "path-metric-bound": [
              {
                "metric-type": "te-types:path-metric-hop",
                "upper-bound": "3"
              }
            ]
          }
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="path-computation-result"><name>Path Computation result</name>

<t>This example reports the output of the path computation RPC request described in <xref target="tunnel-path-constraint-example"/>.</t>

<figure><artwork type="ascii-art"><![CDATA[
HTTP/1.1 200 OK
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="tunnel-path-constraint.json"><![CDATA[
{
  "ietf-te:output": {
    "path-compute-result": {
      "ietf-te-path-computation:response": [
        {
          "response-id": 3,
          "computed-paths-properties": {
            "computed-path-properties": [
              {
                "k-index": "1",
                "path-properties": {
                  "path-route-objects": {
                    "path-route-object": [
                      {
                        "index": "1",
                        "numbered-node-hop": {
                          "node-id": "10.0.0.2"
                        }
                      },
                      {
                        "index": "2",
                        "numbered-node-hop": {
                          "node-id": "10.0.0.4"
                        }
                      }
                    ]
                  }
                }
              }
            ]
          },
          "tunnel-ref": "Example_LSP_Tunnel_A_4_1",
          "primary-path-ref": "path1"
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
</section>
<section numbered="false" anchor="acknowledgments"><name>Acknowledgments</name>

<t>The authors would like to thank Igor Bryskin and Xian Zhang for
   participating in the initial discussions that have triggered this
   work and providing valuable insights.</t>

<t>The authors would like to thank the authors of the TE tunnel YANG
   data model <xref target="I-D.ietf-teas-yang-te"/>, in particular Igor Bryskin, Vishnu Pavan
   Beeram, Tarek Saad and Xufeng Liu, for their inputs to the
   discussions and support in having consistency between the Path
   Computation and TE tunnel YANG data models.</t>

<t>The authors would like to thank Adrian Farrel, Dhruv Dhody, Igor
   Bryskin, Julien Meuric and Lou Berger for their valuable input to the
   discussions that has clarified that the path being set up is not
   necessarily the same as the path that has been previously computed
   and, in particular to Dhruv Dhody, for his suggestion to describe the
   need for a path verification phase to check that the actual path
   being set up meets the required end-to-end metrics and constraints.</t>

<t>The authors would like to thank Aihua Guo, Lou Berger, Shaolong Gan,
   Martin Bjorklund and Tom Petch for their useful comments on how to
   define XPath statements in YANG RPCs.</t>

<t>The authors would like to thank Haomian Zheng, Yanlei Zheng, Tom
   Petch, Aihua Guo and Martin Bjorklund for their review and valuable
   comments to this document.</t>

<t>Previous versions of document were prepared using 2-Word-v2.0.template.dot.</t>

<t>This document was prepared using kramdown.</t>

</section>

    <section anchor="contributors" numbered="false" toc="include" removeInRFC="false">
        <name>Contributors</name>
    <contact initials="V." surname="Lopez" fullname="Victor Lopez">
      <organization>Nokia</organization>
      <address>
        <email>victor.lopez@nokia.com</email>
      </address>
    </contact>
    <contact initials="R." surname="Vilalta" fullname="Ricard Vilalta">
      <organization>CTTC</organization>
      <address>
        <email>ricard.vilalta@cttc.es</email>
      </address>
    </contact>
    <contact initials="K." surname="Sethuraman" fullname="Karthik Sethuraman">
      <organization>NEC</organization>
      <address>
        <email>karthik.sethuraman@necam.com</email>
      </address>
    </contact>
    <contact initials="M." surname="Scharf" fullname="Michael Scharf">
      <organization>Nokia</organization>
      <address>
        <email>michael.scharf@gmail.com</email>
      </address>
    </contact>
    <contact initials="D." surname="Beller" fullname="Dieter Beller">
      <organization>Nokia</organization>
      <address>
        <email>dieter.beller@nokia.com</email>
      </address>
    </contact>
    <contact initials="G." surname="Bruno" fullname="Gianmarco Bruno">
      <organization>Ericsson</organization>
      <address>
        <email>gianmarco.bruno@ericsson.com</email>
      </address>
    </contact>
    <contact initials="F." surname="Lazzeri" fullname="Francesco Lazzeri">
      <organization>Ericsson</organization>
      <address>
        <email>francesco.lazzeri@ericsson.com</email>
      </address>
    </contact>
    <contact initials="Y." surname="Lee" fullname="Young Lee">
      <organization>Samsung Electronics</organization>
      <address>
        <email>younglee.tx@gmail.com</email>
      </address>
    </contact>
    <contact initials="C." surname="Perocchio" fullname="Carlo Perocchio">
      <organization>Ericsson</organization>
      <address>
        <email>carlo.perocchio@ericsson.com</email>
      </address>
    </contact>
    <contact initials="O." surname="Dugeon" fullname="Olivier Dugeon">
      <organization>Orange Labs</organization>
      <address>
        <email>olivier.dugeon@orange.com</email>
      </address>
    </contact>
    <contact initials="J." surname="Meuric" fullname="Julien Meuric">
      <organization>Orange Labs</organization>
      <address>
        <email>julien.meuric@orange.com</email>
      </address>
    </contact>
    </section>

  </back>

<!-- ##markdown-source:
H4sIALaRK2IAA+y9a3sbx5Ew+h2/opf5EDIGQOvmJHQcm6IoR2dtSUdU7M1Z
7dlnCAzJWYEY7MxAMh3q/PbTdenu6tvMgFYSJ6+x2YQC+lJdXV23rq6azWaT
Rb2s1pdHattdzH43mXRVtyqP1LH6y/Hzr9WToivUt/WyXKmLulFN+b/bsu10
e7Upuiu1qK83267oqno9mRTn50357kj9pdA/Q+uX0ORENFnWi3VxrUdfNsVF
N6tKPWVXFu3sRneZwYgzMeLs3m8n7+vm7WVTbzdH6vXp8Zn6Xv8bZv8avpss
iq68rJubI9V2y0m1aY5U12zb7v6nn/7+0/uTSdsV6+V/F6t6ree8KdvJpjpS
/9nVi6lq66ZryotW/3VzTX/oqa/Lddf+l17Ktruqm6OJUjP9/0oR1M86PZR6
vG0r/LKpAVHlsurqBr+oG43GP22L92WlXpeLq3W9qi8rPS38WF4X1epIVTDG
/FyP8dUVtpzraYN5zsrmstITlau66/rmel6/rQo5eos95+fU86s1/J6Y4EW7
KBr1db3+sViVP6plqZ5UNYFZrVv9+zz9I076ulyVF/W6Wngz1zDk/JJ7LTWk
dftVZ5smgDheb5viUp1dFc114Yb/uq4vV6Uculi3V8VXl/h9YhxNbnqQyo1w
clWtC/VnPS22dci5qjSdPfz9VwtosMXf54t1MNyTYl1psNVJudArKlcrMfJp
Uy3atl7LUZfUfr6w7b8quRkCq8/Xumuq820XE9R31UJ/q76pN+WPPbv6DpvN
V9Asu6evNJabpR5yVaw6gc+T169P5GANtpu/o3ZfLbpuMUcSlYP9e9F0V9Vb
TYndld6l62ItwDv1xntLTeetbfrVulwU1wkQv60WV4XmJGf6f5qLngVfU8N5
iw2/uoRvE+M90QykbOCcrMq+U7HEdnAqdLssAr+uivV10Sz0wWu267p/1y9N
4/k5NPa33B/3aVOsF2Wrx/2m+PFH3bB/5AvTfL6i5n1j/6Xeamb4TVm6Mc+K
6xa+PF2Vi66Bw+fxnxvosSrLefdDFq8nRaP53MuyqRf6qAxgYgGN5xvTuA/a
F6vqXaU37Mn2sqwFRb3QS74sNXrOPVBraj5fYvOvamyVGPb/2q6qcq2+Lbd6
6sFR/wdbz6+xtRx0MpvNlG7cNcWim0CX11dlUyp9qFW7KNdFo1naVHU3G32C
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
cnZeddfFBlr2BGeRt3Pb/XJk/6Up9JcjGyDkn/jIjqp06E7wsF+YBt21xqHf
cYcCh9Ey8Om4ZTyMkK7STMEby4+RNc0g2U5BNygUjSoQhg3G1N269dr2F93i
tuMrbnGH8eW2TIdsvH9PkD6ejGyM/0DHfFy/H5mPk2Rj+eO2+fj9BF38Ev/+
S/y7bfqvEP+efzqZ5cW5Z5IjOvhPIjMdBt/FMNwjXsRAy3FvYXDisa9gfpZ3
0DvfO+9w17zD/XIGDJNnxbJeZcRBMkWVd0L681PZptz6LsmpwjGGsziFPYbT
UvUvKZeTKlRM+xNSha13WIfabR1yT/0ES74+u3N2pXT3kamVfK1157xKXvd+
NqRk0xHMyGs/giV57YcZE27dzXpx1dRrjgyS6U7x53flwvzbsuZV8UNxvvIO
cLpUePIKPHvjLacwGW/YEfsbFVZON8DJmJ9glFEBJ0rS5qj66dw2H3CixPRh
TEQAXS4mwp8pGxPhNUvERMSQuJiIJCRxTEQakl5AUjERyqgZcUS5A4R/bYOc
u8oISXezpfxjl73Zku0Mp0/ebAUNzUryN1vpDn03W3mY/XuePpi9W540CD23
PMMw90MtBPCIK5tovdmbrcSKczdbH2nNvTdb/2A0BTdbCeTEN1vp6YdutkYs
dJCIxc2W/E1Jz1QKStfG89bFTVRORU42vU1pzLmWylegh9qaz4BvL7uEse49
bh4/MhbYCB8Zy1/FI2Orswy8Ng7wN/a1cQKZwyI07BE8LXZWg7+mXLxz/Olb
dTbwOdysTODzqJYZLXhM1sB626XSBmpzeLvqbOLAprZZlzFtIP1p8wZGjfpS
B0ZqVVPbcmyURWTmskL7AjtsKRpqsN7OxI2J3HHdjX8L4fhdqm0wcooNmVa9
lBpwUd0n/TI+q9vIrsVisb3ergrcdxvf6yuBKQjTAcjJKUbEIqsUA2/qEXpa
0CEfody/jptIoexZRCpueXAFI3fFdsxHM8c9bKdEYHNm3Wl9PrXoQdU+u+Kd
Ni1S+PNQj9mqQTMgB/VYoDPGQQpqL+J5AG7Z1r+rzQEyNrou1z9njtzFLglW
NNZECVG7i7US9B1ruNzFgsmtbkCxDyDcScfvWd3I9cnuu6rxdzN7AjSNt4A+
IqJ2tIt+TmjuN5sC5I6xoALodjem+rAz/oxlDKzA0oJ9z9pasdGlm2fNrqTx
ggyvzwK7gynWY5Pp6bJW2Uc0z3JLDZ6R9ncxn7w1Fwi36JZGpUh0DLpH4tdH
qErcE8WtpXeWyDZr3ErHeNazmzIXyqapG0yJPmRYuJZJ36BuTy2oaPTGMJGU
jiGbQ0RG2xXXG+JYeOMJdQRmBdQyqsIiJLJrUxatuElLqD+82TZped8bsDC3
ue0e5f60P9qEmtIMdkpRkF7VnzwoRxIMaJJO9g4cppn9sm9gmz0zOaSfczSE
dmjIFLQqHjoFrxs6ZZpTCE7r5fLnbQJChH9eVKuOH2xb25xT0xrLXUTztAdi
b1WulZa2nno8ABo5DKRnQA681CdiVVoHgk9b4yDAohtQ1kGUbVCa1FflF3uJ
EhBe/Ya9SdF07+vmLVoUX+xlSzRAp70PtnwE1mbA8hFY+YFKMnClBvhtMlDy
Qf11Qqd5BpsOX9yb3/tcf4fWx6ZYlGpv26yPoP/RptCQtkc/XK+O1u0R8oDc
uHswBqSdrn7Aa6zF51ANorrGOvbcCecWrT7Hf/pFFJTae/X05C/6c6SOaY1P
oLrFt664RgOG7EKdri+1rlE2WIbOr8YEdbuerTX9Xej1tAjaBwDn8DfqORRF
wRpWehpFtVKwoJeGY7OC5cPcWPUD62uwYlO0cENfsrbH9cRghBrKpCw1SN0s
KgCkzvUZ01iFwmS67fw3hzFOSD6EmKFv8/j53W9/+9kR1A+71hvokPQax8og
ae7wUDeXhbnWxFH3Ukg9hqtoiIvYNiWi9MwEKaj916fHZ3xmv9dEDN99DZ4R
nAPr9C3oSO19/7X6vjw/0n/+4arrNkeHh11dr1oslzTXgBy+vzwEpB3+kYf7
Wn1TtZ3u8IfrQjOR+gh+/co0/+OEmtHOwbDPumJVq8fbtgrdkGaAClrMz3WL
r662xfuymuttiQc6K5vLSo9Uruquyw7WYqv5ObX6al2/rYr0eN9VCyCub+pN
+WNutHfYZr6CNn1jvWgXRaO+rtc/FqvyR7Us1ZOqbnOj1tB6fsmtl+VSt/0K
CvZc1OtqkZnieL1tikt1dlU010VuZM0Jr4qvLuv6clWmh/mLJvazqzz6rip9
Oh7+/isIiii2Gpz6er5Yx+O80oA2S43EVbHqsvA02Gr+jlp9tei6xbxs49H+
XXPbq+qt3uPuSi/zuoh81mbEt9Ry3tqWX63LRXGdXu231eKq0IzpTP9Pc5Eb
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

-->

</rfc>

