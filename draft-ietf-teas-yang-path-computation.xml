<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.17 (Ruby 2.7.0) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc comments="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-teas-yang-path-computation-20" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="Yang for Path Computation">A YANG Data Model for requesting path computation</title>

    <author initials="I." surname="Busi" fullname="Italo Busi" role="editor">
      <organization>Huawei Technologies</organization>
      <address>
        <email>italo.busi@huawei.com</email>
      </address>
    </author>
    <author initials="S." surname="Belotti" fullname="Sergio Belotti" role="editor">
      <organization>Nokia</organization>
      <address>
        <email>sergio.belotti@nokia.com</email>
      </address>
    </author>
    <author initials="O." surname="Gonzalez de Dios" fullname="Oscar Gonzalez de Dios">
      <organization>Telefonica</organization>
      <address>
        <email>oscar.gonzalezdedios@telefonica.com</email>
      </address>
    </author>
    <author initials="A." surname="Sharma" fullname="Anurag Sharma">
      <organization>Google</organization>
      <address>
        <email>ansha@google.com</email>
      </address>
    </author>
    <author initials="Y." surname="Shi" fullname="Yan Shi">
      <organization>China Unicom</organization>
      <address>
        <email>shiyan49@chinaunicom.cn</email>
      </address>
    </author>
    <author initials="D." surname="Ceccarelli" fullname="Daniele Ceccarelli">
      <organization>Cisco</organization>
      <address>
        <email>daniele.ietf@gmail.com</email>
      </address>
    </author>

    <date year="2023" month="March" day="10"/>

    
    <workgroup>TEAS Working Group</workgroup>
    

    <abstract>


<t>There are scenarios, typically in a hierarchical Software-Defined
   Networking (SDN) context, where the topology information provided by
   a Traffic Engineering (TE) network provider may be insufficient for
   its client to perform multi-domain path computation. In these cases the
   client would need to request the TE network provider to compute some
   intra-domain paths to be used by the client to choose the optimal multi-domain paths.</t>

<t>This document provides a mechanism to request path computation by augmenting the Remote Procedure Calls (RPCs) defined in RFC YYYY.</t>

<t>[RFC EDITOR NOTE: Please replace RFC YYYY with the RFC number of
   draft-ietf-teas-yang-te once it has been published.</t>

<t>Moreover, this document describes some use cases where the path
   computation request, via YANG-based protocols (e.g., NETCONF or
   RESTCONF), can be needed.</t>



    </abstract>



  </front>

  <middle>


<section anchor="intro"><name>Introduction</name>

<t anchor="pc-model">There are scenarios, typically in a hierarchical Software-Defined
   Networking (SDN) context, where the topology information provided by
   a Traffic Engineering (TE) network provider may be insufficient for
   its client to perform multi-domain path computation. In these cases the
   client would need to request the TE network provider to compute some
   intra-domain paths that could be used together with its topology information
   to compute the multi-domain path.</t>

<t>These types of scenarios can be applied to different interfaces in
   different reference architectures:</t>

<t><list style="symbols">
  <t>Application-Based Network Operations (ABNO) control interface
<xref target="RFC7491"/>, in which an Application Service Coordinator can request the
ABNO controller to take in charge path calculation (see Figure 1
in <xref target="RFC7491"/>).</t>
  <t>Abstraction and Control of TE Networks (ACTN) <xref target="RFC8453"/>, where a
controller hierarchy is defined.
In the ACTN context, path computation is needed on the interface
between Customer Network Controller (CNC)  and Multi-Domain
Service Coordinator (MDSC), called CNC-MDSC Interface (CMI),
and on the interface between MSDC and Provisioning Network
Controller (PNC), called MDSC-PNC Interface  (MPI). 
<xref target="RFC8454"/> describes an information model for the Path
Computation request.  <vspace blankLines='1'/>
Multiple protocol solutions can be used for communication between
different controller hierarchical levels. This document assumes that
the controllers are communicating using YANG-based protocols (e.g.,
NETCONF <xref target="RFC6241"/> or RESTCONF <xref target="RFC8040"/>).  <vspace blankLines='1'/>
Path Computation Elements (PCEs), controllers and orchestrators
perform their operations based on Traffic Engineering Databases
(TED). Such TEDs can be described, in a technology agnostic way, with
the YANG data model for TE Topologies <xref target="RFC8795"/>. Furthermore, the
technology specific details of the TED are modelled in the technology
specific topology models, e.g., the <xref target="I-D.ietf-ccamp-otn-topo-yang"/> for Optical Transport
Network (OTN) Optical Data Unit (ODU) technologies, which augment the
common TE topology model in <xref target="RFC8795"/>.  <vspace blankLines='1'/>
The availability of such topology models allows the provisioning of
the TED using YANG-based protocols (e.g., NETCONF or RESTCONF).
Furthermore, it enables a PCE/controller performing the necessary
abstractions or modifications and offering this customized topology
to another PCE/controller or high level orchestrator.  <vspace blankLines='1'/>
The tunnels that can be provided over the networks described with the
topology models can be also set-up, deleted and modified via YANG-
based protocols (e.g., NETCONF or RESTCONF) using the TE tunnel YANG
data model <xref target="I-D.ietf-teas-yang-te"/>.  <vspace blankLines='1'/>
This document defines a YANG data model <xref target="RFC7950"/> that augments the RPC defined in <xref target="I-D.ietf-teas-yang-te"/>. The use of this RPC is complimentary to the configuration of a TE tunnel path in "compute-only" mode, as described in <xref target="I-D.ietf-teas-yang-te"/>.  <vspace blankLines='1'/>
The YANG data model definition does not make any assumption about
whether that the client or the server implement a "PCE"
functionality, as defined in <xref target="RFC4655"/>, and the Path Computation
Element Communication Protocol (PCEP) protocol, as defined in
<xref target="RFC5440"/>.  <vspace blankLines='1'/>
Moreover, this document describes some use cases where a path
computation request, via YANG-based protocols (e.g., NETCONF or
RESTCONF), can be needed.  <vspace blankLines='1'/>
The YANG data model defined in this document conforms to the Network
Management Datastore Architecture <xref target="RFC8342"/>.</t>
</list></t>

<section anchor="terminology"><name>Terminology</name>

<t>TED:</t>

<ul empty="true"><li>
  <t>The traffic engineering database is a collection of all TE
   information about all TE nodes and TE links in a given network.</t>
</li></ul>

<t>PCE:</t>

<ul empty="true"><li>
  <t>A Path Computation Element (PCE) is an entity that is capable of
   computing a network path or route based on a network graph, and of
   applying computational constraints during the computation.  The PCE
   entity is an application that can be located within a network node or
   component, on an out-of-network server, etc.  For example, a PCE
   would be able to compute the path of a TE Label Switched Path (LSP)
   by operating on the TED and considering bandwidth and other
   constraints applicable to the TE LSP service request. <xref target="RFC4655"/>.</t>
</li></ul>

<t>Domain:</t>

<ul empty="true"><li>
  <t>TE information is the data relating to nodes and TE links
   that is used in the process of selecting a TE path.  TE information
   is usually only available within a network.  We call such a zone of
   visibility of TE information a domain.  An example of a domain may be
   an IGP area or an Autonomous System. <xref target="RFC7926"/></t>
</li></ul>

<t>The terminology for describing YANG data models is found in
   <xref target="RFC7950"/>.</t>

</section>
<section anchor="tree-diagram"><name>Tree Diagram</name>

<t>Tree diagrams used in this document follow the notation defined in
   <xref target="RFC8340"/>.</t>

</section>
<section anchor="prefixes-in-data-node-names"><name>Prefixes in Data Node Names</name>

<t>In this document, names of data nodes and other data model objects
   are prefixed using the standard prefix associated with the
   corresponding YANG imported modules, as shown in <xref target="tab-prefix"/>.</t>

<texttable title="Prefixes and corresponding YANG modules" anchor="tab-prefix">
      <ttcol align='left'>Prefix</ttcol>
      <ttcol align='left'>YANG module</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>te-types</c>
      <c>ietf-te-types</c>
      <c>[RFCZZZZ]</c>
      <c>te</c>
      <c>ietf-te</c>
      <c>[RFCYYYY]</c>
      <c>te-pc</c>
      <c>ietf-te-path-computation</c>
      <c>RFCXXXX</c>
</texttable>

<t>RFC Editor Note:
Please replace XXXX with the RFC number assigned to this document.
Please replace YYYY with the RFC number of <xref target="I-D.ietf-teas-yang-te"/> once it has been published.
Please replace ZZZZ with the RFC number of <xref target="I-D.ietf-teas-rfc8776-update"/> once it has been published.
Please remove this note.</t>

</section>
</section>
<section anchor="use-cases"><name>Use Cases</name>

<t>This section presents some use cases, where a client needs to request
   underlying SDN controllers for path computation.</t>

<t>The use of the YANG data model defined in this document is not
   restricted to these use cases but can be used in any other use case
   when deemed useful.</t>

<t>The presented uses cases have been grouped, depending on the
   different underlying topologies: Packet/Optical Integration (<xref target="poi-uc"/>);
   multi-domain Traffic Engineered (TE) Networks (<xref target="md-uc"/>); and Data Center
   Interconnections (<xref target="dci-uc"/>). Use cases in <xref target="brpc-uc"/> and <xref target="hpce-uc"/>
   respectively present how to
   apply this YANG data model for standard multi-domain PCE i.e.
   Backward Recursive Path Computation <xref target="RFC5441"/> and Hierarchical PCE
   <xref target="RFC6805"/>.</t>

<section anchor="poi-uc"><name>Packet/Optical Integration</name>

<t>In this use case, an optical domain is used to provide connectivity
   to some nodes of a packet domain (see <xref target="fig-poi-uc"/>).</t>

<figure title="Packet/Optical Integration use case" anchor="fig-poi-uc"><artwork type="ascii-art" name="poi-use-case.txt"><![CDATA[
                                +----------------+
                                |                |
                                | Packet/Optical |
                                |  Coordinator   |
                                |                |
                                +---+------+-----+
                                    |      |
                       +------------+      |
                       |                   +-----------+
                +------V-----+                         |
                |            |                  +------V-----+
                | Packet     |                  |            |
                | Domain     |                  | Optical    |
                | Controller |                  | Domain     |
                |            |                  | Controller |
                +------+-----+                  +-------+----+
                       |                                |
              .........V.........................       |
              :          packet domain          :       |
          +----+                               +----+   |
          | R1 |= = = = = = = = = = = = = = = =| R2 |   |
          +-+--+                               +--+-+   |
            | :                                 : |     |
            | :................................ : |     |
            |                                     |     |
            |               +-----+               |     |
            |    ...........| Opt |...........    |     |
            |    :          |  C  |          :    |     |
            |    :         /+--+--+\         :    |     |
            |    :        /    |    \        :    |     |
            |    :       /     |     \       :    |     |
            |   +-----+ /   +--+--+   \ +-----+   |     |
            |   | Opt |/    | Opt |    \| Opt |   |     |
            +---|  A  |     |  D  |     |  B  |---+     |
                +-----+\    +--+--+    /+-----+         |
                 :      \      |      /      :          |
                 :       \     |     /       :          |
                 :        \ +--+--+  / optical<---------+
                 :         \| Opt |/  domain :
                 :..........|  E  |..........:
                            +-----+
]]></artwork></figure>

<t><xref target="fig-poi-uc"/> as well as <xref target="fig-poi-abstraction"/> describe two different
   examples of packet/optical topologies and only show a partial view of the
   packet network connectivity, before additional packet connectivity is
   provided by the optical network.</t>

<t>It is assumed that the Optical Domain Controller provides to the
   Packet/Optical Coordinator an abstracted view of the optical network.
   A possible abstraction could be to represent the whole optical
   network as one "virtual node" with "virtual ports" connected to the
   access links, as shown in <xref target="fig-poi-abstraction"/>.</t>

<t>It is also assumed that Packet Domain Controller can provide the
   Packet/Optical Coordinator the information it needs to set up
   connectivity between packet nodes through the optical network (e.g.,
   the access links).</t>

<t>The path computation request helps the Packet/Optical Coordinator to
   know the real connections that can be provided by the optical
   network.</t>

<figure title="Packet and Optical Topology Abstractions" anchor="fig-poi-abstraction"><artwork type="ascii-art" name="poi-topology-abstraction.txt"><![CDATA[
                       ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,.
                      ,  Packet/Optical Coordinator view          ,
                     ,                              +----+       , .
                    ,                               |    |      ,
                   ,                                | R2 |     ,   .
                  ,  +----+  +------------ +       /+----+    ,
                 ,   |    |  |             |/-----/ / /      ,     .
                ,    | R1 |--O VP1     VP4 O       / /      ,
               ,     |    |\ |             | /----/ /      ,       .
              ,      +----+ \|             |/      /      ,
             ,        /      O VP2     VP5 O      /      ,         .
            ,        /       |             |  +----+    ,
           ,        /        |             |  |    |   ,           .
          ,        /         O VP3     VP6 O--| R4 |  ,
         ,     +----+ /-----/|_____________|  +----+ ,             .
        ,      |    |/       +------------ +        ,
       ,       | R3 |                              ,               .
      ,        +----+                             ,,,,,,,,,,,,,,,,,
     ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,                ,.
     . Packet Domain Controller view                +----+       ,
       only packet nodes and packet links           |    |      ,  .
     . with access links to the optical network     | R2 |     ,
                  ,  +----+                        /+----+    ,    .
     .           ,   |    |                 /-----/ / /      ,
                ,    | R1 |---                     / /      ,      .
     .         ,     +----+\                 /----/ /      ,
              ,        /    \               /      /      ,        .
     .       ,        /                           /      ,
            ,        /                        +----+    ,          .
     .     ,        /                         |    |   ,
          ,        /                       ---| R4 |  ,            .
     .   ,     +----+ /-----/                 +----+ ,
        ,      |    |/                              ,              .
     . ,       | R3 |                              ,
      ,        +----+                             ,,,,,,,,,,,,,,,,,.
     .,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,                ,
       Optical Domain Controller view                            , .
     . only optical nodes,        +--+                          ,
       optical links and         /|OF|                         ,   .
     . access links from the  +--++--+             /          ,
       packet network         |OA|    \     /-----/ /        ,     .
     .          ,          ---+--+--\  +--+/       /        ,
               ,           \   |  \  \-|OE|-------/        ,       .
     .        ,             \  |   \ /-+--+               ,
             ,               \+--+  X    |               ,         .
     .      ,                 |OB|-/ \   |              ,
           ,                  +--+-\  \+--+            ,           .
     .    ,                  /   \  \--|OD|---        ,
         ,            /-----/     +--+ +--+          ,             .
     .  ,            /            |OC|/             ,
       ,                          +--+             ,               .
     .,                                           ,,,,,,,,,,,,,,,,,,
      ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,                ,
     . Actual Physical View                         +----+       ,
                    ,             +--+              |    |      ,
     .             ,             /|OF|              | R2 |     ,
                  ,  +----+   +--++--+             /+----+    ,
     .           ,   |    |   |OA|    \     /-----/ / /      ,
                ,    | R1 |---+--+--\  +--+/       / /      ,
     .         ,     +----+\   |  \  \-|OE|-------/ /      ,
              ,        /    \  |   \ /-+--+        /      ,
     .       ,        /      \+--+  X    |        /      ,
            ,        /        |OB|-/ \   |    +----+    ,
     .     ,        /         +--+-\  \+--+   |    |   ,
          ,        /         /   \  \--|OD|---| R4 |  ,
     .   ,     +----+ /-----/     +--+ +--+   +----+ ,
        ,      |    |/            |OC|/             ,
     . ,       | R3 |             +--+             ,
      ,        +----+                             ,
     .,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
]]></artwork></figure>

<t>In this use case, the Packet/Optical Coordinator needs to set up an
   optimal underlying path for an IP link between R1 and R2.</t>

<t>As depicted in <xref target="fig-poi-abstraction"/>, the Packet/Optical Coordinator has only an
   "abstracted view" of the physical network, and it does not know the
   feasibility or the cost of the possible optical paths (e.g., VP1-VP4
   and VP2-VP5), which depend on the current status of the physical
   resources within the optical network and on vendor-specific optical
   attributes.</t>

<t>The Packet/Optical Coordinator can request the underlying Optical
   Domain Controller to compute a set of potential optimal paths, taking
   into account optical constraints. Then, based on its own constraints,
   policy and knowledge (e.g. cost of the access links), it can choose
   which one of these potential paths to use to set up the optimal end-
   to-end path crossing optical network.</t>

<figure title="Packet/Optical Integration path computation example" anchor="fig-poi-example"><artwork type="ascii-art" name="poi-example.txt"><![CDATA[
                    ............................
                    :                          :
                    O VP1                  VP4 O
           cost=10 /:\                        /:\ cost=10
                  / : \----------------------/ : \
          +----+ /  :         cost=50          :  \ +----+
          |    |/   :                          :   \|    |
          | R1 |    :                          :    | R2 |
          |    |\   :                          :   /|    |
          +----+ \  :  /--------------------\  :  / +----+
                  \ : /       cost=55        \ : /
            cost=5 \:/                        \:/ cost=5
                    O VP2                  VP5 O
                    :                          :
                    :..........................:
]]></artwork></figure>

<t>For example, in <xref target="fig-poi-example"/>, the Packet/Optical Coordinator can request
   the Optical Domain Controller to compute the paths between VP1-VP4
   and VP2-VP5 and then decide to set up the optimal end-to-end path
   using the VP2-VP5 optical path even if this is not the optimal path
   from the optical domain perspective.</t>

<t>Considering the dynamicity of the connectivity constraints of an
   optical domain, it is possible that a path computed by the Optical
   Domain Controller when requested by the Packet/Optical Coordinator is
   no longer valid/available when the Packet/Optical Coordinator
   requests it to be set up. This is further discussed in <xref target="rpc-motivation"/>.</t>

</section>
<section anchor="md-uc"><name>Multi-domain TE networks</name>

<t>In this use case there are two TE domains which are interconnected
   together by multiple inter-domains links.</t>

<t>A possible example could be a multi-domain optical network.</t>

<figure title="Multi-domain multi-link interconnection" anchor="md-ml-connection"><artwork type="ascii-art" name="multi-domain-use-case.txt"><![CDATA[
                            +--------------+
                            | Multi-Domain |
                            | Controller   |
                            +---+------+---+
                                |      |
                   +------------+      |
                   |                   +-----------+
            +------V-----+                         |
            |            |                         |
            | TE Domain  |                  +------V-----+
            | Controller |                  |            |
            |      1     |                  | TE Domain  |
            +------+-----+                  | Controller |
                   |                        |      2     |
                   |                        +------+-----+
          .........V..........                     |
          :                  :                     |
         +-----+             :                     |
         |     |             :            .........V..........
         |  X  |             :            :                  :
         |     |          +-----+      +-----+                :
         +-----+          |     |      |     |               :
          :               |  C  |------|  E  |               :
      +-----+    +-----+ /|     |      |     |\ +-----+    +-----+
      |     |    |     |/ +-----+      +-----+ \|     |    |     |
      |  A  |----|  B  |     :            :     |  G  |----|  H  |
      |     |    |     |\    :            :    /|     |    |     |
      +-----+    +-----+ \+-----+      +-----+/ +-----+    +-----+
          :               |     |      |     |               :
          :               |  D  |------|  F  |               :
          :               |     |      |     |          +-----+
          :               +-----+      +-----+          |     |
          :                  :            :             |  Y  |
          :                  :            :             |     |
          :   TE domain 1    :            : TE domain 2 +-----+
          :..................:            :.................:
]]></artwork></figure>

<t>In order to set up an end-to-end multi-domain TE path (e.g., between
   nodes A and H), the Multi-Domain Controller needs to know the
   feasibility or the cost of the possible TE paths within the two TE
   domains, which depend on the current status of the physical resources
   within each TE domain. This is more challenging in case of optical
   networks because the optimal paths depend also on vendor-specific
   optical attributes (which may be different in the two domains if they
   are provided by different vendors).</t>

<t>In order to set up a multi-domain TE path (e.g., between nodes A and
   H), the Multi-Domain Controller can request the TE Domain Controllers
   to compute a set of intra-domain optimal paths and take decisions
   based on the information received. For example:</t>

<t><list style="symbols">
  <t>The Multi-Domain Controller asks TE Domain Controllers to provide
set of paths between A-C, A-D, E-H and F-H</t>
  <t>TE Domain Controllers return a set of feasible paths with the
associated costs: the path A-C is not part of this set (in optical
networks, it is typical to have some paths not being feasible due
to optical constraints that are known only by the Optical Domain
Controller)</t>
  <t>The Multi-Domain Controller will select the path A-D-F-H since it
is the only feasible multi-domain path and then request the TE
Domain Controllers to set up the A-D and F-H intra-domain paths</t>
  <t>If there are multiple feasible paths, the Multi-Domain Controller
can select the optimal path knowing the cost of the intra-domain
paths (provided by the TE domain controllers) and the cost of the
inter-domain links (known by the Multi-Domain Controller)  <vspace blankLines='1'/>
This approach may have some scalability issues when the number of TE
domains is quite big (e.g. 20).  <vspace blankLines='1'/>
In this case, it would be worthwhile using the abstract TE topology
information provided by the TE Domain Controllers to limit the number
of potential optimal end-to-end paths and then request path
computation from fewer TE Domain Controllers in order to decide what
the optimal path within this limited set is.  <vspace blankLines='1'/>
For more details, see <xref target="topo-pc-complement"/>.</t>
</list></t>

</section>
<section anchor="dci-uc"><name>Data Center Interconnections</name>

<t>In these use case, there is a TE domain which is used to provide
   connectivity between Data Centers which are connected with the TE
   domain using access links.</t>

<figure title="Data Center Interconnection use case" anchor="fig-dci-uc"><artwork type="ascii-art" name="dci-use-case.txt"><![CDATA[
                        +--------------+
                        | Cloud Network|
                        | Orchestrator |
                        +--------------+
                          |  |  |  |
            +-------------+  |  |  +------------------------+
            |                |  +------------------+        |
            |       +--------V---+                 |        |
            |       |            |                 |        |
            |       | TE Network |                 |        |
     +------V-----+ | Controller |          +------V-----+  |
     | DC         | +------------+          | DC         |  |
     | Controller |     |                   | Controller |  |
     +------------+     |   +-----+         +------------+  |
          |         ....V...|     |........         |       |
          |         :       |  P  |       :         |       |
     .....V.....    :      /+-----+\      :    .....V.....  |
     :         :  +-----+ /    |    \ +-----+  :         :  |
     :  DC1 || :  |     |/     |     \|     |  :  DC2 || :  |
     :    ||||----| PE1 |      |      | PE2 |----   |||| :  |
     : _|||||| :  |     |\     |     /|     |  : _|||||| :  |
     :         :  +-----+ \ +-----+ / +-----+  :         :  |
     :.........:    :      \|     |/      :    :.........:  |
                    :.......| PE3 |.......:                 |
                            |     |                         |
                            +-----+               +---------V--+
                          .....|.....             | DC         |
                          :         :             | Controller |
                          :  DC3 || :             +------------+
                          :    |||| :                  |
                          : _|||||| <------------------+
                          :         :
                          :.........:
]]></artwork></figure>

<t>In this use case, there is the need to transfer data from Data Center
   1 (DC1) to either DC2 or DC3 (e.g. workload migration).</t>

<t>The optimal decision depends both on the cost of the TE path (DC1-DC2
   or DC1-DC3) and of the Data Center resources within DC2 or DC3.</t>

<t>The Cloud Network Orchestrator needs to make a decision for optimal
   connection based on TE network constraints and Data Center resources.</t>

<t>It may not be able to make this decision because it has only an
   abstract view of the TE network (as in <xref target="poi-uc"/>).</t>

<t>The Cloud Network Orchestrator can request to the TE Network
   Controller to compute the cost of the possible TE paths (e.g., DC1-
   DC2 and DC1-DC3) and to the DC Controller to provide the information
   it needs about the required Data Center resources within DC2 and DC3
   and then it can take the decision about the optimal solution based on
   this information and its policy.</t>

</section>
<section anchor="brpc-uc"><name>Backward Recursive Path Computation scenario</name>

<t><xref target="RFC5441"/> has defined the Virtual Source Path Tree (VSPT) flag within the RP (Request Parameters) object in order to compute inter-domain paths following a
   "Backward Recursive Path Computation" (BRPC) method. The main
   principle is to forward the PCReq message up to the destination
   domain. Then, each PCE involved in the computation will compute its
   part of the path and send it back to the requester through PCE
   Response message. The resulting computation is spread from
   destination PCE to source PCE. Each PCE is in charge of merging the
   path it received with the one it calculated. At the end, the source
   PCE merges its local part of the path with the received one to
   achieve the end-to-end path.</t>

<t><xref target="fig-brpc-example"/> below show a typical BRPC scenario where 3 PCEs cooperate to
   compute inter-domain paths.</t>

<figure title="BRPC Scenario" anchor="fig-brpc-example"><artwork type="ascii-art" name="brpc-scenario.txt"><![CDATA[
                   +----------------+          +----------------+
                   |  Domain (B)    |          |  Domain (C)    |
                   |                |          |                |
                   |        /-------|---PCEP---|--------\       |
                   |       /        |          |         \      |
                   |   (PCE)        |          |   -    (PCE)   |
                   |    /           <---------->  |D|           |
                   |   /            |  Inter   |   -            |
                   +---|----^-------+  Domain  +----------------+
                       |    |          Link
                     PCEP   |
                       |    | Inter-domain Link
                       |    |
                   +---|----v-------+
                   |   |            |
                   |   | Domain (A) |
                   |   \            |
                   |  (PCE)    -    |
                   |          |S|   |
                   |           -    |
                   +----------------+
]]></artwork></figure>

<t>In this use case, a client can use the YANG data model defined in
   this document to request path computation from the PCE that controls
   the source of the tunnel. For example, a client can request to the
   PCE of domain A to compute a path from a source S, within domain A,
   to a destination D, within domain C. Then PCE of domain A will use
   PCEP protocol, as per <xref target="RFC5441"/>, to compute the path from S to D and
   in turn gives the final answer to the requester.</t>

</section>
<section anchor="hpce-uc"><name>Hierarchical PCE scenario</name>

<t><xref target="RFC6805"/> has defined an architecture and extensions to the PCE
   standard to compute inter-domain path following a hierarchical
   method. Two new roles have been defined: parent PCE and child PCE.
   The parent PCE is in charge to coordinate the end-to-end path
   computation. For that purpose it sends to each child PCE involved in
   the multi-domain path computation a PCE Request message to obtain the
   local part of the path. Once received all answer through PCE Response
   message, the parent PCE will merge the different local parts of the
   path to achieve the end-to-end path.</t>

<t><xref target="fig-hpce-example"/> below shows a typical hierarchical scenario where a parent
   PCE request end-to-end path to the different child PCE. Note that a
   PCE could take independently the role of child or parent PCE
   depending of which PCE will request the path.</t>

<figure title="Hierarchical domain topology from RFC6805" anchor="fig-hpce-example"><artwork type="ascii-art" name="hierarchical-domain-topology.txt"><![CDATA[
    -----------------------------------------------------------------
    |   Domain 5                                                      |
    |                              -----                              |
    |                             |PCE 5|                             |
    |                              -----                              |
    |                                                                 |
    |    ----------------     ----------------     ----------------   |
    |   | Domain 1       |   | Domain 2       |   | Domain 3       |  |
    |   |                |   |                |   |                |  |
    |   |        -----   |   |        -----   |   |        -----   |  |
    |   |       |PCE 1|  |   |       |PCE 2|  |   |       |PCE 3|  |  |
    |   |        -----   |   |        -----   |   |        -----   |  |
    |   |                |   |                |   |                |  |
    |   |            ----|   |----        ----|   |----            |  |
    |   |           |BN11+---+BN21|      |BN23+---+BN31|           |  |
    |   |   -        ----|   |----        ----|   |----        -   |  |
    |   |  |S|           |   |                |   |           |D|  |  |
    |   |   -        ----|   |----        ----|   |----        -   |  |
    |   |           |BN12+---+BN22|      |BN24+---+BN32|           |  |
    |   |            ----|   |----        ----|   |----            |  |
    |   |                |   |                |   |                |  |
    |   |         ----   |   |                |   |   ----         |  |
    |   |        |BN13|  |   |                |   |  |BN33|        |  |
    |    -----------+----     ----------------     ----+-----------   |
    |                \                                /               |
    |                 \       ----------------       /                |
    |                  \     |                |     /                 |
    |                   \    |----        ----|    /                  |
    |                    ----+BN41|      |BN42+----                   |
    |                        |----        ----|                       |
    |                        |                |                       |
    |                        |        -----   |                       |
    |                        |       |PCE 4|  |                       |
    |                        |        -----   |                       |
    |                        |                |                       |
    |                        | Domain 4       |                       |
    |                         ----------------                        |
    |                                                                 |
     -----------------------------------------------------------------
]]></artwork></figure>

<t>In this use case, a client can use the YANG data model defined in
   this document to request to the parent PCE a path from a source S to
   a destination D. The parent PCE will in turn contact the child PCEs
   through PCEP protocol to compute the end-to-end path and then return
   the computed path to the client, using the YANG data model defined in
   this document. For example the YANG data model can be used to request
   to PCE5 acting as parent PCE to compute a path from source S, within
   domain 1, to destination D, within domain 3. PCE5 will contact child
   PCEs of domain 1, 2 and 3 to obtain local part of the end-to-end path
   through the PCEP protocol. Once received the PCRep message, it
   merges the answers to compute the end-to-end path and send it back to
   the client.</t>

</section>
</section>
<section anchor="motivations"><name>Motivations</name>

<t>This section provides the motivation for the YANG data model defined
   in this document.</t>

<t><xref target="yang-motivation"/> describes the motivation for a YANG data model to request
   path computation.</t>

<t><xref target="topo-interaction"/> describes the motivation for a YANG data model which
   complements the TE topology YANG data model defined in <xref target="RFC8795"/>.</t>

<t><xref target="rpc-motivation"/> describes the motivation for a YANG RPC which complements
   the TE tunnel YANG data model defined in <xref target="I-D.ietf-teas-yang-te"/>.</t>

<section anchor="yang-motivation"><name>Motivation for a YANG Model</name>

<section anchor="benefits-of-common-data-models"><name>Benefits of common data models</name>

<t>The YANG data model for requesting path computation is closely
   aligned with the YANG data models that provide (abstract) TE topology
   information, i.e., <xref target="RFC8795"/> as well as that are used to configure
   and manage TE tunnels, i.e., <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>There are many benefits in aligning the data model used for path
   computation requests with the YANG data models used for TE topology
   information and for TE tunnels configuration and management:</t>

<t><list style="symbols">
  <t>There is no need for an error-prone mapping or correlation of
information.</t>
  <t>It is possible to use the same endpoint identifiers in path
computation requests and in the topology modeling.</t>
  <t>The attributes used for path computation constraints are the same
as those used when setting up a TE tunnel.</t>
</list></t>

</section>
<section anchor="benefits-of-a-single-interface"><name>Benefits of a single interface</name>

<t>The system integration effort is typically lower if a single,
   consistent interface is used by controllers, i.e., one data modeling
   language (i.e., YANG) and a common protocol (e.g., NETCONF or
   RESTCONF).</t>

<t>Practical benefits of using a single, consistent interface include:</t>

<t><list style="numbers">
  <t>Simple authentication and authorization: The interface between
different components has to be secured. If different protocols
have different security mechanisms, ensuring a common access
control model may result in overhead. For instance, there may be a
need to deal with different security mechanisms, e.g., different
credentials or keys. This can result in increased integration
effort.</t>
  <t>Consistency: Keeping data consistent over multiple different
interfaces or protocols is not trivial. For instance, the sequence
of actions can matter in certain use cases, or transaction
semantics could be desired. While ensuring consistency within one
protocol can already be challenging, it is typically cumbersome to
achieve that across different protocols.</t>
  <t>Testing: System integration requires comprehensive testing,
including corner cases. The more different technologies are
involved, the more difficult it is to run comprehensive test cases
and ensure proper integration.</t>
  <t>Middle-box friendliness: Provider and consumer of path computation
requests may be located in different networks, and middle-boxes
such as firewalls, NATs, or load balancers may be deployed. In
such environments it is simpler to deploy a single protocol. Also,
it may be easier to debug connectivity problems.</t>
  <t>Tooling reuse: Implementers may want to implement path computation
requests with tools and libraries that already exist in
controllers and/or orchestrators, e.g., leveraging the rapidly
growing eco-system for YANG tooling.</t>
</list></t>

</section>
<section anchor="extensibility"><name>Extensibility</name>

<t>Path computation is only a subset of the typical functionality of a
   controller. In many use cases, issuing path computation requests
   comes along with the need to access other functionality on the same
   system. In addition to obtaining TE topology, for instance also
   configuration of services (set-up/modification/deletion) may be
   required, as well as:</t>

<t><list style="numbers">
  <t>Receiving notifications for topology changes as well as
integration with fault management</t>
  <t>Performance management such as retrieving monitoring and telemetry
data</t>
  <t>Service assurance, e.g., by triggering OAM functionality</t>
  <t>Other fulfilment and provisioning actions beyond tunnels and
services, such as changing QoS configurations  <vspace blankLines='1'/>
YANG is a very extensible and flexible data modeling language that
can be used for all these use cases.</t>
</list></t>

</section>
</section>
<section anchor="topo-interaction"><name>Interactions with TE topology</name>

<t>The use cases described in <xref target="use-cases"/> have been described assuming
   that the topology view exported by each underlying controller to its
   client is aggregated using the "virtual node model", defined in
   <xref target="RFC7926"/>.</t>

<t>TE topology information, e.g., as provided by <xref target="RFC8795"/>, could in
   theory be used by an underlying controller to provide TE information
   to its client thus allowing a PCE available within its client to
   perform multi-domain path computation on its own, without requesting
   path computations to the underlying controllers.</t>

<t>In case the client does not implement a PCE function, as discussed in
   <xref target="intro"/>, it could not perform path computation based on TE topology
   information and would instead need to request path computation from
   the underlying controllers to get the information it needs to find
   the optimal end-to-end path.</t>

<t>In case the client implements a PCE function, as discussed in 
   <xref target="intro"/>, the TE topology information needs to be complete and accurate,
   which would bring to scalability issues.</t>

<t>Using TE topology to provide a "virtual link model" aggregation, as
   described in <xref target="RFC7926"/>, may be insufficient, unless the aggregation
   provides complete and accurate information, which would still cause
   scalability issues, as described in <xref target="topo-aggregation"/> below.</t>

<t>Using TE topology abstraction, as described in <xref target="RFC7926"/>, may lead to
   compute an unfeasible path, as described in <xref target="RFC7926"/> in 
   <xref target="topo-abstraction"/> below.</t>

<t>Therefore when computing an optimal multi-domain path, there is a
   scalability trade-off between providing complete and accurate TE
   information and the number of path computation requests to the
   underlying controllers.</t>

<t>The TE topology information used, in a complimentary way, to reduce
   the number for path computation requests to the underlying
   controllers, are described in <xref target="topo-pc-complement"/> below.</t>

<section anchor="topo-aggregation"><name>TE topology aggregation</name>

<t>Using the TE topology model, as defined in <xref target="RFC8795"/>, the underlying
   controller can export the whole TE domain as a single TE node with a
   "detailed connectivity matrix" (which provides specific TE
   attributes, such as delay, Shared Risk Link Groups (SRLGs) and other
   TE metrics, between each ingress and egress links).</t>

<t>The information provided by the "detailed connectivity matrix" would
   be equivalent to the information that should be provided by "virtual
   link model" as defined in <xref target="RFC7926"/>.</t>

<t>For example, in the Packet/Optical Integration use case, described in
   <xref target="poi-uc"/>, the Optical Domain Controller can make the information
   shown in <xref target="fig-poi-example"/> available to the Packet/Optical Coordinator as part
   of the TE topology information and the Packet/Optical Coordinator
   could use this information to calculate on its own the optimal path
   between R1 and R2, without requesting any additional information to
   the Optical Domain Controller.</t>

<t>However, when designing the amount of information to provide within
   the "detailed connectivity matrix", there is a tradeoff to be
   considered between accuracy (i.e., providing "all" the information
   that might be needed by the PCE available within the client) and
   scalability.</t>

<t><xref target="poi-multi-path"/> below shows another example, similar to <xref target="fig-poi-example"/>, where
   there are two possible Optical paths between VP1 and VP4 with
   different properties (e.g., available bandwidth and cost).</t>

<figure title="Packet/Optical Integration path computation Example with multiple choices" anchor="poi-multi-path"><artwork type="ascii-art" name="poi-example-multiple.txt"><![CDATA[
                    ............................
                    :  /--------------------\  :
                    : /       cost=65        \ :
                    :/    available-bw=10G    \:
                    O VP1                  VP4 O
           cost=10 /:\                        /:\ cost=10
                  / : \----------------------/ : \
          +----+ /  :         cost=50          :  \ +----+
          |    |/   :     available-bw=2G      :   \|    |
          | R1 |    :                          :    | R2 |
          |    |\   :                          :   /|    |
          +----+ \  :  /--------------------\  :  / +----+
                  \ : /       cost=55        \ : /
            cost=5 \:/    available-bw=3G     \:/ cost=5
                    O VP2                  VP5 O
                    :                          :
                    :..........................:
]]></artwork></figure>

<t>If the information in the "detailed connectivity matrix" is not
   complete/accurate, we can have the following drawbacks:</t>

<t><list style="symbols">
  <t>If only the VP1-VP4 path with available bandwidth of 2 Gb/s and
cost 50 is reported, the client's PCE will fail to compute a 5
Gb/s path between routers R1 and R2, although this would be
feasible;</t>
  <t>If only the VP1-VP4 path with available bandwidth of 10 Gb/s and
cost 65 is reported, the client's PCE will compute, as optimal,
the 1 Gb/s path between R1 and R2 going through the VP2-VP5 path
within the optical domain while the optimal path would actually be
the one going thought the VP1-VP4 sub-path (with cost 50) within
the optical domain.  <vspace blankLines='1'/>
Reporting all the information, as in <xref target="poi-multi-path"/>, using the "detailed
 connectivity matrix", is quite challenging from a scalability
 perspective. The amount of this information is not just based on
 number of end points (which would scale as N-square), but also on
 many other parameters, including client rate, user
 constraints/policies for the service, e.g. max latency &lt; N ms, max
 cost, etc., exclusion policies to route around busy links, min
 Optical Signal to Noise Ratio (OSNR) margin, max pre-Forward Error
 Correction (FEC) Bit Error Rate (BER) etc. All these constraints
 could be different based on connectivity requirements.  <vspace blankLines='1'/>
It is also worth noting that the "connectivity matrix" has been
 originally defined in Wavelength Switched Optical Networks (WSON),
 <xref target="RFC7446"/>, to report the connectivity constrains of a physical node
 within the Wavelength Division Multiplexing (WDM) network: the
 information it contains is pretty "static" and therefore, once taken
 and stored in the TE data base, it can be always being considered
 valid and up-to-date in path computation request.  <vspace blankLines='1'/>
The "connectivity matrix" is sometimes confused with "optical reach
 table" that contain multiple (e.g. k-shortest) regen-free reachable
 paths for every A-Z node combination in the network. Optical reach
 tables can be calculated offline, utilizing vendor optical design and
 planning tools, and periodically uploaded to the Controller: these
 optical path reach tables are fairly static. However, to get the
 connectivity matrix, between any two sites, either a regen free path
 can be used, if one is available, or multiple regen free paths are
 concatenated to get from the source to the destination, which can be
 a very large combination. Additionally, when the optical path within
 optical domain needs to be computed, it can result in different paths
 based on input objective, constraints, and network conditions. In
 summary, even though "optical reach table" is fairly static, which
 regen free paths to build the connectivity matrix between any source
 and destination is very dynamic, and is done using very sophisticated
 routing algorithms.  <vspace blankLines='1'/>
Using the "basic connectivity matrix" with an abstract node to
 abstract the information regarding the connectivity constraints of an
 Optical domain, would make this information more "dynamic" since the
 connectivity constraints of an optical domain can change over time
 because some optical paths that are feasible at a given time may
 become unfeasible at a later time when e.g., another optical path is
 established.  <vspace blankLines='1'/>
The information in the "detailed connectivity matrix" is even more
 dynamic since the establishment of another optical path may change
 some of the parameters (e.g., delay or available bandwidth) in the
 "detailed connectivity matrix" while not changing the feasibility of
 the path.  <vspace blankLines='1'/>
There is therefore the need to keep the information in the "detailed
 connectivity matrix" updated which means that there another tradeoff
 between the accuracy (i.e., providing "all" the information that
 might be needed by the client's PCE) and having up-to-date
 information. The more the information is provided and the longer it
 takes to keep it up-to-date which increases the likelihood that the
 client's PCE computes paths using not updated information.  <vspace blankLines='1'/>
It seems therefore quite challenging to have a "detailed connectivity
 matrix" that provides accurate, scalable and updated information to
 allow the client's PCE to take optimal decisions by its own.  <vspace blankLines='1'/>
Considering the example in <xref target="poi-multi-path"/> with the approach defined in this
 document, the client, when it needs to set up an end-to-end path, it
 can request the Optical Domain Controller to compute a set of optimal
 paths (e.g., for VP1-VP4 and VP2-VP5) and take decisions based on the
 information received:</t>
  <t>When setting up a 5 Gb/s path between routers R1 and R2, the
Optical Domain Controller may report only the VP1-VP4 path as the
only feasible path: the Packet/Optical Coordinator can
successfully set up the end-to-end path passing though this
optical path;</t>
  <t>When setting up a 1 Gb/s path between routers R1 and R2, the
Optical Domain Controller (knowing that the path requires only 1
Gb/s) can report both the VP1-VP4 path, with cost 50, and the VP2-
VP5 path, with cost 65. The Packet/Optical Coordinator can then
compute the optimal path which is passing thought the VP1-VP4 sub-
path (with cost 50) within the optical domain.</t>
</list></t>

</section>
<section anchor="topo-abstraction"><name>TE topology abstraction</name>

<t>Using the TE topology model, as defined in <xref target="RFC8795"/>, the underlying
   controller can export to its client an abstract TE topology, composed
   by a set of TE nodes and TE links, representing the abstract view of
   the topology under its control.</t>

<t>For example, in the multi-domain TE network use case, described in
   <xref target="md-uc"/>, the TE Domain Controller 1 can export a TE topology
   encompassing the TE nodes A, B, C and D and the TE links
   interconnecting them. In a similar way, the TE Domain Controller 2
   can export a TE topology encompassing the TE nodes E, F, G and H and
   the TE links interconnecting them.</t>

<t>In this example, for simplicity reasons, each abstract TE node maps
   with each physical node, but this is not necessary.</t>

<t>In order to set up a multi-domain TE path (e.g., between nodes A and
   H), the Multi-Domain Controller can compute by its own an optimal
   end-to-end path based on the abstract TE topology information
   provided by the domain controllers. For example:</t>

<t><list style="symbols">
  <t>Multi-Domain Controller can compute, based on its own TED data,
the optimal multi-domain path being A-B-C-E-G-H, and then request
the TE Domain Controllers to set up the A-B-C and E-G-H intra-
domain paths</t>
  <t>But, during path set-up, the TE Domain Controller may find out
that A-B-C intra-domain path is not feasible (as discussed in
<xref target="md-uc"/>, in optical networks it is typical to have some paths
not being feasible due to optical constraints that are known only
by the Optical Domain Controller), while only the path A-B-D is
feasible</t>
  <t>So what the Multi-Domain Controller has computed is not good and
it needs to re-start the path computation from scratch  <vspace blankLines='1'/>
As discussed in <xref target="topo-aggregation"/>, providing more extensive abstract
information from the TE Domain Controllers to the Multi-Domain
Controller may lead to scalability problems.  <vspace blankLines='1'/>
In a sense this is similar to the problem of routing and wavelength
assignment within an optical domain. It is possible to do first
routing (step 1) and then wavelength assignment (step 2), but the
chances of ending up with a good path is low. Alternatively, it is
possible to do combined routing and wavelength assignment, which is
known to be a more optimal and effective way for optical path set-up.
Similarly, it is possible to first compute an abstract end-to-end
path within the Multi-Domain Controller (step 1) and then compute an
intra-domain path within each optical domain (step 2), but there are
more chances not to find a path or to get a suboptimal path than by
performing multiple per-domain path computations and then stitching
them together.</t>
</list></t>

</section>
<section anchor="topo-pc-complement"><name>Complementary use of the TE topology</name>

<t>As discussed in <xref target="md-uc"/>, there are some scalability issues with
   path computation requests in a multi-domain TE network with many TE
   domains, in terms of the number of requests to send to the TE Domain
   Controllers. It would therefore be worthwhile using the abstract TE
   topology information provided by the TE Domain Controllers to limit
   the number of requests.</t>

<t>An example can be described considering the multi-domain abstract TE
   topology shown in <xref target="fig-topo-many-domains"/>. In this example, an end-to-end TE path
   between domains A and F needs to be set up. The transit TE domain
   should be selected between domains B, C, D and E.</t>

<figure title="Multi-domain with many domains (Topology information)" anchor="fig-topo-many-domains"><artwork type="ascii-art" name="many-domains-topology.txt"><![CDATA[
                          .........B.........
                          : _ _ _ _ _ _ _ _ :
                          :/               \:
                      +---O  NOT FEASIBLE   O---+
                cost=5|   :                 :   |
    ......A......     |   :.................:   |     ......F......
    :           :     |                         |     :           :
    :           O-----+   .........C.........   +-----O           :
    :           :         : /-------------\ :         :           :
    :           :         :/               \:         :           :
    :  cost<=20 O---------O   cost <= 30    O---------O cost<=20  :
    :          /: cost=5  :                 : cost=5  :\          :
    :  /------/ :         :.................:         : \------\  :
    : /         :                                     :         \ :
    :/ cost<=25 :         .........D.........         : cost<=25 \:
    O-----------O-------+ : /-------------\ : +-------O-----------O
    :\          : cost=5| :/               \: |cost=5 :          /:
    : \         :       +-O   cost <= 30    O-+       :         / :
    :  \------\ :         :                 :         : /------/  :
    : cost>=30 \:         :.................:         :/ cost>=30 :
    :           O-----+                         +-----O           :
    :...........:     |   .........E.........   |     :...........:
                      |   : /-------------\ :   |
                cost=5|   :/               \:   |cost=5
                      +---O   cost >= 30    O---+
                          :                 :
                          :.................:
]]></artwork></figure>

<t>The actual cost of each intra-domain path is not known a priori from
   the abstract topology information. The Multi-Domain Controller only
   knows, from the TE topology provided by the underlying domain
   controllers, the feasibility of some intra-domain paths and some
   upper-bound and/or lower-bound cost information. With this
   information, together with the cost of inter-domain links, the Multi-
   Domain Controller can understand by its own that:</t>

<t><list style="symbols">
  <t>Domain B cannot be selected as the path connecting domains A and F
is not feasible;</t>
  <t>Domain E cannot be selected as a transit domain since it is known
from the abstract topology information provided by domain
controllers that the cost of the multi-domain path A-E-F (which is
100, in the best case) will be always be higher than the cost of
the multi-domain paths A-D-F (which is 90, in the worst case) and
A-C-F (which is 80, in the worst case).  <vspace blankLines='1'/>
Therefore, the Multi-Domain Controller can understand by its own that
 the optimal multi-domain path could be either A-D-F or A-C-F but it
 cannot know which one of the two possible option actually provides
 the optimal end-to-end path.  <vspace blankLines='1'/>
The Multi-Domain Controller can therefore request path computation
 only to the TE Domain Controllers A, D, C and F (and not to all the
 possible TE Domain Controllers).</t>
</list></t>

<figure title="Multi-domain with many domains (Path Computation information)" anchor="fig-pc-many-domains"><artwork type="ascii-art" name="many-domain-path-computation.txt"><![CDATA[
                          .........B.........
                          :                 :
                      +---O                 O---+
    ......A......     |   :.................:   |     ......F......
    :           :     |                         |     :           :
    :           O-----+   .........C.........   +-----O           :
    :           :         : /-------------\ :         :           :
    :           :         :/               \:         :           :
    :  cost=15  O---------O    cost = 25    O---------O  cost=10  :
    :          /: cost=5  :                 : cost=5  :\          :
    :  /------/ :         :.................:         : \------\  :
    : /         :                                     :         \ :
    :/ cost=10  :         .........D.........         : cost=15  \:
    O-----------O-------+ : /-------------\ : +-------O-----------O
    :           : cost=5| :/               \: |cost=5 :           :
    :           :       +-O    cost = 15    O-+       :           :
    :           :         :                 :         :           :
    :           :         :.................:         :           :
    :           O-----+                         +-----O           :
    :...........:     |   .........E.........   |     :...........:
                      |   :                 :   |
                      +---O                 O---+
                          :.................:
]]></artwork></figure>

<t>Based on these requests, the Multi-Domain Controller can know the
   actual cost of each intra-domain paths which belongs to potential
   optimal end-to-end paths, as shown in <xref target="fig-pc-many-domains"/>, and then compute the
   optimal end-to-end path (e.g., A-D-F, having total cost of 50,
   instead of A-C-F having a total cost of 70).</t>

</section>
</section>
<section anchor="rpc-motivation"><name>Path Computation RPC</name>

<t>The TE tunnel YANG data model, defined in <xref target="I-D.ietf-teas-yang-te"/>, can support
   the need to request path computation, as described in section 5.1.2
   of <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>This solution is stateful since the state of each created "compute-
   only" TE tunnel path needs to be maintained, in the YANG datastores
   (at least in the running datastore and operational datastore), and
   updated, when underlying network conditions change.</t>

<t>The RPC mechanism allows requesting path computation using a simple
   atomic operation, without creating any state in the YANG datastores,
   and it is the natural option/choice, especially with stateless PCE.</t>

<t>It is very useful to provide both the options of using an RPC as well
   as of setting up TE tunnel paths in "compute-only" mode. It is
   suggested to use the RPC as much as possible and to rely on
   "compute-only" TE tunnel paths, when really needed.</t>

<t>Using the RPC solution would imply that the underlying controller
   (e.g., a PNC) computes a path twice during the process to set up an
   LSP: at time T1, when its client (e.g., an MDSC) sends a path
   computation RPC request to it, and later, at time T2, when the same
   client (MDSC) creates a TE tunnel requesting the set-up of the LSP.
   The underlying assumption is that, if network conditions have not
   changed, the same path that has been computed at time T1 is also
   computed at time T2 by the underlying controller (e.g. PNC) and
   therefore the path that is set up at time T2 is exactly the same path
   that has been computed at time T1.</t>

<t>However, since the operation is stateless, there is no guarantee that
   the returned path would still be available when path set-up is
   requested: this does not cause major issues when the time between
   path computation and path set-up is short (especially if compared
   with the time that would be needed to update the information of a
   very detailed connectivity matrix).</t>

<t>In most of the cases, there is even no need to guarantee that the
   path that has been set up is the exactly same as the path that has
   been returned by path computation, especially if it has the same or
   even better metrics. Depending on the abstraction level applied by
   the server, the client may also not know the actual computed path.</t>

<t>The most important requirement is that the required global objectives
   (e.g., multi-domain path metrics and constraints) are met. For this
   reason a path verification phase is always necessary to verify that
   the actual path that has been set up meets the global objectives (for
   example in a multi-domain network, the resulting end-to-end path
   meets the required end-to-end metrics and constraints).</t>

<t>In most of the cases, even if the path being set up is not exactly
   the same as the path returned by path computation, its metrics and
   constraints are "good enough" and the path verification passes
   successfully. In the few corner cases where the path verification
   fails, it is possible repeat the whole process (path computation,
   path set-up and path verification).</t>

<t>In case it is required to set up at T2 exactly the same path computed
   at T1, the RPC solution should not be used and, instead, a "compute-
   only" TE tunnel path should be set up, allowing also notifications in
   case the computed path has been changed.</t>

<t>In this case, at time T1, the client (MDSC) creates a TE tunnel in a
   compute-only mode in the running datastore and later, at time T2,
   changes the configuration of that TE tunnel (not to be any more in a
   compute-only mode) to trigger the set-up of the LSP over the path
   which have been computed at time T1 and reported in the operational
   datastore.</t>

<t>It is worth noting that also using the "compute-only" TE tunnel path,
   although increasing the likelihood that the computed path is
   available at path set-up, does not guarantee that because
   notifications may not be reliable or delivered on time. Path
   verification is needed also in this case.</t>

<t>The solution based on "compute-only" TE tunnel path has also the
   following drawbacks:</t>

<t><list style="symbols">
  <t>Several messages required for any path computation</t>
  <t>Requires persistent storage in the underlying controller</t>
  <t>Need for garbage collection for stranded paths</t>
  <t>Process burden to detect changes on the computed paths in order to
provide notifications update</t>
</list></t>

<section anchor="temp-state"><name>Temporary reporting of the computed path state</name>

<t>This section describes an optional extension to the stateless
   behavior of the path computation RPC, where the underlying
   controller, after having received a path computation RPC request,
   maintains some "transient state" associated with the computed path,
   allowing the client to request the set-up of exactly that path, if
   still available.</t>

<t>This is similar to the "compute-only" TE tunnel path solution but, to
   avoid the drawbacks of the stateful approach, is leveraging the path
   computation RPC and the separation between configuration and
   operational datastore, as defined in the NMDA architecture <xref target="RFC8342"/>.</t>

<t>The underlying controller, after having computed a path, as requested
   by a path computation RPC, also creates a TE tunnel instance within
   the operational datastore, to store that computed path. This would be
   similar to a "compute-only" TE tunnel path, with the only difference
   that there is no associated TE tunnel instance within the running
   datastore.</t>

<t>Since the underlying controller stores in the operational datastore
   the computed path based on an abstract topology it exposes, it also
   remembers, internally, which is the actual native path (physical
   path), within its native topology (physical topology), associated
   with that compute-only TE tunnel instance.</t>

<t>Afterwards, the client (e.g., MDSC) can request the set-up of that
   specific path by creating a TE tunnel instance (not in compute-only
   mode) in the running datastore using the same tunnel-name of
   the existing TE tunnel in the operational datastore: this will
   trigger the underlying controller to set up that path, if still
   available.</t>

<t>There are still cases where the path being set up is not exactly the
   same as the path that has been computed:</t>

<t><list style="symbols">
  <t>When the tunnel is configured with path constraints which are not
compatible with the computed path;</t>
  <t>When the tunnel set-up is requested after the resources of the
computed path are no longer available;</t>
  <t>When the tunnel set-up is requested after the computed path is no
longer known (e.g. due to a server reboot) by the underlying
controller.  <vspace blankLines='1'/>
In all these cases, the underlying controller should compute and set
 up a new path.  <vspace blankLines='1'/>
Therefore the "path verification" phase, as described in <xref target="rpc-motivation"/>
 above, is always needed to check that the path that has been set up
 is still "good enough".  <vspace blankLines='1'/>
Since this new approach is not completely stateless, garbage
 collection is implemented using a timeout that, when it expires,
 triggers the removal of the computed path from the operational
 datastore. This operation is fully controlled by the underlying
 controller without the need for any action to be taken by the client
 that is not able to act on the operational datastore. The default
 value of this timeout is 10 minutes but a different value may be
 configured by the client.  <vspace blankLines='1'/>
In addition, it is possible for the client to tag each path
 computation request with a transaction-id allowing for a faster
 removal of all the paths associated with a transaction-id, without
 waiting for their timers to expire.  <vspace blankLines='1'/>
The underlying controller can remove from the operational datastore
 all the paths computed with a given transaction-id which have not
 been set up either when it receives a Path Delete RPC request for
 that transaction-id or, automatically, right after the set-up up of a
 path that has been previously computed with that transaction-id.  <vspace blankLines='1'/>
This possibility is useful when multiple paths are computed but, at
 most, only one is set up (e.g., in multi-domain path computation
 scenario scenarios). After the selected path has been set up (e.g, in
 one domain during multi-domain path set-up), all the other
 alternative computed paths can be automatically deleted by the
 underlying controller (since no longer needed). The client can also
 request, using the Path Delete RPC request, the underlying controller
 to remove all the computed paths, if none of them is going to be set
 up (e.g., in a transit domain not being selected by multi-domain path
 computation and so not being automatically deleted).  <vspace blankLines='1'/>
This approach is complimentary and not alternative to the timer which
 is always needed to avoid stranded computed paths being stored in the
 operational datastore when no path is set up and no explicit Path
 Delete RPC request is received.</t>
</list></t>

</section>
</section>
</section>
<section anchor="path-computation-and-optimization-for-multiple-paths"><name>Path computation and optimization for multiple paths</name>

<t>There are use cases, where it is advantageous to request path
   computation for a set of paths, through a network or through a
   network domain, using a single request <xref target="RFC5440"/>.</t>

<t>In this case, sending a single request for multiple path
   computations, instead of sending multiple requests for each path
   computation, would reduce the protocol overhead and it would consume
   less resources (e.g., threads in the client and server).</t>

<t>In the context of a typical multi-domain TE network, there could
   multiple choices for the ingress/egress points of a domain and the
   Multi-Domain Controller needs to request path computation between all
   the ingress/egress pairs to select the best pair. For example, in the
   example of <xref target="md-uc"/>, the Multi-Domain Controller needs to request
   the TE Network Controller 1 to compute the A-C and the A-D paths and
   to the TE Network Controller 2 to compute the E-H and the F-H paths.</t>

<t>It is also possible that the Multi-Domain Controller receives a
   request to set up a group of multiple end to end connections. The
   Multi-Domain Controller needs to request each TE domain Controller to
   compute multiple paths, one (or more) for each end to end connection.</t>

<t>There are also scenarios where it can be needed to request path
   computation for a set of paths in a synchronized fashion.</t>

<t>One example could be computing multiple diverse paths. Computing a
   set of diverse paths in an unsynchronized fashion, leads to the
   possibility of not being able to satisfy the diversity requirement.
   In this case, it is preferable to compute a sub-optimal primary path
   for which a diversely routed secondary path exists.</t>

<t>There are also scenarios where it is needed to request optimizing a
   set of paths using objective functions that apply to the whole set of
   paths, see <xref target="RFC5541"/>, e.g. to minimize the sum of the costs of all
   the computed paths in the set.</t>

</section>
<section anchor="yang-data-model-for-requesting-path-computation"><name>YANG data model for requesting Path Computation</name>

<t>This document define a YANG RPC to request path computation as an
   "augmentation" of tunnel-rpc, defined in <xref target="I-D.ietf-teas-yang-te"/>. This model
   provides the RPC input attributes that are needed to request path
   computation and the RPC output attributes that are needed to report
   the computed paths.</t>

<figure><artwork type="ascii-art" name="overview.txt"><![CDATA[
  augment /te:tunnels-path-compute/te:input/te:path-compute-info:
    +-- path-request* [request-id]
    |  ...

  augment /te:tunnels-path-compute/te:output/te:path-compute-result:
    +--ro response* [response-id]
       +--ro response-id                         uint32
       +--ro computed-paths-properties
       |  +--ro computed-path-properties* [k-index]
       |     ...
]]></artwork></figure>

<t>This model extensively re-uses the grouping defined in <xref target="I-D.ietf-teas-yang-te"/>
   and <xref target="RFC8776"/> to ensure maximal syntax and semantics commonality.</t>

<t>This YANG data model allows one RPC to include multiple path
   requests, each path request being identified by a request-id.
   Therefore, one RPC can return multiple responses, one for each path
   request, being identified by a response-id equal to the corresponding
   request-id. Each response reports one or more computed paths, as
   requested by the k-requested-paths attribute. By default, each
   response reports one computed path.</t>

<section anchor="synchronization-of-multiple-path-computation-requests"><name>Synchronization of multiple path computation requests</name>

<t>The YANG data model permits the synchronization of a set of multiple
   path requests (identified by specific request-id) all related to a
   "svec" container emulating the syntax of the Synchronization VECtor
   (SVEC) PCEP object, defined in <xref target="RFC5440"/>.</t>

<figure><artwork type="ascii-art" name="synchronization.txt"><![CDATA[
    +-- synchronization* []
       +-- svec
       |  +-- relaxable?      boolean
       |  +-- disjointness?   te-path-disjointness
       |  +-- request-id*     uint32
       +-- svec-constraints
       |  +-- path-metric-bound* [metric-type]
       |     +-- metric-type    identityref
       |     +-- upper-bound?   uint64
       +-- path-srlgs-lists
       |  +-- path-srlgs-list* [usage]
       |     +-- usage     identityref
       |     +-- values*   srlg
       +-- path-srlgs-names
       |  +-- path-srlgs-name* [usage]
       |     +-- usage    identityref
       |     +-- names*   string
       +-- exclude-objects
       |  +-- excludes* []
       |     +-- (type)?
       |        +--:(numbered-node-hop)
       |        |  +-- numbered-node-hop
       |        |     +-- node-id     te-node-id
       |        |     +-- hop-type?   te-hop-type
       |        +--:(numbered-link-hop)
       |        |  +-- numbered-link-hop
       |        |     +-- link-tp-id    te-tp-id
       |        |     +-- hop-type?     te-hop-type
       |        |     +-- direction?    te-link-direction
       |        +--:(unnumbered-link-hop)
       |        |  +-- unnumbered-link-hop
       |        |     +-- link-tp-id    te-tp-id
       |        |     +-- node-id       te-node-id
       |        |     +-- hop-type?     te-hop-type
       |        |     +-- direction?    te-link-direction
       |        +--:(as-number)
       |        |  +-- as-number-hop
       |        |     +-- as-number    inet:as-number
       |        |     +-- hop-type?    te-hop-type
       |        +--:(label)
       |           +-- label-hop
       |              +-- te-label
       |                 ...
       +-- optimizations
          +-- (algorithm)?
             +--:(metric) {te-types:path-optimization-metric}?
             |  +-- optimization-metric* [metric-type]
             |     +-- metric-type    identityref
             |     +-- weight?        uint8
             +--:(objective-function)
                      {te-types:path-optimization-objective-function}?
                +-- objective-function
                   +-- objective-function-type?   identityref
]]></artwork></figure>

<t>The model, in addition to the metric types, defined in <xref target="RFC8776"/>,
   which can be applied to each individual path request, supports also
   additional metric types, which apply to a set of synchronized
   requests, as referenced in <xref target="RFC5541"/>. These additional metric types
   are defined by the following YANG identities:</t>

<t><list style="symbols">
  <t>svec-metric-type: base YANG identity from which cumulative metric
types identities are derived.</t>
  <t>svec-metric-cumul-te: cumulative TE cost metric type, as defined
in <xref target="RFC5541"/>.</t>
  <t>svec-metric-cumul-igp: cumulative IGP cost metric type, as defined
in <xref target="RFC5541"/>.</t>
  <t>svec-metric-cumul-hop: cumulative Hop metric type, representing
the cumulative version of the Hop metric type defined in
<xref target="RFC8776"/>.</t>
  <t>svec-metric-aggregate-bandwidth-consumption: aggregate bandwidth
consumption metric type, as defined in <xref target="RFC5541"/>.</t>
  <t>svec-metric-load-of-the-most-loaded-link: load of the most loaded
link metric type, as defined in <xref target="RFC5541"/>.</t>
</list></t>

</section>
<section anchor="returned-metric-values"><name>Returned metric values</name>

<t>This YANG data model provides a way to return the values of the
   metrics computed by the path computation in the output of RPC,
   together with other important information (e.g. SRLG, affinities,
   explicit route), emulating the syntax of the "C" flag of the "METRIC"
   PCEP object <xref target="RFC5440"/>:</t>

<figure><artwork type="ascii-art" name="returned-metrics.txt"><![CDATA[
       |     +--ro path-properties
       |        +--ro path-metric* [metric-type]
       |        |  +--ro metric-type           identityref
       |        |  +--ro accumulative-value?   uint64
       |        +--ro path-affinities-values
       |        |  +--ro path-affinities-value* [usage]
       |        |     +--ro usage    identityref
       |        |     +--ro value?   admin-groups
       |        +--ro path-affinity-names
       |        |  +--ro path-affinity-name* [usage]
       |        |     +--ro usage            identityref
       |        |     +--ro affinity-name* [name]
       |        |        +--ro name    string
       |        +--ro path-srlgs-lists
       |        |  +--ro path-srlgs-list* [usage]
       |        |     +--ro usage     identityref
       |        |     +--ro values*   srlg
       |        +--ro path-srlgs-names
       |        |  +--ro path-srlgs-name* [usage]
       |        |     +--ro usage    identityref
       |        |     +--ro names*   string
       |        +--ro path-route-objects
       |        |  ...
       |        +--ro te-bandwidth
       |        |  ...
       |        +--ro disjointness-type?
       |                te-types:te-path-disjointness
]]></artwork></figure>

<t>It also allows the client to request which information (metrics, SRLG
   and/or affinities) should be returned:</t>

<figure><artwork type="ascii-art" name="requested-metrics.txt"><![CDATA[
    |  +-- request-id                            uint32
    |  ...
    |  +-- requested-metrics* [metric-type]
    |  |  +-- metric-type    identityref
    |  +-- return-srlgs?                         boolean
    |  +-- return-affinities?                    boolean
    |  ...
]]></artwork></figure>

<t>This feature is essential for path computation in a multi-domain TE
   network as described in <xref target="md-uc"/>. In this case, the metrics
   returned by a path computation requested to a given underlying
   controller must be used by the client to compute the best end-to-end
   path. If they are missing, the client cannot compare different paths
   calculated by the underlying controllers and choose the best one for
   the optimal end-to-end (e2e) path.</t>

</section>
<section anchor="multiple-paths-requests-for-the-same-te-tunnel"><name>Multiple Paths Requests for the same TE tunnel</name>

<t>The YANG data model allows including multiple requests for different
   paths intended to be used within the same tunnel or within different
   tunnels.</t>

<t>When multiple requested paths are intended to be used within the same
   tunnel (e.g., requesting path computation for the primary and
   secondary paths of a protected tunnel), the set of attributes that
   are intended to be configured on per-tunnel basis rather than on per-
   path basis are common to all these path requests. These attributes
   includes both attributes which can be configured only a per-tunnel
   basis (e.g., tunnel-name, source/destination TTP, encoding and
   switching-type) as well attributes which can be configured both on a
   per-tunnel and on a per-path basis (e.g., the te-bandwidth or the
   associations).</t>

<t>Therefore, a tunnel-attributes list is defined, within the path
   computation request RPC:</t>

<figure><artwork type="ascii-art" name="tunnel-attributes-list.txt"><![CDATA[
    +-- tunnel-attributes* [tunnel-name]
    |  +-- tunnel-name               string
    |  +-- encoding?                 identityref
    |  +-- switching-type?           identityref
    |  +-- source?                   te-types:te-node-id
    |  +-- destination?              te-types:te-node-id
    |  +-- src-tunnel-tp-id?         binary
    |  +-- dst-tunnel-tp-id?         binary
    |  +-- bidirectional?            boolean
    |  +-- association-objects
    |  |  ...
    |  +-- protection-type?          identityref
    |  +-- restoration-type?         identityref
    |  +-- restoration-scheme?       identityref
    |  +-- te-topology-identifier
    |  |  +-- provider-id?   te-global-id
    |  |  +-- client-id?     te-global-id
    |  |  +-- topology-id?   te-topology-id
    |  +-- te-bandwidth
    |  |  ...
    |  +-- link-protection?          identityref
    |  +-- setup-priority?           uint8
    |  +-- hold-priority?            uint8
    |  +-- signaling-type?           identityref
    |  +-- hierarchy
    |     +-- dependency-tunnels
    |     |  ...
    |     +-- hierarchical-link
    |        ...
]]></artwork></figure>

<t>The path requests that are intended to be used within the same tunnel
   should reference the same entry in the tunnel-attributes list. This
   allows:</t>

<t><list style="symbols">
  <t>avoiding repeating the same set of per-tunnel parameters on
multiple requested paths;</t>
  <t>the server to understand what attributes are intended to be
configured on a per-tunnel basis (e.g., the te-bandwidth
configured in the tunnel-attributes) and what attributes are
intended to be configured on a per-path basis(e.g., the te-
bandwidth configured in the path-request). This could be useful
especially when the server also creates a TE tunnel instance
within the operational datastore to report the computed paths, as
described in <xref target="temp-state"/>: in this case, the tunnel-name is also
used as the suggested name for that TE tunnel instance.  <vspace blankLines='1'/>
The YANG data model allows also including requests for paths intended
 to modify existing tunnels (e.g., adding a protection path for an
 existing un-protected tunnel). In this case, the per-tunnel
 attributes are already provided in an existing TE tunnel instance and
 do not need to be re-configured in the path computation request RPC.
 Therefore, these requests should reference an existing TE tunnel
 instance.  <vspace blankLines='1'/>
It is also possible to request computing paths without indicating in
 which tunnel they are intended to be used (e.g., in case of an
 unprotected tunnel). In this case, the per-tunnel attributes could be
 provided together with the per-path attributes in the path request,
 without using the tunnel-attributes list.  <vspace blankLines='1'/>
The choices below are defined to distinguish the cases above:</t>
  <t>whether the per-tunnel attributes are configured by reference
(providing a leafref), to:  <list style="symbols">
      <t>either a TE tunnel instance, if it exists;</t>
      <t>or to an entry of the tunnel-attributes list, if the TE tunnel
instance does not exist;</t>
    </list></t>
  <t>or by value, providing the set of tunnel attributes within the
path request:</t>
</list></t>

<figure><artwork type="ascii-art" name="tunnel-attributes.txt"><![CDATA[
    |  +-- (tunnel-attributes)?
    |  |  +--:(reference)
    |  |  |  +-- tunnel-reference
    |  |  |     +-- (tunnel-exist)
    |  |  |     |  +--:(tunnel-ref)
    |  |  |     |  |  +-- tunnel-ref                te:tunnel-ref
    |  |  |     |  +--:(tunnel-attributes-ref)
    |  |  |     |     +-- tunnel-attributes-ref     leafref
    |  |  |     +-- path-name?                      string
    |  |  |     +-- (path-role)
    |  |  |        ...
    |  |  +--:(value)
    |  |     +-- tunnel-name?                    string
    |  |     +-- path-name?                      string
    |  |     +-- (path-role)?
    |  |     |  ...
    |  |     ...
    |  |     +-- encoding?                       identityref
    |  |     +-- switching-type?                 identityref
    |  |     ...
]]></artwork></figure>

<section anchor="tunnel-attributes-specified-by-value"><name>Tunnel attributes specified by value</name>

<t>The (value) case provides the set of attributes that are configured
   only on per-tunnel basis (e.g., tunnel-name, source/destination TTP,
   encoding and switching-type).</t>

<t>In this case, it is assumed that the requested path will be the only
   path within a tunnel.</t>

<t>If the only path within a tunnel is the transit segment of a multi-domain end-to-end path, it can be of any type (primary, secondary, reverse-primary
   or reverse-secondary). The (path-role) choice is used to specify its role in the path request:</t>

<figure><artwork type="ascii-art" name="tunnel-by-value.txt"><![CDATA[
    |  |     +-- (path-role)?
    |  |     |  +--:(primary-path)
    |  |     |  +--:(secondary-path)
    |  |     |  |  +-- secondary-path!
    |  |     |  |     +-- primary-path-name?   string
    |  |     |  +--:(primary-reverse-path)
    |  |     |  |  +-- primary-reverse-path!
    |  |     |  |     +-- primary-path-name?   string
    |  |     |  +--:(secondary-reverse-path)
    |  |     |     +-- secondary-reverse-path!
    |  |     |        +-- primary-path-name?           string
    |  |     |        +-- primary-reverse-path-name?   string
]]></artwork></figure>

<t>In all the other cases, the only path within a tunnel is a primary path.</t>

<t>The secondary-path, the primary-reverse-path and the secondary-
   reverse-path are presence container used to indicate the role of the
   path: by default, the path is assumed to be a primary path.</t>

<t>They optionally can contain the name of the primary-path under which
   the requested path could be associated within the YANG tree structure
   defined in <xref target="I-D.ietf-teas-yang-te"/>, which could be useful when the server also
   creates a TE tunnel instance within the operational datastore to
   report the computed paths, as described in <xref target="temp-state"/>: in this
   case, the tunnel-name and the path names are also used as the
   suggested name for that TE tunnel and path instances.</t>

</section>
<section anchor="tunnel-attributes-specified-by-reference"><name>Tunnel attributes specified by reference</name>

<t>The (reference) case provides the information needed to associate
   multiple path requests that are intended to be used within the same
   tunnel.</t>

<t>In order to indicate the role of the path being requested within the
   intended tunnel (e.g., primary or secondary path), the (path-role)
   choice is defined:</t>

<figure><artwork type="ascii-art" name="tunnel-by-reference.txt"><![CDATA[
    |  |  |     +-- (path-role)
    |  |  |        +--:(primary-path)
    |  |  |        |  +-- primary-path!
    |  |  |        |     ...
    |  |  |        +--:(secondary-path)
    |  |  |        |  +-- secondary-path
    |  |  |        |     ...
    |  |  |        +--:(primary-reverse-path)
    |  |  |        |  +-- primary-reverse-path
    |  |  |        |     ...
    |  |  |        +--:(secondary-reverse-path)
    |  |  |           +-- secondary-reverse-path
    |  |  |              ...
]]></artwork></figure>

<t>The primary-path is a presence container used to indicate that the
   requested path is intended to be used as a primary path. It can also
   contain some attributes which are configured only on primary paths
   (e.g., the k-requested-paths).</t>

<t>The secondary-path container indicates that the requested path is
   intended to be used as a secondary path and it contains at least
   references to one or more primary paths which can use it as a
   candidate secondary path:</t>

<figure><artwork type="ascii-art" name="secondary-path.txt"><![CDATA[
    |  |  |        |  +-- secondary-path
    |  |  |        |     ...
    |  |  |        |     +-- primary-path-ref* []
    |  |  |        |        +-- (primary-path-exist)
    |  |  |        |           +--:(path-ref)
    |  |  |        |           |  +-- primary-path-ref    leafref
    |  |  |        |           +--:(path-request-ref)
    |  |  |        |              +-- path-request-ref    leafref
]]></artwork></figure>

<t>A requested secondary path can reference any requested primary paths,
   and, in case they are intended to be used within an existing TE
   tunnel, it could also reference any existing primary-paths.</t>

<t>The secondary-path container can also contain some attributes which
   are configured only on secondary paths (e.g., the protection-type).</t>

<t>The primary-reverse-path container indicates that the requested path
   is intended to be used as a primary reverse path and it contains only
   the reference to the primary path which is intended to use it as a
   reverse path:</t>

<figure><artwork type="ascii-art" name="primary-reverse-path.txt"><![CDATA[
    |  |  |        |  +-- primary-reverse-path
    |  |  |        |     +-- (primary-path-exist)
    |  |  |        |        +--:(path-ref)
    |  |  |        |        |  +-- primary-path-ref    leafref
    |  |  |        |        +--:(path-request-ref)
    |  |  |        |           +-- path-request-ref    leafref
]]></artwork></figure>

<t>A requested primary reverse path can reference either a requested
   primary path, or, in case it is intended to be used within an
   existing TE tunnel, an existing primary-path.</t>

<t>The secondary-reverse-path container indicates that the requested
   path is intended to be used as a secondary reverse path and it
   contains at least references to one or more primary paths, whose
   primary reverse path can use it as a candidate secondary reverse
   path:</t>

<figure><artwork type="ascii-art" name="secondary-reverse-path.txt"><![CDATA[
    |  |  |           +-- secondary-reverse-path
    |  |  |              ...
    |  |  |              +-- primary-reverse-path* []
    |  |  |                 +-- (primary-reverse-path-exist)
    |  |  |                    +--:(path-ref)
    |  |  |                    |  +-- primary-path-ref    leafref
    |  |  |                    +--:(path-request-ref)
    |  |  |                       +-- path-request-ref    leafref
]]></artwork></figure>

<t>A requested secondary reverse path can reference any requested
   primary paths, and, in case they are intended to be used within an
   existing TE tunnel, it could reference also existing primary-paths.</t>

<t>The secondary-reverse-path container can also contain some attributes
   which are configured only on secondary reverse paths (e.g., the
   protection-type).</t>

<t>In case the requested path is a transit segment of a multi-domain
   end-to-end path, the primary-path may not be needed to be
   setup/computed. However, the request for path computation of a
   secondary-path or a primary-reverse or of a secondary-reverse-path
   requires that the primary-path exists or it is requested within the
   same RPC request. In the latter case, the path request for the
   primary-path should have an empty 'route-object-include-exclude' list,
   as described in section 5.1.1 of <xref target="I-D.ietf-teas-yang-te"/>, to indicate to the server that
   path computation is not requested and no path properties will
   therefore be returned in the RPC response.</t>

</section>
</section>
<section anchor="multi-layer-path-computation"><name>Multi-Layer Path Computation</name>

<t>The models supports requesting multi-layer path computation following
   the same approach based on dependency tunnels, as defined in <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>The tunnel-attributes of a given client-layer path request can
   reference server-layer TE tunnels which can already exist in the YANG
   datastore or be specified in the tunnel-attributes list, within the
   same RPC request:</t>

<figure><artwork type="ascii-art" name="dependency-tunnels.txt"><![CDATA[
    |     +-- dependency-tunnels
    |     |  +-- dependency-tunnel* [name]
    |     |  |  +-- name              -> /te:te/tunnels/tunnel/name
    |     |  |  +-- encoding?         identityref
    |     |  |  +-- switching-type?   identityref
    |     |  +-- dependency-tunnel-attributes* [name]
    |     |     +-- name              leafref
    |     |     +-- encoding?         identityref
    |     |     +-- switching-type?   identityref
]]></artwork></figure>

<t>In a similar way as in <xref target="I-D.ietf-teas-yang-te"/>, the server-layer tunnel
   attributes should provide the information of what would be the
   dynamic link in the client layer topology supported by that tunnel,
   if instantiated:</t>

<figure><artwork type="ascii-art" name="hierarchical-link.txt"><![CDATA[
    |     +-- hierarchical-link
    |        +-- enable?                   boolean
    |        +-- local-te-node-id?         te-types:te-node-id
    |        +-- local-te-link-tp-id?      te-types:te-tp-id
    |        +-- remote-te-node-id?        te-types:te-node-id
    |        +-- te-topology-identifier
    |           +-- provider-id?   te-global-id
    |           +-- client-id?     te-global-id
    |           +-- topology-id?   te-topology-id
]]></artwork></figure>

<t>It is worth noting that since path computation RPC is stateless, the
   dynamic hierarchical links configured for the server-layer tunnel
   attributes cannot be used for path computation of any client-layer
   path unless explicitly referenced in the dependency-tunnel-attributes
   list within the same RPC request.</t>

</section>
</section>
<section anchor="yang-data-model-for-te-path-computation"><name>YANG data model for TE path computation</name>

<section anchor="pc-tree"><name>Tree diagram</name>

<t><xref target="fig-pc-tree"/> below shows the tree diagram of the YANG data model defined
   in module ietf-te-path-computation.yang, defined in <xref target="pc-yang"/>.</t>

<figure title="TE path computation tree diagram" anchor="fig-pc-tree"><artwork type="ascii-art" name="ietf-te-path-computation.tree"><![CDATA[
module: ietf-te-path-computation

  augment /te:tunnels-path-compute/te:input/te:path-compute-info:
    +-- path-request* [request-id]
    |  +-- request-id                            uint32
    |  +-- (tunnel-attributes)?
    |  |  +--:(reference)
    |  |  |  +-- tunnel-reference
    |  |  |     +-- (tunnel-exist)
    |  |  |     |  +--:(tunnel-ref)
    |  |  |     |  |  +-- tunnel-ref                te:tunnel-ref
    |  |  |     |  +--:(tunnel-attributes-ref)
    |  |  |     |     +-- tunnel-attributes-ref     leafref
    |  |  |     +-- path-name?                      string
    |  |  |     +-- (path-role)
    |  |  |        +--:(primary-path)
    |  |  |        |  +-- primary-path!
    |  |  |        |     +-- preference?          uint8
    |  |  |        |     +-- co-routed?           empty
    |  |  |        |     +-- k-requested-paths?   uint8
    |  |  |        +--:(secondary-path)
    |  |  |        |  +-- secondary-path
    |  |  |        |     +-- preference?           uint8
    |  |  |        |     +-- co-routed?            empty
    |  |  |        |     +-- protection-type?      identityref
    |  |  |        |     +-- restoration-type?     identityref
    |  |  |        |     +-- restoration-scheme?   identityref
    |  |  |        |     +-- primary-path-ref* []
    |  |  |        |        +-- (primary-path-exist)
    |  |  |        |           +--:(path-ref)
    |  |  |        |           |  +-- primary-path-ref    leafref
    |  |  |        |           +--:(path-request-ref)
    |  |  |        |              +-- path-request-ref    leafref
    |  |  |        +--:(primary-reverse-path)
    |  |  |        |  +-- primary-reverse-path
    |  |  |        |     +-- (primary-path-exist)
    |  |  |        |        +--:(path-ref)
    |  |  |        |        |  +-- primary-path-ref    leafref
    |  |  |        |        +--:(path-request-ref)
    |  |  |        |           +-- path-request-ref    leafref
    |  |  |        +--:(secondary-reverse-path)
    |  |  |           +-- secondary-reverse-path
    |  |  |              +-- protection-type?        identityref
    |  |  |              +-- restoration-type?       identityref
    |  |  |              +-- restoration-scheme?     identityref
    |  |  |              +-- primary-reverse-path* []
    |  |  |                 +-- (primary-reverse-path-exist)
    |  |  |                    +--:(path-ref)
    |  |  |                    |  +-- primary-path-ref    leafref
    |  |  |                    +--:(path-request-ref)
    |  |  |                       +-- path-request-ref    leafref
    |  |  +--:(value)
    |  |     +-- tunnel-name?                    string
    |  |     +-- path-name?                      string
    |  |     +-- (path-role)?
    |  |     |  +--:(primary-path)
    |  |     |  +--:(secondary-path)
    |  |     |  |  +-- secondary-path!
    |  |     |  |     +-- primary-path-name?   string
    |  |     |  +--:(primary-reverse-path)
    |  |     |  |  +-- primary-reverse-path!
    |  |     |  |     +-- primary-path-name?   string
    |  |     |  +--:(secondary-reverse-path)
    |  |     |     +-- secondary-reverse-path!
    |  |     |        +-- primary-path-name?           string
    |  |     |        +-- primary-reverse-path-name?   string
    |  |     +-- k-requested-paths?              uint8
    |  |     +-- encoding?                       identityref
    |  |     +-- switching-type?                 identityref
    |  |     +-- source?                         te-types:te-node-id
    |  |     +-- destination?                    te-types:te-node-id
    |  |     +-- src-tunnel-tp-id?               binary
    |  |     +-- dst-tunnel-tp-id?               binary
    |  |     +-- bidirectional?                  boolean
    |  |     +-- te-topology-identifier
    |  |        +-- provider-id?   te-global-id
    |  |        +-- client-id?     te-global-id
    |  |        +-- topology-id?   te-topology-id
    |  +-- association-objects
    |  |  +-- association-object* [association-key]
    |  |  |  +-- association-key    string
    |  |  |  +-- type?              identityref
    |  |  |  +-- id?                uint16
    |  |  |  +-- source
    |  |  |     +-- id?     te-gen-node-id
    |  |  |     +-- type?   enumeration
    |  |  +-- association-object-extended* [association-key]
    |  |     +-- association-key    string
    |  |     +-- type?              identityref
    |  |     +-- id?                uint16
    |  |     +-- source
    |  |     |  +-- id?     te-gen-node-id
    |  |     |  +-- type?   enumeration
    |  |     +-- global-source?     uint32
    |  |     +-- extended-id?       yang:hex-string
    |  +-- optimizations
    |  |  +-- (algorithm)?
    |  |     +--:(metric) {path-optimization-metric}?
    |  |     |  +-- optimization-metric* [metric-type]
    |  |     |  |  +-- metric-type                       identityref
    |  |     |  |  +-- weight?                           uint8
    |  |     |  |  +-- explicit-route-exclude-objects
    |  |     |  |  |  +-- route-object-exclude-object* [index]
    |  |     |  |  |     +-- index                        uint32
    |  |     |  |  |     +-- (type)?
    |  |     |  |  |        +--:(numbered-node-hop)
    |  |     |  |  |        |  +-- numbered-node-hop
    |  |     |  |  |        |     +-- node-id     te-node-id
    |  |     |  |  |        |     +-- hop-type?   te-hop-type
    |  |     |  |  |        +--:(numbered-link-hop)
    |  |     |  |  |        |  +-- numbered-link-hop
    |  |     |  |  |        |     +-- link-tp-id    te-tp-id
    |  |     |  |  |        |     +-- hop-type?     te-hop-type
    |  |     |  |  |        |     +-- direction?    te-link-direction
    |  |     |  |  |        +--:(unnumbered-link-hop)
    |  |     |  |  |        |  +-- unnumbered-link-hop
    |  |     |  |  |        |     +-- link-tp-id    te-tp-id
    |  |     |  |  |        |     +-- node-id       te-node-id
    |  |     |  |  |        |     +-- hop-type?     te-hop-type
    |  |     |  |  |        |     +-- direction?    te-link-direction
    |  |     |  |  |        +--:(as-number)
    |  |     |  |  |        |  +-- as-number-hop
    |  |     |  |  |        |     +-- as-number    inet:as-number
    |  |     |  |  |        |     +-- hop-type?    te-hop-type
    |  |     |  |  |        +--:(label)
    |  |     |  |  |        |  +-- label-hop
    |  |     |  |  |        |     +-- te-label
    |  |     |  |  |        |        +-- (technology)?
    |  |     |  |  |        |        |  +--:(generic)
    |  |     |  |  |        |        |     +-- generic?
    |  |     |  |  |        |        |             rt-types:generalized-label
    |  |     |  |  |        |        +-- direction?
    |  |     |  |  |        |                te-label-direction
    |  |     |  |  |        +--:(srlg)
    |  |     |  |  |           +-- srlg
    |  |     |  |  |              +-- srlg?   uint32
    |  |     |  |  +-- explicit-route-include-objects
    |  |     |  |     +-- route-object-include-object* [index]
    |  |     |  |        +-- index                        uint32
    |  |     |  |        +-- (type)?
    |  |     |  |           +--:(numbered-node-hop)
    |  |     |  |           |  +-- numbered-node-hop
    |  |     |  |           |     +-- node-id     te-node-id
    |  |     |  |           |     +-- hop-type?   te-hop-type
    |  |     |  |           +--:(numbered-link-hop)
    |  |     |  |           |  +-- numbered-link-hop
    |  |     |  |           |     +-- link-tp-id    te-tp-id
    |  |     |  |           |     +-- hop-type?     te-hop-type
    |  |     |  |           |     +-- direction?    te-link-direction
    |  |     |  |           +--:(unnumbered-link-hop)
    |  |     |  |           |  +-- unnumbered-link-hop
    |  |     |  |           |     +-- link-tp-id    te-tp-id
    |  |     |  |           |     +-- node-id       te-node-id
    |  |     |  |           |     +-- hop-type?     te-hop-type
    |  |     |  |           |     +-- direction?    te-link-direction
    |  |     |  |           +--:(as-number)
    |  |     |  |           |  +-- as-number-hop
    |  |     |  |           |     +-- as-number    inet:as-number
    |  |     |  |           |     +-- hop-type?    te-hop-type
    |  |     |  |           +--:(label)
    |  |     |  |              +-- label-hop
    |  |     |  |                 +-- te-label
    |  |     |  |                    +-- (technology)?
    |  |     |  |                    |  +--:(generic)
    |  |     |  |                    |     +-- generic?
    |  |     |  |                    |             rt-types:generalized-label
    |  |     |  |                    +-- direction?
    |  |     |  |                            te-label-direction
    |  |     |  +-- tiebreakers
    |  |     |     +-- tiebreaker* [tiebreaker-type]
    |  |     |        +-- tiebreaker-type    identityref
    |  |     +--:(objective-function)
    |  |              {path-optimization-objective-function}?
    |  |        +-- objective-function
    |  |           +-- objective-function-type?   identityref
    |  +-- named-path-constraint?                leafref
    |  |       {te-types:named-path-constraints}?
    |  +-- te-bandwidth
    |  |  +-- (technology)?
    |  |     +--:(generic)
    |  |        +-- generic?   te-bandwidth
    |  +-- link-protection?                      identityref
    |  +-- setup-priority?                       uint8
    |  +-- hold-priority?                        uint8
    |  +-- signaling-type?                       identityref
    |  +-- path-metric-bounds
    |  |  +-- path-metric-bound* [metric-type]
    |  |     +-- metric-type    identityref
    |  |     +-- upper-bound?   uint64
    |  +-- path-affinities-values
    |  |  +-- path-affinities-value* [usage]
    |  |     +-- usage    identityref
    |  |     +-- value?   admin-groups
    |  +-- path-affinity-names
    |  |  +-- path-affinity-name* [usage]
    |  |     +-- usage            identityref
    |  |     +-- affinity-name* [name]
    |  |        +-- name    string
    |  +-- path-srlgs-lists
    |  |  +-- path-srlgs-list* [usage]
    |  |     +-- usage     identityref
    |  |     +-- values*   srlg
    |  +-- path-srlgs-names
    |  |  +-- path-srlgs-name* [usage]
    |  |     +-- usage    identityref
    |  |     +-- names*   string
    |  +-- disjointness?                         te-path-disjointness
    |  +-- explicit-route-objects-always
    |  |  +-- route-object-exclude-always* [index]
    |  |  |  +-- index                        uint32
    |  |  |  +-- (type)?
    |  |  |     +--:(numbered-node-hop)
    |  |  |     |  +-- numbered-node-hop
    |  |  |     |     +-- node-id     te-node-id
    |  |  |     |     +-- hop-type?   te-hop-type
    |  |  |     +--:(numbered-link-hop)
    |  |  |     |  +-- numbered-link-hop
    |  |  |     |     +-- link-tp-id    te-tp-id
    |  |  |     |     +-- hop-type?     te-hop-type
    |  |  |     |     +-- direction?    te-link-direction
    |  |  |     +--:(unnumbered-link-hop)
    |  |  |     |  +-- unnumbered-link-hop
    |  |  |     |     +-- link-tp-id    te-tp-id
    |  |  |     |     +-- node-id       te-node-id
    |  |  |     |     +-- hop-type?     te-hop-type
    |  |  |     |     +-- direction?    te-link-direction
    |  |  |     +--:(as-number)
    |  |  |     |  +-- as-number-hop
    |  |  |     |     +-- as-number    inet:as-number
    |  |  |     |     +-- hop-type?    te-hop-type
    |  |  |     +--:(label)
    |  |  |        +-- label-hop
    |  |  |           +-- te-label
    |  |  |              +-- (technology)?
    |  |  |              |  +--:(generic)
    |  |  |              |     +-- generic?
    |  |  |              |             rt-types:generalized-label
    |  |  |              +-- direction?       te-label-direction
    |  |  +-- route-object-include-exclude* [index]
    |  |     +-- explicit-route-usage?        identityref
    |  |     +-- index                        uint32
    |  |     +-- (type)?
    |  |        +--:(numbered-node-hop)
    |  |        |  +-- numbered-node-hop
    |  |        |     +-- node-id     te-node-id
    |  |        |     +-- hop-type?   te-hop-type
    |  |        +--:(numbered-link-hop)
    |  |        |  +-- numbered-link-hop
    |  |        |     +-- link-tp-id    te-tp-id
    |  |        |     +-- hop-type?     te-hop-type
    |  |        |     +-- direction?    te-link-direction
    |  |        +--:(unnumbered-link-hop)
    |  |        |  +-- unnumbered-link-hop
    |  |        |     +-- link-tp-id    te-tp-id
    |  |        |     +-- node-id       te-node-id
    |  |        |     +-- hop-type?     te-hop-type
    |  |        |     +-- direction?    te-link-direction
    |  |        +--:(as-number)
    |  |        |  +-- as-number-hop
    |  |        |     +-- as-number    inet:as-number
    |  |        |     +-- hop-type?    te-hop-type
    |  |        +--:(label)
    |  |        |  +-- label-hop
    |  |        |     +-- te-label
    |  |        |        +-- (technology)?
    |  |        |        |  +--:(generic)
    |  |        |        |     +-- generic?
    |  |        |        |             rt-types:generalized-label
    |  |        |        +-- direction?       te-label-direction
    |  |        +--:(srlg)
    |  |           +-- srlg
    |  |              +-- srlg?   uint32
    |  +-- path-in-segment!
    |  |  +-- label-restrictions
    |  |     +-- label-restriction* [index]
    |  |        +-- restriction?    enumeration
    |  |        +-- index           uint32
    |  |        +-- label-start
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-end
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-step
    |  |        |  +-- (technology)?
    |  |        |     +--:(generic)
    |  |        |        +-- generic?   int32
    |  |        +-- range-bitmap?   yang:hex-string
    |  +-- path-out-segment!
    |  |  +-- label-restrictions
    |  |     +-- label-restriction* [index]
    |  |        +-- restriction?    enumeration
    |  |        +-- index           uint32
    |  |        +-- label-start
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-end
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-step
    |  |        |  +-- (technology)?
    |  |        |     +--:(generic)
    |  |        |        +-- generic?   int32
    |  |        +-- range-bitmap?   yang:hex-string
    |  +-- requested-metrics* [metric-type]
    |  |  +-- metric-type    identityref
    |  +-- return-srlgs?                         boolean
    |  +-- return-affinities?                    boolean
    |  +-- requested-state!
    |     +-- timer?            uint16
    |     +-- transaction-id?   string
    +-- tunnel-attributes* [tunnel-name]
    |  +-- tunnel-name               string
    |  +-- encoding?                 identityref
    |  +-- switching-type?           identityref
    |  +-- source?                   te-types:te-node-id
    |  +-- destination?              te-types:te-node-id
    |  +-- src-tunnel-tp-id?         binary
    |  +-- dst-tunnel-tp-id?         binary
    |  +-- bidirectional?            boolean
    |  +-- association-objects
    |  |  +-- association-object* [association-key]
    |  |  |  +-- association-key    string
    |  |  |  +-- type?              identityref
    |  |  |  +-- id?                uint16
    |  |  |  +-- source
    |  |  |     +-- id?     te-gen-node-id
    |  |  |     +-- type?   enumeration
    |  |  +-- association-object-extended* [association-key]
    |  |     +-- association-key    string
    |  |     +-- type?              identityref
    |  |     +-- id?                uint16
    |  |     +-- source
    |  |     |  +-- id?     te-gen-node-id
    |  |     |  +-- type?   enumeration
    |  |     +-- global-source?     uint32
    |  |     +-- extended-id?       yang:hex-string
    |  +-- protection-type?          identityref
    |  +-- restoration-type?         identityref
    |  +-- restoration-scheme?       identityref
    |  +-- te-topology-identifier
    |  |  +-- provider-id?   te-global-id
    |  |  +-- client-id?     te-global-id
    |  |  +-- topology-id?   te-topology-id
    |  +-- te-bandwidth
    |  |  +-- (technology)?
    |  |     +--:(generic)
    |  |        +-- generic?   te-bandwidth
    |  +-- link-protection?          identityref
    |  +-- setup-priority?           uint8
    |  +-- hold-priority?            uint8
    |  +-- signaling-type?           identityref
    |  +-- hierarchy
    |     +-- dependency-tunnels
    |     |  +-- dependency-tunnel* [name]
    |     |  |  +-- name              -> /te:te/tunnels/tunnel/name
    |     |  |  +-- encoding?         identityref
    |     |  |  +-- switching-type?   identityref
    |     |  +-- dependency-tunnel-attributes* [name]
    |     |     +-- name              leafref
    |     |     +-- encoding?         identityref
    |     |     +-- switching-type?   identityref
    |     +-- hierarchical-link
    |        +-- enable?                   boolean
    |        +-- local-te-node-id?         te-types:te-node-id
    |        +-- local-te-link-tp-id?      te-types:te-tp-id
    |        +-- remote-te-node-id?        te-types:te-node-id
    |        +-- te-topology-identifier
    |           +-- provider-id?   te-global-id
    |           +-- client-id?     te-global-id
    |           +-- topology-id?   te-topology-id
    +-- synchronization* []
       +-- svec
       |  +-- relaxable?      boolean
       |  +-- disjointness?   te-path-disjointness
       |  +-- request-id*     uint32
       +-- svec-constraints
       |  +-- path-metric-bound* [metric-type]
       |     +-- metric-type    identityref
       |     +-- upper-bound?   uint64
       +-- path-srlgs-lists
       |  +-- path-srlgs-list* [usage]
       |     +-- usage     identityref
       |     +-- values*   srlg
       +-- path-srlgs-names
       |  +-- path-srlgs-name* [usage]
       |     +-- usage    identityref
       |     +-- names*   string
       +-- exclude-objects
       |  +-- excludes* []
       |     +-- (type)?
       |        +--:(numbered-node-hop)
       |        |  +-- numbered-node-hop
       |        |     +-- node-id     te-node-id
       |        |     +-- hop-type?   te-hop-type
       |        +--:(numbered-link-hop)
       |        |  +-- numbered-link-hop
       |        |     +-- link-tp-id    te-tp-id
       |        |     +-- hop-type?     te-hop-type
       |        |     +-- direction?    te-link-direction
       |        +--:(unnumbered-link-hop)
       |        |  +-- unnumbered-link-hop
       |        |     +-- link-tp-id    te-tp-id
       |        |     +-- node-id       te-node-id
       |        |     +-- hop-type?     te-hop-type
       |        |     +-- direction?    te-link-direction
       |        +--:(as-number)
       |        |  +-- as-number-hop
       |        |     +-- as-number    inet:as-number
       |        |     +-- hop-type?    te-hop-type
       |        +--:(label)
       |           +-- label-hop
       |              +-- te-label
       |                 +-- (technology)?
       |                 |  +--:(generic)
       |                 |     +-- generic?
       |                 |             rt-types:generalized-label
       |                 +-- direction?       te-label-direction
       +-- optimizations
          +-- (algorithm)?
             +--:(metric) {te-types:path-optimization-metric}?
             |  +-- optimization-metric* [metric-type]
             |     +-- metric-type    identityref
             |     +-- weight?        uint8
             +--:(objective-function)
                      {te-types:path-optimization-objective-function}?
                +-- objective-function
                   +-- objective-function-type?   identityref
  augment /te:tunnels-path-compute/te:output/te:path-compute-result:
    +--ro response* [response-id]
       +--ro response-id                         uint32
       +--ro computed-paths-properties
       |  +--ro computed-path-properties* [k-index]
       |     +--ro k-index            uint8
       |     +--ro path-properties
       |        +--ro path-metric* [metric-type]
       |        |  +--ro metric-type           identityref
       |        |  +--ro accumulative-value?   uint64
       |        +--ro path-affinities-values
       |        |  +--ro path-affinities-value* [usage]
       |        |     +--ro usage    identityref
       |        |     +--ro value?   admin-groups
       |        +--ro path-affinity-names
       |        |  +--ro path-affinity-name* [usage]
       |        |     +--ro usage            identityref
       |        |     +--ro affinity-name* [name]
       |        |        +--ro name    string
       |        +--ro path-srlgs-lists
       |        |  +--ro path-srlgs-list* [usage]
       |        |     +--ro usage     identityref
       |        |     +--ro values*   srlg
       |        +--ro path-srlgs-names
       |        |  +--ro path-srlgs-name* [usage]
       |        |     +--ro usage    identityref
       |        |     +--ro names*   string
       |        +--ro path-route-objects
       |        |  +--ro path-route-object* [index]
       |        |     +--ro index                        uint32
       |        |     +--ro (type)?
       |        |        +--:(numbered-node-hop)
       |        |        |  +--ro numbered-node-hop
       |        |        |     +--ro node-id     te-node-id
       |        |        |     +--ro hop-type?   te-hop-type
       |        |        +--:(numbered-link-hop)
       |        |        |  +--ro numbered-link-hop
       |        |        |     +--ro link-tp-id    te-tp-id
       |        |        |     +--ro hop-type?     te-hop-type
       |        |        |     +--ro direction?    te-link-direction
       |        |        +--:(unnumbered-link-hop)
       |        |        |  +--ro unnumbered-link-hop
       |        |        |     +--ro link-tp-id    te-tp-id
       |        |        |     +--ro node-id       te-node-id
       |        |        |     +--ro hop-type?     te-hop-type
       |        |        |     +--ro direction?    te-link-direction
       |        |        +--:(as-number)
       |        |        |  +--ro as-number-hop
       |        |        |     +--ro as-number    inet:as-number
       |        |        |     +--ro hop-type?    te-hop-type
       |        |        +--:(label)
       |        |           +--ro label-hop
       |        |              +--ro te-label
       |        |                 +--ro (technology)?
       |        |                 |  +--:(generic)
       |        |                 |     +--ro generic?
       |        |                 |             rt-types:generalized-label
       |        |                 +--ro direction?
       |        |                         te-label-direction
       |        +--ro te-bandwidth
       |        |  +--ro (technology)?
       |        |     +--:(generic)
       |        |        +--ro generic?   te-bandwidth
       |        +--ro disjointness-type?
       |                te-types:te-path-disjointness
       +--ro computed-path-error-infos
       |  +--ro computed-path-error-info* []
       |     +--ro error-description?   string
       |     +--ro error-timestamp?     yang:date-and-time
       |     +--ro error-reason?        identityref
       +--ro tunnel-ref?                         te:tunnel-ref
       +--ro (path-role)?
          +--:(primary)
          |  +--ro primary-path-ref?             leafref
          +--:(primary-reverse)
          |  +--ro primary-reverse-path-ref?     leafref
          +--:(secondary)
          |  +--ro secondary-path-ref?           leafref
          +--:(secondary-reverse)
             +--ro secondary-reverse-path-ref?   leafref
  augment /te:tunnels-actions/te:input/te:tunnel-info/te:filter-type:
    +--:(path-compute-transactions)
       +-- path-compute-transaction-id*   string
  augment /te:tunnels-actions/te:output:
    +--ro path-computed-delete-result
       +--ro path-compute-transaction-id*   string
]]></artwork></figure>

</section>
<section anchor="pc-yang"><name>YANG module</name>

<figure title="TE path computation YANG module" anchor="fig-pc-yang"><sourcecode type="yang" markers="true" name="ietf-te-path-computation@2022-10-21.yang"><![CDATA[
module ietf-te-path-computation {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-te-path-computation";
  prefix te-pc;

  import ietf-te {
    prefix te;
    reference
      "RFCYYYY: A YANG Data Model for Traffic Engineering Tunnels
       and Interfaces";
  }

  /* Note: The RFC Editor will replace YYYY with the number assigned
     to the RFC once draft-ietf-teas-yang-te becomes an RFC.*/

  import ietf-te-types {
    prefix te-types;
    reference
      "RFCZZZZ: Updated Common YANG Data Types for Traffic 
      Engineering";
  }

  /* Note: The RFC Editor will replace ZZZZ with the number assigned
     to the RFC once draft-ietf-teas-rfc8776-update becomes an RFC.*/

  organization
    "Traffic Engineering Architecture and Signaling (TEAS)
     Working Group";
  contact
    "WG Web: <https://datatracker.ietf.org/wg/teas/>
     WG List:  <mailto:teas@ietf.org>

     Editor:   Italo Busi
               <mailto:italo.busi@huawei.com>

     Editor:   Sergio Belotti
               <mailto:sergio.belotti@nokia.com>

     Editor:   Victor Lopez
               <mailto:victor.lopez@nokia.com>

     Editor:   Oscar Gonzalez de Dios
               <mailto:oscar.gonzalezdedios@telefonica.com>

     Editor:   Anurag Sharma
               <mailto:ansha@google.com>

     Editor:   Yan Shi
               <mailto:shiyan49@chinaunicom.cn>

     Editor:   Ricard Vilalta
               <mailto:ricard.vilalta@cttc.es>

     Editor:   Karthik Sethuraman
               <mailto:karthik.sethuraman@necam.com>

     Editor:   Michael Scharf
               <mailto:michael.scharf@gmail.com>

     Editor:   Daniele Ceccarelli
               <mailto:daniele.ceccarelli@ericsson.com>
     
    ";
  description
    "This module defines a YANG data model for requesting Traffic
     Engineering (TE) path computation. The YANG data model defined
     in this document augments the RPCs defined in the generic TE
     module (ietf-te).

     The model fully conforms to the
     Network Management Datastore Architecture (NMDA).

     Copyright (c) 2023 IETF Trust and the persons
     identified as authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with
     or without modification, is permitted pursuant to, and
     subject to the license terms contained in, the Revised
     BSD License set forth in Section 4.c of the IETF Trust's
     Legal Provisions Relating to IETF Documents
     (https://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC XXXX; see
     the RFC itself for full legal notices.

     The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL', 'SHALL
     NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'NOT RECOMMENDED',
     'MAY', and 'OPTIONAL' in this document are to be interpreted as
     described in BCP 14 (RFC 2119) (RFC 8174) when, and only when,
     they appear in all capitals, as shown here.";

  // RFC Ed.: replace XXXX with actual RFC number and remove
  // this note
  // replace the revision date with the module publication date
  // the format is (year-month-day)

  revision 2023-01-12 {
    description
      "Initial revision";
    reference
      "RFC XXXX: A YANG Data Model for requesting path computation";
  }

  // RFC Ed.: replace XXXX with actual RFC number and remove
  // this note

  /*
   * Identities
   */

  identity tunnel-action-path-compute-delete {
    base te-types:tunnel-actions-type;
    description
      "Action type to delete the transient states
      of computed paths, as described in section 3.3.1 of
      RFC XXXX.";
    reference
      "RFC XXXX: A YANG Data Model for requesting path computation";
  }

  /*
   * Groupings
   */

  grouping protection-restoration-properties {
    description
      "This grouping defines the restoration and protection types
       for a path in the path computation request.";
    leaf protection-type {
      type identityref {
        base te-types:lsp-protection-type;
      }
      default "te-types:lsp-protection-unprotected";
      description
        "LSP protection type.";
    }
    leaf restoration-type {
      type identityref {
        base te-types:lsp-restoration-type;
      }
      default "te-types:lsp-restoration-restore-any";
      description
        "LSP restoration type.";
    }
    leaf restoration-scheme {
      type identityref {
        base te-types:restoration-scheme-type;
      }
      default "te-types:restoration-scheme-preconfigured";
      description
        "LSP restoration scheme.";
    }
  } // grouping protection-restoration-properties

  grouping requested-info {
    description
      "This grouping defines the information which is requested
       (e.g., metrics), in the path computation request, to be
       returned in the path computation response.";
    list requested-metrics {
      key "metric-type";
      description
        "The list of the requested metrics.

         The metrics listed here MUST be returned in the response.
         Returning other metrics in the response is OPTIONAL.";
      leaf metric-type {
        type identityref {
          base te-types:path-metric-type;
        }
        description
          "The metric requested to be returned in the response";
      }
    }
    leaf return-srlgs {
      type boolean;
      default "false";
      description
        "If true, path Shared Risk Link Groups (SRLGs) MUST be
         returned in the response.
         If false, returning path SRLGs in the response OPTIONAL.";
    }
    leaf return-affinities {
      type boolean;
      default "false";
      description
        "If true, path affinities MUST be returned in the response.
         If false, returning path affinities in the response is
         OPTIONAL.";
    }
  } // grouping requested-info

  grouping requested-state {
    description
      "Configuration for the transient state used
       to report the computed path";
    container requested-state {
      presence
        "Request temporary reporting of the computed path state";
      description
        "Configures attributes for the temporary reporting of the
         computed path state (e.g., expiration timer).";
      leaf timer {
        type uint16;
        units "minutes";
        default "10";
        description
          "The timeout after which the transient state reporting
          the computed path SHOULD be removed.";
      }
      leaf transaction-id {
        type string;
        description
          "The transaction-id associated with this path computation
          to be used for fast deletion of the transient states
          associated with multiple path computations.

          This transaction-id can be used to explicitly delete all
          the transient states of all the computed paths associated
          with the same transaction-id.

          When one path associated with a transaction-id is setup,
          the transient states of all the other computed paths
          with the same transaction-id are automatically removed.

          If not specified, the transient state is removed only
          when the timer expires (when the timer is specified)
          or not created at all (stateless path computation,
          when the timer is not specified).";
      }
    }
  } // grouping requested-state

  grouping reported-state {
    description
      "This grouping defines the information, returned in the path
       computation response, reporting the transient state related
       to the computed path";
    leaf tunnel-ref {
      type te:tunnel-ref;
      description
        "
         Reference to the tunnel that reports the transient state
         of the computed path.

         If no transient state is created, this attribute is
         omitted.
        ";
    }
    choice path-role {
      description
        "The transient state of the computed path can be reported
         as a primary, primary-reverse, secondary or
         a secondary-reverse path of a te-tunnel";
      case primary {
        leaf primary-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:primary-paths/te:primary-path/"
               + "te:name";
          }
          must '../tunnel-ref' {
            description
              "The primary-path name can only be reported
               if the tunnel name is also reported.";
          }
          description
            "
             Reference to the primary-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case primary
      case primary-reverse {
        leaf primary-reverse-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:primary-paths/te:primary-path/"
               + "te:name";
          }
          must '../tunnel-ref' {
            description
              "The primary-reverse-path name can only be reported
               if the tunnel name is also reported.";
          }
          description
            "
             Reference to the primary-reverse-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case primary-reverse
      case secondary {
        leaf secondary-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:secondary-paths/te:secondary-path/"
               + "te:name";
          }
          must '../tunnel-ref' {
            description
              "The secondary-path name can only be reported
               if the tunnel name is also reported.";
          }
          description
            "
             Reference to the secondary-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case secondary
      case secondary-reverse {
        leaf secondary-reverse-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:secondary-reverse-paths/"
               + "te:secondary-reverse-path/te:name";
          }
          must '../tunnel-ref' {
            description
              "The secondary-reverse-path name can only be reported
               if the tunnel name is also reported.";
          }
          description
            "
             Reference to the secondary-reverse-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case secondary
    } // choice path
  } // grouping reported-state

  grouping synchronization-constraints {
    description
      "Global constraints applicable to synchronized path
       computation requests.";
    container svec-constraints {
      description
        "global svec constraints";
      list path-metric-bound {
        key "metric-type";
        description
          "list of bound metrics";
        leaf metric-type {
          type identityref {
            base te-types:svec-metric-type;
          }
          description
            "SVEC metric type.";
          reference
            "RFC5541: Encoding of Objective Functions in the Path
            Computation Element Communication Protocol (PCEP).";
        }
        leaf upper-bound {
          type uint64;
          description
            "Upper bound on SVEC metric";
        }
      }
    }
    uses te-types:generic-path-srlgs;
    container exclude-objects {
      description
        "Resources to be excluded";
      list excludes {
        description
          "List of Explicit Route Objects to always exclude
           from synchronized path computation";
        uses te-types:explicit-route-hop;
      }
    }
  } // grouping synchronization-constraints

  grouping synchronization-optimization {
    description
      "Optimizations applicable to synchronized path
       computation requests.";
    container optimizations {
      description
        "The objective function container that includes attributes
         to impose when computing a synchronized set of paths";
      choice algorithm {
        description
          "Optimizations algorithm.";
        case metric {
          if-feature "te-types:path-optimization-metric";
          list optimization-metric {
            key "metric-type";
            description
              "svec path metric type";
            leaf metric-type {
              type identityref {
                base te-types:svec-metric-type;
              }
              description
                "TE path metric type usable for computing a set of
                synchronized requests";
            }
            leaf weight {
              type uint8;
              description
                "Metric normalization weight";
            }
          }
        }
        case objective-function {
          if-feature
            "te-types:path-optimization-objective-function";
          container objective-function {
            description
              "The objective function container that includes
               attributes to impose when computing a TE path";
            leaf objective-function-type {
              type identityref {
                base te-types:svec-objective-function-type;
              }
              description
                "Objective function entry";
            }
          }
        }
      }
    }
  } // grouping synchronization-optimization

  grouping synchronization-info {
    description
      "Information for synchronized path computation requests.";
    list synchronization {
      description
        "List of Synchronization VECtors.";
      container svec {
        description
          "Synchronization VECtor";
        leaf relaxable {
          type boolean;
          default "true";
          description
            "If this leaf is true, taking into account this svec is
             OPTIONAL and the path computation process is
             free to ignore svec content.
             Otherwise, it MUST take into account this svec.";
        }
        uses te-types:generic-path-disjointness;
        leaf-list request-id {
          type uint32;
          description
            "This list reports the set of path computation
             requests that are requested to be synchronized.";
        }
      }
      uses synchronization-constraints;
      uses synchronization-optimization;
    }
  } // grouping synchronization-info

  /*
   * Augment TE RPCs
   */

  augment "/te:tunnels-path-compute/te:input/te:path-compute-info" {
    description
      "Augments Path Computation RPC input";
    list path-request {
      key "request-id";
      description
        "The list of the requested paths to be computed";
      leaf request-id {
        type uint32;
        mandatory true;
        description
          "Each path computation request is uniquely identified
           within the RPC request by the request-id.";
      }
      choice tunnel-attributes {
        default "value";
        description
          "Whether the tunnel attributes are specified by value
           within this path computation request or by reference.
           The reference could be either to an existing te-tunnel
           or to an entry in the tunnel-attributes list";
        case reference {
          container tunnel-reference {
            description
              "Attributes for a requested path that belongs to
              either an exiting te-tunnel or to an entry in the
              tunnel-attributes list.";
            choice tunnel-exist {
              mandatory true;
              description
                "Whether the tunnel reference is to an existing
                te-tunnel or to an entry in the tunnel-attributes
                list";
              case tunnel-ref {
                leaf tunnel-ref {
                  type te:tunnel-ref;
                  mandatory true;
                  description
                    "The referenced te-tunnel instance";
                }
              } // case tunnel-ref
              case tunnel-attributes-ref {
                leaf tunnel-attributes-ref {
                  type leafref {
                    path "/te:tunnels-path-compute/"
                      + "te:path-compute-info/"
                      + "te-pc:tunnel-attributes/te-pc:tunnel-name";
                  }
                  mandatory true;
                  description
                    "The referenced te-tunnel instance";
                }
              } // case tunnel-attributes-ref 
            } // choice tunnel-exist
            leaf path-name {
              type string;
              description
                "TE path name.";
            }
            choice path-role {
              mandatory true;
              description
                "Whether this path is a primary, or a reverse
                primary, or a secondary, or a reverse secondary
                path.";
              case primary-path {
                container primary-path {
                  presence "Indicates that the requested path
                            is a primary path";
                  description
                    "TE primary path";
                  uses te:path-forward-properties;
                  uses te:k-requested-paths;
                } // container primary-path
              } // case primary-path
              case secondary-path {
                container secondary-path {
                  description
                    "TE secondary path";
                  uses te:path-forward-properties;
                  uses protection-restoration-properties;
                  list primary-path-ref {
                    min-elements 1;
                    description
                      "The list of primary paths that reference
                      this path as a candidate secondary path";
                    choice primary-path-exist {
                      mandatory true;
                      description
                        "Whether the path reference is to an existing
                        te-tunnel path or to another path request";
                      case path-ref {
                        leaf primary-path-ref {
                          type leafref {
                            path "/te:te/te:tunnels/te:tunnel"
                              + "[te:name=current()/../../../"
                              + "tunnel-ref]/te:primary-paths/"
                              + "te:primary-path/te:name";
                          }
                          must '../../../tunnel-ref' {
                            description
                              "The primary-path can be referenced
                              if also the tunnel is referenced.";
                          }
                          mandatory true;
                          description
                            "The referenced primary path";
                        }
                      } // case path-ref
                      case path-request-ref {
                        leaf path-request-ref {
                          type leafref {
                            path "/te:tunnels-path-compute/"
                              + "te:path-compute-info/"
                              + "te-pc:path-request/"
                              + "te-pc:request-id";
                          }
                          mandatory true;
                          description
                            "The referenced primary path request";
                        }
                      } // case path-request-ref 
                    } // choice primary-path-exist
                  } // list primary-path-ref
                } // container secondary-path
              } // case secondary-path
              case primary-reverse-path {
                container primary-reverse-path {
                  description
                    "TE primary reverse path";
                  choice primary-path-exist {
                    mandatory true;
                    description
                      "Whether the path reference to the primary
                      paths for which this path is the reverse-path
                      is to an existing te-tunnel path or to
                      another path request.";
                    case path-ref {
                      leaf primary-path-ref {
                        type leafref {
                          path "/te:te/te:tunnels/te:tunnel[te:name"
                            + "=current()/../../tunnel-ref]/"
                            + "te:primary-paths/te:primary-path/"
                            + "te:name";
                        }
                        must '../../tunnel-ref' {
                          description
                            "The primary-path can be referenced
                            if also the tunnel is referenced.";
                        }
                        mandatory true;
                        description
                          "The referenced primary path";
                      }
                    } // case path-ref
                    case path-request-ref {
                      leaf path-request-ref {
                        type leafref {
                          path "/te:tunnels-path-compute/"
                            + "te:path-compute-info/"
                            + "te-pc:path-request/"
                            + "te-pc:request-id";
                        }
                        mandatory true;
                        description
                          "The referenced primary path request";
                      }
                    } // case path-request-ref 
                  } // choice primary-path-exist
                } // container primary-reverse-path
              } // case primary-reverse-path
              case secondary-reverse-path {
                container secondary-reverse-path {
                  description
                    "TE secondary reverse path";
                  // uses te:path-preference;
                  uses protection-restoration-properties;
                  list primary-reverse-path {
                    min-elements 1;
                    description
                      "The list of primary reverse paths that
                      reference this path as a candidate
                      secondary reverse path";
                    choice primary-reverse-path-exist {
                      mandatory true;
                      description
                        "Whether the path reference is to an existing
                        te-tunnel path or to another path request";
                      case path-ref {
                        leaf primary-path-ref {
                          type leafref {
                            path "/te:te/te:tunnels/te:tunnel"
                              + "[te:name=current()/../../../"
                              + "tunnel-ref]/te:primary-paths/"
                              + "te:primary-path/te:name";
                          }
                          must '../../../tunnel-ref' {
                            description
                              "The primary-path can be referenced
                              if also the tunnel is referenced.";
                          }
                          mandatory true;
                          description
                            "The referenced primary path";
                        }
                      } // case path-ref
                      case path-request-ref {
                        leaf path-request-ref {
                          type leafref {
                            path "/te:tunnels-path-compute/"
                              + "te:path-compute-info/"
                              + "te-pc:path-request/"
                              + "te-pc:request-id";
                          }
                          mandatory true;
                          description
                            "The referenced primary reverse path
                            request";
                        }
                      } // case path-request-ref 
                    } // choice primary-reverse-path-exist
                  } // list primary-reverse-path-ref
                } // container secondary-reverse-path
              } // case secondary-reverse-path
            } // choice tunnel-path-role
          }
        } // case reference
        case value {
          leaf tunnel-name {
            type string;
            description
              "TE tunnel name.";
          }
          leaf path-name {
            type string;
            description
              "TE path name.";
          }
          choice path-role {
            when 'not (./source) and not (./destination) and
                  not (./src-tunnel-tp-id) and
                  not (./dst-tunnel-tp-id)' {
              description
                "When the tunnel attributes are specified by value
                within this path computation, it is assumed that the
                requested path will be the only path of a tunnel.

                If the requested path is a transit segment path
                (i.e., the source, src-tp-id, destination and
                dst-tp-id attributes are empty), it
                could be of any type. Otherwise it could only be a
                primary path.";
            }
            default primary-path;
            description
              "Indicates whether the requested path is a primary
              path, a secondary path, a reverse primary path or a
              reverse secondary path.";
            case primary-path {
              description
                "The requested path is a primary path.";
            }
            container secondary-path {
              presence
                "Indicates that the requested path is a secondary
                path.";
              description
                "The name of the primary path which the requested
                secondary path belongs to.";
              leaf primary-path-name {
                type string;
                description
                  "TE primary path name.";
              }
            } // container secondary-path
            container primary-reverse-path {
              presence
                "Indicates that the requested path is a primary
                reverse path.";
              description
                "The name of the primary path which the requested
                primary reverse path belongs to.";
              leaf primary-path-name {
                type string;
                description
                  "TE primary path name.";
              }
            } // container primary-reverse-path
            container secondary-reverse-path {
              presence
                "Indicates that the requested path is a secondary
                reverse path.";
              description
                "The names of the primary path and of the primary
                reverse path which the requested secondary reverse
                path belongs to.";
              leaf primary-path-name {
                type string;
                description
                  "TE primary path name.";
              }
              leaf primary-reverse-path-name {
                type string;
                description
                  "TE primary reverse path name.";
              }
            } // container primary-reverse-path
          } // choice path-role
          uses te:k-requested-paths;
          uses te-types:encoding-and-switching-type;
          uses te:tunnel-common-attributes;
          uses te-types:te-topology-identifier;
        } // case value
      } // choice tunnel-attributes
      uses te:path-compute-info;
      uses requested-info;
      uses requested-state;
    }
    list tunnel-attributes {
      key "tunnel-name";
      description
        "Tunnel attributes common to multiple request paths";
      leaf tunnel-name {
        type string;
        description
          "TE tunnel name.";
      }
      uses te-types:encoding-and-switching-type;
      uses te:tunnel-common-attributes;
      uses te:tunnel-associations-properties;
      uses protection-restoration-properties;
      uses te-types:tunnel-constraints;
      uses te:tunnel-hierarchy-properties {
        augment "hierarchy/dependency-tunnels" {
          description
            "Augment with the list of dependency tunnel requests.";
          list dependency-tunnel-attributes {
            key "name";
            description
              "A tunnel request entry that this tunnel request can
               potentially depend on.";
            leaf name {
              type leafref {
                path "/te:tunnels-path-compute/"
                   + "te:path-compute-info/te-pc:tunnel-attributes/"
                   + "te-pc:tunnel-name";
              }
              description
                "Dependency tunnel request name.";
            }
            uses te-types:encoding-and-switching-type;
          }
        }
      }
    }
    uses synchronization-info;
  } // path-compute rpc input

  augment "/te:tunnels-path-compute/te:output/"
        + "te:path-compute-result" {
    description
      "Auguments Path Computation RPC output";
    list response {
      key "response-id";
      config false;
      description
        "response";
      leaf response-id {
        type uint32;
        description
          "The response-id has the same value of the
           corresponding request-id.";
      }
      uses te:path-computation-response;
      uses reported-state;
    }
  } // path-compute rpc output

  augment "/te:tunnels-actions/te:input/te:tunnel-info/"
        + "te:filter-type" {
    description
      "Augment Tunnels Action RPC input filter types";
    case path-compute-transactions {
      when "derived-from-or-self(../te:action-info/te:action, "
         + "'tunnel-action-path-compute-delete')";
      description
        "Path Delete RPC input";
      leaf-list path-compute-transaction-id {
        type string;
        description
          "The list of the transaction-id values of the
           transient states to be deleted";
      }
    }
  } // path-delete rpc input

  augment "/te:tunnels-actions/te:output" {
    description
      "Augment Tunnels Action RPC output with path delete result";
    container path-computed-delete-result {
      description
        "Path Delete RPC output";
      leaf-list path-compute-transaction-id {
        type string;
        description
          "The list of the transaction-id values of the
           transient states that have been successfully deleted";
      }
    }
  } // path-delete rpc output
}
]]></sourcecode></figure>

</section>
</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>This document describes use cases of requesting Path Computation
   using YANG data models, which could be used at the ABNO Control
   Interface <xref target="RFC7491"/> and/or between controllers in ACTN <xref target="RFC8453"/>. As
   such, it does not introduce any new security considerations compared
   to the ones related to YANG specification, ABNO specification and
   ACTN Framework defined in <xref target="RFC7950"/>, <xref target="RFC7491"/> and <xref target="RFC8453"/>.</t>

<t>The YANG module defined in this document is designed to be accessed via
   the NETCONF protocol <xref target="RFC6241"/> or RESTCONF protocol <xref target="RFC8040"/>. The
   lowest NETCONF layer is the secure transport layer, and the
   mandatory-to-implement secure transport is Secure Shell (SSH)
   <xref target="RFC6242"/>. The lowest RESTCONF layer is HTTPS, and the mandatory-to-
   implement secure transport is TLS <xref target="RFC8446"/>.</t>

<t>The Network Configuration Access Control Model (NACM) 
   <xref target="RFC8341"/> provides the means to
   restrict access for particular NETCONF or RESTCONF users to a
   preconfigured subset of all available NETCONF or RESTCONF protocol
   operations and content.</t>

<t>The YANG module defined in this document augments the "tunnels-path-compute" and the "tunnel-actions" RPCs defined in <xref target="I-D.ietf-teas-yang-te"/>. The security considerations provided in <xref target="I-D.ietf-teas-yang-te"/> are also applicable to the YANG module
   defined in this document.</t>

<t>Some of the RPC operations defined in this YANG module may be considered
   sensitive or vulnerable in some network environments.  It is thus
   important to control access to these operations. These are the
   operations and their sensitivity/vulnerability:</t>

<t>"te-pc:response/computed-paths-properties": provides the same information provided by the "te:computed-paths-properties" defined in <xref target="I-D.ietf-teas-yang-te"/>. The security considerations provided in <xref target="I-D.ietf-teas-yang-te"/> for the TE tunnel state apply also to this subtree.</t>

<t>"te-pc:response/te-pc:tunnel-ref", "te-pc:response/te-pc:primary-path-ref", "te-pc:response/te-pc:primary-reverse-path-ref", "te-pc:response/te-pc:secondary-path-ref" and "te-pc:response/te-pc:secondary-reverse-path-ref" provides a reference where the same information provided in "te-pc:response/computed-paths-properties" is temporarly stored with the operational datastore (see <xref target="temp-state"/>). Therefore access to this information does not provide any additional security issue that the information provided with "te-pc:response/computed-paths-properties".</t>

<t>"/te:tunnels-actions": the YANG model defined in this document augments this action with a new action type that allows deleting the transient states of computed paths (see <xref target="temp-state"/>). A malicious use of this action would have no impact on the paths carrying live traffic but it would preclude the client from using the "transient states" to request the set-up of exactly that path, if still available.</t>

<t>The security considerations spelled out in the
   YANG specification <xref target="RFC7950"/> apply for this document as well.</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>This document registers the following URIs in the "ns" subregistry
   within the "IETF XML registry" <xref target="RFC3688"/>.</t>

<figure><artwork><![CDATA[
      URI: urn:ietf:params:xml:ns:yang:ietf-te-path-computation
      Registrant Contact:  The IESG.
      XML: N/A, the requested URI is an XML namespace.
]]></artwork></figure>

<t>This document registers a YANG module in the "YANG Module Names"
   registry <xref target="RFC7950"/>.</t>

<figure><artwork><![CDATA[
      name:      ietf-te-path-computation
      namespace: urn:ietf:params:xml:ns:yang:ietf-te-path-computation
      prefix:    te-pc
      reference: this document
]]></artwork></figure>

</section>


  </middle>

  <back>


    <references title='Normative References'>





<reference anchor='RFC6241' target='https://www.rfc-editor.org/info/rfc6241'>
<front>
<title>Network Configuration Protocol (NETCONF)</title>
<author fullname='R. Enns' initials='R.' role='editor' surname='Enns'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'><organization/></author>
<author fullname='A. Bierman' initials='A.' role='editor' surname='Bierman'><organization/></author>
<date month='June' year='2011'/>
<abstract><t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices.  It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages.  The NETCONF protocol operations are realized as remote procedure calls (RPCs).  This document obsoletes RFC 4741.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6241'/>
<seriesInfo name='DOI' value='10.17487/RFC6241'/>
</reference>



<reference anchor='RFC8040' target='https://www.rfc-editor.org/info/rfc8040'>
<front>
<title>RESTCONF Protocol</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<date month='January' year='2017'/>
<abstract><t>This document describes an HTTP-based protocol that provides a programmatic interface for accessing data defined in YANG, using the datastore concepts defined in the Network Configuration Protocol (NETCONF).</t></abstract>
</front>
<seriesInfo name='RFC' value='8040'/>
<seriesInfo name='DOI' value='10.17487/RFC8040'/>
</reference>



<reference anchor='RFC8795' target='https://www.rfc-editor.org/info/rfc8795'>
<front>
<title>YANG Data Model for Traffic Engineering (TE) Topologies</title>
<author fullname='X. Liu' initials='X.' surname='Liu'><organization/></author>
<author fullname='I. Bryskin' initials='I.' surname='Bryskin'><organization/></author>
<author fullname='V. Beeram' initials='V.' surname='Beeram'><organization/></author>
<author fullname='T. Saad' initials='T.' surname='Saad'><organization/></author>
<author fullname='H. Shah' initials='H.' surname='Shah'><organization/></author>
<author fullname='O. Gonzalez de Dios' initials='O.' surname='Gonzalez de Dios'><organization/></author>
<date month='August' year='2020'/>
<abstract><t>This document defines a YANG data model for representing, retrieving, and manipulating Traffic Engineering (TE) Topologies. The model serves as a base model that other technology-specific TE topology models can augment.</t></abstract>
</front>
<seriesInfo name='RFC' value='8795'/>
<seriesInfo name='DOI' value='10.17487/RFC8795'/>
</reference>


<reference anchor='I-D.ietf-teas-yang-te' target='https://datatracker.ietf.org/doc/html/draft-ietf-teas-yang-te-31'>
   <front>
      <title>A YANG Data Model for Traffic Engineering Tunnels, Label Switched Paths and Interfaces</title>
      <author fullname='Tarek Saad' initials='T.' surname='Saad'>
         <organization>Cisco Systems Inc</organization>
      </author>
      <author fullname='Rakesh Gandhi' initials='R.' surname='Gandhi'>
         <organization>Cisco Systems Inc</organization>
      </author>
      <author fullname='Xufeng Liu' initials='X.' surname='Liu'>
         <organization>IBM Corporation</organization>
      </author>
      <author fullname='Vishnu Pavan Beeram' initials='V. P.' surname='Beeram'>
         <organization>Juniper Networks</organization>
      </author>
      <author fullname='Igor Bryskin' initials='I.' surname='Bryskin'>
         <organization>Individual</organization>
      </author>
      <author fullname='Oscar Gonzalez de Dios' initials='O. G.' surname='de Dios'>
         <organization>Telefonica</organization>
      </author>
      <date day='24' month='October' year='2022'/>
      <abstract>
	 <t>   This document defines a YANG data model for the provisioning and
   management of Traffic Engineering (TE) tunnels, Label Switched Paths
   (LSPs), and interfaces.  The model covers data that is independent of
   any technology or dataplane encapsulation and is divided into two
   YANG modules that cover device-specific, and device independent data.

   This model covers data for configuration, operational state, remote
   procedural calls, and event notifications.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-teas-yang-te-31'/>
   
</reference>



<reference anchor='RFC7950' target='https://www.rfc-editor.org/info/rfc7950'>
<front>
<title>The YANG 1.1 Data Modeling Language</title>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<date month='August' year='2016'/>
<abstract><t>YANG is a data modeling language used to model configuration data, state data, Remote Procedure Calls, and notifications for network management protocols.  This document describes the syntax and semantics of version 1.1 of the YANG language.  YANG version 1.1 is a maintenance release of the YANG language, addressing ambiguities and defects in the original specification.  There are a small number of backward incompatibilities from YANG version 1.  This document also specifies the YANG mappings to the Network Configuration Protocol (NETCONF).</t></abstract>
</front>
<seriesInfo name='RFC' value='7950'/>
<seriesInfo name='DOI' value='10.17487/RFC7950'/>
</reference>



<reference anchor='RFC5440' target='https://www.rfc-editor.org/info/rfc5440'>
<front>
<title>Path Computation Element (PCE) Communication Protocol (PCEP)</title>
<author fullname='JP. Vasseur' initials='JP.' role='editor' surname='Vasseur'><organization/></author>
<author fullname='JL. Le Roux' initials='JL.' role='editor' surname='Le Roux'><organization/></author>
<date month='March' year='2009'/>
<abstract><t>This document specifies the Path Computation Element (PCE) Communication Protocol (PCEP) for communications between a Path Computation Client (PCC) and a PCE, or between two PCEs.  Such interactions include path computation requests and path computation replies as well as notifications of specific states related to the use of a PCE in the context of Multiprotocol Label Switching (MPLS) and Generalized MPLS (GMPLS) Traffic Engineering.  PCEP is designed to be flexible and extensible so as to easily allow for the addition of further messages and objects, should further requirements be expressed in the future.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5440'/>
<seriesInfo name='DOI' value='10.17487/RFC5440'/>
</reference>



<reference anchor='RFC7926' target='https://www.rfc-editor.org/info/rfc7926'>
<front>
<title>Problem Statement and Architecture for Information Exchange between Interconnected Traffic-Engineered Networks</title>
<author fullname='A. Farrel' initials='A.' role='editor' surname='Farrel'><organization/></author>
<author fullname='J. Drake' initials='J.' surname='Drake'><organization/></author>
<author fullname='N. Bitar' initials='N.' surname='Bitar'><organization/></author>
<author fullname='G. Swallow' initials='G.' surname='Swallow'><organization/></author>
<author fullname='D. Ceccarelli' initials='D.' surname='Ceccarelli'><organization/></author>
<author fullname='X. Zhang' initials='X.' surname='Zhang'><organization/></author>
<date month='July' year='2016'/>
<abstract><t>In Traffic-Engineered (TE) systems, it is sometimes desirable to establish an end-to-end TE path with a set of constraints (such as bandwidth) across one or more networks from a source to a destination.  TE information is the data relating to nodes and TE links that is used in the process of selecting a TE path.  TE information is usually only available within a network.  We call such a zone of visibility of TE information a domain.  An example of a domain may be an IGP area or an Autonomous System.</t><t>In order to determine the potential to establish a TE path through a series of connected networks, it is necessary to have available a certain amount of TE information about each network.  This need not be the full set of TE information available within each network but does need to express the potential of providing TE connectivity. This subset of TE information is called TE reachability information.</t><t>This document sets out the problem statement for the exchange of TE information between interconnected TE networks in support of end-to-end TE path establishment and describes the best current practice architecture to meet this problem statement.  For reasons that are explained in this document, this work is limited to simple TE constraints and information that determine TE reachability.</t></abstract>
</front>
<seriesInfo name='BCP' value='206'/>
<seriesInfo name='RFC' value='7926'/>
<seriesInfo name='DOI' value='10.17487/RFC7926'/>
</reference>



<reference anchor='RFC8340' target='https://www.rfc-editor.org/info/rfc8340'>
<front>
<title>YANG Tree Diagrams</title>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='L. Berger' initials='L.' role='editor' surname='Berger'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>This document captures the current syntax used in YANG module tree diagrams.  The purpose of this document is to provide a single location for this definition.  This syntax may be updated from time to time based on the evolution of the YANG language.</t></abstract>
</front>
<seriesInfo name='BCP' value='215'/>
<seriesInfo name='RFC' value='8340'/>
<seriesInfo name='DOI' value='10.17487/RFC8340'/>
</reference>


<reference anchor='I-D.ietf-teas-rfc8776-update' target='https://datatracker.ietf.org/doc/html/draft-ietf-teas-rfc8776-update-01'>
   <front>
      <title>Updated Common YANG Data Types for Traffic Engineering</title>
      <author fullname='Italo Busi' initials='I.' surname='Busi'>
         <organization>Huawei</organization>
      </author>
      <author fullname='Aihua Guo' initials='A.' surname='Guo'>
         <organization>Futurewei Technologies</organization>
      </author>
      <author fullname='Xufeng Liu' initials='X.' surname='Liu'>
         <organization>IBM Corporation</organization>
      </author>
      <author fullname='Tarek Saad' initials='T.' surname='Saad'>
         <organization>Juniper Networks</organization>
      </author>
      <author fullname='Rakesh Gandhi' initials='R.' surname='Gandhi'>
         <organization>Cisco Systems, Inc.</organization>
      </author>
      <author fullname='Vishnu Pavan Beeram' initials='V. P.' surname='Beeram'>
         <organization>Juniper Networks</organization>
      </author>
      <author fullname='Igor Bryskin' initials='I.' surname='Bryskin'>
         <organization>Individual</organization>
      </author>
      <date day='24' month='October' year='2022'/>
      <abstract>
	 <t>   This document defines few additional common data types, identities,
   and groupings in YANG data modeling language to be imported by
   modules that model Traffic Engineering (TE) configuration and state
   capabilities.

   Editors&#39; note: Copy the text from [RFC8776] and merge it with the
   content of this section before WG LC if the RFC8876-bis approach is
   confirmed.

   This document updates RFC 8776 with a new revision of the module
   ietf-te-types.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-teas-rfc8776-update-01'/>
   
</reference>



<reference anchor='RFC5441' target='https://www.rfc-editor.org/info/rfc5441'>
<front>
<title>A Backward-Recursive PCE-Based Computation (BRPC) Procedure to Compute Shortest Constrained Inter-Domain Traffic Engineering Label Switched Paths</title>
<author fullname='JP. Vasseur' initials='JP.' role='editor' surname='Vasseur'><organization/></author>
<author fullname='R. Zhang' initials='R.' surname='Zhang'><organization/></author>
<author fullname='N. Bitar' initials='N.' surname='Bitar'><organization/></author>
<author fullname='JL. Le Roux' initials='JL.' surname='Le Roux'><organization/></author>
<date month='April' year='2009'/>
<abstract><t>The ability to compute shortest constrained Traffic Engineering Label Switched Paths (TE LSPs) in Multiprotocol Label Switching (MPLS) and Generalized MPLS (GMPLS) networks across multiple domains has been identified as a key requirement.  In this context, a domain is a collection of network elements within a common sphere of address management or path computational responsibility such as an IGP area or an Autonomous Systems.  This document specifies a procedure relying on the use of multiple Path Computation Elements (PCEs) to compute such inter-domain shortest constrained paths across a predetermined sequence of domains, using a backward-recursive path computation technique.  This technique preserves confidentiality across domains, which is sometimes required when domains are managed by different service providers.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5441'/>
<seriesInfo name='DOI' value='10.17487/RFC5441'/>
</reference>



<reference anchor='RFC5541' target='https://www.rfc-editor.org/info/rfc5541'>
<front>
<title>Encoding of Objective Functions in the Path Computation Element Communication Protocol (PCEP)</title>
<author fullname='JL. Le Roux' initials='JL.' surname='Le Roux'><organization/></author>
<author fullname='JP. Vasseur' initials='JP.' surname='Vasseur'><organization/></author>
<author fullname='Y. Lee' initials='Y.' surname='Lee'><organization/></author>
<date month='June' year='2009'/>
<abstract><t>The computation of one or a set of Traffic Engineering Label Switched Paths (TE LSPs) in MultiProtocol Label Switching (MPLS) and Generalized MPLS (GMPLS) networks is subject to a set of one or more specific optimization criteria, referred to as objective functions (e.g., minimum cost path, widest path, etc.).</t><t>In the Path Computation Element (PCE) architecture, a Path Computation Client (PCC) may want a path to be computed for one or more TE LSPs according to a specific objective function.  Thus, the PCC needs to instruct the PCE to use the correct objective function. Furthermore, it is possible that not all PCEs support the same set of objective functions; therefore, it is useful for the PCC to be able to automatically discover the set of objective functions supported by each PCE.</t><t>This document defines extensions to the PCE communication Protocol (PCEP) to allow a PCE to indicate the set of objective functions it supports.  Extensions are also defined so that a PCC can indicate in a path computation request the required objective function, and a PCE can report in a path computation reply the objective function that was used for path computation.</t><t>This document defines objective function code types for six objective functions previously listed in the PCE requirements work, and provides the definition of four new metric types that apply to a set of synchronized requests.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5541'/>
<seriesInfo name='DOI' value='10.17487/RFC5541'/>
</reference>



<reference anchor='RFC8776' target='https://www.rfc-editor.org/info/rfc8776'>
<front>
<title>Common YANG Data Types for Traffic Engineering</title>
<author fullname='T. Saad' initials='T.' surname='Saad'><organization/></author>
<author fullname='R. Gandhi' initials='R.' surname='Gandhi'><organization/></author>
<author fullname='X. Liu' initials='X.' surname='Liu'><organization/></author>
<author fullname='V. Beeram' initials='V.' surname='Beeram'><organization/></author>
<author fullname='I. Bryskin' initials='I.' surname='Bryskin'><organization/></author>
<date month='June' year='2020'/>
<abstract><t>This document defines a collection of common data types and groupings in YANG data modeling language. These derived common types and groupings are intended to be imported by modules that model Traffic Engineering (TE) configuration and state capabilities.</t></abstract>
</front>
<seriesInfo name='RFC' value='8776'/>
<seriesInfo name='DOI' value='10.17487/RFC8776'/>
</reference>



<reference anchor='RFC6242' target='https://www.rfc-editor.org/info/rfc6242'>
<front>
<title>Using the NETCONF Protocol over Secure Shell (SSH)</title>
<author fullname='M. Wasserman' initials='M.' surname='Wasserman'><organization/></author>
<date month='June' year='2011'/>
<abstract><t>This document describes a method for invoking and running the Network Configuration Protocol (NETCONF) within a Secure Shell (SSH) session as an SSH subsystem.  This document obsoletes RFC 4742.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6242'/>
<seriesInfo name='DOI' value='10.17487/RFC6242'/>
</reference>



<reference anchor='RFC8446' target='https://www.rfc-editor.org/info/rfc8446'>
<front>
<title>The Transport Layer Security (TLS) Protocol Version 1.3</title>
<author fullname='E. Rescorla' initials='E.' surname='Rescorla'><organization/></author>
<date month='August' year='2018'/>
<abstract><t>This document specifies version 1.3 of the Transport Layer Security (TLS) protocol.  TLS allows client/server applications to communicate over the Internet in a way that is designed to prevent eavesdropping, tampering, and message forgery.</t><t>This document updates RFCs 5705 and 6066, and obsoletes RFCs 5077, 5246, and 6961.  This document also specifies new requirements for TLS 1.2 implementations.</t></abstract>
</front>
<seriesInfo name='RFC' value='8446'/>
<seriesInfo name='DOI' value='10.17487/RFC8446'/>
</reference>



<reference anchor='RFC8341' target='https://www.rfc-editor.org/info/rfc8341'>
<front>
<title>Network Configuration Access Control Model</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>The standardization of network configuration interfaces for use with the Network Configuration Protocol (NETCONF) or the RESTCONF protocol requires a structured and secure operating environment that promotes human usability and multi-vendor interoperability.  There is a need for standard mechanisms to restrict NETCONF or RESTCONF protocol access for particular users to a preconfigured subset of all available NETCONF or RESTCONF protocol operations and content.  This document defines such an access control model.</t><t>This document obsoletes RFC 6536.</t></abstract>
</front>
<seriesInfo name='STD' value='91'/>
<seriesInfo name='RFC' value='8341'/>
<seriesInfo name='DOI' value='10.17487/RFC8341'/>
</reference>



<reference anchor='RFC3688' target='https://www.rfc-editor.org/info/rfc3688'>
<front>
<title>The IETF XML Registry</title>
<author fullname='M. Mealling' initials='M.' surname='Mealling'><organization/></author>
<date month='January' year='2004'/>
<abstract><t>This document describes an IANA maintained registry for IETF standards which use Extensible Markup Language (XML) related items such as Namespaces, Document Type Declarations (DTDs), Schemas, and Resource Description Framework (RDF) Schemas.</t></abstract>
</front>
<seriesInfo name='BCP' value='81'/>
<seriesInfo name='RFC' value='3688'/>
<seriesInfo name='DOI' value='10.17487/RFC3688'/>
</reference>




    </references>

    <references title='Informative References'>





<reference anchor='RFC7491' target='https://www.rfc-editor.org/info/rfc7491'>
<front>
<title>A PCE-Based Architecture for Application-Based Network Operations</title>
<author fullname='D. King' initials='D.' surname='King'><organization/></author>
<author fullname='A. Farrel' initials='A.' surname='Farrel'><organization/></author>
<date month='March' year='2015'/>
<abstract><t>Services such as content distribution, distributed databases, or inter-data center connectivity place a set of new requirements on the operation of networks.  They need on-demand and application-specific reservation of network connectivity, reliability, and resources (such as bandwidth) in a variety of network applications (such as point-to-point connectivity, network virtualization, or mobile back-haul) and in a range of network technologies from packet (IP/MPLS) down to optical.  An environment that operates to meet these types of requirements is said to have Application-Based Network Operations (ABNO).  ABNO brings together many existing technologies and may be seen as the use of a toolbox of existing components enhanced with a few new elements.</t><t>This document describes an architecture and framework for ABNO, showing how these components fit together.  It provides a cookbook of existing technologies to satisfy the architecture and meet the needs of the applications.</t></abstract>
</front>
<seriesInfo name='RFC' value='7491'/>
<seriesInfo name='DOI' value='10.17487/RFC7491'/>
</reference>



<reference anchor='RFC8453' target='https://www.rfc-editor.org/info/rfc8453'>
<front>
<title>Framework for Abstraction and Control of TE Networks (ACTN)</title>
<author fullname='D. Ceccarelli' initials='D.' role='editor' surname='Ceccarelli'><organization/></author>
<author fullname='Y. Lee' initials='Y.' role='editor' surname='Lee'><organization/></author>
<date month='August' year='2018'/>
<abstract><t>Traffic Engineered (TE) networks have a variety of mechanisms to facilitate the separation of the data plane and control plane.  They also have a range of management and provisioning protocols to configure and activate network resources.  These mechanisms represent key technologies for enabling flexible and dynamic networking.  The term &quot;Traffic Engineered network&quot; refers to a network that uses any connection-oriented technology under the control of a distributed or centralized control plane to support dynamic provisioning of end-to- end connectivity.</t><t>Abstraction of network resources is a technique that can be applied to a single network domain or across multiple domains to create a single virtualized network that is under the control of a network operator or the customer of the operator that actually owns the network resources.</t><t>This document provides a framework for Abstraction and Control of TE Networks (ACTN) to support virtual network services and connectivity services.</t></abstract>
</front>
<seriesInfo name='RFC' value='8453'/>
<seriesInfo name='DOI' value='10.17487/RFC8453'/>
</reference>



<reference anchor='RFC8454' target='https://www.rfc-editor.org/info/rfc8454'>
<front>
<title>Information Model for Abstraction and Control of TE Networks (ACTN)</title>
<author fullname='Y. Lee' initials='Y.' surname='Lee'><organization/></author>
<author fullname='S. Belotti' initials='S.' surname='Belotti'><organization/></author>
<author fullname='D. Dhody' initials='D.' surname='Dhody'><organization/></author>
<author fullname='D. Ceccarelli' initials='D.' surname='Ceccarelli'><organization/></author>
<author fullname='B. Yoon' initials='B.' surname='Yoon'><organization/></author>
<date month='September' year='2018'/>
<abstract><t>This document provides an information model for Abstraction and Control of TE Networks (ACTN).</t></abstract>
</front>
<seriesInfo name='RFC' value='8454'/>
<seriesInfo name='DOI' value='10.17487/RFC8454'/>
</reference>


<reference anchor='I-D.ietf-ccamp-otn-topo-yang' target='https://datatracker.ietf.org/doc/html/draft-ietf-ccamp-otn-topo-yang-16'>
   <front>
      <title>A YANG Data Model for Optical Transport Network Topology</title>
      <author fullname='Haomian Zheng' initials='H.' surname='Zheng'>
         <organization>Huawei Technologies</organization>
      </author>
      <author fullname='Italo Busi' initials='I.' surname='Busi'>
         <organization>Huawei Technologies</organization>
      </author>
      <author fullname='Xufeng Liu' initials='X.' surname='Liu'>
         <organization>IBM Corporation</organization>
      </author>
      <author fullname='Sergio Belotti' initials='S.' surname='Belotti'>
         <organization>Nokia</organization>
      </author>
      <author fullname='Oscar Gonzalez de Dios' initials='O. G.' surname='de Dios'>
         <organization>Telefonica</organization>
      </author>
      <date day='23' month='November' year='2022'/>
      <abstract>
	 <t>   This document describes a YANG data model to describe the topologies
   of an Optical Transport Network (OTN).  It is independent of control
   plane protocols and captures topological and resource-related
   information pertaining to OTN.  This model enables clients, which
   interact with a transport domain controller, for OTN topology-related
   operations such as obtaining the relevant topology resource
   information.


	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-ccamp-otn-topo-yang-16'/>
   
</reference>



<reference anchor='RFC4655' target='https://www.rfc-editor.org/info/rfc4655'>
<front>
<title>A Path Computation Element (PCE)-Based Architecture</title>
<author fullname='A. Farrel' initials='A.' surname='Farrel'><organization/></author>
<author fullname='J.-P. Vasseur' initials='J.-P.' surname='Vasseur'><organization/></author>
<author fullname='J. Ash' initials='J.' surname='Ash'><organization/></author>
<date month='August' year='2006'/>
<abstract><t>Constraint-based path computation is a fundamental building block for traffic engineering systems such as Multiprotocol Label Switching (MPLS) and Generalized Multiprotocol Label Switching (GMPLS) networks.  Path computation in large, multi-domain, multi-region, or multi-layer networks is complex and may require special computational components and cooperation between the different network domains.</t><t>This document specifies the architecture for a Path Computation Element (PCE)-based model to address this problem space.  This document does not attempt to provide a detailed description of all the architectural components, but rather it describes a set of building blocks for the PCE architecture from which solutions may be constructed.  This memo provides information for the Internet community.</t></abstract>
</front>
<seriesInfo name='RFC' value='4655'/>
<seriesInfo name='DOI' value='10.17487/RFC4655'/>
</reference>



<reference anchor='RFC8342' target='https://www.rfc-editor.org/info/rfc8342'>
<front>
<title>Network Management Datastore Architecture (NMDA)</title>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' surname='Schoenwaelder'><organization/></author>
<author fullname='P. Shafer' initials='P.' surname='Shafer'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<author fullname='R. Wilton' initials='R.' surname='Wilton'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>Datastores are a fundamental concept binding the data models written in the YANG data modeling language to network management protocols such as the Network Configuration Protocol (NETCONF) and RESTCONF. This document defines an architectural framework for datastores based on the experience gained with the initial simpler model, addressing requirements that were not well supported in the initial model.  This document updates RFC 7950.</t></abstract>
</front>
<seriesInfo name='RFC' value='8342'/>
<seriesInfo name='DOI' value='10.17487/RFC8342'/>
</reference>



<reference anchor='RFC6805' target='https://www.rfc-editor.org/info/rfc6805'>
<front>
<title>The Application of the Path Computation Element Architecture to the Determination of a Sequence of Domains in MPLS and GMPLS</title>
<author fullname='D. King' initials='D.' role='editor' surname='King'><organization/></author>
<author fullname='A. Farrel' initials='A.' role='editor' surname='Farrel'><organization/></author>
<date month='November' year='2012'/>
<abstract><t>Computing optimum routes for Label Switched Paths (LSPs) across multiple domains in MPLS Traffic Engineering (MPLS-TE) and GMPLS networks presents a problem because no single point of path computation is aware of all of the links and resources in each domain.  A solution may be achieved using the Path Computation Element (PCE) architecture.</t><t>Where the sequence of domains is known a priori, various techniques can be employed to derive an optimum path.  If the domains are simply connected, or if the preferred points of interconnection are also known, the Per-Domain Path Computation technique can be used.  Where there are multiple connections between domains and there is no preference for the choice of points of interconnection, the Backward-Recursive PCE-based Computation (BRPC) procedure can be used to derive an optimal path.</t><t>This document examines techniques to establish the optimum path when the sequence of domains is not known in advance.  The document shows how the PCE architecture can be extended to allow the optimum sequence of domains to be selected, and the optimum end-to-end path to be derived through the use of a hierarchical relationship between domains.  This document is not an Internet Standards Track  specification; it is published for informational purposes.</t></abstract>
</front>
<seriesInfo name='RFC' value='6805'/>
<seriesInfo name='DOI' value='10.17487/RFC6805'/>
</reference>



<reference anchor='RFC7446' target='https://www.rfc-editor.org/info/rfc7446'>
<front>
<title>Routing and Wavelength Assignment Information Model for Wavelength Switched Optical Networks</title>
<author fullname='Y. Lee' initials='Y.' role='editor' surname='Lee'><organization/></author>
<author fullname='G. Bernstein' initials='G.' role='editor' surname='Bernstein'><organization/></author>
<author fullname='D. Li' initials='D.' surname='Li'><organization/></author>
<author fullname='W. Imajuku' initials='W.' surname='Imajuku'><organization/></author>
<date month='February' year='2015'/>
<abstract><t>This document provides a model of information needed by the Routing and Wavelength Assignment (RWA) process in Wavelength Switched Optical Networks (WSONs).  The purpose of the information described in this model is to facilitate constrained optical path computation in WSONs.  This model takes into account compatibility constraints between WSON signal attributes and network elements but does not include constraints due to optical impairments.  Aspects of this information that may be of use to other technologies utilizing a GMPLS control plane are discussed.</t></abstract>
</front>
<seriesInfo name='RFC' value='7446'/>
<seriesInfo name='DOI' value='10.17487/RFC7446'/>
</reference>




    </references>


<section anchor="examples"><name>Examples</name>

<t>This section contains examples of use of the model with RESTCONF
<xref target="RFC8040"/> and JSON encoding.</t>

<t>These examples show how path computation can be requested for the tunnels configuration provided in Appendix A of <xref target="I-D.ietf-teas-yang-te"/>.</t>

<section anchor="basic-example"><name>Basic Path Computation</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 12.1 of of <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>In this case, the TE Tunnel has only one primary path with no specific constraints.</t>

<figure><artwork type="ascii-art"><![CDATA[
POST /restconf/operations/ietf-te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="basic.json"><![CDATA[
{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 1,
          "tunnel-name": "Example_LSP_Tunnel_A_2",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "192.0.2.1",
          "destination": "192.0.2.4",
          "bidirectional": "false",
          "signaling-type": "te-types:path-setup-rsvp"
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="transient-state-example"><name>Path Computation with transient state</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 12.1 of of <xref target="I-D.ietf-teas-yang-te"/> requesting some transient state to be reported within the operational datastore, as described <xref target="temp-state"/>.</t>

<t>In this case, the TE Tunnel has only one primary path with no specific constraints.</t>

<figure><artwork type="ascii-art"><![CDATA[
POST /restconf/operations/ietf-te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="transient-state.json"><![CDATA[
{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 2,
          "tunnel-name": "Example_LSP_Tunnel_A_2",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "192.0.2.1",
          "destination": "192.0.2.4",
          "bidirectional": "false",
          "signaling-type": "te-types:path-setup-rsvp",
          "requested-state": {
            "transaction-id": "example"
          }
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="global-path-constraint-example"><name>Path Computation with Global Path Constraint</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 12.3 of of <xref target="I-D.ietf-teas-yang-te"/>. The 'named path constraint' is created in section 12.2 of <xref target="I-D.ietf-teas-yang-te"/> applies to this path computation request.</t>

<figure><artwork type="ascii-art"><![CDATA[
POST /restconf/operations/ietf-te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="global-path-constraint.json"><![CDATA[
{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 3,
          "tunnel-name": "Example_LSP_Tunnel_A_4_1",
          "path-name": "Simple_LSP_1",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "192.0.2.1",
          "destination": "192.0.2.4",
          "bidirectional": "false",
          "signaling-type": "path-setup-rsvp",
          "named-path-constraint": "max-hop-3",
          "requested-state": {}
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="tunnel-path-constraint-example"><name>Path Computation with Per-tunnel Path Constraint</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 12.4 of of <xref target="I-D.ietf-teas-yang-te"/>, using a per tunnel path constraint.</t>

<figure><artwork type="ascii-art"><![CDATA[
POST /restconf/operations/ietf-te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="tunnel-path-constraint.json"><![CDATA[
{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 4,
          "tunnel-name": "Example_LSP_Tunnel_A_4_2",
          "path-name": "path1",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "192.0.2.1",
          "destination": "192.0.2.4",
          "bidirectional": "false",
          "signaling-type": "te-types:path-setup-rsvp",
          "path-metric-bounds": {
            "path-metric-bound": [
              {
                "metric-type": "te-types:path-metric-hop",
                "upper-bound": "3"
              }
            ]
          }
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="path-computation-result"><name>Path Computation result</name>

<t>This example reports the output of the path computation RPC request described in <xref target="tunnel-path-constraint-example"/>.</t>

<figure><artwork type="ascii-art"><![CDATA[
HTTP/1.1 200 OK
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="computed-path.json"><![CDATA[
{
  "ietf-te:output": {
    "path-compute-result": {
      "ietf-te-path-computation:response": [
        {
          "response-id": 3,
          "computed-paths-properties": {
            "computed-path-properties": [
              {
                "k-index": "1",
                "path-properties": {
                  "path-route-objects": {
                    "path-route-object": [
                      {
                        "index": "1",
                        "numbered-node-hop": {
                          "node-id": "192.0.2.2"
                        }
                      },
                      {
                        "index": "2",
                        "numbered-node-hop": {
                          "node-id": "192.0.2.4"
                        }
                      }
                    ]
                  }
                }
              }
            ]
          },
          "tunnel-ref": "Example_LSP_Tunnel_A_4_1",
          "primary-path-ref": "path1"
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="path-computation-with-primary-and-secondary-paths"><name>Path Computation with Primary and Secondary Paths</name>

<t>This section contains examples of use of the model to compute primary and secondary paths described in section 12.6 of <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>These examples consider the cases where:
- primary and reverse paths are unidirectional and not co-routed (example-1);
- primary and reverse paths are bidirectional (example-3);
- primary and reverse paths are unidirectional and co-routed (example-4).</t>

<figure><artwork type="ascii-art"><![CDATA[
POST /restconf/operations/ietf-te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="primary-secondary-paths.json"><![CDATA[
{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 1,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "primary-1 (fwd)",
            "primary-path": {}
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 2,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "primary-2 (rev)",
            "primary-reverse-path": {
              "primary-path-request-ref": 1
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.3",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 3,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-1 (fwd)",
            "secondary-path": {
              "primary-path": [
                {
                  "path-request-ref": 1
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.1"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 4,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-2 (fwd)",
            "secondary-path": {
              "primary-path": [
                {
                  "path-request-ref": 1
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.5",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 5,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-3 (rev)",
            "secondary-reverse-path": {
              "primary-reverse-path": [
                {
                  "path-request-ref": 2
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.5"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.4",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 6,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-4 (rev)",
            "secondary-reverse-path": {
              "primary-reverse-path": [
                {
                  "path-request-ref": 2
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.4"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.3",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 7,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-5 (rev)",
            "secondary-reverse-path": {
              "primary-reverse-path": [
                {
                  "path-request-ref": 2
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.3"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.1",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 8,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-3",
            "path-name": "primary-1 (bidir)",
            "primary-path": {}
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 9,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-3",
            "path-name": "secondary-1 (bidir)",
            "secondary-path": {
              "primary-path": [
                {
                  "path-request-ref": 8
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.1"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 10,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-3",
            "path-name": "secondary-2 (bidir)",
            "secondary-path": {
              "primary-path": [
                {
                  "path-request-ref": 8
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.5",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 11,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-4",
            "path-name": "primary-1 (fwd)",
            "primary-path": {
              "co-routed": [null]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 12,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-4",
            "path-name": "primary-2 (rev)",
            "primary-reverse-path": {
              "primary-path-request-ref": 11
            }
          }
        },
        {
          "request-id": 13,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-4",
            "path-name": "secondary-1 (fwd)",
            "secondary-path": {
              "primary-path": [
                {
                  "co-routed": [null],
                  "path-request-ref": 11
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.1"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 14,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-4",
            "path-name": "secondary-2 (fwd)",
            "secondary-path": {
              "primary-path": [
                {
                  "co-routed": [null],
                  "path-request-ref": 11
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.5",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 15,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-3 (rev)",
            "secondary-reverse-path": {
              "primary-reverse-path": [
                {
                  "path-request-ref": 12
                }
              ]
            }
          }
        },
        {
          "request-id": 16,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-4 (rev)",
            "secondary-reverse-path": {
              "primary-reverse-path": [
                {
                  "path-request-ref": 12
                }
              ]
            }
          }
        }
      ],
      "ietf-te-path-computation:tunnel-attributes": [
        {
          "tunnel-name": "example-1",
          "source": "192.0.2.1",
          "destination": "192.0.2.5",
          "bidirectional": "false"
        },
        {
          "tunnel-name": "example-3",
          "source": "192.0.2.1",
          "destination": "192.0.2.5",
          "bidirectional": "true"
        },
        {
          "tunnel-name": "example-4",
          "source": "192.0.2.1",
          "destination": "192.0.2.5",
          "bidirectional": "false"
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
</section>
<section numbered="false" anchor="acknowledgments"><name>Acknowledgments</name>

<t>The authors would like to thank Igor Bryskin and Xian Zhang for
   participating in the initial discussions that have triggered this
   work and providing valuable insights.</t>

<t>The authors would like to thank the authors of the TE tunnel YANG
   data model <xref target="I-D.ietf-teas-yang-te"/>, in particular Igor Bryskin, Vishnu Pavan
   Beeram, Tarek Saad and Xufeng Liu, for their inputs to the
   discussions and support in having consistency between the Path
   Computation and TE tunnel YANG data models.</t>

<t>The authors would like to thank Adrian Farrel, Dhruv Dhody, Igor
   Bryskin, Julien Meuric and Lou Berger for their valuable input to the
   discussions that has clarified that the path being set up is not
   necessarily the same as the path that has been previously computed
   and, in particular to Dhruv Dhody, for his suggestion to describe the
   need for a path verification phase to check that the actual path
   being set up meets the required end-to-end metrics and constraints.</t>

<t>The authors would like to thank Aihua Guo, Lou Berger, Shaolong Gan,
   Martin Bjorklund and Tom Petch for their useful comments on how to
   define XPath statements in YANG RPCs.</t>

<t>The authors would like to thank Haomian Zheng, Yanlei Zheng, Tom
   Petch, Aihua Guo and Martin Bjorklund for their review and valuable
   comments to this document.</t>

<t>Previous versions of document were prepared using 2-Word-v2.0.template.dot.</t>

<t>This document was prepared using kramdown.</t>

</section>

    <section anchor="contributors" numbered="false" toc="include" removeInRFC="false">
        <name>Contributors</name>
    <contact initials="V." surname="Lopez" fullname="Victor Lopez">
      <organization>Nokia</organization>
      <address>
        <email>victor.lopez@nokia.com</email>
      </address>
    </contact>
    <contact initials="R." surname="Vilalta" fullname="Ricard Vilalta">
      <organization>CTTC</organization>
      <address>
        <email>ricard.vilalta@cttc.es</email>
      </address>
    </contact>
    <contact initials="K." surname="Sethuraman" fullname="Karthik Sethuraman">
      <organization>NEC</organization>
      <address>
        <email>karthik.sethuraman@necam.com</email>
      </address>
    </contact>
    <contact initials="M." surname="Scharf" fullname="Michael Scharf">
      <organization>Nokia</organization>
      <address>
        <email>michael.scharf@gmail.com</email>
      </address>
    </contact>
    <contact initials="D." surname="Beller" fullname="Dieter Beller">
      <organization>Nokia</organization>
      <address>
        <email>dieter.beller@nokia.com</email>
      </address>
    </contact>
    <contact initials="G." surname="Bruno" fullname="Gianmarco Bruno">
      <organization>Ericsson</organization>
      <address>
        <email>gianmarco.bruno@ericsson.com</email>
      </address>
    </contact>
    <contact initials="F." surname="Lazzeri" fullname="Francesco Lazzeri">
      <organization>Ericsson</organization>
      <address>
        <email>francesco.lazzeri@ericsson.com</email>
      </address>
    </contact>
    <contact initials="Y." surname="Lee" fullname="Young Lee">
      <organization>Samsung Electronics</organization>
      <address>
        <email>younglee.tx@gmail.com</email>
      </address>
    </contact>
    <contact initials="C." surname="Perocchio" fullname="Carlo Perocchio">
      <organization>Ericsson</organization>
      <address>
        <email>carlo.perocchio@ericsson.com</email>
      </address>
    </contact>
    <contact initials="O." surname="Dugeon" fullname="Olivier Dugeon">
      <organization>Orange Labs</organization>
      <address>
        <email>olivier.dugeon@orange.com</email>
      </address>
    </contact>
    <contact initials="J." surname="Meuric" fullname="Julien Meuric">
      <organization>Orange Labs</organization>
      <address>
        <email>julien.meuric@orange.com</email>
      </address>
    </contact>
    </section>

  </back>

<!-- ##markdown-source:
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
AEtM8HtuUoqRxBbmvXmQ7QLH2MPWRUlvXsgWqpr2jEVaBGhZ5YvsqpQXaS8u
0chxRgEWWwNonxXm/Ft19AKr0sPEU5iNRVOcEf/5aE9yJVJbjbaO15GDVMPj
STG+pGLNQpzi1IGMXmKyDk+Cw3TdNv30iQ4WdikG/WRCDkoVpIqqBmuuNjki
QcDZnAwQxnojaa60G5nVDXRYrwJoN5fERH5anGGMeHYRmyFRpwlNv+r3287E
YIObyo/UsFmEK73LMiUwI38aFaPbTX5ognA5OygHs4IahkmfBsmFIXhkfQ9I
zxEnq5a3xJly1AyGyE2Sd0sWos6gwU7nTiRfvkacvqw6YtJGiT4yJouTqctg
A+pVUqdLldeWnB8k1vqU1s1jUebD3e9OX73Zy86X+YW2ab5+le2+ls1/ldfA
clpSvjnroKfAmX33VHDeaM6bSEoKgbgzYlk72e6T16+O9jKY8rJacM5kthNk
GFBfrub85k6nFfBK45H7wRFADN2aJr8oyApSyZ5h2T5HJc6Wiu55ZGGlDFqr
99Xyvcu+qTVasunYhUrWRWe5KpytpinYV/MMVmoAMN4WtQ32Nim2XlN6PzjY
AjWvFsgTrRV+GlhccLOuC2C2yK15JW5ltATKksUbfHQyy07s0hpVwQIgvsIC
eGxbkJVQ6RBrgXQKJzoT0hngghdonDxksod1smGIZ6RxcC4cG3OhAYljgtll
F012cDsdzmISoM0vy+J9YabQ5oeZJXS8Q+nAWCelDIv5XZvEDsZKiIRkj4lk
6XuEUGLKbc4kaydOk/FYpbqjOn7a91vqxVvMJbtP9uSLyG9H/Nu4R/Pbvt/6
hzAufCjVY+Lsqcq/+XbUELHwZffn26EhOAFzfAiK+zENeqDQnoFK1Psj/Hys
EZIeYj/4goQ0DUX/EJ8atP2/ji6Mw8VIurCLUQB/W67eJRrjXiXBUWM907Te
M57p0L+890Ok3eun4jUzhH6419PsrfdFqpkloWn/pObP09sxzfpGi+2pL/9r
3mW0AOJVp8KrQvdN6mAY2YC4b9OQouBinvzSeUOdlGJzh/aVbLN+kHTfcDkq
Es9MGmtzIRiWzwULZmFqcAWjL2TaiwRzIDMZHPovbxy8gXDkZq7TiRFeTJeJ
ebHLvVvyOGx4xHJAZ0a68TeNBeeVXzMA7g5P4JpEs5oTkKf407F9jkTpAt/P
MDc9q2SwE/i2umqupeKUFhmsgGjyiIqAGGbs7EqDLnmnJw1iLiCdyR+FluKH
tlg1nOulMrtLw9iEo32CnpbzvBJFNISV464rkM6vqUyvzgwrgB2goIAkgYuh
7MeX5XJBgozVVlQLT6Qh4MTZNCo6hE8UTI5EvutNva5YtWpIN0V1FwUnO7+W
DC2R99aG49T3mRGgjUiKL5FnbV66vLdxCWmWvVzNlXiEKdoNeTgB0gqPgmWa
YyKDWDwRHZNMxrKwfW93Uzd+7isUzqrxchjRZUwOa5Qg5tWtCgSyXMC1B9/w
g2BaK867wliWQij/tTzp2nHYz1bqt7HlAXot+XWsrjhjPY9BCZgNzkS0tmmK
z+VNxqJTP8VahMQExK5hacsPD4P3jtyINhZiu8+tG6jnQ1P+DAPdIqY+H2jz
N4VozEcPFO5Dts2XaiAryZjgJO/Lh7EvH7kvvYFCaLf5MjaQhXabLyMD0WY/
uI18+TD25aPbvzpEPx+OzFz0pSbF6Jf9A90+efHgAXnDP3nx8MGt/fLhI/ny
0YPb3oH6J49/GRuIJdytcESK0l8PIg9HDw2OHiocPTY4etiPI/v5uXZtPI56
B4oRcTiQB1RiIETQo9v+gaDNo0e38YE0u/p0mLF96n+ZYrVvwy/CTxicl+TZ
ZqQoRJFEQ2nmzyNFcRRLWNRzi9BIUTqKJT7qu46mTMSP1el//PBTPfLIgdIQ
3WWgwS+2HUjz7I8ZiC6Mx7d/RxClvxg9kFzzjz9yoNQR2X6gsR9j7Agn3voT
WkO0BmGsIZ56K1qWrTVJarVot52HUa1qGO9z0/NvaTkRbUUrtVHLhTV8+3aK
WajwkuZhjAdoc8nF4dJqQcYCYzVEZ7MIrROhaqX8+nB8q+Xa0FKtgDGSJso/
cRsceZagaG9djSYoogP/hHV9nuVSC63RGEoYiUITkXoDyh5M2AWxx0D0aMZT
yhMQ451wbhTNRhmOYEB+SXyktP2ulh8zT+hEwN7mheYA89a1dkp/2YoRgN5e
yGWU7AXNmI0Pnqzc5tM+czGz7LmNv02URjIJqdE2YtvaotkJCrEWsaAGldgX
qJyUjvxVBTcjE3UrtwbkkyqyJK6iZNjqpBsfORXZCKydyRS5lldzy7p66jfF
yh93Y59HgYWmZLZZKFjsvvplc9PQ9NWMRd4d7o6Jw46C9Bwn4Ba/yp4UK5iJ
DU9SEVpV8uupZooDyobaND7BG+l8WTXFUqJNllzlzL44dooGsglQXAp2jS/F
Xp+j9YRqLU28/dLp621ggWFgppCvKYe4yK6ovqrbiEaNOVyp13jrY5muM4NJ
LNuFq7VJBxzSbLH5vmK0TQ+S7AB97ue4LtNGSkv7FYzdwpEcVVwLOyetKvZN
kqxMRV1X9RR2ZoUrXa/JEldzSbylKYmMfv8WgpkJaQgyJVT2Km9AQEAOuK5K
jFRCayAWo2aHdEZOFDPksiFxTV69awBKZkViVdFRHso9dHv+QbWDC8Nl4B9V
I3RDEQZN0RKdU+yTRewsdoxyDC25MLkIznN8kbfHqKEqm/STSRxSnAN4OqRm
eQP3FJqYSzfYRKhl1ZRNy9FdMrj1bz+70dEZho5x1xwFmYxJSyDmDRL+LrdC
QmNnn9ywASuwDFRAtsV8iV/j9XqmkCGO8WYViRWs5svNggOsHsyyU6pLneUb
lINaUy+XgIOvqrr8kb45IIS6UWwYojJLm5K5DT28mFQXc+AAixlG3LimtuLz
/Xv0IOJ+ofYYJHBVzC/zVdlcAXKLVcPVfy2+2Pkf6Zb2QE48OpWxEwl56rwv
6ssil7iycoVvOnPrFygRfDnGWjG/WmD+f+IGQ+DQFqlKHHNYIYeQUGn7d8VN
IyGL/M5nIALU10XO+T1UxTimSdrahzNOo4KbNr85yP61KNamUrTeTipUb+OW
FCh2hwgSV1nb5Hipy/cAZgQlsFQ49is8P3ispAQCwg9sBt/98dmpqFsOwLAl
IFHOQZdK7oDBdsDrgIwal+4Dbu6SSOB7Cu+xmzl3CzWyJ5DP/Xv2LODk+RJd
f2irVNhnEBYHZ3hOIT0Ut4SinHvGwUuJcnnFyI9wDpLuG75YD6Qur8cxxJOO
q9XXxSW+GOLI3GWCKMcDxSuqVxRZCagRBy4Kz7ETt0BFK1uWpaYALn5jm4hY
I83LOZFMK+5e9WYVmZ4ngsXiUyZilWJM17RXFn5a4uNZ9rxcLJbF9Kz6AdQD
EHAXwJ7gCB1gjXiUAmpbTRqE0doETGoefv+evRnk8JhK2qg12DW60EW6+ey0
CCkXXG6yc0DoNewbNHpx+IbJiPxpz/IlUmRtp1gU62V1QwxkJf2L1fsS7kcW
NBlFDTExiavCDu5ecNrE4bKpcLtaMzZG+5lOZ5sLP0gJ+sE1esUk8jnsZlUh
QwdyAOo/yJ4Z+dLAep2zHlyaH/rwxzJHhQcTkbQsz0B3LwsjRAnNFz/A8SBl
UldNhQ776JurfFYtT1oCzde58XHL6nxdLlAmvKj5mbqYV1O5FPGWJomn5YXZ
2/WEH8U58M9cNxGBk51xs2ZzJgGxJCfIw+f5ZjXnMkGS/ik3V6qsA/eTRTnF
TDDKMCrfGsQZKQ5PD2ZlcsKbYeISFcZlXAMoVkrqgHEaqcENgJiqRk55RTCU
2DchfBmGSUHjZkFK1KOC5VRFvcHCnO10s96HmwnjyanBPlxSBXmL60LhxlV3
oqRpczu/JuUXgQHubcfh0rlWJsObCfVf153vAcPBCEnnOXIUJ4jKbfMKbguU
JHFV7sfMHNS6gBujIADg2sWSy3QNo9mkQDJvayARvJyEkZ5KEXmsPVTz3SJR
6jd491xccHqwl4fP/c0RJvVStm15Xi4JDir4gAwKvTQ46o8RcFbcVAiFiNzk
ZWJwP7HgE2aw2/+pTv29MtoWV/3GN3s4OTfGI4RKQKFgv4QzSBHVWqhzAl1r
oje17YYkedgGP2qysfpjR+cWBfKZ+0o4hKd3WKnW1TA2OrForq6o8wfPz8Q0
ooJQRii11bYsGZEjffGDFECHDSN3EJVPdO45pBt3YLEdIg4vLuriIm+9Yuxe
CSxG4c4kXkX+N797+IXS+JT5wFNDmaDQBqYif7VWOhHZw7mtVPWN3Z4zDCFI
L8soxW9OOm72vGiz4PZyg1zIOgCRqdMlh2OBRrdnjrHmAzfgSOPSprJdDp3u
nQEgatSxPkzRpbnYi5VNA2cgs/l13d3FyzFHlLCtk9PJpmE4e4X4RldpQjll
NpAVdhal40Z69elr2T7gzyATGNbe65tnrTzx1WP/i6INoye88mVAkQs7TCIU
vAeLpbN+DWAvC9EXWss0hBa8s0KsWi3zJrjpkJeJsspmLwmn5xSMVSSC38D/
5ya44DTp5+7QUsYbPrT2eMuSxF3I40DuFE+MkAW7uEF5VmznqyVez2SpdcMx
PRtTanSVPgvQq4UTgRbq3DgtdhfNG+BDSkxYgWBcuNIIUlmvYwOGS18i6QY+
9sR3vCQT/SMpWmF4vbqQHrxkT6IKjWRB4Rn5rra03GE5OpK/gzuYaVFMq/Nz
V7+PdsjEZ3S3SKL0w9Ps54tIynbaD7afhb3pOS7I4imja85Alngi8xrl85sJ
c5HFRsI2FGBRm1UAmYIqEGaRwigNQ5fEgjQMatOsKKCp0AjhHuHpg6KIM+Qa
dEyFoKLW9Un/KkiI4fufGnJ1S5fgIW+cVoWBdnifc3EtGmiHs1BQ1hulR8G+
1OUPOyZxkj3lNvu5UI2zIjrxDdaDu3Z6mWMk2+uyeUfe+tk3dbVZg4h9+vrb
byQzCgn8Rm5AubScNy43EkkyAHmNzIfUZf6zW1KyL7PIwAqJHdFAqFuCTP8+
X8rjaHjtkPDVXBoLiZ7IsF62HGr2G9lXX2IKkxrTg9lw7dqJR7jCb0zUJNNM
Oq0xG4jexeMSI0VLncesk5WM73VPIVd68GRR24V6RhmA4TgDSXlZXGELeRCp
iE8XJu5L56/XYoF9UuhUT4jJaxnquapyrj+b5UVJLJsN/lN1jQr+hHk82tXc
w0d+xQn5z8O1mFtdvQIPE7OX44VuArwISApxtnHgI0izggG+BuY3xsrtbosd
kJJ3ogRC5+CqvLikQGAUdVRq5pg87eStPRtZoC4t936ItMb3HW5V6KC9YvuA
PSxNeQXzkPwfzQROHtsGdSp7sn1tebnWRSZUWm9J5/2YFsAikzZDgqzcot1H
zP5uvWfQ77pcyFM1xhXv/XUrDyTT1qd6eMnqv9DJ6hM9qINd4fTs+g8PPvuG
uvzfW93AQ8fDb2zfX6obuOoGHo4eMY7+kaob+KzoLsUNTsRriKQt++ozv6zQ
2tVT8mBq2voOYOcdeUQ464CAw29IytejLfatFppdFyQMkOGJwrtscNSizq/R
yaaRx28AgIzH2EoqH6gI6RgPhFvtYfbN2b4Y+ijNApy2Eg2UbK+aqKvhk8Z5
jp3DYL6HFFAMjUQzGk4NAiVZ8tU1ni/xGifHJJjHJKq7f8/ob19+xGKAVwWr
AQY6YjWyChLyRRQB9R/bPsi6i7KLyS4qFhOcp5WpCsGCTKRmkcvqtuxmTxV0
5FQhb8mWbBM2b+bCqVoPLc3mjI/ALuFGdnHPSibd6c19/prwQpIUG1Z9c4BO
9aEvfe2rZ2nbyC8RmccmL9QZZo3fopMyjB3PFsBgNwgrgHUkSnl8/e9N0/pZ
MpxaTAamitwjdj3rBkyL5vTsxbT5nw3IHXug1Wxak7aW3d9QvGSJZm1zVkwy
9S7JFio+pyDz1laGE5eMfcrKgYKIcVwTWzpbW2GGHzIUh/Gp9vfZiwxfweE7
GaZpoVk7B/ml+AGmpDwhdkBUuSs6efAfWOTZprlhvQuGEHnUMMFTkGc5yemL
qgTR/DWiL9t9efriNb6YYPIGmhckp2L6VFJgnKDHDA1zhE4y7Je3+/TkaC97
Urb8M45UZLtPTmAchDQ7tPZ5hQWlGHi5fa3d0qMaebYhi59KbIMSM+4NJbSk
VxsiQDG270QZK7pLnJmkzlVdXmBkLBwrpe99D2wVKRLGPIXzMr8sXO25FybZ
8e73py9f7E1EBMZA2N88fvyFROkybxH31lgdFvGncWXYKkneqLiDAuO45FcZ
TjG6xpcSWOnu98fP98wb8IE16AQ2V/InlXShsJctgLGD6aHL+Y5R4NiahS41
84KCGVfWjawBJc7lK0EDBb7OnJmcovIWky+v85tGUuM6fYVGoVIuNNZmjebd
BVsYkyYgbSGIbyE+Qldw8sqrgh3A2JsJ+dyO4Wk1miFYi8ArYSezceQ2xTje
65xi6t0UdJUan/n3oONFsZqeY94aGgN72zcAPrMFPV8dTv+d7TKwhjPj2it4
MuVVLNkE4DQGcS7pCRDEOboJANNogfP9iJjkfNWOT5MSanWx9TJfsUqKj9vs
AgCcsqwW4qexWeM7f2HzHDkl94APJJ8BXauI4DQwouYFd3oNQzHBzJxW7Gz8
KR7vLELIMlGDa0qyOEmir5xRnRGqnduge9yboJsYJYdp3N1O7gt2+4IRxM+D
4UF3iRVhVmC1aQXEW7ubuscYuxkIPgP8VrmkGHC108DWrI1heTNx2Xo9dCo7
QHDXh08NG5JEyjbwYlIKLGdUzlRy73IF3SRdElyNE81fmRxUxjAGtmHfDhil
2VwBlwfIqTyViF/+8TFHB6smaTKYKEfkzg7gkjYYLdBhfkwWHlWovD4IrnaS
h0kJ81LZSgpUogf3yqQtpt+bag0iADnTCcPBK5DFlwvg7+3lVfASQ3cDILGc
J2yLJEyuXNYzOuUmhMJ8GYr1aDauFy4R9WD1rZceQUxEBnGJ2fTg5Ku0I6jY
kQzf0bPXmSskPK7niE4M7NiGXFSsa5z/jfy6/EKe1t3YvqdQZTBML7GiAfAV
xgyC3dXLC7VEDsdT8UERC4yYhrwjI6XAgBKA+MoG7t6UyXi0IkUUjihkmxBj
0SHRzUXPsYS1CGD40MSI4/NDaDIJFYwkaIxLZE1HVhVRSvYylZ1hyM5NKgEK
tNa9gvQ9XUri3NoZ9avpG5WRUV6rtO/Ou6JYD6qmSfEdrpYFsVap0FDkq8YK
XpTwgxForJme+ZYsqNsZMJ3zR8KAqdU3fqQA3Zjdmo3MEcpGymmwgwfl72Bs
3FKYTqJgUEhqLB7LVss2kpxb/E/5AXZZviuW5WVVLSyalEOHqJ1yDzRy6pjJ
4d4bbIee6CwFN0Vxpbe5q1aZSgZ5gtxEs+Gt1eEKjXv5FqVMnHUiEFkOiaaI
rk6Nty3ytjBfZ4NbKGb/VHVDE8kVVTydX5rNra9keWSlfOwl8ker+3Jta8eE
aI0Yfr8tnfuRzs4xqgylrWSh03x6mSpRsDTKu66SHCnx4ZX36Ij8JoZLDEDf
d5z8P4+YLyI2GRo7vTj2/yY1J26ToVgD9HD2qk/gTwdDT1DznP1P0b3wfIOi
rKo5EYaXrfOmcVYQ2XDNub9MISJmx9keEbuuAEWuqnFYV2Za/wM2hO0J9RDa
KEFtiDZ+0jL2mollP0gO9+8ZK5Ju9cXnzMkGqqfCICsTexIzMpmKAj46u0Yl
LqURNytFjFrB87tyqog+v7vf/3bP756nmZb7PJ9Uirho5E48u3EnWp7n+a0b
/iH2Fthk2H2MVAgLbEgSXXtr21URuAwMQ9r32ByWKTKifu9LMxczdV5QXWp+
oFGTd7zHihXiwZJI4VZ/OMmeTLIjTnFrydbgQ7iUSjzN/cUl2D4KsudICriH
lgHHAOwB7mSSPZ1k33DxLqtAawDjwAVh3HYPkFmTHzyX3MWLvsKSXKQ1afph
R8x87QpucRvP8MNWRl0eGIDAsNv6RkHwt6tUZZiEu5iVZ5OQgc+DvXpTsfPT
eY0O/T26VXhiJapGQD1R+rEA/+bkmMxWE2f2jrpoif3qcPpkejQ9mX4z/ZPl
v6r6dIo6u7WRYBjqT0NJPaL797oVkp5sQBJZcKAOwcHu7D0HAS9fdKHM4LZC
iODi4ek6RZgMRdkLeLfjXqrYQtmpENxkQ0Wx7t+LV8XKxhfFun8vWhVL11Ca
iCpkZQ0pefVkekwqo5mZMXpaUbGfXkpHQ7DNPSBYukABnY6KlgnrYgoaYq0u
9062SuC0eYsmESTuwyasLt31gNQqD+kg4g3/3p0fHEoLdtZ+laS+cLk4QkA1
4irpeR964TeZMORiZf11Gu2zQTjgDnj7WWMLuhJbgzUOg3z4giKHjHTQMUbM
IoG0C3QOrjmY3gy+27SgZT3Yc6fRTaXn4XYP9wxDJeEYFWcK0aOHHxH+2MbD
+22OCToLZodLuAbQBAXj30joG44SgMiWQNje+PoVUBMrWuEwTPNs9st54w07
Ile583O25eFFaMsCWBME8wXyKznlHbEwegASArUnrGXJjnHTorzaV+mj0sW/
G5upNOQ6urRkYIDqbBL7+OA4puIk7ReFULKnuMm1QYE4ZMulWChPgAW2goXY
aFnsFE9Hy1iK10E6Uc+Z3y6rafG5R+RFlAAyU4vdl2N9T1OWY4/sF+gCu2mK
iPecKdjeYRBaMBOfp2RdOOPclPahJZfclIDIjg1ofQ0LiiIVFPWVLRvqXky1
dy6l8nDFGhyn0dyITjZbNJ1hYkTpOZbLYr6G25Wes/Jddw1GpDpcWbuCPDo4
gXkeGCA8XCbBDVwwiVIQ0dKx+fBh1hUlfUuDSHGevcyU++Pas0+9pwOWN1gB
pNjgsnVexGyntJ6vXEBReRGagVFun4jQfrJVeTfl//ZkwO2NPwfZfwX/r7++
TZj9LOW+xp5TL7Psxcs32dOTw9NnT749gW9fxp2k2J3pNou5IuE34pPF6zlU
JbuoS9cFKTPJr/jfTzUiDoKx+/Jk3apW0qM7yMspO4kp5B/ZvzKTG/xl/yC6
sNJ+4GAWL7rUP0h3owYGwS34/R8efibLMSCTReH3f8gefeaWyr/ZDhFI9g+M
H1t0Q+1vymXRDbLvfA/tj9EtNsO9DR02D1SWvh7fNg8miyg7yL5Z4ufqZwvA
sd5ivTDqYM7FS7WR5u9Po1v8adCK/hZINJrsWYlt8a1g1tsKg5O3ahD+fBrd
4k+DVuQhanfnrQO5i7zuNwduO90gOOMf/wDzvR25xfuuS+8BjH/SB7AzGx54
+9WJ3uLbDpRJ1ner1+2d4kjxAMX6omf2ts/V07JZ3sQ/6nM6sp5ZgJJE8+7m
hBn9OrdrtJa8E3ZMq903EeliL3Ts1APHU/uRGxr55GWmEpVEviQ0cBb9cywv
VNWlH0jpXpUjwPHtnpLNWX/OWLUAIU5riXa0UHhSMV9KVPCCrLrPjCyRdss8
s59QJc/ImzWK2mfkfybpEyjnj3xFuPIW9z0/35TGRqh8DY3w7Z54DKq7tZi1
WYtGiluJaOVUcUCbt9AmISYm6fYEW0vRNCs48ZOGEbytqTAQ0Kjutra5fOmN
fJIYObcCnCzL1PFGAiLiuX/Pbm4vwXjbbfbXC9A1thFdQ61rDjucnkyfGhdJ
3J8Hn31m7c9nJinKHrvLai+w7LK8oOffy9yrv8fGs85EDZcudzNlv3PzwKG0
E5Fl5nB65LX9bbRtJ1Zz2OyZJg17TtOmQ+vKKN5NvKIK/0BwUdV174eGHYhp
AD1aTE4PHeiCs1H+JfH8NY+yHXASgdN9bEOehEQzS4V7s+cSmdyqHq3rcII5
LY9EP9klzyPW3sWFmPVVVaSvO8j4kBv+2JthrOIx+gL6NLi8+aOuOJ7tF7Vg
xCB3Ugv+8ODzLFALmIP8IXv4uVuq/GYCkv651QJeof3ZApBUCwiJP69aEEHe
aLWgj04+9bb4gWxxVy0YpNg0OscP0rvFvYP8faoF4SehFjgQe1lf/DNCXMcU
s3cQ1jsFSUcK7eQbNNVpeLXs/kQ9Vzb29muGRQS6tM19Nkr6b+SOx5DY1QWZ
7dZVywkM+XaN3+GcSCMM6p4H9sRJ1yJvoEuMa96HST6ZGC+5tmrVSj7/bCKy
OCeFga9YipHWedD+N5/tWfN4kEuYki11NvH1q6MgvUQ0V/BkXLLgCW1NA4pH
VSvD70Amm242EJNn+vPZg5lUhT4flS2X4hGkMC/+DRMU55ul8jClryyRoGMg
Cv07smdTK2btKGQQwNrWi3uO0QuSdAPHtQijMA0WDHdBtl8CpK1pVG84TMC2
4yQOVJqUY+TtL3sT6yggHn7iIqcUxq5PubjFarETs0PbNJ7sEtj0ZlV26VTR
LM7nq63QT9cC6qL9CYEm1p9xG0cI0zGXQ7bVyfN2U8OiWbre58jOSVZQkgyS
s4kP0bCUQIfLwxlvS+OXvmloj1XQv/Xn4pF1llgieZMzjmFqOIOddUfzN57e
cCx9MGngmZAXU7bsby4usH7fQucflnmuJKuHlbml3HVdLG9MKFswfACAbDxg
GlHC3rZdP3oqfmtoX1JJwQbeOBUzml6GCVW8wLNXL472nPOrvPW115jbTrwi
5NGZ0g1qJ00a59vTVwfoZk7u5W8eWKdO69NlJlplz49PYSquwZfHc1XjilR9
hbJlHkse7BM3zUMV8mGzHJr5eBo+5o1Oq6yPAPWkB12j/MFCXB1ChTfKJbc2
7AUxS6ExkYNIrhk2bphOpamgnIu/Bu+MiYJzHhAOgSasTqFG//4wYkRSnnUc
UUVbqvyslAe6A4Jy+/NOusH5bWxuauhZuGWkAdg72TscD7Z8xPJoPN0q+caq
yi42eZ2v2kJlGyQOShUrTIkKnQoLrR4ubwYShHqoNwfVFNpcHGRShECetzng
4ir/b8x3Ka+7hqhoQTbzcxZ57s3NlW5nyyiMDbbA8bKSst9jBYuFc0Gz4xM+
Tbi1calHbkLMn9ppu5LNLcqROT2RC9b+gplHlZFJko9anFNohknL3oYb4EwH
XcIVyhGmbkiGyEWb6UwneVG15UfYONYVCnzUlTyhJUQJfiWoYW8wqEXyH82y
Y1fN0feDQ8xhstglOqgDh1iIm4JwgJrj6axTOrnpUFirNRO12tasqqXoG5ew
DLwXCACz46qIWcM0hJQ5AWp2sazO8BY00WON5sld+5Ys0yYuFm+uPS4TULSm
2qklefSINLwcVmjzqWbrS0zmRzyGzIXW1xH3n1re+KdPVp6mgauikDIYnUVl
u+dmz1wMQeAbIXx0IvjB0DvK3xupn+JmsnhUzVI46j8LREylql3PrnSOvpEM
hL4d2YR03k/VeBkq6Iy136sSsEPOUMUK3b5tZHBs/+A6KowE4lz0xbUBHw2u
M52cW0qwRgejUTBtRNNxY6rhOOU6OZq5/3c7y3MsQjih5Yx6Lr0NlE+SJ7Qb
qeSKFi+i6C1kz59IqCRvdAQh8bkQIz9FJwNIE6NQocwzQvbXnhsI10RlQBX2
oLIUmzccmynTK6vk7kwWCkLPZilOpYQoxZB65Bk8TVpOIFmSJNV+7aMrTimR
pZEFBOme6ey7qXfFxIxX8OqGfcfS4OyRBZuzIsdFLwmHvFTiBqvuLr1vTFjC
1ZhUImbNSreicezafT2im7aA9lXl0eiT0EW3MZlTJN7MdI0EnAUkIZzaiS95
63sfWzEluJQlUJR6+zSIN5cQPSgaJY0KtwJmcn5P+csqDhedkUnASBKOtSCz
YxmEEFEq4tRXnT1n1tO7F1FE/DSgESfS6XKyU8rqvjRlrxR/4KIxXe4qHV+b
eB9MViKVI3DPMXW1kEVCFaLuL0xdmou8Pssp1ny5FIMERRvg4+BC9k78xrGc
ALHEs029KFacXB9rrttzVK26G0+qpQkmoAoQpL36O8kCIE4jXo/F1XpKQrOL
2ylQ2MB7u7YZY8zN5hEadYsV9HJlpsQzmIwRtlC8eXOysrrIcGiFqmpdzDxU
4CbqzknGAAH3OW/JD/w91xowldCjQxohnk+dMcVwIopsh19uecsBWEwg2VQg
Rra6MJSHFXN6lyZ2rHC5q73wQsen3IUkJxW1QL6HSRexJ9mzTHW9t/sPiztc
GJVgYjrfVyXLA/bAGPxba5eJvqTUPkFxhKSmbcSMpsAYap5XvBM7lZ3ErBkx
W4WRYDjii+fHhxkVacQTgfU6OEvLbx89fuiVuoofy4A6HOd3qYStWsd0eZOg
nAnznvjtKTUOgnyRiUWihNKyGp23gSbAm+0yZyFVuG3PB64SR6R0YZqsEzZ3
rw3sZjVZUXdyMfryj1+Cp1Y1j1sS2IQXuVPdUBZjPsex94J2fXeeEi2Fj3EV
jNaZOlBbosI2E3YvsZk9xNFA6SIcICAGdRPLZcXQPVvfEeVuaWunt+3tV2h1
tRjVWrrbZRZkusi2zsxIrJiiqfElN1bnRH4LApe1BCTqlk0UzGi8UZbW2E6T
CFauPCCZP5LElZQAnYRDgjUPS484Oi6SSrKYzOBW3EzSghhX0BmFh1DCXrIC
gY3XUiyV2akvHHVL45lU6BENp0eBsyJI0lDhS5pGLPnemoUEEa7ynblijFeS
VeqYcBFWsgiSGagtTYLX7rHRcdJqKmddsgxPeKPoy5TDxdwHNsTYFP+k6U32
BIvPO80Vyq8w8P17MjJ717HxUYLPcjGuwFhnVdXude2W2itKaUSuoIgzV6V4
FOtoLhwGS5228oACEKxAGe5k5bCm0J2OkrrD5pFYqvqwSicT6FmFiX+0NcXY
8OaXBdZa9YLSY+YTfuprhKA9K0DIqUk+v3Z5FoS2TYJKSRAkdlURZOXat8Is
iiS2ntPCvvugWlBRPFCu0jIAny7tM44caGN/uareo6knJnFaN7m0Isb3pWcT
5kwDdnMjzpKBBGnfo+x7o9ERxOrH2iklVPMTlbhrVVBocnPjRVX1MDn2BQVR
BysMsQKVLzeFzYRo0Ah/PvgMc/7RkwolMVS5pLiPKoukeIkHpz4Uku6qY6gx
WQyd+NrmFxLlHBP7zBUkIXiqot0U88QZiZjrup7DsuW5SO24SUwp7qeBrB2O
ad8N+WrNy9aMD2OUnJaIQ4eY3AZlQ7lJAZwiSmqBfOJDaynVhCByEiUfC8rw
YF5ztMFTfAzNKRHVhWqhIPkfF1QvQr9kGSsoswN/sgqF3U1boZF/zjJPTVl2
HOcVvszSQp4yya/rAjSzTUOnSK8yMqunozAtmSg387RKy3MBfLnkd3Njk4Zi
8gJRZkySkiRlnOBKRCCT9C8VBMiX8rxY5XVZ2T+avRmLVoIF8db1TWpqookx
w1FxUp5JnjC7szNS9yaWQFxdhdxFoYbKu8m4qDcso1pn9vDy9RN/neP3MHcj
832xx3xFlaZXUjHrvUpoSxBZzz3JtFeZQ2MW7C+NHzWdM+wV7qJkuDXBbuZm
dbvacZt20egu4O2mi/4OX2IvdtU9iuI9j3D1TeiXQDE+sHonRf8mfqNS6MUu
b1a4rdEnoAFZnk7NmVaO+RzBjhupyb6eI4TI8yiLhTPJRdgHCWRsH+Hahd0q
hexTAmuTIrbEYP3T25GhVTlCFqH5askX73PA4gXcZE3owtPZNr4nJBeL0JFJ
vpzbN3Ji9vIlGy7lB5N9zy/na6fknDKfP378mbMZ+DbzRh79Ol076w9Bb+yD
ALuC8Dgqt6XE3FLK0dR1avIGcqkdvmdMTVdTlNc4wFyLrEplR2kg8m9xIryc
KsAU9LKat82MsxCBes/DBFnq2+IHzpxnE0Ukwo/N2+/cFnAJc6xbgUJqyOxL
/RjJ2EyTmEhcth7RMCm3PZXFIVHSzCakNIpjZO68NPk9kKVQkzMerKxnsfw8
3psj+ZF5uXfGQmsBAgxK6mE/W4/KMYbNDqfOpnY4PXYBOoYDp8d6GI51Mv2T
Hesp/E1jRbIvu8wDQyk3nKCirxYvp80FlhtChFmykHDzYuUcDSiP6ZttN57O
kCux5CVq049GAdfiSuO7eJrRQ84dxyhgXUMB4cgKFI7RyUXueP6WbI4vv+Zm
NQfGtip/RPUjby4VDC9XLnWejU9x1cpUSWs41I0sdyaemsTTWCriSb1WGafz
2Kxi808oy4hXZExLeNW5vmRF8Wlgmc255AKimYK837MI7xVNBDRquPdkIJVx
b3M2tSki6hKz3TrcIj7FQGJWBpc8ZX9DNoc+VaY9G6Ka8TtbNpFdlbuxg1ZG
J18/1m/B1jM06XLWaxeDw8/h3N2K4ljJqyjMffX54wfIacgaAr1AD8S5xRd1
c+W05kY4qmJ93cci0QDk5g+cdAmTyq0tdPbV4pLJwSi2ekA9DYaSRh+Dxuc7
cVnMNxckYbGtBJfBtsN6PR/pLSyaP8HO2DOpLs0zPqdVdjXSMpuxaORZNUwT
BwOCGjOa57rs70AiLkowke23xYFU5tVO7wV+TyvBP/QPU/TokqCBT6dTmmQq
6/l19h/yF6ho/8ltbikUgbdxzKS84s6s7Fjj5q1x2c0aSLygWflPN22nFaqq
qc8GRINHD4OOBo0EIcBpK0DZdrfRpqolQPYO8LUofvhP3SkTlNgQBz8OAeUu
TPIXxAsbqnOpnpDjFNONSRJLdx9ZyscQMiuKQGom7+FvsIolXUhUnv4q/4FY
H3DoNv9BxLcrEKzRCQgWfCXloD2FJjzc4rmNN6CcUq50UUREWxdGYaVVe06Y
2cMxW+ErM6tkeeZobeZYqylFwDOyqQV9m7RkzBQhV3NXPrYKaWpaR1HQkrOa
8cGr+beFMfYpCLMTnMP0lTPLqBHZoKPP5oH/pzGuvZvar6YioRn+MMue3Bj7
HiNShohM2/UF/NWvslN7IVvHGW+rYrY4pZl1KABOwlUpTm9Nd2wrk5hJnHHI
KjC7/gbYRyaH3D0yCdTF0uTrlzKXzftivpNJ1QYsIneFxRLs4xFTtlxm4cK/
OzkyBQh3T7/DEiWvjk5eyR0bXha+kheLQkVWGawfuIPHrDIEN2AutKgfUDj5
ir8+q+D2lutMNVuUzX+jgrMCdQNbAsckXqS/7w5t8PfrBBckiKZh2RU1BM3B
noEcoA9rkn+CIleEXA+7qJ/xK97b9gYObqSxygbwlUD4xWMPQoKgqZcXzXRZ
NgkI3e8A3wYdc2KQ0Q/ZMFBk/m4QZzhuChrk5X3Q4O+joOkHhqYhWNracB3z
G5X4wcLARLMdYOTnxqNDN/IubtHeV8Ev/OPBLifGAgaEGUKnl9V6r9tQ5uk0
jbY068E2clUDEcs/+3rAgERNQvbmn0NwY9aHkXCbpn1QUJt2LaADHPT3WLgH
IHedFqWUTfpKOtG89tvEokHUGr/sSOOfd+F6i++yyX9lZIGQxAhIo8g2GUKO
bYhfwH3RHthvRq92mKaX+VmxjEAro9HPcUhdI8QOtku1yURmVV20udYxF/lx
15ZPUSxEwczXwF72E1IMLK1hcV+PKRfLh7D/bXd6aZq6fUL8jriDwi7XBb5p
fWV+wJvot7F1WR18anTwvaCZ/fQtvTtMBw1mFzoto/PFm1oq81CQ0EsC8aWT
zkiCbkv32GsEY8Z3RouNiE6se/Arva6gZANeUCvh8OhFCcq2DeewgrpE76rA
M1XC2Z9drDbGImIFUG2JCvQRctYTjzYt8ZGZhCyJIFknJmRgqOI8r1pkeOdD
TBKz4B90RnHZIclL0ekBeaV5jW/49VgwtmHZ9r3B9v17NL8aWcCo7TOMPwuN
AKrhgR7rzQmHaaslaW/J+/dCbKTGLS/W3sDPvnn1M40MjM0b+U/V2h9Up9Ln
FEKqNZkKTYBAp7OiVUx07Yg1Ao3Jz1xMbameKT+WkGsynCbTwNXyIQ8iG52Z
QEWH4rpzY6G2aQUq/mUxxafsKVduowvvIMN/2DRNiHP+9f49rlm/xaykIr42
sULSk+XhPjOAKwdDiYnJZEU6OULE3a3/V5bZUCP3Uq9ydmv90/jzsZEMRkB/
WXmq0Km/uJqQi27TQYns83X6+ttv0GcXlk5nZSIPMPK4SYbdvUmvArlztJOd
L3Prxb7z/OTN62dHOzSS0h09ffGgJ2uRvXxqfnxNmKCysFn/XRjIMtApuA3l
k1Y7dF+s72PO0pR2MqKnxYB0qJ4a+klOEu2Q0p0CxI1Qo4IedhX54qpcTcmq
1o9wAe2mq/P1LOSmVwNMrWLs7tie4Wz4n+Rkthf50mYdpTK2+ITuHVv5sBqe
XPZ2u9dVztOQj9qzYZU9BflowFOKfAxyYkcxtd7+oWX1YAR9QW3bV5uTWHZM
6wtWuo3bohJCpglEnZrAaK8cuoS4iVk5HvVi6qcpFi9jTYjNG8M3ppZ0TGVP
xUsaGJLMuWNAC9euP9qsprHrD+JWHGXct7b9kO5ih8U1MOF+lQLNtyb6PR1q
ot3Dnn0PGp0ldl82zoucgmwwpr9pOL8RWeZjd34nOT2NY1xyuq7P4joxC55/
nWZi7OwuBjoSi+PM8KQ2sONl2rn3iiqIS/iu5xUbOkqQJ4hfWUGCcp6RJHHD
QfIlFSby4jMkF6RkaIhWe1UVgvvybkjU+WVVNQooeR6xL4uRpFC7xcNiz3tB
MDWm6Sm3ocBG64dkYzZsTEbP04GcclcbPe7bZFdtEcfVmFbyOmr2QMUVqbAR
fHyRX/yB5H3SPG9973mTOlpwfqUj5lQDG2epvqRGBmPG+8D44fj+BaYWeF21
7K7IE0ihJtFugwdkq5UGQCtHbgzVL+qpQIv1bhusSm/zssrv7r2Gm4iH7RUr
/y4UwnvSsTqzhYqGkbfBhlMhKZA9o4AH45KOqoWThmFAjDOaCw6aSL3gfV0n
+M2bVxOq/LWQMiyM4Wsp5EF8ds+kXhoDE8FemUByhULycFwJuApj1muu8K5m
9jkUF3BxUUdDWyw1bW6WqeBDMYsKHrM6N9G02OtYDzpU8uIjS2E4FVxYCsv/
6V0mOjbL/2gxxzxIyDZ0L5zULefv01djehAJxK40La94FmnzxOao5qvtejb1
XIiAjeOuO5YDr2/8aUCgGN34rLTW7HzpQRW72RUZ+cLjbVQyEY6izYQDyK0L
ClmPdBnTo5lfFle2T6oHIlsCH6f2YbgOpSSxONSCQOjEuV301khTvkstpvua
qollVPVNCGUgZMdxTC8SDtEjcAwMfbOechb49kbvubJJ35p3hOUi2jTSFgtO
5cttjtIl4B0jpB1JZuakYCojOM03QsmNbhFgIfMHQ+dfMlvpBlm/fNnhSKRj
duzTvleB9aMaLyvw1XApDtNiEHaNAEv1jbFJxRkye48xTyfpRqy95K/PaQTW
hTIw4bDG0c/dJKpeOFr7U1KJBEmyFECRjJiay2UppxJ3CsAuMsg8qQSCvCsS
JG4vr2cKJVwQLAIGGn975JLwCvVhuH/P3aFdILS72p4481nnVo4cun9PJ3O0
WfoYhYPB+PfvecVsYxEV1mUvGsWCXj+BAqPSZ3w48PKaTDRm6Za12fc4b5B4
3thcj9SGBUsvHU4YEd4jkEtyFSOVe8K4L36LKRa7Y1ouG5EtXMFmVlxICIRj
hBKISfGQYoqVvpvVtCPqxjS7QCgM6DxfYoyCqmzBDsnRmHGJVjey4aKSGquW
OutiGie0lHzVcVdrvUTCXR4TBU1kZn/foo71zjji3Ld5p0wIKr6szZnxSAga
y7eCBKuFxpilC6ai7FGobfAQm9WWO6V3aa5zUdht6pb0sKxA9dVb4CVeMct1
wWgJPq1OgYkrwRTM195TXksGMUTapmwkIp4C+imsWlg7MBBRmlIrZZVJR9Da
jb9/b9fV+czRL/4cfkPVrjoQEKcmnDPGjCaShZBd0L+0XbgSItWOwzvLVI+I
4mJissspwrOHwiZ5ohnkxoHRYRFkidV1SpU62kWCY5pSIVz2bcgGt9u9Vb4K
xLaDXYvPPf2Tr6IonHtNMn8eWmc4TOamcqPFG3UmzYKPdY2eankrNY+SeZJT
Zgm9zc4uZBVfOF2YeGskrIiBHucjTazVyw7ilVAX7BWRjdfchz8JSheQO6+g
C/5Xwc+3HeC7y8mGtFr+xMRr1zut4Q713kpidsIy5ebqHE9xumX2RFukOKTs
GbN/Lx4ibn0KOB6NI6HXaQFzhB2HBQVlywntOPEQTIkaxSzJhUp350vTtkoR
iXUmUY38wuWJBUY7ybltG21ncgKZ+OOm4OAIsuZ5Bu4glehEhX/RZXvDvgq7
YiecOAMh2hcpOGkqvzGua/u1bSkh3Irk5eKTiHpOcElUwMWNsE3sou1j2GOP
FjECgZgu95AfmDYW/FQrqzTrdv8SbWe4hZrWco0oiwgBtajuBSXW+mcGyK12
AKQsxM4AUFk/UOaTAq7bXc/XWVs/7zq7YT8A/4Fw5WdD0Bl4eg9i7oX4edki
PdKZaIO8B77KRWc6yKuSblNjZ3RGmhcqLsGcL5HCmcnQAVNeMTjAAZVkM+Ed
9uhp9iW1wRPLubGJEjHLRr4yQNBYkkHLWyKNT0YDlXIgwh6tDh2kU9GFFdq6
wMRX9YYS6rEyNa5ChxjbfT09qpuzWXs4WV6vei4b16Oih0+MUQ1dHuBiWrqX
H5me/l1IqFLc2eI0qLzbhMVmkc1s5FWupF53nTtxOXKl64d1lXDC7DqN4kcM
3cnkpp7K1K1t8o4mT4rOoOYoVCsXWaam957izJHBdKneC5s8pYXSrLsfhYoH
rr7xcnH//Web3XZ58b+kGmYd8dSfrecmDefzm951wsFbM7VM3eHjVzs8fdZ3
SaZ6ZKPk77Mbp3Z2zdWaA8sVNebmUHUPAh5dxh/G8871h1YkL4uPuSUoXW3n
ETQwYFhRXg3plQeIxjDupS9dtV6zzqAkgbfI4IwHCw2C8yW3icyAkZRc/Ujw
J5tDyQh0qKa3NvUWvOHE8LnJUQHfLUoqhuHPO4pV/IxHLiFOwgJd9Fe0S2Y4
lu6WMoJknWNzsGvmGW4eYWfGRJG0UPTMyL5Zo2bOlKFAdfRmTgVFeDvjHeJD
RZoB1XFYsrPu3mgq1qRlK1A5+2qvLdaItp69WN2lrDuSHEWyhg+E7aP3oBl1
MA276GcVvJo4uwi9WhSzCF6iPVYRlcW3YBjMLUZwRpkgzjasRYAnsG+DlefA
w9qHSQisZwz5hp5sS16x5T15t9O9zdH+2HN9x0N91xMdw1/yXEeJwz/d1jzv
J/zWNDGhJIqlV1ik93T7T2JWEZh4B18jPH6G73BmnNmr78y4sxw5NVqicBfu
2MsWlcGqKTwcdrCvjlP0CpYOTq8eecSyj5EFk7+mTm3yavZ6RiXpvkMcDDB0
jvXnjkc5NePAaY4s9uOu6FFHOkG7PVd25zw3k7tc2clDba9sNT9etdtc14mj
PnRtq6fgwWtbo0tf3+YFN3qFP3Moiqgr+bB1XIz+gYW8Y8JStWWc1cJUOkCX
qn1j5Jm56n8KqLgzuk1nG8hFlG0tOJcZFx3J+7hHbarAuLzbehH8jIsDueJT
UQsHOQ6pDJy2utYyp6pz6vFdWWiMw7GmZ55YHBIoozBeMVfr9ib7RIehTMV5
dypZJT7ht2MW+Hoq5T7or5I78ZXbyvNmMo7MnW2RrNgqCTwnK6WGLopOJfu3
edVV+Id53WA8cgIdz8l9+m1+A3C8yhMpyyQkunHhycrbm2l4SSN0FmCjg61M
yQn/Tb5YW6HCudoZp5pIDOdgBeLY0z+RKgc5iIekgtW6kwjXcoyJ90baWh6m
VWTjekPErAvvskHYmmHRi6BQ1spex7rJ0Anou+GzkW6L0UZ+TJ1tK827js/T
P3L6s2JfJpH/7q+M1bMzSPcFOfbq63XpPhunu0SX5ft3x1aYpVYYSgJe823W
ko1aS+LW7+5m56XIlrjBoOS8GXqEcKxHyDvuXia80hTGCm3mcK6uvbKphmIX
NwB4OSeX4CB3rkxnSsAIOzEhPXhTsKTAuuy5PAO09AozgvCHfG9531QSKu8T
epq7PssKB3RO8a53n8d8pL/LMfNVt7/KN+P1xmTh+HN3+nGzDziaZ7rtGHdz
r8MYp3Ovw4DreeIQdHY2DKeMlhHkJO+dS4mSW4a1jz3S1dMRHXtlZmwA2PAZ
ksA2IyInZS+QwvXl5KSBzYpyU5sA/qV66bI3SR/Po5EohCZ0BddSVTqjKdx8
IcCmFt56PsWHUHG2yd7go+iizC/q/Er25aefAGVT0+6DeB4CX7k2HiOui3n3
CoGwaTSQI2Dh2MUG/TWYr+mkm5zLBdlckJkF5sdvEznteMCD5Ij37n10jtF7
9nQppc9PMWqOyrbRuLpfzINQaaOBA6Gvp8b8B+Mvfp77YKeJmUd5D8badGYM
V+c5Dw7NEvgOxppn3oRp18Homsf53Q09kI57Hx37PDr0NmI2UYFMoTL9/eYV
h+Qv9EpJServ13kE+6pvvtg77eg3ozss/M4rH7P0eHCZEuz6u8cjze7U3YWd
je4ee0O70xPadi9oH/+Adrf3s49/Phs8xN4z/JaPG9u/bWzxtPGRLxt3eNj4
yHeNEZxjENlZn5l7yI4dDxodOFtugFQM6Z0G0CGlowdImeI/yhK/nSH+4+3w
dzPDf7wVPpSc2DVcfZtt483f7be1UJF1HY79X28DVhSeCtUkffnqRYfexrFm
WWQDff/XfiBTR9iDI+pq/HNCM8xSMj1+ws841rwPor6tjvbu8TLuEkpUJlOf
UCjKto7y6HbeIsgj0jmZ0YA/EWtHd5B0coMtBknnOeAPJzCITJ5MedDfL539
QPqxZSrCfKKmHb9dNmjZibbvMexE2/fadbSaGkne4PPaSAu4tfSX74qb4BIL
u0EL/D2mmRGwXepM3qrYvruVdHwefNFtylQcVQY1LotVhPzUxgqAxWpzJa7d
g0iaUj2NRbHox1Y2HlvZltjKxmMrS2Ar6+A8ia2ss51xbMlUQr6ay/g2FMUD
BZHqCKMF6eCy+GHqIwlbe+mjg13S2aM786jk0cTRozmjowseThmdukrjOTJH
ba0bJMghHflELhfX3RgzJf1fkN0/1ks6eu+0fjdYPtenSXSXnaU2fUCH5BAO
IMUE0o3M1nbrCvT2kRV2eg11ErDi1QZGdk4UHthijTYZ/1ZrNL1GghlP0H+H
NY5fpes/kIJ/GFex0gVjsBXp97fAV6q2wT8Kul3xgzFI9uogjASxpyTCXZC0
1cHjQgljVmZrJoyEyZRPGNE8MxyxmF+uSNIb4IsBbAe7cK8XeP+N7iVTSr/x
s6lP3YoCQIPkS0yTv+2SHXWO62M+BrnbEDImPu1HUGaUlmVXh7ztQGGaGgt9
/MKLXNPGL6rnms4i17TfrfeadgDe8Zp2A/Rc0xoTY69p+7nd4prWnbJtr+lI
5y2u6cQaey+e5Br7rp0ImOOvnYE1jl+l63+He8PH1dhrOsTWyGv658bXNtf0
3yO6+6/pEMmD13QExC2v6SEkbXXw0td05jftv6azbvu+a7r7GXVNdz+3I67p
aK9s+JpO9TOf7a7p+JL7r+n0Z8Q1TXtQFmd1kb8r6u5lmIVNMLes/UdCRc8i
/WL50SOGhEi1po6Vjj8RU0OsRlPUxtdtGJsk3jLm86itKGjOXhivGlOnsWNi
6D7O8KKsWTc6TOPWI4fHZlYM7TXpU9JzFDKf3pmEOlNYZh9Nk6o/CRSlM6bq
j2d6Yf6VSp7a2y2dR3UEqLQBup5maBjrNOi1X0UsV70WyGi5zQ58ndItMRiT
5Vois0ZqZXRbRcuypGCTUiw9gAXlV3qg6tkydV3GyqxEqd0vrdJZgCqnEoM+
UkKlD/RhjNpSKQlIkniMlES569YGpU80JGFd2/gnVmFEjxKoZKKKTfPldX4T
Li5qLOWWMS3s9i6al+WaobalWGavhuVdqH1aVXizDmpSYYdh7SkGc0wHiMMc
kfpDEAYl/T6Y+6F2fcaL5Gq9A1qPt+J+Teej1zxCo/lfQ1NUW/GQk9JQwunH
aSW9Cx0k4o724bHvmMZhG2RJLUM3yfplpqDpbVqE6rbMkhpEtK35jNIaIkvw
qSEbUAGSNi7hsgkjV4SB07Uy4FqW3dEkljSDZSNNX3bPhsxd3paNMXF5HUaZ
tTowJ4wzEZjj5hgPhDEmmCTM/VDfheOo9Q6bo9yKB01QH7fmcaam/x00pcxI
Djk9piNv+tHmovRCB4k4ZhZykCZMQd58cfNP5k/Up8xmnXl7dNsIAHHTTret
+Yw154RL2I4xKxxHnk3cqN2nks7P3ecRqzCA0iZB/Nrjz20d+u0CbkJ3kCzR
JnFbSHPVkFCQdHHJ4tdE7GbwIGnavG5TtDhAZ2OJbCSFdckruwPlfATZCEqK
VZSp/d+LkKYtotxo7HJHspdgoWnKrfPVRTE9K9urfI0te5yz2Nq5aX85sv/U
FPrLkQ0Q8g98ZIcKyQYneNguzINuUUY20nFcFdn4MijQ3DIeQUhbAlPolDJz
PrKmGaYNyvkFhb1RFcKowUAVQw3SUBFDz9Q4poah7jCqhKHXYZsKhp4tdZsC
ht6MA/ULvUkGyhfqtoPVC3XjX/zff/F/t03/GfzfR5XX9DnjiOqaqQ7J4poe
oxuKixG4R0TEYMtxsTA08dgomL/LN+it3523eGve4n05AYYt0xlckd0ESarB
baJN+LTp7cCWya6iY/Tmh4r26E0PNWJJkUxXfq8stbrAq8JrvcU6su3WoffU
5vVRv1sABhI2dbtsla+pp/twuqZu562yNXW793OuTDcdwb+89iO4mNd+mJfR
bt+s5pd1tRJnIhtfbn5+X8zNvy03X+Y/qD3V2+hahQ/myadxPbBJnPNr+lpd
bwoa7RcUDDDKKSXT9DugfHht004pmZo+9JsIoEv5TfgzJf0mvGYRv4kuJM5v
IgpJ128iDkkvIDG/icyIIl2vcweI/NpoqnPD6tevzD9nydcv3c7cBtHXr6Ch
WUn69Sveoe/1Kw2z/xbUB7P3EhQHoeclaBjmfqjVJT3iWaez3uTrV2TFqdev
n2nNva9f/8toCl6/Isjpvn7Fpx96/Rqx0EEiVq9f+rdMW69iULo2nkWv2yRL
idHRprcxqTrVMvOF7KG25jNg/0suYawJUJp3A5EVNsJAZP2rCkS2QspARHKA
v7ERyRFkDl+hYY8g/NhpFv6aUj7R3U/fqpPO0eFmJZyjR7VMSMpj8g5WmzaW
eBBU5s2ytakH68pmfqbEg/ynzTzYadSXfLAjVtWVLSzHmUamLjW1f2GHLVVD
AOvdVL2q6B2HbvJbCMdvY22DkWNsyLTqpdSAi0KfePR8UrbRXfP5fHO1Wea0
79YH2BcCYxDGnZSjU4zwV85iDLyuRshpQYe0F3P/Om46AmXPImK+zYMrGLkr
tmPa47nbw3aKOD8n1h2X52OLHhTtkyveatM6An8a6jFbNagGpKAeC3RCOYhB
7XlFD8Ct2/rvuSlAxnrgpfqn1JG76CXBisaqKCFqt9FWgr5jFZe7aDCp1Q0I
9gGEW8n4PasbuT7dfVsx/m5qT4Cm8RrQz4ioLfWivyc096tNAXLHaFABdNsr
U33YGX/GEgpWoGnhvid1ra7SBc2TaldUeSGG16eB3UEV69HJYLqkVvYzqmep
pQahpv1dzCetzQWXW+clJ4uR6Bh0j8Svj9As8pbUba0Ns0y2SeVWW8KTRt2Y
ulDUdVVTUvUhxcK1jNoGoT234Ho+a8NEYjKGbo5eG02bX62ZY9GrKJZkm+ZY
uKm8KtJd6yJv1GtbRPyRzbZ5z/vixML06LZ7Jz+o/dEm3dRqsBOKghSs/uT6
hag7oElM2Tuwl7zSTpAY2GbYjA7p5yUNoR0aMgZt1h06Bq8bOqaas5tO41UD
kG1CQsR/npfLVoK6rW4u6WuN5q48fpo9tbdZqpW8d1jSHQCNDQbaMqAHXsCJ
WBbWgODT1igIVA2PX6nyDxkQ+7L4w06koIRXB2Ln/j2/9Eey1AP24hIgUo2C
qjxINQoqI8G1HWzVB/zdFHxI1nvIfsJSE1QtB/cfv3kwe/AlfkmayDqfF9nO
pl4d4AgH6xxgbg5+uFoerJoD4gepkXdoEMxQX/5Az1nzL7lORnmFVXAMRAyA
avgl/1tVuOc92Xn99Ogv8DnIDnm5x1g147kr3VGjajvPTlYXIH0UNRXj0/Wg
MirImz1bAUmew7IahlCqquz/OntRAb1QWS2YKjtZlC0Mi7XGAJj1EhGB81Nl
EardIeJO3uDbvtTsyEyxMxyiwnosC4CrnXYqE2VncPQAwViXDdrOfr0fww5f
HB0c8dd9mPp3+Bxkf14jt15glbMr2FmHtjc0rEab6azQtz1+cNaPxU99Pv/t
b37zxXRDsKfQVNUXuXmE5YF3YgRwiI/t6PmxqQva/VPjhpHtvjk5PJUCltn3
cADxy2/QsMPrpsqKcym6tPP9N9n3xdlB9vvLtl03B/v7WLMFeML8XVFT2akZ
QLR/fbGPa9j/oxn2m+zbsmkPsuz3VznwwuoAf/7atP+jFI7JBJnQLnvW5ssq
e7JpSku15mPGKLHJ7AyafH25ya+LcgYoio11WtQXJQxWLKu2TY/XULPZGTf7
elW9K/PUkN+Vc9z1b6t18WNywPfUaLbERv3DvWzmeZ19U61+zJfFj9miyI7L
qkkOXGHz2YU0XxQLaPw1VjU6r1blPDnL4WpT5xfZ6WVeX+XJwYG/X+ZfX1TV
xbJIjfQXIMPTyx5UXpZwvh//7mv0CMk3AFR1NZuvYkO9BoDrBSB0mS/bNFQ1
NZu952Zfz9t2Piua2ID/ChfJZfkOdr29hPVemdpekUHfcdNZY5t+vSrm+VVq
2c/L+WUOfPYU/lOfJ4e94mazhpp9fYFfp4Y8huMLG5cdFXNYYLFcppG64Kaz
uW36NQrqDciXMjo1l5NKh1fJuYY7XJaNKafE9ZKwTGmsBpQq9igsxQCvGAtw
j73OzT4j5thX0injIlYAyqKab0huEfmlMTUrvSqQ+J3oJaYgfGZWsSs809Zk
VbUrs/PNcnlDVbyq+qoRpiutXhQkcGTP81V+URAQx7Z8o8cxd188Pz5U4x9V
65saX6Oy3fle9vCzh4+yZydvngKeNk1L/JVqk4IgAdKXWbBx6+Ea05v2sqob
U/5qDsDO4IDiHYLjYqlNqjO2cJO+hmPesKsXiic4C9WJXok7KX3DXsoZrZaL
SkpvuqJgzk2LmAE45rRVEyyJBoBelS0Vrt3UzSYHRLQV1QCWzs2GDKbmzlqW
82KFRW8LxKmpxosbxVUGXxfvy8bu9JPTY+D+3AMOGsKG1XGBgUgd1cezucGD
w+InBm/fFhf5MnuFXk8oljUwOj6nYLG3itsfCwmZHrvmbmpxoKJw95IATnK5
Ry6ABCP2ESTwbyVKEo6AVeBveF//G3y+hLUYQjL3eNk2xfKcDg/SHegNCDqW
pgMpy6dO9D0G4ls02SfP/3z65pMJ/zd78ZL+fn3yf/787PXJMf59+qfDb7+1
fxja5Xanf3r552+P3V+u/9HL589PXhzzEPBt5n0lo3zy/PAvn9BGZ5+8fPXm
2csXh99+EjmadSEVn7EAdA3iFxWlNfj2iuM+OXqVPXic7SI+Hj548Ls9/vO3
D37zeC+7vixWPB2VX6Z/OhzeYIHYIscC7lkO6Jvna7ziuSQslo9bZVjndrYj
AvT+vghgswMreeHWsOQFMssGsI8tjAC2WpCf3vtCetMqYXvMv80gXDeZ6S0j
6cvKckIQ683ZUk4QNbADFhmXykSS2b2BxUxB4ERTR36zx1DbgZFtTD97MH3w
0Mi1HW4N/PoZvurlS9ttp0/apeWnFAPFz0OG7Uu4PyNaWWImEH+dPWPbRynl
Ca2kLyYRG9PCyqWndbJ2avB0RhW3rTVJd2Mb1JdpfB4yz6G3XKBpGZjLEmKp
bqR3ityx0hcceqMl2+roiYrQj2aPqCK06Wq2ZPY32DWDZRLdobmP5Av5Vrvt
a/96VVW6hxiJUdqhjPjAx8WORQThpiFUO1H2nGuL53wF2BLeWhU35SkN0tD8
EoYbGCgz3kllVnO/hISybNbTYJgvTdsP5g9YVL5ZttlOqttmJf8oFjtful4d
ZAG6vj19FSLCLuqDWlsYGXHXxYXjjF2d7sd/o2XzZszy9L6PWh8Hctxlhd1R
Ri8y0hUuMVfbdduV8hj+Wj8g6xt/zIJj6cIGUTa52xnUZZq5XnnZuIHtcnaL
2cVsIk4tzd5k6BxO+O63/cP68pF+UmzeHmAsRNuJ73Q7jcLQjnKyGdqONySD
Nq2RGu3QZlFO1sIPaQMyJ3aDdihHZCRwnRWdBVn41RivqQ1ivIImtR0v6IIY
N4LUzC2DToH2IlJE3ncAwiOgPdU92lfUn0CaoI07K4yxXJdCwU54uvxj7YJr
gwMtzv1fdo7kOchzg/v7DLa13hQTJi00VwBkr8vmHegRq3d8w4F4dfr622+a
PbONaqljNhTmIFgm0tpesDRqZ187mxpBhPPB+itiQ02yDf0ml6vG69KyGiCO
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
nrpVV1b3c7v2Mbc/QXqW8NL/AzzC47pqpgIA

-->

</rfc>

