<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.17 (Ruby 2.7.0) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc comments="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-teas-yang-path-computation-21" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="Yang for Path Computation">A YANG Data Model for requesting path computation</title>

    <author initials="I." surname="Busi" fullname="Italo Busi" role="editor">
      <organization>Huawei Technologies</organization>
      <address>
        <email>italo.busi@huawei.com</email>
      </address>
    </author>
    <author initials="S." surname="Belotti" fullname="Sergio Belotti" role="editor">
      <organization>Nokia</organization>
      <address>
        <email>sergio.belotti@nokia.com</email>
      </address>
    </author>
    <author initials="O." surname="Gonzalez de Dios" fullname="Oscar Gonzalez de Dios">
      <organization>Telefonica</organization>
      <address>
        <email>oscar.gonzalezdedios@telefonica.com</email>
      </address>
    </author>
    <author initials="A." surname="Sharma" fullname="Anurag Sharma">
      <organization>Google</organization>
      <address>
        <email>ansha@google.com</email>
      </address>
    </author>
    <author initials="Y." surname="Shi" fullname="Yan Shi">
      <organization>China Unicom</organization>
      <address>
        <email>shiyan49@chinaunicom.cn</email>
      </address>
    </author>

    <date year="2023" month="June" day="27"/>

    
    <workgroup>TEAS Working Group</workgroup>
    

    <abstract>


<t>There are scenarios, typically in a hierarchical Software-Defined
   Networking (SDN) context, where the topology information provided by
   a Traffic Engineering (TE) network provider may be insufficient for
   its client to perform multi-domain path computation. In these cases the
   client would need to request the TE network provider to compute some
   intra-domain paths to be used by the client to choose the optimal multi-domain paths.</t>

<t>This document provides a mechanism to request path computation by augmenting the Remote Procedure Calls (RPCs) defined in RFC YYYY.</t>

<t>[RFC EDITOR NOTE: Please replace RFC YYYY with the RFC number of
   draft-ietf-teas-yang-te once it has been published.</t>

<t>Moreover, this document describes some use cases where the path
   computation request, via YANG-based protocols (e.g., NETCONF or
   RESTCONF), can be needed.</t>



    </abstract>



  </front>

  <middle>


<section anchor="intro"><name>Introduction</name>

<t anchor="pc-model">There are scenarios, typically in a hierarchical Software-Defined
   Networking (SDN) context, where the topology information provided by
   a Traffic Engineering (TE) network provider may be insufficient for
   its client to perform multi-domain path computation. In these cases the
   client would need to request the TE network provider to compute some
   intra-domain paths that could be used together with its topology information
   to compute the multi-domain path.</t>

<t>These types of scenarios can be applied to different interfaces in
   different reference architectures:</t>

<t><list style="symbols">
  <t>Application-Based Network Operations (ABNO) control interface
<xref target="RFC7491"/>, in which an Application Service Coordinator can request the
ABNO controller to take in charge path calculation (see Figure 1
in <xref target="RFC7491"/>).</t>
  <t>Abstraction and Control of TE Networks (ACTN) <xref target="RFC8453"/>, where a
controller hierarchy is defined.
In the ACTN context, path computation is needed on the interface
between Customer Network Controller (CNC)  and Multi-Domain
Service Coordinator (MDSC), called CNC-MDSC Interface (CMI),
and on the interface between MSDC and Provisioning Network
Controller (PNC), called MDSC-PNC Interface  (MPI). 
<xref target="RFC8454"/> describes an information model for the Path
Computation request.  <vspace blankLines='1'/>
Multiple protocol solutions can be used for communication between
different controller hierarchical levels. This document assumes that
the controllers are communicating using YANG-based protocols (e.g.,
NETCONF <xref target="RFC6241"/> or RESTCONF <xref target="RFC8040"/>).  <vspace blankLines='1'/>
Path Computation Elements (PCEs), controllers and orchestrators
perform their operations based on Traffic Engineering Databases
(TED). Such TEDs can be described, in a technology agnostic way, with
the YANG data model for TE Topologies <xref target="RFC8795"/>. Furthermore, the
technology specific details of the TED are modelled in the technology
specific topology models, e.g., the <xref target="I-D.ietf-ccamp-otn-topo-yang"/> for Optical Transport
Network (OTN) Optical Data Unit (ODU) technologies, which augment the
common TE topology model in <xref target="RFC8795"/>.  <vspace blankLines='1'/>
The availability of such topology models allows the provisioning of
the TED using YANG-based protocols (e.g., NETCONF or RESTCONF).
Furthermore, it enables a PCE/controller performing the necessary
abstractions or modifications and offering this customized topology
to another PCE/controller or high level orchestrator.  <vspace blankLines='1'/>
The tunnels that can be provided over the networks described with the
topology models can be also set-up, deleted and modified via YANG-
based protocols (e.g., NETCONF or RESTCONF) using the TE tunnel YANG
data model <xref target="I-D.ietf-teas-yang-te"/>.  <vspace blankLines='1'/>
This document defines a YANG data model <xref target="RFC7950"/> that augments the RPC defined in <xref target="I-D.ietf-teas-yang-te"/>. The use of this RPC is complimentary to the configuration of a TE tunnel path in "compute-only" mode, as described in <xref target="I-D.ietf-teas-yang-te"/>.  <vspace blankLines='1'/>
The YANG data model definition does not make any assumption about
whether that the client or the server implement a "PCE"
functionality, as defined in <xref target="RFC4655"/>, and the Path Computation
Element Communication Protocol (PCEP) protocol, as defined in
<xref target="RFC5440"/>.  <vspace blankLines='1'/>
Moreover, this document describes some use cases where a path
computation request, via YANG-based protocols (e.g., NETCONF or
RESTCONF), can be needed.  <vspace blankLines='1'/>
The YANG data model defined in this document conforms to the Network
Management Datastore Architecture <xref target="RFC8342"/>.</t>
</list></t>

<section anchor="terminology"><name>Terminology</name>

<t>TED:</t>

<ul empty="true"><li>
  <t>The traffic engineering database is a collection of all TE
   information about all TE nodes and TE links in a given network.</t>
</li></ul>

<t>PCE:</t>

<ul empty="true"><li>
  <t>A Path Computation Element (PCE) is an entity that is capable of
   computing a network path or route based on a network graph, and of
   applying computational constraints during the computation.  The PCE
   entity is an application that can be located within a network node or
   component, on an out-of-network server, etc.  For example, a PCE
   would be able to compute the path of a TE Label Switched Path (LSP)
   by operating on the TED and considering bandwidth and other
   constraints applicable to the TE LSP service request. <xref target="RFC4655"/>.</t>
</li></ul>

<t>Domain:</t>

<ul empty="true"><li>
  <t>TE information is the data relating to nodes and TE links
   that is used in the process of selecting a TE path.  TE information
   is usually only available within a network.  We call such a zone of
   visibility of TE information a domain.  An example of a domain may be
   an IGP area or an Autonomous System. <xref target="RFC7926"/></t>
</li></ul>

<t>The terminology for describing YANG data models is found in
   <xref target="RFC7950"/>.</t>

</section>
<section anchor="tree-diagram"><name>Tree Diagram</name>

<t>Tree diagrams used in this document follow the notation defined in
   <xref target="RFC8340"/>.</t>

</section>
<section anchor="prefixes-in-data-node-names"><name>Prefixes in Data Node Names</name>

<t>In this document, names of data nodes and other data model objects
   are prefixed using the standard prefix associated with the
   corresponding YANG imported modules, as shown in <xref target="tab-prefix"/>.</t>

<texttable title="Prefixes and corresponding YANG modules" anchor="tab-prefix">
      <ttcol align='left'>Prefix</ttcol>
      <ttcol align='left'>YANG module</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>te-types</c>
      <c>ietf-te-types</c>
      <c>[RFCZZZZ]</c>
      <c>te</c>
      <c>ietf-te</c>
      <c>[RFCYYYY]</c>
      <c>te-pc</c>
      <c>ietf-te-path-computation</c>
      <c>RFCXXXX</c>
</texttable>

<t>RFC Editor Note:
Please replace XXXX with the RFC number assigned to this document.
Please replace YYYY with the RFC number of <xref target="I-D.ietf-teas-yang-te"/> once it has been published.
Please replace ZZZZ with the RFC number of <xref target="I-D.ietf-teas-rfc8776-update"/> once it has been published.
Please remove this note.</t>

</section>
</section>
<section anchor="use-cases"><name>Use Cases</name>

<t>This section presents some use cases, where a client needs to request
   underlying SDN controllers for path computation.</t>

<t>The use of the YANG data model defined in this document is not
   restricted to these use cases but can be used in any other use case
   when deemed useful.</t>

<t>The presented uses cases have been grouped, depending on the
   different underlying topologies: Packet/Optical Integration (<xref target="poi-uc"/>);
   multi-domain Traffic Engineered (TE) Networks (<xref target="md-uc"/>); and Data Center
   Interconnections (<xref target="dci-uc"/>). Use cases in <xref target="brpc-uc"/> and <xref target="hpce-uc"/>
   respectively present how to
   apply this YANG data model for standard multi-domain PCE i.e.
   Backward Recursive Path Computation <xref target="RFC5441"/> and Hierarchical PCE
   <xref target="RFC6805"/>.</t>

<section anchor="poi-uc"><name>Packet/Optical Integration</name>

<t>In this use case, an optical domain is used to provide connectivity
   to some nodes of a packet domain (see <xref target="fig-poi-uc"/>).</t>

<figure title="Packet/Optical Integration use case" anchor="fig-poi-uc"><artwork type="ascii-art" name="poi-use-case.txt"><![CDATA[
                                +----------------+
                                |                |
                                | Packet/Optical |
                                |  Coordinator   |
                                |                |
                                +---+------+-----+
                                    |      |
                       +------------+      |
                       |                   +-----------+
                +------V-----+                         |
                |            |                  +------V-----+
                | Packet     |                  |            |
                | Domain     |                  | Optical    |
                | Controller |                  | Domain     |
                |            |                  | Controller |
                +------+-----+                  +-------+----+
                       |                                |
              .........V.........................       |
              :          packet domain          :       |
          +----+                               +----+   |
          | R1 |= = = = = = = = = = = = = = = =| R2 |   |
          +-+--+                               +--+-+   |
            | :                                 : |     |
            | :................................ : |     |
            |                                     |     |
            |               +-----+               |     |
            |    ...........| Opt |...........    |     |
            |    :          |  C  |          :    |     |
            |    :         /+--+--+\         :    |     |
            |    :        /    |    \        :    |     |
            |    :       /     |     \       :    |     |
            |   +-----+ /   +--+--+   \ +-----+   |     |
            |   | Opt |/    | Opt |    \| Opt |   |     |
            +---|  A  |     |  D  |     |  B  |---+     |
                +-----+\    +--+--+    /+-----+         |
                 :      \      |      /      :          |
                 :       \     |     /       :          |
                 :        \ +--+--+  / optical<---------+
                 :         \| Opt |/  domain :
                 :..........|  E  |..........:
                            +-----+
]]></artwork></figure>

<t><xref target="fig-poi-uc"/> as well as <xref target="fig-poi-abstraction"/> describe two different
   examples of packet/optical topologies and only show a partial view of the
   packet network connectivity, before additional packet connectivity is
   provided by the optical network.</t>

<t>It is assumed that the Optical Domain Controller provides to the
   Packet/Optical Coordinator an abstracted view of the optical network.
   A possible abstraction could be to represent the whole optical
   network as one "virtual node" with "virtual ports" connected to the
   access links, as shown in <xref target="fig-poi-abstraction"/>.</t>

<t>It is also assumed that Packet Domain Controller can provide the
   Packet/Optical Coordinator the information it needs to set up
   connectivity between packet nodes through the optical network (e.g.,
   the access links).</t>

<t>The path computation request helps the Packet/Optical Coordinator to
   know the real connections that can be provided by the optical
   network.</t>

<figure title="Packet and Optical Topology Abstractions" anchor="fig-poi-abstraction"><artwork type="ascii-art" name="poi-topology-abstraction.txt"><![CDATA[
                       ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,.
                      ,  Packet/Optical Coordinator view          ,
                     ,                              +----+       , .
                    ,                               |    |      ,
                   ,                                | R2 |     ,   .
                  ,  +----+  +------------ +       /+----+    ,
                 ,   |    |  |             |/-----/ / /      ,     .
                ,    | R1 |--O VP1     VP4 O       / /      ,
               ,     |    |\ |             | /----/ /      ,       .
              ,      +----+ \|             |/      /      ,
             ,        /      O VP2     VP5 O      /      ,         .
            ,        /       |             |  +----+    ,
           ,        /        |             |  |    |   ,           .
          ,        /         O VP3     VP6 O--| R4 |  ,
         ,     +----+ /-----/|_____________|  +----+ ,             .
        ,      |    |/       +------------ +        ,
       ,       | R3 |                              ,               .
      ,        +----+                             ,,,,,,,,,,,,,,,,,
     ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,                ,.
     . Packet Domain Controller view                +----+       ,
       only packet nodes and packet links           |    |      ,  .
     . with access links to the optical network     | R2 |     ,
                  ,  +----+                        /+----+    ,    .
     .           ,   |    |                 /-----/ / /      ,
                ,    | R1 |---                     / /      ,      .
     .         ,     +----+\                 /----/ /      ,
              ,        /    \               /      /      ,        .
     .       ,        /                           /      ,
            ,        /                        +----+    ,          .
     .     ,        /                         |    |   ,
          ,        /                       ---| R4 |  ,            .
     .   ,     +----+ /-----/                 +----+ ,
        ,      |    |/                              ,              .
     . ,       | R3 |                              ,
      ,        +----+                             ,,,,,,,,,,,,,,,,,.
     .,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,                ,
       Optical Domain Controller view                            , .
     . only optical nodes,        +--+                          ,
       optical links and         /|OF|                         ,   .
     . access links from the  +--++--+             /          ,
       packet network         |OA|    \     /-----/ /        ,     .
     .          ,          ---+--+--\  +--+/       /        ,
               ,           \   |  \  \-|OE|-------/        ,       .
     .        ,             \  |   \ /-+--+               ,
             ,               \+--+  X    |               ,         .
     .      ,                 |OB|-/ \   |              ,
           ,                  +--+-\  \+--+            ,           .
     .    ,                  /   \  \--|OD|---        ,
         ,            /-----/     +--+ +--+          ,             .
     .  ,            /            |OC|/             ,
       ,                          +--+             ,               .
     .,                                           ,,,,,,,,,,,,,,,,,,
      ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,                ,
     . Actual Physical View                         +----+       ,
                    ,             +--+              |    |      ,
     .             ,             /|OF|              | R2 |     ,
                  ,  +----+   +--++--+             /+----+    ,
     .           ,   |    |   |OA|    \     /-----/ / /      ,
                ,    | R1 |---+--+--\  +--+/       / /      ,
     .         ,     +----+\   |  \  \-|OE|-------/ /      ,
              ,        /    \  |   \ /-+--+        /      ,
     .       ,        /      \+--+  X    |        /      ,
            ,        /        |OB|-/ \   |    +----+    ,
     .     ,        /         +--+-\  \+--+   |    |   ,
          ,        /         /   \  \--|OD|---| R4 |  ,
     .   ,     +----+ /-----/     +--+ +--+   +----+ ,
        ,      |    |/            |OC|/             ,
     . ,       | R3 |             +--+             ,
      ,        +----+                             ,
     .,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
]]></artwork></figure>

<t>In this use case, the Packet/Optical Coordinator needs to set up an
   optimal underlying path for an IP link between R1 and R2.</t>

<t>As depicted in <xref target="fig-poi-abstraction"/>, the Packet/Optical Coordinator has only an
   "abstracted view" of the physical network, and it does not know the
   feasibility or the cost of the possible optical paths (e.g., VP1-VP4
   and VP2-VP5), which depend on the current status of the physical
   resources within the optical network and on vendor-specific optical
   attributes.</t>

<t>The Packet/Optical Coordinator can request the underlying Optical
   Domain Controller to compute a set of potential optimal paths, taking
   into account optical constraints. Then, based on its own constraints,
   policy and knowledge (e.g. cost of the access links), it can choose
   which one of these potential paths to use to set up the optimal end-
   to-end path crossing optical network.</t>

<figure title="Packet/Optical Integration path computation example" anchor="fig-poi-example"><artwork type="ascii-art" name="poi-example.txt"><![CDATA[
                    ............................
                    :                          :
                    O VP1                  VP4 O
           cost=10 /:\                        /:\ cost=10
                  / : \----------------------/ : \
          +----+ /  :         cost=50          :  \ +----+
          |    |/   :                          :   \|    |
          | R1 |    :                          :    | R2 |
          |    |\   :                          :   /|    |
          +----+ \  :  /--------------------\  :  / +----+
                  \ : /       cost=55        \ : /
            cost=5 \:/                        \:/ cost=5
                    O VP2                  VP5 O
                    :                          :
                    :..........................:
]]></artwork></figure>

<t>For example, in <xref target="fig-poi-example"/>, the Packet/Optical Coordinator can request
   the Optical Domain Controller to compute the paths between VP1-VP4
   and VP2-VP5 and then decide to set up the optimal end-to-end path
   using the VP2-VP5 optical path even if this is not the optimal path
   from the optical domain perspective.</t>

<t>Considering the dynamicity of the connectivity constraints of an
   optical domain, it is possible that a path computed by the Optical
   Domain Controller when requested by the Packet/Optical Coordinator is
   no longer valid/available when the Packet/Optical Coordinator
   requests it to be set up. This is further discussed in <xref target="rpc-motivation"/>.</t>

</section>
<section anchor="md-uc"><name>Multi-domain TE networks</name>

<t>In this use case there are two TE domains which are interconnected
   together by multiple inter-domains links.</t>

<t>A possible example could be a multi-domain optical network.</t>

<figure title="Multi-domain multi-link interconnection" anchor="md-ml-connection"><artwork type="ascii-art" name="multi-domain-use-case.txt"><![CDATA[
                            +--------------+
                            | Multi-Domain |
                            | Controller   |
                            +---+------+---+
                                |      |
                   +------------+      |
                   |                   +-----------+
            +------V-----+                         |
            |            |                         |
            | TE Domain  |                  +------V-----+
            | Controller |                  |            |
            |      1     |                  | TE Domain  |
            +------+-----+                  | Controller |
                   |                        |      2     |
                   |                        +------+-----+
          .........V..........                     |
          :                  :                     |
         +-----+             :                     |
         |     |             :            .........V..........
         |  X  |             :            :                  :
         |     |          +-----+      +-----+                :
         +-----+          |     |      |     |               :
          :               |  C  |------|  E  |               :
      +-----+    +-----+ /|     |      |     |\ +-----+    +-----+
      |     |    |     |/ +-----+      +-----+ \|     |    |     |
      |  A  |----|  B  |     :            :     |  G  |----|  H  |
      |     |    |     |\    :            :    /|     |    |     |
      +-----+    +-----+ \+-----+      +-----+/ +-----+    +-----+
          :               |     |      |     |               :
          :               |  D  |------|  F  |               :
          :               |     |      |     |          +-----+
          :               +-----+      +-----+          |     |
          :                  :            :             |  Y  |
          :                  :            :             |     |
          :   TE domain 1    :            : TE domain 2 +-----+
          :..................:            :.................:
]]></artwork></figure>

<t>In order to set up an end-to-end multi-domain TE path (e.g., between
   nodes A and H), the Multi-Domain Controller needs to know the
   feasibility or the cost of the possible TE paths within the two TE
   domains, which depend on the current status of the physical resources
   within each TE domain. This is more challenging in case of optical
   networks because the optimal paths depend also on vendor-specific
   optical attributes (which may be different in the two domains if they
   are provided by different vendors).</t>

<t>In order to set up a multi-domain TE path (e.g., between nodes A and
   H), the Multi-Domain Controller can request the TE Domain Controllers
   to compute a set of intra-domain optimal paths and take decisions
   based on the information received. For example:</t>

<t><list style="symbols">
  <t>The Multi-Domain Controller asks TE Domain Controllers to provide
set of paths between A-C, A-D, E-H and F-H</t>
  <t>TE Domain Controllers return a set of feasible paths with the
associated costs: the path A-C is not part of this set (in optical
networks, it is typical to have some paths not being feasible due
to optical constraints that are known only by the Optical Domain
Controller)</t>
  <t>The Multi-Domain Controller will select the path A-D-F-H since it
is the only feasible multi-domain path and then request the TE
Domain Controllers to set up the A-D and F-H intra-domain paths</t>
  <t>If there are multiple feasible paths, the Multi-Domain Controller
can select the optimal path knowing the cost of the intra-domain
paths (provided by the TE domain controllers) and the cost of the
inter-domain links (known by the Multi-Domain Controller)  <vspace blankLines='1'/>
This approach may have some scalability issues when the number of TE
domains is quite big (e.g. 20).  <vspace blankLines='1'/>
In this case, it would be worthwhile using the abstract TE topology
information provided by the TE Domain Controllers to limit the number
of potential optimal end-to-end paths and then request path
computation from fewer TE Domain Controllers in order to decide what
the optimal path within this limited set is.  <vspace blankLines='1'/>
For more details, see <xref target="topo-pc-complement"/>.</t>
</list></t>

</section>
<section anchor="dci-uc"><name>Data Center Interconnections</name>

<t>In these use case, there is a TE domain which is used to provide
   connectivity between Data Centers which are connected with the TE
   domain using access links.</t>

<figure title="Data Center Interconnection use case" anchor="fig-dci-uc"><artwork type="ascii-art" name="dci-use-case.txt"><![CDATA[
                        +--------------+
                        | Cloud Network|
                        | Orchestrator |
                        +--------------+
                          |  |  |  |
            +-------------+  |  |  +------------------------+
            |                |  +------------------+        |
            |       +--------V---+                 |        |
            |       |            |                 |        |
            |       | TE Network |                 |        |
     +------V-----+ | Controller |          +------V-----+  |
     | DC         | +------------+          | DC         |  |
     | Controller |     |                   | Controller |  |
     +------------+     |   +-----+         +------------+  |
          |         ....V...|     |........         |       |
          |         :       |  P  |       :         |       |
     .....V.....    :      /+-----+\      :    .....V.....  |
     :         :  +-----+ /    |    \ +-----+  :         :  |
     :  DC1 || :  |     |/     |     \|     |  :  DC2 || :  |
     :    ||||----| PE1 |      |      | PE2 |----   |||| :  |
     : _|||||| :  |     |\     |     /|     |  : _|||||| :  |
     :         :  +-----+ \ +-----+ / +-----+  :         :  |
     :.........:    :      \|     |/      :    :.........:  |
                    :.......| PE3 |.......:                 |
                            |     |                         |
                            +-----+               +---------V--+
                          .....|.....             | DC         |
                          :         :             | Controller |
                          :  DC3 || :             +------------+
                          :    |||| :                  |
                          : _|||||| <------------------+
                          :         :
                          :.........:
]]></artwork></figure>

<t>In this use case, there is the need to transfer data from Data Center
   1 (DC1) to either DC2 or DC3 (e.g. workload migration).</t>

<t>The optimal decision depends both on the cost of the TE path (DC1-DC2
   or DC1-DC3) and of the Data Center resources within DC2 or DC3.</t>

<t>The Cloud Network Orchestrator needs to make a decision for optimal
   connection based on TE network constraints and Data Center resources.</t>

<t>It may not be able to make this decision because it has only an
   abstract view of the TE network (as in <xref target="poi-uc"/>).</t>

<t>The Cloud Network Orchestrator can request to the TE Network
   Controller to compute the cost of the possible TE paths (e.g., DC1-
   DC2 and DC1-DC3) and to the DC Controller to provide the information
   it needs about the required Data Center resources within DC2 and DC3
   and then it can take the decision about the optimal solution based on
   this information and its policy.</t>

</section>
<section anchor="brpc-uc"><name>Backward Recursive Path Computation scenario</name>

<t><xref target="RFC5441"/> has defined the Virtual Source Path Tree (VSPT) flag within the RP (Request Parameters) object in order to compute inter-domain paths following a
   "Backward Recursive Path Computation" (BRPC) method. The main
   principle is to forward the PCReq message up to the destination
   domain. Then, each PCE involved in the computation will compute its
   part of the path and send it back to the requester through PCE
   Response message. The resulting computation is spread from
   destination PCE to source PCE. Each PCE is in charge of merging the
   path it received with the one it calculated. At the end, the source
   PCE merges its local part of the path with the received one to
   achieve the end-to-end path.</t>

<t><xref target="fig-brpc-example"/> below show a typical BRPC scenario where 3 PCEs cooperate to
   compute inter-domain paths.</t>

<figure title="BRPC Scenario" anchor="fig-brpc-example"><artwork type="ascii-art" name="brpc-scenario.txt"><![CDATA[
                   +----------------+          +----------------+
                   |  Domain (B)    |          |  Domain (C)    |
                   |                |          |                |
                   |        /-------|---PCEP---|--------\       |
                   |       /        |          |         \      |
                   |   (PCE)        |          |   -    (PCE)   |
                   |    /           <---------->  |D|           |
                   |   /            |  Inter   |   -            |
                   +---|----^-------+  Domain  +----------------+
                       |    |          Link
                     PCEP   |
                       |    | Inter-domain Link
                       |    |
                   +---|----v-------+
                   |   |            |
                   |   | Domain (A) |
                   |   \            |
                   |  (PCE)    -    |
                   |          |S|   |
                   |           -    |
                   +----------------+
]]></artwork></figure>

<t>In this use case, a client can use the YANG data model defined in
   this document to request path computation from the PCE that controls
   the source of the tunnel. For example, a client can request to the
   PCE of domain A to compute a path from a source S, within domain A,
   to a destination D, within domain C. Then PCE of domain A will use
   PCEP protocol, as per <xref target="RFC5441"/>, to compute the path from S to D and
   in turn gives the final answer to the requester.</t>

</section>
<section anchor="hpce-uc"><name>Hierarchical PCE scenario</name>

<t><xref target="RFC6805"/> has defined an architecture and extensions to the PCE
   standard to compute inter-domain path following a hierarchical
   method. Two new roles have been defined: parent PCE and child PCE.
   The parent PCE is in charge to coordinate the end-to-end path
   computation. For that purpose it sends to each child PCE involved in
   the multi-domain path computation a PCE Request message to obtain the
   local part of the path. Once received all answer through PCE Response
   message, the parent PCE will merge the different local parts of the
   path to achieve the end-to-end path.</t>

<t><xref target="fig-hpce-example"/> below shows a typical hierarchical scenario where a parent
   PCE request end-to-end path to the different child PCE. Note that a
   PCE could take independently the role of child or parent PCE
   depending of which PCE will request the path.</t>

<figure title="Hierarchical domain topology from RFC6805" anchor="fig-hpce-example"><artwork type="ascii-art" name="hierarchical-domain-topology.txt"><![CDATA[
    -----------------------------------------------------------------
    |   Domain 5                                                      |
    |                              -----                              |
    |                             |PCE 5|                             |
    |                              -----                              |
    |                                                                 |
    |    ----------------     ----------------     ----------------   |
    |   | Domain 1       |   | Domain 2       |   | Domain 3       |  |
    |   |                |   |                |   |                |  |
    |   |        -----   |   |        -----   |   |        -----   |  |
    |   |       |PCE 1|  |   |       |PCE 2|  |   |       |PCE 3|  |  |
    |   |        -----   |   |        -----   |   |        -----   |  |
    |   |                |   |                |   |                |  |
    |   |            ----|   |----        ----|   |----            |  |
    |   |           |BN11+---+BN21|      |BN23+---+BN31|           |  |
    |   |   -        ----|   |----        ----|   |----        -   |  |
    |   |  |S|           |   |                |   |           |D|  |  |
    |   |   -        ----|   |----        ----|   |----        -   |  |
    |   |           |BN12+---+BN22|      |BN24+---+BN32|           |  |
    |   |            ----|   |----        ----|   |----            |  |
    |   |                |   |                |   |                |  |
    |   |         ----   |   |                |   |   ----         |  |
    |   |        |BN13|  |   |                |   |  |BN33|        |  |
    |    -----------+----     ----------------     ----+-----------   |
    |                \                                /               |
    |                 \       ----------------       /                |
    |                  \     |                |     /                 |
    |                   \    |----        ----|    /                  |
    |                    ----+BN41|      |BN42+----                   |
    |                        |----        ----|                       |
    |                        |                |                       |
    |                        |        -----   |                       |
    |                        |       |PCE 4|  |                       |
    |                        |        -----   |                       |
    |                        |                |                       |
    |                        | Domain 4       |                       |
    |                         ----------------                        |
    |                                                                 |
     -----------------------------------------------------------------
]]></artwork></figure>

<t>In this use case, a client can use the YANG data model defined in
   this document to request to the parent PCE a path from a source S to
   a destination D. The parent PCE will in turn contact the child PCEs
   through PCEP protocol to compute the end-to-end path and then return
   the computed path to the client, using the YANG data model defined in
   this document. For example the YANG data model can be used to request
   to PCE5 acting as parent PCE to compute a path from source S, within
   domain 1, to destination D, within domain 3. PCE5 will contact child
   PCEs of domain 1, 2 and 3 to obtain local part of the end-to-end path
   through the PCEP protocol. Once received the PCRep message, it
   merges the answers to compute the end-to-end path and send it back to
   the client.</t>

</section>
</section>
<section anchor="motivations"><name>Motivations</name>

<t>This section provides the motivation for the YANG data model defined
   in this document.</t>

<t><xref target="yang-motivation"/> describes the motivation for a YANG data model to request
   path computation.</t>

<t><xref target="topo-interaction"/> describes the motivation for a YANG data model which
   complements the TE topology YANG data model defined in <xref target="RFC8795"/>.</t>

<t><xref target="rpc-motivation"/> describes the motivation for a YANG RPC which complements
   the TE tunnel YANG data model defined in <xref target="I-D.ietf-teas-yang-te"/>.</t>

<section anchor="yang-motivation"><name>Motivation for a YANG Model</name>

<section anchor="benefits-of-common-data-models"><name>Benefits of common data models</name>

<t>The YANG data model for requesting path computation is closely
   aligned with the YANG data models that provide (abstract) TE topology
   information, i.e., <xref target="RFC8795"/> as well as that are used to configure
   and manage TE tunnels, i.e., <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>There are many benefits in aligning the data model used for path
   computation requests with the YANG data models used for TE topology
   information and for TE tunnels configuration and management:</t>

<t><list style="symbols">
  <t>There is no need for an error-prone mapping or correlation of
information.</t>
  <t>It is possible to use the same endpoint identifiers in path
computation requests and in the topology modeling.</t>
  <t>The attributes used for path computation constraints are the same
as those used when setting up a TE tunnel.</t>
</list></t>

</section>
<section anchor="benefits-of-a-single-interface"><name>Benefits of a single interface</name>

<t>The system integration effort is typically lower if a single,
   consistent interface is used by controllers, i.e., one data modeling
   language (i.e., YANG) and a common protocol (e.g., NETCONF or
   RESTCONF).</t>

<t>Practical benefits of using a single, consistent interface include:</t>

<t><list style="numbers">
  <t>Simple authentication and authorization: The interface between
different components has to be secured. If different protocols
have different security mechanisms, ensuring a common access
control model may result in overhead. For instance, there may be a
need to deal with different security mechanisms, e.g., different
credentials or keys. This can result in increased integration
effort.</t>
  <t>Consistency: Keeping data consistent over multiple different
interfaces or protocols is not trivial. For instance, the sequence
of actions can matter in certain use cases, or transaction
semantics could be desired. While ensuring consistency within one
protocol can already be challenging, it is typically cumbersome to
achieve that across different protocols.</t>
  <t>Testing: System integration requires comprehensive testing,
including corner cases. The more different technologies are
involved, the more difficult it is to run comprehensive test cases
and ensure proper integration.</t>
  <t>Middle-box friendliness: Provider and consumer of path computation
requests may be located in different networks, and middle-boxes
such as firewalls, NATs, or load balancers may be deployed. In
such environments it is simpler to deploy a single protocol. Also,
it may be easier to debug connectivity problems.</t>
  <t>Tooling reuse: Implementers may want to implement path computation
requests with tools and libraries that already exist in
controllers and/or orchestrators, e.g., leveraging the rapidly
growing eco-system for YANG tooling.</t>
</list></t>

</section>
<section anchor="extensibility"><name>Extensibility</name>

<t>Path computation is only a subset of the typical functionality of a
   controller. In many use cases, issuing path computation requests
   comes along with the need to access other functionality on the same
   system. In addition to obtaining TE topology, for instance also
   configuration of services (set-up/modification/deletion) may be
   required, as well as:</t>

<t><list style="numbers">
  <t>Receiving notifications for topology changes as well as
integration with fault management</t>
  <t>Performance management such as retrieving monitoring and telemetry
data</t>
  <t>Service assurance, e.g., by triggering OAM functionality</t>
  <t>Other fulfilment and provisioning actions beyond tunnels and
services, such as changing QoS configurations  <vspace blankLines='1'/>
YANG is a very extensible and flexible data modeling language that
can be used for all these use cases.</t>
</list></t>

</section>
</section>
<section anchor="topo-interaction"><name>Interactions with TE topology</name>

<t>The use cases described in <xref target="use-cases"/> have been described assuming
   that the topology view exported by each underlying controller to its
   client is aggregated using the "virtual node model", defined in
   <xref target="RFC7926"/>.</t>

<t>TE topology information, e.g., as provided by <xref target="RFC8795"/>, could in
   theory be used by an underlying controller to provide TE information
   to its client thus allowing a PCE available within its client to
   perform multi-domain path computation on its own, without requesting
   path computations to the underlying controllers.</t>

<t>In case the client does not implement a PCE function, as discussed in
   <xref target="intro"/>, it could not perform path computation based on TE topology
   information and would instead need to request path computation from
   the underlying controllers to get the information it needs to find
   the optimal end-to-end path.</t>

<t>In case the client implements a PCE function, as discussed in 
   <xref target="intro"/>, the TE topology information needs to be complete and accurate,
   which would bring to scalability issues.</t>

<t>Using TE topology to provide a "virtual link model" aggregation, as
   described in <xref target="RFC7926"/>, may be insufficient, unless the aggregation
   provides complete and accurate information, which would still cause
   scalability issues, as described in <xref target="topo-aggregation"/> below.</t>

<t>Using TE topology abstraction, as described in <xref target="RFC7926"/>, may lead to
   compute an unfeasible path, as described in <xref target="RFC7926"/> in 
   <xref target="topo-abstraction"/> below.</t>

<t>Therefore when computing an optimal multi-domain path, there is a
   scalability trade-off between providing complete and accurate TE
   information and the number of path computation requests to the
   underlying controllers.</t>

<t>The TE topology information used, in a complimentary way, to reduce
   the number for path computation requests to the underlying
   controllers, are described in <xref target="topo-pc-complement"/> below.</t>

<section anchor="topo-aggregation"><name>TE topology aggregation</name>

<t>Using the TE topology model, as defined in <xref target="RFC8795"/>, the underlying
   controller can export the whole TE domain as a single TE node with a
   "detailed connectivity matrix" (which provides specific TE
   attributes, such as delay, Shared Risk Link Groups (SRLGs) and other
   TE metrics, between each ingress and egress links).</t>

<t>The information provided by the "detailed connectivity matrix" would
   be equivalent to the information that should be provided by "virtual
   link model" as defined in <xref target="RFC7926"/>.</t>

<t>For example, in the Packet/Optical Integration use case, described in
   <xref target="poi-uc"/>, the Optical Domain Controller can make the information
   shown in <xref target="fig-poi-example"/> available to the Packet/Optical Coordinator as part
   of the TE topology information and the Packet/Optical Coordinator
   could use this information to calculate on its own the optimal path
   between R1 and R2, without requesting any additional information to
   the Optical Domain Controller.</t>

<t>However, when designing the amount of information to provide within
   the "detailed connectivity matrix", there is a tradeoff to be
   considered between accuracy (i.e., providing "all" the information
   that might be needed by the PCE available within the client) and
   scalability.</t>

<t><xref target="poi-multi-path"/> below shows another example, similar to <xref target="fig-poi-example"/>, where
   there are two possible Optical paths between VP1 and VP4 with
   different properties (e.g., available bandwidth and cost).</t>

<figure title="Packet/Optical Integration path computation Example with multiple choices" anchor="poi-multi-path"><artwork type="ascii-art" name="poi-example-multiple.txt"><![CDATA[
                    ............................
                    :  /--------------------\  :
                    : /       cost=65        \ :
                    :/    available-bw=10G    \:
                    O VP1                  VP4 O
           cost=10 /:\                        /:\ cost=10
                  / : \----------------------/ : \
          +----+ /  :         cost=50          :  \ +----+
          |    |/   :     available-bw=2G      :   \|    |
          | R1 |    :                          :    | R2 |
          |    |\   :                          :   /|    |
          +----+ \  :  /--------------------\  :  / +----+
                  \ : /       cost=55        \ : /
            cost=5 \:/    available-bw=3G     \:/ cost=5
                    O VP2                  VP5 O
                    :                          :
                    :..........................:
]]></artwork></figure>

<t>If the information in the "detailed connectivity matrix" is not
   complete/accurate, we can have the following drawbacks:</t>

<t><list style="symbols">
  <t>If only the VP1-VP4 path with available bandwidth of 2 Gb/s and
cost 50 is reported, the client's PCE will fail to compute a 5
Gb/s path between routers R1 and R2, although this would be
feasible;</t>
  <t>If only the VP1-VP4 path with available bandwidth of 10 Gb/s and
cost 65 is reported, the client's PCE will compute, as optimal,
the 1 Gb/s path between R1 and R2 going through the VP2-VP5 path
within the optical domain while the optimal path would actually be
the one going thought the VP1-VP4 sub-path (with cost 50) within
the optical domain.  <vspace blankLines='1'/>
Reporting all the information, as in <xref target="poi-multi-path"/>, using the "detailed
 connectivity matrix", is quite challenging from a scalability
 perspective. The amount of this information is not just based on
 number of end points (which would scale as N-square), but also on
 many other parameters, including client rate, user
 constraints/policies for the service, e.g. max latency &lt; N ms, max
 cost, etc., exclusion policies to route around busy links, min
 Optical Signal to Noise Ratio (OSNR) margin, max pre-Forward Error
 Correction (FEC) Bit Error Rate (BER) etc. All these constraints
 could be different based on connectivity requirements.  <vspace blankLines='1'/>
It is also worth noting that the "connectivity matrix" has been
 originally defined in Wavelength Switched Optical Networks (WSON),
 <xref target="RFC7446"/>, to report the connectivity constrains of a physical node
 within the Wavelength Division Multiplexing (WDM) network: the
 information it contains is pretty "static" and therefore, once taken
 and stored in the TE data base, it can be always being considered
 valid and up-to-date in path computation request.  <vspace blankLines='1'/>
The "connectivity matrix" is sometimes confused with "optical reach
 table" that contain multiple (e.g. k-shortest) regen-free reachable
 paths for every A-Z node combination in the network. Optical reach
 tables can be calculated offline, utilizing vendor optical design and
 planning tools, and periodically uploaded to the Controller: these
 optical path reach tables are fairly static. However, to get the
 connectivity matrix, between any two sites, either a regen free path
 can be used, if one is available, or multiple regen free paths are
 concatenated to get from the source to the destination, which can be
 a very large combination. Additionally, when the optical path within
 optical domain needs to be computed, it can result in different paths
 based on input objective, constraints, and network conditions. In
 summary, even though "optical reach table" is fairly static, which
 regen free paths to build the connectivity matrix between any source
 and destination is very dynamic, and is done using very sophisticated
 routing algorithms.  <vspace blankLines='1'/>
Using the "basic connectivity matrix" with an abstract node to
 abstract the information regarding the connectivity constraints of an
 Optical domain, would make this information more "dynamic" since the
 connectivity constraints of an optical domain can change over time
 because some optical paths that are feasible at a given time may
 become unfeasible at a later time when e.g., another optical path is
 established.  <vspace blankLines='1'/>
The information in the "detailed connectivity matrix" is even more
 dynamic since the establishment of another optical path may change
 some of the parameters (e.g., delay or available bandwidth) in the
 "detailed connectivity matrix" while not changing the feasibility of
 the path.  <vspace blankLines='1'/>
There is therefore the need to keep the information in the "detailed
 connectivity matrix" updated which means that there another tradeoff
 between the accuracy (i.e., providing "all" the information that
 might be needed by the client's PCE) and having up-to-date
 information. The more the information is provided and the longer it
 takes to keep it up-to-date which increases the likelihood that the
 client's PCE computes paths using not updated information.  <vspace blankLines='1'/>
It seems therefore quite challenging to have a "detailed connectivity
 matrix" that provides accurate, scalable and updated information to
 allow the client's PCE to take optimal decisions by its own.  <vspace blankLines='1'/>
Considering the example in <xref target="poi-multi-path"/> with the approach defined in this
 document, the client, when it needs to set up an end-to-end path, it
 can request the Optical Domain Controller to compute a set of optimal
 paths (e.g., for VP1-VP4 and VP2-VP5) and take decisions based on the
 information received:</t>
  <t>When setting up a 5 Gb/s path between routers R1 and R2, the
Optical Domain Controller may report only the VP1-VP4 path as the
only feasible path: the Packet/Optical Coordinator can
successfully set up the end-to-end path passing though this
optical path;</t>
  <t>When setting up a 1 Gb/s path between routers R1 and R2, the
Optical Domain Controller (knowing that the path requires only 1
Gb/s) can report both the VP1-VP4 path, with cost 50, and the VP2-
VP5 path, with cost 65. The Packet/Optical Coordinator can then
compute the optimal path which is passing thought the VP1-VP4 sub-
path (with cost 50) within the optical domain.</t>
</list></t>

</section>
<section anchor="topo-abstraction"><name>TE topology abstraction</name>

<t>Using the TE topology model, as defined in <xref target="RFC8795"/>, the underlying
   controller can export to its client an abstract TE topology, composed
   by a set of TE nodes and TE links, representing the abstract view of
   the topology under its control.</t>

<t>For example, in the multi-domain TE network use case, described in
   <xref target="md-uc"/>, the TE Domain Controller 1 can export a TE topology
   encompassing the TE nodes A, B, C and D and the TE links
   interconnecting them. In a similar way, the TE Domain Controller 2
   can export a TE topology encompassing the TE nodes E, F, G and H and
   the TE links interconnecting them.</t>

<t>In this example, for simplicity reasons, each abstract TE node maps
   with each physical node, but this is not necessary.</t>

<t>In order to set up a multi-domain TE path (e.g., between nodes A and
   H), the Multi-Domain Controller can compute by its own an optimal
   end-to-end path based on the abstract TE topology information
   provided by the domain controllers. For example:</t>

<t><list style="symbols">
  <t>Multi-Domain Controller can compute, based on its own TED data,
the optimal multi-domain path being A-B-C-E-G-H, and then request
the TE Domain Controllers to set up the A-B-C and E-G-H intra-
domain paths</t>
  <t>But, during path set-up, the TE Domain Controller may find out
that A-B-C intra-domain path is not feasible (as discussed in
<xref target="md-uc"/>, in optical networks it is typical to have some paths
not being feasible due to optical constraints that are known only
by the Optical Domain Controller), while only the path A-B-D is
feasible</t>
  <t>So what the Multi-Domain Controller has computed is not good and
it needs to re-start the path computation from scratch  <vspace blankLines='1'/>
As discussed in <xref target="topo-aggregation"/>, providing more extensive abstract
information from the TE Domain Controllers to the Multi-Domain
Controller may lead to scalability problems.  <vspace blankLines='1'/>
In a sense this is similar to the problem of routing and wavelength
assignment within an optical domain. It is possible to do first
routing (step 1) and then wavelength assignment (step 2), but the
chances of ending up with a good path is low. Alternatively, it is
possible to do combined routing and wavelength assignment, which is
known to be a more optimal and effective way for optical path set-up.
Similarly, it is possible to first compute an abstract end-to-end
path within the Multi-Domain Controller (step 1) and then compute an
intra-domain path within each optical domain (step 2), but there are
more chances not to find a path or to get a suboptimal path than by
performing multiple per-domain path computations and then stitching
them together.</t>
</list></t>

</section>
<section anchor="topo-pc-complement"><name>Complementary use of the TE topology</name>

<t>As discussed in <xref target="md-uc"/>, there are some scalability issues with
   path computation requests in a multi-domain TE network with many TE
   domains, in terms of the number of requests to send to the TE Domain
   Controllers. It would therefore be worthwhile using the abstract TE
   topology information provided by the TE Domain Controllers to limit
   the number of requests.</t>

<t>An example can be described considering the multi-domain abstract TE
   topology shown in <xref target="fig-topo-many-domains"/>. In this example, an end-to-end TE path
   between domains A and F needs to be set up. The transit TE domain
   should be selected between domains B, C, D and E.</t>

<figure title="Multi-domain with many domains (Topology information)" anchor="fig-topo-many-domains"><artwork type="ascii-art" name="many-domains-topology.txt"><![CDATA[
                          .........B.........
                          : _ _ _ _ _ _ _ _ :
                          :/               \:
                      +---O  NOT FEASIBLE   O---+
                cost=5|   :                 :   |
    ......A......     |   :.................:   |     ......F......
    :           :     |                         |     :           :
    :           O-----+   .........C.........   +-----O           :
    :           :         : /-------------\ :         :           :
    :           :         :/               \:         :           :
    :  cost<=20 O---------O   cost <= 30    O---------O cost<=20  :
    :          /: cost=5  :                 : cost=5  :\          :
    :  /------/ :         :.................:         : \------\  :
    : /         :                                     :         \ :
    :/ cost<=25 :         .........D.........         : cost<=25 \:
    O-----------O-------+ : /-------------\ : +-------O-----------O
    :\          : cost=5| :/               \: |cost=5 :          /:
    : \         :       +-O   cost <= 30    O-+       :         / :
    :  \------\ :         :                 :         : /------/  :
    : cost>=30 \:         :.................:         :/ cost>=30 :
    :           O-----+                         +-----O           :
    :...........:     |   .........E.........   |     :...........:
                      |   : /-------------\ :   |
                cost=5|   :/               \:   |cost=5
                      +---O   cost >= 30    O---+
                          :                 :
                          :.................:
]]></artwork></figure>

<t>The actual cost of each intra-domain path is not known a priori from
   the abstract topology information. The Multi-Domain Controller only
   knows, from the TE topology provided by the underlying domain
   controllers, the feasibility of some intra-domain paths and some
   upper-bound and/or lower-bound cost information. With this
   information, together with the cost of inter-domain links, the Multi-
   Domain Controller can understand by its own that:</t>

<t><list style="symbols">
  <t>Domain B cannot be selected as the path connecting domains A and F
is not feasible;</t>
  <t>Domain E cannot be selected as a transit domain since it is known
from the abstract topology information provided by domain
controllers that the cost of the multi-domain path A-E-F (which is
100, in the best case) will be always be higher than the cost of
the multi-domain paths A-D-F (which is 90, in the worst case) and
A-C-F (which is 80, in the worst case).  <vspace blankLines='1'/>
Therefore, the Multi-Domain Controller can understand by its own that
 the optimal multi-domain path could be either A-D-F or A-C-F but it
 cannot know which one of the two possible option actually provides
 the optimal end-to-end path.  <vspace blankLines='1'/>
The Multi-Domain Controller can therefore request path computation
 only to the TE Domain Controllers A, D, C and F (and not to all the
 possible TE Domain Controllers).</t>
</list></t>

<figure title="Multi-domain with many domains (Path Computation information)" anchor="fig-pc-many-domains"><artwork type="ascii-art" name="many-domain-path-computation.txt"><![CDATA[
                          .........B.........
                          :                 :
                      +---O                 O---+
    ......A......     |   :.................:   |     ......F......
    :           :     |                         |     :           :
    :           O-----+   .........C.........   +-----O           :
    :           :         : /-------------\ :         :           :
    :           :         :/               \:         :           :
    :  cost=15  O---------O    cost = 25    O---------O  cost=10  :
    :          /: cost=5  :                 : cost=5  :\          :
    :  /------/ :         :.................:         : \------\  :
    : /         :                                     :         \ :
    :/ cost=10  :         .........D.........         : cost=15  \:
    O-----------O-------+ : /-------------\ : +-------O-----------O
    :           : cost=5| :/               \: |cost=5 :           :
    :           :       +-O    cost = 15    O-+       :           :
    :           :         :                 :         :           :
    :           :         :.................:         :           :
    :           O-----+                         +-----O           :
    :...........:     |   .........E.........   |     :...........:
                      |   :                 :   |
                      +---O                 O---+
                          :.................:
]]></artwork></figure>

<t>Based on these requests, the Multi-Domain Controller can know the
   actual cost of each intra-domain paths which belongs to potential
   optimal end-to-end paths, as shown in <xref target="fig-pc-many-domains"/>, and then compute the
   optimal end-to-end path (e.g., A-D-F, having total cost of 50,
   instead of A-C-F having a total cost of 70).</t>

</section>
</section>
<section anchor="rpc-motivation"><name>Path Computation RPC</name>

<t>The TE tunnel YANG data model, defined in <xref target="I-D.ietf-teas-yang-te"/>, can support
   the need to request path computation, as described in section 5.1.2
   of <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>This solution is stateful since the state of each created "compute-
   only" TE tunnel path needs to be maintained, in the YANG datastores
   (at least in the running datastore and operational datastore), and
   updated, when underlying network conditions change.</t>

<t>The RPC mechanism allows requesting path computation using a simple
   atomic operation, without creating any state in the YANG datastores,
   and it is the natural option/choice, especially with stateless PCE.</t>

<t>It is very useful to provide both the options of using an RPC as well
   as of setting up TE tunnel paths in "compute-only" mode. It is
   suggested to use the RPC as much as possible and to rely on
   "compute-only" TE tunnel paths, when really needed.</t>

<t>Using the RPC solution would imply that the underlying controller
   (e.g., a PNC) computes a path twice during the process to set up an
   LSP: at time T1, when its client (e.g., an MDSC) sends a path
   computation RPC request to it, and later, at time T2, when the same
   client (MDSC) creates a TE tunnel requesting the set-up of the LSP.
   The underlying assumption is that, if network conditions have not
   changed, the same path that has been computed at time T1 is also
   computed at time T2 by the underlying controller (e.g. PNC) and
   therefore the path that is set up at time T2 is exactly the same path
   that has been computed at time T1.</t>

<t>However, since the operation is stateless, there is no guarantee that
   the returned path would still be available when path set-up is
   requested: this does not cause major issues when the time between
   path computation and path set-up is short (especially if compared
   with the time that would be needed to update the information of a
   very detailed connectivity matrix).</t>

<t>In most of the cases, there is even no need to guarantee that the
   path that has been set up is the exactly same as the path that has
   been returned by path computation, especially if it has the same or
   even better metrics. Depending on the abstraction level applied by
   the server, the client may also not know the actual computed path.</t>

<t>The most important requirement is that the required global objectives
   (e.g., multi-domain path metrics and constraints) are met. For this
   reason a path verification phase is always necessary to verify that
   the actual path that has been set up meets the global objectives (for
   example in a multi-domain network, the resulting end-to-end path
   meets the required end-to-end metrics and constraints).</t>

<t>In most of the cases, even if the path being set up is not exactly
   the same as the path returned by path computation, its metrics and
   constraints are "good enough" and the path verification passes
   successfully. In the few corner cases where the path verification
   fails, it is possible repeat the whole process (path computation,
   path set-up and path verification).</t>

<t>In case it is required to set up at T2 exactly the same path computed
   at T1, the RPC solution should not be used and, instead, a "compute-
   only" TE tunnel path should be set up, allowing also notifications in
   case the computed path has been changed.</t>

<t>In this case, at time T1, the client (MDSC) creates a TE tunnel in a
   compute-only mode in the running datastore and later, at time T2,
   changes the configuration of that TE tunnel (not to be any more in a
   compute-only mode) to trigger the set-up of the LSP over the path
   which have been computed at time T1 and reported in the operational
   datastore.</t>

<t>It is worth noting that also using the "compute-only" TE tunnel path,
   although increasing the likelihood that the computed path is
   available at path set-up, does not guarantee that because
   notifications may not be reliable or delivered on time. Path
   verification is needed also in this case.</t>

<t>The solution based on "compute-only" TE tunnel path has also the
   following drawbacks:</t>

<t><list style="symbols">
  <t>Several messages required for any path computation</t>
  <t>Requires persistent storage in the underlying controller</t>
  <t>Need for garbage collection for stranded paths</t>
  <t>Process burden to detect changes on the computed paths in order to
provide notifications update</t>
</list></t>

<section anchor="temp-state"><name>Temporary reporting of the computed path state</name>

<t>This section describes an optional extension to the stateless
   behavior of the path computation RPC, where the underlying
   controller, after having received a path computation RPC request,
   maintains some "transient state" associated with the computed path,
   allowing the client to request the set-up of exactly that path, if
   still available.</t>

<t>This is similar to the "compute-only" TE tunnel path solution but, to
   avoid the drawbacks of the stateful approach, is leveraging the path
   computation RPC and the separation between configuration and
   operational datastore, as defined in the NMDA architecture <xref target="RFC8342"/>.</t>

<t>The underlying controller, after having computed a path, as requested
   by a path computation RPC, also creates a TE tunnel instance within
   the operational datastore, to store that computed path. This would be
   similar to a "compute-only" TE tunnel path, with the only difference
   that there is no associated TE tunnel instance within the running
   datastore.</t>

<t>Since the underlying controller stores in the operational datastore
   the computed path based on an abstract topology it exposes, it also
   remembers, internally, which is the actual native path (physical
   path), within its native topology (physical topology), associated
   with that compute-only TE tunnel instance.</t>

<t>Afterwards, the client (e.g., MDSC) can request the set-up of that
   specific path by creating a TE tunnel instance (not in compute-only
   mode) in the running datastore using the same tunnel-name of
   the existing TE tunnel in the operational datastore: this will
   trigger the underlying controller to set up that path, if still
   available.</t>

<t>There are still cases where the path being set up is not exactly the
   same as the path that has been computed:</t>

<t><list style="symbols">
  <t>When the tunnel is configured with path constraints which are not
compatible with the computed path;</t>
  <t>When the tunnel set-up is requested after the resources of the
computed path are no longer available;</t>
  <t>When the tunnel set-up is requested after the computed path is no
longer known (e.g. due to a server reboot) by the underlying
controller.  <vspace blankLines='1'/>
In all these cases, the underlying controller should compute and set
 up a new path.  <vspace blankLines='1'/>
Therefore the "path verification" phase, as described in <xref target="rpc-motivation"/>
 above, is always needed to check that the path that has been set up
 is still "good enough".  <vspace blankLines='1'/>
Since this new approach is not completely stateless, garbage
 collection is implemented using a timeout that, when it expires,
 triggers the removal of the computed path from the operational
 datastore. This operation is fully controlled by the underlying
 controller without the need for any action to be taken by the client
 that is not able to act on the operational datastore. The default
 value of this timeout is 10 minutes but a different value may be
 configured by the client.  <vspace blankLines='1'/>
In addition, it is possible for the client to tag each path
 computation request with a transaction-id allowing for a faster
 removal of all the paths associated with a transaction-id, without
 waiting for their timers to expire.  <vspace blankLines='1'/>
The underlying controller can remove from the operational datastore
 all the paths computed with a given transaction-id which have not
 been set up either when it receives a Path Delete RPC request for
 that transaction-id or, automatically, right after the set-up up of a
 path that has been previously computed with that transaction-id.  <vspace blankLines='1'/>
This possibility is useful when multiple paths are computed but, at
 most, only one is set up (e.g., in multi-domain path computation
 scenario scenarios). After the selected path has been set up (e.g, in
 one domain during multi-domain path set-up), all the other
 alternative computed paths can be automatically deleted by the
 underlying controller (since no longer needed). The client can also
 request, using the Path Delete RPC request, the underlying controller
 to remove all the computed paths, if none of them is going to be set
 up (e.g., in a transit domain not being selected by multi-domain path
 computation and so not being automatically deleted).  <vspace blankLines='1'/>
This approach is complimentary and not alternative to the timer which
 is always needed to avoid stranded computed paths being stored in the
 operational datastore when no path is set up and no explicit Path
 Delete RPC request is received.</t>
</list></t>

</section>
</section>
</section>
<section anchor="path-computation-and-optimization-for-multiple-paths"><name>Path computation and optimization for multiple paths</name>

<t>There are use cases, where it is advantageous to request path
   computation for a set of paths, through a network or through a
   network domain, using a single request <xref target="RFC5440"/>.</t>

<t>In this case, sending a single request for multiple path
   computations, instead of sending multiple requests for each path
   computation, would reduce the protocol overhead and it would consume
   less resources (e.g., threads in the client and server).</t>

<t>In the context of a typical multi-domain TE network, there could
   multiple choices for the ingress/egress points of a domain and the
   Multi-Domain Controller needs to request path computation between all
   the ingress/egress pairs to select the best pair. For example, in the
   example of <xref target="md-uc"/>, the Multi-Domain Controller needs to request
   the TE Network Controller 1 to compute the A-C and the A-D paths and
   to the TE Network Controller 2 to compute the E-H and the F-H paths.</t>

<t>It is also possible that the Multi-Domain Controller receives a
   request to set up a group of multiple end to end connections. The
   Multi-Domain Controller needs to request each TE domain Controller to
   compute multiple paths, one (or more) for each end to end connection.</t>

<t>There are also scenarios where it can be needed to request path
   computation for a set of paths in a synchronized fashion.</t>

<t>One example could be computing multiple diverse paths. Computing a
   set of diverse paths in an unsynchronized fashion, leads to the
   possibility of not being able to satisfy the diversity requirement.
   In this case, it is preferable to compute a sub-optimal primary path
   for which a diversely routed secondary path exists.</t>

<t>There are also scenarios where it is needed to request optimizing a
   set of paths using objective functions that apply to the whole set of
   paths, see <xref target="RFC5541"/>, e.g. to minimize the sum of the costs of all
   the computed paths in the set.</t>

</section>
<section anchor="yang-data-model-for-requesting-path-computation"><name>YANG data model for requesting Path Computation</name>

<t>This document define a YANG RPC to request path computation as an
   "augmentation" of tunnel-rpc, defined in <xref target="I-D.ietf-teas-yang-te"/>. This model
   provides the RPC input attributes that are needed to request path
   computation and the RPC output attributes that are needed to report
   the computed paths.</t>

<figure><artwork type="ascii-art" name="overview.txt"><![CDATA[
  augment /te:tunnels-path-compute/te:input/te:path-compute-info:
    +-- path-request* [request-id]
    |  ...

  augment /te:tunnels-path-compute/te:output/te:path-compute-result:
    +--ro response* [response-id]
       +--ro response-id                         uint32
       +--ro computed-paths-properties
       |  +--ro computed-path-properties* [k-index]
       |     ...
]]></artwork></figure>

<t>This model extensively re-uses the grouping defined in <xref target="I-D.ietf-teas-yang-te"/>
   and <xref target="I-D.ietf-teas-rfc8776-update"/> to ensure maximal syntax and semantics commonality.</t>

<t>This YANG data model allows one RPC to include multiple path
   requests, each path request being identified by a request-id.
   Therefore, one RPC can return multiple responses, one for each path
   request, being identified by a response-id equal to the corresponding
   request-id. Each response reports one or more computed paths, as
   requested by the k-requested-paths attribute. By default, each
   response reports one computed path.</t>

<section anchor="synchronization-of-multiple-path-computation-requests"><name>Synchronization of multiple path computation requests</name>

<t>The YANG data model permits the synchronization of a set of multiple
   path requests (identified by specific request-id) all related to a
   "svec" container emulating the syntax of the Synchronization VECtor
   (SVEC) PCEP object, defined in <xref target="RFC5440"/>.</t>

<figure><artwork type="ascii-art" name="synchronization.txt"><![CDATA[
    +-- synchronization* []
       +-- svec
       |  +-- relaxable?      boolean
       |  +-- disjointness?   te-path-disjointness
       |  +-- request-id*     uint32
       +-- svec-constraints
       |  +-- path-metric-bound* [metric-type]
       |     +-- metric-type    identityref
       |     +-- upper-bound?   uint64
       +-- path-srlgs-lists
       |  +-- path-srlgs-list* [usage]
       |     +-- usage     identityref
       |     +-- values*   srlg
       +-- path-srlgs-names
       |  +-- path-srlgs-name* [usage]
       |     +-- usage    identityref
       |     +-- names*   string
       +-- exclude-objects
       |  +-- excludes* []
       |     +-- (type)?
       |        +--:(numbered-node-hop)
       |        |  +-- numbered-node-hop
       |        |     +-- node-id     te-node-id
       |        |     +-- hop-type?   te-hop-type
       |        +--:(numbered-link-hop)
       |        |  +-- numbered-link-hop
       |        |     +-- link-tp-id    te-tp-id
       |        |     +-- hop-type?     te-hop-type
       |        |     +-- direction?    te-link-direction
       |        +--:(unnumbered-link-hop)
       |        |  +-- unnumbered-link-hop
       |        |     +-- link-tp-id    te-tp-id
       |        |     +-- node-id       te-node-id
       |        |     +-- hop-type?     te-hop-type
       |        |     +-- direction?    te-link-direction
       |        +--:(as-number)
       |        |  +-- as-number-hop
       |        |     +-- as-number    inet:as-number
       |        |     +-- hop-type?    te-hop-type
       |        +--:(label)
       |           +-- label-hop
       |              +-- te-label
       |                 ...
       +-- optimizations
          +-- (algorithm)?
             +--:(metric) {te-types:path-optimization-metric}?
             |  +-- optimization-metric* [metric-type]
             |     +-- metric-type    identityref
             |     +-- weight?        uint8
             +--:(objective-function)
                      {te-types:path-optimization-objective-function}?
                +-- objective-function
                   +-- objective-function-type?   identityref
]]></artwork></figure>

<t>The model, in addition to the metric types, defined in <xref target="I-D.ietf-teas-rfc8776-update"/>,
   which can be applied to each individual path request, supports also
   additional metric types, which apply to a set of synchronized
   requests, as referenced in <xref target="RFC5541"/>. These additional metric types
   are defined by the following YANG identities:</t>

<t><list style="symbols">
  <t>svec-metric-type: base YANG identity from which cumulative metric
types identities are derived.</t>
  <t>svec-metric-cumul-te: cumulative TE cost metric type, as defined
in <xref target="RFC5541"/>.</t>
  <t>svec-metric-cumul-igp: cumulative IGP cost metric type, as defined
in <xref target="RFC5541"/>.</t>
  <t>svec-metric-cumul-hop: cumulative Hop metric type, representing
the cumulative version of the Hop metric type defined in
<xref target="I-D.ietf-teas-rfc8776-update"/>.</t>
  <t>svec-metric-aggregate-bandwidth-consumption: aggregate bandwidth
consumption metric type, as defined in <xref target="RFC5541"/>.</t>
  <t>svec-metric-load-of-the-most-loaded-link: load of the most loaded
link metric type, as defined in <xref target="RFC5541"/>.</t>
</list></t>

</section>
<section anchor="returned-metric-values"><name>Returned metric values</name>

<t>This YANG data model provides a way to return the values of the
   metrics computed by the path computation in the output of RPC,
   together with other important information (e.g. SRLG, affinities,
   explicit route), emulating the syntax of the "C" flag of the "METRIC"
   PCEP object <xref target="RFC5440"/>:</t>

<figure><artwork type="ascii-art" name="returned-metrics.txt"><![CDATA[
       |     +--ro path-properties
       |        +--ro path-metric* [metric-type]
       |        |  +--ro metric-type           identityref
       |        |  +--ro accumulative-value?   uint64
       |        +--ro path-affinities-values
       |        |  +--ro path-affinities-value* [usage]
       |        |     +--ro usage    identityref
       |        |     +--ro value?   admin-groups
       |        +--ro path-affinity-names
       |        |  +--ro path-affinity-name* [usage]
       |        |     +--ro usage            identityref
       |        |     +--ro affinity-name* [name]
       |        |        +--ro name    string
       |        +--ro path-srlgs-lists
       |        |  +--ro path-srlgs-list* [usage]
       |        |     +--ro usage     identityref
       |        |     +--ro values*   srlg
       |        +--ro path-srlgs-names
       |        |  +--ro path-srlgs-name* [usage]
       |        |     +--ro usage    identityref
       |        |     +--ro names*   string
       |        +--ro path-route-objects
       |        |  ...
       |        +--ro te-bandwidth
       |        |  ...
       |        +--ro disjointness-type?
       |                te-types:te-path-disjointness
]]></artwork></figure>

<t>It also allows the client to request which information (metrics, SRLG
   and/or affinities) should be returned:</t>

<figure><artwork type="ascii-art" name="requested-metrics.txt"><![CDATA[
    |  +-- request-id                            uint32
    |  ...
    |  +-- requested-metrics* [metric-type]
    |  |  +-- metric-type    identityref
    |  +-- return-srlgs?                         boolean
    |  +-- return-affinities?                    boolean
    |  ...
]]></artwork></figure>

<t>This feature is essential for path computation in a multi-domain TE
   network as described in <xref target="md-uc"/>. In this case, the metrics
   returned by a path computation requested to a given underlying
   controller must be used by the client to compute the best end-to-end
   path. If they are missing, the client cannot compare different paths
   calculated by the underlying controllers and choose the best one for
   the optimal end-to-end (e2e) path.</t>

</section>
<section anchor="multiple-paths-requests-for-the-same-te-tunnel"><name>Multiple Paths Requests for the same TE tunnel</name>

<t>The YANG data model allows including multiple requests for different
   paths intended to be used within the same tunnel or within different
   tunnels.</t>

<t>When multiple requested paths are intended to be used within the same
   tunnel (e.g., requesting path computation for the primary and
   secondary paths of a protected tunnel), the set of attributes that
   are intended to be configured on per-tunnel basis rather than on per-
   path basis are common to all these path requests. These attributes
   includes both attributes which can be configured only a per-tunnel
   basis (e.g., tunnel-name, source/destination TTP, encoding and
   switching-type) as well attributes which can be configured both on a
   per-tunnel and on a per-path basis (e.g., the te-bandwidth or the
   associations).</t>

<t>Therefore, a tunnel-attributes list is defined, within the path
   computation request RPC:</t>

<figure><artwork type="ascii-art" name="tunnel-attributes-list.txt"><![CDATA[
    +-- tunnel-attributes* [tunnel-name]
    |  +-- tunnel-name               string
    |  +-- encoding?                 identityref
    |  +-- switching-type?           identityref
    |  +-- source?                   te-types:te-node-id
    |  +-- destination?              te-types:te-node-id
    |  +-- src-tunnel-tp-id?         binary
    |  +-- dst-tunnel-tp-id?         binary
    |  +-- bidirectional?            boolean
    |  +-- association-objects
    |  |  ...
    |  +-- protection-type?          identityref
    |  +-- restoration-type?         identityref
    |  +-- restoration-scheme?       identityref
    |  +-- te-topology-identifier
    |  |  +-- provider-id?   te-global-id
    |  |  +-- client-id?     te-global-id
    |  |  +-- topology-id?   te-topology-id
    |  +-- te-bandwidth
    |  |  ...
    |  +-- link-protection?          identityref
    |  +-- setup-priority?           uint8
    |  +-- hold-priority?            uint8
    |  +-- signaling-type?           identityref
    |  +-- hierarchy
    |     +-- dependency-tunnels
    |     |  ...
    |     +-- hierarchical-link
    |        ...
]]></artwork></figure>

<t>The path requests that are intended to be used within the same tunnel
   should reference the same entry in the tunnel-attributes list. This
   allows:</t>

<t><list style="symbols">
  <t>avoiding repeating the same set of per-tunnel parameters on
multiple requested paths;</t>
  <t>the server to understand what attributes are intended to be
configured on a per-tunnel basis (e.g., the te-bandwidth
configured in the tunnel-attributes) and what attributes are
intended to be configured on a per-path basis(e.g., the te-
bandwidth configured in the path-request). This could be useful
especially when the server also creates a TE tunnel instance
within the operational datastore to report the computed paths, as
described in <xref target="temp-state"/>: in this case, the tunnel-name is also
used as the suggested name for that TE tunnel instance.  <vspace blankLines='1'/>
The YANG data model allows also including requests for paths intended
 to modify existing tunnels (e.g., adding a protection path for an
 existing un-protected tunnel). In this case, the per-tunnel
 attributes are already provided in an existing TE tunnel instance and
 do not need to be re-configured in the path computation request RPC.
 Therefore, these requests should reference an existing TE tunnel
 instance.  <vspace blankLines='1'/>
It is also possible to request computing paths without indicating in
 which tunnel they are intended to be used (e.g., in case of an
 unprotected tunnel). In this case, the per-tunnel attributes could be
 provided together with the per-path attributes in the path request,
 without using the tunnel-attributes list.  <vspace blankLines='1'/>
The choices below are defined to distinguish the cases above:</t>
  <t>whether the per-tunnel attributes are configured by reference
(providing a leafref), to:  <list style="symbols">
      <t>either a TE tunnel instance, if it exists;</t>
      <t>or to an entry of the tunnel-attributes list, if the TE tunnel
instance does not exist;</t>
    </list></t>
  <t>or by value, providing the set of tunnel attributes within the
path request:</t>
</list></t>

<figure><artwork type="ascii-art" name="tunnel-attributes.txt"><![CDATA[
    |  +-- (tunnel-attributes)?
    |  |  +--:(reference)
    |  |  |  +-- tunnel-reference
    |  |  |     +-- (tunnel-exist)
    |  |  |     |  +--:(tunnel-ref)
    |  |  |     |  |  +-- tunnel-ref                te:tunnel-ref
    |  |  |     |  +--:(tunnel-attributes-ref)
    |  |  |     |     +-- tunnel-attributes-ref     leafref
    |  |  |     +-- path-name?                      string
    |  |  |     +-- (path-role)
    |  |  |        ...
    |  |  +--:(value)
    |  |     +-- tunnel-name?                    string
    |  |     +-- path-name?                      string
    |  |     +-- (path-role)?
    |  |     |  ...
    |  |     ...
    |  |     +-- encoding?                       identityref
    |  |     +-- switching-type?                 identityref
    |  |     ...
]]></artwork></figure>

<section anchor="tunnel-attributes-specified-by-value"><name>Tunnel attributes specified by value</name>

<t>The (value) case provides the set of attributes that are configured
   only on per-tunnel basis (e.g., tunnel-name, source/destination TTP,
   encoding and switching-type).</t>

<t>In this case, it is assumed that the requested path will be the only
   path within a tunnel.</t>

<t>If the only path within a tunnel is the transit segment of a multi-domain end-to-end path, it can be of any type (primary, secondary, reverse-primary
   or reverse-secondary). The (path-role) choice is used to specify its role in the path request:</t>

<figure><artwork type="ascii-art" name="tunnel-by-value.txt"><![CDATA[
    |  |     +-- (path-role)?
    |  |     |  +--:(primary-path)
    |  |     |  +--:(secondary-path)
    |  |     |  |  +-- secondary-path!
    |  |     |  |     +-- primary-path-name?   string
    |  |     |  +--:(primary-reverse-path)
    |  |     |  |  +-- primary-reverse-path!
    |  |     |  |     +-- primary-path-name?   string
    |  |     |  +--:(secondary-reverse-path)
    |  |     |     +-- secondary-reverse-path!
    |  |     |        +-- primary-path-name?           string
    |  |     |        +-- primary-reverse-path-name?   string
]]></artwork></figure>

<t>In all the other cases, the only path within a tunnel is a primary path.</t>

<t>The secondary-path, the primary-reverse-path and the secondary-
   reverse-path are presence container used to indicate the role of the
   path: by default, the path is assumed to be a primary path.</t>

<t>They optionally can contain the name of the primary-path under which
   the requested path could be associated within the YANG tree structure
   defined in <xref target="I-D.ietf-teas-yang-te"/>, which could be useful when the server also
   creates a TE tunnel instance within the operational datastore to
   report the computed paths, as described in <xref target="temp-state"/>: in this
   case, the tunnel-name and the path names are also used as the
   suggested name for that TE tunnel and path instances.</t>

</section>
<section anchor="tunnel-attributes-specified-by-reference"><name>Tunnel attributes specified by reference</name>

<t>The (reference) case provides the information needed to associate
   multiple path requests that are intended to be used within the same
   tunnel.</t>

<t>In order to indicate the role of the path being requested within the
   intended tunnel (e.g., primary or secondary path), the (path-role)
   choice is defined:</t>

<figure><artwork type="ascii-art" name="tunnel-by-reference.txt"><![CDATA[
    |  |  |     +-- (path-role)
    |  |  |        +--:(primary-path)
    |  |  |        |  +-- primary-path!
    |  |  |        |     ...
    |  |  |        +--:(secondary-path)
    |  |  |        |  +-- secondary-path
    |  |  |        |     ...
    |  |  |        +--:(primary-reverse-path)
    |  |  |        |  +-- primary-reverse-path
    |  |  |        |     ...
    |  |  |        +--:(secondary-reverse-path)
    |  |  |           +-- secondary-reverse-path
    |  |  |              ...
]]></artwork></figure>

<t>The primary-path is a presence container used to indicate that the
   requested path is intended to be used as a primary path. It can also
   contain some attributes which are configured only on primary paths
   (e.g., the k-requested-paths).</t>

<t>The secondary-path container indicates that the requested path is
   intended to be used as a secondary path and it contains at least
   references to one or more primary paths which can use it as a
   candidate secondary path:</t>

<figure><artwork type="ascii-art" name="secondary-path.txt"><![CDATA[
    |  |  |        |  +-- secondary-path
    |  |  |        |     ...
    |  |  |        |     +-- primary-path-ref* []
    |  |  |        |        +-- (primary-path-exist)
    |  |  |        |           +--:(path-ref)
    |  |  |        |           |  +-- primary-path-ref    leafref
    |  |  |        |           +--:(path-request-ref)
    |  |  |        |              +-- path-request-ref    leafref
]]></artwork></figure>

<t>A requested secondary path can reference any requested primary paths,
   and, in case they are intended to be used within an existing TE
   tunnel, it could also reference any existing primary-paths.</t>

<t>The secondary-path container can also contain some attributes which
   are configured only on secondary paths (e.g., the protection-type).</t>

<t>The primary-reverse-path container indicates that the requested path
   is intended to be used as a primary reverse path and it contains only
   the reference to the primary path which is intended to use it as a
   reverse path:</t>

<figure><artwork type="ascii-art" name="primary-reverse-path.txt"><![CDATA[
    |  |  |        |  +-- primary-reverse-path
    |  |  |        |     +-- (primary-path-exist)
    |  |  |        |        +--:(path-ref)
    |  |  |        |        |  +-- primary-path-ref    leafref
    |  |  |        |        +--:(path-request-ref)
    |  |  |        |           +-- path-request-ref    leafref
]]></artwork></figure>

<t>A requested primary reverse path can reference either a requested
   primary path, or, in case it is intended to be used within an
   existing TE tunnel, an existing primary-path.</t>

<t>The secondary-reverse-path container indicates that the requested
   path is intended to be used as a secondary reverse path and it
   contains at least references to one or more primary paths, whose
   primary reverse path can use it as a candidate secondary reverse
   path:</t>

<figure><artwork type="ascii-art" name="secondary-reverse-path.txt"><![CDATA[
    |  |  |           +-- secondary-reverse-path
    |  |  |              ...
    |  |  |              +-- primary-reverse-path* []
    |  |  |                 +-- (primary-reverse-path-exist)
    |  |  |                    +--:(path-ref)
    |  |  |                    |  +-- primary-path-ref    leafref
    |  |  |                    +--:(path-request-ref)
    |  |  |                       +-- path-request-ref    leafref
]]></artwork></figure>

<t>A requested secondary reverse path can reference any requested
   primary paths, and, in case they are intended to be used within an
   existing TE tunnel, it could reference also existing primary-paths.</t>

<t>The secondary-reverse-path container can also contain some attributes
   which are configured only on secondary reverse paths (e.g., the
   protection-type).</t>

<t>In case the requested path is a transit segment of a multi-domain
   end-to-end path, the primary-path may not be needed to be
   setup/computed. However, the request for path computation of a
   secondary-path or a primary-reverse or of a secondary-reverse-path
   requires that the primary-path exists or it is requested within the
   same RPC request. In the latter case, the path request for the
   primary-path should have an empty 'route-object-include-exclude' list,
   as described in section 5.1.1 of <xref target="I-D.ietf-teas-yang-te"/>, to indicate to the server that
   path computation is not requested and no path properties will
   therefore be returned in the RPC response.</t>

</section>
</section>
<section anchor="multi-layer-path-computation"><name>Multi-Layer Path Computation</name>

<t>The models supports requesting multi-layer path computation following
   the same approach based on dependency tunnels, as defined in <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>The tunnel-attributes of a given client-layer path request can
   reference server-layer TE tunnels which can already exist in the YANG
   datastore or be specified in the tunnel-attributes list, within the
   same RPC request:</t>

<figure><artwork type="ascii-art" name="dependency-tunnels.txt"><![CDATA[
    |     +-- dependency-tunnels
    |     |  +-- dependency-tunnel* [name]
    |     |  |  +-- name              -> /te:te/tunnels/tunnel/name
    |     |  |  +-- encoding?         identityref
    |     |  |  +-- switching-type?   identityref
    |     |  +-- dependency-tunnel-attributes* [name]
    |     |     +-- name              leafref
    |     |     +-- encoding?         identityref
    |     |     +-- switching-type?   identityref
]]></artwork></figure>

<t>In a similar way as in <xref target="I-D.ietf-teas-yang-te"/>, the server-layer tunnel
   attributes should provide the information of what would be the
   dynamic link in the client layer topology supported by that tunnel,
   if instantiated:</t>

<figure><artwork type="ascii-art" name="hierarchical-link.txt"><![CDATA[
    |     +-- hierarchical-link
    |        +-- enable?                   boolean
    |        +-- local-te-node-id?         te-types:te-node-id
    |        +-- local-te-link-tp-id?      te-types:te-tp-id
    |        +-- remote-te-node-id?        te-types:te-node-id
    |        +-- te-topology-identifier
    |           +-- provider-id?   te-global-id
    |           +-- client-id?     te-global-id
    |           +-- topology-id?   te-topology-id
]]></artwork></figure>

<t>It is worth noting that since path computation RPC is stateless, the
   dynamic hierarchical links configured for the server-layer tunnel
   attributes cannot be used for path computation of any client-layer
   path unless explicitly referenced in the dependency-tunnel-attributes
   list within the same RPC request.</t>

</section>
</section>
<section anchor="yang-data-model-for-te-path-computation"><name>YANG data model for TE path computation</name>

<section anchor="pc-tree"><name>Tree diagram</name>

<t><xref target="fig-pc-tree"/> below shows the tree diagram of the YANG data model defined
   in module ietf-te-path-computation.yang, defined in <xref target="pc-yang"/>.</t>

<figure title="TE path computation tree diagram" anchor="fig-pc-tree"><artwork type="ascii-art" name="ietf-te-path-computation.tree"><![CDATA[
module: ietf-te-path-computation

  augment /te:tunnels-path-compute/te:input/te:path-compute-info:
    +-- path-request* [request-id]
    |  +-- request-id                            uint32
    |  +-- compute-priority?                     uint8
    |  |       {compute-priority}?
    |  +-- (tunnel-attributes)?
    |  |  +--:(reference)
    |  |  |  +-- tunnel-reference
    |  |  |     +-- (tunnel-exist)
    |  |  |     |  +--:(tunnel-ref)
    |  |  |     |  |  +-- tunnel-ref                te:tunnel-ref
    |  |  |     |  +--:(tunnel-attributes-ref)
    |  |  |     |     +-- tunnel-attributes-ref     leafref
    |  |  |     +-- path-name?                      string
    |  |  |     +-- (path-role)
    |  |  |        +--:(primary-path)
    |  |  |        |  +-- primary-path!
    |  |  |        |     +-- preference?          uint8
    |  |  |        |     +-- co-routed?           boolean
    |  |  |        |     +-- k-requested-paths?   uint8
    |  |  |        +--:(secondary-path)
    |  |  |        |  +-- secondary-path
    |  |  |        |     +-- preference?           uint8
    |  |  |        |     +-- protection-type?      identityref
    |  |  |        |     +-- restoration-type?     identityref
    |  |  |        |     +-- restoration-scheme?   identityref
    |  |  |        |     +-- primary-path-ref* []
    |  |  |        |        +-- (primary-path-exist)
    |  |  |        |           +--:(path-ref)
    |  |  |        |           |  +-- primary-path-ref    leafref
    |  |  |        |           +--:(path-request-ref)
    |  |  |        |              +-- path-request-ref    leafref
    |  |  |        +--:(primary-reverse-path)
    |  |  |        |  +-- primary-reverse-path
    |  |  |        |     +-- (primary-path-exist)
    |  |  |        |        +--:(path-ref)
    |  |  |        |        |  +-- primary-path-ref    leafref
    |  |  |        |        +--:(path-request-ref)
    |  |  |        |           +-- path-request-ref    leafref
    |  |  |        +--:(secondary-reverse-path)
    |  |  |           +-- secondary-reverse-path
    |  |  |              +-- preference?             uint8
    |  |  |              +-- protection-type?        identityref
    |  |  |              +-- restoration-type?       identityref
    |  |  |              +-- restoration-scheme?     identityref
    |  |  |              +-- primary-reverse-path* []
    |  |  |                 +-- (primary-reverse-path-exist)
    |  |  |                    +--:(path-ref)
    |  |  |                    |  +-- primary-path-ref    leafref
    |  |  |                    +--:(path-request-ref)
    |  |  |                       +-- path-request-ref    leafref
    |  |  +--:(value)
    |  |     +-- tunnel-name?                    string
    |  |     +-- path-name?                      string
    |  |     +-- (path-role)?
    |  |     |  +--:(primary-path)
    |  |     |  +--:(secondary-path)
    |  |     |  |  +-- secondary-path!
    |  |     |  |     +-- primary-path-name?   string
    |  |     |  +--:(primary-reverse-path)
    |  |     |  |  +-- primary-reverse-path!
    |  |     |  |     +-- primary-path-name?   string
    |  |     |  +--:(secondary-reverse-path)
    |  |     |     +-- secondary-reverse-path!
    |  |     |        +-- primary-path-name?           string
    |  |     |        +-- primary-reverse-path-name?   string
    |  |     +-- k-requested-paths?              uint8
    |  |     +-- encoding?                       identityref
    |  |     +-- switching-type?                 identityref
    |  |     +-- source
    |  |     |  +-- node-id?        nw:node-id
    |  |     |  +-- te-node-id?     te-types:te-node-id
    |  |     |  +-- tunnel-tp-id?   binary
    |  |     +-- destination
    |  |     |  +-- node-id?        nw:node-id
    |  |     |  +-- te-node-id?     te-types:te-node-id
    |  |     |  +-- tunnel-tp-id?   binary
    |  |     +-- bidirectional?                  boolean
    |  |     +-- te-topology-identifier
    |  |        +-- provider-id?   te-global-id
    |  |        +-- client-id?     te-global-id
    |  |        +-- topology-id?   te-topology-id
    |  +-- association-objects
    |  |  +-- association-object* [association-key]
    |  |  |  +-- association-key    string
    |  |  |  +-- type?              identityref
    |  |  |  +-- id?                uint16
    |  |  |  +-- source
    |  |  |     +-- id?     te-gen-node-id
    |  |  |     +-- type?   enumeration
    |  |  +-- association-object-extended* [association-key]
    |  |     +-- association-key    string
    |  |     +-- type?              identityref
    |  |     +-- id?                uint16
    |  |     +-- source
    |  |     |  +-- id?     te-gen-node-id
    |  |     |  +-- type?   enumeration
    |  |     +-- global-source?     uint32
    |  |     +-- extended-id?       yang:hex-string
    |  +-- optimizations
    |  |  +-- (algorithm)?
    |  |     +--:(metric) {path-optimization-metric}?
    |  |     |  +-- optimization-metric* [metric-type]
    |  |     |  |  +-- metric-type                       identityref
    |  |     |  |  +-- weight?                           uint8
    |  |     |  |  +-- explicit-route-exclude-objects
    |  |     |  |  |  +-- route-object-exclude-object* [index]
    |  |     |  |  |     +-- index                        uint32
    |  |     |  |  |     +-- (type)?
    |  |     |  |  |        +--:(numbered-node-hop)
    |  |     |  |  |        |  +-- numbered-node-hop
    |  |     |  |  |        |     +-- node-id-uri?   nw:node-id
    |  |     |  |  |        |     +-- node-id?       te-node-id
    |  |     |  |  |        |     +-- hop-type?      te-hop-type
    |  |     |  |  |        +--:(numbered-link-hop)
    |  |     |  |  |        |  +-- numbered-link-hop
    |  |     |  |  |        |     +-- link-tp-id    te-tp-id
    |  |     |  |  |        |     +-- hop-type?     te-hop-type
    |  |     |  |  |        |     +-- direction?    te-link-direction
    |  |     |  |  |        +--:(unnumbered-link-hop)
    |  |     |  |  |        |  +-- unnumbered-link-hop
    |  |     |  |  |        |     +-- link-tp-id-uri?   nt:tp-id
    |  |     |  |  |        |     +-- link-tp-id?       te-tp-id
    |  |     |  |  |        |     +-- node-id-uri?      nw:node-id
    |  |     |  |  |        |     +-- node-id?          te-node-id
    |  |     |  |  |        |     +-- hop-type?         te-hop-type
    |  |     |  |  |        |     +-- direction?
    |  |     |  |  |        |             te-link-direction
    |  |     |  |  |        +--:(as-number)
    |  |     |  |  |        |  +-- as-number-hop
    |  |     |  |  |        |     +-- as-number    inet:as-number
    |  |     |  |  |        |     +-- hop-type?    te-hop-type
    |  |     |  |  |        +--:(label)
    |  |     |  |  |        |  +-- label-hop
    |  |     |  |  |        |     +-- te-label
    |  |     |  |  |        |        +-- (technology)?
    |  |     |  |  |        |        |  +--:(generic)
    |  |     |  |  |        |        |     +-- generic?
    |  |     |  |  |        |        |             rt-types:generalized-label
    |  |     |  |  |        |        +-- direction?
    |  |     |  |  |        |                te-label-direction
    |  |     |  |  |        +--:(srlg)
    |  |     |  |  |           +-- srlg
    |  |     |  |  |              +-- srlg?   uint32
    |  |     |  |  +-- explicit-route-include-objects
    |  |     |  |     +-- route-object-include-object* [index]
    |  |     |  |        +-- index                        uint32
    |  |     |  |        +-- (type)?
    |  |     |  |           +--:(numbered-node-hop)
    |  |     |  |           |  +-- numbered-node-hop
    |  |     |  |           |     +-- node-id-uri?   nw:node-id
    |  |     |  |           |     +-- node-id?       te-node-id
    |  |     |  |           |     +-- hop-type?      te-hop-type
    |  |     |  |           +--:(numbered-link-hop)
    |  |     |  |           |  +-- numbered-link-hop
    |  |     |  |           |     +-- link-tp-id    te-tp-id
    |  |     |  |           |     +-- hop-type?     te-hop-type
    |  |     |  |           |     +-- direction?    te-link-direction
    |  |     |  |           +--:(unnumbered-link-hop)
    |  |     |  |           |  +-- unnumbered-link-hop
    |  |     |  |           |     +-- link-tp-id-uri?   nt:tp-id
    |  |     |  |           |     +-- link-tp-id?       te-tp-id
    |  |     |  |           |     +-- node-id-uri?      nw:node-id
    |  |     |  |           |     +-- node-id?          te-node-id
    |  |     |  |           |     +-- hop-type?         te-hop-type
    |  |     |  |           |     +-- direction?
    |  |     |  |           |             te-link-direction
    |  |     |  |           +--:(as-number)
    |  |     |  |           |  +-- as-number-hop
    |  |     |  |           |     +-- as-number    inet:as-number
    |  |     |  |           |     +-- hop-type?    te-hop-type
    |  |     |  |           +--:(label)
    |  |     |  |              +-- label-hop
    |  |     |  |                 +-- te-label
    |  |     |  |                    +-- (technology)?
    |  |     |  |                    |  +--:(generic)
    |  |     |  |                    |     +-- generic?
    |  |     |  |                    |             rt-types:generalized-label
    |  |     |  |                    +-- direction?
    |  |     |  |                            te-label-direction
    |  |     |  +-- tiebreakers
    |  |     |     +-- tiebreaker* [tiebreaker-type]
    |  |     |        +-- tiebreaker-type    identityref
    |  |     +--:(objective-function)
    |  |              {path-optimization-objective-function}?
    |  |        +-- objective-function
    |  |           +-- objective-function-type?   identityref
    |  +-- named-path-constraint?                leafref
    |  |       {te-types:named-path-constraints}?
    |  +-- te-bandwidth
    |  |  +-- (technology)?
    |  |     +--:(generic)
    |  |        +-- generic?   te-bandwidth
    |  +-- link-protection?                      identityref
    |  +-- setup-priority?                       uint8
    |  +-- hold-priority?                        uint8
    |  +-- signaling-type?                       identityref
    |  +-- path-metric-bounds
    |  |  +-- path-metric-bound* [metric-type]
    |  |     +-- metric-type    identityref
    |  |     +-- upper-bound?   uint64
    |  +-- path-affinities-values
    |  |  +-- path-affinities-value* [usage]
    |  |     +-- usage    identityref
    |  |     +-- value?   admin-groups
    |  +-- path-affinity-names
    |  |  +-- path-affinity-name* [usage]
    |  |     +-- usage            identityref
    |  |     +-- affinity-name* [name]
    |  |        +-- name    string
    |  +-- path-srlgs-lists
    |  |  +-- path-srlgs-list* [usage]
    |  |     +-- usage     identityref
    |  |     +-- values*   srlg
    |  +-- path-srlgs-names
    |  |  +-- path-srlgs-name* [usage]
    |  |     +-- usage    identityref
    |  |     +-- names*   string
    |  +-- disjointness?                         te-path-disjointness
    |  +-- explicit-route-objects-always
    |  |  +-- route-object-exclude-always* [index]
    |  |  |  +-- index                        uint32
    |  |  |  +-- (type)?
    |  |  |     +--:(numbered-node-hop)
    |  |  |     |  +-- numbered-node-hop
    |  |  |     |     +-- node-id-uri?   nw:node-id
    |  |  |     |     +-- node-id?       te-node-id
    |  |  |     |     +-- hop-type?      te-hop-type
    |  |  |     +--:(numbered-link-hop)
    |  |  |     |  +-- numbered-link-hop
    |  |  |     |     +-- link-tp-id    te-tp-id
    |  |  |     |     +-- hop-type?     te-hop-type
    |  |  |     |     +-- direction?    te-link-direction
    |  |  |     +--:(unnumbered-link-hop)
    |  |  |     |  +-- unnumbered-link-hop
    |  |  |     |     +-- link-tp-id-uri?   nt:tp-id
    |  |  |     |     +-- link-tp-id?       te-tp-id
    |  |  |     |     +-- node-id-uri?      nw:node-id
    |  |  |     |     +-- node-id?          te-node-id
    |  |  |     |     +-- hop-type?         te-hop-type
    |  |  |     |     +-- direction?        te-link-direction
    |  |  |     +--:(as-number)
    |  |  |     |  +-- as-number-hop
    |  |  |     |     +-- as-number    inet:as-number
    |  |  |     |     +-- hop-type?    te-hop-type
    |  |  |     +--:(label)
    |  |  |        +-- label-hop
    |  |  |           +-- te-label
    |  |  |              +-- (technology)?
    |  |  |              |  +--:(generic)
    |  |  |              |     +-- generic?
    |  |  |              |             rt-types:generalized-label
    |  |  |              +-- direction?       te-label-direction
    |  |  +-- route-object-include-exclude* [index]
    |  |     +-- explicit-route-usage?        identityref
    |  |     +-- index                        uint32
    |  |     +-- (type)?
    |  |        +--:(numbered-node-hop)
    |  |        |  +-- numbered-node-hop
    |  |        |     +-- node-id-uri?   nw:node-id
    |  |        |     +-- node-id?       te-node-id
    |  |        |     +-- hop-type?      te-hop-type
    |  |        +--:(numbered-link-hop)
    |  |        |  +-- numbered-link-hop
    |  |        |     +-- link-tp-id    te-tp-id
    |  |        |     +-- hop-type?     te-hop-type
    |  |        |     +-- direction?    te-link-direction
    |  |        +--:(unnumbered-link-hop)
    |  |        |  +-- unnumbered-link-hop
    |  |        |     +-- link-tp-id-uri?   nt:tp-id
    |  |        |     +-- link-tp-id?       te-tp-id
    |  |        |     +-- node-id-uri?      nw:node-id
    |  |        |     +-- node-id?          te-node-id
    |  |        |     +-- hop-type?         te-hop-type
    |  |        |     +-- direction?        te-link-direction
    |  |        +--:(as-number)
    |  |        |  +-- as-number-hop
    |  |        |     +-- as-number    inet:as-number
    |  |        |     +-- hop-type?    te-hop-type
    |  |        +--:(label)
    |  |        |  +-- label-hop
    |  |        |     +-- te-label
    |  |        |        +-- (technology)?
    |  |        |        |  +--:(generic)
    |  |        |        |     +-- generic?
    |  |        |        |             rt-types:generalized-label
    |  |        |        +-- direction?       te-label-direction
    |  |        +--:(srlg)
    |  |           +-- srlg
    |  |              +-- srlg?   uint32
    |  +-- path-in-segment!
    |  |  +-- label-restrictions
    |  |     +-- label-restriction* [index]
    |  |        +-- restriction?    enumeration
    |  |        +-- index           uint32
    |  |        +-- label-start
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-end
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-step
    |  |        |  +-- (technology)?
    |  |        |     +--:(generic)
    |  |        |        +-- generic?   int32
    |  |        +-- range-bitmap?   yang:hex-string
    |  +-- path-out-segment!
    |  |  +-- label-restrictions
    |  |     +-- label-restriction* [index]
    |  |        +-- restriction?    enumeration
    |  |        +-- index           uint32
    |  |        +-- label-start
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-end
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-step
    |  |        |  +-- (technology)?
    |  |        |     +--:(generic)
    |  |        |        +-- generic?   int32
    |  |        +-- range-bitmap?   yang:hex-string
    |  +-- requested-metrics* [metric-type]
    |  |  +-- metric-type    identityref
    |  +-- return-srlgs?                         boolean
    |  +-- return-affinities?                    boolean
    |  +-- requested-state!
    |     +-- timer?            uint16
    |     +-- transaction-id?   string
    +-- tunnel-attributes* [tunnel-name]
    |  +-- tunnel-name               string
    |  +-- encoding?                 identityref
    |  +-- switching-type?           identityref
    |  +-- source
    |  |  +-- node-id?        nw:node-id
    |  |  +-- te-node-id?     te-types:te-node-id
    |  |  +-- tunnel-tp-id?   binary
    |  +-- destination
    |  |  +-- node-id?        nw:node-id
    |  |  +-- te-node-id?     te-types:te-node-id
    |  |  +-- tunnel-tp-id?   binary
    |  +-- bidirectional?            boolean
    |  +-- association-objects
    |  |  +-- association-object* [association-key]
    |  |  |  +-- association-key    string
    |  |  |  +-- type?              identityref
    |  |  |  +-- id?                uint16
    |  |  |  +-- source
    |  |  |     +-- id?     te-gen-node-id
    |  |  |     +-- type?   enumeration
    |  |  +-- association-object-extended* [association-key]
    |  |     +-- association-key    string
    |  |     +-- type?              identityref
    |  |     +-- id?                uint16
    |  |     +-- source
    |  |     |  +-- id?     te-gen-node-id
    |  |     |  +-- type?   enumeration
    |  |     +-- global-source?     uint32
    |  |     +-- extended-id?       yang:hex-string
    |  +-- protection-type?          identityref
    |  +-- restoration-type?         identityref
    |  +-- restoration-scheme?       identityref
    |  +-- network-id?               nw:network-id
    |  +-- te-topology-identifier
    |  |  +-- provider-id?   te-global-id
    |  |  +-- client-id?     te-global-id
    |  |  +-- topology-id?   te-topology-id
    |  +-- te-bandwidth
    |  |  +-- (technology)?
    |  |     +--:(generic)
    |  |        +-- generic?   te-bandwidth
    |  +-- link-protection?          identityref
    |  +-- setup-priority?           uint8
    |  +-- hold-priority?            uint8
    |  +-- signaling-type?           identityref
    |  +-- hierarchy
    |     +-- dependency-tunnels
    |     |  +-- dependency-tunnel* [name]
    |     |  |  +-- name              -> /te:te/tunnels/tunnel/name
    |     |  |  +-- encoding?         identityref
    |     |  |  +-- switching-type?   identityref
    |     |  +-- dependency-tunnel-attributes* [name]
    |     |     +-- name              leafref
    |     |     +-- encoding?         identityref
    |     |     +-- switching-type?   identityref
    |     +-- hierarchical-link
    |        +-- enable?                   boolean
    |        +-- local-node-id?            nw:node-id
    |        +-- local-te-node-id?         te-types:te-node-id
    |        +-- local-link-tp-id?         nt:tp-id
    |        +-- local-te-link-tp-id?      te-types:te-tp-id
    |        +-- remote-link-tp-id?        nt:tp-id
    |        +-- remote-te-node-id?        te-types:te-node-id
    |        +-- network-id?               nw:network-id
    |        +-- te-topology-identifier
    |           +-- provider-id?   te-global-id
    |           +-- client-id?     te-global-id
    |           +-- topology-id?   te-topology-id
    +-- synchronization* [] {svec}?
       +-- svec
       |  +-- relaxable?      boolean
       |  +-- disjointness?   te-path-disjointness
       |  +-- request-id*     uint32
       +-- svec-constraints
       |  +-- path-metric-bound* [metric-type]
       |     +-- metric-type    identityref
       |     +-- upper-bound?   uint64
       +-- path-srlgs-lists
       |  +-- path-srlgs-list* [usage]
       |     +-- usage     identityref
       |     +-- values*   srlg
       +-- path-srlgs-names
       |  +-- path-srlgs-name* [usage]
       |     +-- usage    identityref
       |     +-- names*   string
       +-- exclude-objects
       |  +-- excludes* []
       |     +-- (type)?
       |        +--:(numbered-node-hop)
       |        |  +-- numbered-node-hop
       |        |     +-- node-id-uri?   nw:node-id
       |        |     +-- node-id?       te-node-id
       |        |     +-- hop-type?      te-hop-type
       |        +--:(numbered-link-hop)
       |        |  +-- numbered-link-hop
       |        |     +-- link-tp-id    te-tp-id
       |        |     +-- hop-type?     te-hop-type
       |        |     +-- direction?    te-link-direction
       |        +--:(unnumbered-link-hop)
       |        |  +-- unnumbered-link-hop
       |        |     +-- link-tp-id-uri?   nt:tp-id
       |        |     +-- link-tp-id?       te-tp-id
       |        |     +-- node-id-uri?      nw:node-id
       |        |     +-- node-id?          te-node-id
       |        |     +-- hop-type?         te-hop-type
       |        |     +-- direction?        te-link-direction
       |        +--:(as-number)
       |        |  +-- as-number-hop
       |        |     +-- as-number    inet:as-number
       |        |     +-- hop-type?    te-hop-type
       |        +--:(label)
       |           +-- label-hop
       |              +-- te-label
       |                 +-- (technology)?
       |                 |  +--:(generic)
       |                 |     +-- generic?
       |                 |             rt-types:generalized-label
       |                 +-- direction?       te-label-direction
       +-- optimizations
          +-- (algorithm)?
             +--:(metric) {te-types:path-optimization-metric}?
             |  +-- optimization-metric* [metric-type]
             |     +-- metric-type    identityref
             |     +-- weight?        uint8
             +--:(objective-function)
                      {te-types:path-optimization-objective-function}?
                +-- objective-function
                   +-- objective-function-type?   identityref
  augment /te:tunnels-path-compute/te:output/te:path-compute-result:
    +--ro response* [response-id]
       +--ro response-id                         uint32
       +--ro computed-paths-properties
       |  +--ro computed-path-properties* [k-index]
       |     +--ro k-index            uint8
       |     +--ro path-properties
       |        +--ro path-metric* [metric-type]
       |        |  +--ro metric-type           identityref
       |        |  +--ro accumulative-value?   uint64
       |        +--ro path-affinities-values
       |        |  +--ro path-affinities-value* [usage]
       |        |     +--ro usage    identityref
       |        |     +--ro value?   admin-groups
       |        +--ro path-affinity-names
       |        |  +--ro path-affinity-name* [usage]
       |        |     +--ro usage            identityref
       |        |     +--ro affinity-name* [name]
       |        |        +--ro name    string
       |        +--ro path-srlgs-lists
       |        |  +--ro path-srlgs-list* [usage]
       |        |     +--ro usage     identityref
       |        |     +--ro values*   srlg
       |        +--ro path-srlgs-names
       |        |  +--ro path-srlgs-name* [usage]
       |        |     +--ro usage    identityref
       |        |     +--ro names*   string
       |        +--ro path-route-objects
       |        |  +--ro path-route-object* [index]
       |        |     +--ro index                        uint32
       |        |     +--ro (type)?
       |        |        +--:(numbered-node-hop)
       |        |        |  +--ro numbered-node-hop
       |        |        |     +--ro node-id-uri?   nw:node-id
       |        |        |     +--ro node-id?       te-node-id
       |        |        |     +--ro hop-type?      te-hop-type
       |        |        +--:(numbered-link-hop)
       |        |        |  +--ro numbered-link-hop
       |        |        |     +--ro link-tp-id    te-tp-id
       |        |        |     +--ro hop-type?     te-hop-type
       |        |        |     +--ro direction?    te-link-direction
       |        |        +--:(unnumbered-link-hop)
       |        |        |  +--ro unnumbered-link-hop
       |        |        |     +--ro link-tp-id-uri?   nt:tp-id
       |        |        |     +--ro link-tp-id?       te-tp-id
       |        |        |     +--ro node-id-uri?      nw:node-id
       |        |        |     +--ro node-id?          te-node-id
       |        |        |     +--ro hop-type?         te-hop-type
       |        |        |     +--ro direction?
       |        |        |             te-link-direction
       |        |        +--:(as-number)
       |        |        |  +--ro as-number-hop
       |        |        |     +--ro as-number    inet:as-number
       |        |        |     +--ro hop-type?    te-hop-type
       |        |        +--:(label)
       |        |           +--ro label-hop
       |        |              +--ro te-label
       |        |                 +--ro (technology)?
       |        |                 |  +--:(generic)
       |        |                 |     +--ro generic?
       |        |                 |             rt-types:generalized-label
       |        |                 +--ro direction?
       |        |                         te-label-direction
       |        +--ro te-bandwidth
       |        |  +--ro (technology)?
       |        |     +--:(generic)
       |        |        +--ro generic?   te-bandwidth
       |        +--ro disjointness-type?
       |                te-types:te-path-disjointness
       +--ro computed-path-error-infos
       |  +--ro computed-path-error-info* []
       |     +--ro error-description?   string
       |     +--ro error-timestamp?     yang:date-and-time
       |     +--ro error-reason?        identityref
       +--ro tunnel-ref?                         te:tunnel-ref
       +--ro (path-role)?
          +--:(primary)
          |  +--ro primary-path-ref?             leafref
          +--:(primary-reverse)
          |  +--ro primary-reverse-path-ref?     leafref
          +--:(secondary)
          |  +--ro secondary-path-ref?           leafref
          +--:(secondary-reverse)
             +--ro secondary-reverse-path-ref?   leafref
  augment /te:tunnels-actions/te:input/te:tunnel-info/te:filter-type:
    +--:(path-compute-transactions)
       +-- path-compute-transaction-id*   string
  augment /te:tunnels-actions/te:output:
    +--ro path-computed-delete-result
       +--ro path-compute-transaction-id*   string
]]></artwork></figure>

</section>
<section anchor="pc-yang"><name>YANG module</name>

<figure title="TE path computation YANG module" anchor="fig-pc-yang"><sourcecode type="yang" markers="true" name="ietf-te-path-computation@2022-10-21.yang"><![CDATA[
module ietf-te-path-computation {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-te-path-computation";
  prefix te-pc;

  import ietf-te {
    prefix te;
    reference
      "RFCYYYY: A YANG Data Model for Traffic Engineering Tunnels
       and Interfaces";
  }

  /* Note: The RFC Editor will replace YYYY with the number assigned
     to the RFC once draft-ietf-teas-yang-te becomes an RFC.*/

  import ietf-te-types {
    prefix te-types;
    reference
      "RFCZZZZ: Updated Common YANG Data Types for Traffic 
      Engineering";
  }

  /* Note: The RFC Editor will replace ZZZZ with the number assigned
     to the RFC once draft-ietf-teas-rfc8776-update becomes an RFC.*/

  organization
    "Traffic Engineering Architecture and Signaling (TEAS)
     Working Group";
  contact
    "WG Web: <https://datatracker.ietf.org/wg/teas/>
     WG List:  <mailto:teas@ietf.org>

     Editor:   Italo Busi
               <mailto:italo.busi@huawei.com>

     Editor:   Sergio Belotti
               <mailto:sergio.belotti@nokia.com>

     Editor:   Victor Lopez
               <mailto:victor.lopez@nokia.com>

     Editor:   Oscar Gonzalez de Dios
               <mailto:oscar.gonzalezdedios@telefonica.com>

     Editor:   Anurag Sharma
               <mailto:ansha@google.com>

     Editor:   Yan Shi
               <mailto:shiyan49@chinaunicom.cn>

     Editor:   Ricard Vilalta
               <mailto:ricard.vilalta@cttc.es>

     Editor:   Karthik Sethuraman
               <mailto:karthik.sethuraman@necam.com>

     Editor:   Michael Scharf
               <mailto:michael.scharf@gmail.com>

     Editor:   Daniele Ceccarelli
               <mailto:daniele.ceccarelli@ericsson.com>
     
    ";
  description
    "This module defines a YANG data model for requesting Traffic
     Engineering (TE) path computation. The YANG data model defined
     in this document augments the RPCs defined in the generic TE
     module (ietf-te).

     The model fully conforms to the
     Network Management Datastore Architecture (NMDA).

     Copyright (c) 2023 IETF Trust and the persons
     identified as authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with
     or without modification, is permitted pursuant to, and
     subject to the license terms contained in, the Revised
     BSD License set forth in Section 4.c of the IETF Trust's
     Legal Provisions Relating to IETF Documents
     (https://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC XXXX; see
     the RFC itself for full legal notices.

     The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL', 'SHALL
     NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'NOT RECOMMENDED',
     'MAY', and 'OPTIONAL' in this document are to be interpreted as
     described in BCP 14 (RFC 2119) (RFC 8174) when, and only when,
     they appear in all capitals, as shown here.";

  // RFC Ed.: replace XXXX with actual RFC number and remove
  // this note
  // replace the revision date with the module publication date
  // the format is (year-month-day)

  revision 2023-06-27 {
    description
      "Initial revision";
    reference
      "RFC XXXX: A YANG Data Model for requesting path computation";
  }

  // RFC Ed.: replace XXXX with actual RFC number and remove
  // this note

  /*
   * Features
   */
  
  feature svec {
    description
      "This feature indicates that the server supports synchronized 
      path computation requests.";
    reference
      "Section 7.13 of RFC5440: Path Computation Element (PCE) 
      Communication Protocol (PCEP).";
  }

  feature compute-priority {
    description
      "This feature indicates that the server supports path 
      computation request's priority";
    reference
      "Section 7.4.1 of RFC5440: Path Computation Element (PCE) 
      Communication Protocol (PCEP).";
  }

  /*
   * Identities
   */

  identity tunnel-action-path-compute-delete {
    base te-types:tunnel-action-type;
    description
      "Action type to delete the transient states
      of computed paths, as described in section 3.3.1 of
      RFC XXXX.";
    reference
      "RFC XXXX: A YANG Data Model for requesting path computation";
  }

  /*
   * Groupings
   */

  grouping protection-restoration-properties {
    description
      "This grouping defines the restoration and protection types
       for a path in the path computation request.";
    leaf protection-type {
      type identityref {
        base te-types:lsp-protection-type;
      }
      default "te-types:lsp-protection-unprotected";
      description
        "LSP protection type.";
    }
    leaf restoration-type {
      type identityref {
        base te-types:lsp-restoration-type;
      }
      default "te-types:lsp-restoration-restore-any";
      description
        "LSP restoration type.";
    }
    leaf restoration-scheme {
      type identityref {
        base te-types:restoration-scheme-type;
      }
      default "te-types:restoration-scheme-preconfigured";
      description
        "LSP restoration scheme.";
    }
  } // grouping protection-restoration-properties

  grouping requested-info {
    description
      "This grouping defines the information which is requested
       (e.g., metrics), in the path computation request, to be
       returned in the path computation response.";
    list requested-metrics {
      key "metric-type";
      description
        "The list of the requested metrics.

         The metrics listed here MUST be returned in the response.
         Returning other metrics in the response is OPTIONAL.";
      leaf metric-type {
        type identityref {
          base te-types:path-metric-type;
        }
        description
          "The metric requested to be returned in the response";
      }
    }
    leaf return-srlgs {
      type boolean;
      default "false";
      description
        "If true, path Shared Risk Link Groups (SRLGs) MUST be
         returned in the response.
         If false, returning path SRLGs in the response OPTIONAL.";
    }
    leaf return-affinities {
      type boolean;
      default "false";
      description
        "If true, path affinities MUST be returned in the response.
         If false, returning path affinities in the response is
         OPTIONAL.";
    }
  } // grouping requested-info

  grouping requested-state {
    description
      "Configuration for the transient state used
       to report the computed path";
    container requested-state {
      presence
        "Request temporary reporting of the computed path state";
      description
        "Configures attributes for the temporary reporting of the
         computed path state (e.g., expiration timer).";
      leaf timer {
        type uint16;
        units "minutes";
        default "10";
        description
          "The timeout after which the transient state reporting
          the computed path SHOULD be removed.";
      }
      leaf transaction-id {
        type string;
        description
          "The transaction-id associated with this path computation
          to be used for fast deletion of the transient states
          associated with multiple path computations.

          This transaction-id can be used to explicitly delete all
          the transient states of all the computed paths associated
          with the same transaction-id.

          When one path associated with a transaction-id is setup,
          the transient states of all the other computed paths
          with the same transaction-id are automatically removed.

          If not specified, the transient state is removed only
          when the timer expires (when the timer is specified)
          or not created at all (stateless path computation,
          when the timer is not specified).";
      }
    }
  } // grouping requested-state

  grouping reported-state {
    description
      "This grouping defines the information, returned in the path
       computation response, reporting the transient state related
       to the computed path";
    leaf tunnel-ref {
      type te:tunnel-ref;
      description
        "
         Reference to the tunnel that reports the transient state
         of the computed path.

         If no transient state is created, this attribute is
         omitted.
        ";
    }
    choice path-role {
      description
        "The transient state of the computed path can be reported
         as a primary, primary-reverse, secondary or
         a secondary-reverse path of a te-tunnel";
      case primary {
        leaf primary-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:primary-paths/te:primary-path/"
               + "te:name";
          }
          must '../tunnel-ref' {
            description
              "The primary-path name can only be reported
               if the tunnel name is also reported.";
          }
          description
            "
             Reference to the primary-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case primary
      case primary-reverse {
        leaf primary-reverse-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:primary-paths/te:primary-path/"
               + "te:name";
          }
          must '../tunnel-ref' {
            description
              "The primary-reverse-path name can only be reported
               if the tunnel name is also reported.";
          }
          description
            "
             Reference to the primary-reverse-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case primary-reverse
      case secondary {
        leaf secondary-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:secondary-paths/te:secondary-path/"
               + "te:name";
          }
          must '../tunnel-ref' {
            description
              "The secondary-path name can only be reported
               if the tunnel name is also reported.";
          }
          description
            "
             Reference to the secondary-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case secondary
      case secondary-reverse {
        leaf secondary-reverse-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:secondary-reverse-paths/"
               + "te:secondary-reverse-path/te:name";
          }
          must '../tunnel-ref' {
            description
              "The secondary-reverse-path name can only be reported
               if the tunnel name is also reported.";
          }
          description
            "
             Reference to the secondary-reverse-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case secondary
    } // choice path
  } // grouping reported-state

  grouping synchronization-constraints {
    description
      "Global constraints applicable to synchronized path
       computation requests.";
    container svec-constraints {
      description
        "global svec constraints";
      list path-metric-bound {
        key "metric-type";
        description
          "list of bound metrics";
        leaf metric-type {
          type identityref {
            base te-types:svec-metric-type;
          }
          description
            "SVEC metric type.";
          reference
            "RFC5541: Encoding of Objective Functions in the Path
            Computation Element Communication Protocol (PCEP).";
        }
        leaf upper-bound {
          type uint64;
          description
            "Upper bound on SVEC metric";
        }
      }
    }
    uses te-types:generic-path-srlgs;
    container exclude-objects {
      description
        "Resources to be excluded";
      list excludes {
        description
          "List of Explicit Route Objects to always exclude
           from synchronized path computation";
        uses te-types:explicit-route-hop;
      }
    }
  } // grouping synchronization-constraints

  grouping synchronization-optimization {
    description
      "Optimizations applicable to synchronized path
       computation requests.";
    container optimizations {
      description
        "The objective function container that includes attributes
         to impose when computing a synchronized set of paths";
      choice algorithm {
        description
          "Optimizations algorithm.";
        case metric {
          if-feature "te-types:path-optimization-metric";
          list optimization-metric {
            key "metric-type";
            description
              "svec path metric type";
            leaf metric-type {
              type identityref {
                base te-types:svec-metric-type;
              }
              description
                "TE path metric type usable for computing a set of
                synchronized requests";
            }
            leaf weight {
              type uint8;
              description
                "Metric normalization weight";
            }
          }
        }
        case objective-function {
          if-feature
            "te-types:path-optimization-objective-function";
          container objective-function {
            description
              "The objective function container that includes
               attributes to impose when computing a TE path";
            leaf objective-function-type {
              type identityref {
                base te-types:svec-objective-function-type;
              }
              description
                "Objective function entry";
            }
          }
        }
      }
    }
  } // grouping synchronization-optimization

  grouping synchronization-info {
    description
      "Information for synchronized path computation requests.";
    list synchronization {
      description
        "List of Synchronization VECtors.";
      container svec {
        description
          "Synchronization VECtor";
        leaf relaxable {
          type boolean;
          default "true";
          description
            "If this leaf is true, taking into account this svec is
             OPTIONAL and the path computation process is
             free to ignore svec content.
             Otherwise, it MUST take into account this svec.";
        }
        uses te-types:generic-path-disjointness;
        leaf-list request-id {
          type uint32;
          description
            "This list reports the set of path computation
             requests that are requested to be synchronized.";
        }
      }
      uses synchronization-constraints;
      uses synchronization-optimization;
    }
  } // grouping synchronization-info

  /*
   * Augment TE RPCs
   */

  augment "/te:tunnels-path-compute/te:input/te:path-compute-info" {
    description
      "Augments Path Computation RPC input";
    list path-request {
      key "request-id";
      description
        "The list of the requested paths to be computed";
      leaf request-id {
        type uint32;
        mandatory true;
        description
          "Each path computation request is uniquely identified
           within the RPC request by the request-id.";
      }
      leaf compute-priority {
        if-feature compute-priority;
        type uint8;
        default 0;
        description
          "The path computation request's priority (from 1 to 7) 
          which can be used to constraint the order by which the 
          path computation server processes the path computation 
          requests.

          A higher numerical value of the priority field reflects a 
          higher priority.

          It MUST be set to the default value (i.e., 0) when 
          unused.";
        reference
          "Section 7.4.1 of RFC5440: Path Computation Element (PCE) 
          Communication Protocol (PCEP).";
      }
      choice tunnel-attributes {
        default "value";
        description
          "Whether the tunnel attributes are specified by value
           within this path computation request or by reference.
           The reference could be either to an existing te-tunnel
           or to an entry in the tunnel-attributes list";
        case reference {
          container tunnel-reference {
            description
              "Attributes for a requested path that belongs to
              either an exiting te-tunnel or to an entry in the
              tunnel-attributes list.";
            choice tunnel-exist {
              mandatory true;
              description
                "Whether the tunnel reference is to an existing
                te-tunnel or to an entry in the tunnel-attributes
                list";
              case tunnel-ref {
                leaf tunnel-ref {
                  type te:tunnel-ref;
                  mandatory true;
                  description
                    "The referenced te-tunnel instance";
                }
              } // case tunnel-ref
              case tunnel-attributes-ref {
                leaf tunnel-attributes-ref {
                  type leafref {
                    path "/te:tunnels-path-compute/"
                      + "te:path-compute-info/"
                      + "te-pc:tunnel-attributes/te-pc:tunnel-name";
                  }
                  mandatory true;
                  description
                    "The referenced te-tunnel instance";
                }
              } // case tunnel-attributes-ref 
            } // choice tunnel-exist
            leaf path-name {
              type string;
              description
                "TE path name.";
            }
            choice path-role {
              mandatory true;
              description
                "Whether this path is a primary, or a reverse
                primary, or a secondary, or a reverse secondary
                path.";
              case primary-path {
                container primary-path {
                  presence "Indicates that the requested path
                            is a primary path";
                  description
                    "TE primary path";
                  uses te:path-forward-properties;
                  uses te:k-requested-paths;
                } // container primary-path
              } // case primary-path
              case secondary-path {
                container secondary-path {
                  description
                    "TE secondary path";
                  leaf preference {
                    type uint8 {
                      range "1..255";
                    }
                    default "1";
                    description
                      "Specifies a preference for this path. The 
                      lower the number higher the preference.";
                  }
                  uses protection-restoration-properties;
                  list primary-path-ref {
                    min-elements 1;
                    description
                      "The list of primary paths that reference
                      this path as a candidate secondary path";
                    choice primary-path-exist {
                      mandatory true;
                      description
                        "Whether the path reference is to an existing
                        te-tunnel path or to another path request";
                      case path-ref {
                        leaf primary-path-ref {
                          type leafref {
                            path "/te:te/te:tunnels/te:tunnel"
                              + "[te:name=current()/../../../"
                              + "tunnel-ref]/te:primary-paths/"
                              + "te:primary-path/te:name";
                          }
                          must '../../../tunnel-ref' {
                            description
                              "The primary-path can be referenced
                              if also the tunnel is referenced.";
                          }
                          mandatory true;
                          description
                            "The referenced primary path";
                        }
                      } // case path-ref
                      case path-request-ref {
                        leaf path-request-ref {
                          type leafref {
                            path "/te:tunnels-path-compute/"
                              + "te:path-compute-info/"
                              + "te-pc:path-request/"
                              + "te-pc:request-id";
                          }
                          mandatory true;
                          description
                            "The referenced primary path request";
                        }
                      } // case path-request-ref 
                    } // choice primary-path-exist
                  } // list primary-path-ref
                } // container secondary-path
              } // case secondary-path
              case primary-reverse-path {
                container primary-reverse-path {
                  description
                    "TE primary reverse path";
                  choice primary-path-exist {
                    mandatory true;
                    description
                      "Whether the path reference to the primary
                      paths for which this path is the reverse-path
                      is to an existing te-tunnel path or to
                      another path request.";
                    case path-ref {
                      leaf primary-path-ref {
                        type leafref {
                          path "/te:te/te:tunnels/te:tunnel[te:name"
                            + "=current()/../../tunnel-ref]/"
                            + "te:primary-paths/te:primary-path/"
                            + "te:name";
                        }
                        must '../../tunnel-ref' {
                          description
                            "The primary-path can be referenced
                            if also the tunnel is referenced.";
                        }
                        mandatory true;
                        description
                          "The referenced primary path";
                      }
                    } // case path-ref
                    case path-request-ref {
                      leaf path-request-ref {
                        type leafref {
                          path "/te:tunnels-path-compute/"
                            + "te:path-compute-info/"
                            + "te-pc:path-request/"
                            + "te-pc:request-id";
                        }
                        mandatory true;
                        description
                          "The referenced primary path request";
                      }
                    } // case path-request-ref 
                  } // choice primary-path-exist
                } // container primary-reverse-path
              } // case primary-reverse-path
              case secondary-reverse-path {
                container secondary-reverse-path {
                  description
                    "TE secondary reverse path";
                  // uses te:path-preference;
                  leaf preference {
                    type uint8 {
                      range "1..255";
                    }
                    default "1";
                    description
                      "Specifies a preference for this path. The 
                      lower the number higher the preference.";
                  }
                  uses protection-restoration-properties;
                  list primary-reverse-path {
                    min-elements 1;
                    description
                      "The list of primary reverse paths that
                      reference this path as a candidate
                      secondary reverse path";
                    choice primary-reverse-path-exist {
                      mandatory true;
                      description
                        "Whether the path reference is to an existing
                        te-tunnel path or to another path request";
                      case path-ref {
                        leaf primary-path-ref {
                          type leafref {
                            path "/te:te/te:tunnels/te:tunnel"
                              + "[te:name=current()/../../../"
                              + "tunnel-ref]/te:primary-paths/"
                              + "te:primary-path/te:name";
                          }
                          must '../../../tunnel-ref' {
                            description
                              "The primary-path can be referenced
                              if also the tunnel is referenced.";
                          }
                          mandatory true;
                          description
                            "The referenced primary path";
                        }
                      } // case path-ref
                      case path-request-ref {
                        leaf path-request-ref {
                          type leafref {
                            path "/te:tunnels-path-compute/"
                              + "te:path-compute-info/"
                              + "te-pc:path-request/"
                              + "te-pc:request-id";
                          }
                          mandatory true;
                          description
                            "The referenced primary reverse path
                            request";
                        }
                      } // case path-request-ref 
                    } // choice primary-reverse-path-exist
                  } // list primary-reverse-path-ref
                } // container secondary-reverse-path
              } // case secondary-reverse-path
            } // choice tunnel-path-role
          }
        } // case reference
        case value {
          leaf tunnel-name {
            type string;
            description
              "TE tunnel name.";
          }
          leaf path-name {
            type string;
            description
              "TE path name.";
          }
          choice path-role {
            when 'not (./source) and not (./destination)' {
              description
                "When the tunnel attributes are specified by value
                within this path computation, it is assumed that the
                requested path will be the only path of a tunnel.

                If the requested path is a transit segment path
                (i.e., the source and destination containers are 
                not present), it could be of any type. Otherwise it 
                could only be a primary path.";
            }
            default primary-path;
            description
              "Indicates whether the requested path is a primary
              path, a secondary path, a reverse primary path or a
              reverse secondary path.";
            case primary-path {
              description
                "The requested path is a primary path.";
            }
            container secondary-path {
              presence
                "Indicates that the requested path is a secondary
                path.";
              description
                "The name of the primary path which the requested
                secondary path belongs to.";
              leaf primary-path-name {
                type string;
                description
                  "TE primary path name.";
              }
            } // container secondary-path
            container primary-reverse-path {
              presence
                "Indicates that the requested path is a primary
                reverse path.";
              description
                "The name of the primary path which the requested
                primary reverse path belongs to.";
              leaf primary-path-name {
                type string;
                description
                  "TE primary path name.";
              }
            } // container primary-reverse-path
            container secondary-reverse-path {
              presence
                "Indicates that the requested path is a secondary
                reverse path.";
              description
                "The names of the primary path and of the primary
                reverse path which the requested secondary reverse
                path belongs to.";
              leaf primary-path-name {
                type string;
                description
                  "TE primary path name.";
              }
              leaf primary-reverse-path-name {
                type string;
                description
                  "TE primary reverse path name.";
              }
            } // container primary-reverse-path
          } // choice path-role
          uses te:k-requested-paths;
          uses te-types:encoding-and-switching-type;
          uses te:tunnel-common-attributes;
          uses te-types:te-topology-identifier;
        } // case value
      } // choice tunnel-attributes
      uses te:path-compute-info;
      uses requested-info;
      uses requested-state;
    }
    list tunnel-attributes {
      key "tunnel-name";
      description
        "Tunnel attributes common to multiple request paths";
      leaf tunnel-name {
        type string;
        description
          "TE tunnel name.";
      }
      uses te-types:encoding-and-switching-type;
      uses te:tunnel-common-attributes;
      uses te:tunnel-associations-properties;
      uses protection-restoration-properties;
      uses te-types:tunnel-constraints;
      uses te:tunnel-hierarchy-properties {
        augment "hierarchy/dependency-tunnels" {
          description
            "Augment with the list of dependency tunnel requests.";
          list dependency-tunnel-attributes {
            key "name";
            description
              "A tunnel request entry that this tunnel request can
               potentially depend on.";
            leaf name {
              type leafref {
                path "/te:tunnels-path-compute/"
                   + "te:path-compute-info/te-pc:tunnel-attributes/"
                   + "te-pc:tunnel-name";
              }
              description
                "Dependency tunnel request name.";
            }
            uses te-types:encoding-and-switching-type;
          }
        }
      }
    }
    uses synchronization-info {
      if-feature svec;
    }
  } // path-compute rpc input

  augment "/te:tunnels-path-compute/te:output/"
        + "te:path-compute-result" {
    description
      "Auguments Path Computation RPC output";
    list response {
      key "response-id";
      config false;
      description
        "response";
      leaf response-id {
        type uint32;
        description
          "The response-id has the same value of the
           corresponding request-id.";
      }
      uses te:path-computation-response;
      uses reported-state;
    }
  } // path-compute rpc output

  augment "/te:tunnels-actions/te:input/te:tunnel-info/"
        + "te:filter-type" {
    description
      "Augment Tunnels Action RPC input filter types";
    case path-compute-transactions {
      when "derived-from-or-self(../te:action-info/te:action, "
         + "'tunnel-action-path-compute-delete')";
      description
        "Path Delete RPC input";
      leaf-list path-compute-transaction-id {
        type string;
        description
          "The list of the transaction-id values of the
           transient states to be deleted";
      }
    }
  } // path-delete rpc input

  augment "/te:tunnels-actions/te:output" {
    description
      "Augment Tunnels Action RPC output with path delete result";
    container path-computed-delete-result {
      description
        "Path Delete RPC output";
      leaf-list path-compute-transaction-id {
        type string;
        description
          "The list of the transaction-id values of the
           transient states that have been successfully deleted";
      }
    }
  } // path-delete rpc output
}
]]></sourcecode></figure>

</section>
</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>This document describes use cases of requesting Path Computation
   using YANG data models, which could be used at the ABNO Control
   Interface <xref target="RFC7491"/> and/or between controllers in ACTN <xref target="RFC8453"/>. As
   such, it does not introduce any new security considerations compared
   to the ones related to YANG specification, ABNO specification and
   ACTN Framework defined in <xref target="RFC7950"/>, <xref target="RFC7491"/> and <xref target="RFC8453"/>.</t>

<t>The YANG module defined in this document is designed to be accessed via
   the NETCONF protocol <xref target="RFC6241"/> or RESTCONF protocol <xref target="RFC8040"/>. The
   lowest NETCONF layer is the secure transport layer, and the
   mandatory-to-implement secure transport is Secure Shell (SSH)
   <xref target="RFC6242"/>. The lowest RESTCONF layer is HTTPS, and the mandatory-to-
   implement secure transport is TLS <xref target="RFC8446"/>.</t>

<t>The Network Configuration Access Control Model (NACM) 
   <xref target="RFC8341"/> provides the means to
   restrict access for particular NETCONF or RESTCONF users to a
   preconfigured subset of all available NETCONF or RESTCONF protocol
   operations and content.</t>

<t>The YANG module defined in this document augments the "tunnels-path-compute" and the "tunnel-actions" RPCs defined in <xref target="I-D.ietf-teas-yang-te"/>. The security considerations provided in <xref target="I-D.ietf-teas-yang-te"/> are also applicable to the YANG module
   defined in this document.</t>

<t>The RPC defined in this document can also be used for Denial-of-service (DoS) attacks. The security considerations defines in section 10.7.2 of <xref target="RFC5440"/> also applies to the use of this RPC.</t>

<t>The definition of the input shaping/policing mechanisms and of their configuration is outside the scope of this document.</t>

<t>Some of the RPC operations defined in this YANG module may be considered
   sensitive or vulnerable in some network environments.  It is thus
   important to control access to these operations. These are the
   operations and their sensitivity/vulnerability:</t>

<t>"te-pc:response/computed-paths-properties": provides the same information provided by the "te:computed-paths-properties" defined in <xref target="I-D.ietf-teas-yang-te"/>. The security considerations provided in <xref target="I-D.ietf-teas-yang-te"/> for the TE tunnel state apply also to this subtree.</t>

<t>"te-pc:response/te-pc:tunnel-ref", "te-pc:response/te-pc:primary-path-ref", "te-pc:response/te-pc:primary-reverse-path-ref", "te-pc:response/te-pc:secondary-path-ref" and "te-pc:response/te-pc:secondary-reverse-path-ref" provides a reference where the same information provided in "te-pc:response/computed-paths-properties" is temporarly stored with the operational datastore (see <xref target="temp-state"/>). Therefore access to this information does not provide any additional security issue that the information provided with "te-pc:response/computed-paths-properties".</t>

<t>"/te:tunnels-actions": the YANG model defined in this document augments this action with a new action type that allows deleting the transient states of computed paths (see <xref target="temp-state"/>). A malicious use of this action would have no impact on the paths carrying live traffic but it would preclude the client from using the "transient states" to request the set-up of exactly that path, if still available.</t>

<t>The security considerations spelled out in the
   YANG specification <xref target="RFC7950"/> apply for this document as well.</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>This document registers the following URIs in the "ns" subregistry
   within the "IETF XML registry" <xref target="RFC3688"/>.</t>

<figure><artwork><![CDATA[
      URI: urn:ietf:params:xml:ns:yang:ietf-te-path-computation
      Registrant Contact:  The IESG.
      XML: N/A, the requested URI is an XML namespace.
]]></artwork></figure>

<t>This document registers a YANG module in the "YANG Module Names"
   registry <xref target="RFC7950"/>.</t>

<figure><artwork><![CDATA[
      name:      ietf-te-path-computation
      namespace: urn:ietf:params:xml:ns:yang:ietf-te-path-computation
      prefix:    te-pc
      reference: this document
]]></artwork></figure>

</section>


  </middle>

  <back>


    <references title='Normative References'>





<reference anchor='RFC6241' target='https://www.rfc-editor.org/info/rfc6241'>
<front>
<title>Network Configuration Protocol (NETCONF)</title>
<author fullname='R. Enns' initials='R.' role='editor' surname='Enns'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'><organization/></author>
<author fullname='A. Bierman' initials='A.' role='editor' surname='Bierman'><organization/></author>
<date month='June' year='2011'/>
<abstract><t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices.  It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages.  The NETCONF protocol operations are realized as remote procedure calls (RPCs).  This document obsoletes RFC 4741.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6241'/>
<seriesInfo name='DOI' value='10.17487/RFC6241'/>
</reference>



<reference anchor='RFC8040' target='https://www.rfc-editor.org/info/rfc8040'>
<front>
<title>RESTCONF Protocol</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<date month='January' year='2017'/>
<abstract><t>This document describes an HTTP-based protocol that provides a programmatic interface for accessing data defined in YANG, using the datastore concepts defined in the Network Configuration Protocol (NETCONF).</t></abstract>
</front>
<seriesInfo name='RFC' value='8040'/>
<seriesInfo name='DOI' value='10.17487/RFC8040'/>
</reference>



<reference anchor='RFC8795' target='https://www.rfc-editor.org/info/rfc8795'>
<front>
<title>YANG Data Model for Traffic Engineering (TE) Topologies</title>
<author fullname='X. Liu' initials='X.' surname='Liu'><organization/></author>
<author fullname='I. Bryskin' initials='I.' surname='Bryskin'><organization/></author>
<author fullname='V. Beeram' initials='V.' surname='Beeram'><organization/></author>
<author fullname='T. Saad' initials='T.' surname='Saad'><organization/></author>
<author fullname='H. Shah' initials='H.' surname='Shah'><organization/></author>
<author fullname='O. Gonzalez de Dios' initials='O.' surname='Gonzalez de Dios'><organization/></author>
<date month='August' year='2020'/>
<abstract><t>This document defines a YANG data model for representing, retrieving, and manipulating Traffic Engineering (TE) Topologies. The model serves as a base model that other technology-specific TE topology models can augment.</t></abstract>
</front>
<seriesInfo name='RFC' value='8795'/>
<seriesInfo name='DOI' value='10.17487/RFC8795'/>
</reference>


<reference anchor='I-D.ietf-teas-yang-te' target='https://datatracker.ietf.org/doc/html/draft-ietf-teas-yang-te-32'>
   <front>
      <title>A YANG Data Model for Traffic Engineering Tunnels, Label Switched Paths and Interfaces</title>
      <author fullname='Tarek Saad' initials='T.' surname='Saad'>
         <organization>Cisco Systems Inc</organization>
      </author>
      <author fullname='Rakesh Gandhi' initials='R.' surname='Gandhi'>
         <organization>Cisco Systems Inc</organization>
      </author>
      <author fullname='Xufeng Liu' initials='X.' surname='Liu'>
         <organization>IBM Corporation</organization>
      </author>
      <author fullname='Vishnu Pavan Beeram' initials='V. P.' surname='Beeram'>
         <organization>Juniper Networks</organization>
      </author>
      <author fullname='Igor Bryskin' initials='I.' surname='Bryskin'>
         <organization>Individual</organization>
      </author>
      <author fullname='Oscar Gonzalez de Dios' initials='O. G.' surname='de Dios'>
         <organization>Telefonica</organization>
      </author>
      <date day='12' month='March' year='2023'/>
      <abstract>
	 <t>   This document defines a YANG data model for the provisioning and
   management of Traffic Engineering (TE) tunnels, Label Switched Paths
   (LSPs), and interfaces.  The model covers data that is independent of
   any technology or dataplane encapsulation and is divided into two
   YANG modules that cover device-specific, and device independent data.

   This model covers data for configuration, operational state, remote
   procedural calls, and event notifications.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-teas-yang-te-32'/>
   
</reference>



<reference anchor='RFC7950' target='https://www.rfc-editor.org/info/rfc7950'>
<front>
<title>The YANG 1.1 Data Modeling Language</title>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<date month='August' year='2016'/>
<abstract><t>YANG is a data modeling language used to model configuration data, state data, Remote Procedure Calls, and notifications for network management protocols.  This document describes the syntax and semantics of version 1.1 of the YANG language.  YANG version 1.1 is a maintenance release of the YANG language, addressing ambiguities and defects in the original specification.  There are a small number of backward incompatibilities from YANG version 1.  This document also specifies the YANG mappings to the Network Configuration Protocol (NETCONF).</t></abstract>
</front>
<seriesInfo name='RFC' value='7950'/>
<seriesInfo name='DOI' value='10.17487/RFC7950'/>
</reference>



<reference anchor='RFC5440' target='https://www.rfc-editor.org/info/rfc5440'>
<front>
<title>Path Computation Element (PCE) Communication Protocol (PCEP)</title>
<author fullname='JP. Vasseur' initials='JP.' role='editor' surname='Vasseur'><organization/></author>
<author fullname='JL. Le Roux' initials='JL.' role='editor' surname='Le Roux'><organization/></author>
<date month='March' year='2009'/>
<abstract><t>This document specifies the Path Computation Element (PCE) Communication Protocol (PCEP) for communications between a Path Computation Client (PCC) and a PCE, or between two PCEs.  Such interactions include path computation requests and path computation replies as well as notifications of specific states related to the use of a PCE in the context of Multiprotocol Label Switching (MPLS) and Generalized MPLS (GMPLS) Traffic Engineering.  PCEP is designed to be flexible and extensible so as to easily allow for the addition of further messages and objects, should further requirements be expressed in the future.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5440'/>
<seriesInfo name='DOI' value='10.17487/RFC5440'/>
</reference>



<reference anchor='RFC7926' target='https://www.rfc-editor.org/info/rfc7926'>
<front>
<title>Problem Statement and Architecture for Information Exchange between Interconnected Traffic-Engineered Networks</title>
<author fullname='A. Farrel' initials='A.' role='editor' surname='Farrel'><organization/></author>
<author fullname='J. Drake' initials='J.' surname='Drake'><organization/></author>
<author fullname='N. Bitar' initials='N.' surname='Bitar'><organization/></author>
<author fullname='G. Swallow' initials='G.' surname='Swallow'><organization/></author>
<author fullname='D. Ceccarelli' initials='D.' surname='Ceccarelli'><organization/></author>
<author fullname='X. Zhang' initials='X.' surname='Zhang'><organization/></author>
<date month='July' year='2016'/>
<abstract><t>In Traffic-Engineered (TE) systems, it is sometimes desirable to establish an end-to-end TE path with a set of constraints (such as bandwidth) across one or more networks from a source to a destination.  TE information is the data relating to nodes and TE links that is used in the process of selecting a TE path.  TE information is usually only available within a network.  We call such a zone of visibility of TE information a domain.  An example of a domain may be an IGP area or an Autonomous System.</t><t>In order to determine the potential to establish a TE path through a series of connected networks, it is necessary to have available a certain amount of TE information about each network.  This need not be the full set of TE information available within each network but does need to express the potential of providing TE connectivity. This subset of TE information is called TE reachability information.</t><t>This document sets out the problem statement for the exchange of TE information between interconnected TE networks in support of end-to-end TE path establishment and describes the best current practice architecture to meet this problem statement.  For reasons that are explained in this document, this work is limited to simple TE constraints and information that determine TE reachability.</t></abstract>
</front>
<seriesInfo name='BCP' value='206'/>
<seriesInfo name='RFC' value='7926'/>
<seriesInfo name='DOI' value='10.17487/RFC7926'/>
</reference>



<reference anchor='RFC8340' target='https://www.rfc-editor.org/info/rfc8340'>
<front>
<title>YANG Tree Diagrams</title>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='L. Berger' initials='L.' role='editor' surname='Berger'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>This document captures the current syntax used in YANG module tree diagrams.  The purpose of this document is to provide a single location for this definition.  This syntax may be updated from time to time based on the evolution of the YANG language.</t></abstract>
</front>
<seriesInfo name='BCP' value='215'/>
<seriesInfo name='RFC' value='8340'/>
<seriesInfo name='DOI' value='10.17487/RFC8340'/>
</reference>


<reference anchor='I-D.ietf-teas-rfc8776-update' target='https://datatracker.ietf.org/doc/html/draft-ietf-teas-rfc8776-update-02'>
   <front>
      <title>Common YANG Data Types for Traffic Engineering</title>
      <author fullname='Italo Busi' initials='I.' surname='Busi'>
         <organization>Huawei</organization>
      </author>
      <author fullname='Aihua Guo' initials='A.' surname='Guo'>
         <organization>Futurewei Technologies</organization>
      </author>
      <author fullname='Xufeng Liu' initials='X.' surname='Liu'>
         <organization>IBM Corporation</organization>
      </author>
      <author fullname='Tarek Saad' initials='T.' surname='Saad'>
         <organization>Cisco Systems Inc.</organization>
      </author>
      <author fullname='Rakesh Gandhi' initials='R.' surname='Gandhi'>
         <organization>Cisco Systems, Inc.</organization>
      </author>
      <author fullname='Vishnu Pavan Beeram' initials='V. P.' surname='Beeram'>
         <organization>Juniper Networks</organization>
      </author>
      <author fullname='Igor Bryskin' initials='I.' surname='Bryskin'>
         <organization>Individual</organization>
      </author>
      <date day='10' month='March' year='2023'/>
      <abstract>
	 <t>   This document defines a collection of common data types and groupings
   in YANG data modeling language.  These derived common types and
   groupings are intended to be imported by modules that model Traffic
   Engineering (TE) configuration and state capabilities.  This document
   obsoletes RFC 8776.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-teas-rfc8776-update-02'/>
   
</reference>



<reference anchor='RFC5441' target='https://www.rfc-editor.org/info/rfc5441'>
<front>
<title>A Backward-Recursive PCE-Based Computation (BRPC) Procedure to Compute Shortest Constrained Inter-Domain Traffic Engineering Label Switched Paths</title>
<author fullname='JP. Vasseur' initials='JP.' role='editor' surname='Vasseur'><organization/></author>
<author fullname='R. Zhang' initials='R.' surname='Zhang'><organization/></author>
<author fullname='N. Bitar' initials='N.' surname='Bitar'><organization/></author>
<author fullname='JL. Le Roux' initials='JL.' surname='Le Roux'><organization/></author>
<date month='April' year='2009'/>
<abstract><t>The ability to compute shortest constrained Traffic Engineering Label Switched Paths (TE LSPs) in Multiprotocol Label Switching (MPLS) and Generalized MPLS (GMPLS) networks across multiple domains has been identified as a key requirement.  In this context, a domain is a collection of network elements within a common sphere of address management or path computational responsibility such as an IGP area or an Autonomous Systems.  This document specifies a procedure relying on the use of multiple Path Computation Elements (PCEs) to compute such inter-domain shortest constrained paths across a predetermined sequence of domains, using a backward-recursive path computation technique.  This technique preserves confidentiality across domains, which is sometimes required when domains are managed by different service providers.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5441'/>
<seriesInfo name='DOI' value='10.17487/RFC5441'/>
</reference>



<reference anchor='RFC5541' target='https://www.rfc-editor.org/info/rfc5541'>
<front>
<title>Encoding of Objective Functions in the Path Computation Element Communication Protocol (PCEP)</title>
<author fullname='JL. Le Roux' initials='JL.' surname='Le Roux'><organization/></author>
<author fullname='JP. Vasseur' initials='JP.' surname='Vasseur'><organization/></author>
<author fullname='Y. Lee' initials='Y.' surname='Lee'><organization/></author>
<date month='June' year='2009'/>
<abstract><t>The computation of one or a set of Traffic Engineering Label Switched Paths (TE LSPs) in MultiProtocol Label Switching (MPLS) and Generalized MPLS (GMPLS) networks is subject to a set of one or more specific optimization criteria, referred to as objective functions (e.g., minimum cost path, widest path, etc.).</t><t>In the Path Computation Element (PCE) architecture, a Path Computation Client (PCC) may want a path to be computed for one or more TE LSPs according to a specific objective function.  Thus, the PCC needs to instruct the PCE to use the correct objective function. Furthermore, it is possible that not all PCEs support the same set of objective functions; therefore, it is useful for the PCC to be able to automatically discover the set of objective functions supported by each PCE.</t><t>This document defines extensions to the PCE communication Protocol (PCEP) to allow a PCE to indicate the set of objective functions it supports.  Extensions are also defined so that a PCC can indicate in a path computation request the required objective function, and a PCE can report in a path computation reply the objective function that was used for path computation.</t><t>This document defines objective function code types for six objective functions previously listed in the PCE requirements work, and provides the definition of four new metric types that apply to a set of synchronized requests.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5541'/>
<seriesInfo name='DOI' value='10.17487/RFC5541'/>
</reference>



<reference anchor='RFC6242' target='https://www.rfc-editor.org/info/rfc6242'>
<front>
<title>Using the NETCONF Protocol over Secure Shell (SSH)</title>
<author fullname='M. Wasserman' initials='M.' surname='Wasserman'><organization/></author>
<date month='June' year='2011'/>
<abstract><t>This document describes a method for invoking and running the Network Configuration Protocol (NETCONF) within a Secure Shell (SSH) session as an SSH subsystem.  This document obsoletes RFC 4742.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6242'/>
<seriesInfo name='DOI' value='10.17487/RFC6242'/>
</reference>



<reference anchor='RFC8446' target='https://www.rfc-editor.org/info/rfc8446'>
<front>
<title>The Transport Layer Security (TLS) Protocol Version 1.3</title>
<author fullname='E. Rescorla' initials='E.' surname='Rescorla'><organization/></author>
<date month='August' year='2018'/>
<abstract><t>This document specifies version 1.3 of the Transport Layer Security (TLS) protocol.  TLS allows client/server applications to communicate over the Internet in a way that is designed to prevent eavesdropping, tampering, and message forgery.</t><t>This document updates RFCs 5705 and 6066, and obsoletes RFCs 5077, 5246, and 6961.  This document also specifies new requirements for TLS 1.2 implementations.</t></abstract>
</front>
<seriesInfo name='RFC' value='8446'/>
<seriesInfo name='DOI' value='10.17487/RFC8446'/>
</reference>



<reference anchor='RFC8341' target='https://www.rfc-editor.org/info/rfc8341'>
<front>
<title>Network Configuration Access Control Model</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>The standardization of network configuration interfaces for use with the Network Configuration Protocol (NETCONF) or the RESTCONF protocol requires a structured and secure operating environment that promotes human usability and multi-vendor interoperability.  There is a need for standard mechanisms to restrict NETCONF or RESTCONF protocol access for particular users to a preconfigured subset of all available NETCONF or RESTCONF protocol operations and content.  This document defines such an access control model.</t><t>This document obsoletes RFC 6536.</t></abstract>
</front>
<seriesInfo name='STD' value='91'/>
<seriesInfo name='RFC' value='8341'/>
<seriesInfo name='DOI' value='10.17487/RFC8341'/>
</reference>



<reference anchor='RFC3688' target='https://www.rfc-editor.org/info/rfc3688'>
<front>
<title>The IETF XML Registry</title>
<author fullname='M. Mealling' initials='M.' surname='Mealling'><organization/></author>
<date month='January' year='2004'/>
<abstract><t>This document describes an IANA maintained registry for IETF standards which use Extensible Markup Language (XML) related items such as Namespaces, Document Type Declarations (DTDs), Schemas, and Resource Description Framework (RDF) Schemas.</t></abstract>
</front>
<seriesInfo name='BCP' value='81'/>
<seriesInfo name='RFC' value='3688'/>
<seriesInfo name='DOI' value='10.17487/RFC3688'/>
</reference>




    </references>

    <references title='Informative References'>





<reference anchor='RFC7491' target='https://www.rfc-editor.org/info/rfc7491'>
<front>
<title>A PCE-Based Architecture for Application-Based Network Operations</title>
<author fullname='D. King' initials='D.' surname='King'><organization/></author>
<author fullname='A. Farrel' initials='A.' surname='Farrel'><organization/></author>
<date month='March' year='2015'/>
<abstract><t>Services such as content distribution, distributed databases, or inter-data center connectivity place a set of new requirements on the operation of networks.  They need on-demand and application-specific reservation of network connectivity, reliability, and resources (such as bandwidth) in a variety of network applications (such as point-to-point connectivity, network virtualization, or mobile back-haul) and in a range of network technologies from packet (IP/MPLS) down to optical.  An environment that operates to meet these types of requirements is said to have Application-Based Network Operations (ABNO).  ABNO brings together many existing technologies and may be seen as the use of a toolbox of existing components enhanced with a few new elements.</t><t>This document describes an architecture and framework for ABNO, showing how these components fit together.  It provides a cookbook of existing technologies to satisfy the architecture and meet the needs of the applications.</t></abstract>
</front>
<seriesInfo name='RFC' value='7491'/>
<seriesInfo name='DOI' value='10.17487/RFC7491'/>
</reference>



<reference anchor='RFC8453' target='https://www.rfc-editor.org/info/rfc8453'>
<front>
<title>Framework for Abstraction and Control of TE Networks (ACTN)</title>
<author fullname='D. Ceccarelli' initials='D.' role='editor' surname='Ceccarelli'><organization/></author>
<author fullname='Y. Lee' initials='Y.' role='editor' surname='Lee'><organization/></author>
<date month='August' year='2018'/>
<abstract><t>Traffic Engineered (TE) networks have a variety of mechanisms to facilitate the separation of the data plane and control plane.  They also have a range of management and provisioning protocols to configure and activate network resources.  These mechanisms represent key technologies for enabling flexible and dynamic networking.  The term &quot;Traffic Engineered network&quot; refers to a network that uses any connection-oriented technology under the control of a distributed or centralized control plane to support dynamic provisioning of end-to- end connectivity.</t><t>Abstraction of network resources is a technique that can be applied to a single network domain or across multiple domains to create a single virtualized network that is under the control of a network operator or the customer of the operator that actually owns the network resources.</t><t>This document provides a framework for Abstraction and Control of TE Networks (ACTN) to support virtual network services and connectivity services.</t></abstract>
</front>
<seriesInfo name='RFC' value='8453'/>
<seriesInfo name='DOI' value='10.17487/RFC8453'/>
</reference>



<reference anchor='RFC8454' target='https://www.rfc-editor.org/info/rfc8454'>
<front>
<title>Information Model for Abstraction and Control of TE Networks (ACTN)</title>
<author fullname='Y. Lee' initials='Y.' surname='Lee'><organization/></author>
<author fullname='S. Belotti' initials='S.' surname='Belotti'><organization/></author>
<author fullname='D. Dhody' initials='D.' surname='Dhody'><organization/></author>
<author fullname='D. Ceccarelli' initials='D.' surname='Ceccarelli'><organization/></author>
<author fullname='B. Yoon' initials='B.' surname='Yoon'><organization/></author>
<date month='September' year='2018'/>
<abstract><t>This document provides an information model for Abstraction and Control of TE Networks (ACTN).</t></abstract>
</front>
<seriesInfo name='RFC' value='8454'/>
<seriesInfo name='DOI' value='10.17487/RFC8454'/>
</reference>


<reference anchor='I-D.ietf-ccamp-otn-topo-yang' target='https://datatracker.ietf.org/doc/html/draft-ietf-ccamp-otn-topo-yang-16'>
   <front>
      <title>A YANG Data Model for Optical Transport Network Topology</title>
      <author fullname='Haomian Zheng' initials='H.' surname='Zheng'>
         <organization>Huawei Technologies</organization>
      </author>
      <author fullname='Italo Busi' initials='I.' surname='Busi'>
         <organization>Huawei Technologies</organization>
      </author>
      <author fullname='Xufeng Liu' initials='X.' surname='Liu'>
         <organization>IBM Corporation</organization>
      </author>
      <author fullname='Sergio Belotti' initials='S.' surname='Belotti'>
         <organization>Nokia</organization>
      </author>
      <author fullname='Oscar Gonzalez de Dios' initials='O. G.' surname='de Dios'>
         <organization>Telefonica</organization>
      </author>
      <date day='23' month='November' year='2022'/>
      <abstract>
	 <t>   This document describes a YANG data model to describe the topologies
   of an Optical Transport Network (OTN).  It is independent of control
   plane protocols and captures topological and resource-related
   information pertaining to OTN.  This model enables clients, which
   interact with a transport domain controller, for OTN topology-related
   operations such as obtaining the relevant topology resource
   information.


	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-ccamp-otn-topo-yang-16'/>
   
</reference>



<reference anchor='RFC4655' target='https://www.rfc-editor.org/info/rfc4655'>
<front>
<title>A Path Computation Element (PCE)-Based Architecture</title>
<author fullname='A. Farrel' initials='A.' surname='Farrel'><organization/></author>
<author fullname='J.-P. Vasseur' initials='J.-P.' surname='Vasseur'><organization/></author>
<author fullname='J. Ash' initials='J.' surname='Ash'><organization/></author>
<date month='August' year='2006'/>
<abstract><t>Constraint-based path computation is a fundamental building block for traffic engineering systems such as Multiprotocol Label Switching (MPLS) and Generalized Multiprotocol Label Switching (GMPLS) networks.  Path computation in large, multi-domain, multi-region, or multi-layer networks is complex and may require special computational components and cooperation between the different network domains.</t><t>This document specifies the architecture for a Path Computation Element (PCE)-based model to address this problem space.  This document does not attempt to provide a detailed description of all the architectural components, but rather it describes a set of building blocks for the PCE architecture from which solutions may be constructed.  This memo provides information for the Internet community.</t></abstract>
</front>
<seriesInfo name='RFC' value='4655'/>
<seriesInfo name='DOI' value='10.17487/RFC4655'/>
</reference>



<reference anchor='RFC8342' target='https://www.rfc-editor.org/info/rfc8342'>
<front>
<title>Network Management Datastore Architecture (NMDA)</title>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' surname='Schoenwaelder'><organization/></author>
<author fullname='P. Shafer' initials='P.' surname='Shafer'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<author fullname='R. Wilton' initials='R.' surname='Wilton'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>Datastores are a fundamental concept binding the data models written in the YANG data modeling language to network management protocols such as the Network Configuration Protocol (NETCONF) and RESTCONF. This document defines an architectural framework for datastores based on the experience gained with the initial simpler model, addressing requirements that were not well supported in the initial model.  This document updates RFC 7950.</t></abstract>
</front>
<seriesInfo name='RFC' value='8342'/>
<seriesInfo name='DOI' value='10.17487/RFC8342'/>
</reference>



<reference anchor='RFC6805' target='https://www.rfc-editor.org/info/rfc6805'>
<front>
<title>The Application of the Path Computation Element Architecture to the Determination of a Sequence of Domains in MPLS and GMPLS</title>
<author fullname='D. King' initials='D.' role='editor' surname='King'><organization/></author>
<author fullname='A. Farrel' initials='A.' role='editor' surname='Farrel'><organization/></author>
<date month='November' year='2012'/>
<abstract><t>Computing optimum routes for Label Switched Paths (LSPs) across multiple domains in MPLS Traffic Engineering (MPLS-TE) and GMPLS networks presents a problem because no single point of path computation is aware of all of the links and resources in each domain.  A solution may be achieved using the Path Computation Element (PCE) architecture.</t><t>Where the sequence of domains is known a priori, various techniques can be employed to derive an optimum path.  If the domains are simply connected, or if the preferred points of interconnection are also known, the Per-Domain Path Computation technique can be used.  Where there are multiple connections between domains and there is no preference for the choice of points of interconnection, the Backward-Recursive PCE-based Computation (BRPC) procedure can be used to derive an optimal path.</t><t>This document examines techniques to establish the optimum path when the sequence of domains is not known in advance.  The document shows how the PCE architecture can be extended to allow the optimum sequence of domains to be selected, and the optimum end-to-end path to be derived through the use of a hierarchical relationship between domains.  This document is not an Internet Standards Track  specification; it is published for informational purposes.</t></abstract>
</front>
<seriesInfo name='RFC' value='6805'/>
<seriesInfo name='DOI' value='10.17487/RFC6805'/>
</reference>



<reference anchor='RFC7446' target='https://www.rfc-editor.org/info/rfc7446'>
<front>
<title>Routing and Wavelength Assignment Information Model for Wavelength Switched Optical Networks</title>
<author fullname='Y. Lee' initials='Y.' role='editor' surname='Lee'><organization/></author>
<author fullname='G. Bernstein' initials='G.' role='editor' surname='Bernstein'><organization/></author>
<author fullname='D. Li' initials='D.' surname='Li'><organization/></author>
<author fullname='W. Imajuku' initials='W.' surname='Imajuku'><organization/></author>
<date month='February' year='2015'/>
<abstract><t>This document provides a model of information needed by the Routing and Wavelength Assignment (RWA) process in Wavelength Switched Optical Networks (WSONs).  The purpose of the information described in this model is to facilitate constrained optical path computation in WSONs.  This model takes into account compatibility constraints between WSON signal attributes and network elements but does not include constraints due to optical impairments.  Aspects of this information that may be of use to other technologies utilizing a GMPLS control plane are discussed.</t></abstract>
</front>
<seriesInfo name='RFC' value='7446'/>
<seriesInfo name='DOI' value='10.17487/RFC7446'/>
</reference>




    </references>


<section anchor="examples"><name>Examples</name>

<t>This section contains examples of use of the model with RESTCONF
<xref target="RFC8040"/> and JSON encoding.</t>

<t>These examples show how path computation can be requested for the tunnels configuration provided in Appendix A of <xref target="I-D.ietf-teas-yang-te"/>.</t>

<section anchor="basic-example"><name>Basic Path Computation</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 12.1 of of <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>In this case, the TE Tunnel has only one primary path with no specific constraints.</t>

<figure><artwork type="ascii-art"><![CDATA[
POST /restconf/operations/ietf-te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="basic.json"><![CDATA[
{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 1,
          "tunnel-name": "Example_LSP_Tunnel_A_2",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "192.0.2.1",
          "destination": "192.0.2.4",
          "bidirectional": "false",
          "signaling-type": "te-types:path-setup-rsvp"
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="transient-state-example"><name>Path Computation with transient state</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 12.1 of of <xref target="I-D.ietf-teas-yang-te"/> requesting some transient state to be reported within the operational datastore, as described <xref target="temp-state"/>.</t>

<t>In this case, the TE Tunnel has only one primary path with no specific constraints.</t>

<figure><artwork type="ascii-art"><![CDATA[
POST /restconf/operations/ietf-te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="transient-state.json"><![CDATA[
{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 2,
          "tunnel-name": "Example_LSP_Tunnel_A_2",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "192.0.2.1",
          "destination": "192.0.2.4",
          "bidirectional": "false",
          "signaling-type": "te-types:path-setup-rsvp",
          "requested-state": {
            "transaction-id": "example"
          }
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="global-path-constraint-example"><name>Path Computation with Global Path Constraint</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 12.3 of of <xref target="I-D.ietf-teas-yang-te"/>. The 'named path constraint' is created in section 12.2 of <xref target="I-D.ietf-teas-yang-te"/> applies to this path computation request.</t>

<figure><artwork type="ascii-art"><![CDATA[
POST /restconf/operations/ietf-te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="global-path-constraint.json"><![CDATA[
{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 3,
          "tunnel-name": "Example_LSP_Tunnel_A_4_1",
          "path-name": "Simple_LSP_1",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "192.0.2.1",
          "destination": "192.0.2.4",
          "bidirectional": "false",
          "signaling-type": "path-setup-rsvp",
          "named-path-constraint": "max-hop-3",
          "requested-state": {}
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="tunnel-path-constraint-example"><name>Path Computation with Per-tunnel Path Constraint</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 12.4 of of <xref target="I-D.ietf-teas-yang-te"/>, using a per tunnel path constraint.</t>

<figure><artwork type="ascii-art"><![CDATA[
POST /restconf/operations/ietf-te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="tunnel-path-constraint.json"><![CDATA[
{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 4,
          "tunnel-name": "Example_LSP_Tunnel_A_4_2",
          "path-name": "path1",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "192.0.2.1",
          "destination": "192.0.2.4",
          "bidirectional": "false",
          "signaling-type": "te-types:path-setup-rsvp",
          "path-metric-bounds": {
            "path-metric-bound": [
              {
                "metric-type": "te-types:path-metric-hop",
                "upper-bound": "3"
              }
            ]
          }
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="path-computation-result"><name>Path Computation result</name>

<t>This example reports the output of the path computation RPC request described in <xref target="tunnel-path-constraint-example"/>.</t>

<figure><artwork type="ascii-art"><![CDATA[
HTTP/1.1 200 OK
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="computed-path.json"><![CDATA[
{
  "ietf-te:output": {
    "path-compute-result": {
      "ietf-te-path-computation:response": [
        {
          "response-id": 3,
          "computed-paths-properties": {
            "computed-path-properties": [
              {
                "k-index": "1",
                "path-properties": {
                  "path-route-objects": {
                    "path-route-object": [
                      {
                        "index": "1",
                        "numbered-node-hop": {
                          "node-id": "192.0.2.2"
                        }
                      },
                      {
                        "index": "2",
                        "numbered-node-hop": {
                          "node-id": "192.0.2.4"
                        }
                      }
                    ]
                  }
                }
              }
            ]
          },
          "tunnel-ref": "Example_LSP_Tunnel_A_4_1",
          "primary-path-ref": "path1"
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="path-computation-with-primary-and-secondary-paths"><name>Path Computation with Primary and Secondary Paths</name>

<t>This section contains examples of use of the model to compute primary and secondary paths described in section 12.6 of <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>These examples consider the cases where:
- primary and reverse paths are unidirectional and not co-routed (example-1);
- primary and reverse paths are bidirectional (example-3);
- primary and reverse paths are unidirectional and co-routed (example-4).</t>

<figure><artwork type="ascii-art"><![CDATA[
POST /restconf/operations/ietf-te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="primary-secondary-paths.json"><![CDATA[
{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 1,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "primary-1 (fwd)",
            "primary-path": {}
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 2,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "primary-2 (rev)",
            "primary-reverse-path": {
              "primary-path-request-ref": 1
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.3",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 3,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-1 (fwd)",
            "secondary-path": {
              "primary-path": [
                {
                  "path-request-ref": 1
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.1"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 4,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-2 (fwd)",
            "secondary-path": {
              "primary-path": [
                {
                  "path-request-ref": 1
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.5",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 5,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-3 (rev)",
            "secondary-reverse-path": {
              "primary-reverse-path": [
                {
                  "path-request-ref": 2
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.5"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.4",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 6,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-4 (rev)",
            "secondary-reverse-path": {
              "primary-reverse-path": [
                {
                  "path-request-ref": 2
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.4"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.3",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 7,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-5 (rev)",
            "secondary-reverse-path": {
              "primary-reverse-path": [
                {
                  "path-request-ref": 2
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.3"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.1",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 8,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-3",
            "path-name": "primary-1 (bidir)",
            "primary-path": {}
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 9,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-3",
            "path-name": "secondary-1 (bidir)",
            "secondary-path": {
              "primary-path": [
                {
                  "path-request-ref": 8
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.1"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 10,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-3",
            "path-name": "secondary-2 (bidir)",
            "secondary-path": {
              "primary-path": [
                {
                  "path-request-ref": 8
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.5",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 11,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-4",
            "path-name": "primary-1 (fwd)",
            "primary-path": {
              "co-routed": [null]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 12,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-4",
            "path-name": "primary-2 (rev)",
            "primary-reverse-path": {
              "primary-path-request-ref": 11
            }
          }
        },
        {
          "request-id": 13,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-4",
            "path-name": "secondary-1 (fwd)",
            "secondary-path": {
              "primary-path": [
                {
                  "co-routed": [null],
                  "path-request-ref": 11
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.1"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 14,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-4",
            "path-name": "secondary-2 (fwd)",
            "secondary-path": {
              "primary-path": [
                {
                  "co-routed": [null],
                  "path-request-ref": 11
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.5",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 15,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-3 (rev)",
            "secondary-reverse-path": {
              "primary-reverse-path": [
                {
                  "path-request-ref": 12
                }
              ]
            }
          }
        },
        {
          "request-id": 16,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-4 (rev)",
            "secondary-reverse-path": {
              "primary-reverse-path": [
                {
                  "path-request-ref": 12
                }
              ]
            }
          }
        }
      ],
      "ietf-te-path-computation:tunnel-attributes": [
        {
          "tunnel-name": "example-1",
          "source": "192.0.2.1",
          "destination": "192.0.2.5",
          "bidirectional": "false"
        },
        {
          "tunnel-name": "example-3",
          "source": "192.0.2.1",
          "destination": "192.0.2.5",
          "bidirectional": "true"
        },
        {
          "tunnel-name": "example-4",
          "source": "192.0.2.1",
          "destination": "192.0.2.5",
          "bidirectional": "false"
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
</section>
<section numbered="false" anchor="acknowledgments"><name>Acknowledgments</name>

<t>The authors would like to thank Igor Bryskin and Xian Zhang for
   participating in the initial discussions that have triggered this
   work and providing valuable insights.</t>

<t>The authors would like to thank the authors of the TE tunnel YANG
   data model <xref target="I-D.ietf-teas-yang-te"/>, in particular Igor Bryskin, Vishnu Pavan
   Beeram, Tarek Saad and Xufeng Liu, for their inputs to the
   discussions and support in having consistency between the Path
   Computation and TE tunnel YANG data models.</t>

<t>The authors would like to thank Adrian Farrel, Dhruv Dhody, Igor
   Bryskin, Julien Meuric and Lou Berger for their valuable input to the
   discussions that has clarified that the path being set up is not
   necessarily the same as the path that has been previously computed
   and, in particular to Dhruv Dhody, for his suggestion to describe the
   need for a path verification phase to check that the actual path
   being set up meets the required end-to-end metrics and constraints.</t>

<t>The authors would like to thank Aihua Guo, Lou Berger, Shaolong Gan,
   Martin Bjorklund and Tom Petch for their useful comments on how to
   define XPath statements in YANG RPCs.</t>

<t>The authors would like to thank Haomian Zheng, Yanlei Zheng, Tom
   Petch, Aihua Guo and Martin Bjorklund for their review and valuable
   comments to this document.</t>

<t>Previous versions of document were prepared using 2-Word-v2.0.template.dot.</t>

<t>This document was prepared using kramdown.</t>

</section>

    <section anchor="contributors" numbered="false" toc="include" removeInRFC="false">
        <name>Contributors</name>
    <contact initials="D." surname="Ceccarelli" fullname="Daniele Ceccarelli">
      <organization>Cisco</organization>
      <address>
        <email>daniele.ietf@gmail.com</email>
      </address>
    </contact>
    <contact initials="V." surname="Lopez" fullname="Victor Lopez">
      <organization>Nokia</organization>
      <address>
        <email>victor.lopez@nokia.com</email>
      </address>
    </contact>
    <contact initials="R." surname="Vilalta" fullname="Ricard Vilalta">
      <organization>CTTC</organization>
      <address>
        <email>ricard.vilalta@cttc.es</email>
      </address>
    </contact>
    <contact initials="K." surname="Sethuraman" fullname="Karthik Sethuraman">
      <organization>NEC</organization>
      <address>
        <email>karthik.sethuraman@necam.com</email>
      </address>
    </contact>
    <contact initials="M." surname="Scharf" fullname="Michael Scharf">
      <organization>Nokia</organization>
      <address>
        <email>michael.scharf@gmail.com</email>
      </address>
    </contact>
    <contact initials="D." surname="Beller" fullname="Dieter Beller">
      <organization>Nokia</organization>
      <address>
        <email>dieter.beller@nokia.com</email>
      </address>
    </contact>
    <contact initials="G." surname="Bruno" fullname="Gianmarco Bruno">
      <organization>Ericsson</organization>
      <address>
        <email>gianmarco.bruno@ericsson.com</email>
      </address>
    </contact>
    <contact initials="F." surname="Lazzeri" fullname="Francesco Lazzeri">
      <organization>Ericsson</organization>
      <address>
        <email>francesco.lazzeri@ericsson.com</email>
      </address>
    </contact>
    <contact initials="Y." surname="Lee" fullname="Young Lee">
      <organization>Samsung Electronics</organization>
      <address>
        <email>younglee.tx@gmail.com</email>
      </address>
    </contact>
    <contact initials="C." surname="Perocchio" fullname="Carlo Perocchio">
      <organization>Ericsson</organization>
      <address>
        <email>carlo.perocchio@ericsson.com</email>
      </address>
    </contact>
    <contact initials="O." surname="Dugeon" fullname="Olivier Dugeon">
      <organization>Orange Labs</organization>
      <address>
        <email>olivier.dugeon@orange.com</email>
      </address>
    </contact>
    <contact initials="J." surname="Meuric" fullname="Julien Meuric">
      <organization>Orange Labs</organization>
      <address>
        <email>julien.meuric@orange.com</email>
      </address>
    </contact>
    </section>

  </back>

<!-- ##markdown-source:
H4sIAAAAAAAAA+y9a3ccx5Eg+p3n8D/UwB8EWN0NPiUZsi2BICjzjvhYgpbG
O5w7p9BdAGrY6OqpqiYECby//cYrMyOzMquqQdlrz7p31gK78xEZGRkZERmP
6XR69868WpSr84Ns055Nv7p75+6dtmyXxUF2mP3l8OV32dO8zbMX1aJYZmdV
ndXFf2+KpoUe2TpvL7J5dbnetHlbVivsm5+e1sWHg+wvOTTA9q+x0ZFutKjm
q/wSJljU+Vk7LQuYty3yZnoNfaY46FQNOn1w/+6dZnN6WTYN/LO9XkPP58dv
n929c1XV78/rarM+yN4eH55kP8K/Ea7v8DtYV94W51V9fZA17eLunXJdH2Rt
vWnaB/fu/e7eA4S2afPV4j/zZbWCQa+L5u6ddXmQ/XtbzSdZU9VtXZw18Nf1
Jf8BYF0Wq7b5D1rppr2o6oO7d7Jsiv+TZbyq5y2Mlz3ZNCV/W1eIzGJRtlXN
31Q1YPtPm/yqKLO3xfxiVS2r8xJnx1+Ly7xcHmQlDjM7hWG+vaCmM5i9M9lJ
UZ+XMFuxrNq2f8KX1fsy96ZoqPPslDt/u8IG0VleNfO8zr6rVj/ny+LnbFFk
T8tKwC1XDTSYJX6lmd8Wy+KsWpVzf/oKR52dS78FAFw137a2bRSSw9Wmzs+z
k4u8vszVFN9V1fmy8IbPV81F/u05/RAdC0gUBirVKEcX5SrP/gyzc3OHqYsS
iPPR776dY4sNNZjNieDnQJN1ebppY7TwNF+VsKDsqJjDWovl0putbOaVN82C
m8/wSHx7jt9FAf+hnMNs2ffVuvi5d4M/UMPZEhv2bO8bwHa9gGGX+bLVWD16
+/bIG7CmlrMP3PLbedvOZ0y33oD/mtftRfkeqLO9gP26zFcazGN/zPfceNbY
xt+uinl+GQX1RTm/yIETncB/6rPexV9y01lDTXvQ+RTQXdR4hpZF/4FZUEs8
MNCyB6HflfnqMq/ncDDrzapSYx4DBpumWnnDnpvms1Ns/m0hjaJjP6vz1bwA
ysm+z3/+GZoOjX5mOsyW3KF//L9UG2Ch3xeFGvckv2zw2+NlMW9rPJ0+r7rG
PsuimLU/9eD5KK+BMb4u6moOx2gQK3NsPlub5v1Qv1qWH0rYxKeb86LS1PYK
Vn9eAK5OfZAr7jBbUIdvK2oWHfr/2SzLYpW9KDYAwIiR/4vazy6pvTfw3TvT
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
e2ZSipHEFua9uZ/tAsfYw9ZFSW9eyBaqmvaMRVoEaFnli+yylBdpLy7RyHFG
ARZbA2ifFeb8W3X0AqvSw8RTmI1FU5wR//lwT3IlUluNto7XkYNUw+NJMb6k
Ys1CnOLUgYxeYrIOT4LDdN02/fSxDhZ2KQb9ZEIOShWkiqoGa642OSJBwNmc
DBDGeiNprrQbmdUNdFivAmg3l8REflqcYYx4dhGbIVGnCU2/6vfbzsRgg5vK
j9SwWYQrvcsyJTAjfxoVo9tNfmiCcDk7KAezghqGSZ8GyYUheGh9D0jPESer
lrfEmXLUDIbITZJ3SxaizqDBTudOJF++Rpy+rDpi0kaJPjImi5Opy2AD6lVS
pwuV15acHyTW+oTWzWNR5sPdH05ev93Lzpb5ubZpvnmd7b6RzX+d18ByWlK+
Oeugp8CZffdUcN5ozptISgqBuDNiWTvZ7pM3r4/2MpjyolpwzmS2E2QYUF+u
5vzmTqcV8ErjkfvBEUAM3ZomPy/IClLJnmHZPkclzpaK7nlkYaUMWqsP1fKD
y76pNVqy6diFStZFZ7kqnK2mKdhX8xRWagAw3ha1DfY2KbbeUHo/ONgCNa8W
yBOtFX4aWFxws64LYLbIrXklbmW0BMqSxRt8dDzLju3SGlXBAiC+xAJ4bFuQ
lVDpEGuBdAonOhPSGeCCF2icPGSyh3WyYYhnpHFwLhwbc6EBiWOC2WUXTXZw
Ox3OYhKgzS/K4kNhptDmh5kldLxD6cBYJ6UMi/ldmcQOxkqIhGSPiWTpe4hQ
YsptziRrJ06T8ViluqM6ft73W+rFW8wlu0/25IvIb0f827hH85u+3/qHMC58
KNVj4uypyr/5btQQsfBl9+e7oSE4AXN8CIr7MQ16oNCegUrU+yP8/FQjJD3E
fvAFCWkaiv4hPjdo+38dXRiHi5F0YRejAP6+XL1PNMa9SoKjxnquab1nPNOh
f3kfhki710/Fa2YI/XCvp9k774tUM0tC0/5JzZ8nN2Oa9Y0W21Nf/te8y2gB
xKtOhFeF7pvUwTCyAXHfpiFFwcU8+aXzhjopxeYO7SvZZv0g6b7hclQknpk0
1uZCMCyfCxbMwtTgCkZfyLQXCeZAZjI49F/eOHgD4cjNXCcTI7yYLhPzYpd7
t+TTsOERywGdGenG3zQWnNd+zQC4OzyBaxLNak5AnuBPT+1zJEoX+H6GuelZ
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
rUFUjCw+MwrVI3a7e6rC6jUXcbot9/jYuf8FK/f1dptV3RK1llsv2caYliO4
qPL6gCExrDPugQLba1RgXeHL8r2ZKhlgK7K1lllMy+zdRMvYBpChZfCP/xP1
0tJCom/1gryZw0gqNTKXyLFQ4kG96mNpTOJLUGbmmMSzWoVZfHa3FOxqxZh+
+l4Gm1OraarPpdM4TKqkuvQ6WyIcS9c9ti6T+qo4ltFNV4OevXbqFakgvMH2
tvf+b8vWEyLiq0JRiJCzVqpChafWqokiBLZkjdRdadqcb7Q1m7YSgDPQgZPg
C8m3k8vL/TphJToiuQaJJSoXVzV1NXYNt2bYqqP6watmjNAEVIpRTFCgK8cm
n8CGfN6Sem9Qg1BRDcpQOaxW0xosf1p7N5qW+4tPro8dbcuVPepUpXMXxSvh
BUx1+35b7aXL08OGaDaoXzYphRsK7y1GKvMQ2970doRiM9jemmmdm1nQmamu
NavxSQufvnWdIi8o2WSl+Eq6oh8+fNAzxmBihGFcSB7rhoTCjBgnrCkm3oZ4
S29n86fm7gyzpHh2t82zjqE4hrG3uTaIv8X1g7oydLm/XIV+NC9Yr6T4LYNZ
CP6Ot3FyOdksN9YUg3UkLWkeqzy92OZ6fnTpX7n2Zr1ZT1RXBqOH/m27P8ud
YMe1N7fW/+7tzLm1dPDsLu3hKEkyF7rwYvpbU7HdVmzidht/DzYZeBugDarZ
RI9KchHb3mgUBBMuodn4j8Npu6vLaW4/4DI5rYhwq1JJZsRcI5e5Tec6I72O
Ky0y8s+nPyrn7rTiyNJr6wY5+CMpcrcD7PuI12AtXqsuXq4T9cqJ1+PVFa/H
dyheuxWWkjuCu1bMrIa3EbfBWtxkSxcn3wNx21tdcXtyh+K2txa3+yZuLsfq
yonbCp/NfrxDcXu8Frf7Jm7l+9cVFLeKa6pVELen317cSsql0jdLzvq1d/Ze
HOqffXdGMXxmFazyfY/1T9eaWLZce82+tYDtbN+hhA3WEuatvIStHWe3lLAl
XESXHBe3u4guyZYKQED2i/Mo+gNz/+oy1hKurlsy1lKvrmvvrhen0hKuXRuo
dKfXrmXRdTNwC8oTldf74NrS5J/bqqslXNC2FsQ7uKBdC+LaIC03XQVBXF/l
lgTu1t7uxVdhfcO31FWQvxZatzq+uETYTk2QsZVZV0H7m6e8WZqjKuWtDcNV
DNXOll3eUAl1+RYjtdP/viNRFf/wL7dN0JDiYhocmZaqQV3KPUd2xEkc3v74
LE4uo2DC4HcaWpufz6dJmgnsuCg8ExCqfnzmHZwmqfc8vcrOQgJP9n4L/dj7
9xTBtE+SlPpgrNsQBoMJuQIDhcBHEf8kzMZ5lhH8WwH2DUJyeoqDpBxi6oVA
PPENDEyFXSGOuMD6zMLTqcAzaTHqufa9SDApwCkRuIx6KaCxa/OMYUIamq9O
kK73jzCbxrn3wb8QNVGeB0Hqn3e9Iz8NzryR70+YavlJABN6G+ZdmQAdpozI
KvFHeUgatSjzJZ8xvnGMdEOaUMJKNqfCIRKEG+eHaTfUhZ6mg12YE9fxwNtS
c3+S4qK/9tM0iLrey2maX8D/k8lVl8jBE5ck+TVHvEHvXZCn4ZhG8DbJgS4p
rLc2d21tMUuzggaCYzJvDLTnUqkKUZIyOo8DwucJ5l4+Q9iKOOECwHGACJbw
THRVoG36Wlq76plw52ewBSEiY3SlQBypGxi+zQAwUoMCOCWGNgWOzhg5MlEp
SmpWcSAQ2Xx+P+x4BdrhbIplJTD7aRqMz4op+uN57kdFNVVjtudBIDJdcQsM
UZiCeIJo2Vh9h5OBFRC0gQjUZs3Dae57v+RJV1u+rjea+gmWjvN+8WPWhu+Q
MrH3/HcQ3yiPmd2PknPvQzAfT7UFz7PgJI+oEhaBb8K0EcZOYGgzDID3G2Wa
EeACtwoFMD/CSrcd+xs/OWctBTLX9f7lx1EQyr+OMD0JOqHhdYt50rhLkymG
jwyC2KDxRLEu9aPmIyFPbDDkD4K1cMWZqbEClARNuEQ4WOA+wrcXkAaD3j+T
dNK7wG0HQaIQ474/SeZ9lVVXPO5n9tNnoH8myWUMrf8H0Noe+ky2AgA=

-->

</rfc>

