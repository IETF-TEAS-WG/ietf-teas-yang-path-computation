<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.17 (Ruby 2.7.0) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc comments="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-teas-yang-path-computation-21" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="Yang for Path Computation">A YANG Data Model for requesting path computation</title>

    <author initials="I." surname="Busi" fullname="Italo Busi" role="editor">
      <organization>Huawei Technologies</organization>
      <address>
        <email>italo.busi@huawei.com</email>
      </address>
    </author>
    <author initials="S." surname="Belotti" fullname="Sergio Belotti" role="editor">
      <organization>Nokia</organization>
      <address>
        <email>sergio.belotti@nokia.com</email>
      </address>
    </author>
    <author initials="O." surname="Gonzalez de Dios" fullname="Oscar Gonzalez de Dios">
      <organization>Telefonica</organization>
      <address>
        <email>oscar.gonzalezdedios@telefonica.com</email>
      </address>
    </author>
    <author initials="A." surname="Sharma" fullname="Anurag Sharma">
      <organization>Google</organization>
      <address>
        <email>ansha@google.com</email>
      </address>
    </author>
    <author initials="Y." surname="Shi" fullname="Yan Shi">
      <organization>China Unicom</organization>
      <address>
        <email>shiyan49@chinaunicom.cn</email>
      </address>
    </author>

    <date year="2023" month="July" day="07"/>

    
    <workgroup>TEAS Working Group</workgroup>
    

    <abstract>


<t>There are scenarios, typically in a hierarchical Software-Defined
   Networking (SDN) context, where the topology information provided by
   a Traffic Engineering (TE) network provider may be insufficient for
   its client to perform multi-domain path computation. In these cases the
   client would need to request the TE network provider to compute some
   intra-domain paths to be used by the client to choose the optimal multi-domain paths.</t>

<t>This document provides a mechanism to request path computation by augmenting the Remote Procedure Calls (RPCs) defined in RFC YYYY.</t>

<t>[RFC EDITOR NOTE: Please replace RFC YYYY with the RFC number of
   draft-ietf-teas-yang-te once it has been published.</t>

<t>Moreover, this document describes some use cases where the path
   computation request, via YANG-based protocols (e.g., NETCONF or
   RESTCONF), can be needed.</t>



    </abstract>



  </front>

  <middle>


<section anchor="intro"><name>Introduction</name>

<t anchor="pc-model">There are scenarios, typically in a hierarchical Software-Defined
   Networking (SDN) context, where the topology information provided by
   a Traffic Engineering (TE) network provider may be insufficient for
   its client to perform multi-domain path computation. In these cases the
   client would need to request the TE network provider to compute some
   intra-domain paths that could be used together with its topology information
   to compute the multi-domain path.</t>

<t>These types of scenarios can be applied to different interfaces in
   different reference architectures:</t>

<t><list style="symbols">
  <t>Application-Based Network Operations (ABNO) control interface
<xref target="RFC7491"/>, in which an Application Service Coordinator can request the
ABNO controller to take in charge path calculation (see Figure 1
in <xref target="RFC7491"/>).</t>
  <t>Abstraction and Control of TE Networks (ACTN) <xref target="RFC8453"/>, where a
controller hierarchy is defined.
In the ACTN context, path computation is needed on the interface
between Customer Network Controller (CNC)  and Multi-Domain
Service Coordinator (MDSC), called CNC-MDSC Interface (CMI),
and on the interface between MSDC and Provisioning Network
Controller (PNC), called MDSC-PNC Interface  (MPI). 
<xref target="RFC8454"/> describes an information model for the Path
Computation request.  <vspace blankLines='1'/>
Multiple protocol solutions can be used for communication between
different controller hierarchical levels. This document assumes that
the controllers are communicating using YANG-based protocols (e.g.,
NETCONF <xref target="RFC6241"/> or RESTCONF <xref target="RFC8040"/>).  <vspace blankLines='1'/>
Path Computation Elements (PCEs), controllers and orchestrators
perform their operations based on Traffic Engineering Databases
(TED). Such TEDs can be described, in a technology agnostic way, with
the YANG data model for TE Topologies <xref target="RFC8795"/>. Furthermore, the
technology specific details of the TED are modelled in the technology
specific topology models, e.g., the <xref target="I-D.ietf-ccamp-otn-topo-yang"/> for Optical Transport
Network (OTN) Optical Data Unit (ODU) technologies, which augment the
common TE topology model in <xref target="RFC8795"/>.  <vspace blankLines='1'/>
The availability of such topology models allows the provisioning of
the TED using YANG-based protocols (e.g., NETCONF or RESTCONF).
Furthermore, it enables a PCE/controller performing the necessary
abstractions or modifications and offering this customized topology
to another PCE/controller or high level orchestrator.  <vspace blankLines='1'/>
The tunnels that can be provided over the networks described with the
topology models can be also set-up, deleted and modified via YANG-
based protocols (e.g., NETCONF or RESTCONF) using the TE tunnel YANG
data model <xref target="I-D.ietf-teas-yang-te"/>.  <vspace blankLines='1'/>
This document defines a YANG data model <xref target="RFC7950"/> that augments the RPC defined in <xref target="I-D.ietf-teas-yang-te"/>. The use of this RPC is complimentary to the configuration of a TE tunnel path in "compute-only" mode, as described in <xref target="I-D.ietf-teas-yang-te"/>.  <vspace blankLines='1'/>
The YANG data model definition does not make any assumption about
whether that the client or the server implement a "PCE"
functionality, as defined in <xref target="RFC4655"/>, and the Path Computation
Element Communication Protocol (PCEP) protocol, as defined in
<xref target="RFC5440"/>.  <vspace blankLines='1'/>
Moreover, this document describes some use cases where a path
computation request, via YANG-based protocols (e.g., NETCONF or
RESTCONF), can be needed.  <vspace blankLines='1'/>
The YANG data model defined in this document conforms to the Network
Management Datastore Architecture <xref target="RFC8342"/>.</t>
</list></t>

<section anchor="terminology"><name>Terminology</name>

<t>TED:</t>

<ul empty="true"><li>
  <t>The traffic engineering database is a collection of all TE
   information about all TE nodes and TE links in a given network.</t>
</li></ul>

<t>PCE:</t>

<ul empty="true"><li>
  <t>A Path Computation Element (PCE) is an entity that is capable of
   computing a network path or route based on a network graph, and of
   applying computational constraints during the computation.  The PCE
   entity is an application that can be located within a network node or
   component, on an out-of-network server, etc.  For example, a PCE
   would be able to compute the path of a TE Label Switched Path (LSP)
   by operating on the TED and considering bandwidth and other
   constraints applicable to the TE LSP service request. <xref target="RFC4655"/>.</t>
</li></ul>

<t>Domain:</t>

<ul empty="true"><li>
  <t>TE information is the data relating to nodes and TE links
   that is used in the process of selecting a TE path.  TE information
   is usually only available within a network.  We call such a zone of
   visibility of TE information a domain.  An example of a domain may be
   an IGP area or an Autonomous System. <xref target="RFC7926"/></t>
</li></ul>

<t>The terminology for describing YANG data models is found in
   <xref target="RFC7950"/>.</t>

</section>
<section anchor="tree-diagram"><name>Tree Diagram</name>

<t>Tree diagrams used in this document follow the notation defined in
   <xref target="RFC8340"/>.</t>

</section>
<section anchor="prefixes-in-data-node-names"><name>Prefixes in Data Node Names</name>

<t>In this document, names of data nodes and other data model objects
   are prefixed using the standard prefix associated with the
   corresponding YANG imported modules, as shown in <xref target="tab-prefix"/>.</t>

<texttable title="Prefixes and corresponding YANG modules" anchor="tab-prefix">
      <ttcol align='left'>Prefix</ttcol>
      <ttcol align='left'>YANG module</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>te-types</c>
      <c>ietf-te-types</c>
      <c>[RFCZZZZ]</c>
      <c>te</c>
      <c>ietf-te</c>
      <c>[RFCYYYY]</c>
      <c>te-pc</c>
      <c>ietf-te-path-computation</c>
      <c>RFCXXXX</c>
</texttable>

<t>RFC Editor Note:
Please replace XXXX with the RFC number assigned to this document.
Please replace YYYY with the RFC number of <xref target="I-D.ietf-teas-yang-te"/> once it has been published.
Please replace ZZZZ with the RFC number of <xref target="I-D.ietf-teas-rfc8776-update"/> once it has been published.
Please remove this note.</t>

</section>
</section>
<section anchor="use-cases"><name>Use Cases</name>

<t>This section presents some use cases, where a client needs to request
   underlying SDN controllers for path computation.</t>

<t>The use of the YANG data model defined in this document is not
   restricted to these use cases but can be used in any other use case
   when deemed useful.</t>

<t>The presented uses cases have been grouped, depending on the
   different underlying topologies: Packet/Optical Integration (<xref target="poi-uc"/>);
   multi-domain Traffic Engineered (TE) Networks (<xref target="md-uc"/>); and Data Center
   Interconnections (<xref target="dci-uc"/>). Use cases in <xref target="brpc-uc"/> and <xref target="hpce-uc"/>
   respectively present how to
   apply this YANG data model for standard multi-domain PCE i.e.
   Backward Recursive Path Computation <xref target="RFC5441"/> and Hierarchical PCE
   <xref target="RFC6805"/>.</t>

<section anchor="poi-uc"><name>Packet/Optical Integration</name>

<t>In this use case, an optical domain is used to provide connectivity
   to some nodes of a packet domain (see <xref target="fig-poi-uc"/>).</t>

<figure title="Packet/Optical Integration use case" anchor="fig-poi-uc"><artwork type="ascii-art" name="poi-use-case.txt"><![CDATA[
                                +----------------+
                                |                |
                                | Packet/Optical |
                                |  Coordinator   |
                                |                |
                                +---+------+-----+
                                    |      |
                       +------------+      |
                       |                   +-----------+
                +------V-----+                         |
                |            |                  +------V-----+
                | Packet     |                  |            |
                | Domain     |                  | Optical    |
                | Controller |                  | Domain     |
                |            |                  | Controller |
                +------+-----+                  +-------+----+
                       |                                |
              .........V.........................       |
              :          packet domain          :       |
          +----+                               +----+   |
          | R1 |= = = = = = = = = = = = = = = =| R2 |   |
          +-+--+                               +--+-+   |
            | :                                 : |     |
            | :................................ : |     |
            |                                     |     |
            |               +-----+               |     |
            |    ...........| Opt |...........    |     |
            |    :          |  C  |          :    |     |
            |    :         /+--+--+\         :    |     |
            |    :        /    |    \        :    |     |
            |    :       /     |     \       :    |     |
            |   +-----+ /   +--+--+   \ +-----+   |     |
            |   | Opt |/    | Opt |    \| Opt |   |     |
            +---|  A  |     |  D  |     |  B  |---+     |
                +-----+\    +--+--+    /+-----+         |
                 :      \      |      /      :          |
                 :       \     |     /       :          |
                 :        \ +--+--+  / optical<---------+
                 :         \| Opt |/  domain :
                 :..........|  E  |..........:
                            +-----+
]]></artwork></figure>

<t><xref target="fig-poi-uc"/> as well as <xref target="fig-poi-abstraction"/> describe two different
   examples of packet/optical topologies and only show a partial view of the
   packet network connectivity, before additional packet connectivity is
   provided by the optical network.</t>

<t>It is assumed that the Optical Domain Controller provides to the
   Packet/Optical Coordinator an abstracted view of the optical network.
   A possible abstraction could be to represent the whole optical
   network as one "virtual node" with "virtual ports" connected to the
   access links, as shown in <xref target="fig-poi-abstraction"/>.</t>

<t>It is also assumed that Packet Domain Controller can provide the
   Packet/Optical Coordinator the information it needs to set up
   connectivity between packet nodes through the optical network (e.g.,
   the access links).</t>

<t>The path computation request helps the Packet/Optical Coordinator to
   know the real connections that can be provided by the optical
   network.</t>

<figure title="Packet and Optical Topology Abstractions" anchor="fig-poi-abstraction"><artwork type="ascii-art" name="poi-topology-abstraction.txt"><![CDATA[
                       ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,.
                      ,  Packet/Optical Coordinator view          ,
                     ,                              +----+       , .
                    ,                               |    |      ,
                   ,                                | R2 |     ,   .
                  ,  +----+  +------------ +       /+----+    ,
                 ,   |    |  |             |/-----/ / /      ,     .
                ,    | R1 |--O VP1     VP4 O       / /      ,
               ,     |    |\ |             | /----/ /      ,       .
              ,      +----+ \|             |/      /      ,
             ,        /      O VP2     VP5 O      /      ,         .
            ,        /       |             |  +----+    ,
           ,        /        |             |  |    |   ,           .
          ,        /         O VP3     VP6 O--| R4 |  ,
         ,     +----+ /-----/|_____________|  +----+ ,             .
        ,      |    |/       +------------ +        ,
       ,       | R3 |                              ,               .
      ,        +----+                             ,,,,,,,,,,,,,,,,,
     ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,                ,.
     . Packet Domain Controller view                +----+       ,
       only packet nodes and packet links           |    |      ,  .
     . with access links to the optical network     | R2 |     ,
                  ,  +----+                        /+----+    ,    .
     .           ,   |    |                 /-----/ / /      ,
                ,    | R1 |---                     / /      ,      .
     .         ,     +----+\                 /----/ /      ,
              ,        /    \               /      /      ,        .
     .       ,        /                           /      ,
            ,        /                        +----+    ,          .
     .     ,        /                         |    |   ,
          ,        /                       ---| R4 |  ,            .
     .   ,     +----+ /-----/                 +----+ ,
        ,      |    |/                              ,              .
     . ,       | R3 |                              ,
      ,        +----+                             ,,,,,,,,,,,,,,,,,.
     .,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,                ,
       Optical Domain Controller view                            , .
     . only optical nodes,        +--+                          ,
       optical links and         /|OF|                         ,   .
     . access links from the  +--++--+             /          ,
       packet network         |OA|    \     /-----/ /        ,     .
     .          ,          ---+--+--\  +--+/       /        ,
               ,           \   |  \  \-|OE|-------/        ,       .
     .        ,             \  |   \ /-+--+               ,
             ,               \+--+  X    |               ,         .
     .      ,                 |OB|-/ \   |              ,
           ,                  +--+-\  \+--+            ,           .
     .    ,                  /   \  \--|OD|---        ,
         ,            /-----/     +--+ +--+          ,             .
     .  ,            /            |OC|/             ,
       ,                          +--+             ,               .
     .,                                           ,,,,,,,,,,,,,,,,,,
      ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,                ,
     . Actual Physical View                         +----+       ,
                    ,             +--+              |    |      ,
     .             ,             /|OF|              | R2 |     ,
                  ,  +----+   +--++--+             /+----+    ,
     .           ,   |    |   |OA|    \     /-----/ / /      ,
                ,    | R1 |---+--+--\  +--+/       / /      ,
     .         ,     +----+\   |  \  \-|OE|-------/ /      ,
              ,        /    \  |   \ /-+--+        /      ,
     .       ,        /      \+--+  X    |        /      ,
            ,        /        |OB|-/ \   |    +----+    ,
     .     ,        /         +--+-\  \+--+   |    |   ,
          ,        /         /   \  \--|OD|---| R4 |  ,
     .   ,     +----+ /-----/     +--+ +--+   +----+ ,
        ,      |    |/            |OC|/             ,
     . ,       | R3 |             +--+             ,
      ,        +----+                             ,
     .,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
]]></artwork></figure>

<t>In this use case, the Packet/Optical Coordinator needs to set up an
   optimal underlying path for an IP link between R1 and R2.</t>

<t>As depicted in <xref target="fig-poi-abstraction"/>, the Packet/Optical Coordinator has only an
   "abstracted view" of the physical network, and it does not know the
   feasibility or the cost of the possible optical paths (e.g., VP1-VP4
   and VP2-VP5), which depend on the current status of the physical
   resources within the optical network and on vendor-specific optical
   attributes.</t>

<t>The Packet/Optical Coordinator can request the underlying Optical
   Domain Controller to compute a set of potential optimal paths, taking
   into account optical constraints. Then, based on its own constraints,
   policy and knowledge (e.g. cost of the access links), it can choose
   which one of these potential paths to use to set up the optimal end-
   to-end path crossing optical network.</t>

<figure title="Packet/Optical Integration path computation example" anchor="fig-poi-example"><artwork type="ascii-art" name="poi-example.txt"><![CDATA[
                    ............................
                    :                          :
                    O VP1                  VP4 O
           cost=10 /:\                        /:\ cost=10
                  / : \----------------------/ : \
          +----+ /  :         cost=50          :  \ +----+
          |    |/   :                          :   \|    |
          | R1 |    :                          :    | R2 |
          |    |\   :                          :   /|    |
          +----+ \  :  /--------------------\  :  / +----+
                  \ : /       cost=55        \ : /
            cost=5 \:/                        \:/ cost=5
                    O VP2                  VP5 O
                    :                          :
                    :..........................:
]]></artwork></figure>

<t>For example, in <xref target="fig-poi-example"/>, the Packet/Optical Coordinator can request
   the Optical Domain Controller to compute the paths between VP1-VP4
   and VP2-VP5 and then decide to set up the optimal end-to-end path
   using the VP2-VP5 optical path even if this is not the optimal path
   from the optical domain perspective.</t>

<t>Considering the dynamicity of the connectivity constraints of an
   optical domain, it is possible that a path computed by the Optical
   Domain Controller when requested by the Packet/Optical Coordinator is
   no longer valid/available when the Packet/Optical Coordinator
   requests it to be set up. This is further discussed in <xref target="rpc-motivation"/>.</t>

</section>
<section anchor="md-uc"><name>Multi-domain TE networks</name>

<t>In this use case there are two TE domains which are interconnected
   together by multiple inter-domains links.</t>

<t>A possible example could be a multi-domain optical network.</t>

<figure title="Multi-domain multi-link interconnection" anchor="md-ml-connection"><artwork type="ascii-art" name="multi-domain-use-case.txt"><![CDATA[
                            +--------------+
                            | Multi-Domain |
                            | Controller   |
                            +---+------+---+
                                |      |
                   +------------+      |
                   |                   +-----------+
            +------V-----+                         |
            |            |                         |
            | TE Domain  |                  +------V-----+
            | Controller |                  |            |
            |      1     |                  | TE Domain  |
            +------+-----+                  | Controller |
                   |                        |      2     |
                   |                        +------+-----+
          .........V..........                     |
          :                  :                     |
         +-----+             :                     |
         |     |             :            .........V..........
         |  X  |             :            :                  :
         |     |          +-----+      +-----+                :
         +-----+          |     |      |     |               :
          :               |  C  |------|  E  |               :
      +-----+    +-----+ /|     |      |     |\ +-----+    +-----+
      |     |    |     |/ +-----+      +-----+ \|     |    |     |
      |  A  |----|  B  |     :            :     |  G  |----|  H  |
      |     |    |     |\    :            :    /|     |    |     |
      +-----+    +-----+ \+-----+      +-----+/ +-----+    +-----+
          :               |     |      |     |               :
          :               |  D  |------|  F  |               :
          :               |     |      |     |          +-----+
          :               +-----+      +-----+          |     |
          :                  :            :             |  Y  |
          :                  :            :             |     |
          :   TE domain 1    :            : TE domain 2 +-----+
          :..................:            :.................:
]]></artwork></figure>

<t>In order to set up an end-to-end multi-domain TE path (e.g., between
   nodes A and H), the Multi-Domain Controller needs to know the
   feasibility or the cost of the possible TE paths within the two TE
   domains, which depend on the current status of the physical resources
   within each TE domain. This is more challenging in case of optical
   networks because the optimal paths depend also on vendor-specific
   optical attributes (which may be different in the two domains if they
   are provided by different vendors).</t>

<t>In order to set up a multi-domain TE path (e.g., between nodes A and
   H), the Multi-Domain Controller can request the TE Domain Controllers
   to compute a set of intra-domain optimal paths and take decisions
   based on the information received. For example:</t>

<t><list style="symbols">
  <t>The Multi-Domain Controller asks TE Domain Controllers to provide
set of paths between A-C, A-D, E-H and F-H</t>
  <t>TE Domain Controllers return a set of feasible paths with the
associated costs: the path A-C is not part of this set (in optical
networks, it is typical to have some paths not being feasible due
to optical constraints that are known only by the Optical Domain
Controller)</t>
  <t>The Multi-Domain Controller will select the path A-D-F-H since it
is the only feasible multi-domain path and then request the TE
Domain Controllers to set up the A-D and F-H intra-domain paths</t>
  <t>If there are multiple feasible paths, the Multi-Domain Controller
can select the optimal path knowing the cost of the intra-domain
paths (provided by the TE domain controllers) and the cost of the
inter-domain links (known by the Multi-Domain Controller)  <vspace blankLines='1'/>
This approach may have some scalability issues when the number of TE
domains is quite big (e.g. 20).  <vspace blankLines='1'/>
In this case, it would be worthwhile using the abstract TE topology
information provided by the TE Domain Controllers to limit the number
of potential optimal end-to-end paths and then request path
computation from fewer TE Domain Controllers in order to decide what
the optimal path within this limited set is.  <vspace blankLines='1'/>
For more details, see <xref target="topo-pc-complement"/>.</t>
</list></t>

</section>
<section anchor="dci-uc"><name>Data Center Interconnections</name>

<t>In these use case, there is a TE domain which is used to provide
   connectivity between Data Centers which are connected with the TE
   domain using access links.</t>

<figure title="Data Center Interconnection use case" anchor="fig-dci-uc"><artwork type="ascii-art" name="dci-use-case.txt"><![CDATA[
                        +--------------+
                        | Cloud Network|
                        | Orchestrator |
                        +--------------+
                          |  |  |  |
            +-------------+  |  |  +------------------------+
            |                |  +------------------+        |
            |       +--------V---+                 |        |
            |       |            |                 |        |
            |       | TE Network |                 |        |
     +------V-----+ | Controller |          +------V-----+  |
     | DC         | +------------+          | DC         |  |
     | Controller |     |                   | Controller |  |
     +------------+     |   +-----+         +------------+  |
          |         ....V...|     |........         |       |
          |         :       |  P  |       :         |       |
     .....V.....    :      /+-----+\      :    .....V.....  |
     :         :  +-----+ /    |    \ +-----+  :         :  |
     :  DC1 || :  |     |/     |     \|     |  :  DC2 || :  |
     :    ||||----| PE1 |      |      | PE2 |----   |||| :  |
     : _|||||| :  |     |\     |     /|     |  : _|||||| :  |
     :         :  +-----+ \ +-----+ / +-----+  :         :  |
     :.........:    :      \|     |/      :    :.........:  |
                    :.......| PE3 |.......:                 |
                            |     |                         |
                            +-----+               +---------V--+
                          .....|.....             | DC         |
                          :         :             | Controller |
                          :  DC3 || :             +------------+
                          :    |||| :                  |
                          : _|||||| <------------------+
                          :         :
                          :.........:
]]></artwork></figure>

<t>In this use case, there is the need to transfer data from Data Center
   1 (DC1) to either DC2 or DC3 (e.g. workload migration).</t>

<t>The optimal decision depends both on the cost of the TE path (DC1-DC2
   or DC1-DC3) and of the Data Center resources within DC2 or DC3.</t>

<t>The Cloud Network Orchestrator needs to make a decision for optimal
   connection based on TE network constraints and Data Center resources.</t>

<t>It may not be able to make this decision because it has only an
   abstract view of the TE network (as in <xref target="poi-uc"/>).</t>

<t>The Cloud Network Orchestrator can request to the TE Network
   Controller to compute the cost of the possible TE paths (e.g., DC1-
   DC2 and DC1-DC3) and to the DC Controller to provide the information
   it needs about the required Data Center resources within DC2 and DC3
   and then it can take the decision about the optimal solution based on
   this information and its policy.</t>

</section>
<section anchor="brpc-uc"><name>Backward Recursive Path Computation scenario</name>

<t><xref target="RFC5441"/> has defined the Virtual Source Path Tree (VSPT) flag within the RP (Request Parameters) object in order to compute inter-domain paths following a
   "Backward Recursive Path Computation" (BRPC) method. The main
   principle is to forward the PCReq message up to the destination
   domain. Then, each PCE involved in the computation will compute its
   part of the path and send it back to the requester through PCE
   Response message. The resulting computation is spread from
   destination PCE to source PCE. Each PCE is in charge of merging the
   path it received with the one it calculated. At the end, the source
   PCE merges its local part of the path with the received one to
   achieve the end-to-end path.</t>

<t><xref target="fig-brpc-example"/> below show a typical BRPC scenario where 3 PCEs cooperate to
   compute inter-domain paths.</t>

<figure title="BRPC Scenario" anchor="fig-brpc-example"><artwork type="ascii-art" name="brpc-scenario.txt"><![CDATA[
                   +----------------+          +----------------+
                   |  Domain (B)    |          |  Domain (C)    |
                   |                |          |                |
                   |        /-------|---PCEP---|--------\       |
                   |       /        |          |         \      |
                   |   (PCE)        |          |   -    (PCE)   |
                   |    /           <---------->  |D|           |
                   |   /            |  Inter   |   -            |
                   +---|----^-------+  Domain  +----------------+
                       |    |          Link
                     PCEP   |
                       |    | Inter-domain Link
                       |    |
                   +---|----v-------+
                   |   |            |
                   |   | Domain (A) |
                   |   \            |
                   |  (PCE)    -    |
                   |          |S|   |
                   |           -    |
                   +----------------+
]]></artwork></figure>

<t>In this use case, a client can use the YANG data model defined in
   this document to request path computation from the PCE that controls
   the source of the tunnel. For example, a client can request to the
   PCE of domain A to compute a path from a source S, within domain A,
   to a destination D, within domain C. Then PCE of domain A will use
   PCEP protocol, as per <xref target="RFC5441"/>, to compute the path from S to D and
   in turn gives the final answer to the requester.</t>

</section>
<section anchor="hpce-uc"><name>Hierarchical PCE scenario</name>

<t><xref target="RFC6805"/> has defined an architecture and extensions to the PCE
   standard to compute inter-domain path following a hierarchical
   method. Two new roles have been defined: parent PCE and child PCE.
   The parent PCE is in charge to coordinate the end-to-end path
   computation. For that purpose it sends to each child PCE involved in
   the multi-domain path computation a PCE Request message to obtain the
   local part of the path. Once received all answer through PCE Response
   message, the parent PCE will merge the different local parts of the
   path to achieve the end-to-end path.</t>

<t><xref target="fig-hpce-example"/> below shows a typical hierarchical scenario where a parent
   PCE request end-to-end path to the different child PCE. Note that a
   PCE could take independently the role of child or parent PCE
   depending of which PCE will request the path.</t>

<figure title="Hierarchical domain topology from RFC6805" anchor="fig-hpce-example"><artwork type="ascii-art" name="hierarchical-domain-topology.txt"><![CDATA[
    -----------------------------------------------------------------
    |   Domain 5                                                      |
    |                              -----                              |
    |                             |PCE 5|                             |
    |                              -----                              |
    |                                                                 |
    |    ----------------     ----------------     ----------------   |
    |   | Domain 1       |   | Domain 2       |   | Domain 3       |  |
    |   |                |   |                |   |                |  |
    |   |        -----   |   |        -----   |   |        -----   |  |
    |   |       |PCE 1|  |   |       |PCE 2|  |   |       |PCE 3|  |  |
    |   |        -----   |   |        -----   |   |        -----   |  |
    |   |                |   |                |   |                |  |
    |   |            ----|   |----        ----|   |----            |  |
    |   |           |BN11+---+BN21|      |BN23+---+BN31|           |  |
    |   |   -        ----|   |----        ----|   |----        -   |  |
    |   |  |S|           |   |                |   |           |D|  |  |
    |   |   -        ----|   |----        ----|   |----        -   |  |
    |   |           |BN12+---+BN22|      |BN24+---+BN32|           |  |
    |   |            ----|   |----        ----|   |----            |  |
    |   |                |   |                |   |                |  |
    |   |         ----   |   |                |   |   ----         |  |
    |   |        |BN13|  |   |                |   |  |BN33|        |  |
    |    -----------+----     ----------------     ----+-----------   |
    |                \                                /               |
    |                 \       ----------------       /                |
    |                  \     |                |     /                 |
    |                   \    |----        ----|    /                  |
    |                    ----+BN41|      |BN42+----                   |
    |                        |----        ----|                       |
    |                        |                |                       |
    |                        |        -----   |                       |
    |                        |       |PCE 4|  |                       |
    |                        |        -----   |                       |
    |                        |                |                       |
    |                        | Domain 4       |                       |
    |                         ----------------                        |
    |                                                                 |
     -----------------------------------------------------------------
]]></artwork></figure>

<t>In this use case, a client can use the YANG data model defined in
   this document to request to the parent PCE a path from a source S to
   a destination D. The parent PCE will in turn contact the child PCEs
   through PCEP protocol to compute the end-to-end path and then return
   the computed path to the client, using the YANG data model defined in
   this document. For example the YANG data model can be used to request
   to PCE5 acting as parent PCE to compute a path from source S, within
   domain 1, to destination D, within domain 3. PCE5 will contact child
   PCEs of domain 1, 2 and 3 to obtain local part of the end-to-end path
   through the PCEP protocol. Once received the PCRep message, it
   merges the answers to compute the end-to-end path and send it back to
   the client.</t>

</section>
</section>
<section anchor="motivations"><name>Motivations</name>

<t>This section provides the motivation for the YANG data model defined
   in this document.</t>

<t><xref target="yang-motivation"/> describes the motivation for a YANG data model to request
   path computation.</t>

<t><xref target="topo-interaction"/> describes the motivation for a YANG data model which
   complements the TE topology YANG data model defined in <xref target="RFC8795"/>.</t>

<t><xref target="rpc-motivation"/> describes the motivation for a YANG RPC which complements
   the TE tunnel YANG data model defined in <xref target="I-D.ietf-teas-yang-te"/>.</t>

<section anchor="yang-motivation"><name>Motivation for a YANG Model</name>

<section anchor="benefits-of-common-data-models"><name>Benefits of common data models</name>

<t>The YANG data model for requesting path computation is closely
   aligned with the YANG data models that provide (abstract) TE topology
   information, i.e., <xref target="RFC8795"/> as well as that are used to configure
   and manage TE tunnels, i.e., <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>There are many benefits in aligning the data model used for path
   computation requests with the YANG data models used for TE topology
   information and for TE tunnels configuration and management:</t>

<t><list style="symbols">
  <t>There is no need for an error-prone mapping or correlation of
information.</t>
  <t>It is possible to use the same endpoint identifiers in path
computation requests and in the topology modeling.</t>
  <t>The attributes used for path computation constraints are the same
as those used when setting up a TE tunnel.</t>
</list></t>

</section>
<section anchor="benefits-of-a-single-interface"><name>Benefits of a single interface</name>

<t>The system integration effort is typically lower if a single,
   consistent interface is used by controllers, i.e., one data modeling
   language (i.e., YANG) and a common protocol (e.g., NETCONF or
   RESTCONF).</t>

<t>Practical benefits of using a single, consistent interface include:</t>

<t><list style="numbers">
  <t>Simple authentication and authorization: The interface between
different components has to be secured. If different protocols
have different security mechanisms, ensuring a common access
control model may result in overhead. For instance, there may be a
need to deal with different security mechanisms, e.g., different
credentials or keys. This can result in increased integration
effort.</t>
  <t>Consistency: Keeping data consistent over multiple different
interfaces or protocols is not trivial. For instance, the sequence
of actions can matter in certain use cases, or transaction
semantics could be desired. While ensuring consistency within one
protocol can already be challenging, it is typically cumbersome to
achieve that across different protocols.</t>
  <t>Testing: System integration requires comprehensive testing,
including corner cases. The more different technologies are
involved, the more difficult it is to run comprehensive test cases
and ensure proper integration.</t>
  <t>Middle-box friendliness: Provider and consumer of path computation
requests may be located in different networks, and middle-boxes
such as firewalls, NATs, or load balancers may be deployed. In
such environments it is simpler to deploy a single protocol. Also,
it may be easier to debug connectivity problems.</t>
  <t>Tooling reuse: Implementers may want to implement path computation
requests with tools and libraries that already exist in
controllers and/or orchestrators, e.g., leveraging the rapidly
growing eco-system for YANG tooling.</t>
</list></t>

</section>
<section anchor="extensibility"><name>Extensibility</name>

<t>Path computation is only a subset of the typical functionality of a
   controller. In many use cases, issuing path computation requests
   comes along with the need to access other functionality on the same
   system. In addition to obtaining TE topology, for instance also
   configuration of services (set-up/modification/deletion) may be
   required, as well as:</t>

<t><list style="numbers">
  <t>Receiving notifications for topology changes as well as
integration with fault management</t>
  <t>Performance management such as retrieving monitoring and telemetry
data</t>
  <t>Service assurance, e.g., by triggering OAM functionality</t>
  <t>Other fulfilment and provisioning actions beyond tunnels and
services, such as changing QoS configurations  <vspace blankLines='1'/>
YANG is a very extensible and flexible data modeling language that
can be used for all these use cases.</t>
</list></t>

</section>
</section>
<section anchor="topo-interaction"><name>Interactions with TE topology</name>

<t>The use cases described in <xref target="use-cases"/> have been described assuming
   that the topology view exported by each underlying controller to its
   client is aggregated using the "virtual node model", defined in
   <xref target="RFC7926"/>.</t>

<t>TE topology information, e.g., as provided by <xref target="RFC8795"/>, could in
   theory be used by an underlying controller to provide TE information
   to its client thus allowing a PCE available within its client to
   perform multi-domain path computation on its own, without requesting
   path computations to the underlying controllers.</t>

<t>In case the client does not implement a PCE function, as discussed in
   <xref target="intro"/>, it could not perform path computation based on TE topology
   information and would instead need to request path computation from
   the underlying controllers to get the information it needs to find
   the optimal end-to-end path.</t>

<t>In case the client implements a PCE function, as discussed in 
   <xref target="intro"/>, the TE topology information needs to be complete and accurate,
   which would bring to scalability issues.</t>

<t>Using TE topology to provide a "virtual link model" aggregation, as
   described in <xref target="RFC7926"/>, may be insufficient, unless the aggregation
   provides complete and accurate information, which would still cause
   scalability issues, as described in <xref target="topo-aggregation"/> below.</t>

<t>Using TE topology abstraction, as described in <xref target="RFC7926"/>, may lead to
   compute an unfeasible path, as described in <xref target="RFC7926"/> in 
   <xref target="topo-abstraction"/> below.</t>

<t>Therefore when computing an optimal multi-domain path, there is a
   scalability trade-off between providing complete and accurate TE
   information and the number of path computation requests to the
   underlying controllers.</t>

<t>The TE topology information used, in a complimentary way, to reduce
   the number for path computation requests to the underlying
   controllers, are described in <xref target="topo-pc-complement"/> below.</t>

<section anchor="topo-aggregation"><name>TE topology aggregation</name>

<t>Using the TE topology model, as defined in <xref target="RFC8795"/>, the underlying
   controller can export the whole TE domain as a single TE node with a
   "detailed connectivity matrix" (which provides specific TE
   attributes, such as delay, Shared Risk Link Groups (SRLGs) and other
   TE metrics, between each ingress and egress links).</t>

<t>The information provided by the "detailed connectivity matrix" would
   be equivalent to the information that should be provided by "virtual
   link model" as defined in <xref target="RFC7926"/>.</t>

<t>For example, in the Packet/Optical Integration use case, described in
   <xref target="poi-uc"/>, the Optical Domain Controller can make the information
   shown in <xref target="fig-poi-example"/> available to the Packet/Optical Coordinator as part
   of the TE topology information and the Packet/Optical Coordinator
   could use this information to calculate on its own the optimal path
   between R1 and R2, without requesting any additional information to
   the Optical Domain Controller.</t>

<t>However, when designing the amount of information to provide within
   the "detailed connectivity matrix", there is a tradeoff to be
   considered between accuracy (i.e., providing "all" the information
   that might be needed by the PCE available within the client) and
   scalability.</t>

<t><xref target="poi-multi-path"/> below shows another example, similar to <xref target="fig-poi-example"/>, where
   there are two possible Optical paths between VP1 and VP4 with
   different properties (e.g., available bandwidth and cost).</t>

<figure title="Packet/Optical Integration path computation Example with multiple choices" anchor="poi-multi-path"><artwork type="ascii-art" name="poi-example-multiple.txt"><![CDATA[
                    ............................
                    :  /--------------------\  :
                    : /       cost=65        \ :
                    :/    available-bw=10G    \:
                    O VP1                  VP4 O
           cost=10 /:\                        /:\ cost=10
                  / : \----------------------/ : \
          +----+ /  :         cost=50          :  \ +----+
          |    |/   :     available-bw=2G      :   \|    |
          | R1 |    :                          :    | R2 |
          |    |\   :                          :   /|    |
          +----+ \  :  /--------------------\  :  / +----+
                  \ : /       cost=55        \ : /
            cost=5 \:/    available-bw=3G     \:/ cost=5
                    O VP2                  VP5 O
                    :                          :
                    :..........................:
]]></artwork></figure>

<t>If the information in the "detailed connectivity matrix" is not
   complete/accurate, we can have the following drawbacks:</t>

<t><list style="symbols">
  <t>If only the VP1-VP4 path with available bandwidth of 2 Gb/s and
cost 50 is reported, the client's PCE will fail to compute a 5
Gb/s path between routers R1 and R2, although this would be
feasible;</t>
  <t>If only the VP1-VP4 path with available bandwidth of 10 Gb/s and
cost 65 is reported, the client's PCE will compute, as optimal,
the 1 Gb/s path between R1 and R2 going through the VP2-VP5 path
within the optical domain while the optimal path would actually be
the one going thought the VP1-VP4 sub-path (with cost 50) within
the optical domain.  <vspace blankLines='1'/>
Reporting all the information, as in <xref target="poi-multi-path"/>, using the "detailed
 connectivity matrix", is quite challenging from a scalability
 perspective. The amount of this information is not just based on
 number of end points (which would scale as N-square), but also on
 many other parameters, including client rate, user
 constraints/policies for the service, e.g. max latency &lt; N ms, max
 cost, etc., exclusion policies to route around busy links, min
 Optical Signal to Noise Ratio (OSNR) margin, max pre-Forward Error
 Correction (FEC) Bit Error Rate (BER) etc. All these constraints
 could be different based on connectivity requirements.  <vspace blankLines='1'/>
It is also worth noting that the "connectivity matrix" has been
 originally defined in Wavelength Switched Optical Networks (WSON),
 <xref target="RFC7446"/>, to report the connectivity constrains of a physical node
 within the Wavelength Division Multiplexing (WDM) network: the
 information it contains is pretty "static" and therefore, once taken
 and stored in the TE data base, it can be always being considered
 valid and up-to-date in path computation request.  <vspace blankLines='1'/>
The "connectivity matrix" is sometimes confused with "optical reach
 table" that contain multiple (e.g. k-shortest) regen-free reachable
 paths for every A-Z node combination in the network. Optical reach
 tables can be calculated offline, utilizing vendor optical design and
 planning tools, and periodically uploaded to the Controller: these
 optical path reach tables are fairly static. However, to get the
 connectivity matrix, between any two sites, either a regen free path
 can be used, if one is available, or multiple regen free paths are
 concatenated to get from the source to the destination, which can be
 a very large combination. Additionally, when the optical path within
 optical domain needs to be computed, it can result in different paths
 based on input objective, constraints, and network conditions. In
 summary, even though "optical reach table" is fairly static, which
 regen free paths to build the connectivity matrix between any source
 and destination is very dynamic, and is done using very sophisticated
 routing algorithms.  <vspace blankLines='1'/>
Using the "basic connectivity matrix" with an abstract node to
 abstract the information regarding the connectivity constraints of an
 Optical domain, would make this information more "dynamic" since the
 connectivity constraints of an optical domain can change over time
 because some optical paths that are feasible at a given time may
 become unfeasible at a later time when e.g., another optical path is
 established.  <vspace blankLines='1'/>
The information in the "detailed connectivity matrix" is even more
 dynamic since the establishment of another optical path may change
 some of the parameters (e.g., delay or available bandwidth) in the
 "detailed connectivity matrix" while not changing the feasibility of
 the path.  <vspace blankLines='1'/>
There is therefore the need to keep the information in the "detailed
 connectivity matrix" updated which means that there another tradeoff
 between the accuracy (i.e., providing "all" the information that
 might be needed by the client's PCE) and having up-to-date
 information. The more the information is provided and the longer it
 takes to keep it up-to-date which increases the likelihood that the
 client's PCE computes paths using not updated information.  <vspace blankLines='1'/>
It seems therefore quite challenging to have a "detailed connectivity
 matrix" that provides accurate, scalable and updated information to
 allow the client's PCE to take optimal decisions by its own.  <vspace blankLines='1'/>
Considering the example in <xref target="poi-multi-path"/> with the approach defined in this
 document, the client, when it needs to set up an end-to-end path, it
 can request the Optical Domain Controller to compute a set of optimal
 paths (e.g., for VP1-VP4 and VP2-VP5) and take decisions based on the
 information received:</t>
  <t>When setting up a 5 Gb/s path between routers R1 and R2, the
Optical Domain Controller may report only the VP1-VP4 path as the
only feasible path: the Packet/Optical Coordinator can
successfully set up the end-to-end path passing though this
optical path;</t>
  <t>When setting up a 1 Gb/s path between routers R1 and R2, the
Optical Domain Controller (knowing that the path requires only 1
Gb/s) can report both the VP1-VP4 path, with cost 50, and the VP2-
VP5 path, with cost 65. The Packet/Optical Coordinator can then
compute the optimal path which is passing thought the VP1-VP4 sub-
path (with cost 50) within the optical domain.</t>
</list></t>

</section>
<section anchor="topo-abstraction"><name>TE topology abstraction</name>

<t>Using the TE topology model, as defined in <xref target="RFC8795"/>, the underlying
   controller can export to its client an abstract TE topology, composed
   by a set of TE nodes and TE links, representing the abstract view of
   the topology under its control.</t>

<t>For example, in the multi-domain TE network use case, described in
   <xref target="md-uc"/>, the TE Domain Controller 1 can export a TE topology
   encompassing the TE nodes A, B, C and D and the TE links
   interconnecting them. In a similar way, the TE Domain Controller 2
   can export a TE topology encompassing the TE nodes E, F, G and H and
   the TE links interconnecting them.</t>

<t>In this example, for simplicity reasons, each abstract TE node maps
   with each physical node, but this is not necessary.</t>

<t>In order to set up a multi-domain TE path (e.g., between nodes A and
   H), the Multi-Domain Controller can compute by its own an optimal
   end-to-end path based on the abstract TE topology information
   provided by the domain controllers. For example:</t>

<t><list style="symbols">
  <t>Multi-Domain Controller can compute, based on its own TED data,
the optimal multi-domain path being A-B-C-E-G-H, and then request
the TE Domain Controllers to set up the A-B-C and E-G-H intra-
domain paths</t>
  <t>But, during path set-up, the TE Domain Controller may find out
that A-B-C intra-domain path is not feasible (as discussed in
<xref target="md-uc"/>, in optical networks it is typical to have some paths
not being feasible due to optical constraints that are known only
by the Optical Domain Controller), while only the path A-B-D is
feasible</t>
  <t>So what the Multi-Domain Controller has computed is not good and
it needs to re-start the path computation from scratch  <vspace blankLines='1'/>
As discussed in <xref target="topo-aggregation"/>, providing more extensive abstract
information from the TE Domain Controllers to the Multi-Domain
Controller may lead to scalability problems.  <vspace blankLines='1'/>
In a sense this is similar to the problem of routing and wavelength
assignment within an optical domain. It is possible to do first
routing (step 1) and then wavelength assignment (step 2), but the
chances of ending up with a good path is low. Alternatively, it is
possible to do combined routing and wavelength assignment, which is
known to be a more optimal and effective way for optical path set-up.
Similarly, it is possible to first compute an abstract end-to-end
path within the Multi-Domain Controller (step 1) and then compute an
intra-domain path within each optical domain (step 2), but there are
more chances not to find a path or to get a suboptimal path than by
performing multiple per-domain path computations and then stitching
them together.</t>
</list></t>

</section>
<section anchor="topo-pc-complement"><name>Complementary use of the TE topology</name>

<t>As discussed in <xref target="md-uc"/>, there are some scalability issues with
   path computation requests in a multi-domain TE network with many TE
   domains, in terms of the number of requests to send to the TE Domain
   Controllers. It would therefore be worthwhile using the abstract TE
   topology information provided by the TE Domain Controllers to limit
   the number of requests.</t>

<t>An example can be described considering the multi-domain abstract TE
   topology shown in <xref target="fig-topo-many-domains"/>. In this example, an end-to-end TE path
   between domains A and F needs to be set up. The transit TE domain
   should be selected between domains B, C, D and E.</t>

<figure title="Multi-domain with many domains (Topology information)" anchor="fig-topo-many-domains"><artwork type="ascii-art" name="many-domains-topology.txt"><![CDATA[
                          .........B.........
                          : _ _ _ _ _ _ _ _ :
                          :/               \:
                      +---O  NOT FEASIBLE   O---+
                cost=5|   :                 :   |
    ......A......     |   :.................:   |     ......F......
    :           :     |                         |     :           :
    :           O-----+   .........C.........   +-----O           :
    :           :         : /-------------\ :         :           :
    :           :         :/               \:         :           :
    :  cost<=20 O---------O   cost <= 30    O---------O cost<=20  :
    :          /: cost=5  :                 : cost=5  :\          :
    :  /------/ :         :.................:         : \------\  :
    : /         :                                     :         \ :
    :/ cost<=25 :         .........D.........         : cost<=25 \:
    O-----------O-------+ : /-------------\ : +-------O-----------O
    :\          : cost=5| :/               \: |cost=5 :          /:
    : \         :       +-O   cost <= 30    O-+       :         / :
    :  \------\ :         :                 :         : /------/  :
    : cost>=30 \:         :.................:         :/ cost>=30 :
    :           O-----+                         +-----O           :
    :...........:     |   .........E.........   |     :...........:
                      |   : /-------------\ :   |
                cost=5|   :/               \:   |cost=5
                      +---O   cost >= 30    O---+
                          :                 :
                          :.................:
]]></artwork></figure>

<t>The actual cost of each intra-domain path is not known a priori from
   the abstract topology information. The Multi-Domain Controller only
   knows, from the TE topology provided by the underlying domain
   controllers, the feasibility of some intra-domain paths and some
   upper-bound and/or lower-bound cost information. With this
   information, together with the cost of inter-domain links, the Multi-
   Domain Controller can understand by its own that:</t>

<t><list style="symbols">
  <t>Domain B cannot be selected as the path connecting domains A and F
is not feasible;</t>
  <t>Domain E cannot be selected as a transit domain since it is known
from the abstract topology information provided by domain
controllers that the cost of the multi-domain path A-E-F (which is
100, in the best case) will be always be higher than the cost of
the multi-domain paths A-D-F (which is 90, in the worst case) and
A-C-F (which is 80, in the worst case).  <vspace blankLines='1'/>
Therefore, the Multi-Domain Controller can understand by its own that
 the optimal multi-domain path could be either A-D-F or A-C-F but it
 cannot know which one of the two possible option actually provides
 the optimal end-to-end path.  <vspace blankLines='1'/>
The Multi-Domain Controller can therefore request path computation
 only to the TE Domain Controllers A, D, C and F (and not to all the
 possible TE Domain Controllers).</t>
</list></t>

<figure title="Multi-domain with many domains (Path Computation information)" anchor="fig-pc-many-domains"><artwork type="ascii-art" name="many-domain-path-computation.txt"><![CDATA[
                          .........B.........
                          :                 :
                      +---O                 O---+
    ......A......     |   :.................:   |     ......F......
    :           :     |                         |     :           :
    :           O-----+   .........C.........   +-----O           :
    :           :         : /-------------\ :         :           :
    :           :         :/               \:         :           :
    :  cost=15  O---------O    cost = 25    O---------O  cost=10  :
    :          /: cost=5  :                 : cost=5  :\          :
    :  /------/ :         :.................:         : \------\  :
    : /         :                                     :         \ :
    :/ cost=10  :         .........D.........         : cost=15  \:
    O-----------O-------+ : /-------------\ : +-------O-----------O
    :           : cost=5| :/               \: |cost=5 :           :
    :           :       +-O    cost = 15    O-+       :           :
    :           :         :                 :         :           :
    :           :         :.................:         :           :
    :           O-----+                         +-----O           :
    :...........:     |   .........E.........   |     :...........:
                      |   :                 :   |
                      +---O                 O---+
                          :.................:
]]></artwork></figure>

<t>Based on these requests, the Multi-Domain Controller can know the
   actual cost of each intra-domain paths which belongs to potential
   optimal end-to-end paths, as shown in <xref target="fig-pc-many-domains"/>, and then compute the
   optimal end-to-end path (e.g., A-D-F, having total cost of 50,
   instead of A-C-F having a total cost of 70).</t>

</section>
</section>
<section anchor="rpc-motivation"><name>Path Computation RPC</name>

<t>The TE tunnel YANG data model, defined in <xref target="I-D.ietf-teas-yang-te"/>, can support
   the need to request path computation, as described in section 5.1.2
   of <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>This solution is stateful since the state of each created "compute-
   only" TE tunnel path needs to be maintained, in the YANG datastores
   (at least in the running datastore and operational datastore), and
   updated, when underlying network conditions change.</t>

<t>The RPC mechanism allows requesting path computation using a simple
   atomic operation, without creating any state in the YANG datastores,
   and it is the natural option/choice, especially with stateless PCE.</t>

<t>It is very useful to provide both the options of using an RPC as well
   as of setting up TE tunnel paths in "compute-only" mode. It is
   suggested to use the RPC as much as possible and to rely on
   "compute-only" TE tunnel paths, when really needed.</t>

<t>Using the RPC solution would imply that the underlying controller
   (e.g., a PNC) computes a path twice during the process to set up an
   LSP: at time T1, when its client (e.g., an MDSC) sends a path
   computation RPC request to it, and later, at time T2, when the same
   client (MDSC) creates a TE tunnel requesting the set-up of the LSP.
   The underlying assumption is that, if network conditions have not
   changed, the same path that has been computed at time T1 is also
   computed at time T2 by the underlying controller (e.g. PNC) and
   therefore the path that is set up at time T2 is exactly the same path
   that has been computed at time T1.</t>

<t>However, since the operation is stateless, there is no guarantee that
   the returned path would still be available when path set-up is
   requested: this does not cause major issues when the time between
   path computation and path set-up is short (especially if compared
   with the time that would be needed to update the information of a
   very detailed connectivity matrix).</t>

<t>In most of the cases, there is even no need to guarantee that the
   path that has been set up is the exactly same as the path that has
   been returned by path computation, especially if it has the same or
   even better metrics. Depending on the abstraction level applied by
   the server, the client may also not know the actual computed path.</t>

<t>The most important requirement is that the required global objectives
   (e.g., multi-domain path metrics and constraints) are met. For this
   reason a path verification phase is always necessary to verify that
   the actual path that has been set up meets the global objectives (for
   example in a multi-domain network, the resulting end-to-end path
   meets the required end-to-end metrics and constraints).</t>

<t>In most of the cases, even if the path being set up is not exactly
   the same as the path returned by path computation, its metrics and
   constraints are "good enough" and the path verification passes
   successfully. In the few corner cases where the path verification
   fails, it is possible repeat the whole process (path computation,
   path set-up and path verification).</t>

<t>In case it is required to set up at T2 exactly the same path computed
   at T1, the RPC solution should not be used and, instead, a "compute-
   only" TE tunnel path should be set up, allowing also notifications in
   case the computed path has been changed.</t>

<t>In this case, at time T1, the client (MDSC) creates a TE tunnel in a
   compute-only mode in the running datastore and later, at time T2,
   changes the configuration of that TE tunnel (not to be any more in a
   compute-only mode) to trigger the set-up of the LSP over the path
   which have been computed at time T1 and reported in the operational
   datastore.</t>

<t>It is worth noting that also using the "compute-only" TE tunnel path,
   although increasing the likelihood that the computed path is
   available at path set-up, does not guarantee that because
   notifications may not be reliable or delivered on time. Path
   verification is needed also in this case.</t>

<t>The solution based on "compute-only" TE tunnel path has also the
   following drawbacks:</t>

<t><list style="symbols">
  <t>Several messages required for any path computation</t>
  <t>Requires persistent storage in the underlying controller</t>
  <t>Need for garbage collection for stranded paths</t>
  <t>Process burden to detect changes on the computed paths in order to
provide notifications update</t>
</list></t>

<section anchor="temp-state"><name>Temporary reporting of the computed path state</name>

<t>This section describes an optional extension to the stateless
   behavior of the path computation RPC, where the underlying
   controller, after having received a path computation RPC request,
   maintains some "transient state" associated with the computed path,
   allowing the client to request the set-up of exactly that path, if
   still available.</t>

<t>This is similar to the "compute-only" TE tunnel path solution but, to
   avoid the drawbacks of the stateful approach, is leveraging the path
   computation RPC and the separation between configuration and
   operational datastore, as defined in the NMDA architecture <xref target="RFC8342"/>.</t>

<t>The underlying controller, after having computed a path, as requested
   by a path computation RPC, also creates a TE tunnel instance within
   the operational datastore, to store that computed path. This would be
   similar to a "compute-only" TE tunnel path, with the only difference
   that there is no associated TE tunnel instance within the running
   datastore.</t>

<t>Since the underlying controller stores in the operational datastore
   the computed path based on an abstract topology it exposes, it also
   remembers, internally, which is the actual native path (physical
   path), within its native topology (physical topology), associated
   with that compute-only TE tunnel instance.</t>

<t>Afterwards, the client (e.g., MDSC) can request the set-up of that
   specific path by creating a TE tunnel instance (not in compute-only
   mode) in the running datastore using the same tunnel-name of
   the existing TE tunnel in the operational datastore: this will
   trigger the underlying controller to set up that path, if still
   available.</t>

<t>There are still cases where the path being set up is not exactly the
   same as the path that has been computed:</t>

<t><list style="symbols">
  <t>When the tunnel is configured with path constraints which are not
compatible with the computed path;</t>
  <t>When the tunnel set-up is requested after the resources of the
computed path are no longer available;</t>
  <t>When the tunnel set-up is requested after the computed path is no
longer known (e.g. due to a server reboot) by the underlying
controller.  <vspace blankLines='1'/>
In all these cases, the underlying controller should compute and set
 up a new path.  <vspace blankLines='1'/>
Therefore the "path verification" phase, as described in <xref target="rpc-motivation"/>
 above, is always needed to check that the path that has been set up
 is still "good enough".  <vspace blankLines='1'/>
Since this new approach is not completely stateless, garbage
 collection is implemented using a timeout that, when it expires,
 triggers the removal of the computed path from the operational
 datastore. This operation is fully controlled by the underlying
 controller without the need for any action to be taken by the client
 that is not able to act on the operational datastore. The default
 value of this timeout is 10 minutes but a different value may be
 configured by the client.  <vspace blankLines='1'/>
In addition, it is possible for the client to tag each path
 computation request with a transaction-id allowing for a faster
 removal of all the paths associated with a transaction-id, without
 waiting for their timers to expire.  <vspace blankLines='1'/>
The underlying controller can remove from the operational datastore
 all the paths computed with a given transaction-id which have not
 been set up either when it receives a Path Delete RPC request for
 that transaction-id or, automatically, right after the set-up up of a
 path that has been previously computed with that transaction-id.  <vspace blankLines='1'/>
This possibility is useful when multiple paths are computed but, at
 most, only one is set up (e.g., in multi-domain path computation
 scenario scenarios). After the selected path has been set up (e.g, in
 one domain during multi-domain path set-up), all the other
 alternative computed paths can be automatically deleted by the
 underlying controller (since no longer needed). The client can also
 request, using the Path Delete RPC request, the underlying controller
 to remove all the computed paths, if none of them is going to be set
 up (e.g., in a transit domain not being selected by multi-domain path
 computation and so not being automatically deleted).  <vspace blankLines='1'/>
This approach is complimentary and not alternative to the timer which
 is always needed to avoid stranded computed paths being stored in the
 operational datastore when no path is set up and no explicit Path
 Delete RPC request is received.</t>
</list></t>

</section>
</section>
</section>
<section anchor="path-computation-and-optimization-for-multiple-paths"><name>Path computation and optimization for multiple paths</name>

<t>There are use cases, where it is advantageous to request path
   computation for a set of paths, through a network or through a
   network domain, using a single request <xref target="RFC5440"/>.</t>

<t>In this case, sending a single request for multiple path
   computations, instead of sending multiple requests for each path
   computation, would reduce the protocol overhead and it would consume
   less resources (e.g., threads in the client and server).</t>

<t>In the context of a typical multi-domain TE network, there could
   multiple choices for the ingress/egress points of a domain and the
   Multi-Domain Controller needs to request path computation between all
   the ingress/egress pairs to select the best pair. For example, in the
   example of <xref target="md-uc"/>, the Multi-Domain Controller needs to request
   the TE Network Controller 1 to compute the A-C and the A-D paths and
   to the TE Network Controller 2 to compute the E-H and the F-H paths.</t>

<t>It is also possible that the Multi-Domain Controller receives a
   request to set up a group of multiple end to end connections. The
   Multi-Domain Controller needs to request each TE domain Controller to
   compute multiple paths, one (or more) for each end to end connection.</t>

<t>There are also scenarios where it can be needed to request path
   computation for a set of paths in a synchronized fashion.</t>

<t>One example could be computing multiple diverse paths. Computing a
   set of diverse paths in an unsynchronized fashion, leads to the
   possibility of not being able to satisfy the diversity requirement.
   In this case, it is preferable to compute a sub-optimal primary path
   for which a diversely routed secondary path exists.</t>

<t>There are also scenarios where it is needed to request optimizing a
   set of paths using objective functions that apply to the whole set of
   paths, see <xref target="RFC5541"/>, e.g. to minimize the sum of the costs of all
   the computed paths in the set.</t>

</section>
<section anchor="yang-data-model-for-requesting-path-computation"><name>YANG data model for requesting Path Computation</name>

<t>This document define a YANG RPC to request path computation as an
   "augmentation" of tunnel-rpc, defined in <xref target="I-D.ietf-teas-yang-te"/>. This model
   provides the RPC input attributes that are needed to request path
   computation and the RPC output attributes that are needed to report
   the computed paths.</t>

<figure><artwork type="ascii-art" name="overview.txt"><![CDATA[
  augment /te:tunnels-path-compute/te:input/te:path-compute-info:
    +-- path-request* [request-id]
    |  ...

  augment /te:tunnels-path-compute/te:output/te:path-compute-result:
    +--ro response* [response-id]
       +--ro response-id                         uint32
       +--ro computed-paths-properties
       |  +--ro computed-path-properties* [k-index]
       |     ...
]]></artwork></figure>

<t>This model extensively re-uses the grouping defined in <xref target="I-D.ietf-teas-yang-te"/>
   and <xref target="I-D.ietf-teas-rfc8776-update"/> to ensure maximal syntax and semantics commonality.</t>

<t>This YANG data model allows one RPC to include multiple path
   requests, each path request being identified by a request-id.
   Therefore, one RPC can return multiple responses, one for each path
   request, being identified by a response-id equal to the corresponding
   request-id. Each response reports one or more computed paths, as
   requested by the k-requested-paths attribute. By default, each
   response reports one computed path.</t>

<section anchor="synchronization-of-multiple-path-computation-requests"><name>Synchronization of multiple path computation requests</name>

<t>The YANG data model permits the synchronization of a set of multiple
   path requests (identified by specific request-id) all related to a
   "svec" container emulating the syntax of the Synchronization VECtor
   (SVEC) PCEP object, defined in <xref target="RFC5440"/>.</t>

<figure><artwork type="ascii-art" name="synchronization.txt"><![CDATA[
    +-- synchronization* []
       +-- svec
       |  +-- relaxable?      boolean
       |  +-- disjointness?   te-path-disjointness
       |  +-- request-id*     uint32
       +-- svec-constraints
       |  +-- path-metric-bound* [metric-type]
       |     +-- metric-type    identityref
       |     +-- upper-bound?   uint64
       +-- path-srlgs-lists
       |  +-- path-srlgs-list* [usage]
       |     +-- usage     identityref
       |     +-- values*   srlg
       +-- path-srlgs-names
       |  +-- path-srlgs-name* [usage]
       |     +-- usage    identityref
       |     +-- names*   string
       +-- exclude-objects
       |  +-- excludes* []
       |     +-- (type)?
       |        +--:(numbered-node-hop)
       |        |  +-- numbered-node-hop
       |        |     +-- node-id     te-node-id
       |        |     +-- hop-type?   te-hop-type
       |        +--:(numbered-link-hop)
       |        |  +-- numbered-link-hop
       |        |     +-- link-tp-id    te-tp-id
       |        |     +-- hop-type?     te-hop-type
       |        |     +-- direction?    te-link-direction
       |        +--:(unnumbered-link-hop)
       |        |  +-- unnumbered-link-hop
       |        |     +-- link-tp-id    te-tp-id
       |        |     +-- node-id       te-node-id
       |        |     +-- hop-type?     te-hop-type
       |        |     +-- direction?    te-link-direction
       |        +--:(as-number)
       |        |  +-- as-number-hop
       |        |     +-- as-number    inet:as-number
       |        |     +-- hop-type?    te-hop-type
       |        +--:(label)
       |           +-- label-hop
       |              +-- te-label
       |                 ...
       +-- optimizations
          +-- (algorithm)?
             +--:(metric) {te-types:path-optimization-metric}?
             |  +-- optimization-metric* [metric-type]
             |     +-- metric-type    identityref
             |     +-- weight?        uint8
             +--:(objective-function)
                      {te-types:path-optimization-objective-function}?
                +-- objective-function
                   +-- objective-function-type?   identityref
]]></artwork></figure>

<t>The model, in addition to the metric types, defined in <xref target="I-D.ietf-teas-rfc8776-update"/>,
   which can be applied to each individual path request, supports also
   additional metric types, which apply to a set of synchronized
   requests, as referenced in <xref target="RFC5541"/>. These additional metric types
   are defined by the following YANG identities:</t>

<t><list style="symbols">
  <t>svec-metric-type: base YANG identity from which cumulative metric
types identities are derived.</t>
  <t>svec-metric-cumul-te: cumulative TE cost metric type, as defined
in <xref target="RFC5541"/>.</t>
  <t>svec-metric-cumul-igp: cumulative IGP cost metric type, as defined
in <xref target="RFC5541"/>.</t>
  <t>svec-metric-cumul-hop: cumulative Hop metric type, representing
the cumulative version of the Hop metric type defined in
<xref target="I-D.ietf-teas-rfc8776-update"/>.</t>
  <t>svec-metric-aggregate-bandwidth-consumption: aggregate bandwidth
consumption metric type, as defined in <xref target="RFC5541"/>.</t>
  <t>svec-metric-load-of-the-most-loaded-link: load of the most loaded
link metric type, as defined in <xref target="RFC5541"/>.</t>
</list></t>

</section>
<section anchor="returned-metric-values"><name>Returned metric values</name>

<t>This YANG data model provides a way to return the values of the
   metrics computed by the path computation in the output of RPC,
   together with other important information (e.g. SRLG, affinities,
   explicit route), emulating the syntax of the "C" flag of the "METRIC"
   PCEP object <xref target="RFC5440"/>:</t>

<figure><artwork type="ascii-art" name="returned-metrics.txt"><![CDATA[
       |     +--ro path-properties
       |        +--ro path-metric* [metric-type]
       |        |  +--ro metric-type           identityref
       |        |  +--ro accumulative-value?   uint64
       |        +--ro path-affinities-values
       |        |  +--ro path-affinities-value* [usage]
       |        |     +--ro usage    identityref
       |        |     +--ro value?   admin-groups
       |        +--ro path-affinity-names
       |        |  +--ro path-affinity-name* [usage]
       |        |     +--ro usage            identityref
       |        |     +--ro affinity-name* [name]
       |        |        +--ro name    string
       |        +--ro path-srlgs-lists
       |        |  +--ro path-srlgs-list* [usage]
       |        |     +--ro usage     identityref
       |        |     +--ro values*   srlg
       |        +--ro path-srlgs-names
       |        |  +--ro path-srlgs-name* [usage]
       |        |     +--ro usage    identityref
       |        |     +--ro names*   string
       |        +--ro path-route-objects
       |        |  ...
       |        +--ro te-bandwidth
       |        |  ...
       |        +--ro disjointness-type?
       |                te-types:te-path-disjointness
]]></artwork></figure>

<t>It also allows the client to request which information (metrics, SRLG
   and/or affinities) should be returned:</t>

<figure><artwork type="ascii-art" name="requested-metrics.txt"><![CDATA[
    |  +-- request-id                            uint32
    |  ...
    |  +-- requested-metrics* [metric-type]
    |  |  +-- metric-type    identityref
    |  +-- return-srlgs?                         boolean
    |  +-- return-affinities?                    boolean
    |  ...
]]></artwork></figure>

<t>This feature is essential for path computation in a multi-domain TE
   network as described in <xref target="md-uc"/>. In this case, the metrics
   returned by a path computation requested to a given underlying
   controller must be used by the client to compute the best end-to-end
   path. If they are missing, the client cannot compare different paths
   calculated by the underlying controllers and choose the best one for
   the optimal end-to-end (e2e) path.</t>

</section>
<section anchor="multiple-paths-requests-for-the-same-te-tunnel"><name>Multiple Paths Requests for the same TE tunnel</name>

<t>The YANG data model allows including multiple requests for different
   paths intended to be used within the same tunnel or within different
   tunnels.</t>

<t>When multiple requested paths are intended to be used within the same
   tunnel (e.g., requesting path computation for the primary and
   secondary paths of a protected tunnel), the set of attributes that
   are intended to be configured on per-tunnel basis rather than on per-
   path basis are common to all these path requests. These attributes
   includes both attributes which can be configured only a per-tunnel
   basis (e.g., tunnel-name, source/destination TTP, encoding and
   switching-type) as well attributes which can be configured both on a
   per-tunnel and on a per-path basis (e.g., the te-bandwidth or the
   associations).</t>

<t>Therefore, a tunnel-attributes list is defined, within the path
   computation request RPC:</t>

<figure><artwork type="ascii-art" name="tunnel-attributes-list.txt"><![CDATA[
    +-- tunnel-attributes* [tunnel-name]
    |  +-- tunnel-name               string
    |  +-- encoding?                 identityref
    |  +-- switching-type?           identityref
    |  +-- source?                   te-types:te-node-id
    |  +-- destination?              te-types:te-node-id
    |  +-- src-tunnel-tp-id?         binary
    |  +-- dst-tunnel-tp-id?         binary
    |  +-- bidirectional?            boolean
    |  +-- association-objects
    |  |  ...
    |  +-- protection-type?          identityref
    |  +-- restoration-type?         identityref
    |  +-- restoration-scheme?       identityref
    |  +-- te-topology-identifier
    |  |  +-- provider-id?   te-global-id
    |  |  +-- client-id?     te-global-id
    |  |  +-- topology-id?   te-topology-id
    |  +-- te-bandwidth
    |  |  ...
    |  +-- link-protection?          identityref
    |  +-- setup-priority?           uint8
    |  +-- hold-priority?            uint8
    |  +-- signaling-type?           identityref
    |  +-- hierarchy
    |     +-- dependency-tunnels
    |     |  ...
    |     +-- hierarchical-link
    |        ...
]]></artwork></figure>

<t>The path requests that are intended to be used within the same tunnel
   should reference the same entry in the tunnel-attributes list. This
   allows:</t>

<t><list style="symbols">
  <t>avoiding repeating the same set of per-tunnel parameters on
multiple requested paths;</t>
  <t>the server to understand what attributes are intended to be
configured on a per-tunnel basis (e.g., the te-bandwidth
configured in the tunnel-attributes) and what attributes are
intended to be configured on a per-path basis(e.g., the te-
bandwidth configured in the path-request). This could be useful
especially when the server also creates a TE tunnel instance
within the operational datastore to report the computed paths, as
described in <xref target="temp-state"/>: in this case, the tunnel-name is also
used as the suggested name for that TE tunnel instance.  <vspace blankLines='1'/>
The YANG data model allows also including requests for paths intended
 to modify existing tunnels (e.g., adding a protection path for an
 existing un-protected tunnel). In this case, the per-tunnel
 attributes are already provided in an existing TE tunnel instance and
 do not need to be re-configured in the path computation request RPC.
 Therefore, these requests should reference an existing TE tunnel
 instance.  <vspace blankLines='1'/>
It is also possible to request computing paths without indicating in
 which tunnel they are intended to be used (e.g., in case of an
 unprotected tunnel). In this case, the per-tunnel attributes could be
 provided together with the per-path attributes in the path request,
 without using the tunnel-attributes list.  <vspace blankLines='1'/>
The choices below are defined to distinguish the cases above:</t>
  <t>whether the per-tunnel attributes are configured by reference
(providing a leafref), to:  <list style="symbols">
      <t>either a TE tunnel instance, if it exists;</t>
      <t>or to an entry of the tunnel-attributes list, if the TE tunnel
instance does not exist;</t>
    </list></t>
  <t>or by value, providing the set of tunnel attributes within the
path request:</t>
</list></t>

<figure><artwork type="ascii-art" name="tunnel-attributes.txt"><![CDATA[
    |  +-- (tunnel-attributes)?
    |  |  +--:(reference)
    |  |  |  +-- tunnel-reference
    |  |  |     +-- (tunnel-exist)
    |  |  |     |  +--:(tunnel-ref)
    |  |  |     |  |  +-- tunnel-ref                te:tunnel-ref
    |  |  |     |  +--:(tunnel-attributes-ref)
    |  |  |     |     +-- tunnel-attributes-ref     leafref
    |  |  |     +-- path-name?                      string
    |  |  |     +-- (path-role)
    |  |  |        ...
    |  |  +--:(value)
    |  |     +-- tunnel-name?                    string
    |  |     +-- path-name?                      string
    |  |     +-- (path-role)?
    |  |     |  ...
    |  |     ...
    |  |     +-- encoding?                       identityref
    |  |     +-- switching-type?                 identityref
    |  |     ...
]]></artwork></figure>

<section anchor="tunnel-attributes-specified-by-value"><name>Tunnel attributes specified by value</name>

<t>The (value) case provides the set of attributes that are configured
   only on per-tunnel basis (e.g., tunnel-name, source/destination TTP,
   encoding and switching-type).</t>

<t>In this case, it is assumed that the requested path will be the only
   path within a tunnel.</t>

<t>If the only path within a tunnel is the transit segment of a multi-domain end-to-end path, it can be of any type (primary, secondary, reverse-primary
   or reverse-secondary). The (path-role) choice is used to specify its role in the path request:</t>

<figure><artwork type="ascii-art" name="tunnel-by-value.txt"><![CDATA[
    |  |     +-- (path-role)?
    |  |     |  +--:(primary-path)
    |  |     |  +--:(secondary-path)
    |  |     |  |  +-- secondary-path!
    |  |     |  |     +-- primary-path-name?   string
    |  |     |  +--:(primary-reverse-path)
    |  |     |  |  +-- primary-reverse-path!
    |  |     |  |     +-- primary-path-name?   string
    |  |     |  +--:(secondary-reverse-path)
    |  |     |     +-- secondary-reverse-path!
    |  |     |        +-- primary-path-name?           string
    |  |     |        +-- primary-reverse-path-name?   string
]]></artwork></figure>

<t>In all the other cases, the only path within a tunnel is a primary path.</t>

<t>The secondary-path, the primary-reverse-path and the secondary-
   reverse-path are presence container used to indicate the role of the
   path: by default, the path is assumed to be a primary path.</t>

<t>They optionally can contain the name of the primary-path under which
   the requested path could be associated within the YANG tree structure
   defined in <xref target="I-D.ietf-teas-yang-te"/>, which could be useful when the server also
   creates a TE tunnel instance within the operational datastore to
   report the computed paths, as described in <xref target="temp-state"/>: in this
   case, the tunnel-name and the path names are also used as the
   suggested name for that TE tunnel and path instances.</t>

</section>
<section anchor="tunnel-attributes-specified-by-reference"><name>Tunnel attributes specified by reference</name>

<t>The (reference) case provides the information needed to associate
   multiple path requests that are intended to be used within the same
   tunnel.</t>

<t>In order to indicate the role of the path being requested within the
   intended tunnel (e.g., primary or secondary path), the (path-role)
   choice is defined:</t>

<figure><artwork type="ascii-art" name="tunnel-by-reference.txt"><![CDATA[
    |  |  |     +-- (path-role)
    |  |  |        +--:(primary-path)
    |  |  |        |  +-- primary-path!
    |  |  |        |     ...
    |  |  |        +--:(secondary-path)
    |  |  |        |  +-- secondary-path
    |  |  |        |     ...
    |  |  |        +--:(primary-reverse-path)
    |  |  |        |  +-- primary-reverse-path
    |  |  |        |     ...
    |  |  |        +--:(secondary-reverse-path)
    |  |  |           +-- secondary-reverse-path
    |  |  |              ...
]]></artwork></figure>

<t>The primary-path is a presence container used to indicate that the
   requested path is intended to be used as a primary path. It can also
   contain some attributes which are configured only on primary paths
   (e.g., the k-requested-paths).</t>

<t>The secondary-path container indicates that the requested path is
   intended to be used as a secondary path and it contains at least
   references to one or more primary paths which can use it as a
   candidate secondary path:</t>

<figure><artwork type="ascii-art" name="secondary-path.txt"><![CDATA[
    |  |  |        |  +-- secondary-path
    |  |  |        |     ...
    |  |  |        |     +-- primary-path-ref* []
    |  |  |        |        +-- (primary-path-exist)
    |  |  |        |           +--:(path-ref)
    |  |  |        |           |  +-- primary-path-ref    leafref
    |  |  |        |           +--:(path-request-ref)
    |  |  |        |              +-- path-request-ref    leafref
]]></artwork></figure>

<t>A requested secondary path can reference any requested primary paths,
   and, in case they are intended to be used within an existing TE
   tunnel, it could also reference any existing primary-paths.</t>

<t>The secondary-path container can also contain some attributes which
   are configured only on secondary paths (e.g., the protection-type).</t>

<t>The primary-reverse-path container indicates that the requested path
   is intended to be used as a primary reverse path and it contains only
   the reference to the primary path which is intended to use it as a
   reverse path:</t>

<figure><artwork type="ascii-art" name="primary-reverse-path.txt"><![CDATA[
    |  |  |        |  +-- primary-reverse-path
    |  |  |        |     +-- (primary-path-exist)
    |  |  |        |        +--:(path-ref)
    |  |  |        |        |  +-- primary-path-ref    leafref
    |  |  |        |        +--:(path-request-ref)
    |  |  |        |           +-- path-request-ref    leafref
]]></artwork></figure>

<t>A requested primary reverse path can reference either a requested
   primary path, or, in case it is intended to be used within an
   existing TE tunnel, an existing primary-path.</t>

<t>The secondary-reverse-path container indicates that the requested
   path is intended to be used as a secondary reverse path and it
   contains at least references to one or more primary paths, whose
   primary reverse path can use it as a candidate secondary reverse
   path:</t>

<figure><artwork type="ascii-art" name="secondary-reverse-path.txt"><![CDATA[
    |  |  |           +-- secondary-reverse-path
    |  |  |              ...
    |  |  |              +-- primary-reverse-path* []
    |  |  |                 +-- (primary-reverse-path-exist)
    |  |  |                    +--:(path-ref)
    |  |  |                    |  +-- primary-path-ref    leafref
    |  |  |                    +--:(path-request-ref)
    |  |  |                       +-- path-request-ref    leafref
]]></artwork></figure>

<t>A requested secondary reverse path can reference any requested
   primary paths, and, in case they are intended to be used within an
   existing TE tunnel, it could reference also existing primary-paths.</t>

<t>The secondary-reverse-path container can also contain some attributes
   which are configured only on secondary reverse paths (e.g., the
   protection-type).</t>

<t>In case the requested path is a transit segment of a multi-domain
   end-to-end path, the primary-path may not be needed to be
   setup/computed. However, the request for path computation of a
   secondary-path or a primary-reverse or of a secondary-reverse-path
   requires that the primary-path exists or it is requested within the
   same RPC request. In the latter case, the path request for the
   primary-path should have an empty 'route-object-include-exclude' list,
   as described in section 5.1.1 of <xref target="I-D.ietf-teas-yang-te"/>, to indicate to the server that
   path computation is not requested and no path properties will
   therefore be returned in the RPC response.</t>

</section>
</section>
<section anchor="multi-layer-path-computation"><name>Multi-Layer Path Computation</name>

<t>The models supports requesting multi-layer path computation following
   the same approach based on dependency tunnels, as defined in <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>The tunnel-attributes of a given client-layer path request can
   reference server-layer TE tunnels which can already exist in the YANG
   datastore or be specified in the tunnel-attributes list, within the
   same RPC request:</t>

<figure><artwork type="ascii-art" name="dependency-tunnels.txt"><![CDATA[
    |     +-- dependency-tunnels
    |     |  +-- dependency-tunnel* [name]
    |     |  |  +-- name              -> /te:te/tunnels/tunnel/name
    |     |  |  +-- encoding?         identityref
    |     |  |  +-- switching-type?   identityref
    |     |  +-- dependency-tunnel-attributes* [name]
    |     |     +-- name              leafref
    |     |     +-- encoding?         identityref
    |     |     +-- switching-type?   identityref
]]></artwork></figure>

<t>In a similar way as in <xref target="I-D.ietf-teas-yang-te"/>, the server-layer tunnel
   attributes should provide the information of what would be the
   dynamic link in the client layer topology supported by that tunnel,
   if instantiated:</t>

<figure><artwork type="ascii-art" name="hierarchical-link.txt"><![CDATA[
    |     +-- hierarchical-link
    |        +-- enable?                   boolean
    |        +-- local-te-node-id?         te-types:te-node-id
    |        +-- local-te-link-tp-id?      te-types:te-tp-id
    |        +-- remote-te-node-id?        te-types:te-node-id
    |        +-- te-topology-identifier
    |           +-- provider-id?   te-global-id
    |           +-- client-id?     te-global-id
    |           +-- topology-id?   te-topology-id
]]></artwork></figure>

<t>It is worth noting that since path computation RPC is stateless, the
   dynamic hierarchical links configured for the server-layer tunnel
   attributes cannot be used for path computation of any client-layer
   path unless explicitly referenced in the dependency-tunnel-attributes
   list within the same RPC request.</t>

</section>
</section>
<section anchor="yang-data-model-for-te-path-computation"><name>YANG data model for TE path computation</name>

<section anchor="pc-tree"><name>Tree diagram</name>

<t><xref target="fig-pc-tree"/> below shows the tree diagram of the YANG data model defined
   in module ietf-te-path-computation.yang, defined in <xref target="pc-yang"/>.</t>

<figure title="TE path computation tree diagram" anchor="fig-pc-tree"><artwork type="ascii-art" name="ietf-te-path-computation.tree"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

module: ietf-te-path-computation

  augment /te:tunnels-path-compute/te:input/te:path-compute-info:
    +-- path-request* [request-id]
    |  +-- request-id                            uint32
    |  +-- compute-priority?                     uint8
    |  |       {compute-priority}?
    |  +-- (tunnel-attributes)?
    |  |  +--:(reference)
    |  |  |  +-- tunnel-reference
    |  |  |     +-- (tunnel-exist)
    |  |  |     |  +--:(tunnel-ref)
    |  |  |     |  |  +-- tunnel-ref                te:tunnel-ref
    |  |  |     |  +--:(tunnel-attributes-ref)
    |  |  |     |     +-- tunnel-attributes-ref     leafref
    |  |  |     +-- path-name?                      string
    |  |  |     +-- (path-role)
    |  |  |        +--:(primary-path)
    |  |  |        |  +-- primary-path!
    |  |  |        |     +-- preference?          uint8
    |  |  |        |     +-- co-routed?           boolean
    |  |  |        |     +-- k-requested-paths?   uint8
    |  |  |        +--:(secondary-path)
    |  |  |        |  +-- secondary-path
    |  |  |        |     +-- secondary-reverse-path?   leafref
    |  |  |        |     +-- preference?               uint8
    |  |  |        |     +-- protection-type?          identityref
    |  |  |        |     +-- restoration-type?         identityref
    |  |  |        |     +-- restoration-scheme?       identityref
    |  |  |        |     +-- primary-path-ref* []
    |  |  |        |        +-- (primary-path-exist)
    |  |  |        |           +--:(path-ref)
    |  |  |        |           |  +-- primary-path-ref    leafref
    |  |  |        |           +--:(path-request-ref)
    |  |  |        |              +-- path-request-ref    leafref
    |  |  |        +--:(primary-reverse-path)
    |  |  |        |  +-- primary-reverse-path
    |  |  |        |     +-- (primary-path-exist)
    |  |  |        |        +--:(path-ref)
    |  |  |        |        |  +-- primary-path-ref    leafref
    |  |  |        |        +--:(path-request-ref)
    |  |  |        |           +-- path-request-ref    leafref
    |  |  |        +--:(secondary-reverse-path)
    |  |  |           +-- secondary-reverse-path
    |  |  |              +-- preference?             uint8
    |  |  |              +-- protection-type?        identityref
    |  |  |              +-- restoration-type?       identityref
    |  |  |              +-- restoration-scheme?     identityref
    |  |  |              +-- primary-reverse-path* []
    |  |  |                 +-- (primary-reverse-path-exist)
    |  |  |                    +--:(path-ref)
    |  |  |                    |  +-- primary-path-ref    leafref
    |  |  |                    +--:(path-request-ref)
    |  |  |                       +-- path-request-ref    leafref
    |  |  +--:(value)
    |  |     +-- tunnel-name?                    string
    |  |     +-- path-name?                      string
    |  |     +-- (path-role)?
    |  |     |  +--:(primary-path)
    |  |     |  +--:(secondary-path)
    |  |     |  |  +-- secondary-path!
    |  |     |  |     +-- primary-path-name?   string
    |  |     |  +--:(primary-reverse-path)
    |  |     |  |  +-- primary-reverse-path!
    |  |     |  |     +-- primary-path-name?   string
    |  |     |  +--:(secondary-reverse-path)
    |  |     |     +-- secondary-reverse-path!
    |  |     |        +-- primary-path-name?           string
    |  |     |        +-- primary-reverse-path-name?   string
    |  |     +-- k-requested-paths?              uint8
    |  |     +-- encoding?                       identityref
    |  |     +-- switching-type?                 identityref
    |  |     +-- source
    |  |     |  +-- node-id?        nw:node-id
    |  |     |  +-- te-node-id?     te-types:te-node-id
    |  |     |  +-- tunnel-tp-id?   binary
    |  |     +-- destination
    |  |     |  +-- node-id?        nw:node-id
    |  |     |  +-- te-node-id?     te-types:te-node-id
    |  |     |  +-- tunnel-tp-id?   binary
    |  |     +-- bidirectional?                  boolean
    |  |     +-- te-topology-identifier
    |  |        +-- provider-id?   te-global-id
    |  |        +-- client-id?     te-global-id
    |  |        +-- topology-id?   te-topology-id
    |  +-- association-objects
    |  |  +-- association-object* [association-key]
    |  |  |  +-- association-key    string
    |  |  |  +-- type?              identityref
    |  |  |  +-- id?                uint16
    |  |  |  +-- source
    |  |  |     +-- id?     te-gen-node-id
    |  |  |     +-- type?   enumeration
    |  |  +-- association-object-extended* [association-key]
    |  |     +-- association-key    string
    |  |     +-- type?              identityref
    |  |     +-- id?                uint16
    |  |     +-- source
    |  |     |  +-- id?     te-gen-node-id
    |  |     |  +-- type?   enumeration
    |  |     +-- global-source?     uint32
    |  |     +-- extended-id?       yang:hex-string
    |  +-- optimizations
    |  |  +-- (algorithm)?
    |  |     +--:(metric) {path-optimization-metric}?
    |  |     |  +-- optimization-metric* [metric-type]
    |  |     |  |  +-- metric-type                       identityref
    |  |     |  |  +-- weight?                           uint8
    |  |     |  |  +-- explicit-route-exclude-objects
    |  |     |  |  |  +-- route-object-exclude-object* [index]
    |  |     |  |  |     +-- index                        uint32
    |  |     |  |  |     +-- (type)?
    |  |     |  |  |        +--:(numbered-node-hop)
    |  |     |  |  |        |  +-- numbered-node-hop
    |  |     |  |  |        |     +-- node-id-uri?   nw:node-id
    |  |     |  |  |        |     +-- node-id?       te-node-id
    |  |     |  |  |        |     +-- hop-type?      te-hop-type
    |  |     |  |  |        +--:(numbered-link-hop)
    |  |     |  |  |        |  +-- numbered-link-hop
    |  |     |  |  |        |     +-- link-tp-id    te-tp-id
    |  |     |  |  |        |     +-- hop-type?     te-hop-type
    |  |     |  |  |        |     +-- direction?    te-link-direction
    |  |     |  |  |        +--:(unnumbered-link-hop)
    |  |     |  |  |        |  +-- unnumbered-link-hop
    |  |     |  |  |        |     +-- link-tp-id-uri?   nt:tp-id
    |  |     |  |  |        |     +-- link-tp-id?       te-tp-id
    |  |     |  |  |        |     +-- node-id-uri?      nw:node-id
    |  |     |  |  |        |     +-- node-id?          te-node-id
    |  |     |  |  |        |     +-- hop-type?         te-hop-type
    |  |     |  |  |        |     +-- direction?
    |  |     |  |  |        |             te-link-direction
    |  |     |  |  |        +--:(as-number)
    |  |     |  |  |        |  +-- as-number-hop
    |  |     |  |  |        |     +-- as-number    inet:as-number
    |  |     |  |  |        |     +-- hop-type?    te-hop-type
    |  |     |  |  |        +--:(label)
    |  |     |  |  |        |  +-- label-hop
    |  |     |  |  |        |     +-- te-label
    |  |     |  |  |        |        +-- (technology)?
    |  |     |  |  |        |        |  +--:(generic)
    |  |     |  |  |        |        |     +-- generic?
    |  |     |  |  |        |        |             rt-types:generali\
zed-label
    |  |     |  |  |        |        +-- direction?
    |  |     |  |  |        |                te-label-direction
    |  |     |  |  |        +--:(srlg)
    |  |     |  |  |           +-- srlg
    |  |     |  |  |              +-- srlg?   uint32
    |  |     |  |  +-- explicit-route-include-objects
    |  |     |  |     +-- route-object-include-object* [index]
    |  |     |  |        +-- index                        uint32
    |  |     |  |        +-- (type)?
    |  |     |  |           +--:(numbered-node-hop)
    |  |     |  |           |  +-- numbered-node-hop
    |  |     |  |           |     +-- node-id-uri?   nw:node-id
    |  |     |  |           |     +-- node-id?       te-node-id
    |  |     |  |           |     +-- hop-type?      te-hop-type
    |  |     |  |           +--:(numbered-link-hop)
    |  |     |  |           |  +-- numbered-link-hop
    |  |     |  |           |     +-- link-tp-id    te-tp-id
    |  |     |  |           |     +-- hop-type?     te-hop-type
    |  |     |  |           |     +-- direction?    te-link-direction
    |  |     |  |           +--:(unnumbered-link-hop)
    |  |     |  |           |  +-- unnumbered-link-hop
    |  |     |  |           |     +-- link-tp-id-uri?   nt:tp-id
    |  |     |  |           |     +-- link-tp-id?       te-tp-id
    |  |     |  |           |     +-- node-id-uri?      nw:node-id
    |  |     |  |           |     +-- node-id?          te-node-id
    |  |     |  |           |     +-- hop-type?         te-hop-type
    |  |     |  |           |     +-- direction?
    |  |     |  |           |             te-link-direction
    |  |     |  |           +--:(as-number)
    |  |     |  |           |  +-- as-number-hop
    |  |     |  |           |     +-- as-number    inet:as-number
    |  |     |  |           |     +-- hop-type?    te-hop-type
    |  |     |  |           +--:(label)
    |  |     |  |              +-- label-hop
    |  |     |  |                 +-- te-label
    |  |     |  |                    +-- (technology)?
    |  |     |  |                    |  +--:(generic)
    |  |     |  |                    |     +-- generic?
    |  |     |  |                    |             rt-types:generali\
zed-label
    |  |     |  |                    +-- direction?
    |  |     |  |                            te-label-direction
    |  |     |  +-- tiebreakers
    |  |     |     +-- tiebreaker* [tiebreaker-type]
    |  |     |        +-- tiebreaker-type    identityref
    |  |     +--:(objective-function)
    |  |              {path-optimization-objective-function}?
    |  |        +-- objective-function
    |  |           +-- objective-function-type?   identityref
    |  +-- named-path-constraint?                leafref
    |  |       {te-types:named-path-constraints}?
    |  +-- te-bandwidth
    |  |  +-- (technology)?
    |  |     +--:(generic)
    |  |        +-- generic?   te-bandwidth
    |  +-- link-protection?                      identityref
    |  +-- setup-priority?                       uint8
    |  +-- hold-priority?                        uint8
    |  +-- signaling-type?                       identityref
    |  +-- path-metric-bounds
    |  |  +-- path-metric-bound* [metric-type]
    |  |     +-- metric-type    identityref
    |  |     +-- upper-bound?   uint64
    |  +-- path-affinities-values
    |  |  +-- path-affinities-value* [usage]
    |  |     +-- usage    identityref
    |  |     +-- value?   admin-groups
    |  +-- path-affinity-names
    |  |  +-- path-affinity-name* [usage]
    |  |     +-- usage            identityref
    |  |     +-- affinity-name* [name]
    |  |        +-- name    string
    |  +-- path-srlgs-lists
    |  |  +-- path-srlgs-list* [usage]
    |  |     +-- usage     identityref
    |  |     +-- values*   srlg
    |  +-- path-srlgs-names
    |  |  +-- path-srlgs-name* [usage]
    |  |     +-- usage    identityref
    |  |     +-- names*   string
    |  +-- disjointness?                         te-path-disjointness
    |  +-- explicit-route-objects-always
    |  |  +-- route-object-exclude-always* [index]
    |  |  |  +-- index                        uint32
    |  |  |  +-- (type)?
    |  |  |     +--:(numbered-node-hop)
    |  |  |     |  +-- numbered-node-hop
    |  |  |     |     +-- node-id-uri?   nw:node-id
    |  |  |     |     +-- node-id?       te-node-id
    |  |  |     |     +-- hop-type?      te-hop-type
    |  |  |     +--:(numbered-link-hop)
    |  |  |     |  +-- numbered-link-hop
    |  |  |     |     +-- link-tp-id    te-tp-id
    |  |  |     |     +-- hop-type?     te-hop-type
    |  |  |     |     +-- direction?    te-link-direction
    |  |  |     +--:(unnumbered-link-hop)
    |  |  |     |  +-- unnumbered-link-hop
    |  |  |     |     +-- link-tp-id-uri?   nt:tp-id
    |  |  |     |     +-- link-tp-id?       te-tp-id
    |  |  |     |     +-- node-id-uri?      nw:node-id
    |  |  |     |     +-- node-id?          te-node-id
    |  |  |     |     +-- hop-type?         te-hop-type
    |  |  |     |     +-- direction?        te-link-direction
    |  |  |     +--:(as-number)
    |  |  |     |  +-- as-number-hop
    |  |  |     |     +-- as-number    inet:as-number
    |  |  |     |     +-- hop-type?    te-hop-type
    |  |  |     +--:(label)
    |  |  |        +-- label-hop
    |  |  |           +-- te-label
    |  |  |              +-- (technology)?
    |  |  |              |  +--:(generic)
    |  |  |              |     +-- generic?
    |  |  |              |             rt-types:generalized-label
    |  |  |              +-- direction?       te-label-direction
    |  |  +-- route-object-include-exclude* [index]
    |  |     +-- explicit-route-usage?        identityref
    |  |     +-- index                        uint32
    |  |     +-- (type)?
    |  |        +--:(numbered-node-hop)
    |  |        |  +-- numbered-node-hop
    |  |        |     +-- node-id-uri?   nw:node-id
    |  |        |     +-- node-id?       te-node-id
    |  |        |     +-- hop-type?      te-hop-type
    |  |        +--:(numbered-link-hop)
    |  |        |  +-- numbered-link-hop
    |  |        |     +-- link-tp-id    te-tp-id
    |  |        |     +-- hop-type?     te-hop-type
    |  |        |     +-- direction?    te-link-direction
    |  |        +--:(unnumbered-link-hop)
    |  |        |  +-- unnumbered-link-hop
    |  |        |     +-- link-tp-id-uri?   nt:tp-id
    |  |        |     +-- link-tp-id?       te-tp-id
    |  |        |     +-- node-id-uri?      nw:node-id
    |  |        |     +-- node-id?          te-node-id
    |  |        |     +-- hop-type?         te-hop-type
    |  |        |     +-- direction?        te-link-direction
    |  |        +--:(as-number)
    |  |        |  +-- as-number-hop
    |  |        |     +-- as-number    inet:as-number
    |  |        |     +-- hop-type?    te-hop-type
    |  |        +--:(label)
    |  |        |  +-- label-hop
    |  |        |     +-- te-label
    |  |        |        +-- (technology)?
    |  |        |        |  +--:(generic)
    |  |        |        |     +-- generic?
    |  |        |        |             rt-types:generalized-label
    |  |        |        +-- direction?       te-label-direction
    |  |        +--:(srlg)
    |  |           +-- srlg
    |  |              +-- srlg?   uint32
    |  +-- path-in-segment!
    |  |  +-- label-restrictions
    |  |     +-- label-restriction* [index]
    |  |        +-- restriction?    enumeration
    |  |        +-- index           uint32
    |  |        +-- label-start
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-end
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-step
    |  |        |  +-- (technology)?
    |  |        |     +--:(generic)
    |  |        |        +-- generic?   int32
    |  |        +-- range-bitmap?   yang:hex-string
    |  +-- path-out-segment!
    |  |  +-- label-restrictions
    |  |     +-- label-restriction* [index]
    |  |        +-- restriction?    enumeration
    |  |        +-- index           uint32
    |  |        +-- label-start
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-end
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-step
    |  |        |  +-- (technology)?
    |  |        |     +--:(generic)
    |  |        |        +-- generic?   int32
    |  |        +-- range-bitmap?   yang:hex-string
    |  +-- requested-metrics* [metric-type]
    |  |  +-- metric-type    identityref
    |  +-- return-srlgs?                         boolean
    |  +-- return-affinities?                    boolean
    |  +-- requested-state!
    |     +-- timer?            uint16
    |     +-- transaction-id?   string
    +-- tunnel-attributes* [tunnel-name]
    |  +-- tunnel-name               string
    |  +-- encoding?                 identityref
    |  +-- switching-type?           identityref
    |  +-- source
    |  |  +-- node-id?        nw:node-id
    |  |  +-- te-node-id?     te-types:te-node-id
    |  |  +-- tunnel-tp-id?   binary
    |  +-- destination
    |  |  +-- node-id?        nw:node-id
    |  |  +-- te-node-id?     te-types:te-node-id
    |  |  +-- tunnel-tp-id?   binary
    |  +-- bidirectional?            boolean
    |  +-- association-objects
    |  |  +-- association-object* [association-key]
    |  |  |  +-- association-key    string
    |  |  |  +-- type?              identityref
    |  |  |  +-- id?                uint16
    |  |  |  +-- source
    |  |  |     +-- id?     te-gen-node-id
    |  |  |     +-- type?   enumeration
    |  |  +-- association-object-extended* [association-key]
    |  |     +-- association-key    string
    |  |     +-- type?              identityref
    |  |     +-- id?                uint16
    |  |     +-- source
    |  |     |  +-- id?     te-gen-node-id
    |  |     |  +-- type?   enumeration
    |  |     +-- global-source?     uint32
    |  |     +-- extended-id?       yang:hex-string
    |  +-- protection-type?          identityref
    |  +-- restoration-type?         identityref
    |  +-- restoration-scheme?       identityref
    |  +-- network-id?               nw:network-id
    |  +-- te-topology-identifier
    |  |  +-- provider-id?   te-global-id
    |  |  +-- client-id?     te-global-id
    |  |  +-- topology-id?   te-topology-id
    |  +-- te-bandwidth
    |  |  +-- (technology)?
    |  |     +--:(generic)
    |  |        +-- generic?   te-bandwidth
    |  +-- link-protection?          identityref
    |  +-- setup-priority?           uint8
    |  +-- hold-priority?            uint8
    |  +-- signaling-type?           identityref
    |  +-- hierarchy
    |     +-- dependency-tunnels
    |     |  +-- dependency-tunnel* [name]
    |     |  |  +-- name              -> /te:te/tunnels/tunnel/name
    |     |  |  +-- encoding?         identityref
    |     |  |  +-- switching-type?   identityref
    |     |  +-- dependency-tunnel-attributes* [name]
    |     |     +-- name              leafref
    |     |     +-- encoding?         identityref
    |     |     +-- switching-type?   identityref
    |     +-- hierarchical-link
    |        +-- enable?                   boolean
    |        +-- local-node-id?            nw:node-id
    |        +-- local-te-node-id?         te-types:te-node-id
    |        +-- local-link-tp-id?         nt:tp-id
    |        +-- local-te-link-tp-id?      te-types:te-tp-id
    |        +-- remote-link-tp-id?        nt:tp-id
    |        +-- remote-te-node-id?        te-types:te-node-id
    |        +-- network-id?               nw:network-id
    |        +-- te-topology-identifier
    |           +-- provider-id?   te-global-id
    |           +-- client-id?     te-global-id
    |           +-- topology-id?   te-topology-id
    +-- synchronization* [] {svec}?
       +-- svec
       |  +-- relaxable?      boolean
       |  +-- disjointness?   te-path-disjointness
       |  +-- request-id*     uint32
       +-- svec-constraints
       |  +-- path-metric-bound* [metric-type]
       |     +-- metric-type    identityref
       |     +-- upper-bound?   uint64
       +-- path-srlgs-lists
       |  +-- path-srlgs-list* [usage]
       |     +-- usage     identityref
       |     +-- values*   srlg
       +-- path-srlgs-names
       |  +-- path-srlgs-name* [usage]
       |     +-- usage    identityref
       |     +-- names*   string
       +-- exclude-objects
       |  +-- excludes* []
       |     +-- (type)?
       |        +--:(numbered-node-hop)
       |        |  +-- numbered-node-hop
       |        |     +-- node-id-uri?   nw:node-id
       |        |     +-- node-id?       te-node-id
       |        |     +-- hop-type?      te-hop-type
       |        +--:(numbered-link-hop)
       |        |  +-- numbered-link-hop
       |        |     +-- link-tp-id    te-tp-id
       |        |     +-- hop-type?     te-hop-type
       |        |     +-- direction?    te-link-direction
       |        +--:(unnumbered-link-hop)
       |        |  +-- unnumbered-link-hop
       |        |     +-- link-tp-id-uri?   nt:tp-id
       |        |     +-- link-tp-id?       te-tp-id
       |        |     +-- node-id-uri?      nw:node-id
       |        |     +-- node-id?          te-node-id
       |        |     +-- hop-type?         te-hop-type
       |        |     +-- direction?        te-link-direction
       |        +--:(as-number)
       |        |  +-- as-number-hop
       |        |     +-- as-number    inet:as-number
       |        |     +-- hop-type?    te-hop-type
       |        +--:(label)
       |           +-- label-hop
       |              +-- te-label
       |                 +-- (technology)?
       |                 |  +--:(generic)
       |                 |     +-- generic?
       |                 |             rt-types:generalized-label
       |                 +-- direction?       te-label-direction
       +-- optimizations
          +-- (algorithm)?
             +--:(metric) {te-types:path-optimization-metric}?
             |  +-- optimization-metric* [metric-type]
             |     +-- metric-type    identityref
             |     +-- weight?        uint8
             +--:(objective-function)
                      {te-types:path-optimization-objective-function\
}?
                +-- objective-function
                   +-- objective-function-type?   identityref
  augment /te:tunnels-path-compute/te:output/te:path-compute-result:
    +--ro response* [response-id]
       +--ro response-id                         uint32
       +--ro computed-paths-properties
       |  +--ro computed-path-properties* [k-index]
       |     +--ro k-index            uint8
       |     +--ro path-properties
       |        +--ro path-metric* [metric-type]
       |        |  +--ro metric-type           identityref
       |        |  +--ro accumulative-value?   uint64
       |        +--ro path-affinities-values
       |        |  +--ro path-affinities-value* [usage]
       |        |     +--ro usage    identityref
       |        |     +--ro value?   admin-groups
       |        +--ro path-affinity-names
       |        |  +--ro path-affinity-name* [usage]
       |        |     +--ro usage            identityref
       |        |     +--ro affinity-name* [name]
       |        |        +--ro name    string
       |        +--ro path-srlgs-lists
       |        |  +--ro path-srlgs-list* [usage]
       |        |     +--ro usage     identityref
       |        |     +--ro values*   srlg
       |        +--ro path-srlgs-names
       |        |  +--ro path-srlgs-name* [usage]
       |        |     +--ro usage    identityref
       |        |     +--ro names*   string
       |        +--ro path-route-objects
       |        |  +--ro path-route-object* [index]
       |        |     +--ro index                        uint32
       |        |     +--ro (type)?
       |        |        +--:(numbered-node-hop)
       |        |        |  +--ro numbered-node-hop
       |        |        |     +--ro node-id-uri?   nw:node-id
       |        |        |     +--ro node-id?       te-node-id
       |        |        |     +--ro hop-type?      te-hop-type
       |        |        +--:(numbered-link-hop)
       |        |        |  +--ro numbered-link-hop
       |        |        |     +--ro link-tp-id    te-tp-id
       |        |        |     +--ro hop-type?     te-hop-type
       |        |        |     +--ro direction?    te-link-direction
       |        |        +--:(unnumbered-link-hop)
       |        |        |  +--ro unnumbered-link-hop
       |        |        |     +--ro link-tp-id-uri?   nt:tp-id
       |        |        |     +--ro link-tp-id?       te-tp-id
       |        |        |     +--ro node-id-uri?      nw:node-id
       |        |        |     +--ro node-id?          te-node-id
       |        |        |     +--ro hop-type?         te-hop-type
       |        |        |     +--ro direction?
       |        |        |             te-link-direction
       |        |        +--:(as-number)
       |        |        |  +--ro as-number-hop
       |        |        |     +--ro as-number    inet:as-number
       |        |        |     +--ro hop-type?    te-hop-type
       |        |        +--:(label)
       |        |           +--ro label-hop
       |        |              +--ro te-label
       |        |                 +--ro (technology)?
       |        |                 |  +--:(generic)
       |        |                 |     +--ro generic?
       |        |                 |             rt-types:generalized\
-label
       |        |                 +--ro direction?
       |        |                         te-label-direction
       |        +--ro te-bandwidth
       |        |  +--ro (technology)?
       |        |     +--:(generic)
       |        |        +--ro generic?   te-bandwidth
       |        +--ro disjointness-type?
       |                te-types:te-path-disjointness
       +--ro computed-path-error-infos
       |  +--ro computed-path-error-info* []
       |     +--ro error-description?   string
       |     +--ro error-timestamp?     yang:date-and-time
       |     +--ro error-reason?        identityref
       +--ro tunnel-ref?                         te:tunnel-ref
       +--ro (path-role)?
          +--:(primary)
          |  +--ro primary-path-ref?             leafref
          +--:(primary-reverse)
          |  +--ro primary-reverse-path-ref?     leafref
          +--:(secondary)
          |  +--ro secondary-path-ref?           leafref
          +--:(secondary-reverse)
             +--ro secondary-reverse-path-ref?   leafref
  augment /te:tunnels-actions/te:input/te:tunnel-info/te:filter-type:
    +--:(path-compute-transactions)
       +-- path-compute-transaction-id*   string
  augment /te:tunnels-actions/te:output:
    +--ro path-computed-delete-result
       +--ro path-compute-transaction-id*   string
]]></artwork></figure>

</section>
<section anchor="pc-yang"><name>YANG module</name>

<figure title="TE path computation YANG module" anchor="fig-pc-yang"><sourcecode type="yang" markers="true" name="ietf-te-path-computation@2023-06-27.yang"><![CDATA[
module ietf-te-path-computation {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-te-path-computation";
  prefix te-pc;

  import ietf-te {
    prefix te;
    reference
      "RFCYYYY: A YANG Data Model for Traffic Engineering Tunnels
       and Interfaces";
  }

  /* Note: The RFC Editor will replace YYYY with the number assigned
     to the RFC once draft-ietf-teas-yang-te becomes an RFC.*/

  import ietf-te-types {
    prefix te-types;
    reference
      "RFCZZZZ: Updated Common YANG Data Types for Traffic 
      Engineering";
  }

  /* Note: The RFC Editor will replace ZZZZ with the number assigned
     to the RFC once draft-ietf-teas-rfc8776-update becomes an RFC.*/

  organization
    "Traffic Engineering Architecture and Signaling (TEAS)
     Working Group";
  contact
    "WG Web: <https://datatracker.ietf.org/wg/teas/>
     WG List:  <mailto:teas@ietf.org>

     Editor:   Italo Busi
               <mailto:italo.busi@huawei.com>

     Editor:   Sergio Belotti
               <mailto:sergio.belotti@nokia.com>

     Editor:   Victor Lopez
               <mailto:victor.lopez@nokia.com>

     Editor:   Oscar Gonzalez de Dios
               <mailto:oscar.gonzalezdedios@telefonica.com>

     Editor:   Anurag Sharma
               <mailto:ansha@google.com>

     Editor:   Yan Shi
               <mailto:shiyan49@chinaunicom.cn>

     Editor:   Ricard Vilalta
               <mailto:ricard.vilalta@cttc.es>

     Editor:   Karthik Sethuraman
               <mailto:karthik.sethuraman@necam.com>

     Editor:   Michael Scharf
               <mailto:michael.scharf@gmail.com>

     Editor:   Daniele Ceccarelli
               <mailto:daniele.ceccarelli@ericsson.com>
     
    ";
  description
    "This module defines a YANG data model for requesting Traffic
     Engineering (TE) path computation. The YANG data model defined
     in this document augments the RPCs defined in the generic TE
     module (ietf-te).

     The model fully conforms to the
     Network Management Datastore Architecture (NMDA).

     Copyright (c) 2023 IETF Trust and the persons
     identified as authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with
     or without modification, is permitted pursuant to, and
     subject to the license terms contained in, the Revised
     BSD License set forth in Section 4.c of the IETF Trust's
     Legal Provisions Relating to IETF Documents
     (https://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC XXXX; see
     the RFC itself for full legal notices.

     The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL', 'SHALL
     NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'NOT RECOMMENDED',
     'MAY', and 'OPTIONAL' in this document are to be interpreted as
     described in BCP 14 (RFC 2119) (RFC 8174) when, and only when,
     they appear in all capitals, as shown here.";

  // RFC Ed.: replace XXXX with actual RFC number and remove
  // this note
  // replace the revision date with the module publication date
  // the format is (year-month-day)

  revision 2023-06-27 {
    description
      "Initial revision";
    reference
      "RFC XXXX: A YANG Data Model for requesting path computation";
  }

  // RFC Ed.: replace XXXX with actual RFC number and remove
  // this note

  /*
   * Features
   */
  
  feature svec {
    description
      "This feature indicates that the server supports synchronized 
      path computation requests.";
    reference
      "Section 7.13 of RFC5440: Path Computation Element (PCE) 
      Communication Protocol (PCEP).";
  }

  feature compute-priority {
    description
      "This feature indicates that the server supports path 
      computation request's priority";
    reference
      "Section 7.4.1 of RFC5440: Path Computation Element (PCE) 
      Communication Protocol (PCEP).";
  }

  /*
   * Identities
   */

  identity tunnel-action-path-compute-delete {
    base te-types:tunnel-action-type;
    description
      "Action type to delete the transient states
      of computed paths, as described in section 3.3.1 of
      RFC XXXX.";
    reference
      "RFC XXXX: A YANG Data Model for requesting path computation";
  }

  /*
   * Groupings
   */

  grouping protection-restoration-properties {
    description
      "This grouping defines the restoration and protection types
       for a path in the path computation request.";
    leaf protection-type {
      type identityref {
        base te-types:lsp-protection-type;
      }
      default "te-types:lsp-protection-unprotected";
      description
        "LSP protection type.";
    }
    leaf restoration-type {
      type identityref {
        base te-types:lsp-restoration-type;
      }
      default "te-types:lsp-restoration-restore-any";
      description
        "LSP restoration type.";
    }
    leaf restoration-scheme {
      type identityref {
        base te-types:restoration-scheme-type;
      }
      default "te-types:restoration-scheme-preconfigured";
      description
        "LSP restoration scheme.";
    }
  } // grouping protection-restoration-properties

  grouping requested-info {
    description
      "This grouping defines the information which is requested
       (e.g., metrics), in the path computation request, to be
       returned in the path computation response.";
    list requested-metrics {
      key "metric-type";
      description
        "The list of the requested metrics.

         The metrics listed here MUST be returned in the response.
         Returning other metrics in the response is OPTIONAL.";
      leaf metric-type {
        type identityref {
          base te-types:path-metric-type;
        }
        description
          "The metric requested to be returned in the response";
      }
    }
    leaf return-srlgs {
      type boolean;
      default "false";
      description
        "If true, path Shared Risk Link Groups (SRLGs) MUST be
         returned in the response.
         If false, returning path SRLGs in the response OPTIONAL.";
    }
    leaf return-affinities {
      type boolean;
      default "false";
      description
        "If true, path affinities MUST be returned in the response.
         If false, returning path affinities in the response is
         OPTIONAL.";
    }
  } // grouping requested-info

  grouping requested-state {
    description
      "Configuration for the transient state used
       to report the computed path";
    container requested-state {
      presence
        "Request temporary reporting of the computed path state";
      description
        "Configures attributes for the temporary reporting of the
         computed path state (e.g., expiration timer).";
      leaf timer {
        type uint16;
        units "minutes";
        default "10";
        description
          "The timeout after which the transient state reporting
          the computed path SHOULD be removed.";
      }
      leaf transaction-id {
        type string;
        description
          "The transaction-id associated with this path computation
          to be used for fast deletion of the transient states
          associated with multiple path computations.

          This transaction-id can be used to explicitly delete all
          the transient states of all the computed paths associated
          with the same transaction-id.

          When one path associated with a transaction-id is setup,
          the transient states of all the other computed paths
          with the same transaction-id are automatically removed.

          If not specified, the transient state is removed only
          when the timer expires (when the timer is specified)
          or not created at all (stateless path computation,
          when the timer is not specified).";
      }
    }
  } // grouping requested-state

  grouping reported-state {
    description
      "This grouping defines the information, returned in the path
       computation response, reporting the transient state related
       to the computed path";
    leaf tunnel-ref {
      type te:tunnel-ref;
      description
        "
         Reference to the tunnel that reports the transient state
         of the computed path.

         If no transient state is created, this attribute is
         omitted.
        ";
    }
    choice path-role {
      description
        "The transient state of the computed path can be reported
         as a primary, primary-reverse, secondary or
         a secondary-reverse path of a te-tunnel";
      case primary {
        leaf primary-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:primary-paths/te:primary-path/"
               + "te:name";
          }
          must '../tunnel-ref' {
            description
              "The primary-path name can only be reported
               if the tunnel name is also reported.";
          }
          description
            "
             Reference to the primary-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case primary
      case primary-reverse {
        leaf primary-reverse-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:primary-paths/te:primary-path/"
               + "te:name";
          }
          must '../tunnel-ref' {
            description
              "The primary-reverse-path name can only be reported
               if the tunnel name is also reported.";
          }
          description
            "
             Reference to the primary-reverse-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case primary-reverse
      case secondary {
        leaf secondary-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:secondary-paths/te:secondary-path/"
               + "te:name";
          }
          must '../tunnel-ref' {
            description
              "The secondary-path name can only be reported
               if the tunnel name is also reported.";
          }
          description
            "
             Reference to the secondary-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case secondary
      case secondary-reverse {
        leaf secondary-reverse-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:secondary-reverse-paths/"
               + "te:secondary-reverse-path/te:name";
          }
          must '../tunnel-ref' {
            description
              "The secondary-reverse-path name can only be reported
               if the tunnel name is also reported.";
          }
          description
            "
             Reference to the secondary-reverse-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case secondary
    } // choice path
  } // grouping reported-state

  grouping synchronization-constraints {
    description
      "Global constraints applicable to synchronized path
       computation requests.";
    container svec-constraints {
      description
        "global svec constraints";
      list path-metric-bound {
        key "metric-type";
        description
          "list of bound metrics";
        leaf metric-type {
          type identityref {
            base te-types:svec-metric-type;
          }
          description
            "SVEC metric type.";
          reference
            "RFC5541: Encoding of Objective Functions in the Path
            Computation Element Communication Protocol (PCEP).";
        }
        leaf upper-bound {
          type uint64;
          description
            "Upper bound on SVEC metric";
        }
      }
    }
    uses te-types:generic-path-srlgs;
    container exclude-objects {
      description
        "Resources to be excluded";
      list excludes {
        description
          "List of Explicit Route Objects to always exclude
           from synchronized path computation";
        uses te-types:explicit-route-hop;
      }
    }
  } // grouping synchronization-constraints

  grouping synchronization-optimization {
    description
      "Optimizations applicable to synchronized path
       computation requests.";
    container optimizations {
      description
        "The objective function container that includes attributes
         to impose when computing a synchronized set of paths";
      choice algorithm {
        description
          "Optimizations algorithm.";
        case metric {
          if-feature "te-types:path-optimization-metric";
          list optimization-metric {
            key "metric-type";
            description
              "svec path metric type";
            leaf metric-type {
              type identityref {
                base te-types:svec-metric-type;
              }
              description
                "TE path metric type usable for computing a set of
                synchronized requests";
            }
            leaf weight {
              type uint8;
              description
                "Metric normalization weight";
            }
          }
        }
        case objective-function {
          if-feature
            "te-types:path-optimization-objective-function";
          container objective-function {
            description
              "The objective function container that includes
               attributes to impose when computing a TE path";
            leaf objective-function-type {
              type identityref {
                base te-types:svec-objective-function-type;
              }
              description
                "Objective function entry";
            }
          }
        }
      }
    }
  } // grouping synchronization-optimization

  grouping synchronization-info {
    description
      "Information for synchronized path computation requests.";
    list synchronization {
      description
        "List of Synchronization VECtors.";
      container svec {
        description
          "Synchronization VECtor";
        leaf relaxable {
          type boolean;
          default "true";
          description
            "If this leaf is true, taking into account this svec is
             OPTIONAL and the path computation process is
             free to ignore svec content.
             Otherwise, it MUST take into account this svec.";
        }
        uses te-types:generic-path-disjointness;
        leaf-list request-id {
          type uint32;
          description
            "This list reports the set of path computation
             requests that are requested to be synchronized.";
        }
      }
      uses synchronization-constraints;
      uses synchronization-optimization;
    }
  } // grouping synchronization-info

  /*
   * Augment TE RPCs
   */

  augment "/te:tunnels-path-compute/te:input/te:path-compute-info" {
    description
      "Augments Path Computation RPC input";
    list path-request {
      key "request-id";
      description
        "The list of the requested paths to be computed";
      leaf request-id {
        type uint32;
        mandatory true;
        description
          "Each path computation request is uniquely identified
           within the RPC request by the request-id.";
      }
      leaf compute-priority {
        if-feature compute-priority;
        type uint8;
        default 0;
        description
          "The path computation request's priority (from 1 to 7) 
          which can be used to constraint the order by which the 
          path computation server processes the path computation 
          requests.

          A higher numerical value of the priority field reflects a 
          higher priority.

          It MUST be set to the default value (i.e., 0) when 
          unused.";
        reference
          "Section 7.4.1 of RFC5440: Path Computation Element (PCE) 
          Communication Protocol (PCEP).";
      }
      choice tunnel-attributes {
        default "value";
        description
          "Whether the tunnel attributes are specified by value
           within this path computation request or by reference.
           The reference could be either to an existing te-tunnel
           or to an entry in the tunnel-attributes list";
        case reference {
          container tunnel-reference {
            description
              "Attributes for a requested path that belongs to
              either an exiting te-tunnel or to an entry in the
              tunnel-attributes list.";
            choice tunnel-exist {
              mandatory true;
              description
                "Whether the tunnel reference is to an existing
                te-tunnel or to an entry in the tunnel-attributes
                list";
              case tunnel-ref {
                leaf tunnel-ref {
                  type te:tunnel-ref;
                  mandatory true;
                  description
                    "The referenced te-tunnel instance";
                }
              } // case tunnel-ref
              case tunnel-attributes-ref {
                leaf tunnel-attributes-ref {
                  type leafref {
                    path "/te:tunnels-path-compute/"
                      + "te:path-compute-info/"
                      + "te-pc:tunnel-attributes/te-pc:tunnel-name";
                  }
                  mandatory true;
                  description
                    "The referenced te-tunnel instance";
                }
              } // case tunnel-attributes-ref 
            } // choice tunnel-exist
            leaf path-name {
              type string;
              description
                "TE path name.";
            }
            choice path-role {
              mandatory true;
              description
                "Whether this path is a primary, or a reverse
                primary, or a secondary, or a reverse secondary
                path.";
              case primary-path {
                container primary-path {
                  presence "Indicates that the requested path
                            is a primary path";
                  description
                    "TE primary path";
                  uses te:path-forward-properties;
                  uses te:k-requested-paths;
                } // container primary-path
              } // case primary-path
              case secondary-path {
                container secondary-path {
                  description
                    "TE secondary path";
                  leaf secondary-reverse-path {
                    type leafref {
                      path "/te:tunnels-path-compute/"
                        + "te:path-compute-info/te-pc:path-request/"
                        + "te-pc:request-id";
                    }
                    description
                      "A reference to the reverse secondary path 
                      when co-routed with the secondary path.";
                  }
                  leaf preference {
                    type uint8 {
                      range "1..255";
                    }
                    default "1";
                    description
                      "Specifies a preference for this path. The 
                      lower the number higher the preference.";
                  }
                  uses protection-restoration-properties;
                  list primary-path-ref {
                    min-elements 1;
                    description
                      "The list of primary paths that reference
                      this path as a candidate secondary path";
                    choice primary-path-exist {
                      mandatory true;
                      description
                        "Whether the path reference is to an existing
                        te-tunnel path or to another path request";
                      case path-ref {
                        leaf primary-path-ref {
                          type leafref {
                            path "/te:te/te:tunnels/te:tunnel"
                              + "[te:name=current()/../../../"
                              + "tunnel-ref]/te:primary-paths/"
                              + "te:primary-path/te:name";
                          }
                          must '../../../tunnel-ref' {
                            description
                              "The primary-path can be referenced
                              if also the tunnel is referenced.";
                          }
                          mandatory true;
                          description
                            "The referenced primary path";
                        }
                      } // case path-ref
                      case path-request-ref {
                        leaf path-request-ref {
                          type leafref {
                            path "/te:tunnels-path-compute/"
                              + "te:path-compute-info/"
                              + "te-pc:path-request/"
                              + "te-pc:request-id";
                          }
                          mandatory true;
                          description
                            "The referenced primary path request";
                        }
                      } // case path-request-ref 
                    } // choice primary-path-exist
                  } // list primary-path-ref
                } // container secondary-path
              } // case secondary-path
              case primary-reverse-path {
                container primary-reverse-path {
                  description
                    "TE primary reverse path";
                  choice primary-path-exist {
                    mandatory true;
                    description
                      "Whether the path reference to the primary
                      paths for which this path is the reverse-path
                      is to an existing te-tunnel path or to
                      another path request.";
                    case path-ref {
                      leaf primary-path-ref {
                        type leafref {
                          path "/te:te/te:tunnels/te:tunnel[te:name"
                            + "=current()/../../tunnel-ref]/"
                            + "te:primary-paths/te:primary-path/"
                            + "te:name";
                        }
                        must '../../tunnel-ref' {
                          description
                            "The primary-path can be referenced
                            if also the tunnel is referenced.";
                        }
                        mandatory true;
                        description
                          "The referenced primary path";
                      }
                    } // case path-ref
                    case path-request-ref {
                      leaf path-request-ref {
                        type leafref {
                          path "/te:tunnels-path-compute/"
                            + "te:path-compute-info/"
                            + "te-pc:path-request/"
                            + "te-pc:request-id";
                        }
                        mandatory true;
                        description
                          "The referenced primary path request";
                      }
                    } // case path-request-ref 
                  } // choice primary-path-exist
                } // container primary-reverse-path
              } // case primary-reverse-path
              case secondary-reverse-path {
                container secondary-reverse-path {
                  description
                    "TE secondary reverse path";
                  // uses te:path-preference;
                  leaf preference {
                    type uint8 {
                      range "1..255";
                    }
                    default "1";
                    description
                      "Specifies a preference for this path. The 
                      lower the number higher the preference.";
                  }
                  uses protection-restoration-properties;
                  list primary-reverse-path {
                    min-elements 1;
                    description
                      "The list of primary reverse paths that
                      reference this path as a candidate
                      secondary reverse path";
                    choice primary-reverse-path-exist {
                      mandatory true;
                      description
                        "Whether the path reference is to an existing
                        te-tunnel path or to another path request";
                      case path-ref {
                        leaf primary-path-ref {
                          type leafref {
                            path "/te:te/te:tunnels/te:tunnel"
                              + "[te:name=current()/../../../"
                              + "tunnel-ref]/te:primary-paths/"
                              + "te:primary-path/te:name";
                          }
                          must '../../../tunnel-ref' {
                            description
                              "The primary-path can be referenced
                              if also the tunnel is referenced.";
                          }
                          mandatory true;
                          description
                            "The referenced primary path";
                        }
                      } // case path-ref
                      case path-request-ref {
                        leaf path-request-ref {
                          type leafref {
                            path "/te:tunnels-path-compute/"
                              + "te:path-compute-info/"
                              + "te-pc:path-request/"
                              + "te-pc:request-id";
                          }
                          mandatory true;
                          description
                            "The referenced primary reverse path
                            request";
                        }
                      } // case path-request-ref 
                    } // choice primary-reverse-path-exist
                  } // list primary-reverse-path-ref
                } // container secondary-reverse-path
              } // case secondary-reverse-path
            } // choice tunnel-path-role
          }
        } // case reference
        case value {
          leaf tunnel-name {
            type string;
            description
              "TE tunnel name.";
          }
          leaf path-name {
            type string;
            description
              "TE path name.";
          }
          choice path-role {
            when 'not (./source) and not (./destination)' {
              description
                "When the tunnel attributes are specified by value
                within this path computation, it is assumed that the
                requested path will be the only path of a tunnel.

                If the requested path is a transit segment path
                (i.e., the source and destination containers are 
                not present), it could be of any type. Otherwise it 
                could only be a primary path.";
            }
            default primary-path;
            description
              "Indicates whether the requested path is a primary
              path, a secondary path, a reverse primary path or a
              reverse secondary path.";
            case primary-path {
              description
                "The requested path is a primary path.";
            }
            container secondary-path {
              presence
                "Indicates that the requested path is a secondary
                path.";
              description
                "The name of the primary path which the requested
                secondary path belongs to.";
              leaf primary-path-name {
                type string;
                description
                  "TE primary path name.";
              }
            } // container secondary-path
            container primary-reverse-path {
              presence
                "Indicates that the requested path is a primary
                reverse path.";
              description
                "The name of the primary path which the requested
                primary reverse path belongs to.";
              leaf primary-path-name {
                type string;
                description
                  "TE primary path name.";
              }
            } // container primary-reverse-path
            container secondary-reverse-path {
              presence
                "Indicates that the requested path is a secondary
                reverse path.";
              description
                "The names of the primary path and of the primary
                reverse path which the requested secondary reverse
                path belongs to.";
              leaf primary-path-name {
                type string;
                description
                  "TE primary path name.";
              }
              leaf primary-reverse-path-name {
                type string;
                description
                  "TE primary reverse path name.";
              }
            } // container primary-reverse-path
          } // choice path-role
          uses te:k-requested-paths;
          uses te-types:encoding-and-switching-type;
          uses te:tunnel-common-attributes;
          uses te-types:te-topology-identifier;
        } // case value
      } // choice tunnel-attributes
      uses te:path-compute-info;
      uses requested-info;
      uses requested-state;
    }
    list tunnel-attributes {
      key "tunnel-name";
      description
        "Tunnel attributes common to multiple request paths";
      leaf tunnel-name {
        type string;
        description
          "TE tunnel name.";
      }
      uses te-types:encoding-and-switching-type;
      uses te:tunnel-common-attributes;
      uses te:tunnel-associations-properties;
      uses protection-restoration-properties;
      uses te-types:tunnel-constraints;
      uses te:tunnel-hierarchy-properties {
        augment "hierarchy/dependency-tunnels" {
          description
            "Augment with the list of dependency tunnel requests.";
          list dependency-tunnel-attributes {
            key "name";
            description
              "A tunnel request entry that this tunnel request can
               potentially depend on.";
            leaf name {
              type leafref {
                path "/te:tunnels-path-compute/"
                   + "te:path-compute-info/te-pc:tunnel-attributes/"
                   + "te-pc:tunnel-name";
              }
              description
                "Dependency tunnel request name.";
            }
            uses te-types:encoding-and-switching-type;
          }
        }
      }
    }
    uses synchronization-info {
      if-feature svec;
    }
  } // path-compute rpc input

  augment "/te:tunnels-path-compute/te:output/"
        + "te:path-compute-result" {
    description
      "Auguments Path Computation RPC output";
    list response {
      key "response-id";
      config false;
      description
        "response";
      leaf response-id {
        type uint32;
        description
          "The response-id has the same value of the
           corresponding request-id.";
      }
      uses te:path-computation-response;
      uses reported-state;
    }
  } // path-compute rpc output

  augment "/te:tunnels-actions/te:input/te:tunnel-info/"
        + "te:filter-type" {
    description
      "Augment Tunnels Action RPC input filter types";
    case path-compute-transactions {
      when "derived-from-or-self(../te:action-info/te:action, "
         + "'tunnel-action-path-compute-delete')";
      description
        "Path Delete RPC input";
      leaf-list path-compute-transaction-id {
        type string;
        description
          "The list of the transaction-id values of the
           transient states to be deleted";
      }
    }
  } // path-delete rpc input

  augment "/te:tunnels-actions/te:output" {
    description
      "Augment Tunnels Action RPC output with path delete result";
    container path-computed-delete-result {
      description
        "Path Delete RPC output";
      leaf-list path-compute-transaction-id {
        type string;
        description
          "The list of the transaction-id values of the
           transient states that have been successfully deleted";
      }
    }
  } // path-delete rpc output
}
]]></sourcecode></figure>

</section>
</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>This document describes use cases of requesting Path Computation
   using YANG data models, which could be used at the ABNO Control
   Interface <xref target="RFC7491"/> and/or between controllers in ACTN <xref target="RFC8453"/>. As
   such, it does not introduce any new security considerations compared
   to the ones related to YANG specification, ABNO specification and
   ACTN Framework defined in <xref target="RFC7950"/>, <xref target="RFC7491"/> and <xref target="RFC8453"/>.</t>

<t>The YANG module defined in this document is designed to be accessed via
   the NETCONF protocol <xref target="RFC6241"/> or RESTCONF protocol <xref target="RFC8040"/>. The
   lowest NETCONF layer is the secure transport layer, and the
   mandatory-to-implement secure transport is Secure Shell (SSH)
   <xref target="RFC6242"/>. The lowest RESTCONF layer is HTTPS, and the mandatory-to-
   implement secure transport is TLS <xref target="RFC8446"/>.</t>

<t>The Network Configuration Access Control Model (NACM) 
   <xref target="RFC8341"/> provides the means to
   restrict access for particular NETCONF or RESTCONF users to a
   preconfigured subset of all available NETCONF or RESTCONF protocol
   operations and content.</t>

<t>The YANG module defined in this document augments the "tunnels-path-compute" and the "tunnel-actions" RPCs defined in <xref target="I-D.ietf-teas-yang-te"/>. The security considerations provided in <xref target="I-D.ietf-teas-yang-te"/> are also applicable to the YANG module
   defined in this document.</t>

<t>The RPC defined in this document can also be used for Denial-of-service (DoS) attacks. The security considerations defines in section 10.7.2 of <xref target="RFC5440"/> also applies to the use of this RPC.</t>

<t>The definition of the input shaping/policing mechanisms and of their configuration is outside the scope of this document.</t>

<t>Some of the RPC operations defined in this YANG module may be considered
   sensitive or vulnerable in some network environments.  It is thus
   important to control access to these operations. These are the
   operations and their sensitivity/vulnerability:</t>

<t>"te-pc:response/computed-paths-properties": provides the same information provided by the "te:computed-paths-properties" defined in <xref target="I-D.ietf-teas-yang-te"/>. The security considerations provided in <xref target="I-D.ietf-teas-yang-te"/> for the TE tunnel state apply also to this subtree.</t>

<t>"te-pc:response/te-pc:tunnel-ref", "te-pc:response/te-pc:primary-path-ref", "te-pc:response/te-pc:primary-reverse-path-ref", "te-pc:response/te-pc:secondary-path-ref" and "te-pc:response/te-pc:secondary-reverse-path-ref" provides a reference where the same information provided in "te-pc:response/computed-paths-properties" is temporarly stored with the operational datastore (see <xref target="temp-state"/>). Therefore access to this information does not provide any additional security issue that the information provided with "te-pc:response/computed-paths-properties".</t>

<t>"/te:tunnels-actions": the YANG model defined in this document augments this action with a new action type that allows deleting the transient states of computed paths (see <xref target="temp-state"/>). A malicious use of this action would have no impact on the paths carrying live traffic but it would preclude the client from using the "transient states" to request the set-up of exactly that path, if still available.</t>

<t>The security considerations spelled out in the
   YANG specification <xref target="RFC7950"/> apply for this document as well.</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>This document registers the following URIs in the "ns" subregistry
   within the "IETF XML registry" <xref target="RFC3688"/>.</t>

<figure><artwork><![CDATA[
      URI: urn:ietf:params:xml:ns:yang:ietf-te-path-computation
      Registrant Contact:  The IESG.
      XML: N/A, the requested URI is an XML namespace.
]]></artwork></figure>

<t>This document registers a YANG module in the "YANG Module Names"
   registry <xref target="RFC7950"/>.</t>

<figure><artwork><![CDATA[
      name:      ietf-te-path-computation
      namespace: urn:ietf:params:xml:ns:yang:ietf-te-path-computation
      prefix:    te-pc
      reference: this document
]]></artwork></figure>

</section>


  </middle>

  <back>


    <references title='Normative References'>



<reference anchor='RFC6241' target='https://www.rfc-editor.org/info/rfc6241'>
  <front>
    <title>Network Configuration Protocol (NETCONF)</title>
    <author fullname='R. Enns' initials='R.' role='editor' surname='Enns'/>
    <author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'/>
    <author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'/>
    <author fullname='A. Bierman' initials='A.' role='editor' surname='Bierman'/>
    <date month='June' year='2011'/>
    <abstract>
      <t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices. It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages. The NETCONF protocol operations are realized as remote procedure calls (RPCs). This document obsoletes RFC 4741. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='6241'/>
  <seriesInfo name='DOI' value='10.17487/RFC6241'/>
</reference>

<reference anchor='RFC8040' target='https://www.rfc-editor.org/info/rfc8040'>
  <front>
    <title>RESTCONF Protocol</title>
    <author fullname='A. Bierman' initials='A.' surname='Bierman'/>
    <author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'/>
    <author fullname='K. Watsen' initials='K.' surname='Watsen'/>
    <date month='January' year='2017'/>
    <abstract>
      <t>This document describes an HTTP-based protocol that provides a programmatic interface for accessing data defined in YANG, using the datastore concepts defined in the Network Configuration Protocol (NETCONF).</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8040'/>
  <seriesInfo name='DOI' value='10.17487/RFC8040'/>
</reference>

<reference anchor='RFC8795' target='https://www.rfc-editor.org/info/rfc8795'>
  <front>
    <title>YANG Data Model for Traffic Engineering (TE) Topologies</title>
    <author fullname='X. Liu' initials='X.' surname='Liu'/>
    <author fullname='I. Bryskin' initials='I.' surname='Bryskin'/>
    <author fullname='V. Beeram' initials='V.' surname='Beeram'/>
    <author fullname='T. Saad' initials='T.' surname='Saad'/>
    <author fullname='H. Shah' initials='H.' surname='Shah'/>
    <author fullname='O. Gonzalez de Dios' initials='O.' surname='Gonzalez de Dios'/>
    <date month='August' year='2020'/>
    <abstract>
      <t>This document defines a YANG data model for representing, retrieving, and manipulating Traffic Engineering (TE) Topologies. The model serves as a base model that other technology-specific TE topology models can augment.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8795'/>
  <seriesInfo name='DOI' value='10.17487/RFC8795'/>
</reference>


<reference anchor='I-D.ietf-teas-yang-te' target='https://datatracker.ietf.org/doc/html/draft-ietf-teas-yang-te-33'>
   <front>
      <title>A YANG Data Model for Traffic Engineering Tunnels, Label Switched Paths and Interfaces</title>
      <author fullname='Tarek Saad' initials='T.' surname='Saad'>
         <organization>Cisco Systems Inc</organization>
      </author>
      <author fullname='Rakesh Gandhi' initials='R.' surname='Gandhi'>
         <organization>Cisco Systems Inc</organization>
      </author>
      <author fullname='Xufeng Liu' initials='X.' surname='Liu'>
         <organization>Alef Edge</organization>
      </author>
      <author fullname='Vishnu Pavan Beeram' initials='V. P.' surname='Beeram'>
         <organization>Juniper Networks</organization>
      </author>
      <author fullname='Igor Bryskin' initials='I.' surname='Bryskin'>
         <organization>Individual</organization>
      </author>
      <author fullname='Oscar Gonzalez de Dios' initials='O. G.' surname='de Dios'>
         <organization>Telefonica</organization>
      </author>
      <date day='4' month='July' year='2023'/>
      <abstract>
	 <t>   This document defines a YANG data model for the provisioning and
   management of Traffic Engineering (TE) tunnels, Label Switched Paths
   (LSPs), and interfaces.  The model covers data that is independent of
   any technology or dataplane encapsulation and is divided into two
   YANG modules that cover device-specific, and device independent data.

   This model covers data for configuration, operational state, remote
   procedural calls, and event notifications.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-teas-yang-te-33'/>
   
</reference>

<reference anchor='RFC7950' target='https://www.rfc-editor.org/info/rfc7950'>
  <front>
    <title>The YANG 1.1 Data Modeling Language</title>
    <author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'/>
    <date month='August' year='2016'/>
    <abstract>
      <t>YANG is a data modeling language used to model configuration data, state data, Remote Procedure Calls, and notifications for network management protocols. This document describes the syntax and semantics of version 1.1 of the YANG language. YANG version 1.1 is a maintenance release of the YANG language, addressing ambiguities and defects in the original specification. There are a small number of backward incompatibilities from YANG version 1. This document also specifies the YANG mappings to the Network Configuration Protocol (NETCONF).</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='7950'/>
  <seriesInfo name='DOI' value='10.17487/RFC7950'/>
</reference>

<reference anchor='RFC5440' target='https://www.rfc-editor.org/info/rfc5440'>
  <front>
    <title>Path Computation Element (PCE) Communication Protocol (PCEP)</title>
    <author fullname='JP. Vasseur' initials='JP.' role='editor' surname='Vasseur'/>
    <author fullname='JL. Le Roux' initials='JL.' role='editor' surname='Le Roux'/>
    <date month='March' year='2009'/>
    <abstract>
      <t>This document specifies the Path Computation Element (PCE) Communication Protocol (PCEP) for communications between a Path Computation Client (PCC) and a PCE, or between two PCEs. Such interactions include path computation requests and path computation replies as well as notifications of specific states related to the use of a PCE in the context of Multiprotocol Label Switching (MPLS) and Generalized MPLS (GMPLS) Traffic Engineering. PCEP is designed to be flexible and extensible so as to easily allow for the addition of further messages and objects, should further requirements be expressed in the future. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='5440'/>
  <seriesInfo name='DOI' value='10.17487/RFC5440'/>
</reference>

<reference anchor='RFC7926' target='https://www.rfc-editor.org/info/rfc7926'>
  <front>
    <title>Problem Statement and Architecture for Information Exchange between Interconnected Traffic-Engineered Networks</title>
    <author fullname='A. Farrel' initials='A.' role='editor' surname='Farrel'/>
    <author fullname='J. Drake' initials='J.' surname='Drake'/>
    <author fullname='N. Bitar' initials='N.' surname='Bitar'/>
    <author fullname='G. Swallow' initials='G.' surname='Swallow'/>
    <author fullname='D. Ceccarelli' initials='D.' surname='Ceccarelli'/>
    <author fullname='X. Zhang' initials='X.' surname='Zhang'/>
    <date month='July' year='2016'/>
    <abstract>
      <t>In Traffic-Engineered (TE) systems, it is sometimes desirable to establish an end-to-end TE path with a set of constraints (such as bandwidth) across one or more networks from a source to a destination. TE information is the data relating to nodes and TE links that is used in the process of selecting a TE path. TE information is usually only available within a network. We call such a zone of visibility of TE information a domain. An example of a domain may be an IGP area or an Autonomous System.</t>
      <t>In order to determine the potential to establish a TE path through a series of connected networks, it is necessary to have available a certain amount of TE information about each network. This need not be the full set of TE information available within each network but does need to express the potential of providing TE connectivity. This subset of TE information is called TE reachability information.</t>
      <t>This document sets out the problem statement for the exchange of TE information between interconnected TE networks in support of end-to-end TE path establishment and describes the best current practice architecture to meet this problem statement. For reasons that are explained in this document, this work is limited to simple TE constraints and information that determine TE reachability.</t>
    </abstract>
  </front>
  <seriesInfo name='BCP' value='206'/>
  <seriesInfo name='RFC' value='7926'/>
  <seriesInfo name='DOI' value='10.17487/RFC7926'/>
</reference>

<reference anchor='RFC8340' target='https://www.rfc-editor.org/info/rfc8340'>
  <front>
    <title>YANG Tree Diagrams</title>
    <author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'/>
    <author fullname='L. Berger' initials='L.' role='editor' surname='Berger'/>
    <date month='March' year='2018'/>
    <abstract>
      <t>This document captures the current syntax used in YANG module tree diagrams. The purpose of this document is to provide a single location for this definition. This syntax may be updated from time to time based on the evolution of the YANG language.</t>
    </abstract>
  </front>
  <seriesInfo name='BCP' value='215'/>
  <seriesInfo name='RFC' value='8340'/>
  <seriesInfo name='DOI' value='10.17487/RFC8340'/>
</reference>


<reference anchor='I-D.ietf-teas-rfc8776-update' target='https://datatracker.ietf.org/doc/html/draft-ietf-teas-rfc8776-update-04'>
   <front>
      <title>Common YANG Data Types for Traffic Engineering</title>
      <author fullname='Italo Busi' initials='I.' surname='Busi'>
         <organization>Huawei</organization>
      </author>
      <author fullname='Aihua Guo' initials='A.' surname='Guo'>
         <organization>Futurewei Technologies</organization>
      </author>
      <author fullname='Xufeng Liu' initials='X.' surname='Liu'>
         <organization>Alef Edge</organization>
      </author>
      <author fullname='Tarek Saad' initials='T.' surname='Saad'>
         <organization>Cisco Systems Inc.</organization>
      </author>
      <author fullname='Vishnu Pavan Beeram' initials='V. P.' surname='Beeram'>
         <organization>Juniper Networks</organization>
      </author>
      <author fullname='Igor Bryskin' initials='I.' surname='Bryskin'>
         <organization>Individual</organization>
      </author>
      <date day='27' month='June' year='2023'/>
      <abstract>
	 <t>   This document defines a collection of common data types and groupings
   in YANG data modeling language.  These derived common types and
   groupings are intended to be imported by modules that model Traffic
   Engineering (TE) configuration and state capabilities.  This document
   obsoletes RFC 8776.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-teas-rfc8776-update-04'/>
   
</reference>

<reference anchor='RFC5441' target='https://www.rfc-editor.org/info/rfc5441'>
  <front>
    <title>A Backward-Recursive PCE-Based Computation (BRPC) Procedure to Compute Shortest Constrained Inter-Domain Traffic Engineering Label Switched Paths</title>
    <author fullname='JP. Vasseur' initials='JP.' role='editor' surname='Vasseur'/>
    <author fullname='R. Zhang' initials='R.' surname='Zhang'/>
    <author fullname='N. Bitar' initials='N.' surname='Bitar'/>
    <author fullname='JL. Le Roux' initials='JL.' surname='Le Roux'/>
    <date month='April' year='2009'/>
    <abstract>
      <t>The ability to compute shortest constrained Traffic Engineering Label Switched Paths (TE LSPs) in Multiprotocol Label Switching (MPLS) and Generalized MPLS (GMPLS) networks across multiple domains has been identified as a key requirement. In this context, a domain is a collection of network elements within a common sphere of address management or path computational responsibility such as an IGP area or an Autonomous Systems. This document specifies a procedure relying on the use of multiple Path Computation Elements (PCEs) to compute such inter-domain shortest constrained paths across a predetermined sequence of domains, using a backward-recursive path computation technique. This technique preserves confidentiality across domains, which is sometimes required when domains are managed by different service providers. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='5441'/>
  <seriesInfo name='DOI' value='10.17487/RFC5441'/>
</reference>

<reference anchor='RFC5541' target='https://www.rfc-editor.org/info/rfc5541'>
  <front>
    <title>Encoding of Objective Functions in the Path Computation Element Communication Protocol (PCEP)</title>
    <author fullname='JL. Le Roux' initials='JL.' surname='Le Roux'/>
    <author fullname='JP. Vasseur' initials='JP.' surname='Vasseur'/>
    <author fullname='Y. Lee' initials='Y.' surname='Lee'/>
    <date month='June' year='2009'/>
    <abstract>
      <t>The computation of one or a set of Traffic Engineering Label Switched Paths (TE LSPs) in MultiProtocol Label Switching (MPLS) and Generalized MPLS (GMPLS) networks is subject to a set of one or more specific optimization criteria, referred to as objective functions (e.g., minimum cost path, widest path, etc.).</t>
      <t>In the Path Computation Element (PCE) architecture, a Path Computation Client (PCC) may want a path to be computed for one or more TE LSPs according to a specific objective function. Thus, the PCC needs to instruct the PCE to use the correct objective function. Furthermore, it is possible that not all PCEs support the same set of objective functions; therefore, it is useful for the PCC to be able to automatically discover the set of objective functions supported by each PCE.</t>
      <t>This document defines extensions to the PCE communication Protocol (PCEP) to allow a PCE to indicate the set of objective functions it supports. Extensions are also defined so that a PCC can indicate in a path computation request the required objective function, and a PCE can report in a path computation reply the objective function that was used for path computation.</t>
      <t>This document defines objective function code types for six objective functions previously listed in the PCE requirements work, and provides the definition of four new metric types that apply to a set of synchronized requests. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='5541'/>
  <seriesInfo name='DOI' value='10.17487/RFC5541'/>
</reference>

<reference anchor='RFC6242' target='https://www.rfc-editor.org/info/rfc6242'>
  <front>
    <title>Using the NETCONF Protocol over Secure Shell (SSH)</title>
    <author fullname='M. Wasserman' initials='M.' surname='Wasserman'/>
    <date month='June' year='2011'/>
    <abstract>
      <t>This document describes a method for invoking and running the Network Configuration Protocol (NETCONF) within a Secure Shell (SSH) session as an SSH subsystem. This document obsoletes RFC 4742. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='6242'/>
  <seriesInfo name='DOI' value='10.17487/RFC6242'/>
</reference>

<reference anchor='RFC8446' target='https://www.rfc-editor.org/info/rfc8446'>
  <front>
    <title>The Transport Layer Security (TLS) Protocol Version 1.3</title>
    <author fullname='E. Rescorla' initials='E.' surname='Rescorla'/>
    <date month='August' year='2018'/>
    <abstract>
      <t>This document specifies version 1.3 of the Transport Layer Security (TLS) protocol. TLS allows client/server applications to communicate over the Internet in a way that is designed to prevent eavesdropping, tampering, and message forgery.</t>
      <t>This document updates RFCs 5705 and 6066, and obsoletes RFCs 5077, 5246, and 6961. This document also specifies new requirements for TLS 1.2 implementations.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8446'/>
  <seriesInfo name='DOI' value='10.17487/RFC8446'/>
</reference>

<reference anchor='RFC8341' target='https://www.rfc-editor.org/info/rfc8341'>
  <front>
    <title>Network Configuration Access Control Model</title>
    <author fullname='A. Bierman' initials='A.' surname='Bierman'/>
    <author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'/>
    <date month='March' year='2018'/>
    <abstract>
      <t>The standardization of network configuration interfaces for use with the Network Configuration Protocol (NETCONF) or the RESTCONF protocol requires a structured and secure operating environment that promotes human usability and multi-vendor interoperability. There is a need for standard mechanisms to restrict NETCONF or RESTCONF protocol access for particular users to a preconfigured subset of all available NETCONF or RESTCONF protocol operations and content. This document defines such an access control model.</t>
      <t>This document obsoletes RFC 6536.</t>
    </abstract>
  </front>
  <seriesInfo name='STD' value='91'/>
  <seriesInfo name='RFC' value='8341'/>
  <seriesInfo name='DOI' value='10.17487/RFC8341'/>
</reference>

<reference anchor='RFC3688' target='https://www.rfc-editor.org/info/rfc3688'>
  <front>
    <title>The IETF XML Registry</title>
    <author fullname='M. Mealling' initials='M.' surname='Mealling'/>
    <date month='January' year='2004'/>
    <abstract>
      <t>This document describes an IANA maintained registry for IETF standards which use Extensible Markup Language (XML) related items such as Namespaces, Document Type Declarations (DTDs), Schemas, and Resource Description Framework (RDF) Schemas.</t>
    </abstract>
  </front>
  <seriesInfo name='BCP' value='81'/>
  <seriesInfo name='RFC' value='3688'/>
  <seriesInfo name='DOI' value='10.17487/RFC3688'/>
</reference>




    </references>

    <references title='Informative References'>



<reference anchor='RFC7491' target='https://www.rfc-editor.org/info/rfc7491'>
  <front>
    <title>A PCE-Based Architecture for Application-Based Network Operations</title>
    <author fullname='D. King' initials='D.' surname='King'/>
    <author fullname='A. Farrel' initials='A.' surname='Farrel'/>
    <date month='March' year='2015'/>
    <abstract>
      <t>Services such as content distribution, distributed databases, or inter-data center connectivity place a set of new requirements on the operation of networks. They need on-demand and application-specific reservation of network connectivity, reliability, and resources (such as bandwidth) in a variety of network applications (such as point-to-point connectivity, network virtualization, or mobile back-haul) and in a range of network technologies from packet (IP/MPLS) down to optical. An environment that operates to meet these types of requirements is said to have Application-Based Network Operations (ABNO). ABNO brings together many existing technologies and may be seen as the use of a toolbox of existing components enhanced with a few new elements.</t>
      <t>This document describes an architecture and framework for ABNO, showing how these components fit together. It provides a cookbook of existing technologies to satisfy the architecture and meet the needs of the applications.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='7491'/>
  <seriesInfo name='DOI' value='10.17487/RFC7491'/>
</reference>

<reference anchor='RFC8453' target='https://www.rfc-editor.org/info/rfc8453'>
  <front>
    <title>Framework for Abstraction and Control of TE Networks (ACTN)</title>
    <author fullname='D. Ceccarelli' initials='D.' role='editor' surname='Ceccarelli'/>
    <author fullname='Y. Lee' initials='Y.' role='editor' surname='Lee'/>
    <date month='August' year='2018'/>
    <abstract>
      <t>Traffic Engineered (TE) networks have a variety of mechanisms to facilitate the separation of the data plane and control plane. They also have a range of management and provisioning protocols to configure and activate network resources. These mechanisms represent key technologies for enabling flexible and dynamic networking. The term "Traffic Engineered network" refers to a network that uses any connection-oriented technology under the control of a distributed or centralized control plane to support dynamic provisioning of end-to- end connectivity.</t>
      <t>Abstraction of network resources is a technique that can be applied to a single network domain or across multiple domains to create a single virtualized network that is under the control of a network operator or the customer of the operator that actually owns the network resources.</t>
      <t>This document provides a framework for Abstraction and Control of TE Networks (ACTN) to support virtual network services and connectivity services.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8453'/>
  <seriesInfo name='DOI' value='10.17487/RFC8453'/>
</reference>

<reference anchor='RFC8454' target='https://www.rfc-editor.org/info/rfc8454'>
  <front>
    <title>Information Model for Abstraction and Control of TE Networks (ACTN)</title>
    <author fullname='Y. Lee' initials='Y.' surname='Lee'/>
    <author fullname='S. Belotti' initials='S.' surname='Belotti'/>
    <author fullname='D. Dhody' initials='D.' surname='Dhody'/>
    <author fullname='D. Ceccarelli' initials='D.' surname='Ceccarelli'/>
    <author fullname='B. Yoon' initials='B.' surname='Yoon'/>
    <date month='September' year='2018'/>
    <abstract>
      <t>This document provides an information model for Abstraction and Control of TE Networks (ACTN).</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8454'/>
  <seriesInfo name='DOI' value='10.17487/RFC8454'/>
</reference>


<reference anchor='I-D.ietf-ccamp-otn-topo-yang' target='https://datatracker.ietf.org/doc/html/draft-ietf-ccamp-otn-topo-yang-16'>
   <front>
      <title>A YANG Data Model for Optical Transport Network Topology</title>
      <author fullname='Haomian Zheng' initials='H.' surname='Zheng'>
         <organization>Huawei Technologies</organization>
      </author>
      <author fullname='Italo Busi' initials='I.' surname='Busi'>
         <organization>Huawei Technologies</organization>
      </author>
      <author fullname='Xufeng Liu' initials='X.' surname='Liu'>
         <organization>IBM Corporation</organization>
      </author>
      <author fullname='Sergio Belotti' initials='S.' surname='Belotti'>
         <organization>Nokia</organization>
      </author>
      <author fullname='Oscar Gonzalez de Dios' initials='O. G.' surname='de Dios'>
         <organization>Telefonica</organization>
      </author>
      <date day='23' month='November' year='2022'/>
      <abstract>
	 <t>   This document describes a YANG data model to describe the topologies
   of an Optical Transport Network (OTN).  It is independent of control
   plane protocols and captures topological and resource-related
   information pertaining to OTN.  This model enables clients, which
   interact with a transport domain controller, for OTN topology-related
   operations such as obtaining the relevant topology resource
   information.


	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-ccamp-otn-topo-yang-16'/>
   
</reference>

<reference anchor='RFC4655' target='https://www.rfc-editor.org/info/rfc4655'>
  <front>
    <title>A Path Computation Element (PCE)-Based Architecture</title>
    <author fullname='A. Farrel' initials='A.' surname='Farrel'/>
    <author fullname='J.-P. Vasseur' initials='J.-P.' surname='Vasseur'/>
    <author fullname='J. Ash' initials='J.' surname='Ash'/>
    <date month='August' year='2006'/>
    <abstract>
      <t>Constraint-based path computation is a fundamental building block for traffic engineering systems such as Multiprotocol Label Switching (MPLS) and Generalized Multiprotocol Label Switching (GMPLS) networks. Path computation in large, multi-domain, multi-region, or multi-layer networks is complex and may require special computational components and cooperation between the different network domains.</t>
      <t>This document specifies the architecture for a Path Computation Element (PCE)-based model to address this problem space. This document does not attempt to provide a detailed description of all the architectural components, but rather it describes a set of building blocks for the PCE architecture from which solutions may be constructed. This memo provides information for the Internet community.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='4655'/>
  <seriesInfo name='DOI' value='10.17487/RFC4655'/>
</reference>

<reference anchor='RFC8342' target='https://www.rfc-editor.org/info/rfc8342'>
  <front>
    <title>Network Management Datastore Architecture (NMDA)</title>
    <author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'/>
    <author fullname='J. Schoenwaelder' initials='J.' surname='Schoenwaelder'/>
    <author fullname='P. Shafer' initials='P.' surname='Shafer'/>
    <author fullname='K. Watsen' initials='K.' surname='Watsen'/>
    <author fullname='R. Wilton' initials='R.' surname='Wilton'/>
    <date month='March' year='2018'/>
    <abstract>
      <t>Datastores are a fundamental concept binding the data models written in the YANG data modeling language to network management protocols such as the Network Configuration Protocol (NETCONF) and RESTCONF. This document defines an architectural framework for datastores based on the experience gained with the initial simpler model, addressing requirements that were not well supported in the initial model. This document updates RFC 7950.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8342'/>
  <seriesInfo name='DOI' value='10.17487/RFC8342'/>
</reference>

<reference anchor='RFC6805' target='https://www.rfc-editor.org/info/rfc6805'>
  <front>
    <title>The Application of the Path Computation Element Architecture to the Determination of a Sequence of Domains in MPLS and GMPLS</title>
    <author fullname='D. King' initials='D.' role='editor' surname='King'/>
    <author fullname='A. Farrel' initials='A.' role='editor' surname='Farrel'/>
    <date month='November' year='2012'/>
    <abstract>
      <t>Computing optimum routes for Label Switched Paths (LSPs) across multiple domains in MPLS Traffic Engineering (MPLS-TE) and GMPLS networks presents a problem because no single point of path computation is aware of all of the links and resources in each domain. A solution may be achieved using the Path Computation Element (PCE) architecture.</t>
      <t>Where the sequence of domains is known a priori, various techniques can be employed to derive an optimum path. If the domains are simply connected, or if the preferred points of interconnection are also known, the Per-Domain Path Computation technique can be used. Where there are multiple connections between domains and there is no preference for the choice of points of interconnection, the Backward-Recursive PCE-based Computation (BRPC) procedure can be used to derive an optimal path.</t>
      <t>This document examines techniques to establish the optimum path when the sequence of domains is not known in advance. The document shows how the PCE architecture can be extended to allow the optimum sequence of domains to be selected, and the optimum end-to-end path to be derived through the use of a hierarchical relationship between domains. This document is not an Internet Standards Track specification; it is published for informational purposes.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='6805'/>
  <seriesInfo name='DOI' value='10.17487/RFC6805'/>
</reference>

<reference anchor='RFC7446' target='https://www.rfc-editor.org/info/rfc7446'>
  <front>
    <title>Routing and Wavelength Assignment Information Model for Wavelength Switched Optical Networks</title>
    <author fullname='Y. Lee' initials='Y.' role='editor' surname='Lee'/>
    <author fullname='G. Bernstein' initials='G.' role='editor' surname='Bernstein'/>
    <author fullname='D. Li' initials='D.' surname='Li'/>
    <author fullname='W. Imajuku' initials='W.' surname='Imajuku'/>
    <date month='February' year='2015'/>
    <abstract>
      <t>This document provides a model of information needed by the Routing and Wavelength Assignment (RWA) process in Wavelength Switched Optical Networks (WSONs). The purpose of the information described in this model is to facilitate constrained optical path computation in WSONs. This model takes into account compatibility constraints between WSON signal attributes and network elements but does not include constraints due to optical impairments. Aspects of this information that may be of use to other technologies utilizing a GMPLS control plane are discussed.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='7446'/>
  <seriesInfo name='DOI' value='10.17487/RFC7446'/>
</reference>




    </references>


<section anchor="examples"><name>Examples</name>

<t>This section contains examples of use of the model with RESTCONF
<xref target="RFC8040"/> and JSON encoding.</t>

<t>These examples show how path computation can be requested for the tunnels configuration provided in Appendix A of <xref target="I-D.ietf-teas-yang-te"/>.</t>

<section anchor="basic-example"><name>Basic Path Computation</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 12.1 of of <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>In this case, the TE Tunnel has only one primary path with no specific constraints.</t>

<figure><artwork type="ascii-art"><![CDATA[
POST /restconf/operations/ietf-te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="basic.json"><![CDATA[
{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 1,
          "tunnel-name": "Example_LSP_Tunnel_A_2",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "192.0.2.1",
          "destination": "192.0.2.4",
          "bidirectional": "false",
          "signaling-type": "te-types:path-setup-rsvp"
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="transient-state-example"><name>Path Computation with transient state</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 12.1 of of <xref target="I-D.ietf-teas-yang-te"/> requesting some transient state to be reported within the operational datastore, as described <xref target="temp-state"/>.</t>

<t>In this case, the TE Tunnel has only one primary path with no specific constraints.</t>

<figure><artwork type="ascii-art"><![CDATA[
POST /restconf/operations/ietf-te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="transient-state.json"><![CDATA[
{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 2,
          "tunnel-name": "Example_LSP_Tunnel_A_2",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "192.0.2.1",
          "destination": "192.0.2.4",
          "bidirectional": "false",
          "signaling-type": "te-types:path-setup-rsvp",
          "requested-state": {
            "transaction-id": "example"
          }
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="global-path-constraint-example"><name>Path Computation with Global Path Constraint</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 12.3 of of <xref target="I-D.ietf-teas-yang-te"/>. The 'named path constraint' is created in section 12.2 of <xref target="I-D.ietf-teas-yang-te"/> applies to this path computation request.</t>

<figure><artwork type="ascii-art"><![CDATA[
POST /restconf/operations/ietf-te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="global-path-constraint.json"><![CDATA[
{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 3,
          "tunnel-name": "Example_LSP_Tunnel_A_4_1",
          "path-name": "Simple_LSP_1",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "192.0.2.1",
          "destination": "192.0.2.4",
          "bidirectional": "false",
          "signaling-type": "path-setup-rsvp",
          "named-path-constraint": "max-hop-3",
          "requested-state": {}
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="tunnel-path-constraint-example"><name>Path Computation with Per-tunnel Path Constraint</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 12.4 of of <xref target="I-D.ietf-teas-yang-te"/>, using a per tunnel path constraint.</t>

<figure><artwork type="ascii-art"><![CDATA[
POST /restconf/operations/ietf-te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="tunnel-path-constraint.json"><![CDATA[
{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 4,
          "tunnel-name": "Example_LSP_Tunnel_A_4_2",
          "path-name": "path1",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "192.0.2.1",
          "destination": "192.0.2.4",
          "bidirectional": "false",
          "signaling-type": "te-types:path-setup-rsvp",
          "path-metric-bounds": {
            "path-metric-bound": [
              {
                "metric-type": "te-types:path-metric-hop",
                "upper-bound": "3"
              }
            ]
          }
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="path-computation-result"><name>Path Computation result</name>

<t>This example reports the output of the path computation RPC request described in <xref target="tunnel-path-constraint-example"/>.</t>

<figure><artwork type="ascii-art"><![CDATA[
HTTP/1.1 200 OK
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="computed-path.json"><![CDATA[
{
  "ietf-te:output": {
    "path-compute-result": {
      "ietf-te-path-computation:response": [
        {
          "response-id": 3,
          "computed-paths-properties": {
            "computed-path-properties": [
              {
                "k-index": "1",
                "path-properties": {
                  "path-route-objects": {
                    "path-route-object": [
                      {
                        "index": "1",
                        "numbered-node-hop": {
                          "node-id": "192.0.2.2"
                        }
                      },
                      {
                        "index": "2",
                        "numbered-node-hop": {
                          "node-id": "192.0.2.4"
                        }
                      }
                    ]
                  }
                }
              }
            ]
          },
          "tunnel-ref": "Example_LSP_Tunnel_A_4_1",
          "primary-path-ref": "path1"
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="path-computation-with-primary-and-secondary-paths"><name>Path Computation with Primary and Secondary Paths</name>

<t>This section contains examples of use of the model to compute primary and secondary paths described in section 12.6 of <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>These examples consider the cases where:
- primary and reverse paths are unidirectional and not co-routed (example-1);
- primary and reverse paths are bidirectional (example-3);
- primary and reverse paths are unidirectional and co-routed (example-4).</t>

<figure><artwork type="ascii-art"><![CDATA[
POST /restconf/operations/ietf-te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="primary-secondary-paths.json"><![CDATA[
{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 1,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "primary-1 (fwd)",
            "primary-path": {}
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 2,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "primary-2 (rev)",
            "primary-reverse-path": {
              "primary-path-request-ref": 1
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.3",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 3,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-1 (fwd)",
            "secondary-path": {
              "primary-path": [
                {
                  "path-request-ref": 1
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.1"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 4,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-2 (fwd)",
            "secondary-path": {
              "primary-path": [
                {
                  "path-request-ref": 1
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.5",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 5,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-3 (rev)",
            "secondary-reverse-path": {
              "primary-reverse-path": [
                {
                  "path-request-ref": 2
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.5"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.4",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 6,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-4 (rev)",
            "secondary-reverse-path": {
              "primary-reverse-path": [
                {
                  "path-request-ref": 2
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.4"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.3",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 7,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-5 (rev)",
            "secondary-reverse-path": {
              "primary-reverse-path": [
                {
                  "path-request-ref": 2
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.3"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.1",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 8,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-3",
            "path-name": "primary-1 (bidir)",
            "primary-path": {}
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 9,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-3",
            "path-name": "secondary-1 (bidir)",
            "secondary-path": {
              "primary-path": [
                {
                  "path-request-ref": 8
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.1"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 10,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-3",
            "path-name": "secondary-2 (bidir)",
            "secondary-path": {
              "primary-path": [
                {
                  "path-request-ref": 8
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.5",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 11,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-4",
            "path-name": "primary-1 (fwd)",
            "primary-path": {
              "co-routed": [null]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 12,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-4",
            "path-name": "primary-2 (rev)",
            "primary-reverse-path": {
              "primary-path-request-ref": 11
            }
          }
        },
        {
          "request-id": 13,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-4",
            "path-name": "secondary-1 (fwd)",
            "secondary-path": {
              "primary-path": [
                {
                  "co-routed": [null],
                  "path-request-ref": 11
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.1"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 14,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-4",
            "path-name": "secondary-2 (fwd)",
            "secondary-path": {
              "primary-path": [
                {
                  "co-routed": [null],
                  "path-request-ref": 11
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.5",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 15,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-3 (rev)",
            "secondary-reverse-path": {
              "primary-reverse-path": [
                {
                  "path-request-ref": 12
                }
              ]
            }
          }
        },
        {
          "request-id": 16,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-4 (rev)",
            "secondary-reverse-path": {
              "primary-reverse-path": [
                {
                  "path-request-ref": 12
                }
              ]
            }
          }
        }
      ],
      "ietf-te-path-computation:tunnel-attributes": [
        {
          "tunnel-name": "example-1",
          "source": "192.0.2.1",
          "destination": "192.0.2.5",
          "bidirectional": "false"
        },
        {
          "tunnel-name": "example-3",
          "source": "192.0.2.1",
          "destination": "192.0.2.5",
          "bidirectional": "true"
        },
        {
          "tunnel-name": "example-4",
          "source": "192.0.2.1",
          "destination": "192.0.2.5",
          "bidirectional": "false"
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
</section>
<section numbered="false" anchor="acknowledgments"><name>Acknowledgments</name>

<t>The authors would like to thank Igor Bryskin and Xian Zhang for
   participating in the initial discussions that have triggered this
   work and providing valuable insights.</t>

<t>The authors would like to thank the authors of the TE tunnel YANG
   data model <xref target="I-D.ietf-teas-yang-te"/>, in particular Igor Bryskin, Vishnu Pavan
   Beeram, Tarek Saad and Xufeng Liu, for their inputs to the
   discussions and support in having consistency between the Path
   Computation and TE tunnel YANG data models.</t>

<t>The authors would like to thank Adrian Farrel, Dhruv Dhody, Igor
   Bryskin, Julien Meuric and Lou Berger for their valuable input to the
   discussions that has clarified that the path being set up is not
   necessarily the same as the path that has been previously computed
   and, in particular to Dhruv Dhody, for his suggestion to describe the
   need for a path verification phase to check that the actual path
   being set up meets the required end-to-end metrics and constraints.</t>

<t>The authors would like to thank Aihua Guo, Lou Berger, Shaolong Gan,
   Martin Bjorklund and Tom Petch for their useful comments on how to
   define XPath statements in YANG RPCs.</t>

<t>The authors would like to thank Haomian Zheng, Yanlei Zheng, Tom
   Petch, Aihua Guo and Martin Bjorklund for their review and valuable
   comments to this document.</t>

<t>Previous versions of document were prepared using 2-Word-v2.0.template.dot.</t>

<t>This document was prepared using kramdown.</t>

</section>

    <section anchor="contributors" numbered="false" toc="include" removeInRFC="false">
        <name>Contributors</name>
    <contact initials="D." surname="Ceccarelli" fullname="Daniele Ceccarelli">
      <organization>Cisco</organization>
      <address>
        <email>daniele.ietf@gmail.com</email>
      </address>
    </contact>
    <contact initials="V." surname="Lopez" fullname="Victor Lopez">
      <organization>Nokia</organization>
      <address>
        <email>victor.lopez@nokia.com</email>
      </address>
    </contact>
    <contact initials="R." surname="Vilalta" fullname="Ricard Vilalta">
      <organization>CTTC</organization>
      <address>
        <email>ricard.vilalta@cttc.es</email>
      </address>
    </contact>
    <contact initials="K." surname="Sethuraman" fullname="Karthik Sethuraman">
      <organization>NEC</organization>
      <address>
        <email>karthik.sethuraman@necam.com</email>
      </address>
    </contact>
    <contact initials="M." surname="Scharf" fullname="Michael Scharf">
      <organization>Nokia</organization>
      <address>
        <email>michael.scharf@gmail.com</email>
      </address>
    </contact>
    <contact initials="D." surname="Beller" fullname="Dieter Beller">
      <organization>Nokia</organization>
      <address>
        <email>dieter.beller@nokia.com</email>
      </address>
    </contact>
    <contact initials="G." surname="Bruno" fullname="Gianmarco Bruno">
      <organization>Ericsson</organization>
      <address>
        <email>gianmarco.bruno@ericsson.com</email>
      </address>
    </contact>
    <contact initials="F." surname="Lazzeri" fullname="Francesco Lazzeri">
      <organization>Ericsson</organization>
      <address>
        <email>francesco.lazzeri@ericsson.com</email>
      </address>
    </contact>
    <contact initials="Y." surname="Lee" fullname="Young Lee">
      <organization>Samsung Electronics</organization>
      <address>
        <email>younglee.tx@gmail.com</email>
      </address>
    </contact>
    <contact initials="C." surname="Perocchio" fullname="Carlo Perocchio">
      <organization>Ericsson</organization>
      <address>
        <email>carlo.perocchio@ericsson.com</email>
      </address>
    </contact>
    <contact initials="O." surname="Dugeon" fullname="Olivier Dugeon">
      <organization>Orange Labs</organization>
      <address>
        <email>olivier.dugeon@orange.com</email>
      </address>
    </contact>
    <contact initials="J." surname="Meuric" fullname="Julien Meuric">
      <organization>Orange Labs</organization>
      <address>
        <email>julien.meuric@orange.com</email>
      </address>
    </contact>
    </section>

  </back>

<!-- ##markdown-source:
H4sIAAAAAAAAA+y9a3ccx5Eg+p3n8D/UwB8EWN0N8SXJkGUJBEGZd8THErQ0
3qHvnEJ3Aahho6unqpoQJPD+9huvzIzMyqyqBmWv7XXvrAV25yMyMjIyIjIe
0+n07p15tShX5wfZpj2bfnn3zt07bdkui4PsMPvz4Yvvsid5m2fPq0WxzM6q
OquL/9kUTQs9snXeXmTz6nK9afO2rFbYNz89rYv3B9mfc2iA7V9hoyPdaFHN
V/klTLCo87N2WhYwb1vkzfQa+kxx0KkadHr/3t07zeb0smwa+Gd7vYaez47f
PL1756qq353X1WZ9kL05PjzJfoR/I1zf4Xewrrwtzqv6+iBr2sXdO+W6Psja
etO09z/77Hef3UdomzZfLf4rX1YrGPS6aO7eWZcH2X+21XySNVXd1sVZA39d
X/IfANZlsWqbv9BKN+1FVR/cvZNlU/yfLONVPWthvOzxpin527pCZBaLsq1q
/qaqAdt/3ORXRZm9KeYXq2pZnZc4O/5aXObl8iArcZjZKQzz7QU1ncHsnclO
ivq8hNmKZdW2/RO+qN6VuTdFQ51np9z52xU2iM7yspnndfZdtfo5XxY/Z4si
e1JWAm65aqDBLPErzfymWBZn1aqc+9NXOOrsXPotAOCq+ba1baOQHK42dX6e
nVzk9WWupviuqs6XhTd8vmou8m/P6YfoWECiMFCpRjm6KFd59ieYnZs7TF2U
QJwPf/ftHFtsqMFsTgQ/B5qsy9NNG6OFJ/mqhAVlR8Uc1losl95sZTOvvGkW
3HyGR+Lbc/wuCvgP5Rxmy76v1sXPvRv8nhrOltiwZ3tfA7brBQy7zJetxurR
mzdH3oA1tZy955bfztt2PmO69Qb897xuL8p3QJ3tBezXZb7SYB77Y77jxrPG
Nv52Vczzyyioz8v5RQ6c6AT+U5/1Lv6Sm84aatqDzieA7qLGM7Qs+g/Mglri
gYGWPQj9rsxXl3k9h4NZb1aVGvMYMNg01cob9tw0n51i828LaRQd+2mdr+YF
UE72ff7zz9B0aPQz02G25A794/+52gAL/b4o1Lgn+WWD3x4vi3lb4+n0edU1
9lkWxaz9qQfPR3kNjPFVUVdzOEaDWJlj89naNO+H+uWyfF/CJj7ZnBeVpraX
sPrzAnB16oNccYfZgjp8W1Gz6ND/z2ZZFqvsebEBAEaM/N/UfnZJ7b2B796Z
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
rERydOwBdZiUUYha9gioVYZGivaaaRuPbL5G7m/uF95eXEvulDscFl+OKtS4
rKziGpzX+fpiIjyfLwdQWK5xFEUucNPCXiEHL5HjLDa14X+eNkrIBXhpHAGW
Ic+VFqS5/bLClyJm6KWGC9FpaA7nqFYw3oRghy3ZtNPqbGra8qEGQaOdAwxP
YbnFTzme8Anfi8wYjMZKKAvUUEaTsLfv81O0cgNIcGsteGd2vz95tcfXxLWR
/vBmXzkRCTCIOEJVGn86hS+uykV7wbhFpiSLcXgUrAhAcp3ATLQi1GGMVO9x
H0NErPD4xH3sEWjJlwMdxbpYMswwU5dWRUBhuiLNQKS8NVrBGtbBCzoSRF/Q
j7T1LJiSzwgOsSFjDF4JRniCVYbbDP1/LEhLYokqz36GjTaUiBKUE7mCteUZ
Ww1giMOV2XDeQzEnsLGFaXqVPfvuFYqxOZ4GVMs3bbWqLqtNk51cN21xObNX
7P3PP3zQQopjKSSeCr81MpxidA2u/KzarAI+zre2ZVF1ga90OZy8SzMNfrXg
rzT6Na88q1C6ZIGoEh4RvTWAIarZXtXQ5icyiLCw/AIP1ov8EnUS6vUsmGlC
tnfacVqaIxaW9BRjr07/GyiCiQdVhDVPtlDyEb3y4gsX/4aXdjUv7ZlXQnld
FyDtrxYWsXBJg/BfkMC2WaI8Dxdlc1Fdrfg+Bn495VFluTey2kw+NzwOd8+8
z0322tqD8J/Qeep/wn+nf8LOQCVTNlbJ8CLo6C/NT2Qm/t/w+YvMDJ39FtI5
63ykM5qQVefpet7t3HnMxzU/PfoP+EhLtq46LGbke/D1jiUZZmmdfZHt2KFD
QhZveu4GymoL4EaByZsmjJm7gRLK8xWb8DwCnHXG6DGZ9wiW/RbzYArcj9FT
1GfzL7/44nPQLOAwjJ/pEsQ3Xiqc4GJm7Ntw3qcksYkN/E8NPjk09oCSitCI
NAJb1ZDU7wt71kBn5F2Uyhpl9aWRgDMVNV/uJ09eeFYP5Gwd87LiglZj2EK8
44XSEDWqf+W8NduNxl0nqZ5uWs8qhVcECPjMb0wzI94j2wPRCJlMcbZZaiAF
OfxbI4Nf5O8L3hTyV0Ery6JYF0zQfIEHxi6FptZaUw5AEJi/K9p9Y3pAW965
aEa7v/yyrsrpZv7hw95XNJpn2A5NQwAgvQ84k+svv1wupDsdO2LVR7iWWpg0
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
BeTWK+iC/03w800H+O5ysiGtlj8x8dr1Tmu4Q723kpidsEypvTrHU9xzmT3R
FikOKXvG7N8Lp4hbnwKOR+NI5HZawBxhx2FBQdlyQjtOPIJTgk4xyXKhsuX5
0rQtckRinclzI79wdWOB0U5yZttG25mUQiZ8uSk4toKseZ6BO8hEOlHRY3TZ
XrMDw67YCSfOQIj2RYptmspvjOvafm1bSgS4Inm5+CQgn/NjEhVwbSRsE7to
+xj22KNFjEAgpss95AemjQU/1coqzbrdv0XbGW6hprVcI8oiQkAtqntBibX+
lQFyqx0AKQuxMwBU1g+U+aSA63bX83XW1s+7Tq/ZD8B/IFz5yRR0Ap/eg5h7
EYJeskmPdCbaIO+Br1LZmQ7yqqTb1NgZPZTmhYpgMOdLpHBmMnTAlFcMDnBA
Fd1MIIg9epp9SWnxxHKubZ5FTNKRrwwQNJYk4PKWSOOT0UBlLIiwR6tDB9lY
dF2Gti4wb1a9oXx8rEyNK/AhxnZfT4/q5mzWHs6116uey8b1qOjhE2NUQ5cH
uJiW7qVXpqd/F1GqFHe2OA0q7zbfsVlkMxt5lSup113nTlyOXOn6YV3lqzC7
TqP4sUW3MrmppzJ1a5u0pcmTohOwOQrVykWWqem9pzhzZDDbqvfCJk9poTTr
7keh4oGrb7xc3H//2WY3XV78b6mGWUc89WfruUnD+fymt51w8NZMLVN3+PjV
Dk+f9V2SqR7ZKPn79NqpnV1ztebAckWNuTlU2YSAR5fxh/G8c/2hFclLAmRu
Ccp223kEDQwYVpRXQ3rVBaLRjnvpS1et16wzqGjgLTI448FCg9h+SY0iM2DM
JRdPEvzJ5lAuAx3U6a1NvQVvOK98blJcwHeLkmpp+POOYhW/4pFLiJOwQBcn
Fu2SGY6lu6WMIFnn2BzsmnmGm0fYmTFRJC0UPTOyb9aomTNlKFAdvZlT4RPe
zniH+FCRZkB1HMDsrLvXmoo1adkCVs6+2muLNaKtZy9WdynrjiRHkazhA2H7
6D1oRh1Mwy76WQWvJs4uQq8WxSyCl2iPVURl8S0YBnOLEZxRJoizDWsR4Ans
22DlOfCw9mHyCesZQ76hJ9uSV2x5T97udG9ztD/2XN/yUN/2RMfwlzzXUeLw
T7c1z/v5wjVNTCgHY+nVJek93f6TmFUEJt7B1wiPn+FbnBln9uo7M+4sR06N
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
RwE8cd6legdOp7sN7oqI544Mv3BtblbC3PTW5sY0N20Xt8TxrjoVgmfaURB0
zQVFy61wZSJ8IytmWCzDnlGhRCEuQlHqmTVe9pF/KZ5dReu2W+3f4N7hCbBM
1ssRI3qilPE0Ou5V2EwtPlkCOr82TM0M025zw7T3xbQgMkcWnhmE8hGz3QM1
YeWWCyXd1Ht47MK/hmKMnd1qU7dEq+W2S6YzptwRbGq8jiAlhmzGAzBge5UG
rM1jWb43lVUgTEO2tjLNrMzeIlbGdIA0KwN//EnMS00PCb9VayynDifJaqRP
kWOi+INqIU+LJv4lM2Y6TfxZpWgwPLtrJbsaOaaf78phc1o1xfS5bBqlSVmm
Sy2dxtOxVNtj2jJhr/JtGZ50VdjZG6ddEQbC621vex//vmw7wTO+CgwFTzmr
ZSpkemqpmchTYC1vpOxI05R8ra3etJYCnDMbOAquUb+dUm7364SVaPHLNcAs
Xoy6qKmrsYvcErJlR+XEy2aE0MS4FIGagEIX0iaegIa03xJ2r1eCUFEMylBI
Vq1h9ZY/rL2FhuX+4rPrY0dbu1hLmal0rqJwJNzAVTfPt+Vaujw7rKlmhfkl
l5KHoeDcYiBvHkLbRU9HMDeD/K2p0rl+CzrVzbXiNT6rEdM3jlPEASW5rJhf
iUf0/cePOhoNOkYY5IVkkepISMyIvDbEBn9LZ2fz5+ruNLckf3a3zrMOUhxk
7G2uHeJvcfwgjwxd4S9X7SYlCtaxDL/hMHPF3/E2Tq9Gm3ZjxTAYW1LL8gTX
wPZwpi9zHX9y5c9da7ParMMLZjOnB/+tuz6LlWDHtTbXtv/u5cy5tLRg7y78
4Ukcpy504Wb2WzGx7Vpi4g4b34WY9LwNZg2KxUTNSnIx21xoJAQTTKHe+PuR
tN3VlTR3HHCZkpZnuBWZJD1jrlLK3K5zmZNeJpUGG+nn8/cquTu1JNJ6bRmR
ve/JkLsDYHejXr21eq26erl21CunXk9XV72e3qN67RZ4Su4M7lI1MxreRt16
a3UTLV2S/ADUbW911e3ZParb3lrdHpq6uQKrK6duK7w3++ke1e3pWt0emrrZ
568rqG4Fx1SroG7Pv726WcalMDaLwfp1dPZBbOpf3LmgaDGzAlG5223987Ul
Fi3XUbNvrWA72/eoYb21hnkrr2HrwNktNWwJB9FW4OJ2B9GWbskEBBC/KJtM
vmPpX13BWsLRdU3BWurRdenZdXMuLeHYtYJL93rsaquuW4BrcB65vF4H154m
/dzWXC3hgLa2It7DAe1aEdcOqd10FRRxfZRrKdyto93NZ2F9wrfUWRC/5la3
OL/YYmyrJMnYuFlXwPvFr7wZlqPoylsdgSsg1bwtuzxSEXX5FpSa1//ukKlS
fuiX217QEOqiOxypclUDuxRrjuiILnF4+8PzKL6aBCMCv1PQ2vxsNo6TlGPH
TcJzDqHqR+fewVmceC+TeXoeIniy93voR95/xgCmfRon2Adh3YaMGLiQyzFQ
EHwU8E/CdJilKcK/5WDfTEnOzoBIvEOMvSCIJ7yBgKmgK8AR51ifaXg25ngm
NaieKd/zCyY5OCUAl2EvOTR26T1jNiAFzVdlSNv7Z5iOo8w78i95TZSXQZD4
F23v2E+Cc2/g+yPiWnYasAG9D7O2uAAdJoTIKvBHiSSFW3jzJZsSvnEEfAOe
4IWVdIaFQwQIN4wPrt1gF+o1HehCH7iKB16Xm/ujBCb9rZ8kwaTtvR4n2SX7
fzyat5EdNHDBkt8ywBv0PgRZEg6RgvdxxviSsPlWxq7MLdzSLOABl5jUGzLe
U6lUiSiJNzpPAsTnCWZeNgXYiiimAsBRAAiW7JnJPEfb9JVr7bJnxJ2fsiUI
EBkncwniiN0w8k0BYJRqHIAhEbQpk+iUkCNjeUVJjioKOCKbT+9nK16Odjgd
Q1kJuP00Dobn+RD94SzzJ3k1VW20F0HAb7rCEhiCMgXRCNCyofoOXQaWQNAa
IlCdOQ/Hme/9msVtZfra3mDsx1A6zvvVj8gafgDORN7LP5j6TrKIxP04vvCO
gtlwrEx4lgan2QQrYSH4Jhs2wNhxDG2CAfB+x5tmCLhArUIOzA+w0nVpf+fH
F2SlmM61vX/70SQIxV/HcD2JdYLktfNxIt3WYHLyQUAAGzQaSdHFfuR4BOSJ
CYZ8xEULZpyEGipACdCEK4CDZdKH+PYc0qDX+VecjDqXsOwASBRg3HdH8awr
b9Xlj/up+fQ5sz+j+Cpirf8Pa7Ejtr24AgA=

-->

</rfc>

