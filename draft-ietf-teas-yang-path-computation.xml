<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.19 (Ruby 3.2.3) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc comments="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-teas-yang-path-computation-latest" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="Yang for Path Computation">A YANG Data Model for requesting path computation</title>

    <author initials="I." surname="Busi" fullname="Italo Busi" role="editor">
      <organization>Huawei Technologies</organization>
      <address>
        <email>italo.busi@huawei.com</email>
      </address>
    </author>
    <author initials="S." surname="Belotti" fullname="Sergio Belotti" role="editor">
      <organization>Nokia</organization>
      <address>
        <email>sergio.belotti@nokia.com</email>
      </address>
    </author>
    <author initials="O." surname="Gonzalez de Dios" fullname="Oscar Gonzalez de Dios">
      <organization>Telefonica</organization>
      <address>
        <email>oscar.gonzalezdedios@telefonica.com</email>
      </address>
    </author>
    <author initials="A." surname="Sharma" fullname="Anurag Sharma">
      <organization>Google</organization>
      <address>
        <email>ansha@google.com</email>
      </address>
    </author>
    <author initials="Y." surname="Shi" fullname="Yan Shi">
      <organization>China Unicom</organization>
      <address>
        <email>shiyan49@chinaunicom.cn</email>
      </address>
    </author>

    <date year="2025" month="February" day="13"/>

    
    <workgroup>TEAS Working Group</workgroup>
    

    <abstract>


<?line 86?>

<t>There are scenarios, typically in a hierarchical Software-Defined
   Networking (SDN) context, where the topology information provided by
   a Traffic Engineering (TE) network provider may be insufficient for
   its client to perform multi-domain path computation. In these cases the
   client would need to request the TE network provider to compute some
   intra-domain paths to be used by the client to choose the optimal multi-domain paths.</t>

<t>This document provides a mechanism to request path computation by augmenting the Remote Procedure Calls (RPCs) defined in RFC YYYY.</t>

<t>[RFC EDITOR NOTE: Please replace RFC YYYY with the RFC number of
   draft-ietf-teas-yang-te once it has been published.</t>

<t>Moreover, this document describes some use cases where the path
   computation request, via YANG-based protocols (e.g., NETCONF or
   RESTCONF), can be needed.</t>



    </abstract>



  </front>

  <middle>


<?line 104?>

<section anchor="intro"><name>Introduction</name>

<t anchor="pc-model">There are scenarios, typically in a hierarchical Software-Defined
   Networking (SDN) context, where the topology information provided by
   a Traffic Engineering (TE) network provider may be insufficient for
   its client to perform multi-domain path computation. In these cases the
   client would need to request the TE network provider to compute some
   intra-domain paths that could be used together with its topology information
   to compute the multi-domain path.</t>

<t>These types of scenarios can be applied to different interfaces in
   different reference architectures:</t>

<t><list style="symbols">
  <t>Application-Based Network Operations (ABNO) control interface
<xref target="RFC7491"/>, in which an Application Service Coordinator can request the
ABNO controller to take in charge path calculation (see Figure 1
in <xref target="RFC7491"/>).</t>
  <t>Abstraction and Control of TE Networks (ACTN) <xref target="RFC8453"/>, where a
controller hierarchy is defined.
In the ACTN context, path computation is needed on the interface
between Customer Network Controller (CNC)  and Multi-Domain
Service Coordinator (MDSC), called CNC-MDSC Interface (CMI),
and on the interface between MSDC and Provisioning Network
Controller (PNC), called MDSC-PNC Interface  (MPI). 
<xref target="RFC8454"/> describes an information model for the Path
Computation request.  <vspace blankLines='1'/>
Multiple protocol solutions can be used for communication between
different controller hierarchical levels. This document assumes that
the controllers are communicating using YANG-based protocols (e.g.,
NETCONF <xref target="RFC6241"/> or RESTCONF <xref target="RFC8040"/>).  <vspace blankLines='1'/>
Path Computation Elements (PCEs), controllers and orchestrators
perform their operations based on Traffic Engineering Databases
(TED). Such TEDs can be described, in a technology agnostic way, with
the YANG data model for TE Topologies <xref target="RFC8795"/>. Furthermore, the
technology specific details of the TED are modelled in the technology
specific topology models, e.g., the <xref target="I-D.ietf-ccamp-otn-topo-yang"/> for Optical Transport
Network (OTN) Optical Data Unit (ODU) technologies, which augment the
common TE topology model in <xref target="RFC8795"/>.  <vspace blankLines='1'/>
The availability of such topology models allows the provisioning of
the TED using YANG-based protocols (e.g., NETCONF or RESTCONF).
Furthermore, it enables a PCE/controller performing the necessary
abstractions or modifications and offering this customized topology
to another PCE/controller or high level orchestrator.  <vspace blankLines='1'/>
The tunnels that can be provided over the networks described with the
topology models can be also set-up, deleted and modified via YANG-
based protocols (e.g., NETCONF or RESTCONF) using the TE tunnel YANG
data model <xref target="I-D.ietf-teas-yang-te"/>.  <vspace blankLines='1'/>
This document defines a YANG data model <xref target="RFC7950"/> that augments the RPC defined in <xref target="I-D.ietf-teas-yang-te"/>. The use of this RPC is complimentary to the configuration of a TE tunnel path in "compute-only" mode, as described in <xref target="I-D.ietf-teas-yang-te"/>.  <vspace blankLines='1'/>
The YANG data model definition does not make any assumption about
whether that the client or the server implement a "PCE"
functionality, as defined in <xref target="RFC4655"/>, and the Path Computation
Element Communication Protocol (PCEP) protocol, as defined in
<xref target="RFC5440"/>.  <vspace blankLines='1'/>
Moreover, this document describes some use cases where a path
computation request, via YANG-based protocols (e.g., NETCONF or
RESTCONF), can be needed.  <vspace blankLines='1'/>
The YANG data model defined in this document conforms to the Network
Management Datastore Architecture <xref target="RFC8342"/>.</t>
</list></t>

<section anchor="terminology"><name>Terminology</name>

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED",
"MAY", and "OPTIONAL" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.
<?line -6?></t>

<t>TED:</t>

<ul empty="true"><li>
  <t>The traffic engineering database is a collection of all TE
   information about all TE nodes and TE links in a given network.</t>
</li></ul>

<t>PCE:</t>

<ul empty="true"><li>
  <t>A Path Computation Element (PCE) is an entity that is capable of
   computing a network path or route based on a network graph, and of
   applying computational constraints during the computation.  The PCE
   entity is an application that can be located within a network node or
   component, on an out-of-network server, etc.  For example, a PCE
   would be able to compute the path of a TE Label Switched Path (LSP)
   by operating on the TED and considering bandwidth and other
   constraints applicable to the TE LSP service request. <xref target="RFC4655"/>.</t>
</li></ul>

<t>Domain:</t>

<ul empty="true"><li>
  <t>TE information is the data relating to nodes and TE links
   that is used in the process of selecting a TE path.  TE information
   is usually only available within a network.  We call such a zone of
   visibility of TE information a domain.  An example of a domain may be
   an IGP area or an Autonomous System. <xref target="RFC7926"/></t>
</li></ul>

<t>The terminology for describing YANG data models is found in
   <xref target="RFC7950"/>.</t>

</section>
<section anchor="tree-diagram"><name>Tree Diagram</name>

<t>Tree diagrams used in this document follow the notation defined in
   <xref target="RFC8340"/>.</t>

</section>
<section anchor="prefixes-in-data-node-names"><name>Prefixes in Data Node Names</name>

<t>In this document, names of data nodes and other data model objects
   are prefixed using the standard prefix associated with the
   corresponding YANG imported modules, as shown in <xref target="tab-prefix"/>.</t>

<texttable title="Prefixes and corresponding YANG modules" anchor="tab-prefix">
      <ttcol align='left'>Prefix</ttcol>
      <ttcol align='left'>YANG module</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>te-types</c>
      <c>ietf-te-types</c>
      <c>[RFCZZZZ]</c>
      <c>te</c>
      <c>ietf-te</c>
      <c>[RFCYYYY]</c>
      <c>te-pc</c>
      <c>ietf-te-path-computation</c>
      <c>RFCXXXX</c>
</texttable>

<t>RFC Editor Note:
Please replace XXXX with the RFC number assigned to this document.
Please replace YYYY with the RFC number of <xref target="I-D.ietf-teas-yang-te"/> once it has been published.
Please replace ZZZZ with the RFC number of <xref target="I-D.ietf-teas-rfc8776-update"/> once it has been published.
Please remove this note.</t>

</section>
</section>
<section anchor="use-cases"><name>Use Cases</name>

<t>This section presents some use cases, where a client needs to request
   underlying SDN controllers for path computation.</t>

<t>The use of the YANG data model defined in this document is not
   restricted to these use cases but can be used in any other use case
   when deemed useful.</t>

<t>The presented uses cases have been grouped, depending on the
   different underlying topologies: Packet/Optical Integration (<xref target="poi-uc"/>);
   multi-domain Traffic Engineered (TE) Networks (<xref target="md-uc"/>); and Data Center
   Interconnections (<xref target="dci-uc"/>). Use cases in <xref target="brpc-uc"/> and <xref target="hpce-uc"/>
   respectively present how to
   apply this YANG data model for standard multi-domain PCE i.e.
   Backward Recursive Path Computation <xref target="RFC5441"/> and Hierarchical PCE
   <xref target="RFC6805"/>.</t>

<section anchor="poi-uc"><name>Packet/Optical Integration</name>

<t>In this use case, an optical domain is used to provide connectivity
   to some nodes of a packet domain (see <xref target="fig-poi-uc"/>).</t>

<figure title="Packet/Optical Integration use case" anchor="fig-poi-uc"><artwork type="ascii-art" name="poi-use-case.txt"><![CDATA[
                                +----------------+
                                |                |
                                | Packet/Optical |
                                |  Coordinator   |
                                |                |
                                +---+------+-----+
                                    |      |
                       +------------+      |
                       |                   +-----------+
                +------V-----+                         |
                |            |                  +------V-----+
                | Packet     |                  |            |
                | Domain     |                  | Optical    |
                | Controller |                  | Domain     |
                |            |                  | Controller |
                +------+-----+                  +-------+----+
                       |                                |
              .........V.........................       |
              :          packet domain          :       |
          +----+                               +----+   |
          | R1 |= = = = = = = = = = = = = = = =| R2 |   |
          +-+--+                               +--+-+   |
            | :                                 : |     |
            | :................................ : |     |
            |                                     |     |
            |               +-----+               |     |
            |    ...........| Opt |...........    |     |
            |    :          |  C  |          :    |     |
            |    :         /+--+--+\         :    |     |
            |    :        /    |    \        :    |     |
            |    :       /     |     \       :    |     |
            |   +-----+ /   +--+--+   \ +-----+   |     |
            |   | Opt |/    | Opt |    \| Opt |   |     |
            +---|  A  |     |  D  |     |  B  |---+     |
                +-----+\    +--+--+    /+-----+         |
                 :      \      |      /      :          |
                 :       \     |     /       :          |
                 :        \ +--+--+  / optical<---------+
                 :         \| Opt |/  domain :
                 :..........|  E  |..........:
                            +-----+
]]></artwork></figure>

<t><xref target="fig-poi-uc"/> as well as <xref target="fig-poi-abstraction"/> describe two different
   examples of packet/optical topologies and only show a partial view of the
   packet network connectivity, before additional packet connectivity is
   provided by the optical network.</t>

<t>It is assumed that the Optical Domain Controller provides to the
   Packet/Optical Coordinator an abstracted view of the optical network.
   A possible abstraction could be to represent the whole optical
   network as one "virtual node" with "virtual ports" connected to the
   access links, as shown in <xref target="fig-poi-abstraction"/>.</t>

<t>It is also assumed that Packet Domain Controller can provide the
   Packet/Optical Coordinator the information it needs to set up
   connectivity between packet nodes through the optical network (e.g.,
   the access links).</t>

<t>The path computation request helps the Packet/Optical Coordinator to
   know the real connections that can be provided by the optical
   network.</t>

<figure title="Packet and Optical Topology Abstractions" anchor="fig-poi-abstraction"><artwork type="ascii-art" name="poi-topology-abstraction.txt"><![CDATA[
                       ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,.
                      ,  Packet/Optical Coordinator view          ,
                     ,                              +----+       , .
                    ,                               |    |      ,
                   ,                                | R2 |     ,   .
                  ,  +----+  +------------ +       /+----+    ,
                 ,   |    |  |             |/-----/ / /      ,     .
                ,    | R1 |--O VP1     VP4 O       / /      ,
               ,     |    |\ |             | /----/ /      ,       .
              ,      +----+ \|             |/      /      ,
             ,        /      O VP2     VP5 O      /      ,         .
            ,        /       |             |  +----+    ,
           ,        /        |             |  |    |   ,           .
          ,        /         O VP3     VP6 O--| R4 |  ,
         ,     +----+ /-----/|_____________|  +----+ ,             .
        ,      |    |/       +------------ +        ,
       ,       | R3 |                              ,               .
      ,        +----+                             ,,,,,,,,,,,,,,,,,
     ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,                ,.
     . Packet Domain Controller view                +----+       ,
       only packet nodes and packet links           |    |      ,  .
     . with access links to the optical network     | R2 |     ,
                  ,  +----+                        /+----+    ,    .
     .           ,   |    |                 /-----/ / /      ,
                ,    | R1 |---                     / /      ,      .
     .         ,     +----+\                 /----/ /      ,
              ,        /    \               /      /      ,        .
     .       ,        /                           /      ,
            ,        /                        +----+    ,          .
     .     ,        /                         |    |   ,
          ,        /                       ---| R4 |  ,            .
     .   ,     +----+ /-----/                 +----+ ,
        ,      |    |/                              ,              .
     . ,       | R3 |                              ,
      ,        +----+                             ,,,,,,,,,,,,,,,,,.
     .,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,                ,
       Optical Domain Controller view                            , .
     . only optical nodes,        +--+                          ,
       optical links and         /|OF|                         ,   .
     . access links from the  +--++--+             /          ,
       packet network         |OA|    \     /-----/ /        ,     .
     .          ,          ---+--+--\  +--+/       /        ,
               ,           \   |  \  \-|OE|-------/        ,       .
     .        ,             \  |   \ /-+--+               ,
             ,               \+--+  X    |               ,         .
     .      ,                 |OB|-/ \   |              ,
           ,                  +--+-\  \+--+            ,           .
     .    ,                  /   \  \--|OD|---        ,
         ,            /-----/     +--+ +--+          ,             .
     .  ,            /            |OC|/             ,
       ,                          +--+             ,               .
     .,                                           ,,,,,,,,,,,,,,,,,,
      ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,                ,
     . Actual Physical View                         +----+       ,
                    ,             +--+              |    |      ,
     .             ,             /|OF|              | R2 |     ,
                  ,  +----+   +--++--+             /+----+    ,
     .           ,   |    |   |OA|    \     /-----/ / /      ,
                ,    | R1 |---+--+--\  +--+/       / /      ,
     .         ,     +----+\   |  \  \-|OE|-------/ /      ,
              ,        /    \  |   \ /-+--+        /      ,
     .       ,        /      \+--+  X    |        /      ,
            ,        /        |OB|-/ \   |    +----+    ,
     .     ,        /         +--+-\  \+--+   |    |   ,
          ,        /         /   \  \--|OD|---| R4 |  ,
     .   ,     +----+ /-----/     +--+ +--+   +----+ ,
        ,      |    |/            |OC|/             ,
     . ,       | R3 |             +--+             ,
      ,        +----+                             ,
     .,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
]]></artwork></figure>

<t>In this use case, the Packet/Optical Coordinator needs to set up an
   optimal underlying path for an IP link between R1 and R2.</t>

<t>As depicted in <xref target="fig-poi-abstraction"/>, the Packet/Optical Coordinator has only an
   "abstracted view" of the physical network, and it does not know the
   feasibility or the cost of the possible optical paths (e.g., VP1-VP4
   and VP2-VP5), which depend on the current status of the physical
   resources within the optical network and on vendor-specific optical
   attributes.</t>

<t>The Packet/Optical Coordinator can request the underlying Optical
   Domain Controller to compute a set of potential optimal paths, taking
   into account optical constraints. Then, based on its own constraints,
   policy and knowledge (e.g. cost of the access links), it can choose
   which one of these potential paths to use to set up the optimal end-
   to-end path crossing optical network.</t>

<figure title="Packet/Optical Integration path computation example" anchor="fig-poi-example"><artwork type="ascii-art" name="poi-example.txt"><![CDATA[
                    ............................
                    :                          :
                    O VP1                  VP4 O
           cost=10 /:\                        /:\ cost=10
                  / : \----------------------/ : \
          +----+ /  :         cost=50          :  \ +----+
          |    |/   :                          :   \|    |
          | R1 |    :                          :    | R2 |
          |    |\   :                          :   /|    |
          +----+ \  :  /--------------------\  :  / +----+
                  \ : /       cost=55        \ : /
            cost=5 \:/                        \:/ cost=5
                    O VP2                  VP5 O
                    :                          :
                    :..........................:
]]></artwork></figure>

<t>For example, in <xref target="fig-poi-example"/>, the Packet/Optical Coordinator can request
   the Optical Domain Controller to compute the paths between VP1-VP4
   and VP2-VP5 and then decide to set up the optimal end-to-end path
   using the VP2-VP5 optical path even if this is not the optimal path
   from the optical domain perspective.</t>

<t>Considering the dynamicity of the connectivity constraints of an
   optical domain, it is possible that a path computed by the Optical
   Domain Controller when requested by the Packet/Optical Coordinator is
   no longer valid/available when the Packet/Optical Coordinator
   requests it to be set up. This is further discussed in <xref target="rpc-motivation"/>.</t>

</section>
<section anchor="md-uc"><name>Multi-domain TE networks</name>

<t>In this use case there are two TE domains which are interconnected
   together by multiple inter-domains links.</t>

<t>A possible example could be a multi-domain optical network.</t>

<figure title="Multi-domain multi-link interconnection" anchor="md-ml-connection"><artwork type="ascii-art" name="multi-domain-use-case.txt"><![CDATA[
                            +--------------+
                            | Multi-Domain |
                            | Controller   |
                            +---+------+---+
                                |      |
                   +------------+      |
                   |                   +-----------+
            +------V-----+                         |
            |            |                         |
            | TE Domain  |                  +------V-----+
            | Controller |                  |            |
            |      1     |                  | TE Domain  |
            +------+-----+                  | Controller |
                   |                        |      2     |
                   |                        +------+-----+
          .........V..........                     |
          :                  :                     |
         +-----+             :                     |
         |     |             :            .........V..........
         |  X  |             :            :                  :
         |     |          +-----+      +-----+                :
         +-----+          |     |      |     |               :
          :               |  C  |------|  E  |               :
      +-----+    +-----+ /|     |      |     |\ +-----+    +-----+
      |     |    |     |/ +-----+      +-----+ \|     |    |     |
      |  A  |----|  B  |     :            :     |  G  |----|  H  |
      |     |    |     |\    :            :    /|     |    |     |
      +-----+    +-----+ \+-----+      +-----+/ +-----+    +-----+
          :               |     |      |     |               :
          :               |  D  |------|  F  |               :
          :               |     |      |     |          +-----+
          :               +-----+      +-----+          |     |
          :                  :            :             |  Y  |
          :                  :            :             |     |
          :   TE domain 1    :            : TE domain 2 +-----+
          :..................:            :.................:
]]></artwork></figure>

<t>In order to set up an end-to-end multi-domain TE path (e.g., between
   nodes A and H), the Multi-Domain Controller needs to know the
   feasibility or the cost of the possible TE paths within the two TE
   domains, which depend on the current status of the physical resources
   within each TE domain. This is more challenging in case of optical
   networks because the optimal paths depend also on vendor-specific
   optical attributes (which may be different in the two domains if they
   are provided by different vendors).</t>

<t>In order to set up a multi-domain TE path (e.g., between nodes A and
   H), the Multi-Domain Controller can request the TE Domain Controllers
   to compute a set of intra-domain optimal paths and take decisions
   based on the information received. For example:</t>

<t><list style="symbols">
  <t>The Multi-Domain Controller asks TE Domain Controllers to provide
set of paths between A-C, A-D, E-H and F-H</t>
  <t>TE Domain Controllers return a set of feasible paths with the
associated costs: the path A-C is not part of this set (in optical
networks, it is typical to have some paths not being feasible due
to optical constraints that are known only by the Optical Domain
Controller)</t>
  <t>The Multi-Domain Controller will select the path A-D-F-H since it
is the only feasible multi-domain path and then request the TE
Domain Controllers to set up the A-D and F-H intra-domain paths</t>
  <t>If there are multiple feasible paths, the Multi-Domain Controller
can select the optimal path knowing the cost of the intra-domain
paths (provided by the TE domain controllers) and the cost of the
inter-domain links (known by the Multi-Domain Controller)  <vspace blankLines='1'/>
This approach may have some scalability issues when the number of TE
domains is quite big (e.g. 20).  <vspace blankLines='1'/>
In this case, it would be worthwhile using the abstract TE topology
information provided by the TE Domain Controllers to limit the number
of potential optimal end-to-end paths and then request path
computation from fewer TE Domain Controllers in order to decide what
the optimal path within this limited set is.  <vspace blankLines='1'/>
For more details, see <xref target="topo-pc-complement"/>.</t>
</list></t>

</section>
<section anchor="dci-uc"><name>Data Center Interconnections</name>

<t>In these use case, there is a TE domain which is used to provide
   connectivity between Data Centers which are connected with the TE
   domain using access links.</t>

<figure title="Data Center Interconnection use case" anchor="fig-dci-uc"><artwork type="ascii-art" name="dci-use-case.txt"><![CDATA[
                        +--------------+
                        | Cloud Network|
                        | Orchestrator |
                        +--------------+
                          |  |  |  |
            +-------------+  |  |  +------------------------+
            |                |  +------------------+        |
            |       +--------V---+                 |        |
            |       |            |                 |        |
            |       | TE Network |                 |        |
     +------V-----+ | Controller |          +------V-----+  |
     | DC         | +------------+          | DC         |  |
     | Controller |     |                   | Controller |  |
     +------------+     |   +-----+         +------------+  |
          |         ....V...|     |........         |       |
          |         :       |  P  |       :         |       |
     .....V.....    :      /+-----+\      :    .....V.....  |
     :         :  +-----+ /    |    \ +-----+  :         :  |
     :  DC1 || :  |     |/     |     \|     |  :  DC2 || :  |
     :    ||||----| PE1 |      |      | PE2 |----   |||| :  |
     : _|||||| :  |     |\     |     /|     |  : _|||||| :  |
     :         :  +-----+ \ +-----+ / +-----+  :         :  |
     :.........:    :      \|     |/      :    :.........:  |
                    :.......| PE3 |.......:                 |
                            |     |                         |
                            +-----+               +---------V--+
                          .....|.....             | DC         |
                          :         :             | Controller |
                          :  DC3 || :             +------------+
                          :    |||| :                  |
                          : _|||||| <------------------+
                          :         :
                          :.........:
]]></artwork></figure>

<t>In this use case, there is the need to transfer data from Data Center
   1 (DC1) to either DC2 or DC3 (e.g. workload migration).</t>

<t>The optimal decision depends both on the cost of the TE path (DC1-DC2
   or DC1-DC3) and of the Data Center resources within DC2 or DC3.</t>

<t>The Cloud Network Orchestrator needs to make a decision for optimal
   connection based on TE network constraints and Data Center resources.</t>

<t>It may not be able to make this decision because it has only an
   abstract view of the TE network (as in <xref target="poi-uc"/>).</t>

<t>The Cloud Network Orchestrator can request to the TE Network
   Controller to compute the cost of the possible TE paths (e.g., DC1-
   DC2 and DC1-DC3) and to the DC Controller to provide the information
   it needs about the required Data Center resources within DC2 and DC3
   and then it can take the decision about the optimal solution based on
   this information and its policy.</t>

</section>
<section anchor="brpc-uc"><name>Backward Recursive Path Computation scenario</name>

<t><xref target="RFC5441"/> has defined the Virtual Source Path Tree (VSPT) flag within the RP (Request Parameters) object in order to compute inter-domain paths following a
   "Backward Recursive Path Computation" (BRPC) method. The main
   principle is to forward the PCReq message up to the destination
   domain. Then, each PCE involved in the computation will compute its
   part of the path and send it back to the requester through PCE
   Response message. The resulting computation is spread from
   destination PCE to source PCE. Each PCE is in charge of merging the
   path it received with the one it calculated. At the end, the source
   PCE merges its local part of the path with the received one to
   achieve the end-to-end path.</t>

<t><xref target="fig-brpc-example"/> below show a typical BRPC scenario where 3 PCEs cooperate to
   compute inter-domain paths.</t>

<figure title="BRPC Scenario" anchor="fig-brpc-example"><artwork type="ascii-art" name="brpc-scenario.txt"><![CDATA[
                   +----------------+          +----------------+
                   |  Domain (B)    |          |  Domain (C)    |
                   |                |          |                |
                   |        /-------|---PCEP---|--------\       |
                   |       /        |          |         \      |
                   |   (PCE)        |          |   -    (PCE)   |
                   |    /           <---------->  |D|           |
                   |   /            |  Inter   |   -            |
                   +---|----^-------+  Domain  +----------------+
                       |    |          Link
                     PCEP   |
                       |    | Inter-domain Link
                       |    |
                   +---|----v-------+
                   |   |            |
                   |   | Domain (A) |
                   |   \            |
                   |  (PCE)    -    |
                   |          |S|   |
                   |           -    |
                   +----------------+
]]></artwork></figure>

<t>In this use case, a client can use the YANG data model defined in
   this document to request path computation from the PCE that controls
   the source of the tunnel. For example, a client can request to the
   PCE of domain A to compute a path from a source S, within domain A,
   to a destination D, within domain C. Then PCE of domain A will use
   PCEP protocol, as per <xref target="RFC5441"/>, to compute the path from S to D and
   in turn gives the final answer to the requester.</t>

</section>
<section anchor="hpce-uc"><name>Hierarchical PCE scenario</name>

<t><xref target="RFC6805"/> has defined an architecture and extensions to the PCE
   standard to compute inter-domain path following a hierarchical
   method. Two new roles have been defined: parent PCE and child PCE.
   The parent PCE is in charge to coordinate the end-to-end path
   computation. For that purpose it sends to each child PCE involved in
   the multi-domain path computation a PCE Request message to obtain the
   local part of the path. Once received all answer through PCE Response
   message, the parent PCE will merge the different local parts of the
   path to achieve the end-to-end path.</t>

<t><xref target="fig-hpce-example"/> below shows a typical hierarchical scenario where a parent
   PCE request end-to-end path to the different child PCE. Note that a
   PCE could take independently the role of child or parent PCE
   depending of which PCE will request the path.</t>

<figure title="Hierarchical domain topology from RFC6805" anchor="fig-hpce-example"><artwork type="ascii-art" name="hierarchical-domain-topology.txt"><![CDATA[
    -----------------------------------------------------------------
    |   Domain 5                                                      |
    |                              -----                              |
    |                             |PCE 5|                             |
    |                              -----                              |
    |                                                                 |
    |    ----------------     ----------------     ----------------   |
    |   | Domain 1       |   | Domain 2       |   | Domain 3       |  |
    |   |                |   |                |   |                |  |
    |   |        -----   |   |        -----   |   |        -----   |  |
    |   |       |PCE 1|  |   |       |PCE 2|  |   |       |PCE 3|  |  |
    |   |        -----   |   |        -----   |   |        -----   |  |
    |   |                |   |                |   |                |  |
    |   |            ----|   |----        ----|   |----            |  |
    |   |           |BN11+---+BN21|      |BN23+---+BN31|           |  |
    |   |   -        ----|   |----        ----|   |----        -   |  |
    |   |  |S|           |   |                |   |           |D|  |  |
    |   |   -        ----|   |----        ----|   |----        -   |  |
    |   |           |BN12+---+BN22|      |BN24+---+BN32|           |  |
    |   |            ----|   |----        ----|   |----            |  |
    |   |                |   |                |   |                |  |
    |   |         ----   |   |                |   |   ----         |  |
    |   |        |BN13|  |   |                |   |  |BN33|        |  |
    |    -----------+----     ----------------     ----+-----------   |
    |                \                                /               |
    |                 \       ----------------       /                |
    |                  \     |                |     /                 |
    |                   \    |----        ----|    /                  |
    |                    ----+BN41|      |BN42+----                   |
    |                        |----        ----|                       |
    |                        |                |                       |
    |                        |        -----   |                       |
    |                        |       |PCE 4|  |                       |
    |                        |        -----   |                       |
    |                        |                |                       |
    |                        | Domain 4       |                       |
    |                         ----------------                        |
    |                                                                 |
     -----------------------------------------------------------------
]]></artwork></figure>

<t>In this use case, a client can use the YANG data model defined in
   this document to request to the parent PCE a path from a source S to
   a destination D. The parent PCE will in turn contact the child PCEs
   through PCEP protocol to compute the end-to-end path and then return
   the computed path to the client, using the YANG data model defined in
   this document. For example the YANG data model can be used to request
   to PCE5 acting as parent PCE to compute a path from source S, within
   domain 1, to destination D, within domain 3. PCE5 will contact child
   PCEs of domain 1, 2 and 3 to obtain local part of the end-to-end path
   through the PCEP protocol. Once received the PCRep message, it
   merges the answers to compute the end-to-end path and send it back to
   the client.</t>

</section>
</section>
<section anchor="motivations"><name>Motivations</name>

<t>This section provides the motivation for the YANG data model defined
   in this document.</t>

<t><xref target="yang-motivation"/> describes the motivation for a YANG data model to request
   path computation.</t>

<t><xref target="topo-interaction"/> describes the motivation for a YANG data model which
   complements the TE topology YANG data model defined in <xref target="RFC8795"/>.</t>

<t><xref target="rpc-motivation"/> describes the motivation for a YANG RPC which complements
   the TE tunnel YANG data model defined in <xref target="I-D.ietf-teas-yang-te"/>.</t>

<section anchor="yang-motivation"><name>Motivation for a YANG Model</name>

<section anchor="benefits-of-common-data-models"><name>Benefits of common data models</name>

<t>The YANG data model for requesting path computation is closely
   aligned with the YANG data models that provide (abstract) TE topology
   information, i.e., <xref target="RFC8795"/> as well as that are used to configure
   and manage TE tunnels, i.e., <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>There are many benefits in aligning the data model used for path
   computation requests with the YANG data models used for TE topology
   information and for TE tunnels configuration and management:</t>

<t><list style="symbols">
  <t>There is no need for an error-prone mapping or correlation of
information.</t>
  <t>It is possible to use the same endpoint identifiers in path
computation requests and in the topology modeling.</t>
  <t>The attributes used for path computation constraints are the same
as those used when setting up a TE tunnel.</t>
</list></t>

</section>
<section anchor="benefits-of-a-single-interface"><name>Benefits of a single interface</name>

<t>The system integration effort is typically lower if a single,
   consistent interface is used by controllers, i.e., one data modeling
   language (i.e., YANG) and a common protocol (e.g., NETCONF or
   RESTCONF).</t>

<t>Practical benefits of using a single, consistent interface include:</t>

<t><list style="numbers" type="1">
  <t>Simple authentication and authorization: The interface between
different components has to be secured. If different protocols
have different security mechanisms, ensuring a common access
control model may result in overhead. For instance, there may be a
need to deal with different security mechanisms, e.g., different
credentials or keys. This can result in increased integration
effort.</t>
  <t>Consistency: Keeping data consistent over multiple different
interfaces or protocols is not trivial. For instance, the sequence
of actions can matter in certain use cases, or transaction
semantics could be desired. While ensuring consistency within one
protocol can already be challenging, it is typically cumbersome to
achieve that across different protocols.</t>
  <t>Testing: System integration requires comprehensive testing,
including corner cases. The more different technologies are
involved, the more difficult it is to run comprehensive test cases
and ensure proper integration.</t>
  <t>Middle-box friendliness: Provider and consumer of path computation
requests may be located in different networks, and middle-boxes
such as firewalls, NATs, or load balancers may be deployed. In
such environments it is simpler to deploy a single protocol. Also,
it may be easier to debug connectivity problems.</t>
  <t>Tooling reuse: Implementers may want to implement path computation
requests with tools and libraries that already exist in
controllers and/or orchestrators, e.g., leveraging the rapidly
growing eco-system for YANG tooling.</t>
</list></t>

</section>
<section anchor="extensibility"><name>Extensibility</name>

<t>Path computation is only a subset of the typical functionality of a
   controller. In many use cases, issuing path computation requests
   comes along with the need to access other functionality on the same
   system. In addition to obtaining TE topology, for instance also
   configuration of services (set-up/modification/deletion) may be
   required, as well as:</t>

<t><list style="numbers" type="1">
  <t>Receiving notifications for topology changes as well as
integration with fault management</t>
  <t>Performance management such as retrieving monitoring and telemetry
data</t>
  <t>Service assurance, e.g., by triggering OAM functionality</t>
  <t>Other fulfilment and provisioning actions beyond tunnels and
services, such as changing QoS configurations  <vspace blankLines='1'/>
YANG is a very extensible and flexible data modeling language that
can be used for all these use cases.</t>
</list></t>

</section>
</section>
<section anchor="topo-interaction"><name>Interactions with TE topology</name>

<t>The use cases described in <xref target="use-cases"/> have been described assuming
   that the topology view exported by each underlying controller to its
   client is aggregated using the "virtual node model", defined in
   <xref target="RFC7926"/>.</t>

<t>TE topology information, e.g., as provided by <xref target="RFC8795"/>, could in
   theory be used by an underlying controller to provide TE information
   to its client thus allowing a PCE available within its client to
   perform multi-domain path computation on its own, without requesting
   path computations to the underlying controllers.</t>

<t>In case the client does not implement a PCE function, as discussed in
   <xref target="intro"/>, it could not perform path computation based on TE topology
   information and would instead need to request path computation from
   the underlying controllers to get the information it needs to find
   the optimal end-to-end path.</t>

<t>In case the client implements a PCE function, as discussed in 
   <xref target="intro"/>, the TE topology information needs to be complete and accurate,
   which would bring to scalability issues.</t>

<t>Using TE topology to provide a "virtual link model" aggregation, as
   described in <xref target="RFC7926"/>, may be insufficient, unless the aggregation
   provides complete and accurate information, which would still cause
   scalability issues, as described in <xref target="topo-aggregation"/> below.</t>

<t>Using TE topology abstraction, as described in <xref target="RFC7926"/>, may lead to
   compute an unfeasible path, as described in <xref target="RFC7926"/> in 
   <xref target="topo-abstraction"/> below.</t>

<t>Therefore when computing an optimal multi-domain path, there is a
   scalability trade-off between providing complete and accurate TE
   information and the number of path computation requests to the
   underlying controllers.</t>

<t>The TE topology information used, in a complimentary way, to reduce
   the number for path computation requests to the underlying
   controllers, are described in <xref target="topo-pc-complement"/> below.</t>

<section anchor="topo-aggregation"><name>TE topology aggregation</name>

<t>Using the TE topology model, as defined in <xref target="RFC8795"/>, the underlying
   controller can export the whole TE domain as a single TE node with a
   "detailed connectivity matrix" (which provides specific TE
   attributes, such as delay, Shared Risk Link Groups (SRLGs) and other
   TE metrics, between each ingress and egress links).</t>

<t>The information provided by the "detailed connectivity matrix" would
   be equivalent to the information that should be provided by "virtual
   link model" as defined in <xref target="RFC7926"/>.</t>

<t>For example, in the Packet/Optical Integration use case, described in
   <xref target="poi-uc"/>, the Optical Domain Controller can make the information
   shown in <xref target="fig-poi-example"/> available to the Packet/Optical Coordinator as part
   of the TE topology information and the Packet/Optical Coordinator
   could use this information to calculate on its own the optimal path
   between R1 and R2, without requesting any additional information to
   the Optical Domain Controller.</t>

<t>However, when designing the amount of information to provide within
   the "detailed connectivity matrix", there is a tradeoff to be
   considered between accuracy (i.e., providing "all" the information
   that might be needed by the PCE available within the client) and
   scalability.</t>

<t><xref target="poi-multi-path"/> below shows another example, similar to <xref target="fig-poi-example"/>, where
   there are two possible Optical paths between VP1 and VP4 with
   different properties (e.g., available bandwidth and cost).</t>

<figure title="Packet/Optical Integration path computation Example with multiple choices" anchor="poi-multi-path"><artwork type="ascii-art" name="poi-example-multiple.txt"><![CDATA[
                    ............................
                    :  /--------------------\  :
                    : /       cost=65        \ :
                    :/    available-bw=10G    \:
                    O VP1                  VP4 O
           cost=10 /:\                        /:\ cost=10
                  / : \----------------------/ : \
          +----+ /  :         cost=50          :  \ +----+
          |    |/   :     available-bw=2G      :   \|    |
          | R1 |    :                          :    | R2 |
          |    |\   :                          :   /|    |
          +----+ \  :  /--------------------\  :  / +----+
                  \ : /       cost=55        \ : /
            cost=5 \:/    available-bw=3G     \:/ cost=5
                    O VP2                  VP5 O
                    :                          :
                    :..........................:
]]></artwork></figure>

<t>If the information in the "detailed connectivity matrix" is not
   complete/accurate, we can have the following drawbacks:</t>

<t><list style="symbols">
  <t>If only the VP1-VP4 path with available bandwidth of 2 Gb/s and
cost 50 is reported, the client's PCE will fail to compute a 5
Gb/s path between routers R1 and R2, although this would be
feasible;</t>
  <t>If only the VP1-VP4 path with available bandwidth of 10 Gb/s and
cost 65 is reported, the client's PCE will compute, as optimal,
the 1 Gb/s path between R1 and R2 going through the VP2-VP5 path
within the optical domain while the optimal path would actually be
the one going thought the VP1-VP4 sub-path (with cost 50) within
the optical domain.  <vspace blankLines='1'/>
Reporting all the information, as in <xref target="poi-multi-path"/>, using the "detailed
 connectivity matrix", is quite challenging from a scalability
 perspective. The amount of this information is not just based on
 number of end points (which would scale as N-square), but also on
 many other parameters, including client rate, user
 constraints/policies for the service, e.g. max latency &lt; N ms, max
 cost, etc., exclusion policies to route around busy links, min
 Optical Signal to Noise Ratio (OSNR) margin, max pre-Forward Error
 Correction (FEC) Bit Error Rate (BER) etc. All these constraints
 could be different based on connectivity requirements.  <vspace blankLines='1'/>
It is also worth noting that the "connectivity matrix" has been
 originally defined in Wavelength Switched Optical Networks (WSON),
 <xref target="RFC7446"/>, to report the connectivity constrains of a physical node
 within the Wavelength Division Multiplexing (WDM) network: the
 information it contains is pretty "static" and therefore, once taken
 and stored in the TE data base, it can be always being considered
 valid and up-to-date in path computation request.  <vspace blankLines='1'/>
The "connectivity matrix" is sometimes confused with "optical reach
 table" that contain multiple (e.g. k-shortest) regen-free reachable
 paths for every A-Z node combination in the network. Optical reach
 tables can be calculated offline, utilizing vendor optical design and
 planning tools, and periodically uploaded to the Controller: these
 optical path reach tables are fairly static. However, to get the
 connectivity matrix, between any two sites, either a regen free path
 can be used, if one is available, or multiple regen free paths are
 concatenated to get from the source to the destination, which can be
 a very large combination. Additionally, when the optical path within
 optical domain needs to be computed, it can result in different paths
 based on input objective, constraints, and network conditions. In
 summary, even though "optical reach table" is fairly static, which
 regen free paths to build the connectivity matrix between any source
 and destination is very dynamic, and is done using very sophisticated
 routing algorithms.  <vspace blankLines='1'/>
Using the "basic connectivity matrix" with an abstract node to
 abstract the information regarding the connectivity constraints of an
 Optical domain, would make this information more "dynamic" since the
 connectivity constraints of an optical domain can change over time
 because some optical paths that are feasible at a given time may
 become unfeasible at a later time when e.g., another optical path is
 established.  <vspace blankLines='1'/>
The information in the "detailed connectivity matrix" is even more
 dynamic since the establishment of another optical path may change
 some of the parameters (e.g., delay or available bandwidth) in the
 "detailed connectivity matrix" while not changing the feasibility of
 the path.  <vspace blankLines='1'/>
There is therefore the need to keep the information in the "detailed
 connectivity matrix" updated which means that there another tradeoff
 between the accuracy (i.e., providing "all" the information that
 might be needed by the client's PCE) and having up-to-date
 information. The more the information is provided and the longer it
 takes to keep it up-to-date which increases the likelihood that the
 client's PCE computes paths using not updated information.  <vspace blankLines='1'/>
It seems therefore quite challenging to have a "detailed connectivity
 matrix" that provides accurate, scalable and updated information to
 allow the client's PCE to take optimal decisions by its own.  <vspace blankLines='1'/>
Considering the example in <xref target="poi-multi-path"/> with the approach defined in this
 document, the client, when it needs to set up an end-to-end path, it
 can request the Optical Domain Controller to compute a set of optimal
 paths (e.g., for VP1-VP4 and VP2-VP5) and take decisions based on the
 information received:</t>
  <t>When setting up a 5 Gb/s path between routers R1 and R2, the
Optical Domain Controller may report only the VP1-VP4 path as the
only feasible path: the Packet/Optical Coordinator can
successfully set up the end-to-end path passing though this
optical path;</t>
  <t>When setting up a 1 Gb/s path between routers R1 and R2, the
Optical Domain Controller (knowing that the path requires only 1
Gb/s) can report both the VP1-VP4 path, with cost 50, and the VP2-
VP5 path, with cost 65. The Packet/Optical Coordinator can then
compute the optimal path which is passing thought the VP1-VP4 sub-
path (with cost 50) within the optical domain.</t>
</list></t>

</section>
<section anchor="topo-abstraction"><name>TE topology abstraction</name>

<t>Using the TE topology model, as defined in <xref target="RFC8795"/>, the underlying
   controller can export to its client an abstract TE topology, composed
   by a set of TE nodes and TE links, representing the abstract view of
   the topology under its control.</t>

<t>For example, in the multi-domain TE network use case, described in
   <xref target="md-uc"/>, the TE Domain Controller 1 can export a TE topology
   encompassing the TE nodes A, B, C and D and the TE links
   interconnecting them. In a similar way, the TE Domain Controller 2
   can export a TE topology encompassing the TE nodes E, F, G and H and
   the TE links interconnecting them.</t>

<t>In this example, for simplicity reasons, each abstract TE node maps
   with each physical node, but this is not necessary.</t>

<t>In order to set up a multi-domain TE path (e.g., between nodes A and
   H), the Multi-Domain Controller can compute by its own an optimal
   end-to-end path based on the abstract TE topology information
   provided by the domain controllers. For example:</t>

<t><list style="symbols">
  <t>Multi-Domain Controller can compute, based on its own TED data,
the optimal multi-domain path being A-B-C-E-G-H, and then request
the TE Domain Controllers to set up the A-B-C and E-G-H intra-
domain paths</t>
  <t>But, during path set-up, the TE Domain Controller may find out
that A-B-C intra-domain path is not feasible (as discussed in
<xref target="md-uc"/>, in optical networks it is typical to have some paths
not being feasible due to optical constraints that are known only
by the Optical Domain Controller), while only the path A-B-D is
feasible</t>
  <t>So what the Multi-Domain Controller has computed is not good and
it needs to re-start the path computation from scratch  <vspace blankLines='1'/>
As discussed in <xref target="topo-aggregation"/>, providing more extensive abstract
information from the TE Domain Controllers to the Multi-Domain
Controller may lead to scalability problems.  <vspace blankLines='1'/>
In a sense this is similar to the problem of routing and wavelength
assignment within an optical domain. It is possible to do first
routing (step 1) and then wavelength assignment (step 2), but the
chances of ending up with a good path is low. Alternatively, it is
possible to do combined routing and wavelength assignment, which is
known to be a more optimal and effective way for optical path set-up.
Similarly, it is possible to first compute an abstract end-to-end
path within the Multi-Domain Controller (step 1) and then compute an
intra-domain path within each optical domain (step 2), but there are
more chances not to find a path or to get a suboptimal path than by
performing multiple per-domain path computations and then stitching
them together.</t>
</list></t>

</section>
<section anchor="topo-pc-complement"><name>Complementary use of the TE topology</name>

<t>As discussed in <xref target="md-uc"/>, there are some scalability issues with
   path computation requests in a multi-domain TE network with many TE
   domains, in terms of the number of requests to send to the TE Domain
   Controllers. It would therefore be worthwhile using the abstract TE
   topology information provided by the TE Domain Controllers to limit
   the number of requests.</t>

<t>An example can be described considering the multi-domain abstract TE
   topology shown in <xref target="fig-topo-many-domains"/>. In this example, an end-to-end TE path
   between domains A and F needs to be set up. The transit TE domain
   should be selected between domains B, C, D and E.</t>

<figure title="Multi-domain with many domains (Topology information)" anchor="fig-topo-many-domains"><artwork type="ascii-art" name="many-domains-topology.txt"><![CDATA[
                          .........B.........
                          : _ _ _ _ _ _ _ _ :
                          :/               \:
                      +---O  NOT FEASIBLE   O---+
                cost=5|   :                 :   |
    ......A......     |   :.................:   |     ......F......
    :           :     |                         |     :           :
    :           O-----+   .........C.........   +-----O           :
    :           :         : /-------------\ :         :           :
    :           :         :/               \:         :           :
    :  cost<=20 O---------O   cost <= 30    O---------O cost<=20  :
    :          /: cost=5  :                 : cost=5  :\          :
    :  /------/ :         :.................:         : \------\  :
    : /         :                                     :         \ :
    :/ cost<=25 :         .........D.........         : cost<=25 \:
    O-----------O-------+ : /-------------\ : +-------O-----------O
    :\          : cost=5| :/               \: |cost=5 :          /:
    : \         :       +-O   cost <= 30    O-+       :         / :
    :  \------\ :         :                 :         : /------/  :
    : cost>=30 \:         :.................:         :/ cost>=30 :
    :           O-----+                         +-----O           :
    :...........:     |   .........E.........   |     :...........:
                      |   : /-------------\ :   |
                cost=5|   :/               \:   |cost=5
                      +---O   cost >= 30    O---+
                          :                 :
                          :.................:
]]></artwork></figure>

<t>The actual cost of each intra-domain path is not known a priori from
   the abstract topology information. The Multi-Domain Controller only
   knows, from the TE topology provided by the underlying domain
   controllers, the feasibility of some intra-domain paths and some
   upper-bound and/or lower-bound cost information. With this
   information, together with the cost of inter-domain links, the Multi-
   Domain Controller can understand by its own that:</t>

<t><list style="symbols">
  <t>Domain B cannot be selected as the path connecting domains A and F
is not feasible;</t>
  <t>Domain E cannot be selected as a transit domain since it is known
from the abstract topology information provided by domain
controllers that the cost of the multi-domain path A-E-F (which is
100, in the best case) will be always be higher than the cost of
the multi-domain paths A-D-F (which is 90, in the worst case) and
A-C-F (which is 80, in the worst case).  <vspace blankLines='1'/>
Therefore, the Multi-Domain Controller can understand by its own that
 the optimal multi-domain path could be either A-D-F or A-C-F but it
 cannot know which one of the two possible option actually provides
 the optimal end-to-end path.  <vspace blankLines='1'/>
The Multi-Domain Controller can therefore request path computation
 only to the TE Domain Controllers A, D, C and F (and not to all the
 possible TE Domain Controllers).</t>
</list></t>

<figure title="Multi-domain with many domains (Path Computation information)" anchor="fig-pc-many-domains"><artwork type="ascii-art" name="many-domain-path-computation.txt"><![CDATA[
                          .........B.........
                          :                 :
                      +---O                 O---+
    ......A......     |   :.................:   |     ......F......
    :           :     |                         |     :           :
    :           O-----+   .........C.........   +-----O           :
    :           :         : /-------------\ :         :           :
    :           :         :/               \:         :           :
    :  cost=15  O---------O    cost = 25    O---------O  cost=10  :
    :          /: cost=5  :                 : cost=5  :\          :
    :  /------/ :         :.................:         : \------\  :
    : /         :                                     :         \ :
    :/ cost=10  :         .........D.........         : cost=15  \:
    O-----------O-------+ : /-------------\ : +-------O-----------O
    :           : cost=5| :/               \: |cost=5 :           :
    :           :       +-O    cost = 15    O-+       :           :
    :           :         :                 :         :           :
    :           :         :.................:         :           :
    :           O-----+                         +-----O           :
    :...........:     |   .........E.........   |     :...........:
                      |   :                 :   |
                      +---O                 O---+
                          :.................:
]]></artwork></figure>

<t>Based on these requests, the Multi-Domain Controller can know the
   actual cost of each intra-domain paths which belongs to potential
   optimal end-to-end paths, as shown in <xref target="fig-pc-many-domains"/>, and then compute the
   optimal end-to-end path (e.g., A-D-F, having total cost of 50,
   instead of A-C-F having a total cost of 70).</t>

</section>
</section>
<section anchor="rpc-motivation"><name>Path Computation RPC</name>

<t>The TE tunnel YANG data model, defined in <xref target="I-D.ietf-teas-yang-te"/>, can support
   the need to request path computation, as described in section 5.1.2
   of <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>This solution is stateful since the state of each created "compute-
   only" TE tunnel path needs to be maintained, in the YANG datastores
   (at least in the running datastore and operational datastore), and
   updated, when underlying network conditions change.</t>

<t>The RPC mechanism allows requesting path computation using a simple
   atomic operation, without creating any state in the YANG datastores,
   and it is the natural option/choice, especially with stateless PCE.</t>

<t>It is very useful to provide both the options of using an RPC as well
   as of setting up TE tunnel paths in "compute-only" mode. It is
   suggested to use the RPC as much as possible and to rely on
   "compute-only" TE tunnel paths, when really needed.</t>

<t>Using the RPC solution would imply that the underlying controller
   (e.g., a PNC) computes a path twice during the process to set up an
   LSP: at time T1, when its client (e.g., an MDSC) sends a path
   computation RPC request to it, and later, at time T2, when the same
   client (MDSC) creates a TE tunnel requesting the set-up of the LSP.
   The underlying assumption is that, if network conditions have not
   changed, the same path that has been computed at time T1 is also
   computed at time T2 by the underlying controller (e.g. PNC) and
   therefore the path that is set up at time T2 is exactly the same path
   that has been computed at time T1.</t>

<t>However, since the operation is stateless, there is no guarantee that
   the returned path would still be available when path set-up is
   requested: this does not cause major issues when the time between
   path computation and path set-up is short (especially if compared
   with the time that would be needed to update the information of a
   very detailed connectivity matrix).</t>

<t>In most of the cases, there is even no need to guarantee that the
   path that has been set up is the exactly same as the path that has
   been returned by path computation, especially if it has the same or
   even better metrics. Depending on the abstraction level applied by
   the server, the client may also not know the actual computed path.</t>

<t>The most important requirement is that the required global objectives
   (e.g., multi-domain path metrics and constraints) are met. For this
   reason a path verification phase is always necessary to verify that
   the actual path that has been set up meets the global objectives (for
   example in a multi-domain network, the resulting end-to-end path
   meets the required end-to-end metrics and constraints).</t>

<t>In most of the cases, even if the path being set up is not exactly
   the same as the path returned by path computation, its metrics and
   constraints are "good enough" and the path verification passes
   successfully. In the few corner cases where the path verification
   fails, it is possible repeat the whole process (path computation,
   path set-up and path verification).</t>

<t>In case it is required to set up at T2 exactly the same path computed
   at T1, the RPC solution should not be used and, instead, a "compute-
   only" TE tunnel path should be set up, allowing also notifications in
   case the computed path has been changed.</t>

<t>In this case, at time T1, the client (MDSC) creates a TE tunnel in a
   compute-only mode in the running datastore and later, at time T2,
   changes the configuration of that TE tunnel (not to be any more in a
   compute-only mode) to trigger the set-up of the LSP over the path
   which have been computed at time T1 and reported in the operational
   datastore.</t>

<t>It is worth noting that also using the "compute-only" TE tunnel path,
   although increasing the likelihood that the computed path is
   available at path set-up, does not guarantee that because
   notifications may not be reliable or delivered on time. Path
   verification is needed also in this case.</t>

<t>The solution based on "compute-only" TE tunnel path has also the
   following drawbacks:</t>

<t><list style="symbols">
  <t>Several messages required for any path computation</t>
  <t>Requires persistent storage in the underlying controller</t>
  <t>Need for garbage collection for stranded paths</t>
  <t>Process burden to detect changes on the computed paths in order to
provide notifications update</t>
</list></t>

<section anchor="temp-state"><name>Temporary reporting of the computed path state</name>

<t>This section describes an optional extension to the stateless
   behavior of the path computation RPC, where the underlying
   controller, after having received a path computation RPC request,
   maintains some "transient state" associated with the computed path,
   allowing the client to request the set-up of exactly that path, if
   still available.</t>

<t>This is similar to the "compute-only" TE tunnel path solution but, to
   avoid the drawbacks of the stateful approach, is leveraging the path
   computation RPC and the separation between configuration and
   operational datastore, as defined in the NMDA architecture <xref target="RFC8342"/>.</t>

<t>The underlying controller, after having computed a path, as requested
   by a path computation RPC, also creates a TE tunnel instance within
   the operational datastore, to store that computed path. This would be
   similar to a "compute-only" TE tunnel path, with the only difference
   that there is no associated TE tunnel instance within the running
   datastore.</t>

<t>Since the underlying controller stores in the operational datastore
   the computed path based on an abstract topology it exposes, it also
   remembers, internally, which is the actual native path (physical
   path), within its native topology (physical topology), associated
   with that compute-only TE tunnel instance.</t>

<t>Afterwards, the client (e.g., MDSC) can request the set-up of that
   specific path by creating a TE tunnel instance (not in compute-only
   mode) in the running datastore using the same tunnel-name of
   the existing TE tunnel in the operational datastore: this will
   trigger the underlying controller to set up that path, if still
   available.</t>

<t>There are still cases where the path being set up is not exactly the
   same as the path that has been computed:</t>

<t><list style="symbols">
  <t>When the tunnel is configured with path constraints which are not
compatible with the computed path;</t>
  <t>When the tunnel set-up is requested after the resources of the
computed path are no longer available;</t>
  <t>When the tunnel set-up is requested after the computed path is no
longer known (e.g. due to a server reboot) by the underlying
controller.  <vspace blankLines='1'/>
In all these cases, the underlying controller should compute and set
 up a new path.  <vspace blankLines='1'/>
Therefore the "path verification" phase, as described in <xref target="rpc-motivation"/>
 above, is always needed to check that the path that has been set up
 is still "good enough".  <vspace blankLines='1'/>
Since this new approach is not completely stateless, garbage
 collection is implemented using a timeout that, when it expires,
 triggers the removal of the computed path from the operational
 datastore. This operation is fully controlled by the underlying
 controller without the need for any action to be taken by the client
 that is not able to act on the operational datastore. The default
 value of this timeout is 10 minutes but a different value may be
 configured by the client.  <vspace blankLines='1'/>
In addition, it is possible for the client to tag each path
 computation request with a transaction-id allowing for a faster
 removal of all the paths associated with a transaction-id, without
 waiting for their timers to expire.  <vspace blankLines='1'/>
The underlying controller can remove from the operational datastore
 all the paths computed with a given transaction-id which have not
 been set up either when it receives a Path Delete RPC request for
 that transaction-id or, automatically, right after the set-up up of a
 path that has been previously computed with that transaction-id.  <vspace blankLines='1'/>
This possibility is useful when multiple paths are computed but, at
 most, only one is set up (e.g., in multi-domain path computation
 scenario scenarios). After the selected path has been set up (e.g, in
 one domain during multi-domain path set-up), all the other
 alternative computed paths can be automatically deleted by the
 underlying controller (since no longer needed). The client can also
 request, using the Path Delete RPC request, the underlying controller
 to remove all the computed paths, if none of them is going to be set
 up (e.g., in a transit domain not being selected by multi-domain path
 computation and so not being automatically deleted).  <vspace blankLines='1'/>
This approach is complimentary and not alternative to the timer which
 is always needed to avoid stranded computed paths being stored in the
 operational datastore when no path is set up and no explicit Path
 Delete RPC request is received.</t>
</list></t>

</section>
</section>
</section>
<section anchor="path-computation-and-optimization-for-multiple-paths"><name>Path computation and optimization for multiple paths</name>

<t>There are use cases, where it is advantageous to request path
   computation for a set of paths, through a network or through a
   network domain, using a single request <xref target="RFC5440"/>.</t>

<t>In this case, sending a single request for multiple path
   computations, instead of sending multiple requests for each path
   computation, would reduce the protocol overhead and it would consume
   less resources (e.g., threads in the client and server).</t>

<t>In the context of a typical multi-domain TE network, there could
   multiple choices for the ingress/egress points of a domain and the
   Multi-Domain Controller needs to request path computation between all
   the ingress/egress pairs to select the best pair. For example, in the
   example of <xref target="md-uc"/>, the Multi-Domain Controller needs to request
   the TE Network Controller 1 to compute the A-C and the A-D paths and
   to the TE Network Controller 2 to compute the E-H and the F-H paths.</t>

<t>It is also possible that the Multi-Domain Controller receives a
   request to set up a group of multiple end to end connections. The
   Multi-Domain Controller needs to request each TE domain Controller to
   compute multiple paths, one (or more) for each end to end connection.</t>

<t>There are also scenarios where it can be needed to request path
   computation for a set of paths in a synchronized fashion.</t>

<t>One example could be computing multiple diverse paths. Computing a
   set of diverse paths in an unsynchronized fashion, leads to the
   possibility of not being able to satisfy the diversity requirement.
   In this case, it is preferable to compute a sub-optimal primary path
   for which a diversely routed secondary path exists.</t>

<t>There are also scenarios where it is needed to request optimizing a
   set of paths using objective functions that apply to the whole set of
   paths, see <xref target="RFC5541"/>, e.g. to minimize the sum of the costs of all
   the computed paths in the set.</t>

</section>
<section anchor="yang-data-model-for-requesting-path-computation"><name>YANG data model for requesting Path Computation</name>

<t>This document define a YANG RPC to request path computation as an
   "augmentation" of tunnel-rpc, defined in <xref target="I-D.ietf-teas-yang-te"/>. This model
   provides the RPC input attributes that are needed to request path
   computation and the RPC output attributes that are needed to report
   the computed paths.</t>

<figure><artwork type="ascii-art" name="overview.txt"><![CDATA[
  augment /te:tunnels-path-compute/te:input/te:path-compute-info:
    +-- path-request* [request-id]
    |  ...

  augment /te:tunnels-path-compute/te:output/te:path-compute-result:
    +--ro response* [response-id]
       +--ro response-id                         uint32
       +--ro computed-paths-properties
       |  +--ro computed-path-properties* [k-index]
       |     ...
]]></artwork></figure>

<t>This model extensively re-uses the grouping defined in <xref target="I-D.ietf-teas-yang-te"/>
   and <xref target="I-D.ietf-teas-rfc8776-update"/> to ensure maximal syntax and semantics commonality.</t>

<t>This YANG data model allows one RPC to include multiple path
   requests, each path request being identified by a request-id.
   Therefore, one RPC can return multiple responses, one for each path
   request, being identified by a response-id equal to the corresponding
   request-id. Each response reports one or more computed paths, as
   requested by the k-requested-paths attribute. By default, each
   response reports one computed path.</t>

<section anchor="synchronization-of-multiple-path-computation-requests"><name>Synchronization of multiple path computation requests</name>

<t>The YANG data model permits the synchronization of a set of multiple
   path requests (identified by specific request-id) all related to a
   "svec" container emulating the syntax of the Synchronization VECtor
   (SVEC) PCEP object, defined in <xref target="RFC5440"/>.</t>

<figure><artwork type="ascii-art" name="synchronization.txt"><![CDATA[
    +-- synchronization* []
       +-- svec
       |  +-- relaxable?      boolean
       |  +-- disjointness?   te-path-disjointness
       |  +-- request-id*     uint32
       +-- svec-constraints
       |  +-- path-metric-bound* [metric-type]
       |     +-- metric-type    identityref
       |     +-- upper-bound?   uint64
       +-- path-srlgs-lists
       |  +-- path-srlgs-list* [usage]
       |     +-- usage     identityref
       |     +-- values*   srlg
       +-- path-srlgs-names
       |  +-- path-srlgs-name* [usage]
       |     +-- usage    identityref
       |     +-- names*   string
       +-- exclude-objects
       |  +-- excludes* []
       |     +-- (type)?
       |        +--:(numbered-node-hop)
       |        |  +-- numbered-node-hop
       |        |     +-- node-id     te-node-id
       |        |     +-- hop-type?   te-hop-type
       |        +--:(numbered-link-hop)
       |        |  +-- numbered-link-hop
       |        |     +-- link-tp-id    te-tp-id
       |        |     +-- hop-type?     te-hop-type
       |        |     +-- direction?    te-link-direction
       |        +--:(unnumbered-link-hop)
       |        |  +-- unnumbered-link-hop
       |        |     +-- link-tp-id    te-tp-id
       |        |     +-- node-id       te-node-id
       |        |     +-- hop-type?     te-hop-type
       |        |     +-- direction?    te-link-direction
       |        +--:(as-number)
       |        |  +-- as-number-hop
       |        |     +-- as-number    inet:as-number
       |        |     +-- hop-type?    te-hop-type
       |        +--:(label)
       |           +-- label-hop
       |              +-- te-label
       |                 ...
       +-- optimizations
          +-- (algorithm)?
             +--:(metric) {te-types:path-optimization-metric}?
             |  +-- optimization-metric* [metric-type]
             |     +-- metric-type    identityref
             |     +-- weight?        uint8
             +--:(objective-function)
                      {te-types:path-optimization-objective-function}?
                +-- objective-function
                   +-- objective-function-type?   identityref
]]></artwork></figure>

<t>The model, in addition to the metric types, defined in <xref target="I-D.ietf-teas-rfc8776-update"/>,
   which can be applied to each individual path request, supports also
   additional metric types, which apply to a set of synchronized
   requests, as referenced in <xref target="RFC5541"/>. These additional metric types
   are defined by the following YANG identities:</t>

<t><list style="symbols">
  <t>svec-metric-type: base YANG identity from which cumulative metric
types identities are derived.</t>
  <t>svec-metric-cumul-te: cumulative TE cost metric type, as defined
in <xref target="RFC5541"/>.</t>
  <t>svec-metric-cumul-igp: cumulative IGP cost metric type, as defined
in <xref target="RFC5541"/>.</t>
  <t>svec-metric-cumul-hop: cumulative Hop metric type, representing
the cumulative version of the Hop metric type defined in
<xref target="I-D.ietf-teas-rfc8776-update"/>.</t>
  <t>svec-metric-aggregate-bandwidth-consumption: aggregate bandwidth
consumption metric type, as defined in <xref target="RFC5541"/>.</t>
  <t>svec-metric-load-of-the-most-loaded-link: load of the most loaded
link metric type, as defined in <xref target="RFC5541"/>.</t>
</list></t>

</section>
<section anchor="returned-metric-values"><name>Returned metric values</name>

<t>This YANG data model provides a way to return the values of the
   metrics computed by the path computation in the output of RPC,
   together with other important information (e.g. SRLG, affinities,
   explicit route), emulating the syntax of the "C" flag of the "METRIC"
   PCEP object <xref target="RFC5440"/>:</t>

<figure><artwork type="ascii-art" name="returned-metrics.txt"><![CDATA[
       |     +--ro path-properties
       |        +--ro path-metric* [metric-type]
       |        |  +--ro metric-type           identityref
       |        |  +--ro accumulative-value?   uint64
       |        +--ro path-affinities-values
       |        |  +--ro path-affinities-value* [usage]
       |        |     +--ro usage    identityref
       |        |     +--ro value?   admin-groups
       |        +--ro path-affinity-names
       |        |  +--ro path-affinity-name* [usage]
       |        |     +--ro usage            identityref
       |        |     +--ro affinity-name* [name]
       |        |        +--ro name    string
       |        +--ro path-srlgs-lists
       |        |  +--ro path-srlgs-list* [usage]
       |        |     +--ro usage     identityref
       |        |     +--ro values*   srlg
       |        +--ro path-srlgs-names
       |        |  +--ro path-srlgs-name* [usage]
       |        |     +--ro usage    identityref
       |        |     +--ro names*   string
       |        +--ro path-route-objects
       |        |  ...
       |        +--ro te-bandwidth
       |        |  ...
       |        +--ro disjointness-type?
       |                te-types:te-path-disjointness
]]></artwork></figure>

<t>It also allows the client to request which information (metrics, SRLG
   and/or affinities) should be returned:</t>

<figure><artwork type="ascii-art" name="requested-metrics.txt"><![CDATA[
    |  +-- request-id                            uint32
    |  ...
    |  +-- requested-metrics* [metric-type]
    |  |  +-- metric-type    identityref
    |  +-- return-srlgs?                         boolean
    |  +-- return-affinities?                    boolean
    |  ...
]]></artwork></figure>

<t>This feature is essential for path computation in a multi-domain TE
   network as described in <xref target="md-uc"/>. In this case, the metrics
   returned by a path computation requested to a given underlying
   controller must be used by the client to compute the best end-to-end
   path. If they are missing, the client cannot compare different paths
   calculated by the underlying controllers and choose the best one for
   the optimal end-to-end (e2e) path.</t>

</section>
<section anchor="multiple-paths-requests-for-the-same-te-tunnel"><name>Multiple Paths Requests for the same TE tunnel</name>

<t>The YANG data model allows including multiple requests for different
   paths intended to be used within the same tunnel or within different
   tunnels.</t>

<t>When multiple requested paths are intended to be used within the same
   tunnel (e.g., requesting path computation for the primary and
   secondary paths of a protected tunnel), the set of attributes that
   are intended to be configured on per-tunnel basis rather than on per-
   path basis are common to all these path requests. These attributes
   includes both attributes which can be configured only a per-tunnel
   basis (e.g., tunnel-name, source/destination TTP, encoding and
   switching-type) as well attributes which can be configured both on a
   per-tunnel and on a per-path basis (e.g., the te-bandwidth or the
   associations).</t>

<t>Therefore, a tunnel-attributes list is defined, within the path
   computation request RPC:</t>

<figure><artwork type="ascii-art" name="tunnel-attributes-list.txt"><![CDATA[
    +-- tunnel-attributes* [tunnel-name]
    |  +-- tunnel-name               string
    |  +-- encoding?                 identityref
    |  +-- switching-type?           identityref
    |  +-- source?                   te-types:te-node-id
    |  +-- destination?              te-types:te-node-id
    |  +-- src-tunnel-tp-id?         binary
    |  +-- dst-tunnel-tp-id?         binary
    |  +-- bidirectional?            boolean
    |  +-- association-objects
    |  |  ...
    |  +-- protection-type?          identityref
    |  +-- restoration-type?         identityref
    |  +-- restoration-scheme?       identityref
    |  +-- te-topology-identifier
    |  |  +-- provider-id?   te-global-id
    |  |  +-- client-id?     te-global-id
    |  |  +-- topology-id?   te-topology-id
    |  +-- te-bandwidth
    |  |  ...
    |  +-- link-protection?          identityref
    |  +-- setup-priority?           uint8
    |  +-- hold-priority?            uint8
    |  +-- signaling-type?           identityref
    |  +-- hierarchy
    |     +-- dependency-tunnels
    |     |  ...
    |     +-- hierarchical-link
    |        ...
]]></artwork></figure>

<t>The path requests that are intended to be used within the same tunnel
   should reference the same entry in the tunnel-attributes list. This
   allows:</t>

<t><list style="symbols">
  <t>avoiding repeating the same set of per-tunnel parameters on
multiple requested paths;</t>
  <t>the server to understand what attributes are intended to be
configured on a per-tunnel basis (e.g., the te-bandwidth
configured in the tunnel-attributes) and what attributes are
intended to be configured on a per-path basis(e.g., the te-
bandwidth configured in the path-request). This could be useful
especially when the server also creates a TE tunnel instance
within the operational datastore to report the computed paths, as
described in <xref target="temp-state"/>: in this case, the tunnel-name is also
used as the suggested name for that TE tunnel instance.  <vspace blankLines='1'/>
The YANG data model allows also including requests for paths intended
 to modify existing tunnels (e.g., adding a protection path for an
 existing un-protected tunnel). In this case, the per-tunnel
 attributes are already provided in an existing TE tunnel instance and
 do not need to be re-configured in the path computation request RPC.
 Therefore, these requests should reference an existing TE tunnel
 instance.  <vspace blankLines='1'/>
It is also possible to request computing paths without indicating in
 which tunnel they are intended to be used (e.g., in case of an
 unprotected tunnel). In this case, the per-tunnel attributes could be
 provided together with the per-path attributes in the path request,
 without using the tunnel-attributes list.  <vspace blankLines='1'/>
The choices below are defined to distinguish the cases above:</t>
  <t>whether the per-tunnel attributes are configured by reference
(providing a leafref), to:  <list style="symbols">
      <t>either a TE tunnel instance, if it exists;</t>
      <t>or to an entry of the tunnel-attributes list, if the TE tunnel
instance does not exist;</t>
    </list></t>
  <t>or by value, providing the set of tunnel attributes within the
path request:</t>
</list></t>

<figure><artwork type="ascii-art" name="tunnel-attributes.txt"><![CDATA[
    |  +-- (tunnel-attributes)?
    |  |  +--:(reference)
    |  |  |  +-- tunnel-reference
    |  |  |     +-- (tunnel-exist)
    |  |  |     |  +--:(tunnel-ref)
    |  |  |     |  |  +-- tunnel-ref                te:tunnel-ref
    |  |  |     |  +--:(tunnel-attributes-ref)
    |  |  |     |     +-- tunnel-attributes-ref     leafref
    |  |  |     +-- path-name?                      string
    |  |  |     +-- (path-role)
    |  |  |        ...
    |  |  +--:(value)
    |  |     +-- tunnel-name?                    string
    |  |     +-- path-name?                      string
    |  |     +-- (path-role)?
    |  |     |  ...
    |  |     ...
    |  |     +-- encoding?                       identityref
    |  |     +-- switching-type?                 identityref
    |  |     ...
]]></artwork></figure>

<section anchor="tunnel-attributes-specified-by-value"><name>Tunnel attributes specified by value</name>

<t>The (value) case provides the set of attributes that are configured
   only on per-tunnel basis (e.g., tunnel-name, source/destination TTP,
   encoding and switching-type).</t>

<t>In this case, it is assumed that the requested path will be the only
   path within a tunnel.</t>

<t>If the only path within a tunnel is the transit segment of a multi-domain end-to-end path, it can be of any type (primary, secondary, reverse-primary
   or reverse-secondary). The (path-role) choice is used to specify its role in the path request:</t>

<figure><artwork type="ascii-art" name="tunnel-by-value.txt"><![CDATA[
    |  |     +-- (path-role)?
    |  |     |  +--:(primary-path)
    |  |     |  +--:(secondary-path)
    |  |     |  |  +-- secondary-path!
    |  |     |  |     +-- primary-path-name?   string
    |  |     |  +--:(primary-reverse-path)
    |  |     |  |  +-- primary-reverse-path!
    |  |     |  |     +-- primary-path-name?   string
    |  |     |  +--:(secondary-reverse-path)
    |  |     |     +-- secondary-reverse-path!
    |  |     |        +-- primary-path-name?           string
    |  |     |        +-- primary-reverse-path-name?   string
]]></artwork></figure>

<t>In all the other cases, the only path within a tunnel is a primary path.</t>

<t>The secondary-path, the primary-reverse-path and the secondary-
   reverse-path are presence container used to indicate the role of the
   path: by default, the path is assumed to be a primary path.</t>

<t>They optionally can contain the name of the primary-path under which
   the requested path could be associated within the YANG tree structure
   defined in <xref target="I-D.ietf-teas-yang-te"/>, which could be useful when the server also
   creates a TE tunnel instance within the operational datastore to
   report the computed paths, as described in <xref target="temp-state"/>: in this
   case, the tunnel-name and the path names are also used as the
   suggested name for that TE tunnel and path instances.</t>

</section>
<section anchor="tunnel-attributes-specified-by-reference"><name>Tunnel attributes specified by reference</name>

<t>The (reference) case provides the information needed to associate
   multiple path requests that are intended to be used within the same
   tunnel.</t>

<t>In order to indicate the role of the path being requested within the
   intended tunnel (e.g., primary or secondary path), the (path-role)
   choice is defined:</t>

<figure><artwork type="ascii-art" name="tunnel-by-reference.txt"><![CDATA[
    |  |  |     +-- (path-role)
    |  |  |        +--:(primary-path)
    |  |  |        |  +-- primary-path!
    |  |  |        |     ...
    |  |  |        +--:(secondary-path)
    |  |  |        |  +-- secondary-path
    |  |  |        |     ...
    |  |  |        +--:(primary-reverse-path)
    |  |  |        |  +-- primary-reverse-path
    |  |  |        |     ...
    |  |  |        +--:(secondary-reverse-path)
    |  |  |           +-- secondary-reverse-path
    |  |  |              ...
]]></artwork></figure>

<t>The primary-path is a presence container used to indicate that the
   requested path is intended to be used as a primary path. It can also
   contain some attributes which are configured only on primary paths
   (e.g., the k-requested-paths).</t>

<t>The secondary-path container indicates that the requested path is
   intended to be used as a secondary path and it contains at least
   references to one or more primary paths which can use it as a
   candidate secondary path:</t>

<figure><artwork type="ascii-art" name="secondary-path.txt"><![CDATA[
    |  |  |        |  +-- secondary-path
    |  |  |        |     ...
    |  |  |        |     +-- primary-path-ref* []
    |  |  |        |        +-- (primary-path-exist)
    |  |  |        |           +--:(path-ref)
    |  |  |        |           |  +-- primary-path-ref    leafref
    |  |  |        |           +--:(path-request-ref)
    |  |  |        |              +-- path-request-ref    leafref
]]></artwork></figure>

<t>A requested secondary path can reference any requested primary paths,
   and, in case they are intended to be used within an existing TE
   tunnel, it could also reference any existing primary-paths.</t>

<t>The secondary-path container can also contain some attributes which
   are configured only on secondary paths (e.g., the protection-type).</t>

<t>The primary-reverse-path container indicates that the requested path
   is intended to be used as a primary reverse path and it contains only
   the reference to the primary path which is intended to use it as a
   reverse path:</t>

<figure><artwork type="ascii-art" name="primary-reverse-path.txt"><![CDATA[
    |  |  |        |  +-- primary-reverse-path
    |  |  |        |     +-- (primary-path-exist)
    |  |  |        |        +--:(path-ref)
    |  |  |        |        |  +-- primary-path-ref    leafref
    |  |  |        |        +--:(path-request-ref)
    |  |  |        |           +-- path-request-ref    leafref
]]></artwork></figure>

<t>A requested primary reverse path can reference either a requested
   primary path, or, in case it is intended to be used within an
   existing TE tunnel, an existing primary-path.</t>

<t>The secondary-reverse-path container indicates that the requested
   path is intended to be used as a secondary reverse path and it
   contains at least references to one or more primary paths, whose
   primary reverse path can use it as a candidate secondary reverse
   path:</t>

<figure><artwork type="ascii-art" name="secondary-reverse-path.txt"><![CDATA[
    |  |  |           +-- secondary-reverse-path
    |  |  |              ...
    |  |  |              +-- primary-reverse-path* []
    |  |  |                 +-- (primary-reverse-path-exist)
    |  |  |                    +--:(path-ref)
    |  |  |                    |  +-- primary-path-ref    leafref
    |  |  |                    +--:(path-request-ref)
    |  |  |                       +-- path-request-ref    leafref
]]></artwork></figure>

<t>A requested secondary reverse path can reference any requested
   primary paths, and, in case they are intended to be used within an
   existing TE tunnel, it could reference also existing primary-paths.</t>

<t>The secondary-reverse-path container can also contain some attributes
   which are configured only on secondary reverse paths (e.g., the
   protection-type).</t>

<t>In case the requested path is a transit segment of a multi-domain
   end-to-end path, the primary-path may not be needed to be
   setup/computed. However, the request for path computation of a
   secondary-path or a primary-reverse or of a secondary-reverse-path
   requires that the primary-path exists or it is requested within the
   same RPC request. In the latter case, the path request for the
   primary-path should have an empty 'route-object-include-exclude' list,
   as described in section 5.1.1 of <xref target="I-D.ietf-teas-yang-te"/>, to indicate to the server that
   path computation is not requested and no path properties will
   therefore be returned in the RPC response.</t>

</section>
</section>
<section anchor="multi-layer-path-computation"><name>Multi-Layer Path Computation</name>

<t>The models supports requesting multi-layer path computation following
   the same approach based on dependency tunnels, as defined in <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>The tunnel-attributes of a given client-layer path request can
   reference server-layer TE tunnels which can already exist in the YANG
   datastore or be specified in the tunnel-attributes list, within the
   same RPC request:</t>

<figure><artwork type="ascii-art" name="dependency-tunnels.txt"><![CDATA[
    |     +-- dependency-tunnels
    |     |  +-- dependency-tunnel* [name]
    |     |  |  +-- name              -> /te:te/tunnels/tunnel/name
    |     |  |  +-- encoding?         identityref
    |     |  |  +-- switching-type?   identityref
    |     |  +-- dependency-tunnel-attributes* [name]
    |     |     +-- name              leafref
    |     |     +-- encoding?         identityref
    |     |     +-- switching-type?   identityref
]]></artwork></figure>

<t>In a similar way as in <xref target="I-D.ietf-teas-yang-te"/>, the server-layer tunnel
   attributes should provide the information of what would be the
   dynamic link in the client layer topology supported by that tunnel,
   if instantiated:</t>

<figure><artwork type="ascii-art" name="hierarchical-link.txt"><![CDATA[
    |     +-- hierarchical-link
    |        +-- enable?                   boolean
    |        +-- local-te-node-id?         te-types:te-node-id
    |        +-- local-te-link-tp-id?      te-types:te-tp-id
    |        +-- remote-te-node-id?        te-types:te-node-id
    |        +-- te-topology-identifier
    |           +-- provider-id?   te-global-id
    |           +-- client-id?     te-global-id
    |           +-- topology-id?   te-topology-id
]]></artwork></figure>

<t>It is worth noting that since path computation RPC is stateless, the
   dynamic hierarchical links configured for the server-layer tunnel
   attributes cannot be used for path computation of any client-layer
   path unless explicitly referenced in the dependency-tunnel-attributes
   list within the same RPC request.</t>

</section>
</section>
<section anchor="yang-data-model-for-te-path-computation"><name>YANG data model for TE path computation</name>

<section anchor="pc-tree"><name>Tree diagram</name>

<t><xref target="fig-pc-tree"/> below shows the tree diagram of the YANG data model defined
   in module ietf-te-path-computation.yang, defined in <xref target="pc-yang"/>.</t>

<figure title="TE path computation tree diagram" anchor="fig-pc-tree"><artwork type="ascii-art" name="ietf-te-path-computation.tree"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

module: ietf-te-path-computation

  augment /te:tunnels-path-compute/te:input/te:path-compute-info:
    +-- path-request* [request-id]
    |  +-- request-id                            uint32
    |  +-- compute-priority?                     uint8
    |  |       {compute-priority}?
    |  +-- (tunnel-attributes)?
    |  |  +--:(reference)
    |  |  |  +-- tunnel-reference
    |  |  |     +-- (tunnel-exist)
    |  |  |     |  +--:(tunnel-ref)
    |  |  |     |  |  +-- tunnel-ref                te:tunnel-ref
    |  |  |     |  +--:(tunnel-attributes-ref)
    |  |  |     |     +-- tunnel-attributes-ref     leafref
    |  |  |     +-- path-name?                      string
    |  |  |     +-- (path-role)
    |  |  |        +--:(primary-path)
    |  |  |        |  +-- primary-path!
    |  |  |        |     +-- preference?          uint8
    |  |  |        |     +-- co-routed?           boolean
    |  |  |        |     +-- k-requested-paths?   uint8
    |  |  |        +--:(secondary-path)
    |  |  |        |  +-- secondary-path
    |  |  |        |     +-- secondary-reverse-path?   leafref
    |  |  |        |     +-- preference?               uint8
    |  |  |        |     +-- protection-type?          identityref
    |  |  |        |     +-- restoration-type?         identityref
    |  |  |        |     +-- restoration-scheme?       identityref
    |  |  |        |     +-- primary-path-ref* []
    |  |  |        |        +-- (primary-path-exist)
    |  |  |        |           +--:(path-ref)
    |  |  |        |           |  +-- primary-path-ref    leafref
    |  |  |        |           +--:(path-request-ref)
    |  |  |        |              +-- path-request-ref    leafref
    |  |  |        +--:(primary-reverse-path)
    |  |  |        |  +-- primary-reverse-path
    |  |  |        |     +-- (primary-path-exist)
    |  |  |        |        +--:(path-ref)
    |  |  |        |        |  +-- primary-path-ref    leafref
    |  |  |        |        +--:(path-request-ref)
    |  |  |        |           +-- path-request-ref    leafref
    |  |  |        +--:(secondary-reverse-path)
    |  |  |           +-- secondary-reverse-path
    |  |  |              +-- preference?             uint8
    |  |  |              +-- protection-type?        identityref
    |  |  |              +-- restoration-type?       identityref
    |  |  |              +-- restoration-scheme?     identityref
    |  |  |              +-- primary-reverse-path* []
    |  |  |                 +-- (primary-reverse-path-exist)
    |  |  |                    +--:(path-ref)
    |  |  |                    |  +-- primary-path-ref    leafref
    |  |  |                    +--:(path-request-ref)
    |  |  |                       +-- path-request-ref    leafref
    |  |  +--:(value)
    |  |     +-- tunnel-name?                    string
    |  |     +-- path-name?                      string
    |  |     +-- (path-role)?
    |  |     |  +--:(primary-path)
    |  |     |  +--:(secondary-path)
    |  |     |  |  +-- secondary-path!
    |  |     |  |     +-- primary-path-name?   string
    |  |     |  +--:(primary-reverse-path)
    |  |     |  |  +-- primary-reverse-path!
    |  |     |  |     +-- primary-path-name?   string
    |  |     |  +--:(secondary-reverse-path)
    |  |     |     +-- secondary-reverse-path!
    |  |     |        +-- primary-path-name?           string
    |  |     |        +-- primary-reverse-path-name?   string
    |  |     +-- k-requested-paths?              uint8
    |  |     +-- encoding?                       identityref
    |  |     +-- switching-type?                 identityref
    |  |     +-- source
    |  |     |  +-- node-id?        nw:node-id
    |  |     |  +-- te-node-id?     te-types:te-node-id
    |  |     |  +-- tunnel-tp-id?   binary
    |  |     +-- destination
    |  |     |  +-- node-id?        nw:node-id
    |  |     |  +-- te-node-id?     te-types:te-node-id
    |  |     |  +-- tunnel-tp-id?   binary
    |  |     +-- bidirectional?                  boolean
    |  |     +-- te-topology-identifier
    |  |        +-- provider-id?   te-global-id
    |  |        +-- client-id?     te-global-id
    |  |        +-- topology-id?   te-topology-id
    |  +-- association-objects
    |  |  +-- association-object* [association-key]
    |  |  |  +-- association-key    string
    |  |  |  +-- type?              identityref
    |  |  |  +-- id?                uint16
    |  |  |  +-- source
    |  |  |     +-- id?     te-gen-node-id
    |  |  |     +-- type?   enumeration
    |  |  +-- association-object-extended* [association-key]
    |  |     +-- association-key    string
    |  |     +-- type?              identityref
    |  |     +-- id?                uint16
    |  |     +-- source
    |  |     |  +-- id?     te-gen-node-id
    |  |     |  +-- type?   enumeration
    |  |     +-- global-source?     uint32
    |  |     +-- extended-id?       yang:hex-string
    |  +-- optimizations
    |  |  +-- (algorithm)?
    |  |     +--:(metric) {path-optimization-metric}?
    |  |     |  +-- optimization-metric* [metric-type]
    |  |     |  |  +-- metric-type                       identityref
    |  |     |  |  +-- weight?                           uint8
    |  |     |  |  +-- explicit-route-exclude-objects
    |  |     |  |  |  +-- route-object-exclude-object* [index]
    |  |     |  |  |     +-- index                        uint32
    |  |     |  |  |     +-- (type)?
    |  |     |  |  |        +--:(numbered-node-hop)
    |  |     |  |  |        |  +-- numbered-node-hop
    |  |     |  |  |        |     +-- node-id-uri?   nw:node-id
    |  |     |  |  |        |     +-- node-id?       te-node-id
    |  |     |  |  |        |     +-- hop-type?      te-hop-type
    |  |     |  |  |        +--:(numbered-link-hop)
    |  |     |  |  |        |  +-- numbered-link-hop
    |  |     |  |  |        |     +-- link-tp-id    te-tp-id
    |  |     |  |  |        |     +-- hop-type?     te-hop-type
    |  |     |  |  |        |     +-- direction?    te-link-direction
    |  |     |  |  |        +--:(unnumbered-link-hop)
    |  |     |  |  |        |  +-- unnumbered-link-hop
    |  |     |  |  |        |     +-- link-tp-id-uri?   nt:tp-id
    |  |     |  |  |        |     +-- link-tp-id?       te-tp-id
    |  |     |  |  |        |     +-- node-id-uri?      nw:node-id
    |  |     |  |  |        |     +-- node-id?          te-node-id
    |  |     |  |  |        |     +-- hop-type?         te-hop-type
    |  |     |  |  |        |     +-- direction?
    |  |     |  |  |        |             te-link-direction
    |  |     |  |  |        +--:(as-number)
    |  |     |  |  |        |  +-- as-number-hop
    |  |     |  |  |        |     +-- as-number    inet:as-number
    |  |     |  |  |        |     +-- hop-type?    te-hop-type
    |  |     |  |  |        +--:(label)
    |  |     |  |  |        |  +-- label-hop
    |  |     |  |  |        |     +-- te-label
    |  |     |  |  |        |        +-- (technology)?
    |  |     |  |  |        |        |  +--:(generic)
    |  |     |  |  |        |        |     +-- generic?
    |  |     |  |  |        |        |             rt-types:generali\
zed-label
    |  |     |  |  |        |        +-- direction?
    |  |     |  |  |        |                te-label-direction
    |  |     |  |  |        +--:(srlg)
    |  |     |  |  |           +-- srlg
    |  |     |  |  |              +-- srlg?   uint32
    |  |     |  |  +-- explicit-route-include-objects
    |  |     |  |     +-- route-object-include-object* [index]
    |  |     |  |        +-- index                        uint32
    |  |     |  |        +-- (type)?
    |  |     |  |           +--:(numbered-node-hop)
    |  |     |  |           |  +-- numbered-node-hop
    |  |     |  |           |     +-- node-id-uri?   nw:node-id
    |  |     |  |           |     +-- node-id?       te-node-id
    |  |     |  |           |     +-- hop-type?      te-hop-type
    |  |     |  |           +--:(numbered-link-hop)
    |  |     |  |           |  +-- numbered-link-hop
    |  |     |  |           |     +-- link-tp-id    te-tp-id
    |  |     |  |           |     +-- hop-type?     te-hop-type
    |  |     |  |           |     +-- direction?    te-link-direction
    |  |     |  |           +--:(unnumbered-link-hop)
    |  |     |  |           |  +-- unnumbered-link-hop
    |  |     |  |           |     +-- link-tp-id-uri?   nt:tp-id
    |  |     |  |           |     +-- link-tp-id?       te-tp-id
    |  |     |  |           |     +-- node-id-uri?      nw:node-id
    |  |     |  |           |     +-- node-id?          te-node-id
    |  |     |  |           |     +-- hop-type?         te-hop-type
    |  |     |  |           |     +-- direction?
    |  |     |  |           |             te-link-direction
    |  |     |  |           +--:(as-number)
    |  |     |  |           |  +-- as-number-hop
    |  |     |  |           |     +-- as-number    inet:as-number
    |  |     |  |           |     +-- hop-type?    te-hop-type
    |  |     |  |           +--:(label)
    |  |     |  |              +-- label-hop
    |  |     |  |                 +-- te-label
    |  |     |  |                    +-- (technology)?
    |  |     |  |                    |  +--:(generic)
    |  |     |  |                    |     +-- generic?
    |  |     |  |                    |             rt-types:generali\
zed-label
    |  |     |  |                    +-- direction?
    |  |     |  |                            te-label-direction
    |  |     |  +-- tiebreakers
    |  |     |     +-- tiebreaker* [tiebreaker-type]
    |  |     |        +-- tiebreaker-type    identityref
    |  |     +--:(objective-function)
    |  |              {path-optimization-objective-function}?
    |  |        +-- objective-function
    |  |           +-- objective-function-type?   identityref
    |  +-- named-path-constraint?                leafref
    |  |       {te-types:named-path-constraints}?
    |  +-- te-bandwidth
    |  |  +-- (technology)?
    |  |     +--:(generic)
    |  |        +-- generic?   te-bandwidth
    |  +-- link-protection?                      identityref
    |  +-- setup-priority?                       uint8
    |  +-- hold-priority?                        uint8
    |  +-- signaling-type?                       identityref
    |  +-- path-metric-bounds
    |  |  +-- path-metric-bound* [metric-type]
    |  |     +-- metric-type    identityref
    |  |     +-- upper-bound?   uint64
    |  +-- path-affinities-values
    |  |  +-- path-affinities-value* [usage]
    |  |     +-- usage    identityref
    |  |     +-- value?   admin-groups
    |  +-- path-affinity-names
    |  |  +-- path-affinity-name* [usage]
    |  |     +-- usage            identityref
    |  |     +-- affinity-name* [name]
    |  |        +-- name    string
    |  +-- path-srlgs-lists
    |  |  +-- path-srlgs-list* [usage]
    |  |     +-- usage     identityref
    |  |     +-- values*   srlg
    |  +-- path-srlgs-names
    |  |  +-- path-srlgs-name* [usage]
    |  |     +-- usage    identityref
    |  |     +-- names*   string
    |  +-- disjointness?                         te-path-disjointness
    |  +-- explicit-route-objects-always
    |  |  +-- route-object-exclude-always* [index]
    |  |  |  +-- index                        uint32
    |  |  |  +-- (type)?
    |  |  |     +--:(numbered-node-hop)
    |  |  |     |  +-- numbered-node-hop
    |  |  |     |     +-- node-id-uri?   nw:node-id
    |  |  |     |     +-- node-id?       te-node-id
    |  |  |     |     +-- hop-type?      te-hop-type
    |  |  |     +--:(numbered-link-hop)
    |  |  |     |  +-- numbered-link-hop
    |  |  |     |     +-- link-tp-id    te-tp-id
    |  |  |     |     +-- hop-type?     te-hop-type
    |  |  |     |     +-- direction?    te-link-direction
    |  |  |     +--:(unnumbered-link-hop)
    |  |  |     |  +-- unnumbered-link-hop
    |  |  |     |     +-- link-tp-id-uri?   nt:tp-id
    |  |  |     |     +-- link-tp-id?       te-tp-id
    |  |  |     |     +-- node-id-uri?      nw:node-id
    |  |  |     |     +-- node-id?          te-node-id
    |  |  |     |     +-- hop-type?         te-hop-type
    |  |  |     |     +-- direction?        te-link-direction
    |  |  |     +--:(as-number)
    |  |  |     |  +-- as-number-hop
    |  |  |     |     +-- as-number    inet:as-number
    |  |  |     |     +-- hop-type?    te-hop-type
    |  |  |     +--:(label)
    |  |  |        +-- label-hop
    |  |  |           +-- te-label
    |  |  |              +-- (technology)?
    |  |  |              |  +--:(generic)
    |  |  |              |     +-- generic?
    |  |  |              |             rt-types:generalized-label
    |  |  |              +-- direction?       te-label-direction
    |  |  +-- route-object-include-exclude* [index]
    |  |     +-- explicit-route-usage?        identityref
    |  |     +-- index                        uint32
    |  |     +-- (type)?
    |  |        +--:(numbered-node-hop)
    |  |        |  +-- numbered-node-hop
    |  |        |     +-- node-id-uri?   nw:node-id
    |  |        |     +-- node-id?       te-node-id
    |  |        |     +-- hop-type?      te-hop-type
    |  |        +--:(numbered-link-hop)
    |  |        |  +-- numbered-link-hop
    |  |        |     +-- link-tp-id    te-tp-id
    |  |        |     +-- hop-type?     te-hop-type
    |  |        |     +-- direction?    te-link-direction
    |  |        +--:(unnumbered-link-hop)
    |  |        |  +-- unnumbered-link-hop
    |  |        |     +-- link-tp-id-uri?   nt:tp-id
    |  |        |     +-- link-tp-id?       te-tp-id
    |  |        |     +-- node-id-uri?      nw:node-id
    |  |        |     +-- node-id?          te-node-id
    |  |        |     +-- hop-type?         te-hop-type
    |  |        |     +-- direction?        te-link-direction
    |  |        +--:(as-number)
    |  |        |  +-- as-number-hop
    |  |        |     +-- as-number    inet:as-number
    |  |        |     +-- hop-type?    te-hop-type
    |  |        +--:(label)
    |  |        |  +-- label-hop
    |  |        |     +-- te-label
    |  |        |        +-- (technology)?
    |  |        |        |  +--:(generic)
    |  |        |        |     +-- generic?
    |  |        |        |             rt-types:generalized-label
    |  |        |        +-- direction?       te-label-direction
    |  |        +--:(srlg)
    |  |           +-- srlg
    |  |              +-- srlg?   uint32
    |  +-- path-in-segment!
    |  |  +-- label-restrictions
    |  |     +-- label-restriction* [index]
    |  |        +-- restriction?    enumeration
    |  |        +-- index           uint32
    |  |        +-- label-start
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-end
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-step
    |  |        |  +-- (technology)?
    |  |        |     +--:(generic)
    |  |        |        +-- generic?   int32
    |  |        +-- range-bitmap?   yang:hex-string
    |  +-- path-out-segment!
    |  |  +-- label-restrictions
    |  |     +-- label-restriction* [index]
    |  |        +-- restriction?    enumeration
    |  |        +-- index           uint32
    |  |        +-- label-start
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-end
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-step
    |  |        |  +-- (technology)?
    |  |        |     +--:(generic)
    |  |        |        +-- generic?   int32
    |  |        +-- range-bitmap?   yang:hex-string
    |  +-- requested-metrics* [metric-type]
    |  |  +-- metric-type    identityref
    |  +-- return-srlgs?                         boolean
    |  +-- return-affinities?                    boolean
    |  +-- requested-state!
    |     +-- timer?            uint16
    |     +-- transaction-id?   string
    +-- tunnel-attributes* [tunnel-name]
    |  +-- tunnel-name               string
    |  +-- encoding?                 identityref
    |  +-- switching-type?           identityref
    |  +-- source
    |  |  +-- node-id?        nw:node-id
    |  |  +-- te-node-id?     te-types:te-node-id
    |  |  +-- tunnel-tp-id?   binary
    |  +-- destination
    |  |  +-- node-id?        nw:node-id
    |  |  +-- te-node-id?     te-types:te-node-id
    |  |  +-- tunnel-tp-id?   binary
    |  +-- bidirectional?            boolean
    |  +-- association-objects
    |  |  +-- association-object* [association-key]
    |  |  |  +-- association-key    string
    |  |  |  +-- type?              identityref
    |  |  |  +-- id?                uint16
    |  |  |  +-- source
    |  |  |     +-- id?     te-gen-node-id
    |  |  |     +-- type?   enumeration
    |  |  +-- association-object-extended* [association-key]
    |  |     +-- association-key    string
    |  |     +-- type?              identityref
    |  |     +-- id?                uint16
    |  |     +-- source
    |  |     |  +-- id?     te-gen-node-id
    |  |     |  +-- type?   enumeration
    |  |     +-- global-source?     uint32
    |  |     +-- extended-id?       yang:hex-string
    |  +-- protection-type?          identityref
    |  +-- restoration-type?         identityref
    |  +-- restoration-scheme?       identityref
    |  +-- network-id?               nw:network-id
    |  +-- te-topology-identifier
    |  |  +-- provider-id?   te-global-id
    |  |  +-- client-id?     te-global-id
    |  |  +-- topology-id?   te-topology-id
    |  +-- te-bandwidth
    |  |  +-- (technology)?
    |  |     +--:(generic)
    |  |        +-- generic?   te-bandwidth
    |  +-- link-protection?          identityref
    |  +-- setup-priority?           uint8
    |  +-- hold-priority?            uint8
    |  +-- signaling-type?           identityref
    |  +-- hierarchy
    |     +-- dependency-tunnels
    |     |  +-- dependency-tunnel* [name]
    |     |  |  +-- name              -> /te:te/tunnels/tunnel/name
    |     |  |  +-- encoding?         identityref
    |     |  |  +-- switching-type?   identityref
    |     |  +-- dependency-tunnel-attributes* [name]
    |     |     +-- name              leafref
    |     |     +-- encoding?         identityref
    |     |     +-- switching-type?   identityref
    |     +-- hierarchical-link
    |        +-- enable?                   boolean
    |        +-- local-node-id?            nw:node-id
    |        +-- local-te-node-id?         te-types:te-node-id
    |        +-- local-link-tp-id?         nt:tp-id
    |        +-- local-te-link-tp-id?      te-types:te-tp-id
    |        +-- remote-link-tp-id?        nt:tp-id
    |        +-- remote-te-node-id?        te-types:te-node-id
    |        +-- network-id?               nw:network-id
    |        +-- te-topology-identifier
    |           +-- provider-id?   te-global-id
    |           +-- client-id?     te-global-id
    |           +-- topology-id?   te-topology-id
    +-- synchronization* [] {svec}?
       +-- svec
       |  +-- relaxable?      boolean
       |  +-- disjointness?   te-path-disjointness
       |  +-- request-id*     uint32
       +-- svec-constraints
       |  +-- path-metric-bound* [metric-type]
       |     +-- metric-type    identityref
       |     +-- upper-bound?   uint64
       +-- path-srlgs-lists
       |  +-- path-srlgs-list* [usage]
       |     +-- usage     identityref
       |     +-- values*   srlg
       +-- path-srlgs-names
       |  +-- path-srlgs-name* [usage]
       |     +-- usage    identityref
       |     +-- names*   string
       +-- exclude-objects
       |  +-- excludes* []
       |     +-- (type)?
       |        +--:(numbered-node-hop)
       |        |  +-- numbered-node-hop
       |        |     +-- node-id-uri?   nw:node-id
       |        |     +-- node-id?       te-node-id
       |        |     +-- hop-type?      te-hop-type
       |        +--:(numbered-link-hop)
       |        |  +-- numbered-link-hop
       |        |     +-- link-tp-id    te-tp-id
       |        |     +-- hop-type?     te-hop-type
       |        |     +-- direction?    te-link-direction
       |        +--:(unnumbered-link-hop)
       |        |  +-- unnumbered-link-hop
       |        |     +-- link-tp-id-uri?   nt:tp-id
       |        |     +-- link-tp-id?       te-tp-id
       |        |     +-- node-id-uri?      nw:node-id
       |        |     +-- node-id?          te-node-id
       |        |     +-- hop-type?         te-hop-type
       |        |     +-- direction?        te-link-direction
       |        +--:(as-number)
       |        |  +-- as-number-hop
       |        |     +-- as-number    inet:as-number
       |        |     +-- hop-type?    te-hop-type
       |        +--:(label)
       |           +-- label-hop
       |              +-- te-label
       |                 +-- (technology)?
       |                 |  +--:(generic)
       |                 |     +-- generic?
       |                 |             rt-types:generalized-label
       |                 +-- direction?       te-label-direction
       +-- optimizations
          +-- (algorithm)?
             +--:(metric) {te-types:path-optimization-metric}?
             |  +-- optimization-metric* [metric-type]
             |     +-- metric-type    identityref
             |     +-- weight?        uint8
             +--:(objective-function)
                      {te-types:path-optimization-objective-function\
}?
                +-- objective-function
                   +-- objective-function-type?   identityref
  augment /te:tunnels-path-compute/te:output/te:path-compute-result:
    +--ro response* [response-id]
       +--ro response-id                         uint32
       +--ro computed-paths-properties
       |  +--ro computed-path-properties* [k-index]
       |     +--ro k-index            uint8
       |     +--ro path-properties
       |        +--ro path-metric* [metric-type]
       |        |  +--ro metric-type           identityref
       |        |  +--ro accumulative-value?   uint64
       |        +--ro path-affinities-values
       |        |  +--ro path-affinities-value* [usage]
       |        |     +--ro usage    identityref
       |        |     +--ro value?   admin-groups
       |        +--ro path-affinity-names
       |        |  +--ro path-affinity-name* [usage]
       |        |     +--ro usage            identityref
       |        |     +--ro affinity-name* [name]
       |        |        +--ro name    string
       |        +--ro path-srlgs-lists
       |        |  +--ro path-srlgs-list* [usage]
       |        |     +--ro usage     identityref
       |        |     +--ro values*   srlg
       |        +--ro path-srlgs-names
       |        |  +--ro path-srlgs-name* [usage]
       |        |     +--ro usage    identityref
       |        |     +--ro names*   string
       |        +--ro path-route-objects
       |        |  +--ro path-route-object* [index]
       |        |     +--ro index                        uint32
       |        |     +--ro (type)?
       |        |        +--:(numbered-node-hop)
       |        |        |  +--ro numbered-node-hop
       |        |        |     +--ro node-id-uri?   nw:node-id
       |        |        |     +--ro node-id?       te-node-id
       |        |        |     +--ro hop-type?      te-hop-type
       |        |        +--:(numbered-link-hop)
       |        |        |  +--ro numbered-link-hop
       |        |        |     +--ro link-tp-id    te-tp-id
       |        |        |     +--ro hop-type?     te-hop-type
       |        |        |     +--ro direction?    te-link-direction
       |        |        +--:(unnumbered-link-hop)
       |        |        |  +--ro unnumbered-link-hop
       |        |        |     +--ro link-tp-id-uri?   nt:tp-id
       |        |        |     +--ro link-tp-id?       te-tp-id
       |        |        |     +--ro node-id-uri?      nw:node-id
       |        |        |     +--ro node-id?          te-node-id
       |        |        |     +--ro hop-type?         te-hop-type
       |        |        |     +--ro direction?
       |        |        |             te-link-direction
       |        |        +--:(as-number)
       |        |        |  +--ro as-number-hop
       |        |        |     +--ro as-number    inet:as-number
       |        |        |     +--ro hop-type?    te-hop-type
       |        |        +--:(label)
       |        |           +--ro label-hop
       |        |              +--ro te-label
       |        |                 +--ro (technology)?
       |        |                 |  +--:(generic)
       |        |                 |     +--ro generic?
       |        |                 |             rt-types:generalized\
-label
       |        |                 +--ro direction?
       |        |                         te-label-direction
       |        +--ro te-bandwidth
       |        |  +--ro (technology)?
       |        |     +--:(generic)
       |        |        +--ro generic?   te-bandwidth
       |        +--ro disjointness-type?
       |                te-types:te-path-disjointness
       +--ro computed-path-error-infos
       |  +--ro computed-path-error-info* []
       |     +--ro error-description?   string
       |     +--ro error-timestamp?     yang:date-and-time
       |     +--ro error-reason?        identityref
       +--ro tunnel-ref?                         te:tunnel-ref
       +--ro (path-role)?
          +--:(primary)
          |  +--ro primary-path-ref?             leafref
          +--:(primary-reverse)
          |  +--ro primary-reverse-path-ref?     leafref
          +--:(secondary)
          |  +--ro secondary-path-ref?           leafref
          +--:(secondary-reverse)
             +--ro secondary-reverse-path-ref?   leafref
  augment /te:tunnels-actions/te:input/te:tunnel-info/te:filter-type:
    +--:(path-compute-transactions)
       +-- path-compute-transaction-id*   string
  augment /te:tunnels-actions/te:output:
    +--ro path-computed-delete-result
       +--ro path-compute-transaction-id*   string
]]></artwork></figure>

</section>
<section anchor="pc-yang"><name>YANG module</name>

<figure title="TE path computation YANG module" anchor="fig-pc-yang"><sourcecode type="yang" markers="true" name="ietf-te-path-computation@2023-06-27.yang"><![CDATA[
module ietf-te-path-computation {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-te-path-computation";
  prefix te-pc;

  import ietf-te {
    prefix te;
    reference
      "RFCYYYY: A YANG Data Model for Traffic Engineering Tunnels
       and Interfaces";
  }

  /* Note: The RFC Editor will replace YYYY with the number assigned
     to the RFC once draft-ietf-teas-yang-te becomes an RFC.*/

  import ietf-te-types {
    prefix te-types;
    reference
      "RFCZZZZ: Updated Common YANG Data Types for Traffic 
      Engineering";
  }

  /* Note: The RFC Editor will replace ZZZZ with the number assigned
     to the RFC once draft-ietf-teas-rfc8776-update becomes an RFC.*/

  organization
    "Traffic Engineering Architecture and Signaling (TEAS)
     Working Group";
  contact
    "WG Web: <https://datatracker.ietf.org/wg/teas/>
     WG List:  <mailto:teas@ietf.org>

     Editor:   Italo Busi
               <mailto:italo.busi@huawei.com>

     Editor:   Sergio Belotti
               <mailto:sergio.belotti@nokia.com>

     Editor:   Victor Lopez
               <mailto:victor.lopez@nokia.com>

     Editor:   Oscar Gonzalez de Dios
               <mailto:oscar.gonzalezdedios@telefonica.com>

     Editor:   Anurag Sharma
               <mailto:ansha@google.com>

     Editor:   Yan Shi
               <mailto:shiyan49@chinaunicom.cn>

     Editor:   Ricard Vilalta
               <mailto:ricard.vilalta@cttc.es>

     Editor:   Karthik Sethuraman
               <mailto:karthik.sethuraman@necam.com>

     Editor:   Michael Scharf
               <mailto:michael.scharf@gmail.com>

     Editor:   Daniele Ceccarelli
               <mailto:daniele.ceccarelli@ericsson.com>
     
    ";
  description
    "This module defines a YANG data model for requesting Traffic
     Engineering (TE) path computation. The YANG data model defined
     in this document augments the RPCs defined in the generic TE
     module (ietf-te).

     The model fully conforms to the
     Network Management Datastore Architecture (NMDA).

     Copyright (c) 2023 IETF Trust and the persons
     identified as authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with
     or without modification, is permitted pursuant to, and
     subject to the license terms contained in, the Revised
     BSD License set forth in Section 4.c of the IETF Trust's
     Legal Provisions Relating to IETF Documents
     (https://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC XXXX; see
     the RFC itself for full legal notices.

     The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL', 'SHALL
     NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'NOT RECOMMENDED',
     'MAY', and 'OPTIONAL' in this document are to be interpreted as
     described in BCP 14 (RFC 2119) (RFC 8174) when, and only when,
     they appear in all capitals, as shown here.";

  // RFC Ed.: replace XXXX with actual RFC number and remove
  // this note
  // replace the revision date with the module publication date
  // the format is (year-month-day)

  revision 2023-06-27 {
    description
      "Initial revision";
    reference
      "RFC XXXX: A YANG Data Model for requesting path computation";
  }

  // RFC Ed.: replace XXXX with actual RFC number and remove
  // this note

  /*
   * Features
   */
  
  feature svec {
    description
      "This feature indicates that the server supports synchronized 
      path computation requests.";
    reference
      "Section 7.13 of RFC5440: Path Computation Element (PCE) 
      Communication Protocol (PCEP).";
  }

  feature compute-priority {
    description
      "This feature indicates that the server supports path 
      computation request's priority";
    reference
      "Section 7.4.1 of RFC5440: Path Computation Element (PCE) 
      Communication Protocol (PCEP).";
  }

  /*
   * Identities
   */

  identity tunnel-action-path-compute-delete {
    base te-types:tunnel-action-type;
    description
      "Action type to delete the transient states
      of computed paths, as described in section 3.3.1 of
      RFC XXXX.";
    reference
      "RFC XXXX: A YANG Data Model for requesting path computation";
  }

  /*
   * Groupings
   */

  grouping protection-restoration-properties {
    description
      "This grouping defines the restoration and protection types
       for a path in the path computation request.";
    leaf protection-type {
      type identityref {
        base te-types:lsp-protection-type;
      }
      default "te-types:lsp-protection-unprotected";
      description
        "LSP protection type.";
    }
    leaf restoration-type {
      type identityref {
        base te-types:lsp-restoration-type;
      }
      default "te-types:lsp-restoration-restore-any";
      description
        "LSP restoration type.";
    }
    leaf restoration-scheme {
      type identityref {
        base te-types:restoration-scheme-type;
      }
      default "te-types:restoration-scheme-preconfigured";
      description
        "LSP restoration scheme.";
    }
  } // grouping protection-restoration-properties

  grouping requested-info {
    description
      "This grouping defines the information which is requested
       (e.g., metrics), in the path computation request, to be
       returned in the path computation response.";
    list requested-metrics {
      key "metric-type";
      description
        "The list of the requested metrics.

         The metrics listed here MUST be returned in the response.
         Returning other metrics in the response is OPTIONAL.";
      leaf metric-type {
        type identityref {
          base te-types:path-metric-type;
        }
        description
          "The metric requested to be returned in the response";
      }
    }
    leaf return-srlgs {
      type boolean;
      default "false";
      description
        "If true, path Shared Risk Link Groups (SRLGs) MUST be
         returned in the response.
         If false, returning path SRLGs in the response OPTIONAL.";
    }
    leaf return-affinities {
      type boolean;
      default "false";
      description
        "If true, path affinities MUST be returned in the response.
         If false, returning path affinities in the response is
         OPTIONAL.";
    }
  } // grouping requested-info

  grouping requested-state {
    description
      "Configuration for the transient state used
       to report the computed path";
    container requested-state {
      presence
        "Request temporary reporting of the computed path state";
      description
        "Configures attributes for the temporary reporting of the
         computed path state (e.g., expiration timer).";
      leaf timer {
        type uint16;
        units "minutes";
        default "10";
        description
          "The timeout after which the transient state reporting
          the computed path SHOULD be removed.";
      }
      leaf transaction-id {
        type string;
        description
          "The transaction-id associated with this path computation
          to be used for fast deletion of the transient states
          associated with multiple path computations.

          This transaction-id can be used to explicitly delete all
          the transient states of all the computed paths associated
          with the same transaction-id.

          When one path associated with a transaction-id is setup,
          the transient states of all the other computed paths
          with the same transaction-id are automatically removed.

          If not specified, the transient state is removed only
          when the timer expires (when the timer is specified)
          or not created at all (stateless path computation,
          when the timer is not specified).";
      }
    }
  } // grouping requested-state

  grouping reported-state {
    description
      "This grouping defines the information, returned in the path
       computation response, reporting the transient state related
       to the computed path";
    leaf tunnel-ref {
      type te:tunnel-ref;
      description
        "
         Reference to the tunnel that reports the transient state
         of the computed path.

         If no transient state is created, this attribute is
         omitted.
        ";
    }
    choice path-role {
      description
        "The transient state of the computed path can be reported
         as a primary, primary-reverse, secondary or
         a secondary-reverse path of a te-tunnel";
      case primary {
        leaf primary-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:primary-paths/te:primary-path/"
               + "te:name";
          }
          must '../tunnel-ref' {
            description
              "The primary-path name can only be reported
               if the tunnel name is also reported.";
          }
          description
            "
             Reference to the primary-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case primary
      case primary-reverse {
        leaf primary-reverse-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:primary-paths/te:primary-path/"
               + "te:name";
          }
          must '../tunnel-ref' {
            description
              "The primary-reverse-path name can only be reported
               if the tunnel name is also reported.";
          }
          description
            "
             Reference to the primary-reverse-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case primary-reverse
      case secondary {
        leaf secondary-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:secondary-paths/te:secondary-path/"
               + "te:name";
          }
          must '../tunnel-ref' {
            description
              "The secondary-path name can only be reported
               if the tunnel name is also reported.";
          }
          description
            "
             Reference to the secondary-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case secondary
      case secondary-reverse {
        leaf secondary-reverse-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:secondary-reverse-paths/"
               + "te:secondary-reverse-path/te:name";
          }
          must '../tunnel-ref' {
            description
              "The secondary-reverse-path name can only be reported
               if the tunnel name is also reported.";
          }
          description
            "
             Reference to the secondary-reverse-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case secondary
    } // choice path
  } // grouping reported-state

  grouping synchronization-constraints {
    description
      "Global constraints applicable to synchronized path
       computation requests.";
    container svec-constraints {
      description
        "global svec constraints";
      list path-metric-bound {
        key "metric-type";
        description
          "list of bound metrics";
        leaf metric-type {
          type identityref {
            base te-types:svec-metric-type;
          }
          description
            "SVEC metric type.";
          reference
            "RFC5541: Encoding of Objective Functions in the Path
            Computation Element Communication Protocol (PCEP).";
        }
        leaf upper-bound {
          type uint64;
          description
            "Upper bound on SVEC metric";
        }
      }
    }
    uses te-types:generic-path-srlgs;
    container exclude-objects {
      description
        "Resources to be excluded";
      list excludes {
        description
          "List of Explicit Route Objects to always exclude
           from synchronized path computation";
        uses te-types:explicit-route-hop;
      }
    }
  } // grouping synchronization-constraints

  grouping synchronization-optimization {
    description
      "Optimizations applicable to synchronized path
       computation requests.";
    container optimizations {
      description
        "The objective function container that includes attributes
         to impose when computing a synchronized set of paths";
      choice algorithm {
        description
          "Optimizations algorithm.";
        case metric {
          if-feature "te-types:path-optimization-metric";
          list optimization-metric {
            key "metric-type";
            description
              "svec path metric type";
            leaf metric-type {
              type identityref {
                base te-types:svec-metric-type;
              }
              description
                "TE path metric type usable for computing a set of
                synchronized requests";
            }
            leaf weight {
              type uint8;
              description
                "Metric normalization weight";
            }
          }
        }
        case objective-function {
          if-feature
            "te-types:path-optimization-objective-function";
          container objective-function {
            description
              "The objective function container that includes
               attributes to impose when computing a TE path";
            leaf objective-function-type {
              type identityref {
                base te-types:svec-objective-function-type;
              }
              description
                "Objective function entry";
            }
          }
        }
      }
    }
  } // grouping synchronization-optimization

  grouping synchronization-info {
    description
      "Information for synchronized path computation requests.";
    list synchronization {
      description
        "List of Synchronization VECtors.";
      container svec {
        description
          "Synchronization VECtor";
        leaf relaxable {
          type boolean;
          default "true";
          description
            "If this leaf is true, taking into account this svec is
             OPTIONAL and the path computation process is
             free to ignore svec content.
             Otherwise, it MUST take into account this svec.";
        }
        uses te-types:generic-path-disjointness;
        leaf-list request-id {
          type uint32;
          description
            "This list reports the set of path computation
             requests that are requested to be synchronized.";
        }
      }
      uses synchronization-constraints;
      uses synchronization-optimization;
    }
  } // grouping synchronization-info

  /*
   * Augment TE RPCs
   */

  augment "/te:tunnels-path-compute/te:input/te:path-compute-info" {
    description
      "Augments Path Computation RPC input";
    list path-request {
      key "request-id";
      description
        "The list of the requested paths to be computed";
      leaf request-id {
        type uint32;
        mandatory true;
        description
          "Each path computation request is uniquely identified
           within the RPC request by the request-id.";
      }
      leaf compute-priority {
        if-feature compute-priority;
        type uint8;
        default 0;
        description
          "The path computation request's priority (from 1 to 7) 
          which can be used to constraint the order by which the 
          path computation server processes the path computation 
          requests.

          A higher numerical value of the priority field reflects a 
          higher priority.

          It MUST be set to the default value (i.e., 0) when 
          unused.";
        reference
          "Section 7.4.1 of RFC5440: Path Computation Element (PCE) 
          Communication Protocol (PCEP).";
      }
      choice tunnel-attributes {
        default "value";
        description
          "Whether the tunnel attributes are specified by value
           within this path computation request or by reference.
           The reference could be either to an existing te-tunnel
           or to an entry in the tunnel-attributes list";
        case reference {
          container tunnel-reference {
            description
              "Attributes for a requested path that belongs to
              either an exiting te-tunnel or to an entry in the
              tunnel-attributes list.";
            choice tunnel-exist {
              mandatory true;
              description
                "Whether the tunnel reference is to an existing
                te-tunnel or to an entry in the tunnel-attributes
                list";
              case tunnel-ref {
                leaf tunnel-ref {
                  type te:tunnel-ref;
                  mandatory true;
                  description
                    "The referenced te-tunnel instance";
                }
              } // case tunnel-ref
              case tunnel-attributes-ref {
                leaf tunnel-attributes-ref {
                  type leafref {
                    path "/te:tunnels-path-compute/"
                      + "te:path-compute-info/"
                      + "te-pc:tunnel-attributes/te-pc:tunnel-name";
                  }
                  mandatory true;
                  description
                    "The referenced te-tunnel instance";
                }
              } // case tunnel-attributes-ref 
            } // choice tunnel-exist
            leaf path-name {
              type string;
              description
                "TE path name.";
            }
            choice path-role {
              mandatory true;
              description
                "Whether this path is a primary, or a reverse
                primary, or a secondary, or a reverse secondary
                path.";
              case primary-path {
                container primary-path {
                  presence "Indicates that the requested path
                            is a primary path";
                  description
                    "TE primary path";
                  uses te:path-forward-properties;
                  uses te:k-requested-paths;
                } // container primary-path
              } // case primary-path
              case secondary-path {
                container secondary-path {
                  description
                    "TE secondary path";
                  leaf secondary-reverse-path {
                    type leafref {
                      path "/te:tunnels-path-compute/"
                        + "te:path-compute-info/te-pc:path-request/"
                        + "te-pc:request-id";
                    }
                    description
                      "A reference to the reverse secondary path 
                      when co-routed with the secondary path.";
                  }
                  leaf preference {
                    type uint8 {
                      range "1..255";
                    }
                    default "1";
                    description
                      "Specifies a preference for this path. The 
                      lower the number higher the preference.";
                  }
                  uses protection-restoration-properties;
                  list primary-path-ref {
                    min-elements 1;
                    description
                      "The list of primary paths that reference
                      this path as a candidate secondary path";
                    choice primary-path-exist {
                      mandatory true;
                      description
                        "Whether the path reference is to an existing
                        te-tunnel path or to another path request";
                      case path-ref {
                        leaf primary-path-ref {
                          type leafref {
                            path "/te:te/te:tunnels/te:tunnel"
                              + "[te:name=current()/../../../"
                              + "tunnel-ref]/te:primary-paths/"
                              + "te:primary-path/te:name";
                          }
                          must '../../../tunnel-ref' {
                            description
                              "The primary-path can be referenced
                              if also the tunnel is referenced.";
                          }
                          mandatory true;
                          description
                            "The referenced primary path";
                        }
                      } // case path-ref
                      case path-request-ref {
                        leaf path-request-ref {
                          type leafref {
                            path "/te:tunnels-path-compute/"
                              + "te:path-compute-info/"
                              + "te-pc:path-request/"
                              + "te-pc:request-id";
                          }
                          mandatory true;
                          description
                            "The referenced primary path request";
                        }
                      } // case path-request-ref 
                    } // choice primary-path-exist
                  } // list primary-path-ref
                } // container secondary-path
              } // case secondary-path
              case primary-reverse-path {
                container primary-reverse-path {
                  description
                    "TE primary reverse path";
                  choice primary-path-exist {
                    mandatory true;
                    description
                      "Whether the path reference to the primary
                      paths for which this path is the reverse-path
                      is to an existing te-tunnel path or to
                      another path request.";
                    case path-ref {
                      leaf primary-path-ref {
                        type leafref {
                          path "/te:te/te:tunnels/te:tunnel[te:name"
                            + "=current()/../../tunnel-ref]/"
                            + "te:primary-paths/te:primary-path/"
                            + "te:name";
                        }
                        must '../../tunnel-ref' {
                          description
                            "The primary-path can be referenced
                            if also the tunnel is referenced.";
                        }
                        mandatory true;
                        description
                          "The referenced primary path";
                      }
                    } // case path-ref
                    case path-request-ref {
                      leaf path-request-ref {
                        type leafref {
                          path "/te:tunnels-path-compute/"
                            + "te:path-compute-info/"
                            + "te-pc:path-request/"
                            + "te-pc:request-id";
                        }
                        mandatory true;
                        description
                          "The referenced primary path request";
                      }
                    } // case path-request-ref 
                  } // choice primary-path-exist
                } // container primary-reverse-path
              } // case primary-reverse-path
              case secondary-reverse-path {
                container secondary-reverse-path {
                  description
                    "TE secondary reverse path";
                  // uses te:path-preference;
                  leaf preference {
                    type uint8 {
                      range "1..255";
                    }
                    default "1";
                    description
                      "Specifies a preference for this path. The 
                      lower the number higher the preference.";
                  }
                  uses protection-restoration-properties;
                  list primary-reverse-path {
                    min-elements 1;
                    description
                      "The list of primary reverse paths that
                      reference this path as a candidate
                      secondary reverse path";
                    choice primary-reverse-path-exist {
                      mandatory true;
                      description
                        "Whether the path reference is to an existing
                        te-tunnel path or to another path request";
                      case path-ref {
                        leaf primary-path-ref {
                          type leafref {
                            path "/te:te/te:tunnels/te:tunnel"
                              + "[te:name=current()/../../../"
                              + "tunnel-ref]/te:primary-paths/"
                              + "te:primary-path/te:name";
                          }
                          must '../../../tunnel-ref' {
                            description
                              "The primary-path can be referenced
                              if also the tunnel is referenced.";
                          }
                          mandatory true;
                          description
                            "The referenced primary path";
                        }
                      } // case path-ref
                      case path-request-ref {
                        leaf path-request-ref {
                          type leafref {
                            path "/te:tunnels-path-compute/"
                              + "te:path-compute-info/"
                              + "te-pc:path-request/"
                              + "te-pc:request-id";
                          }
                          mandatory true;
                          description
                            "The referenced primary reverse path
                            request";
                        }
                      } // case path-request-ref 
                    } // choice primary-reverse-path-exist
                  } // list primary-reverse-path-ref
                } // container secondary-reverse-path
              } // case secondary-reverse-path
            } // choice tunnel-path-role
          }
        } // case reference
        case value {
          leaf tunnel-name {
            type string;
            description
              "TE tunnel name.";
          }
          leaf path-name {
            type string;
            description
              "TE path name.";
          }
          choice path-role {
            when 'not (./source) and not (./destination)' {
              description
                "When the tunnel attributes are specified by value
                within this path computation, it is assumed that the
                requested path will be the only path of a tunnel.

                If the requested path is a transit segment path
                (i.e., the source and destination containers are 
                not present), it could be of any type. Otherwise it 
                could only be a primary path.";
            }
            default primary-path;
            description
              "Indicates whether the requested path is a primary
              path, a secondary path, a reverse primary path or a
              reverse secondary path.";
            case primary-path {
              description
                "The requested path is a primary path.";
            }
            container secondary-path {
              presence
                "Indicates that the requested path is a secondary
                path.";
              description
                "The name of the primary path which the requested
                secondary path belongs to.";
              leaf primary-path-name {
                type string;
                description
                  "TE primary path name.";
              }
            } // container secondary-path
            container primary-reverse-path {
              presence
                "Indicates that the requested path is a primary
                reverse path.";
              description
                "The name of the primary path which the requested
                primary reverse path belongs to.";
              leaf primary-path-name {
                type string;
                description
                  "TE primary path name.";
              }
            } // container primary-reverse-path
            container secondary-reverse-path {
              presence
                "Indicates that the requested path is a secondary
                reverse path.";
              description
                "The names of the primary path and of the primary
                reverse path which the requested secondary reverse
                path belongs to.";
              leaf primary-path-name {
                type string;
                description
                  "TE primary path name.";
              }
              leaf primary-reverse-path-name {
                type string;
                description
                  "TE primary reverse path name.";
              }
            } // container primary-reverse-path
          } // choice path-role
          uses te:k-requested-paths;
          uses te-types:encoding-and-switching-type;
          uses te:tunnel-common-attributes;
          uses te-types:te-topology-identifier;
        } // case value
      } // choice tunnel-attributes
      uses te:path-compute-info;
      uses requested-info;
      uses requested-state;
    }
    list tunnel-attributes {
      key "tunnel-name";
      description
        "Tunnel attributes common to multiple request paths";
      leaf tunnel-name {
        type string;
        description
          "TE tunnel name.";
      }
      uses te-types:encoding-and-switching-type;
      uses te:tunnel-common-attributes;
      uses te:tunnel-associations-properties;
      uses protection-restoration-properties;
      uses te-types:tunnel-constraints;
      uses te:tunnel-hierarchy-properties {
        augment "hierarchy/dependency-tunnels" {
          description
            "Augment with the list of dependency tunnel requests.";
          list dependency-tunnel-attributes {
            key "name";
            description
              "A tunnel request entry that this tunnel request can
               potentially depend on.";
            leaf name {
              type leafref {
                path "/te:tunnels-path-compute/"
                   + "te:path-compute-info/te-pc:tunnel-attributes/"
                   + "te-pc:tunnel-name";
              }
              description
                "Dependency tunnel request name.";
            }
            uses te-types:encoding-and-switching-type;
          }
        }
      }
    }
    uses synchronization-info {
      if-feature svec;
    }
  } // path-compute rpc input

  augment "/te:tunnels-path-compute/te:output/"
        + "te:path-compute-result" {
    description
      "Auguments Path Computation RPC output";
    list response {
      key "response-id";
      config false;
      description
        "response";
      leaf response-id {
        type uint32;
        description
          "The response-id has the same value of the
           corresponding request-id.";
      }
      uses te:path-computation-response;
      uses reported-state;
    }
  } // path-compute rpc output

  augment "/te:tunnels-actions/te:input/te:tunnel-info/"
        + "te:filter-type" {
    description
      "Augment Tunnels Action RPC input filter types";
    case path-compute-transactions {
      when "derived-from-or-self(../te:action-info/te:action, "
         + "'tunnel-action-path-compute-delete')";
      description
        "Path Delete RPC input";
      leaf-list path-compute-transaction-id {
        type string;
        description
          "The list of the transaction-id values of the
           transient states to be deleted";
      }
    }
  } // path-delete rpc input

  augment "/te:tunnels-actions/te:output" {
    description
      "Augment Tunnels Action RPC output with path delete result";
    container path-computed-delete-result {
      description
        "Path Delete RPC output";
      leaf-list path-compute-transaction-id {
        type string;
        description
          "The list of the transaction-id values of the
           transient states that have been successfully deleted";
      }
    }
  } // path-delete rpc output
}
]]></sourcecode></figure>

</section>
</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>This document describes use cases of requesting Path Computation
   using YANG data models, which could be used at the ABNO Control
   Interface <xref target="RFC7491"/> and/or between controllers in ACTN <xref target="RFC8453"/>. As
   such, it does not introduce any new security considerations compared
   to the ones related to YANG specification, ABNO specification and
   ACTN Framework defined in <xref target="RFC7950"/>, <xref target="RFC7491"/> and <xref target="RFC8453"/>.</t>

<t>The YANG module defined in this document is designed to be accessed via
   the NETCONF protocol <xref target="RFC6241"/> or RESTCONF protocol <xref target="RFC8040"/>. The
   lowest NETCONF layer is the secure transport layer, and the
   mandatory-to-implement secure transport is Secure Shell (SSH)
   <xref target="RFC6242"/>. The lowest RESTCONF layer is HTTPS, and the mandatory-to-
   implement secure transport is TLS <xref target="RFC8446"/>.</t>

<t>The Network Configuration Access Control Model (NACM) 
   <xref target="RFC8341"/> provides the means to
   restrict access for particular NETCONF or RESTCONF users to a
   preconfigured subset of all available NETCONF or RESTCONF protocol
   operations and content.</t>

<t>The YANG module defined in this document augments the "tunnels-path-compute" and the "tunnel-actions" RPCs defined in <xref target="I-D.ietf-teas-yang-te"/>. The security considerations provided in <xref target="I-D.ietf-teas-yang-te"/> are also applicable to the YANG module
   defined in this document.</t>

<t>The RPC defined in this document can also be used for Denial-of-service (DoS) attacks. The security considerations defines in section 10.7.2 of <xref target="RFC5440"/> also applies to the use of this RPC.</t>

<t>The definition of the input shaping/policing mechanisms and of their configuration is outside the scope of this document.</t>

<t>Some of the RPC operations defined in this YANG module may be considered
   sensitive or vulnerable in some network environments.  It is thus
   important to control access to these operations. These are the
   operations and their sensitivity/vulnerability:</t>

<t>"te-pc:response/computed-paths-properties": provides the same information provided by the "te:computed-paths-properties" defined in <xref target="I-D.ietf-teas-yang-te"/>. The security considerations provided in <xref target="I-D.ietf-teas-yang-te"/> for the TE tunnel state apply also to this subtree.</t>

<t>"te-pc:response/te-pc:tunnel-ref", "te-pc:response/te-pc:primary-path-ref", "te-pc:response/te-pc:primary-reverse-path-ref", "te-pc:response/te-pc:secondary-path-ref" and "te-pc:response/te-pc:secondary-reverse-path-ref" provides a reference where the same information provided in "te-pc:response/computed-paths-properties" is temporarly stored with the operational datastore (see <xref target="temp-state"/>). Therefore access to this information does not provide any additional security issue that the information provided with "te-pc:response/computed-paths-properties".</t>

<t>"/te:tunnels-actions": the YANG model defined in this document augments this action with a new action type that allows deleting the transient states of computed paths (see <xref target="temp-state"/>). A malicious use of this action would have no impact on the paths carrying live traffic but it would preclude the client from using the "transient states" to request the set-up of exactly that path, if still available.</t>

<t>The security considerations spelled out in the
   YANG specification <xref target="RFC7950"/> apply for this document as well.</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>This document registers the following URIs in the "ns" subregistry
   within the "IETF XML registry" <xref target="RFC3688"/>.</t>

<figure><artwork><![CDATA[
      URI: urn:ietf:params:xml:ns:yang:ietf-te-path-computation
      Registrant Contact:  The IESG.
      XML: N/A, the requested URI is an XML namespace.
]]></artwork></figure>

<t>This document registers a YANG module in the "YANG Module Names"
   registry <xref target="RFC7950"/>.</t>

<figure><artwork><![CDATA[
      name:      ietf-te-path-computation
      namespace: urn:ietf:params:xml:ns:yang:ietf-te-path-computation
      prefix:    te-pc
      reference: this document
]]></artwork></figure>

</section>


  </middle>

  <back>


<references title='References' anchor="sec-combined-references">

    <references title='Normative References' anchor="sec-normative-references">



<reference anchor="RFC6241">
  <front>
    <title>Network Configuration Protocol (NETCONF)</title>
    <author fullname="R. Enns" initials="R." role="editor" surname="Enns"/>
    <author fullname="M. Bjorklund" initials="M." role="editor" surname="Bjorklund"/>
    <author fullname="J. Schoenwaelder" initials="J." role="editor" surname="Schoenwaelder"/>
    <author fullname="A. Bierman" initials="A." role="editor" surname="Bierman"/>
    <date month="June" year="2011"/>
    <abstract>
      <t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices. It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages. The NETCONF protocol operations are realized as remote procedure calls (RPCs). This document obsoletes RFC 4741. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6241"/>
  <seriesInfo name="DOI" value="10.17487/RFC6241"/>
</reference>

<reference anchor="RFC8040">
  <front>
    <title>RESTCONF Protocol</title>
    <author fullname="A. Bierman" initials="A." surname="Bierman"/>
    <author fullname="M. Bjorklund" initials="M." surname="Bjorklund"/>
    <author fullname="K. Watsen" initials="K." surname="Watsen"/>
    <date month="January" year="2017"/>
    <abstract>
      <t>This document describes an HTTP-based protocol that provides a programmatic interface for accessing data defined in YANG, using the datastore concepts defined in the Network Configuration Protocol (NETCONF).</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8040"/>
  <seriesInfo name="DOI" value="10.17487/RFC8040"/>
</reference>

<reference anchor="RFC8795">
  <front>
    <title>YANG Data Model for Traffic Engineering (TE) Topologies</title>
    <author fullname="X. Liu" initials="X." surname="Liu"/>
    <author fullname="I. Bryskin" initials="I." surname="Bryskin"/>
    <author fullname="V. Beeram" initials="V." surname="Beeram"/>
    <author fullname="T. Saad" initials="T." surname="Saad"/>
    <author fullname="H. Shah" initials="H." surname="Shah"/>
    <author fullname="O. Gonzalez de Dios" initials="O." surname="Gonzalez de Dios"/>
    <date month="August" year="2020"/>
    <abstract>
      <t>This document defines a YANG data model for representing, retrieving, and manipulating Traffic Engineering (TE) Topologies. The model serves as a base model that other technology-specific TE topology models can augment.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8795"/>
  <seriesInfo name="DOI" value="10.17487/RFC8795"/>
</reference>


<reference anchor="I-D.ietf-teas-yang-te">
   <front>
      <title>A YANG Data Model for Traffic Engineering Tunnels, Label Switched Paths and Interfaces</title>
      <author fullname="Tarek Saad" initials="T." surname="Saad">
         <organization>Cisco Systems Inc</organization>
      </author>
      <author fullname="Rakesh Gandhi" initials="R." surname="Gandhi">
         <organization>Cisco Systems Inc</organization>
      </author>
      <author fullname="Xufeng Liu" initials="X." surname="Liu">
         <organization>Alef Edge</organization>
      </author>
      <author fullname="Vishnu Pavan Beeram" initials="V. P." surname="Beeram">
         <organization>Juniper Networks</organization>
      </author>
      <author fullname="Igor Bryskin" initials="I." surname="Bryskin">
         <organization>Individual</organization>
      </author>
      <date day="9" month="October" year="2024"/>
      <abstract>
	 <t>   This document defines a YANG data model for the provisioning and
   management of Traffic Engineering (TE) tunnels, Label Switched Paths
   (LSPs), and interfaces.  The model covers data that is independent of
   any technology or dataplane encapsulation and is divided into two
   YANG modules that cover device-specific, and device independent data.

   This model covers data for configuration, operational state, remote
   procedural calls, and event notifications.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-teas-yang-te-37"/>
   
</reference>

<reference anchor="RFC7950">
  <front>
    <title>The YANG 1.1 Data Modeling Language</title>
    <author fullname="M. Bjorklund" initials="M." role="editor" surname="Bjorklund"/>
    <date month="August" year="2016"/>
    <abstract>
      <t>YANG is a data modeling language used to model configuration data, state data, Remote Procedure Calls, and notifications for network management protocols. This document describes the syntax and semantics of version 1.1 of the YANG language. YANG version 1.1 is a maintenance release of the YANG language, addressing ambiguities and defects in the original specification. There are a small number of backward incompatibilities from YANG version 1. This document also specifies the YANG mappings to the Network Configuration Protocol (NETCONF).</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7950"/>
  <seriesInfo name="DOI" value="10.17487/RFC7950"/>
</reference>

<reference anchor="RFC5440">
  <front>
    <title>Path Computation Element (PCE) Communication Protocol (PCEP)</title>
    <author fullname="JP. Vasseur" initials="JP." role="editor" surname="Vasseur"/>
    <author fullname="JL. Le Roux" initials="JL." role="editor" surname="Le Roux"/>
    <date month="March" year="2009"/>
    <abstract>
      <t>This document specifies the Path Computation Element (PCE) Communication Protocol (PCEP) for communications between a Path Computation Client (PCC) and a PCE, or between two PCEs. Such interactions include path computation requests and path computation replies as well as notifications of specific states related to the use of a PCE in the context of Multiprotocol Label Switching (MPLS) and Generalized MPLS (GMPLS) Traffic Engineering. PCEP is designed to be flexible and extensible so as to easily allow for the addition of further messages and objects, should further requirements be expressed in the future. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="5440"/>
  <seriesInfo name="DOI" value="10.17487/RFC5440"/>
</reference>

<reference anchor="RFC2119">
  <front>
    <title>Key words for use in RFCs to Indicate Requirement Levels</title>
    <author fullname="S. Bradner" initials="S." surname="Bradner"/>
    <date month="March" year="1997"/>
    <abstract>
      <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="2119"/>
  <seriesInfo name="DOI" value="10.17487/RFC2119"/>
</reference>

<reference anchor="RFC8174">
  <front>
    <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
    <author fullname="B. Leiba" initials="B." surname="Leiba"/>
    <date month="May" year="2017"/>
    <abstract>
      <t>RFC 2119 specifies common key words that may be used in protocol specifications. This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="8174"/>
  <seriesInfo name="DOI" value="10.17487/RFC8174"/>
</reference>

<reference anchor="RFC7926">
  <front>
    <title>Problem Statement and Architecture for Information Exchange between Interconnected Traffic-Engineered Networks</title>
    <author fullname="A. Farrel" initials="A." role="editor" surname="Farrel"/>
    <author fullname="J. Drake" initials="J." surname="Drake"/>
    <author fullname="N. Bitar" initials="N." surname="Bitar"/>
    <author fullname="G. Swallow" initials="G." surname="Swallow"/>
    <author fullname="D. Ceccarelli" initials="D." surname="Ceccarelli"/>
    <author fullname="X. Zhang" initials="X." surname="Zhang"/>
    <date month="July" year="2016"/>
    <abstract>
      <t>In Traffic-Engineered (TE) systems, it is sometimes desirable to establish an end-to-end TE path with a set of constraints (such as bandwidth) across one or more networks from a source to a destination. TE information is the data relating to nodes and TE links that is used in the process of selecting a TE path. TE information is usually only available within a network. We call such a zone of visibility of TE information a domain. An example of a domain may be an IGP area or an Autonomous System.</t>
      <t>In order to determine the potential to establish a TE path through a series of connected networks, it is necessary to have available a certain amount of TE information about each network. This need not be the full set of TE information available within each network but does need to express the potential of providing TE connectivity. This subset of TE information is called TE reachability information.</t>
      <t>This document sets out the problem statement for the exchange of TE information between interconnected TE networks in support of end-to-end TE path establishment and describes the best current practice architecture to meet this problem statement. For reasons that are explained in this document, this work is limited to simple TE constraints and information that determine TE reachability.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="206"/>
  <seriesInfo name="RFC" value="7926"/>
  <seriesInfo name="DOI" value="10.17487/RFC7926"/>
</reference>

<reference anchor="RFC8340">
  <front>
    <title>YANG Tree Diagrams</title>
    <author fullname="M. Bjorklund" initials="M." surname="Bjorklund"/>
    <author fullname="L. Berger" initials="L." role="editor" surname="Berger"/>
    <date month="March" year="2018"/>
    <abstract>
      <t>This document captures the current syntax used in YANG module tree diagrams. The purpose of this document is to provide a single location for this definition. This syntax may be updated from time to time based on the evolution of the YANG language.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="215"/>
  <seriesInfo name="RFC" value="8340"/>
  <seriesInfo name="DOI" value="10.17487/RFC8340"/>
</reference>


<reference anchor="I-D.ietf-teas-rfc8776-update">
   <front>
      <title>Common YANG Data Types for Traffic Engineering</title>
      <author fullname="Italo Busi" initials="I." surname="Busi">
         <organization>Huawei</organization>
      </author>
      <author fullname="Aihua Guo" initials="A." surname="Guo">
         <organization>Futurewei Technologies</organization>
      </author>
      <author fullname="Xufeng Liu" initials="X." surname="Liu">
         <organization>Alef Edge</organization>
      </author>
      <author fullname="Tarek Saad" initials="T." surname="Saad">
         <organization>Cisco Systems Inc.</organization>
      </author>
      <author fullname="Igor Bryskin" initials="I." surname="Bryskin">
         <organization>Individual</organization>
      </author>
      <date day="24" month="January" year="2025"/>
      <abstract>
	 <t>   This document defines a collection of common data types, identities,
   and groupings in YANG data modeling language.  These derived common
   data types, identities and groupings are intended to be imported by
   other modules, e.g., those which model the Traffic Engineering (TE)
   configuration and state capabilities.

   This document obsoletes RFC 8776.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-teas-rfc8776-update-16"/>
   
</reference>

<reference anchor="RFC5441">
  <front>
    <title>A Backward-Recursive PCE-Based Computation (BRPC) Procedure to Compute Shortest Constrained Inter-Domain Traffic Engineering Label Switched Paths</title>
    <author fullname="JP. Vasseur" initials="JP." role="editor" surname="Vasseur"/>
    <author fullname="R. Zhang" initials="R." surname="Zhang"/>
    <author fullname="N. Bitar" initials="N." surname="Bitar"/>
    <author fullname="JL. Le Roux" initials="JL." surname="Le Roux"/>
    <date month="April" year="2009"/>
    <abstract>
      <t>The ability to compute shortest constrained Traffic Engineering Label Switched Paths (TE LSPs) in Multiprotocol Label Switching (MPLS) and Generalized MPLS (GMPLS) networks across multiple domains has been identified as a key requirement. In this context, a domain is a collection of network elements within a common sphere of address management or path computational responsibility such as an IGP area or an Autonomous Systems. This document specifies a procedure relying on the use of multiple Path Computation Elements (PCEs) to compute such inter-domain shortest constrained paths across a predetermined sequence of domains, using a backward-recursive path computation technique. This technique preserves confidentiality across domains, which is sometimes required when domains are managed by different service providers. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="5441"/>
  <seriesInfo name="DOI" value="10.17487/RFC5441"/>
</reference>

<reference anchor="RFC5541">
  <front>
    <title>Encoding of Objective Functions in the Path Computation Element Communication Protocol (PCEP)</title>
    <author fullname="JL. Le Roux" initials="JL." surname="Le Roux"/>
    <author fullname="JP. Vasseur" initials="JP." surname="Vasseur"/>
    <author fullname="Y. Lee" initials="Y." surname="Lee"/>
    <date month="June" year="2009"/>
    <abstract>
      <t>The computation of one or a set of Traffic Engineering Label Switched Paths (TE LSPs) in MultiProtocol Label Switching (MPLS) and Generalized MPLS (GMPLS) networks is subject to a set of one or more specific optimization criteria, referred to as objective functions (e.g., minimum cost path, widest path, etc.).</t>
      <t>In the Path Computation Element (PCE) architecture, a Path Computation Client (PCC) may want a path to be computed for one or more TE LSPs according to a specific objective function. Thus, the PCC needs to instruct the PCE to use the correct objective function. Furthermore, it is possible that not all PCEs support the same set of objective functions; therefore, it is useful for the PCC to be able to automatically discover the set of objective functions supported by each PCE.</t>
      <t>This document defines extensions to the PCE communication Protocol (PCEP) to allow a PCE to indicate the set of objective functions it supports. Extensions are also defined so that a PCC can indicate in a path computation request the required objective function, and a PCE can report in a path computation reply the objective function that was used for path computation.</t>
      <t>This document defines objective function code types for six objective functions previously listed in the PCE requirements work, and provides the definition of four new metric types that apply to a set of synchronized requests. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="5541"/>
  <seriesInfo name="DOI" value="10.17487/RFC5541"/>
</reference>

<reference anchor="RFC6242">
  <front>
    <title>Using the NETCONF Protocol over Secure Shell (SSH)</title>
    <author fullname="M. Wasserman" initials="M." surname="Wasserman"/>
    <date month="June" year="2011"/>
    <abstract>
      <t>This document describes a method for invoking and running the Network Configuration Protocol (NETCONF) within a Secure Shell (SSH) session as an SSH subsystem. This document obsoletes RFC 4742. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6242"/>
  <seriesInfo name="DOI" value="10.17487/RFC6242"/>
</reference>

<reference anchor="RFC8446">
  <front>
    <title>The Transport Layer Security (TLS) Protocol Version 1.3</title>
    <author fullname="E. Rescorla" initials="E." surname="Rescorla"/>
    <date month="August" year="2018"/>
    <abstract>
      <t>This document specifies version 1.3 of the Transport Layer Security (TLS) protocol. TLS allows client/server applications to communicate over the Internet in a way that is designed to prevent eavesdropping, tampering, and message forgery.</t>
      <t>This document updates RFCs 5705 and 6066, and obsoletes RFCs 5077, 5246, and 6961. This document also specifies new requirements for TLS 1.2 implementations.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8446"/>
  <seriesInfo name="DOI" value="10.17487/RFC8446"/>
</reference>

<reference anchor="RFC8341">
  <front>
    <title>Network Configuration Access Control Model</title>
    <author fullname="A. Bierman" initials="A." surname="Bierman"/>
    <author fullname="M. Bjorklund" initials="M." surname="Bjorklund"/>
    <date month="March" year="2018"/>
    <abstract>
      <t>The standardization of network configuration interfaces for use with the Network Configuration Protocol (NETCONF) or the RESTCONF protocol requires a structured and secure operating environment that promotes human usability and multi-vendor interoperability. There is a need for standard mechanisms to restrict NETCONF or RESTCONF protocol access for particular users to a preconfigured subset of all available NETCONF or RESTCONF protocol operations and content. This document defines such an access control model.</t>
      <t>This document obsoletes RFC 6536.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="91"/>
  <seriesInfo name="RFC" value="8341"/>
  <seriesInfo name="DOI" value="10.17487/RFC8341"/>
</reference>

<reference anchor="RFC3688">
  <front>
    <title>The IETF XML Registry</title>
    <author fullname="M. Mealling" initials="M." surname="Mealling"/>
    <date month="January" year="2004"/>
    <abstract>
      <t>This document describes an IANA maintained registry for IETF standards which use Extensible Markup Language (XML) related items such as Namespaces, Document Type Declarations (DTDs), Schemas, and Resource Description Framework (RDF) Schemas.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="81"/>
  <seriesInfo name="RFC" value="3688"/>
  <seriesInfo name="DOI" value="10.17487/RFC3688"/>
</reference>




    </references>

    <references title='Informative References' anchor="sec-informative-references">



<reference anchor="RFC7491">
  <front>
    <title>A PCE-Based Architecture for Application-Based Network Operations</title>
    <author fullname="D. King" initials="D." surname="King"/>
    <author fullname="A. Farrel" initials="A." surname="Farrel"/>
    <date month="March" year="2015"/>
    <abstract>
      <t>Services such as content distribution, distributed databases, or inter-data center connectivity place a set of new requirements on the operation of networks. They need on-demand and application-specific reservation of network connectivity, reliability, and resources (such as bandwidth) in a variety of network applications (such as point-to-point connectivity, network virtualization, or mobile back-haul) and in a range of network technologies from packet (IP/MPLS) down to optical. An environment that operates to meet these types of requirements is said to have Application-Based Network Operations (ABNO). ABNO brings together many existing technologies and may be seen as the use of a toolbox of existing components enhanced with a few new elements.</t>
      <t>This document describes an architecture and framework for ABNO, showing how these components fit together. It provides a cookbook of existing technologies to satisfy the architecture and meet the needs of the applications.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7491"/>
  <seriesInfo name="DOI" value="10.17487/RFC7491"/>
</reference>

<reference anchor="RFC8453">
  <front>
    <title>Framework for Abstraction and Control of TE Networks (ACTN)</title>
    <author fullname="D. Ceccarelli" initials="D." role="editor" surname="Ceccarelli"/>
    <author fullname="Y. Lee" initials="Y." role="editor" surname="Lee"/>
    <date month="August" year="2018"/>
    <abstract>
      <t>Traffic Engineered (TE) networks have a variety of mechanisms to facilitate the separation of the data plane and control plane. They also have a range of management and provisioning protocols to configure and activate network resources. These mechanisms represent key technologies for enabling flexible and dynamic networking. The term "Traffic Engineered network" refers to a network that uses any connection-oriented technology under the control of a distributed or centralized control plane to support dynamic provisioning of end-to- end connectivity.</t>
      <t>Abstraction of network resources is a technique that can be applied to a single network domain or across multiple domains to create a single virtualized network that is under the control of a network operator or the customer of the operator that actually owns the network resources.</t>
      <t>This document provides a framework for Abstraction and Control of TE Networks (ACTN) to support virtual network services and connectivity services.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8453"/>
  <seriesInfo name="DOI" value="10.17487/RFC8453"/>
</reference>

<reference anchor="RFC8454">
  <front>
    <title>Information Model for Abstraction and Control of TE Networks (ACTN)</title>
    <author fullname="Y. Lee" initials="Y." surname="Lee"/>
    <author fullname="S. Belotti" initials="S." surname="Belotti"/>
    <author fullname="D. Dhody" initials="D." surname="Dhody"/>
    <author fullname="D. Ceccarelli" initials="D." surname="Ceccarelli"/>
    <author fullname="B. Yoon" initials="B." surname="Yoon"/>
    <date month="September" year="2018"/>
    <abstract>
      <t>This document provides an information model for Abstraction and Control of TE Networks (ACTN).</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8454"/>
  <seriesInfo name="DOI" value="10.17487/RFC8454"/>
</reference>


<reference anchor="I-D.ietf-ccamp-otn-topo-yang">
   <front>
      <title>A YANG Data Model for Optical Transport Network Topology</title>
      <author fullname="Haomian Zheng" initials="H." surname="Zheng">
         <organization>Huawei Technologies</organization>
      </author>
      <author fullname="Italo Busi" initials="I." surname="Busi">
         <organization>Huawei Technologies</organization>
      </author>
      <author fullname="Xufeng Liu" initials="X." surname="Liu">
         <organization>Alef Edge</organization>
      </author>
      <author fullname="Sergio Belotti" initials="S." surname="Belotti">
         <organization>Nokia</organization>
      </author>
      <author fullname="Oscar Gonzalez de Dios" initials="O. G." surname="de Dios">
         <organization>Telefonica</organization>
      </author>
      <date day="7" month="November" year="2024"/>
      <abstract>
	 <t>   This document defines a YANG data model for representing, retrieving,
   and manipulating Optical Transport Network (OTN) topologies.  It is
   independent of control plane protocols and captures topological and
   resource-related information pertaining to OTN.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-ccamp-otn-topo-yang-20"/>
   
</reference>

<reference anchor="RFC4655">
  <front>
    <title>A Path Computation Element (PCE)-Based Architecture</title>
    <author fullname="A. Farrel" initials="A." surname="Farrel"/>
    <author fullname="J.-P. Vasseur" initials="J.-P." surname="Vasseur"/>
    <author fullname="J. Ash" initials="J." surname="Ash"/>
    <date month="August" year="2006"/>
    <abstract>
      <t>Constraint-based path computation is a fundamental building block for traffic engineering systems such as Multiprotocol Label Switching (MPLS) and Generalized Multiprotocol Label Switching (GMPLS) networks. Path computation in large, multi-domain, multi-region, or multi-layer networks is complex and may require special computational components and cooperation between the different network domains.</t>
      <t>This document specifies the architecture for a Path Computation Element (PCE)-based model to address this problem space. This document does not attempt to provide a detailed description of all the architectural components, but rather it describes a set of building blocks for the PCE architecture from which solutions may be constructed. This memo provides information for the Internet community.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="4655"/>
  <seriesInfo name="DOI" value="10.17487/RFC4655"/>
</reference>

<reference anchor="RFC8342">
  <front>
    <title>Network Management Datastore Architecture (NMDA)</title>
    <author fullname="M. Bjorklund" initials="M." surname="Bjorklund"/>
    <author fullname="J. Schoenwaelder" initials="J." surname="Schoenwaelder"/>
    <author fullname="P. Shafer" initials="P." surname="Shafer"/>
    <author fullname="K. Watsen" initials="K." surname="Watsen"/>
    <author fullname="R. Wilton" initials="R." surname="Wilton"/>
    <date month="March" year="2018"/>
    <abstract>
      <t>Datastores are a fundamental concept binding the data models written in the YANG data modeling language to network management protocols such as the Network Configuration Protocol (NETCONF) and RESTCONF. This document defines an architectural framework for datastores based on the experience gained with the initial simpler model, addressing requirements that were not well supported in the initial model. This document updates RFC 7950.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8342"/>
  <seriesInfo name="DOI" value="10.17487/RFC8342"/>
</reference>

<reference anchor="RFC6805">
  <front>
    <title>The Application of the Path Computation Element Architecture to the Determination of a Sequence of Domains in MPLS and GMPLS</title>
    <author fullname="D. King" initials="D." role="editor" surname="King"/>
    <author fullname="A. Farrel" initials="A." role="editor" surname="Farrel"/>
    <date month="November" year="2012"/>
    <abstract>
      <t>Computing optimum routes for Label Switched Paths (LSPs) across multiple domains in MPLS Traffic Engineering (MPLS-TE) and GMPLS networks presents a problem because no single point of path computation is aware of all of the links and resources in each domain. A solution may be achieved using the Path Computation Element (PCE) architecture.</t>
      <t>Where the sequence of domains is known a priori, various techniques can be employed to derive an optimum path. If the domains are simply connected, or if the preferred points of interconnection are also known, the Per-Domain Path Computation technique can be used. Where there are multiple connections between domains and there is no preference for the choice of points of interconnection, the Backward-Recursive PCE-based Computation (BRPC) procedure can be used to derive an optimal path.</t>
      <t>This document examines techniques to establish the optimum path when the sequence of domains is not known in advance. The document shows how the PCE architecture can be extended to allow the optimum sequence of domains to be selected, and the optimum end-to-end path to be derived through the use of a hierarchical relationship between domains. This document is not an Internet Standards Track specification; it is published for informational purposes.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6805"/>
  <seriesInfo name="DOI" value="10.17487/RFC6805"/>
</reference>

<reference anchor="RFC7446">
  <front>
    <title>Routing and Wavelength Assignment Information Model for Wavelength Switched Optical Networks</title>
    <author fullname="Y. Lee" initials="Y." role="editor" surname="Lee"/>
    <author fullname="G. Bernstein" initials="G." role="editor" surname="Bernstein"/>
    <author fullname="D. Li" initials="D." surname="Li"/>
    <author fullname="W. Imajuku" initials="W." surname="Imajuku"/>
    <date month="February" year="2015"/>
    <abstract>
      <t>This document provides a model of information needed by the Routing and Wavelength Assignment (RWA) process in Wavelength Switched Optical Networks (WSONs). The purpose of the information described in this model is to facilitate constrained optical path computation in WSONs. This model takes into account compatibility constraints between WSON signal attributes and network elements but does not include constraints due to optical impairments. Aspects of this information that may be of use to other technologies utilizing a GMPLS control plane are discussed.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7446"/>
  <seriesInfo name="DOI" value="10.17487/RFC7446"/>
</reference>




    </references>

</references>


<?line 3533?>

<section anchor="examples"><name>Examples</name>

<t>This section contains examples of use of the model with RESTCONF
<xref target="RFC8040"/> and JSON encoding.</t>

<t>These examples show how path computation can be requested for the tunnels configuration provided in Appendix A of <xref target="I-D.ietf-teas-yang-te"/>.</t>

<section anchor="basic-example"><name>Basic Path Computation</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 12.1 of of <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>In this case, the TE Tunnel has only one primary path with no specific constraints.</t>

<figure><artwork type="ascii-art"><![CDATA[
POST /restconf/operations/ietf-te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="basic.json"><![CDATA[
{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 1,
          "tunnel-name": "Example_LSP_Tunnel_A_2",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "192.0.2.1",
          "destination": "192.0.2.4",
          "bidirectional": "false",
          "signaling-type": "te-types:path-setup-rsvp"
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="transient-state-example"><name>Path Computation with transient state</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 12.1 of of <xref target="I-D.ietf-teas-yang-te"/> requesting some transient state to be reported within the operational datastore, as described <xref target="temp-state"/>.</t>

<t>In this case, the TE Tunnel has only one primary path with no specific constraints.</t>

<figure><artwork type="ascii-art"><![CDATA[
POST /restconf/operations/ietf-te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="transient-state.json"><![CDATA[
{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 2,
          "tunnel-name": "Example_LSP_Tunnel_A_2",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "192.0.2.1",
          "destination": "192.0.2.4",
          "bidirectional": "false",
          "signaling-type": "te-types:path-setup-rsvp",
          "requested-state": {
            "transaction-id": "example"
          }
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="global-path-constraint-example"><name>Path Computation with Global Path Constraint</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 12.3 of of <xref target="I-D.ietf-teas-yang-te"/>. The 'named path constraint' is created in section 12.2 of <xref target="I-D.ietf-teas-yang-te"/> applies to this path computation request.</t>

<figure><artwork type="ascii-art"><![CDATA[
POST /restconf/operations/ietf-te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="global-path-constraint.json"><![CDATA[
{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 3,
          "tunnel-name": "Example_LSP_Tunnel_A_4_1",
          "path-name": "Simple_LSP_1",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "192.0.2.1",
          "destination": "192.0.2.4",
          "bidirectional": "false",
          "signaling-type": "path-setup-rsvp",
          "named-path-constraint": "max-hop-3",
          "requested-state": {}
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="tunnel-path-constraint-example"><name>Path Computation with Per-tunnel Path Constraint</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 12.4 of of <xref target="I-D.ietf-teas-yang-te"/>, using a per tunnel path constraint.</t>

<figure><artwork type="ascii-art"><![CDATA[
POST /restconf/operations/ietf-te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="tunnel-path-constraint.json"><![CDATA[
{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 4,
          "tunnel-name": "Example_LSP_Tunnel_A_4_2",
          "path-name": "path1",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "192.0.2.1",
          "destination": "192.0.2.4",
          "bidirectional": "false",
          "signaling-type": "te-types:path-setup-rsvp",
          "path-metric-bounds": {
            "path-metric-bound": [
              {
                "metric-type": "te-types:path-metric-hop",
                "upper-bound": "3"
              }
            ]
          }
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="path-computation-result"><name>Path Computation result</name>

<t>This example reports the output of the path computation RPC request described in <xref target="tunnel-path-constraint-example"/>.</t>

<figure><artwork type="ascii-art"><![CDATA[
HTTP/1.1 200 OK
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="computed-path.json"><![CDATA[
{
  "ietf-te:output": {
    "path-compute-result": {
      "ietf-te-path-computation:response": [
        {
          "response-id": 3,
          "computed-paths-properties": {
            "computed-path-properties": [
              {
                "k-index": "1",
                "path-properties": {
                  "path-route-objects": {
                    "path-route-object": [
                      {
                        "index": "1",
                        "numbered-node-hop": {
                          "node-id": "192.0.2.2"
                        }
                      },
                      {
                        "index": "2",
                        "numbered-node-hop": {
                          "node-id": "192.0.2.4"
                        }
                      }
                    ]
                  }
                }
              }
            ]
          },
          "tunnel-ref": "Example_LSP_Tunnel_A_4_1",
          "primary-path-ref": "path1"
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="path-computation-with-primary-and-secondary-paths"><name>Path Computation with Primary and Secondary Paths</name>

<t>This section contains examples of use of the model to compute primary and secondary paths described in section 12.6 of <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>These examples consider the cases where:
- primary and reverse paths are unidirectional and not co-routed (example-1);
- primary and reverse paths are bidirectional (example-3);
- primary and reverse paths are unidirectional and co-routed (example-4).</t>

<figure><artwork type="ascii-art"><![CDATA[
POST /restconf/operations/ietf-te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>

<figure><sourcecode type="json" markers="false" name="primary-secondary-paths.json"><![CDATA[
{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 1,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "primary-1 (fwd)",
            "primary-path": {}
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 2,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "primary-2 (rev)",
            "primary-reverse-path": {
              "primary-path-request-ref": 1
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.3",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 3,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-1 (fwd)",
            "secondary-path": {
              "primary-path": [
                {
                  "path-request-ref": 1
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.1"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 4,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-2 (fwd)",
            "secondary-path": {
              "primary-path": [
                {
                  "path-request-ref": 1
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.5",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 5,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-3 (rev)",
            "secondary-reverse-path": {
              "primary-reverse-path": [
                {
                  "path-request-ref": 2
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.5"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.4",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 6,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-4 (rev)",
            "secondary-reverse-path": {
              "primary-reverse-path": [
                {
                  "path-request-ref": 2
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.4"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.3",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 7,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-5 (rev)",
            "secondary-reverse-path": {
              "primary-reverse-path": [
                {
                  "path-request-ref": 2
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.3"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.1",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 8,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-3",
            "path-name": "primary-1 (bidir)",
            "primary-path": {}
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 9,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-3",
            "path-name": "secondary-1 (bidir)",
            "secondary-path": {
              "primary-path": [
                {
                  "path-request-ref": 8
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.1"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 10,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-3",
            "path-name": "secondary-2 (bidir)",
            "secondary-path": {
              "primary-path": [
                {
                  "path-request-ref": 8
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.5",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 11,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-4",
            "path-name": "primary-1 (fwd)",
            "primary-path": {
              "co-routed": [null]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 12,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-4",
            "path-name": "primary-2 (rev)",
            "primary-reverse-path": {
              "primary-path-request-ref": 11
            }
          }
        },
        {
          "request-id": 13,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-4",
            "path-name": "secondary-1 (fwd)",
            "secondary-path": {
              "primary-path": [
                {
                  "co-routed": [null],
                  "path-request-ref": 11
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.1"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 14,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-4",
            "path-name": "secondary-2 (fwd)",
            "secondary-path": {
              "primary-path": [
                {
                  "co-routed": [null],
                  "path-request-ref": 11
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.5",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 15,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-3 (rev)",
            "secondary-reverse-path": {
              "primary-reverse-path": [
                {
                  "path-request-ref": 12
                }
              ]
            }
          }
        },
        {
          "request-id": 16,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-4 (rev)",
            "secondary-reverse-path": {
              "primary-reverse-path": [
                {
                  "path-request-ref": 12
                }
              ]
            }
          }
        }
      ],
      "ietf-te-path-computation:tunnel-attributes": [
        {
          "tunnel-name": "example-1",
          "source": "192.0.2.1",
          "destination": "192.0.2.5",
          "bidirectional": "false"
        },
        {
          "tunnel-name": "example-3",
          "source": "192.0.2.1",
          "destination": "192.0.2.5",
          "bidirectional": "true"
        },
        {
          "tunnel-name": "example-4",
          "source": "192.0.2.1",
          "destination": "192.0.2.5",
          "bidirectional": "false"
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
</section>
<section numbered="false" anchor="acknowledgments"><name>Acknowledgments</name>

<t>The authors would like to thank Karthik Sethuraman, Igor Bryskin and Xian Zhang for
participating in the initial discussions that have triggered this
work and providing valuable insights.</t>

<t>The authors would like to thank the authors of the TE tunnel YANG
data model <xref target="I-D.ietf-teas-yang-te"/>, in particular Igor Bryskin, Vishnu Pavan
Beeram, Tarek Saad and Xufeng Liu, for their inputs to the
discussions and support in having consistency between the Path
Computation and TE tunnel YANG data models.</t>

<t>The authors would like to thank Adrian Farrel, Dhruv Dhody, Igor
Bryskin, Julien Meuric and Lou Berger for their valuable input to the
discussions that has clarified that the path being set up is not
necessarily the same as the path that has been previously computed
and, in particular to Dhruv Dhody, for his suggestion to describe the
need for a path verification phase to check that the actual path
being set up meets the required end-to-end metrics and constraints.</t>

<t>The authors would like to thank Aihua Guo, Lou Berger, Shaolong Gan,
Martin Bjorklund and Tom Petch for their useful comments on how to
define XPath statements in YANG RPCs.</t>

<t>The authors would like to thank Haomian Zheng, Yanlei Zheng, Tom
Petch, Aihua Guo and Martin Bjorklund for their review and valuable
comments to this document.</t>

<t>Previous versions of document were prepared using 2-Word-v2.0.template.dot.</t>

<t>This document was prepared using kramdown.</t>

</section>

    <section anchor="contributors" numbered="false" toc="include" removeInRFC="false">
        <name>Contributors</name>
    <contact initials="D." surname="Ceccarelli" fullname="Daniele Ceccarelli">
      <organization>Cisco</organization>
      <address>
        <email>daniele.ietf@gmail.com</email>
      </address>
    </contact>
    <contact initials="V." surname="Lopez" fullname="Victor Lopez">
      <organization>Nokia</organization>
      <address>
        <email>victor.lopez@nokia.com</email>
      </address>
    </contact>
    <contact initials="R." surname="Vilalta" fullname="Ricard Vilalta">
      <organization>CTTC</organization>
      <address>
        <email>ricard.vilalta@cttc.es</email>
      </address>
    </contact>
    <contact initials="M." surname="Scharf" fullname="Michael Scharf">
      <organization>Nokia</organization>
      <address>
        <email>michael.scharf@gmail.com</email>
      </address>
    </contact>
    <contact initials="D." surname="Beller" fullname="Dieter Beller">
      <organization>Nokia</organization>
      <address>
        <email>dieter.beller@nokia.com</email>
      </address>
    </contact>
    <contact initials="G." surname="Bruno" fullname="Gianmarco Bruno">
      <organization>Ericsson</organization>
      <address>
        <email>gianmarco.bruno@ericsson.com</email>
      </address>
    </contact>
    <contact initials="F." surname="Lazzeri" fullname="Francesco Lazzeri">
      <organization>Retired</organization>
      <address>
      </address>
    </contact>
    <contact initials="Y." surname="Lee" fullname="Young Lee">
      <organization>Samsung Electronics</organization>
      <address>
        <email>younglee.tx@gmail.com</email>
      </address>
    </contact>
    <contact initials="C." surname="Perocchio" fullname="Carlo Perocchio">
      <organization>Ericsson</organization>
      <address>
        <email>carlo.perocchio@ericsson.com</email>
      </address>
    </contact>
    <contact initials="O." surname="Dugeon" fullname="Olivier Dugeon">
      <organization>Orange Labs</organization>
      <address>
        <email>olivier.dugeon@orange.com</email>
      </address>
    </contact>
    <contact initials="J." surname="Meuric" fullname="Julien Meuric">
      <organization>Orange Labs</organization>
      <address>
        <email>julien.meuric@orange.com</email>
      </address>
    </contact>
    </section>

  </back>

<!-- ##markdown-source:
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
s3GlRmfpiwA9W9gR6KHOTdBid9K8AD6mJIQVCiaEK00glfU6BjCc+hJZN4ix
J7njJZnoh6R4hfH16kJ6+JI/iSo0kgeFR+Sz2vJyR+Tol/wd2sFIi2JanZ+7
+n20QuZ9RneJ5JV+uJv9fBFJ3U7HwfaLsNc92wVFPGV0zRnJEndkXqN+fjNh
KbLYyLMNhVjUZxVgprAKlFnkMErD0GWxIA2DWjSrCmguNEq4x3h6oyjmDKUG
bVNhqKh3fdI/C1Ji+Pynhlzd0iV4yBtnVeFDOzzPubgWAdrhLBSU9UbZUbAu
dfnjjkmcZHe5zX4uXOO8iE59g/ngqp1e5viS7VXZvKVo/eybutqsQcU+ffXd
N5IZhRR+ozegXlrOG5cbiTQZwLxG4UPmMv/ZLSnZl1lkYIYkjggQ2pag07/L
l3I5Gh47pHw1l8ZDogcyopc9h1r8RtbV15jCpMZ0YTZcu3biMa7IG/Nqknkm
ndaYHURv4+8SI0VLXcSs05VM7HVPIVe68GRV2z31jAoAI3EGkvKyusIe8uCl
Il5dmHdfOn+9VgvslUKnekJMX8vQzlWVc/3RrCxKUtks8LfVNRr4E5bx6Fdz
Fx/5FSfkPw/nYk51dQs8zMxejhc6CfAgIC3E+cZBjiDPCgX4GJjfGC+3Oy12
QEveiTII7YOr8uKSHgKjqqNSM8f0aadv7dmXBerQcveHyGt83uFShQHaK/YP
2M3SlFcwDun/0UzgFLFtSKeyJ9vblhdrXWRCpfWWdN4PaQKsMmk3JOjKLfp9
xO3v5nsG/a7LhVxV47vivb9u5YFk2vpUDy9Z/ac6WX2iB3WwM5yeXX9575Nv
qMv/udUNPHLc/8b2/a26gatu4NHoAdPoH6m6gS+KPqS4wYlEDZG2ZW995pcV
ert6Sh5MTVs/AOy8o4+IZB1QcPgOScV6tMW+tUKz64KUAXI80fMu+zhqUefX
GGTTyOU3IEDOY2wllQ/UC+mYDIRT7X72zdm+OPoozQLsthIdlOyvmqij4aPG
RY6dAzA/Qgo4hiDRiEZSg0JJnnx1jOdLPMYpMAnGMYnq7t4x9tsXv2AyIKuC
2YAAHTEbmQUp+aKKgPmPbe9l3UnZyWQXFasJLtLKVIVgRSZSs8hldVt2s6cK
OXKqkLdkT7Z5Nm/GwqFajyzN5oy3wC7RRlZxz2om3eHNef6K6EKaFDtWfXeA
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
zAU5XGB8/DaR/e5L/5M9f/H65CD76A3qfWC6X9egq5BpAmv86slR9vlnf7if
BZ2+RMCM2UEStfGJR3+tbKcf/LSXNrYMG3114XV0zy/MXv857Pz+Kw/2b7GO
/8Cxjn+dO11ua5ZTod3hsEjHecWZBBZ6uuFxHu/aub77qnfMv9oVc9ob91Xf
Yg/TbzQRt3slF4ex3bu5YRjDL+lSc/ntbjDslnXPjTEj/01iHP7PvbtJUfxv
EdjRJzPSEkP3jUuMoX3qIKTkxYdB0NJiPITfLiz6u2VbcfE/1tOH3+KzfxFC
/yTx2R1KRJVC9YlZPf+TL2Q+tvkgoguVhX6j1fVB6C7y2oeupj4/k98xyPcQ
ZHpw2KoXL/8oKKdTVPAnYm9koxxwAcOOyvfgOozM+uA6jM/9MJBmI94Ejk79
5dviJjxJw37QBH+P2qSEcHc3pE937FAuOsuDO/bep5G23W3j1k3TtFjF2Eit
sSBZrDZXEos/TKspFVBZFIsBomVbEC3blmjZFkTLhmXNMNGyzsomiCajCT/r
hDeBv0pJYCGoEh3o+zu4LH6cRhL1RHKEu/Xq5gjXQ6kc4XSo9KQGD6c9NjV4
5FCPpzgdt8oOSpAtPPKJnXCuv/FGS/7GaCGHoJv09G7a/X5AAl2gqNtflpga
9eHdYYwQglc6ItrKLHGqjESqkzm84iUlenpl3qk33dQlrk7fodcLwCxt3+EX
B+BXMuhm9x9HrqCMw1hy+QUdhpHtK+6w7VRHz9QBGFXAoZdg6coXAyRLVsHY
hmiWzdqDrQjXucXcmvQBn2e/AqtnvwK3Z7+QDcb0UANtzS5h7Y8BJonUARme
zWBNkC2pup0E0bVCBmYX1A0ZRsuvITK4SnxSFPPLFSnHQ+dFgN7BLmg/BeoH
47vJoNJxi/HUp27F7iEo+bJ8c/fOTygltpz5hzF1llkqb8XYmN13gFCCl0uG
3dNQtTXXOQmlIKLNmPi/Pm0mi2gzfr9+bcbh+KHajIPQp81ocozWZuzndhtt
RvfKPkSbSQMYqc1EAGypzSTI1X80J8nVezBHkN1Cmxmc6uiZOgAfos34BBut
zYQkG6vN9BJtlDbTC2GUNhOBsLU2k4YxXpuJwNhem4kAGRD8QQ810NbsMqDN
6JHGaTOR2WyrzQxRdTsJ0qPNZH7bAW0m63bo1Wa6n3HaTPdzO0abiXbLRmgz
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
f56Xy1YSezhPh+TpN44QFezX7OllzlLN5MLMcfIAduyB8VwtGvQCtsiysC6Z
gNNGImFLu/1OVQXLgPmXxZc7kTpjXnmwnbt3/IpwyQpg2Isrw0mRMir+JUXK
qLoYV+qyxcDwd1O+K1m9K/sZJ01FFJEL8Jt7s3tf4Jdkwq3zeZHtbOrVAUI4
WOeAc3Pw49XyYNUckIBIQd4hIFiHo/yR7kTnX3CpsPIKiyMajBgB1fAL/ndQ
AivLdl49OfoLfA6yQ57uMRZTe+YqutXoHJhnJ6sL0FKKmmo06+gS+GCZ2acr
4MtzmFbDGEqxvf3fZ88r4BiqtooF0U4WZQtgsQQtILNeIiFwfCo4RyXdRC3K
GwyNKYxmKTVwEUSFZfoWgFc77RSszM5gAwKBsVwvtJ39fj9GHT5NOjTir/so
9b/hc5D9eY3ie4HFb69gZR3ZXhNYTTbTWZFve/rgqL+UPvX5/PPPPvt0uiHc
U2Sq6ovcXOoz4J0YAxxigArGTm3qglb/1EQxZbuvTw5PjdT5ATYgfvkNusd4
3lRwey4yYeeHb7IfirOD7I+XbbtuDvb3sZQfyIT526KmaqQzwGj/+mIf57D/
JwP2m+y7smkPsuyPVzkIxOoAf/7atP+T1BPMhJjQLnva5ssqe7xpyo6T2sAo
scnsDJp8fbnJr4tyBiSKwTot6osSgBXLqm3T8BpqNjvjZl+vqrdlngL5fTnH
Vf+uWhc/JQG+o0azJTbqB/eimed19k21+ilfFj9liyI7LqsmCbjC5rMLab4o
FtD4ayx2eV6tynlylMPVps4vstPLvL7Kk8BBvl/mX19U1cWySEH6C7Dh6WUP
KS9L2N8P//A1hlHlG0CquprNVzFQrwDhegEEXebLNo1VTc1m77jZ1/O2nc+K
Jgbwf8FBclm+hVVvL2G+V3n3msMAfctNZ41t+vWqmOdXqWk/K+eXOcjZU/hP
HV4CObBX3GzWULOvL/DrFMhj2L6wcNlRMYcJFstlmqgLbjqb26Zfo/7egL4p
0Km57FTavErzNdLhsmxMlU0uo4nV62OlQVUNcBEpBnklWEB67HVO9hkJx75K
nxnXNgVUFtV8Q5qLaDCNKWXuFQfH78RcyV6fCAiZxa7IzL2ZJa8taZ6db5bL
GyruWtVXjQhdafWco7yyZ/kqvygIiWNb1duTmLvPnx0fKvhH1fqmxou+bHe+
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
z7rqplz+uJ/aT5+BPRnFlxG0/j8pCkmmhbsCAA==

-->

</rfc>

