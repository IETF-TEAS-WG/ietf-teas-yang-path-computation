<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.5.26 (Ruby 2.7.2) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc comments="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-teas-yang-path-computation-17" category="std" consensus="true" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="Yang for Path Computation">A YANG Data Model for requesting path computation</title>

    <author initials="I." surname="Busi" fullname="Italo Busi" role="editor">
      <organization>Huawei Technologies</organization>
      <address>
        <email>italo.busi@huawei.com</email>
      </address>
    </author>
    <author initials="S." surname="Belotti" fullname="Sergio Belotti" role="editor">
      <organization>Nokia</organization>
      <address>
        <email>sergio.belotti@nokia.com</email>
      </address>
    </author>
    <author initials="O." surname="Gonzalez de Dios" fullname="Oscar Gonzalez de Dios">
      <organization>Telefonica</organization>
      <address>
        <email>oscar.gonzalezdedios@telefonica.com</email>
      </address>
    </author>
    <author initials="A." surname="Sharma" fullname="Anurag Sharma">
      <organization>Google</organization>
      <address>
        <email>ansha@google.com</email>
      </address>
    </author>
    <author initials="Y." surname="Shi" fullname="Yan Shi">
      <organization>China Unicom</organization>
      <address>
        <email>shiyan49@chinaunicom.cn</email>
      </address>
    </author>
    <author initials="D." surname="Ceccarelli" fullname="Daniele Ceccarelli">
      <organization>Ericsson</organization>
      <address>
        <email>daniele.ceccarelli@ericsson.com</email>
      </address>
    </author>

    <date year="2022" month="March" day="07"/>

    
    <workgroup>TEAS Working Group</workgroup>
    

    <abstract>


<t>There are scenarios, typically in a hierarchical Software-Defined
   Networking (SDN) context, where the topology information provided by
   a Traffic Engineering (TE) network provider may be insufficient for
   its client to perform multi-domain path computation. In these cases the
   client would need to request the TE network provider to compute some
   intra-domain paths.</t>

<t>This document defines a YANG data model which contains Remote Procedure Calls
   (RPCs) to request path computation. This model complements the
   solution, defined in RFC YYYY, to configure a TE tunnel path in
   "compute-only" mode.</t>

<t>[RFC EDITOR NOTE: Please replace RFC YYYY with the RFC number of
   draft-ietf-teas-yang-te once it has been published.</t>

<t>Moreover, this document describes some use cases where the path
   computation request, via YANG-based protocols (e.g., NETCONF or
   RESTCONF), can be needed.</t>



    </abstract>



  </front>

  <middle>


<section anchor="intro"><name>Introduction</name>

<t anchor="pc-model">There are scenarios, typically in a hierarchical Software-Defined
   Networking (SDN) context, where the topology information provided by
   a Traffic Engineering (TE) network provider may be insufficient for
   its client to perform multi-domain path computation. In these cases the
   client would need to request the TE network provider to compute some
   intra-domain paths that could be used together with its topology information
   to compute the multi-domain path.</t>

<t>These types of scenarios can be applied to different interfaces in
   different reference architectures:</t>

<t><list style="symbols">
  <t>Application-Based Network Operations (ABNO) control interface
<xref target="RFC7491"/>, in which an Application Service Coordinator can request the
ABNO controller to take in charge path calculation (see Figure 1
in <xref target="RFC7491"/>).</t>
  <t>Abstraction and Control of TE Networks (ACTN) <xref target="RFC8453"/>, where a
controller hierarchy is defined.
In the ACTN context, path computation is needed on the interface
between Customer Network Controller (CNC)  and Multi-Domain
Service Coordinator (MDSC), called CNC-MDSC Interface (CMI),
and on the interface between MSDC and Provisioning Network
Controller (PNC), called MDSC-PNC Interface  (MPI). 
<xref target="RFC8454"/> describes an information model for the Path
Computation request.  <vspace blankLines='1'/>
Multiple protocol solutions can be used for communication between
different controller hierarchical levels. This document assumes that
the controllers are communicating using YANG-based protocols (e.g.,
NETCONF <xref target="RFC6241"/> or RESTCONF <xref target="RFC8040"/>).  <vspace blankLines='1'/>
Path Computation Elements (PCEs), controllers and orchestrators
perform their operations based on Traffic Engineering Databases
(TED). Such TEDs can be described, in a technology agnostic way, with
the YANG data model for TE Topologies <xref target="RFC8795"/>. Furthermore, the
technology specific details of the TED are modelled in the technology
specific topology models, e.g., the <xref target="I-D.ietf-ccamp-otn-topo-yang"/> for Optical Transport
Network (OTN) Optical Data Unit (ODU) technologies, which augment the
common TE topology model in <xref target="RFC8795"/>.  <vspace blankLines='1'/>
The availability of such topology models allows the provisioning of
the TED using YANG-based protocols (e.g., NETCONF or RESTCONF).
Furthermore, it enables a PCE/controller performing the necessary
abstractions or modifications and offering this customized topology
to another PCE/controller or high level orchestrator.  <vspace blankLines='1'/>
The tunnels that can be provided over the networks described with the
topology models can be also set-up, deleted and modified via YANG-
based protocols (e.g., NETCONF or RESTCONF) using the TE tunnel YANG
data model <xref target="I-D.ietf-teas-yang-te"/>.  <vspace blankLines='1'/>
This document defines a YANG data model <xref target="RFC7950"/> for an RPC to
request path computation, which complements the solution defined in
<xref target="I-D.ietf-teas-yang-te"/>, to configure a TE tunnel path in "compute-only" mode.  <vspace blankLines='1'/>
The YANG data model definition does not make any assumption about
whether that the client or the server implement a "PCE"
functionality, as defined in <xref target="RFC4655"/>, and the Path Computation
Element Communication Protocol (PCEP) protocol, as defined in
<xref target="RFC5440"/>.  <vspace blankLines='1'/>
Moreover, this document describes some use cases where a path
computation request, via YANG-based protocols (e.g., NETCONF or
RESTCONF), can be needed.  <vspace blankLines='1'/>
The YANG data model defined in this document conforms to the Network
Management Datastore Architecture <xref target="RFC8342"/>.</t>
</list></t>

<section anchor="terminology"><name>Terminology</name>

<t>TED:</t>

<ul empty="true"><li>
  <t>The traffic engineering database is a collection of all TE
   information about all TE nodes and TE links in a given network.</t>
</li></ul>

<t>PCE:</t>

<ul empty="true"><li>
  <t>A Path Computation Element (PCE) is an entity that is capable of
   computing a network path or route based on a network graph, and of
   applying computational constraints during the computation.  The PCE
   entity is an application that can be located within a network node or
   component, on an out-of-network server, etc.  For example, a PCE
   would be able to compute the path of a TE Label Switched Path (LSP)
   by operating on the TED and considering bandwidth and other
   constraints applicable to the TE LSP service request. <xref target="RFC4655"/>.</t>
</li></ul>

<t>Domain:</t>

<ul empty="true"><li>
  <t>TE information is the data relating to nodes and TE links
   that is used in the process of selecting a TE path.  TE information
   is usually only available within a network.  We call such a zone of
   visibility of TE information a domain.  An example of a domain may be
   an IGP area or an Autonomous System. <xref target="RFC7926"/></t>
</li></ul>

<t>The terminology for describing YANG data models is found in
   <xref target="RFC7950"/>.</t>

</section>
<section anchor="tree-diagram"><name>Tree Diagram</name>

<t>Tree diagrams used in this document follow the notation defined in
   <xref target="RFC8340"/>.</t>

</section>
<section anchor="prefixes-in-data-node-names"><name>Prefixes in Data Node Names</name>

<t>In this document, names of data nodes and other data model objects
   are prefixed using the standard prefix associated with the
   corresponding YANG imported modules, as shown in <xref target="tab-prefix"/>.</t>

<texttable title="Prefixes and corresponding YANG modules" anchor="tab-prefix">
      <ttcol align='left'>Prefix</ttcol>
      <ttcol align='left'>YANG module</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>inet</c>
      <c>ietf-inet-types</c>
      <c><xref target="RFC6991"/></c>
      <c>te-types</c>
      <c>ietf-te-types</c>
      <c><xref target="RFC8776"/></c>
      <c>te</c>
      <c>ietf-te</c>
      <c>[RFCYYYY]</c>
      <c>te-pc</c>
      <c>ietf-te-path-computation</c>
      <c>RFCXXXX</c>
</texttable>

<t>RFC Editor Note:
Please replace XXXX with the RFC number assigned to this document.
Please replace RFC YYYY with the RFC number of <xref target="I-D.ietf-teas-yang-te"/> once it has been published.
Please remove this note.</t>

</section>
</section>
<section anchor="use-cases"><name>Use Cases</name>

<t>This section presents some use cases, where a client needs to request
   underlying SDN controllers for path computation.</t>

<t>The use of the YANG data model defined in this document is not
   restricted to these use cases but can be used in any other use case
   when deemed useful.</t>

<t>The presented uses cases have been grouped, depending on the
   different underlying topologies: a) Packet/Optical Integration; b)
   multi-domain Traffic Engineered (TE) Networks; and c) Data Center
   Interconnections. Use cases d) and e) respectively present how to
   apply this YANG data model for standard multi-domain PCE i.e.
   Backward Recursive Path Computation <xref target="RFC5441"/> and Hierarchical PCE
   <xref target="RFC6805"/>.</t>

<section anchor="poi-uc"><name>Packet/Optical Integration</name>

<t>In this use case, an optical domain is used to provide connectivity
   to some nodes of a packet domain (see <xref target="fig-poi-uc"/>).</t>

<figure title="Packet/Optical Integration use case" anchor="fig-poi-uc"><artwork><![CDATA[
                                +----------------+
                                |                |
                                | Packet/Optical |
                                |  Coordinator   |
                                |                |
                                +---+------+-----+
                                    |      |
                       +------------+      |
                       |                   +-----------+
                +------V-----+                         |
                |            |                  +------V-----+
                | Packet     |                  |            |
                | Domain     |                  | Optical    |
                | Controller |                  | Domain     |
                |            |                  | Controller |
                +------+-----+                  +-------+----+
                       |                                |
              .........V.........................       |
              :          packet domain          :       |
          +----+                               +----+   |
          | R1 |= = = = = = = = = = = = = = = =| R2 |   |
          +-+--+                               +--+-+   |
            | :                                 : |     |
            | :................................ : |     |
            |                                     |     |
            |               +-----+               |     |
            |    ...........| Opt |...........    |     |
            |    :          |  C  |          :    |     |
            |    :         /+--+--+\         :    |     |
            |    :        /    |    \        :    |     |
            |    :       /     |     \       :    |     |
            |   +-----+ /   +--+--+   \ +-----+   |     |
            |   | Opt |/    | Opt |    \| Opt |   |     |
            +---|  A  |     |  D  |     |  B  |---+     |
                +-----+\    +--+--+    /+-----+         |
                 :      \      |      /      :          |
                 :       \     |     /       :          |
                 :        \ +--+--+  / optical<---------+
                 :         \| Opt |/  domain :
                 :..........|  E  |..........:
                            +-----+
]]></artwork></figure>

<t><xref target="fig-poi-uc"/> as well as <xref target="fig-poi-abstraction"/> below only show a partial view of the
   packet network connectivity, before additional packet connectivity is
   provided by the optical network.</t>

<t>It is assumed that the Optical Domain Controller provides to the
   Packet/Optical Coordinator an abstracted view of the optical network.
   A possible abstraction could be to represent the whole optical
   network as one "virtual node" with "virtual ports" connected to the
   access links, as shown in <xref target="fig-poi-abstraction"/>.</t>

<t>It is also assumed that Packet Domain Controller can provide the
   Packet/Optical Coordinator the information it needs to set up
   connectivity between packet nodes through the optical network (e.g.,
   the access links).</t>

<t>The path computation request helps the Packet/Optical Coordinator to
   know the real connections that can be provided by the optical
   network.</t>

<figure title="Packet and Optical Topology Abstractions" anchor="fig-poi-abstraction"><artwork><![CDATA[
                       ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,.
                      ,  Packet/Optical Coordinator view          ,
                     ,                              +----+       , .
                    ,                               |    |      ,
                   ,                                | R2 |     ,   .
                  ,  +----+  +------------ +       /+----+    ,
                 ,   |    |  |             |/-----/ / /      ,     .
                ,    | R1 |--O VP1     VP4 O       / /      ,
               ,     |    |\ |             | /----/ /      ,       .
              ,      +----+ \|             |/      /      ,
             ,        /      O VP2     VP5 O      /      ,         .
            ,        /       |             |  +----+    ,
           ,        /        |             |  |    |   ,           .
          ,        /         O VP3     VP6 O--| R4 |  ,
         ,     +----+ /-----/|_____________|  +----+ ,             .
        ,      |    |/       +------------ +        ,
       ,       | R3 |                              ,               .
      ,        +----+                             ,,,,,,,,,,,,,,,,,
     ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,                ,.
     . Packet Domain Controller view                +----+       ,
       only packet nodes and packet links           |    |      ,  .
     . with access links to the optical network     | R2 |     ,
                  ,  +----+                        /+----+    ,    .
     .           ,   |    |                 /-----/ / /      ,
                ,    | R1 |---                     / /      ,      .
     .         ,     +----+\                 /----/ /      ,
              ,        /    \               /      /      ,        .
     .       ,        /                           /      ,
            ,        /                        +----+    ,          .
     .     ,        /                         |    |   ,
          ,        /                       ---| R4 |  ,            .
     .   ,     +----+ /-----/                 +----+ ,
        ,      |    |/                              ,              .
     . ,       | R3 |                              ,
      ,        +----+                             ,,,,,,,,,,,,,,,,,.
     .,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,                ,
       Optical Domain Controller view                            , .
     . only optical nodes,        +--+                          ,
       optical links and         /|OF|                         ,   .
     . access links from the  +--++--+             /          ,
       packet network         |OA|    \     /-----/ /        ,     .
     .          ,          ---+--+--\  +--+/       /        ,
               ,           \   |  \  \-|OE|-------/        ,       .
     .        ,             \  |   \ /-+--+               ,
             ,               \+--+  X    |               ,         .
     .      ,                 |OB|-/ \   |              ,
           ,                  +--+-\  \+--+            ,           .
     .    ,                  /   \  \--|OD|---        ,
         ,            /-----/     +--+ +--+          ,             .
     .  ,            /            |OC|/             ,
       ,                          +--+             ,               .
     .,                                           ,,,,,,,,,,,,,,,,,,
      ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,                ,
     . Actual Physical View                         +----+       ,
                    ,             +--+              |    |      ,
     .             ,             /|OF|              | R2 |     ,
                  ,  +----+   +--++--+             /+----+    ,
     .           ,   |    |   |OA|    \     /-----/ / /      ,
                ,    | R1 |---+--+--\  +--+/       / /      ,
     .         ,     +----+\   |  \  \-|OE|-------/ /      ,
              ,        /    \  |   \ /-+--+        /      ,
     .       ,        /      \+--+  X    |        /      ,
            ,        /        |OB|-/ \   |    +----+    ,
     .     ,        /         +--+-\  \+--+   |    |   ,
          ,        /         /   \  \--|OD|---| R4 |  ,
     .   ,     +----+ /-----/     +--+ +--+   +----+ ,
        ,      |    |/            |OC|/             ,
     . ,       | R3 |             +--+             ,
      ,        +----+                             ,
     .,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
]]></artwork></figure>

<t>In this use case, the Packet/Optical Coordinator needs to set up an
   optimal underlying path for an IP link between R1 and R2.</t>

<t>As depicted in <xref target="fig-poi-abstraction"/>, the Packet/Optical Coordinator has only an
   "abstracted view" of the physical network, and it does not know the
   feasibility or the cost of the possible optical paths (e.g., VP1-VP4
   and VP2-VP5), which depend on the current status of the physical
   resources within the optical network and on vendor-specific optical
   attributes.</t>

<t>The Packet/Optical Coordinator can request the underlying Optical
   Domain Controller to compute a set of potential optimal paths, taking
   into account optical constraints. Then, based on its own constraints,
   policy and knowledge (e.g. cost of the access links), it can choose
   which one of these potential paths to use to set up the optimal end-
   to-end path crossing optical network.</t>

<figure title="Packet/Optical Integration path computation example" anchor="fig-poi-example"><artwork><![CDATA[
                    ............................
                    :                          :
                    O VP1                  VP4 O
           cost=10 /:\                        /:\ cost=10
                  / : \----------------------/ : \
          +----+ /  :         cost=50          :  \ +----+
          |    |/   :                          :   \|    |
          | R1 |    :                          :    | R2 |
          |    |\   :                          :   /|    |
          +----+ \  :  /--------------------\  :  / +----+
                  \ : /       cost=55        \ : /
            cost=5 \:/                        \:/ cost=5
                    O VP2                  VP5 O
                    :                          :
                    :..........................:
]]></artwork></figure>

<t>For example, in <xref target="fig-poi-example"/>, the Packet/Optical Coordinator can request
   the Optical Domain Controller to compute the paths between VP1-VP4
   and VP2-VP5 and then decide to set up the optimal end-to-end path
   using the VP2-VP5 optical path even if this is not the optimal path
   from the optical domain perspective.</t>

<t>Considering the dynamicity of the connectivity constraints of an
   optical domain, it is possible that a path computed by the Optical
   Domain Controller when requested by the Packet/Optical Coordinator is
   no longer valid/available when the Packet/Optical Coordinator
   requests it to be set up. This is further discussed in <xref target="rpc-motivation"/>.</t>

</section>
<section anchor="md-uc"><name>Multi-domain TE networks</name>

<t>In this use case there are two TE domains which are interconnected
   together by multiple inter-domains links.</t>

<t>A possible example could be a multi-domain optical network.</t>

<figure title="Multi-domain multi-link interconnection" anchor="md-ml-connection"><artwork><![CDATA[
                            +--------------+
                            | Multi-Domain |
                            | Controller   |
                            +---+------+---+
                                |      |
                   +------------+      |
                   |                   +-----------+
            +------V-----+                         |
            |            |                         |
            | TE Domain  |                  +------V-----+
            | Controller |                  |            |
            |      1     |                  | TE Domain  |
            +------+-----+                  | Controller |
                   |                        |      2     |
                   |                        +------+-----+
          .........V..........                     |
          :                  :                     |
         +-----+             :                     |
         |     |             :            .........V..........
         |  X  |             :            :                  :
         |     |          +-----+      +-----+                :
         +-----+          |     |      |     |               :
          :               |  C  |------|  E  |               :
      +-----+    +-----+ /|     |      |     |\ +-----+    +-----+
      |     |    |     |/ +-----+      +-----+ \|     |    |     |
      |  A  |----|  B  |     :            :     |  G  |----|  H  |
      |     |    |     |\    :            :    /|     |    |     |
      +-----+    +-----+ \+-----+      +-----+/ +-----+    +-----+
          :               |     |      |     |               :
          :               |  D  |------|  F  |               :
          :               |     |      |     |          +-----+
          :               +-----+      +-----+          |     |
          :                  :            :             |  Y  |
          :                  :            :             |     |
          :   TE domain 1    :            : TE domain 2 +-----+
          :..................:            :.................:
]]></artwork></figure>

<t>In order to set up an end-to-end multi-domain TE path (e.g., between
   nodes A and H), the Multi-Domain Controller needs to know the
   feasibility or the cost of the possible TE paths within the two TE
   domains, which depend on the current status of the physical resources
   within each TE domain. This is more challenging in case of optical
   networks because the optimal paths depend also on vendor-specific
   optical attributes (which may be different in the two domains if they
   are provided by different vendors).</t>

<t>In order to set up a multi-domain TE path (e.g., between nodes A and
   H), the Multi-Domain Controller can request the TE Domain Controllers
   to compute a set of intra-domain optimal paths and take decisions
   based on the information received. For example:</t>

<t><list style="symbols">
  <t>The Multi-Domain Controller asks TE Domain Controllers to provide
set of paths between A-C, A-D, E-H and F-H</t>
  <t>TE Domain Controllers return a set of feasible paths with the
associated costs: the path A-C is not part of this set (in optical
networks, it is typical to have some paths not being feasible due
to optical constraints that are known only by the Optical Domain
Controller)</t>
  <t>The Multi-Domain Controller will select the path A-D-F-H since it
is the only feasible multi-domain path and then request the TE
Domain Controllers to set up the A-D and F-H intra-domain paths</t>
  <t>If there are multiple feasible paths, the Multi-Domain Controller
can select the optimal path knowing the cost of the intra-domain
paths (provided by the TE domain controllers) and the cost of the
inter-domain links (known by the Multi-Domain Controller)  <vspace blankLines='1'/>
This approach may have some scalability issues when the number of TE
domains is quite big (e.g. 20).  <vspace blankLines='1'/>
In this case, it would be worthwhile using the abstract TE topology
information provided by the TE Domain Controllers to limit the number
of potential optimal end-to-end paths and then request path
computation from fewer TE Domain Controllers in order to decide what
the optimal path within this limited set is.  <vspace blankLines='1'/>
For more details, see <xref target="topo-pc-complement"/>.</t>
</list></t>

</section>
<section anchor="data-center-interconnections"><name>Data Center Interconnections</name>

<t>In these use case, there is a TE domain which is used to provide
   connectivity between Data Centers which are connected with the TE
   domain using access links.</t>

<figure title="Data Center Interconnection use case" anchor="fig-dci-uc"><artwork><![CDATA[
                        +--------------+
                        | Cloud Network|
                        | Orchestrator |
                        +--------------+
                          |  |  |  |
            +-------------+  |  |  +------------------------+
            |                |  +------------------+        |
            |       +--------V---+                 |        |
            |       |            |                 |        |
            |       | TE Network |                 |        |
     +------V-----+ | Controller |          +------V-----+  |
     | DC         | +------------+          | DC         |  |
     | Controller |     |                   | Controller |  |
     +------------+     |   +-----+         +------------+  |
          |         ....V...|     |........         |       |
          |         :       |  P  |       :         |       |
     .....V.....    :      /+-----+\      :    .....V.....  |
     :         :  +-----+ /    |    \ +-----+  :         :  |
     :  DC1 || :  |     |/     |     \|     |  :  DC2 || :  |
     :    ||||----| PE1 |      |      | PE2 |----   |||| :  |
     : _|||||| :  |     |\     |     /|     |  : _|||||| :  |
     :         :  +-----+ \ +-----+ / +-----+  :         :  |
     :.........:    :      \|     |/      :    :.........:  |
                    :.......| PE3 |.......:                 |
                            |     |                         |
                            +-----+               +---------V--+
                          .....|.....             | DC         |
                          :         :             | Controller |
                          :  DC3 || :             +------------+
                          :    |||| :                  |
                          : _|||||| <------------------+
                          :         :
                          :.........:
]]></artwork></figure>

<t>In this use case, there is the need to transfer data from Data Center
   1 (DC1) to either DC2 or DC3 (e.g. workload migration).</t>

<t>The optimal decision depends both on the cost of the TE path (DC1-DC2
   or DC1-DC3) and of the Data Center resources within DC2 or DC3.</t>

<t>The Cloud Network Orchestrator needs to make a decision for optimal
   connection based on TE network constraints and Data Center resources.</t>

<t>It may not be able to make this decision because it has only an
   abstract view of the TE network (as in <xref target="poi-uc"/>).</t>

<t>The Cloud Network Orchestrator can request to the TE Network
   Controller to compute the cost of the possible TE paths (e.g., DC1-
   DC2 and DC1-DC3) and to the DC Controller to provide the information
   it needs about the required Data Center resources within DC2 and DC3
   and then it can take the decision about the optimal solution based on
   this information and its policy.</t>

</section>
<section anchor="backward-recursive-path-computation-scenario"><name>Backward Recursive Path Computation scenario</name>

<t><xref target="RFC5441"/> has defined the Virtual Source Path Tree (VSPT) TLV within
   PCE Reply Object in order to compute inter-domain paths following a
   "Backward Recursive Path Computation" (BRPC) method. The main
   principle is to forward the PCE request message up to the destination
   domain. Then, each PCE involved in the computation will compute its
   part of the path and send it back to the requester through PCE
   Response message. The resulting computation is spread from
   destination PCE to source PCE. Each PCE is in charge of merging the
   path it received with the one it calculated. At the end, the source
   PCE merges its local part of the path with the received one to
   achieve the end-to-end path.</t>

<t><xref target="fig-brpc-example"/> below show a typical BRPC scenario where 3 PCEs cooperate to
   compute inter-domain paths.</t>

<figure title="BRPC Scenario" anchor="fig-brpc-example"><artwork><![CDATA[
                   +----------------+          +----------------+
                   |  Domain (B)    |          |  Domain (C)    |
                   |                |          |                |
                   |        /-------|---PCEP---|--------\       |
                   |       /        |          |         \      |
                   |   (PCE)        |          |   -    (PCE)   |
                   |    /           <---------->  |D|           |
                   |   /            |  Inter   |   -            |
                   +---|----^-------+  Domain  +----------------+
                       |    |          Link
                     PCEP   |
                       |    | Inter-domain Link
                       |    |
                   +---|----v-------+
                   |   |            |
                   |   | Domain (A) |
                   |   \            |
                   |  (PCE)    -    |
                   |          |S|   |
                   |           -    |
                   +----------------+
]]></artwork></figure>

<t>In this use case, a client can use the YANG data model defined in
   this document to request path computation from the PCE that controls
   the source of the tunnel. For example, a client can request to the
   PCE of domain A to compute a path from a source S, within domain A,
   to a destination D, within domain C. Then PCE of domain A will use
   PCEP protocol, as per <xref target="RFC5441"/>, to compute the path from S to D and
   in turn gives the final answer to the requester.</t>

</section>
<section anchor="hierarchical-pce-scenario"><name>Hierarchical PCE scenario</name>

<t><xref target="RFC6805"/> has defined an architecture and extensions to the PCE
   standard to compute inter-domain path following a hierarchical
   method. Two new roles have been defined: parent PCE and child PCE.
   The parent PCE is in charge to coordinate the end-to-end path
   computation. For that purpose it sends to each child PCE involved in
   the multi-domain path computation a PCE Request message to obtain the
   local part of the path. Once received all answer through PCE Response
   message, the parent PCE will merge the different local parts of the
   path to achieve the end-to-end path.</t>

<t><xref target="fig-hpce-example"/> below shows a typical hierarchical scenario where a parent
   PCE request end-to-end path to the different child PCE. Note that a
   PCE could take independently the role of child or parent PCE
   depending of which PCE will request the path.</t>

<figure title="Hierarchical domain topology from RFC6805" anchor="fig-hpce-example"><artwork><![CDATA[
    -----------------------------------------------------------------
    |   Domain 5                                                      |
    |                              -----                              |
    |                             |PCE 5|                             |
    |                              -----                              |
    |                                                                 |
    |    ----------------     ----------------     ----------------   |
    |   | Domain 1       |   | Domain 2       |   | Domain 3       |  |
    |   |                |   |                |   |                |  |
    |   |        -----   |   |        -----   |   |        -----   |  |
    |   |       |PCE 1|  |   |       |PCE 2|  |   |       |PCE 3|  |  |
    |   |        -----   |   |        -----   |   |        -----   |  |
    |   |                |   |                |   |                |  |
    |   |            ----|   |----        ----|   |----            |  |
    |   |           |BN11+---+BN21|      |BN23+---+BN31|           |  |
    |   |   -        ----|   |----        ----|   |----        -   |  |
    |   |  |S|           |   |                |   |           |D|  |  |
    |   |   -        ----|   |----        ----|   |----        -   |  |
    |   |           |BN12+---+BN22|      |BN24+---+BN32|           |  |
    |   |            ----|   |----        ----|   |----            |  |
    |   |                |   |                |   |                |  |
    |   |         ----   |   |                |   |   ----         |  |
    |   |        |BN13|  |   |                |   |  |BN33|        |  |
    |    -----------+----     ----------------     ----+-----------   |
    |                \                                /               |
    |                 \       ----------------       /                |
    |                  \     |                |     /                 |
    |                   \    |----        ----|    /                  |
    |                    ----+BN41|      |BN42+----                   |
    |                        |----        ----|                       |
    |                        |                |                       |
    |                        |        -----   |                       |
    |                        |       |PCE 4|  |                       |
    |                        |        -----   |                       |
    |                        |                |                       |
    |                        | Domain 4       |                       |
    |                         ----------------                        |
    |                                                                 |
     -----------------------------------------------------------------
]]></artwork></figure>

<t>In this use case, a client can use the YANG data model defined in
   this document to request to the parent PCE a path from a source S to
   a destination D. The parent PCE will in turn contact the child PCEs
   through PCEP protocol to compute the end-to-end path and then return
   the computed path to the client, using the YANG data model defined in
   this document. For example the YANG data model can be used to request
   to PCE5 acting as parent PCE to compute a path from source S, within
   domain 1, to destination D, within domain 3. PCE5 will contact child
   PCEs of domain 1, 2 and 3 to obtain local part of the end-to-end path
   through the PCEP protocol. Once received the PCE Response message, it
   merges the answers to compute the end-to-end path and send it back to
   the client.</t>

</section>
</section>
<section anchor="motivations"><name>Motivations</name>

<t>This section provides the motivation for the YANG data model defined
   in this document.</t>

<t><xref target="yang-motivation"/> describes the motivation for a YANG data model to request
   path computation.</t>

<t><xref target="topo-interaction"/> describes the motivation for a YANG data model which
   complements the TE topology YANG data model defined in <xref target="RFC8795"/>.</t>

<t><xref target="rpc-motivation"/> describes the motivation for a YANG RPC which complements
   the TE tunnel YANG data model defined in <xref target="I-D.ietf-teas-yang-te"/>.</t>

<section anchor="yang-motivation"><name>Motivation for a YANG Model</name>

<section anchor="benefits-of-common-data-models"><name>Benefits of common data models</name>

<t>The YANG data model for requesting path computation is closely
   aligned with the YANG data models that provide (abstract) TE topology
   information, i.e., <xref target="RFC8795"/> as well as that are used to configure
   and manage TE tunnels, i.e., <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>There are many benefits in aligning the data model used for path
   computation requests with the YANG data models used for TE topology
   information and for TE tunnels configuration and management:</t>

<t><list style="symbols">
  <t>There is no need for an error-prone mapping or correlation of
information.</t>
  <t>It is possible to use the same endpoint identifiers in path
computation requests and in the topology modeling.</t>
  <t>The attributes used for path computation constraints are the same
as those used when setting up a TE tunnel.</t>
</list></t>

</section>
<section anchor="benefits-of-a-single-interface"><name>Benefits of a single interface</name>

<t>The system integration effort is typically lower if a single,
   consistent interface is used by controllers, i.e., one data modeling
   language (i.e., YANG) and a common protocol (e.g., NETCONF or
   RESTCONF).</t>

<t>Practical benefits of using a single, consistent interface include:</t>

<t><list style="numbers">
  <t>Simple authentication and authorization: The interface between
different components has to be secured. If different protocols
have different security mechanisms, ensuring a common access
control model may result in overhead. For instance, there may be a
need to deal with different security mechanisms, e.g., different
credentials or keys. This can result in increased integration
effort.</t>
  <t>Consistency: Keeping data consistent over multiple different
interfaces or protocols is not trivial. For instance, the sequence
of actions can matter in certain use cases, or transaction
semantics could be desired. While ensuring consistency within one
protocol can already be challenging, it is typically cumbersome to
achieve that across different protocols.</t>
  <t>Testing: System integration requires comprehensive testing,
including corner cases. The more different technologies are
involved, the more difficult it is to run comprehensive test cases
and ensure proper integration.</t>
  <t>Middle-box friendliness: Provider and consumer of path computation
requests may be located in different networks, and middle-boxes
such as firewalls, NATs, or load balancers may be deployed. In
such environments it is simpler to deploy a single protocol. Also,
it may be easier to debug connectivity problems.</t>
  <t>Tooling reuse: Implementers may want to implement path computation
requests with tools and libraries that already exist in
controllers and/or orchestrators, e.g., leveraging the rapidly
growing eco-system for YANG tooling.</t>
</list></t>

</section>
<section anchor="extensibility"><name>Extensibility</name>

<t>Path computation is only a subset of the typical functionality of a
   controller. In many use cases, issuing path computation requests
   comes along with the need to access other functionality on the same
   system. In addition to obtaining TE topology, for instance also
   configuration of services (set-up/modification/deletion) may be
   required, as well as:</t>

<t><list style="numbers">
  <t>Receiving notifications for topology changes as well as
integration with fault management</t>
  <t>Performance management such as retrieving monitoring and telemetry
data</t>
  <t>Service assurance, e.g., by triggering OAM functionality</t>
  <t>Other fulfilment and provisioning actions beyond tunnels and
services, such as changing QoS configurations  <vspace blankLines='1'/>
YANG is a very extensible and flexible data modeling language that
can be used for all these use cases.</t>
</list></t>

</section>
</section>
<section anchor="topo-interaction"><name>Interactions with TE topology</name>

<t>The use cases described in <xref target="use-cases"/> have been described assuming
   that the topology view exported by each underlying controller to its
   client is aggregated using the "virtual node model", defined in
   <xref target="RFC7926"/>.</t>

<t>TE topology information, e.g., as provided by <xref target="RFC8795"/>, could in
   theory be used by an underlying controller to provide TE information
   to its client thus allowing a PCE available within its client to
   perform multi-domain path computation on its own, without requesting
   path computations to the underlying controllers.</t>

<t>In case the client does not implement a PCE function, as discussed in
   <xref target="intro"/>, it could not perform path computation based on TE topology
   information and would instead need to request path computation from
   the underlying controllers to get the information it needs to find
   the optimal end-to-end path.</t>

<t>In case the client implements a PCE function, as discussed in 
   <xref target="intro"/>, the TE topology information needs to be complete and accurate,
   which would bring to scalability issues.</t>

<t>Using TE topology to provide a "virtual link model" aggregation, as
   described in <xref target="RFC7926"/>, may be insufficient, unless the aggregation
   provides complete and accurate information, which would still cause
   scalability issues, as described in <xref target="topo-aggregation"/> below.</t>

<t>Using TE topology abstraction, as described in <xref target="RFC7926"/>, may lead to
   compute an unfeasible path, as described in <xref target="RFC7926"/> in 
   <xref target="topo-abstraction"/> below.</t>

<t>Therefore when computing an optimal multi-domain path, there is a
   scalability trade-off between providing complete and accurate TE
   information and the number of path computation requests to the
   underlying controllers.</t>

<t>The TE topology information used, in a complimentary way, to reduce
   the number for path computation requests to the underlying
   controllers, are described in <xref target="topo-pc-complement"/> below.</t>

<section anchor="topo-aggregation"><name>TE topology aggregation</name>

<t>Using the TE topology model, as defined in <xref target="RFC8795"/>, the underlying
   controller can export the whole TE domain as a single TE node with a
   "detailed connectivity matrix" (which provides specific TE
   attributes, such as delay, Shared Risk Link Groups (SRLGs) and other
   TE metrics, between each ingress and egress links).</t>

<t>The information provided by the "detailed connectivity matrix" would
   be equivalent to the information that should be provided by "virtual
   link model" as defined in <xref target="RFC7926"/>.</t>

<t>For example, in the Packet/Optical Integration use case, described in
   <xref target="poi-uc"/>, the Optical Domain Controller can make the information
   shown in <xref target="fig-poi-example"/> available to the Packet/Optical Coordinator as part
   of the TE topology information and the Packet/Optical Coordinator
   could use this information to calculate on its own the optimal path
   between R1 and R2, without requesting any additional information to
   the Optical Domain Controller.</t>

<t>However, when designing the amount of information to provide within
   the "detailed connectivity matrix", there is a tradeoff to be
   considered between accuracy (i.e., providing "all" the information
   that might be needed by the PCE available within the client) and
   scalability.</t>

<t><xref target="poi-multi-path"/> below shows another example, similar to <xref target="fig-poi-example"/>, where
   there are two possible Optical paths between VP1 and VP4 with
   different properties (e.g., available bandwidth and cost).</t>

<figure title="Packet/Optical Integration path computation Example with multiple choices" anchor="poi-multi-path"><artwork><![CDATA[
                    ............................
                    :  /--------------------\  :
                    : /       cost=65        \ :
                    :/    available-bw=10G    \:
                    O VP1                  VP4 O
           cost=10 /:\                        /:\ cost=10
                  / : \----------------------/ : \
          +----+ /  :         cost=50          :  \ +----+
          |    |/   :     available-bw=2G      :   \|    |
          | R1 |    :                          :    | R2 |
          |    |\   :                          :   /|    |
          +----+ \  :  /--------------------\  :  / +----+
                  \ : /       cost=55        \ : /
            cost=5 \:/    available-bw=3G     \:/ cost=5
                    O VP2                  VP5 O
                    :                          :
                    :..........................:
]]></artwork></figure>

<t>If the information in the "detailed connectivity matrix" is not
   complete/accurate, we can have the following drawbacks:</t>

<t><list style="symbols">
  <t>If only the VP1-VP4 path with available bandwidth of 2 Gb/s and
cost 50 is reported, the client's PCE will fail to compute a 5
Gb/s path between routers R1 and R2, although this would be
feasible;</t>
  <t>If only the VP1-VP4 path with available bandwidth of 10 Gb/s and
cost 60 is reported, the client's PCE will compute, as optimal,
the 1 Gb/s path between R1 and R2 going through the VP2-VP5 path
within the optical domain while the optimal path would actually be
the one going thought the VP1-VP4 sub-path (with cost 50) within
the optical domain.  <vspace blankLines='1'/>
Reporting all the information, as in <xref target="poi-multi-path"/>, using the "detailed
 connectivity matrix", is quite challenging from a scalability
 perspective. The amount of this information is not just based on
 number of end points (which would scale as N-square), but also on
 many other parameters, including client rate, user
 constraints/policies for the service, e.g. max latency &lt; N ms, max
 cost, etc., exclusion policies to route around busy links, min
 Optical Signal to Noise Ratio (OSNR) margin, max pre-Forward Error
 Correction (FEC) Bit Error Rate (BER) etc. All these constraints
 could be different based on connectivity requirements.  <vspace blankLines='1'/>
It is also worth noting that the "connectivity matrix" has been
 originally defined in Wavelength Switched Optical Networks (WSON),
 <xref target="RFC7446"/>, to report the connectivity constrains of a physical node
 within the Wavelength Division Multiplexing (WDM) network: the
 information it contains is pretty "static" and therefore, once taken
 and stored in the TE data base, it can be always being considered
 valid and up-to-date in path computation request.  <vspace blankLines='1'/>
The "connectivity matrix" is sometimes confused with "optical reach
 table" that contain multiple (e.g. k-shortest) regen-free reachable
 paths for every A-Z node combination in the network. Optical reach
 tables can be calculated offline, utilizing vendor optical design and
 planning tools, and periodically uploaded to the Controller: these
 optical path reach tables are fairly static. However, to get the
 connectivity matrix, between any two sites, either a regen free path
 can be used, if one is available, or multiple regen free paths are
 concatenated to get from the source to the destination, which can be
 a very large combination. Additionally, when the optical path within
 optical domain needs to be computed, it can result in different paths
 based on input objective, constraints, and network conditions. In
 summary, even though "optical reach table" is fairly static, which
 regen free paths to build the connectivity matrix between any source
 and destination is very dynamic, and is done using very sophisticated
 routing algorithms.  <vspace blankLines='1'/>
Using the "basic connectivity matrix" with an abstract node to
 abstract the information regarding the connectivity constraints of an
 Optical domain, would make this information more "dynamic" since the
 connectivity constraints of an optical domain can change over time
 because some optical paths that are feasible at a given time may
 become unfeasible at a later time when e.g., another optical path is
 established.  <vspace blankLines='1'/>
The information in the "detailed connectivity matrix" is even more
 dynamic since the establishment of another optical path may change
 some of the parameters (e.g., delay or available bandwidth) in the
 "detailed connectivity matrix" while not changing the feasibility of
 the path.  <vspace blankLines='1'/>
There is therefore the need to keep the information in the "detailed
 connectivity matrix" updated which means that there another tradeoff
 between the accuracy (i.e., providing "all" the information that
 might be needed by the client's PCE) and having up-to-date
 information. The more the information is provided and the longer it
 takes to keep it up-to-date which increases the likelihood that the
 client's PCE computes paths using not updated information.  <vspace blankLines='1'/>
It seems therefore quite challenging to have a "detailed connectivity
 matrix" that provides accurate, scalable and updated information to
 allow the client's PCE to take optimal decisions by its own.  <vspace blankLines='1'/>
Considering the example in <xref target="poi-multi-path"/> with the approach defined in this
 document, the client, when it needs to set up an end-to-end path, it
 can request the Optical Domain Controller to compute a set of optimal
 paths (e.g., for VP1-VP4 and VP2-VP5) and take decisions based on the
 information received:</t>
  <t>When setting up a 5 Gb/s path between routers R1 and R2, the
Optical Domain Controller may report only the VP1-VP4 path as the
only feasible path: the Packet/Optical Coordinator can
successfully set up the end-to-end path passing though this
optical path;</t>
  <t>When setting up a 1 Gb/s path between routers R1 and R2, the
Optical Domain Controller (knowing that the path requires only 1
Gb/s) can report both the VP1-VP4 path, with cost 50, and the VP2-
VP5 path, with cost 65. The Packet/Optical Coordinator can then
compute the optimal path which is passing thought the VP1-VP4 sub-
path (with cost 50) within the optical domain.</t>
</list></t>

</section>
<section anchor="topo-abstraction"><name>TE topology abstraction</name>

<t>Using the TE topology model, as defined in <xref target="RFC8795"/>, the underlying
   controller can export to its client an abstract TE topology, composed
   by a set of TE nodes and TE links, representing the abstract view of
   the topology under its control.</t>

<t>For example, in the multi-domain TE network use case, described in
   <xref target="md-uc"/>, the TE Domain Controller 1 can export a TE topology
   encompassing the TE nodes A, B, C and D and the TE links
   interconnecting them. In a similar way, the TE Domain Controller 2
   can export a TE topology encompassing the TE nodes E, F, G and H and
   the TE links interconnecting them.</t>

<t>In this example, for simplicity reasons, each abstract TE node maps
   with each physical node, but this is not necessary.</t>

<t>In order to set up a multi-domain TE path (e.g., between nodes A and
   H), the Multi-Domain Controller can compute by its own an optimal
   end-to-end path based on the abstract TE topology information
   provided by the domain controllers. For example:</t>

<t><list style="symbols">
  <t>Multi-Domain Controller can compute, based on its own TED data,
the optimal multi-domain path being A-B-C-E-G-H, and then request
the TE Domain Controllers to set up the A-B-C and E-G-H intra-
domain paths</t>
  <t>But, during path set-up, the TE Domain Controller may find out
that A-B-C intra-domain path is not feasible (as discussed in
<xref target="md-uc"/>, in optical networks it is typical to have some paths
not being feasible due to optical constraints that are known only
by the Optical Domain Controller), while only the path A-B-D is
feasible</t>
  <t>So what the Multi-Domain Controller has computed is not good and
it needs to re-start the path computation from scratch  <vspace blankLines='1'/>
As discussed in <xref target="topo-aggregation"/>, providing more extensive abstract
information from the TE Domain Controllers to the Multi-Domain
Controller may lead to scalability problems.  <vspace blankLines='1'/>
In a sense this is similar to the problem of routing and wavelength
assignment within an optical domain. It is possible to do first
routing (step 1) and then wavelength assignment (step 2), but the
chances of ending up with a good path is low. Alternatively, it is
possible to do combined routing and wavelength assignment, which is
known to be a more optimal and effective way for optical path set-up.
Similarly, it is possible to first compute an abstract end-to-end
path within the Multi-Domain Controller (step 1) and then compute an
intra-domain path within each optical domain (step 2), but there are
more chances not to find a path or to get a suboptimal path than by
performing multiple per-domain path computations and then stitching
them together.</t>
</list></t>

</section>
<section anchor="topo-pc-complement"><name>Complementary use of the TE topology</name>

<t>As discussed in <xref target="md-uc"/>, there are some scalability issues with
   path computation requests in a multi-domain TE network with many TE
   domains, in terms of the number of requests to send to the TE Domain
   Controllers. It would therefore be worthwhile using the abstract TE
   topology information provided by the TE Domain Controllers to limit
   the number of requests.</t>

<t>An example can be described considering the multi-domain abstract TE
   topology shown in <xref target="fig-topo-many-domains"/>. In this example, an end-to-end TE path
   between domains A and F needs to be set up. The transit TE domain
   should be selected between domains B, C, D and E.</t>

<figure title="Multi-domain with many domains (Topology information)" anchor="fig-topo-many-domains"><artwork><![CDATA[
                          .........B.........
                          : _ _ _ _ _ _ _ _ :
                          :/               \:
                      +---O  NOT FEASIBLE   O---+
                cost=5|   :                 :   |
    ......A......     |   :.................:   |     ......F......
    :           :     |                         |     :           :
    :           O-----+   .........C.........   +-----O           :
    :           :         : /-------------\ :         :           :
    :           :         :/               \:         :           :
    :  cost<=20 O---------O   cost <= 30    O---------O cost<=20  :
    :          /: cost=5  :                 : cost=5  :\          :
    :  /------/ :         :.................:         : \------\  :
    : /         :                                     :         \ :
    :/ cost<=25 :         .........D.........         : cost<=25 \:
    O-----------O-------+ : /-------------\ : +-------O-----------O
    :\          : cost=5| :/               \: |cost=5 :          /:
    : \         :       +-O   cost <= 30    O-+       :         / :
    :  \------\ :         :                 :         : /------/  :
    : cost>=30 \:         :.................:         :/ cost>=30 :
    :           O-----+                         +-----O           :
    :...........:     |   .........E.........   |     :...........:
                      |   : /-------------\ :   |
                cost=5|   :/               \:   |cost=5
                      +---O   cost >= 30    O---+
                          :                 :
                          :.................:
]]></artwork></figure>

<t>The actual cost of each intra-domain path is not known a priori from
   the abstract topology information. The Multi-Domain Controller only
   knows, from the TE topology provided by the underlying domain
   controllers, the feasibility of some intra-domain paths and some
   upper-bound and/or lower-bound cost information. With this
   information, together with the cost of inter-domain links, the Multi-
   Domain Controller can understand by its own that:</t>

<t><list style="symbols">
  <t>Domain B cannot be selected as the path connecting domains A and F
is not feasible;</t>
  <t>Domain E cannot be selected as a transit domain since it is known
from the abstract topology information provided by domain
controllers that the cost of the multi-domain path A-E-F (which is
100, in the best case) will be always be higher than the cost of
the multi-domain paths A-D-F (which is 90, in the worst case) and
A-C-F (which is 80, in the worst case).  <vspace blankLines='1'/>
Therefore, the Multi-Domain Controller can understand by its own that
 the optimal multi-domain path could be either A-D-F or A-C-F but it
 cannot know which one of the two possible option actually provides
 the optimal end-to-end path.  <vspace blankLines='1'/>
The Multi-Domain Controller can therefore request path computation
 only to the TE Domain Controllers A, D, C and F (and not to all the
 possible TE Domain Controllers).</t>
</list></t>

<figure title="Multi-domain with many domains (Path Computation information)" anchor="fig-pc-many-domains"><artwork><![CDATA[
                          .........B.........
                          :                 :
                      +---O                 O---+
    ......A......     |   :.................:   |     ......F......
    :           :     |                         |     :           :
    :           O-----+   .........C.........   +-----O           :
    :           :         : /-------------\ :         :           :
    :           :         :/               \:         :           :
    :  cost=15  O---------O    cost = 25    O---------O  cost=10  :
    :          /: cost=5  :                 : cost=5  :\          :
    :  /------/ :         :.................:         : \------\  :
    : /         :                                     :         \ :
    :/ cost=10  :         .........D.........         : cost=15  \:
    O-----------O-------+ : /-------------\ : +-------O-----------O
    :           : cost=5| :/               \: |cost=5 :           :
    :           :       +-O    cost = 15    O-+       :           :
    :           :         :                 :         :           :
    :           :         :.................:         :           :
    :           O-----+                         +-----O           :
    :...........:     |   .........E.........   |     :...........:
                      |   :                 :   |
                      +---O                 O---+
                          :.................:
]]></artwork></figure>

<t>Based on these requests, the Multi-Domain Controller can know the
   actual cost of each intra-domain paths which belongs to potential
   optimal end-to-end paths, as shown in <xref target="fig-pc-many-domains"/>, and then compute the
   optimal end-to-end path (e.g., A-D-F, having total cost of 50,
   instead of A-C-F having a total cost of 70).</t>

</section>
</section>
<section anchor="rpc-motivation"><name>Path Computation RPC</name>

<t>The TE tunnel YANG data model, defined in <xref target="I-D.ietf-teas-yang-te"/>, can support
   the need to request path computation, as described in section 5.1.2
   of <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>This solution is stateful since the state of each created "compute-
   only" TE tunnel path needs to be maintained, in the YANG datastores
   (at least in the running datastore and operational datastore), and
   updated, when underlying network conditions change.</t>

<t>The RPC mechanism allows requesting path computation using a simple
   atomic operation, without creating any state in the YANG datastores,
   and it is the natural option/choice, especially with stateless PCE.</t>

<t>It is very useful to provide both the options of using an RPC as well
   as of setting up TE tunnel paths in "compute-only" mode. It is
   suggested to use the RPC as much as possible and to rely on
   "compute-only" TE tunnel paths, when really needed.</t>

<t>Using the RPC solution would imply that the underlying controller
   (e.g., a PNC) computes a path twice during the process to set up an
   LSP: at time T1, when its client (e.g., an MDSC) sends a path
   computation RPC request to it, and later, at time T2, when the same
   client (MDSC) creates a TE tunnel requesting the set-up of the LSP.
   The underlying assumption is that, if network conditions have not
   changed, the same path that has been computed at time T1 is also
   computed at time T2 by the underlying controller (e.g. PNC) and
   therefore the path that is set up at time T2 is exactly the same path
   that has been computed at time T1.</t>

<t>However, since the operation is stateless, there is no guarantee that
   the returned path would still be available when path set-up is
   requested: this does not cause major issues when the time between
   path computation and path set-up is short (especially if compared
   with the time that would be needed to update the information of a
   very detailed connectivity matrix).</t>

<t>In most of the cases, there is even no need to guarantee that the
   path that has been set up is the exactly same as the path that has
   been returned by path computation, especially if it has the same or
   even better metrics. Depending on the abstraction level applied by
   the server, the client may also not know the actual computed path.</t>

<t>The most important requirement is that the required global objectives
   (e.g., multi-domain path metrics and constraints) are met. For this
   reason a path verification phase is always necessary to verify that
   the actual path that has been set up meets the global objectives (for
   example in a multi-domain network, the resulting end-to-end path
   meets the required end-to-end metrics and constraints).</t>

<t>In most of the cases, even if the path being set up is not exactly
   the same as the path returned by path computation, its metrics and
   constraints are "good enough" and the path verification passes
   successfully. In the few corner cases where the path verification
   fails, it is possible repeat the whole process (path computation,
   path set-up and path verification).</t>

<t>In case it is required to set up at T2 exactly the same path computed
   at T1, the RPC solution should not be used and, instead, a "compute-
   only" TE tunnel path should be set up, allowing also notifications in
   case the computed path has been changed.</t>

<t>In this case, at time T1, the client (MDSC) creates a TE tunnel in a
   compute-only mode in the running datastore and later, at time T2,
   changes the configuration of that TE tunnel (not to be any more in a
   compute-only mode) to trigger the set-up of the LSP over the path
   which have been computed at time T1 and reported in the operational
   datastore.</t>

<t>It is worth noting that also using the "compute-only" TE tunnel path,
   although increasing the likelihood that the computed path is
   available at path set-up, does not guarantee that because
   notifications may not be reliable or delivered on time. Path
   verification is needed also in this case.</t>

<t>The solution based on "compute-only" TE tunnel path has also the
   following drawbacks:</t>

<t><list style="symbols">
  <t>Several messages required for any path computation</t>
  <t>Requires persistent storage in the underlying controller</t>
  <t>Need for garbage collection for stranded paths</t>
  <t>Process burden to detect changes on the computed paths in order to
provide notifications update</t>
</list></t>

<section anchor="temp-state"><name>Temporary reporting of the computed path state</name>

<t>This section describes an optional extension to the stateless
   behavior of the path computation RPC, where the underlying
   controller, after having received a path computation RPC request,
   maintains some "transient state" associated with the computed path,
   allowing the client to request the set-up of exactly that path, if
   still available.</t>

<t>This is similar to the "compute-only" TE tunnel path solution but, to
   avoid the drawbacks of the stateful approach, is leveraging the path
   computation RPC and the separation between configuration and
   operational datastore, as defined in the NMDA architecture <xref target="RFC8342"/>.</t>

<t>The underlying controller, after having computed a path, as requested
   by a path computation RPC, also creates a TE tunnel instance within
   the operational datastore, to store that computed path. This would be
   similar to a "compute-only" TE tunnel path, with the only difference
   that there is no associated TE tunnel instance within the running
   datastore.</t>

<t>Since the underlying controller stores in the operational datastore
   the computed path based on an abstract topology it exposes, it also
   remembers, internally, which is the actual native path (physical
   path), within its native topology (physical topology), associated
   with that compute-only TE tunnel instance.</t>

<t>Afterwards, the client (e.g., MDSC) can request the set-up of that
   specific path by creating a TE tunnel instance (not in compute-only
   mode) in the running datastore using the same tunnel-name of
   the existing TE tunnel in the operational datastore: this will
   trigger the underlying controller to set up that path, if still
   available.</t>

<t>There are still cases where the path being set up is not exactly the
   same as the path that has been computed:</t>

<t><list style="symbols">
  <t>When the tunnel is configured with path constraints which are not
compatible with the computed path;</t>
  <t>When the tunnel set-up is requested after the resources of the
computed path are no longer available;</t>
  <t>When the tunnel set-up is requested after the computed path is no
longer known (e.g. due to a server reboot) by the underlying
controller.  <vspace blankLines='1'/>
In all these cases, the underlying controller should compute and set
 up a new path.  <vspace blankLines='1'/>
Therefore the "path verification" phase, as described in <xref target="rpc-motivation"/>
 above, is always needed to check that the path that has been set up
 is still "good enough".  <vspace blankLines='1'/>
Since this new approach is not completely stateless, garbage
 collection is implemented using a timeout that, when it expires,
 triggers the removal of the computed path from the operational
 datastore. This operation is fully controlled by the underlying
 controller without the need for any action to be taken by the client
 that is not able to act on the operational datastore. The default
 value of this timeout is 10 minutes but a different value may be
 configured by the client.  <vspace blankLines='1'/>
In addition, it is possible for the client to tag each path
 computation request with a transaction-id allowing for a faster
 removal of all the paths associated with a transaction-id, without
 waiting for their timers to expire.  <vspace blankLines='1'/>
The underlying controller can remove from the operational datastore
 all the paths computed with a given transaction-id which have not
 been set up either when it receives a Path Delete RPC request for
 that transaction-id or, automatically, right after the set-up up of a
 path that has been previously computed with that transaction-id.  <vspace blankLines='1'/>
This possibility is useful when multiple paths are computed but, at
 most, only one is set up (e.g., in multi-domain path computation
 scenario scenarios). After the selected path has been set up (e.g, in
 one domain during multi-domain path set-up), all the other
 alternative computed paths can be automatically deleted by the
 underlying controller (since no longer needed). The client can also
 request, using the Path Delete RPC request, the underlying controller
 to remove all the computed paths, if none of them is going to be set
 up (e.g., in a transit domain not being selected by multi-domain path
 computation and so not being automatically deleted).  <vspace blankLines='1'/>
This approach is complimentary and not alternative to the timer which
 is always needed to avoid stranded computed paths being stored in the
 operational datastore when no path is set up and no explicit Path
 Delete RPC request is received.</t>
</list></t>

</section>
</section>
</section>
<section anchor="path-computation-and-optimization-for-multiple-paths"><name>Path computation and optimization for multiple paths</name>

<t>There are use cases, where it is advantageous to request path
   computation for a set of paths, through a network or through a
   network domain, using a single request <xref target="RFC5440"/>.</t>

<t>In this case, sending a single request for multiple path
   computations, instead of sending multiple requests for each path
   computation, would reduce the protocol overhead and it would consume
   less resources (e.g., threads in the client and server).</t>

<t>In the context of a typical multi-domain TE network, there could
   multiple choices for the ingress/egress points of a domain and the
   Multi-Domain Controller needs to request path computation between all
   the ingress/egress pairs to select the best pair. For example, in the
   example of <xref target="md-uc"/>, the Multi-Domain Controller needs to request
   the TE Network Controller 1 to compute the A-C and the A-D paths and
   to the TE Network Controller 2 to compute the E-H and the F-H paths.</t>

<t>It is also possible that the Multi-Domain Controller receives a
   request to set up a group of multiple end to end connections. The
   Multi-Domain Controller needs to request each TE domain Controller to
   compute multiple paths, one (or more) for each end to end connection.</t>

<t>There are also scenarios where it can be needed to request path
   computation for a set of paths in a synchronized fashion.</t>

<t>One example could be computing multiple diverse paths. Computing a
   set of diverse paths in an unsynchronized fashion, leads to the
   possibility of not being able to satisfy the diversity requirement.
   In this case, it is preferable to compute a sub-optimal primary path
   for which a diversely routed secondary path exists.</t>

<t>There are also scenarios where it is needed to request optimizing a
   set of paths using objective functions that apply to the whole set of
   paths, see <xref target="RFC5541"/>, e.g. to minimize the sum of the costs of all
   the computed paths in the set.</t>

</section>
<section anchor="yang-data-model-for-requesting-path-computation"><name>YANG data model for requesting Path Computation</name>

<t>This document define a YANG RPC to request path computation as an
   "augmentation" of tunnel-rpc, defined in <xref target="I-D.ietf-teas-yang-te"/>. This model
   provides the RPC input attributes that are needed to request path
   computation and the RPC output attributes that are needed to report
   the computed paths.</t>

<figure><artwork><![CDATA[
     augment /te:tunnels-path-compute/te:input/te:path-compute-info:
       +-- path-request* [request-id]
       |  +-- request-id                            uint32
       |  ...........

     augment /te:tunnels-path-compute/te:output/te:path-compute-result:
       +--ro response* [response-id]
          +--ro response-id                         uint32
          +--ro computed-paths-properties
          |  +--ro computed-path-properties* [k-index]
          |     +--ro k-index            uint8
          |     +--ro path-properties
          |     ...........
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>This model extensively re-uses the grouping defined in <xref target="I-D.ietf-teas-yang-te"/>
   and <xref target="RFC8776"/> to ensure maximal syntax and semantics commonality.</t>

<t>This YANG data model allows one RPC to include multiple path
   requests, each path request being identified by a request-id.
   Therefore, one RPC can return multiple responses, one for each path
   request, being identified by a response-id equal to the corresponding
   request-id. Each response reports one or more computed paths, as
   requested by the k-requested-paths attribute. By default, each
   response reports one computed path.</t>

<section anchor="synchronization-of-multiple-path-computation-requests"><name>Synchronization of multiple path computation requests</name>

<t>The YANG data model permits the synchronization of a set of multiple
   path requests (identified by specific request-id) all related to a
   "svec" container emulating the syntax of the Synchronization VECtor
   (SVEC) PCEP object, defined in <xref target="RFC5440"/>.</t>

<figure><artwork><![CDATA[
       +-- synchronization* []
          +-- svec
          |  +-- relaxable?           boolean
          |  +-- disjointness?        te-path-disjointness
          |  +-- request-id-number*   uint32
          +-- svec-constraints
          |  +-- path-metric-bound* [metric-type]
          |     +-- metric-type    identityref
          |     +-- upper-bound?   uint64
          +-- path-srlgs-lists
          |  +-- path-srlgs-list* [usage]
          |     +-- usage     identityref
          |     +-- values*   srlg
          +-- path-srlgs-names
          |  +-- path-srlgs-name* [usage]
          |     +-- usage    identityref
          |     +-- names*   string
          +-- exclude-objects
          |  +-- excludes* []
          |     +-- (type)?
          |        +--:(numbered-node-hop)
          |        |  +-- numbered-node-hop
          |        |     +-- node-id     te-node-id
          |        |     +-- hop-type?   te-hop-type
          |        +--:(numbered-link-hop)
          |        |  +-- numbered-link-hop
          |        |     +-- link-tp-id    te-tp-id
          |        |     +-- hop-type?     te-hop-type
          |        |     +-- direction?    te-link-direction
          |        +--:(unnumbered-link-hop)
          |        |  +-- unnumbered-link-hop
          |        |     +-- link-tp-id    te-tp-id
          |        |     +-- node-id       te-node-id
          |        |     +-- hop-type?     te-hop-type
          |        |     +-- direction?    te-link-direction
          |        +--:(as-number)
          |        |  +-- as-number-hop
          |        |     +-- as-number    inet:as-number
          |        |     +-- hop-type?    te-hop-type
          |        +--:(label)
          |           +-- label-hop
          |              +-- te-label
          |                 +-- (technology)?
          |                 |  +--:(generic)
          |                 |     +-- generic?
          |                 |             rt-types:generalized-label
          |                 +-- direction?       te-label-direction
          +-- optimizations
             +-- (algorithm)?
                +--:(metric) {te-types:path-optimization-metric}?
                |  +-- optimization-metric* [metric-type]
                |     +-- metric-type    identityref
                |     +-- weight?        uint8
                +--:(objective-function)
                         {te-types:path-optimization-objective-
   function}?
                   +-- objective-function
                      +-- objective-function-type?   identityref
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>The model, in addition to the metric types, defined in <xref target="RFC8776"/>,
   which can be applied to each individual path request, supports also
   additional metric types, which apply to a set of synchronized
   requests, as referenced in <xref target="RFC5541"/>. These additional metric types
   are defined by the following YANG identities:</t>

<t><list style="symbols">
  <t>svec-metric-type: base YANG identity from which cumulative metric
types identities are derived.</t>
  <t>svec-metric-cumul-te: cumulative TE cost metric type, as defined
in <xref target="RFC5541"/>.</t>
  <t>svec-metric-cumul-igp: cumulative IGP cost metric type, as defined
in <xref target="RFC5541"/>.</t>
  <t>svec-metric-cumul-hop: cumulative Hop metric type, representing
the cumulative version of the Hop metric type defined in
<xref target="RFC8776"/>.</t>
  <t>svec-metric-aggregate-bandwidth-consumption: aggregate bandwidth
consumption metric type, as defined in <xref target="RFC5541"/>.</t>
  <t>svec-metric-load-of-the-most-loaded-link: load of the most loaded
link metric type, as defined in <xref target="RFC5541"/>.</t>
</list></t>

</section>
<section anchor="returned-metric-values"><name>Returned metric values</name>

<t>This YANG data model provides a way to return the values of the
   metrics computed by the path computation in the output of RPC,
   together with other important information (e.g. srlg, affinities,
   explicit route), emulating the syntax of the "C" flag of the "METRIC"
   PCEP object <xref target="RFC5440"/>:</t>

<figure><artwork><![CDATA[
          |     +--ro path-properties
          |        +--ro path-metric* [metric-type]
          |        |  +--ro metric-type           identityref
          |        |  +--ro accumulative-value?   uint64
          |        +--ro path-affinities-values
          |        |  +--ro path-affinities-value* [usage]
          |        |     +--ro usage    identityref
          |        |     +--ro value?   admin-groups
          |        +--ro path-affinity-names
          |        |  +--ro path-affinity-name* [usage]
          |        |     +--ro usage            identityref
          |        |     +--ro affinity-name* [name]
          |        |        +--ro name    string
          |        +--ro path-srlgs-lists
          |        |  +--ro path-srlgs-list* [usage]
          |        |     +--ro usage     identityref
          |        |     +--ro values*   srlg
          |        +--ro path-srlgs-names
          |        |  +--ro path-srlgs-name* [usage]
          |        |     +--ro usage    identityref
          |        |     +--ro names*   string
          |        +--ro path-route-objects
          |        ...........
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>It also allows the client to request which information (metrics, srlg
   and/or affinities) should be returned:</t>

<figure><artwork><![CDATA[
       |  +-- request-id                            uint32
       |  ...........
       |  +-- requested-metrics* [metric-type]
       |  |  +-- metric-type    identityref
       |  +-- return-srlgs?                         boolean
       |  +-- return-affinities?                    boolean
       |  ...........
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>This feature is essential for path computation in a multi-domain TE
   network as described in <xref target="md-uc"/>. In this case, the metrics
   returned by a path computation requested to a given underlying
   controller must be used by the client to compute the best end-to-end
   path. If they are missing, the client cannot compare different paths
   calculated by the underlying controllers and choose the best one for
   the optimal end-to-end (e2e) path.</t>

</section>
<section anchor="multiple-paths-requests-for-the-same-te-tunnel"><name>Multiple Paths Requests for the same TE tunnel</name>

<t>The YANG data model allows including multiple requests for different
   paths intended to be used within the same tunnel or within different
   tunnels.</t>

<t>When multiple requested paths are intended to be used within the same
   tunnel (e.g., requesting path computation for the primary and
   secondary paths of a protected tunnel), the set of attributes that
   are intended to be configured on per-tunnel basis rather than on per-
   path basis are common to all these path requests. These attributes
   includes both attributes which can be configured only a per-tunnel
   basis (e.g., tunnel-name, source/destination TTP, encoding and
   switching-type) as well attributes which can be configured both on a
   per-tunnel and on a per-path basis (e.g., the te-bandwidth or the
   associations).</t>

<t>Therefore, a tunnel-attributes list is defined, within the path
   computation request RPC:</t>

<figure><artwork><![CDATA[
       +-- tunnel-attributes* [tunnel-name]
       |  +-- tunnel-name               string
       |  +-- encoding?                 identityref
       |  +-- switching-type?           identityref
       |  ...........
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>The path requests that are intended to be used within the same tunnel
   should reference the same entry in the tunnel-attributes list. This
   allows:</t>

<t><list style="symbols">
  <t>avoiding repeating the same set of per-tunnel parameters on
multiple requested paths;</t>
  <t>the server to understand what attributes are intended to be
configured on a per-tunnel basis (e.g., the te-bandwidth
configured in the tunnel-attributes) and what attributes are
intended to be configured on a per-path basis(e.g., the te-
bandwidth configured in the path-request). This could be useful
especially when the server also creates a TE tunnel instance
within the operational datastore to report the computed paths, as
described in <xref target="temp-state"/>: in this case, the tunnel-name is also
used as the suggested name for that TE tunnel instance.  <vspace blankLines='1'/>
The YANG data model allows also including requests for paths intended
 to modify existing tunnels (e.g., adding a protection path for an
 existing un-protected tunnel). In this case, the per-tunnel
 attributes are already provided in an existing TE tunnel instance and
 do not need to be re-configured in the path computation request RPC.
 Therefore, these requests should reference an existing TE tunnel
 instance.  <vspace blankLines='1'/>
It is also possible to request computing paths without indicating in
 which tunnel they are intended to be used (e.g., in case of an
 unprotected tunnel). In this case, the per-tunnel attributes could be
 provided together with the per-path attributes in the path request,
 without using the tunnel-attributes list.  <vspace blankLines='1'/>
The choices below are defined to distinguish the cases above:</t>
  <t>whether the per-tunnel attributes are configured by reference
(providing a leafref), to:  <list style="symbols">
      <t>either a TE tunnel instance, if it exists;</t>
      <t>or to an entry of the tunnel-attributes list, if the TE tunnel
instance does not exist;</t>
    </list></t>
  <t>or by value, providing the set of tunnel attributes within the
path request:</t>
</list></t>

<figure><artwork><![CDATA[
       |  +-- (tunnel-attributes)?
       |  |  +--:(reference)
       |  |  |  +-- tunnel-reference
       |  |  |     +-- (tunnel-exist)?
       |  |  |     |  +--:(tunnel-ref)
       |  |  |     |  |  +-- tunnel-ref                te:tunnel-ref
       |  |  |     |  +--:(tunnel-attributes-ref)
       |  |  |     |     +-- tunnel-attributes-ref     leafref
       |  |  ...........
       |  |  +--:(value)
       |  |     +-- tunnel-name?                    string
       |  |     ...........
       |  |     +-- encoding?                       identityref
       |  |     +-- switching-type?                 identityref
       |  |     ...........
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<section anchor="tunnel-attributes-specified-by-value"><name>Tunnel attributes specified by value</name>

<t>The (value) case provides the set of attributes that are configured
   only on per-tunnel basis (e.g., tunnel-name, source/destination TTP,
   encoding and switching-type).</t>

<t>In this case, it is assumed that the requested path will be the only
   path within a tunnel.</t>

<t>If the requested path is a transit segment of a multi-domain end-to-
   end path, it can be of any type (primary, secondary, reverse-primary
   or reverse-secondary), as specified by the (path-role) choice:</t>

<figure><artwork><![CDATA[
       |  |     +-- (path-role)?
       |  |     |  +--:(primary-path)
       |  |     |  +--:(secondary-path)
       |  |     |  |  +-- secondary-path!
       |  |     |  |     +-- primary-path-name?   string
       |  |     |  +--:(primary-reverse-path)
       |  |     |  |  +-- primary-reverse-path!
       |  |     |  |     +-- primary-path-name?   string
       |  |     |  +--:(secondary-reverse-path)
       |  |     |     +-- secondary-reverse-path!
       |  |     |        +-- primary-path-name?           string
       |  |     |        +-- primary-reverse-path-name?   string
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>In all the other cases, the requested path can only be a primary
   path.</t>

<t>The secondary-path, the primary-reverse-path and the secondary-
   reverse-path are presence container used to indicate the role of the
   path: by default, the path is assumed to be a primary path.</t>

<t>They optionally can contain the name of the primary-path under which
   the requested path could be associated within the YANG tree structure
   defined in <xref target="I-D.ietf-teas-yang-te"/>, which could be useful when the server also
   creates a TE tunnel instance within the operational datastore to
   report the computed paths, as described in <xref target="temp-state"/>: in this
   case, the tunnel-name and the path names are also used as the
   suggested name for that TE tunnel and path instances.</t>

</section>
<section anchor="tunnel-attributes-specified-by-reference"><name>Tunnel attributes specified by reference</name>

<t>The (reference) case provides the information needed to associate
   multiple path requests that are intended to be used within the same
   tunnel.</t>

<t>In order to indicate the role of the path being requested within the
   intended tunnel (e.g., primary or secondary path), the (path-role)
   choice is defined:</t>

<figure><artwork><![CDATA[
       |  |  |     +-- (path-role)
       |  |  |        +--:(primary-path)
       |  |  |        |  +-- primary-path!
       |  |  |        |     ...........
       |  |  |        +--:(secondary-path)
       |  |  |        |  +-- secondary-path
       |  |  |        |     ...........
       |  |  |        +--:(primary-reverse-path)
       |  |  |        |  +-- primary-reverse-path
       |  |  |        |     ...........
       |  |  |        +--:(secondary-reverse-path)
       |  |  |           +-- secondary-reverse-path
       |  |  |              ...........
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>The primary-path is a presence container used to indicate that the
   requested path is intended to be used as a primary path. It can also
   contain some attributes which are configured only on primary paths
   (e.g., the k-requested-paths).</t>

<t>The secondary-path container indicates that the requested path is
   intended to be used as a secondary path and it contains at least
   references to one or more primary paths which can use it as a
   candidate secondary path:</t>

<figure><artwork><![CDATA[
       |  |  |        |  +-- secondary-path
       |  |  |        |     ...........
       |  |  |        |     +-- primary-path-ref* []
       |  |  |        |        +-- (primary-path-exist)?
       |  |  |        |           +--:(path-ref)
       |  |  |        |           |  +-- primary-path-ref    leafref
       |  |  |        |           +--:(path-request-ref)
       |  |  |        |              +-- path-request-ref    leafref
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>A requested secondary path can reference any requested primary paths,
   and, in case they are intended to be used within an existing TE
   tunnel, it could also reference any existing primary-paths.</t>

<t>The secondary-path container can also contain some attributes which
   are configured only on secondary paths (e.g., the protection-type).</t>

<t>The primary-reverse-path container indicates that the requested path
   is intended to be used as a primary reverse path and it contains only
   the reference to the primary path which is intended to use it as a
   reverse path:</t>

<figure><artwork><![CDATA[
       |  |  |        |  +-- primary-reverse-path
       |  |  |        |     +-- (primary-path-exist)?
       |  |  |        |        +--:(path-ref)
       |  |  |        |        |  +-- primary-path-ref    leafref
       |  |  |        |        +--:(path-request-ref)
       |  |  |        |           +-- path-request-ref    leafref
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>A requested primary reverse path can reference either a requested
   primary path, or, in case it is intended to be used within an
   existing TE tunnel, an existing primary-path.</t>

<t>The secondary-reverse-path container indicates that the requested
   path is intended to be used as a secondary reverse path and it
   contains at least references to one or more primary paths, whose
   primary reverse path can use it as a candidate secondary reverse
   path:</t>

<figure><artwork><![CDATA[
       |  |  |           +-- secondary-reverse-path
       |  |  |              ...........
       |  |  |              +-- primary-reverse-path-ref* []
       |  |  |                 +-- (primary-reverse-path-exist)?
       |  |  |                    +--:(path-ref)
       |  |  |                    |  +-- primary-path-ref    leafref
       |  |  |                    +--:(path-request-ref)
       |  |  |                       +-- path-request-ref    leafref
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>A requested secondary reverse path can reference any requested
   primary paths, and, in case they are intended to be used within an
   existing TE tunnel, it could reference also existing primary-paths.</t>

<t>The secondary-reverse-path container can also contain some attributes
   which are configured only on secondary reverse paths (e.g., the
   protection-type).</t>

<t>In case the requested path is a transit segment of a multi-domain
   end-to-end path, the primary-path may not be needed to be
   setup/computed. However, the request for path computation of a
   secondary-path or a primary-reverse or of a secondary-reverse-path
   requires that the primary-path exists or it is requested within the
   same RPC request. In the latter case, the path request for the
   primary-path should have an empty ERO to indicate to the server that
   path computation is not requested and no path properties will
   therefore be returned in the RPC response.</t>

</section>
</section>
<section anchor="multi-layer-path-computation"><name>Multi-Layer Path Computation</name>

<t>The models supports requesting multi-layer path computation following
   the same approach based on dependency tunnels, as defined in <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>The tunnel-attributes of a given client-layer path request can
   reference server-layer TE tunnels which can already exist in the YANG
   datastore or be specified in the tunnel-attributes list, within the
   same RPC request:</t>

<figure><artwork><![CDATA[
       |     +-- dependency-tunnels
       |     |  +-- dependency-tunnel* [name]
       |     |  |  +-- name              -> /te:te/tunnels/tunnel/name
       |     |  |  +-- encoding?         identityref
       |     |  |  +-- switching-type?   identityref
       |     |  +-- dependency-tunnel-attributes* [name]
       |     |     +-- name              leafref
       |     |     +-- encoding?         identityref
       |     |     +-- switching-type?   identityref
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>In a similar way as in <xref target="I-D.ietf-teas-yang-te"/>, the server-layer tunnel
   attributes should provide the information of what would be the
   dynamic link in the client layer topology supported by that tunnel,
   if instantiated:</t>

<figure><artwork><![CDATA[
       |     +-- hierarchical-link
       |        +-- local-te-node-id?         te-types:te-node-id
       |        +-- local-te-link-tp-id?      te-types:te-tp-id
       |        +-- remote-te-node-id?        te-types:te-node-id
       |        +-- te-topology-identifier
       |           +-- provider-id?   te-global-id
       |           +-- client-id?     te-global-id
       |           +-- topology-id?   te-topology-id
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>It is worth noting that since path computation RPC is stateless, the
   dynamic hierarchical links configured for the server-layer tunnel
   attributes cannot be used for path computation of any client-layer
   path unless explicitly referenced in the dependency-tunnel-attributes
   list within the same RPC request.</t>

</section>
</section>
<section anchor="yang-data-model-for-te-path-computation"><name>YANG data model for TE path computation</name>

<section anchor="pc-tree"><name>Tree diagram</name>

<t><xref target="fig-pc-tree"/> below shows the tree diagram of the YANG data model defined
   in module ietf-te-path-computation.yang, defined in <xref target="pc-yang"/>.</t>

<figure title="TE path computation tree diagram" anchor="fig-pc-tree"><artwork><![CDATA[
module: ietf-te-path-computation

  augment /te:tunnels-path-compute/te:input/te:path-compute-info:
    +-- path-request* [request-id]
    |  +-- request-id                            uint32
    |  +-- (tunnel-attributes)?
    |  |  +--:(reference)
    |  |  |  +-- tunnel-reference
    |  |  |     +-- (tunnel-exist)?
    |  |  |     |  +--:(tunnel-ref)
    |  |  |     |  |  +-- tunnel-ref                te:tunnel-ref
    |  |  |     |  +--:(tunnel-attributes-ref)
    |  |  |     |     +-- tunnel-attributes-ref     leafref
    |  |  |     +-- path-name?                      string
    |  |  |     +-- (path-role)
    |  |  |        +--:(primary-path)
    |  |  |        |  +-- primary-path!
    |  |  |        |     +-- preference?          uint8
    |  |  |        |     +-- k-requested-paths?   uint8
    |  |  |        +--:(secondary-path)
    |  |  |        |  +-- secondary-path
    |  |  |        |     +-- preference?           uint8
    |  |  |        |     +-- protection-type?      identityref
    |  |  |        |     +-- restoration-type?     identityref
    |  |  |        |     +-- restoration-scheme?   identityref
    |  |  |        |     +-- primary-path-ref* []
    |  |  |        |        +-- (primary-path-exist)?
    |  |  |        |           +--:(path-ref)
    |  |  |        |           |  +-- primary-path-ref    leafref
    |  |  |        |           +--:(path-request-ref)
    |  |  |        |              +-- path-request-ref    leafref
    |  |  |        +--:(primary-reverse-path)
    |  |  |        |  +-- primary-reverse-path
    |  |  |        |     +-- (primary-path-exist)?
    |  |  |        |        +--:(path-ref)
    |  |  |        |        |  +-- primary-path-ref    leafref
    |  |  |        |        +--:(path-request-ref)
    |  |  |        |           +-- path-request-ref    leafref
    |  |  |        +--:(secondary-reverse-path)
    |  |  |           +-- secondary-reverse-path
    |  |  |              +-- preference?                 uint8
    |  |  |              +-- protection-type?            identityref
    |  |  |              +-- restoration-type?           identityref
    |  |  |              +-- restoration-scheme?         identityref
    |  |  |              +-- primary-reverse-path-ref* []
    |  |  |                 +-- (primary-reverse-path-exist)?
    |  |  |                    +--:(path-ref)
    |  |  |                    |  +-- primary-path-ref    leafref
    |  |  |                    +--:(path-request-ref)
    |  |  |                       +-- path-request-ref    leafref
    |  |  +--:(value)
    |  |     +-- tunnel-name?                    string
    |  |     +-- path-name?                      string
    |  |     +-- (path-role)?
    |  |     |  +--:(primary-path)
    |  |     |  +--:(secondary-path)
    |  |     |  |  +-- secondary-path!
    |  |     |  |     +-- primary-path-name?   string
    |  |     |  +--:(primary-reverse-path)
    |  |     |  |  +-- primary-reverse-path!
    |  |     |  |     +-- primary-path-name?   string
    |  |     |  +--:(secondary-reverse-path)
    |  |     |     +-- secondary-reverse-path!
    |  |     |        +-- primary-path-name?           string
    |  |     |        +-- primary-reverse-path-name?   string
    |  |     +-- k-requested-paths?              uint8
    |  |     +-- encoding?                       identityref
    |  |     +-- switching-type?                 identityref
    |  |     +-- source?                         te-types:te-node-id
    |  |     +-- destination?                    te-types:te-node-id
    |  |     +-- src-tunnel-tp-id?               binary
    |  |     +-- dst-tunnel-tp-id?               binary
    |  |     +-- bidirectional?                  boolean
    |  |     +-- te-topology-identifier
    |  |        +-- provider-id?   te-global-id
    |  |        +-- client-id?     te-global-id
    |  |        +-- topology-id?   te-topology-id
    |  +-- association-objects
    |  |  +-- association-object* [association-key]
    |  |  |  +-- association-key    string
    |  |  |  +-- type?              identityref
    |  |  |  +-- id?                uint16
    |  |  |  +-- source
    |  |  |     +-- id?     te-gen-node-id
    |  |  |     +-- type?   enumeration
    |  |  +-- association-object-extended* [association-key]
    |  |     +-- association-key    string
    |  |     +-- type?              identityref
    |  |     +-- id?                uint16
    |  |     +-- source
    |  |     |  +-- id?     te-gen-node-id
    |  |     |  +-- type?   enumeration
    |  |     +-- global-source?     uint32
    |  |     +-- extended-id?       yang:hex-string
    |  +-- optimizations
    |  |  +-- (algorithm)?
    |  |     +--:(metric) {path-optimization-metric}?
    |  |     |  +-- optimization-metric* [metric-type]
    |  |     |  |  +-- metric-type                       identityref
    |  |     |  |  +-- weight?                           uint8
    |  |     |  |  +-- explicit-route-exclude-objects
    |  |     |  |  |  +-- route-object-exclude-object* [index]
    |  |     |  |  |     +-- index                        uint32
    |  |     |  |  |     +-- (type)?
    |  |     |  |  |        +--:(numbered-node-hop)
    |  |     |  |  |        |  +-- numbered-node-hop
    |  |     |  |  |        |     +-- node-id     te-node-id
    |  |     |  |  |        |     +-- hop-type?   te-hop-type
    |  |     |  |  |        +--:(numbered-link-hop)
    |  |     |  |  |        |  +-- numbered-link-hop
    |  |     |  |  |        |     +-- link-tp-id    te-tp-id
    |  |     |  |  |        |     +-- hop-type?     te-hop-type
    |  |     |  |  |        |     +-- direction?    te-link-direction
    |  |     |  |  |        +--:(unnumbered-link-hop)
    |  |     |  |  |        |  +-- unnumbered-link-hop
    |  |     |  |  |        |     +-- link-tp-id    te-tp-id
    |  |     |  |  |        |     +-- node-id       te-node-id
    |  |     |  |  |        |     +-- hop-type?     te-hop-type
    |  |     |  |  |        |     +-- direction?    te-link-direction
    |  |     |  |  |        +--:(as-number)
    |  |     |  |  |        |  +-- as-number-hop
    |  |     |  |  |        |     +-- as-number    inet:as-number
    |  |     |  |  |        |     +-- hop-type?    te-hop-type
    |  |     |  |  |        +--:(label)
    |  |     |  |  |        |  +-- label-hop
    |  |     |  |  |        |     +-- te-label
    |  |     |  |  |        |        +-- (technology)?
    |  |     |  |  |        |        |  +--:(generic)
    |  |     |  |  |        |        |     +-- generic?
    |  |     |  |  |        |        |             rt-types:generalized-label
    |  |     |  |  |        |        +-- direction?
    |  |     |  |  |        |                te-label-direction
    |  |     |  |  |        +--:(srlg)
    |  |     |  |  |           +-- srlg
    |  |     |  |  |              +-- srlg?   uint32
    |  |     |  |  +-- explicit-route-include-objects
    |  |     |  |     +-- route-object-include-object* [index]
    |  |     |  |        +-- index                        uint32
    |  |     |  |        +-- (type)?
    |  |     |  |           +--:(numbered-node-hop)
    |  |     |  |           |  +-- numbered-node-hop
    |  |     |  |           |     +-- node-id     te-node-id
    |  |     |  |           |     +-- hop-type?   te-hop-type
    |  |     |  |           +--:(numbered-link-hop)
    |  |     |  |           |  +-- numbered-link-hop
    |  |     |  |           |     +-- link-tp-id    te-tp-id
    |  |     |  |           |     +-- hop-type?     te-hop-type
    |  |     |  |           |     +-- direction?    te-link-direction
    |  |     |  |           +--:(unnumbered-link-hop)
    |  |     |  |           |  +-- unnumbered-link-hop
    |  |     |  |           |     +-- link-tp-id    te-tp-id
    |  |     |  |           |     +-- node-id       te-node-id
    |  |     |  |           |     +-- hop-type?     te-hop-type
    |  |     |  |           |     +-- direction?    te-link-direction
    |  |     |  |           +--:(as-number)
    |  |     |  |           |  +-- as-number-hop
    |  |     |  |           |     +-- as-number    inet:as-number
    |  |     |  |           |     +-- hop-type?    te-hop-type
    |  |     |  |           +--:(label)
    |  |     |  |              +-- label-hop
    |  |     |  |                 +-- te-label
    |  |     |  |                    +-- (technology)?
    |  |     |  |                    |  +--:(generic)
    |  |     |  |                    |     +-- generic?
    |  |     |  |                    |             rt-types:generalized-label
    |  |     |  |                    +-- direction?
    |  |     |  |                            te-label-direction
    |  |     |  +-- tiebreakers
    |  |     |     +-- tiebreaker* [tiebreaker-type]
    |  |     |        +-- tiebreaker-type    identityref
    |  |     +--:(objective-function)
    |  |              {path-optimization-objective-function}?
    |  |        +-- objective-function
    |  |           +-- objective-function-type?   identityref
    |  +-- named-path-constraint?                leafref
    |  |       {te-types:named-path-constraints}?
    |  +-- te-bandwidth
    |  |  +-- (technology)?
    |  |     +--:(generic)
    |  |        +-- generic?   te-bandwidth
    |  +-- link-protection?                      identityref
    |  +-- setup-priority?                       uint8
    |  +-- hold-priority?                        uint8
    |  +-- signaling-type?                       identityref
    |  +-- path-metric-bounds
    |  |  +-- path-metric-bound* [metric-type]
    |  |     +-- metric-type    identityref
    |  |     +-- upper-bound?   uint64
    |  +-- path-affinities-values
    |  |  +-- path-affinities-value* [usage]
    |  |     +-- usage    identityref
    |  |     +-- value?   admin-groups
    |  +-- path-affinity-names
    |  |  +-- path-affinity-name* [usage]
    |  |     +-- usage            identityref
    |  |     +-- affinity-name* [name]
    |  |        +-- name    string
    |  +-- path-srlgs-lists
    |  |  +-- path-srlgs-list* [usage]
    |  |     +-- usage     identityref
    |  |     +-- values*   srlg
    |  +-- path-srlgs-names
    |  |  +-- path-srlgs-name* [usage]
    |  |     +-- usage    identityref
    |  |     +-- names*   string
    |  +-- disjointness?                         te-path-disjointness
    |  +-- explicit-route-objects-always
    |  |  +-- route-object-exclude-always* [index]
    |  |  |  +-- index                        uint32
    |  |  |  +-- (type)?
    |  |  |     +--:(numbered-node-hop)
    |  |  |     |  +-- numbered-node-hop
    |  |  |     |     +-- node-id     te-node-id
    |  |  |     |     +-- hop-type?   te-hop-type
    |  |  |     +--:(numbered-link-hop)
    |  |  |     |  +-- numbered-link-hop
    |  |  |     |     +-- link-tp-id    te-tp-id
    |  |  |     |     +-- hop-type?     te-hop-type
    |  |  |     |     +-- direction?    te-link-direction
    |  |  |     +--:(unnumbered-link-hop)
    |  |  |     |  +-- unnumbered-link-hop
    |  |  |     |     +-- link-tp-id    te-tp-id
    |  |  |     |     +-- node-id       te-node-id
    |  |  |     |     +-- hop-type?     te-hop-type
    |  |  |     |     +-- direction?    te-link-direction
    |  |  |     +--:(as-number)
    |  |  |     |  +-- as-number-hop
    |  |  |     |     +-- as-number    inet:as-number
    |  |  |     |     +-- hop-type?    te-hop-type
    |  |  |     +--:(label)
    |  |  |        +-- label-hop
    |  |  |           +-- te-label
    |  |  |              +-- (technology)?
    |  |  |              |  +--:(generic)
    |  |  |              |     +-- generic?
    |  |  |              |             rt-types:generalized-label
    |  |  |              +-- direction?       te-label-direction
    |  |  +-- route-object-include-exclude* [index]
    |  |     +-- explicit-route-usage?        identityref
    |  |     +-- index                        uint32
    |  |     +-- (type)?
    |  |        +--:(numbered-node-hop)
    |  |        |  +-- numbered-node-hop
    |  |        |     +-- node-id     te-node-id
    |  |        |     +-- hop-type?   te-hop-type
    |  |        +--:(numbered-link-hop)
    |  |        |  +-- numbered-link-hop
    |  |        |     +-- link-tp-id    te-tp-id
    |  |        |     +-- hop-type?     te-hop-type
    |  |        |     +-- direction?    te-link-direction
    |  |        +--:(unnumbered-link-hop)
    |  |        |  +-- unnumbered-link-hop
    |  |        |     +-- link-tp-id    te-tp-id
    |  |        |     +-- node-id       te-node-id
    |  |        |     +-- hop-type?     te-hop-type
    |  |        |     +-- direction?    te-link-direction
    |  |        +--:(as-number)
    |  |        |  +-- as-number-hop
    |  |        |     +-- as-number    inet:as-number
    |  |        |     +-- hop-type?    te-hop-type
    |  |        +--:(label)
    |  |        |  +-- label-hop
    |  |        |     +-- te-label
    |  |        |        +-- (technology)?
    |  |        |        |  +--:(generic)
    |  |        |        |     +-- generic?
    |  |        |        |             rt-types:generalized-label
    |  |        |        +-- direction?       te-label-direction
    |  |        +--:(srlg)
    |  |           +-- srlg
    |  |              +-- srlg?   uint32
    |  +-- path-in-segment!
    |  |  +-- label-restrictions
    |  |     +-- label-restriction* [index]
    |  |        +-- restriction?    enumeration
    |  |        +-- index           uint32
    |  |        +-- label-start
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-end
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-step
    |  |        |  +-- (technology)?
    |  |        |     +--:(generic)
    |  |        |        +-- generic?   int32
    |  |        +-- range-bitmap?   yang:hex-string
    |  +-- path-out-segment!
    |  |  +-- label-restrictions
    |  |     +-- label-restriction* [index]
    |  |        +-- restriction?    enumeration
    |  |        +-- index           uint32
    |  |        +-- label-start
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-end
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-step
    |  |        |  +-- (technology)?
    |  |        |     +--:(generic)
    |  |        |        +-- generic?   int32
    |  |        +-- range-bitmap?   yang:hex-string
    |  +-- requested-metrics* [metric-type]
    |  |  +-- metric-type    identityref
    |  +-- return-srlgs?                         boolean
    |  +-- return-affinities?                    boolean
    |  +-- requested-state!
    |     +-- timer?            uint16
    |     +-- transaction-id?   string
    +-- tunnel-attributes* [tunnel-name]
    |  +-- tunnel-name               string
    |  +-- encoding?                 identityref
    |  +-- switching-type?           identityref
    |  +-- source?                   te-types:te-node-id
    |  +-- destination?              te-types:te-node-id
    |  +-- src-tunnel-tp-id?         binary
    |  +-- dst-tunnel-tp-id?         binary
    |  +-- bidirectional?            boolean
    |  +-- association-objects
    |  |  +-- association-object* [association-key]
    |  |  |  +-- association-key    string
    |  |  |  +-- type?              identityref
    |  |  |  +-- id?                uint16
    |  |  |  +-- source
    |  |  |     +-- id?     te-gen-node-id
    |  |  |     +-- type?   enumeration
    |  |  +-- association-object-extended* [association-key]
    |  |     +-- association-key    string
    |  |     +-- type?              identityref
    |  |     +-- id?                uint16
    |  |     +-- source
    |  |     |  +-- id?     te-gen-node-id
    |  |     |  +-- type?   enumeration
    |  |     +-- global-source?     uint32
    |  |     +-- extended-id?       yang:hex-string
    |  +-- protection-type?          identityref
    |  +-- restoration-type?         identityref
    |  +-- restoration-scheme?       identityref
    |  +-- te-topology-identifier
    |  |  +-- provider-id?   te-global-id
    |  |  +-- client-id?     te-global-id
    |  |  +-- topology-id?   te-topology-id
    |  +-- te-bandwidth
    |  |  +-- (technology)?
    |  |     +--:(generic)
    |  |        +-- generic?   te-bandwidth
    |  +-- link-protection?          identityref
    |  +-- setup-priority?           uint8
    |  +-- hold-priority?            uint8
    |  +-- signaling-type?           identityref
    |  +-- hierarchy
    |     +-- dependency-tunnels
    |     |  +-- dependency-tunnel* [name]
    |     |  |  +-- name              -> /te:te/tunnels/tunnel/name
    |     |  |  +-- encoding?         identityref
    |     |  |  +-- switching-type?   identityref
    |     |  +-- dependency-tunnel-attributes* [name]
    |     |     +-- name              leafref
    |     |     +-- encoding?         identityref
    |     |     +-- switching-type?   identityref
    |     +-- hierarchical-link
    |        +-- local-te-node-id?         te-types:te-node-id
    |        +-- local-te-link-tp-id?      te-types:te-tp-id
    |        +-- remote-te-node-id?        te-types:te-node-id
    |        +-- te-topology-identifier
    |           +-- provider-id?   te-global-id
    |           +-- client-id?     te-global-id
    |           +-- topology-id?   te-topology-id
    +-- synchronization* []
       +-- svec
       |  +-- relaxable?           boolean
       |  +-- disjointness?        te-path-disjointness
       |  +-- request-id-number*   uint32
       +-- svec-constraints
       |  +-- path-metric-bound* [metric-type]
       |     +-- metric-type    identityref
       |     +-- upper-bound?   uint64
       +-- path-srlgs-lists
       |  +-- path-srlgs-list* [usage]
       |     +-- usage     identityref
       |     +-- values*   srlg
       +-- path-srlgs-names
       |  +-- path-srlgs-name* [usage]
       |     +-- usage    identityref
       |     +-- names*   string
       +-- exclude-objects
       |  +-- excludes* []
       |     +-- (type)?
       |        +--:(numbered-node-hop)
       |        |  +-- numbered-node-hop
       |        |     +-- node-id     te-node-id
       |        |     +-- hop-type?   te-hop-type
       |        +--:(numbered-link-hop)
       |        |  +-- numbered-link-hop
       |        |     +-- link-tp-id    te-tp-id
       |        |     +-- hop-type?     te-hop-type
       |        |     +-- direction?    te-link-direction
       |        +--:(unnumbered-link-hop)
       |        |  +-- unnumbered-link-hop
       |        |     +-- link-tp-id    te-tp-id
       |        |     +-- node-id       te-node-id
       |        |     +-- hop-type?     te-hop-type
       |        |     +-- direction?    te-link-direction
       |        +--:(as-number)
       |        |  +-- as-number-hop
       |        |     +-- as-number    inet:as-number
       |        |     +-- hop-type?    te-hop-type
       |        +--:(label)
       |           +-- label-hop
       |              +-- te-label
       |                 +-- (technology)?
       |                 |  +--:(generic)
       |                 |     +-- generic?
       |                 |             rt-types:generalized-label
       |                 +-- direction?       te-label-direction
       +-- optimizations
          +-- (algorithm)?
             +--:(metric) {te-types:path-optimization-metric}?
             |  +-- optimization-metric* [metric-type]
             |     +-- metric-type    identityref
             |     +-- weight?        uint8
             +--:(objective-function)
                      {te-types:path-optimization-objective-function}?
                +-- objective-function
                   +-- objective-function-type?   identityref
  augment /te:tunnels-path-compute/te:output/te:path-compute-result:
    +--ro response* [response-id]
       +--ro response-id                         uint32
       +--ro computed-paths-properties
       |  +--ro computed-path-properties* [k-index]
       |     +--ro k-index            uint8
       |     +--ro path-properties
       |        +--ro path-metric* [metric-type]
       |        |  +--ro metric-type           identityref
       |        |  +--ro accumulative-value?   uint64
       |        +--ro path-affinities-values
       |        |  +--ro path-affinities-value* [usage]
       |        |     +--ro usage    identityref
       |        |     +--ro value?   admin-groups
       |        +--ro path-affinity-names
       |        |  +--ro path-affinity-name* [usage]
       |        |     +--ro usage            identityref
       |        |     +--ro affinity-name* [name]
       |        |        +--ro name    string
       |        +--ro path-srlgs-lists
       |        |  +--ro path-srlgs-list* [usage]
       |        |     +--ro usage     identityref
       |        |     +--ro values*   srlg
       |        +--ro path-srlgs-names
       |        |  +--ro path-srlgs-name* [usage]
       |        |     +--ro usage    identityref
       |        |     +--ro names*   string
       |        +--ro path-route-objects
       |        |  +--ro path-route-object* [index]
       |        |     +--ro index                        uint32
       |        |     +--ro (type)?
       |        |        +--:(numbered-node-hop)
       |        |        |  +--ro numbered-node-hop
       |        |        |     +--ro node-id     te-node-id
       |        |        |     +--ro hop-type?   te-hop-type
       |        |        +--:(numbered-link-hop)
       |        |        |  +--ro numbered-link-hop
       |        |        |     +--ro link-tp-id    te-tp-id
       |        |        |     +--ro hop-type?     te-hop-type
       |        |        |     +--ro direction?    te-link-direction
       |        |        +--:(unnumbered-link-hop)
       |        |        |  +--ro unnumbered-link-hop
       |        |        |     +--ro link-tp-id    te-tp-id
       |        |        |     +--ro node-id       te-node-id
       |        |        |     +--ro hop-type?     te-hop-type
       |        |        |     +--ro direction?    te-link-direction
       |        |        +--:(as-number)
       |        |        |  +--ro as-number-hop
       |        |        |     +--ro as-number    inet:as-number
       |        |        |     +--ro hop-type?    te-hop-type
       |        |        +--:(label)
       |        |           +--ro label-hop
       |        |              +--ro te-label
       |        |                 +--ro (technology)?
       |        |                 |  +--:(generic)
       |        |                 |     +--ro generic?
       |        |                 |             rt-types:generalized-label
       |        |                 +--ro direction?
       |        |                         te-label-direction
       |        +--ro te-bandwidth
       |        |  +--ro (technology)?
       |        |     +--:(generic)
       |        |        +--ro generic?   te-bandwidth
       |        +--ro disjointness-type?
       |                te-types:te-path-disjointness
       +--ro computed-path-error-infos
       |  +--ro computed-path-error-info* []
       |     +--ro error-description?   string
       |     +--ro error-timestamp?     yang:date-and-time
       |     +--ro error-reason?        identityref
       +--ro tunnel-ref?                         te:tunnel-ref
       +--ro (path-role)?
          +--:(primary)
          |  +--ro primary-path-ref?             leafref
          +--:(primary-reverse)
          |  +--ro primary-reverse-path-ref?     leafref
          +--:(secondary)
          |  +--ro secondary-path-ref?           leafref
          +--:(secondary-reverse)
             +--ro secondary-reverse-path-ref?   leafref
  augment /te:tunnels-actions/te:input/te:tunnel-info/te:filter-type:
    +--:(path-compute-transactions)
       +-- path-compute-transaction-id*   string
  augment /te:tunnels-actions/te:output:
    +--ro path-computed-delete-result
       +--ro path-compute-transaction-id*   string
]]></artwork></figure>

</section>
<section anchor="pc-yang"><name>YANG module</name>

<figure title="TE path computation YANG module" anchor="fig-pc-yang"><artwork><![CDATA[
<CODE BEGINS> file "ietf-te-path-computation@2022-01-24.yang"
module ietf-te-path-computation {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-te-path-computation";
  prefix te-pc;

  import ietf-te {
    prefix te;
    reference
      "RFCYYYY: A YANG Data Model for Traffic Engineering Tunnels
       and Interfaces";
  }

  /* Note: The RFC Editor will replace YYYY with the number assigned
     to the RFC once draft-ietf-teas-yang-te becomes an RFC.*/

  import ietf-te-types {
    prefix te-types;
    reference
      "RFC8776: Common YANG Data Types for Traffic Engineering.";
  }

  organization
    "Traffic Engineering Architecture and Signaling (TEAS)
     Working Group";
  contact
    "WG Web:   <http://tools.ietf.org/wg/teas/>
     WG List:  <mailto:teas@ietf.org>

     Editor:   Italo Busi
               <mailto:italo.busi@huawei.com>

     Editor:   Sergio Belotti
               <mailto:sergio.belotti@nokia.com>

     Editor:   Victor Lopez
               <mailto:victor.lopez@nokia.com>

     Editor:   Oscar Gonzalez de Dios
               <mailto:oscar.gonzalezdedios@telefonica.com>

     Editor:   Anurag Sharma
               <mailto:ansha@google.com>

     Editor:   Yan Shi
               <mailto:shiyan49@chinaunicom.cn>

     Editor:   Ricard Vilalta
               <mailto:ricard.vilalta@cttc.es>

     Editor:   Karthik Sethuraman
               <mailto:karthik.sethuraman@necam.com>

     Editor:   Michael Scharf
               <mailto:michael.scharf@gmail.com>

     Editor:   Daniele Ceccarelli
               <mailto:daniele.ceccarelli@ericsson.com>
     
    ";
  description
    "This module defines a YANG data model for requesting Traffic
     Engineering (TE) path computation. The YANG model defined in
     this document is based on RPCs augmenting the RPCs defined in
     the generic TE module (ietf-te).
     The model fully conforms to the
     Network Management Datastore Architecture (NMDA).

     Copyright (c) 2022 IETF Trust and the persons
     identified as authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject
     to the license terms contained in, the Simplified BSD License
     set forth in Section 4.c of the IETF Trust's Legal Provisions

     Relating to IETF Documents
     (http://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC XXXX; see
     the RFC itself for full legal notices.";

  // RFC Ed.: replace XXXX with actual RFC number and remove
  // this note
  // replace the revision date with the module publication date
  // the format is (year-month-day)

  revision 2022-01-24 {
    description
      "Initial revision";
    reference
      "RFC XXXX: A YANG Data Model for requesting path computation";
  }

  // RFC Ed.: replace XXXX with actual RFC number and remove
  // this note

  /*
   * Identities
   */

  identity svec-metric-type {
    description
      "Base identity for SVEC metric type.";
    reference
      "RFC5541: Encoding of Objective Functions in the Path
       Computation Element Communication Protocol (PCEP).";
  }

  identity svec-metric-cumul-te {
    base svec-metric-type;
    description
      "Cumulative TE cost.";
    reference
      "RFC5541: Encoding of Objective Functions in the Path
       Computation Element Communication Protocol (PCEP).";
  }

  identity svec-metric-cumul-igp {
    base svec-metric-type;
    description
      "Cumulative IGP cost.";
    reference
      "RFC5541: Encoding of Objective Functions in the Path
       Computation Element Communication Protocol (PCEP).";
  }

  identity svec-metric-cumul-hop {
    base svec-metric-type;
    description
      "Cumulative Hop path metric.";
    reference
      "RFC8776: Common YANG Data Types for Traffic Engineering.";
  }

  identity svec-metric-aggregate-bandwidth-consumption {
    base svec-metric-type;
    description
      "Aggregate bandwidth consumption.";
    reference
      "RFC5541: Encoding of Objective Functions in the Path
       Computation Element Communication Protocol (PCEP).";
  }

  identity svec-metric-load-of-the-most-loaded-link {
    base svec-metric-type;
    description
      "Load of the most loaded link.";
    reference
      "RFC5541: Encoding of Objective Functions in the Path
       Computation Element Communication Protocol (PCEP).";
  }

  identity tunnel-action-path-compute-delete {
    base te:tunnel-actions-type;
    description
      "Action type to delete the transient states
       of computed paths, as described in section 3.3.1 of
       RFC XXXX.";
    reference
      "RFC XXXX: A YANG Data Model for requesting path computation";
  }

  /*
   * Groupings
   */

  grouping protection-restoration-properties {
    description
      "This grouping defines the restoration and protection types
       for a path in the path computation request.";
    leaf protection-type {
      type identityref {
        base te-types:lsp-protection-type;
      }
      default "te-types:lsp-protection-unprotected";
      description
        "LSP protection type.";
    }
    leaf restoration-type {
      type identityref {
        base te-types:lsp-restoration-type;
      }
      default "te-types:lsp-restoration-restore-any";
      description
        "LSP restoration type.";
    }
    leaf restoration-scheme {
      type identityref {
        base te-types:restoration-scheme-type;
      }
      default "te-types:restoration-scheme-preconfigured";
      description
        "LSP restoration scheme.";
    }
  } // grouping protection-restoration-properties

  grouping requested-info {
    description
      "This grouping defines the information (e.g., metrics)
       which is requested, in the path computation request, to be
       returned in the path computation response.";
    list requested-metrics {
      key "metric-type";
      description
        "The list of the requested metrics.
         The metrics listed here must be returned in the response.
         Returning other metrics in the response is optional.";
      leaf metric-type {
        type identityref {
          base te-types:path-metric-type;
        }
        description
          "The metric that must be returned in the response";
      }
    }
    leaf return-srlgs {
      type boolean;
      default "false";
      description
        "If true, path srlgs must be returned in the response.
         If false, returning path srlgs in the response optional.";
    }
    leaf return-affinities {
      type boolean;
      default "false";
      description
        "If true, path affinities must be returned in the response.
         If false, returning path affinities in the response is
         optional.";
    }
  } // grouping requested-info

  grouping requested-state {
    description
      "Configuration for the transient state used
       to report the computed path";
    container requested-state {
      presence
        "Request temporary reporting of the computed path state";
      description
        "Configures attributes for the temporary reporting of the
         computed path state (e.g., expiration timer).";
      leaf timer {
        type uint16;
        units "minutes";
        default "10";
        description
          "The timeout after which the transient state reporting
          the computed path should be removed.";
      }
      leaf transaction-id {
        type string;
        description
          "The transaction-id associated with this path computation
          to be used for fast deletion of the transient states
          associated with multiple path computations.

          This transaction-id can be used to explicitly delete all
          the transient states of all the computed paths associated
          with the same transaction-id.

          When one path associated with a transaction-id is setup,
          the transient states of all the other computed paths
          with the same transaction-id are automatically removed.

          If not specified, the transient state is removed only
          when the timer expires (when the timer is specified)
          or not created at all (stateless path computation,
          when the timer is not specified).";
      }
    }
  } // grouping requested-state

  grouping reported-state {
    description
      "This grouping defines the information, returned in the path
       computation response, reporting the transient state related
       to the computed path";
    leaf tunnel-ref {
      type te:tunnel-ref;
      description
        "
         Reference to the tunnel that reports the transient state
         of the computed path.

         If no transient state is created, this attribute is
         omitted.
        ";
    }
    choice path-role {
      description
        "The transient state of the computed path can be reported
         as a primary, primary-reverse, secondary or
         a secondary-reverse path of a te-tunnel";
      case primary {
        leaf primary-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:primary-paths/te:primary-path/"
               + "te:name";
          }
          must '../tunnel-ref' {
            description
              "The primary-path name can only be reported
               if also the tunnel name is reported.";
          }
          description
            "
             Reference to the primary-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case primary
      case primary-reverse {
        leaf primary-reverse-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:primary-paths/te:primary-path/"
               + "te:name";
          }
          must '../tunnel-ref' {
            description
              "The primary-reverse-path name can only be reported
               if also the tunnel name is reported.";
          }
          description
            "
             Reference to the primary-reverse-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case primary-reverse
      case secondary {
        leaf secondary-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:secondary-paths/te:secondary-path/"
               + "te:name";
          }
          must '../tunnel-ref' {
            description
              "The secondary-path name can only be reported
               if also the tunnel name is reported.";
          }
          description
            "
             Reference to the secondary-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case secondary
      case secondary-reverse {
        leaf secondary-reverse-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:secondary-reverse-paths/"
               + "te:secondary-reverse-path/te:name";
          }
          must '../tunnel-ref' {
            description
              "The secondary-reverse-path name can only be reported
               if also the tunnel name is reported.";
          }
          description
            "
             Reference to the secondary-reverse-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case secondary
    } // choice path
  } // grouping reported-state

  grouping synchronization-constraints {
    description
      "Global constraints applicable to synchronized path
       computation requests.";
    container svec-constraints {
      description
        "global svec constraints";
      list path-metric-bound {
        key "metric-type";
        description
          "list of bound metrics";
        leaf metric-type {
          type identityref {
            base svec-metric-type;
          }
          description
            "SVEC metric type.";
          reference
            "RFC5541: Encoding of Objective Functions in the Path
            Computation Element Communication Protocol (PCEP).";
        }
        leaf upper-bound {
          type uint64;
          description
            "Upper bound on SVEC metric";
        }
      }
    }
    uses te-types:generic-path-srlgs;
    container exclude-objects {
      description
        "Resources to be excluded";
      list excludes {
        description
          "List of Explicit Route Objects to always exclude
           from synchronized path computation";
        uses te-types:explicit-route-hop;
      }
    }
  } // grouping synchronization-constraints

  grouping synchronization-optimization {
    description
      "Optimizations applicable to synchronized path
       computation requests.";
    container optimizations {
      description
        "The objective function container that includes attributes
         to impose when computing a synchronized set of paths";
      choice algorithm {
        description
          "Optimizations algorithm.";
        case metric {
          if-feature "te-types:path-optimization-metric";
          list optimization-metric {
            key "metric-type";
            description
              "svec path metric type";
            leaf metric-type {
              type identityref {
                base svec-metric-type;
              }
              description
                "TE path metric type usable for computing a set of
                synchronized requests";
            }
            leaf weight {
              type uint8;
              description
                "Metric normalization weight";
            }
          }
        }
        case objective-function {
          if-feature
            "te-types:path-optimization-objective-function";
          container objective-function {
            description
              "The objective function container that includes
               attributes to impose when computing a TE path";
            leaf objective-function-type {
              type identityref {
                base te-types:objective-function-type;
              }
              default "te-types:of-minimize-cost-path";
              description
                "Objective function entry";
            }
          }
        }
      }
    }
  } // grouping synchronization-optimization

  grouping synchronization-info {
    description
      "Information for synchronized path computation requests.";
    list synchronization {
      description
        "List of Synchronization VECtors.";
      container svec {
        description
          "Synchronization VECtor";
        leaf relaxable {
          type boolean;
          default "true";
          description
            "If this leaf is true, path computation process is
             free to ignore svec content.
             Otherwise, it must take into account this svec.";
        }
        uses te-types:generic-path-disjointness;
        leaf-list request-id-number {
          type uint32;
          description
            "This list reports the set of path computation
             requests that must be synchronized.";
        }
      }
      uses synchronization-constraints;
      uses synchronization-optimization;
    }
  } // grouping synchronization-info

  /*
   * Augment TE RPCs
   */

  augment "/te:tunnels-path-compute/te:input/te:path-compute-info" {
    description
      "Path Computation RPC input";
    list path-request {
      key "request-id";
      description
        "The list of the requested paths to be computed";
      leaf request-id {
        type uint32;
        mandatory true;
        description
          "Each path computation request is uniquely identified
           within the RPC request by the request-id-number.";
      }
      choice tunnel-attributes {
        default "value";
        description
          "Whether the tunnel attributes are specified by value
           within this path computation request or by reference.
           The reference could be either to an existing te-tunnel
           or to an entry in the tunnel-attributes list";
        case reference {
          container tunnel-reference {
            description
              "Attributes for a requested path that belongs to
              either an exiting te-tunnel or to an entry in the
              tunnel-attributes list.";
            choice tunnel-exist {
              description
                "Whether the tunnel reference is to an existing
                te-tunnel or to an entry in the tunnel-attributes
                list";
              case tunnel-ref {
                leaf tunnel-ref {
                  type te:tunnel-ref;
                  mandatory true;
                  description
                    "The referenced te-tunnel instance";
                }
              } // case tunnel-ref
              case tunnel-attributes-ref {
                leaf tunnel-attributes-ref {
                  type leafref {
                    path "/te:tunnels-path-compute/"
                      + "te:path-compute-info/"
                      + "te-pc:tunnel-attributes/te-pc:tunnel-name";
                  }
                  mandatory true;
                  description
                    "The referenced te-tunnel instance";
                }
              } // case tunnel-attributes-ref 
            } // choice tunnel-exist
            leaf path-name {
              type string;
              description
                "TE path name.";
            }
            choice path-role {
              mandatory true;
              description
                "Whether this path is a primary, or a reverse
                primary, or a secondary, or a reverse secondary
                path.";
              case primary-path {
                container primary-path {
                  presence "Indicates that the requested path
                            is a primary path";
                  description
                    "TE primary path";
                  uses te:path-preference;
                  uses te:k-requested-paths;
                } // container primary-path
              } // case primary-path
              case secondary-path {
                container secondary-path {
                  description
                    "TE secondary path";
                  uses te:path-preference;
                  uses protection-restoration-properties;
                  list primary-path-ref {
                    min-elements 1;
                    description
                      "The list of primary paths that reference
                      this path as a candidate secondary path";
                    choice primary-path-exist {
                      description
                        "Whether the path reference is to an existing
                        te-tunnel path or to another path request";
                      case path-ref {
                        leaf primary-path-ref {
                          type leafref {
                            path "/te:te/te:tunnels/te:tunnel"
                              + "[te:name=current()/../../../"
                              + "tunnel-ref]/te:primary-paths/"
                              + "te:primary-path/te:name";
                          }
                          must '../../../tunnel-ref' {
                            description
                              "The primary-path can be referenced
                              if also the tunnel is referenced.";
                          }
                          mandatory true;
                          description
                            "The referenced primary path";
                        }
                      } // case path-ref
                      case path-request-ref {
                        leaf path-request-ref {
                          type leafref {
                            path "/te:tunnels-path-compute/"
                              + "te:path-compute-info/"
                              + "te-pc:path-request/"
                              + "te-pc:request-id";
                          }
                          mandatory true;
                          description
                            "The referenced primary path request";
                        }
                      } // case path-request-ref 
                    } // choice primary-path-exist
                  } // list primary-path-ref
                } // container secondary-path
              } // case secondary-path
              case primary-reverse-path {
                container primary-reverse-path {
                  description
                    "TE primary reverse path";
                  choice primary-path-exist {
                    description
                      "Whether the path reference to the primary
                      paths for which this path is the reverse-path
                      is to an existing te-tunnel path or to
                      another path request.";
                    case path-ref {
                      leaf primary-path-ref {
                        type leafref {
                          path "/te:te/te:tunnels/te:tunnel[te:name"
                            + "=current()/../../tunnel-ref]/"
                            + "te:primary-paths/te:primary-path/"
                            + "te:name";
                        }
                        must '../../tunnel-ref' {
                          description
                            "The primary-path can be referenced
                            if also the tunnel is referenced.";
                        }
                        mandatory true;
                        description
                          "The referenced primary path";
                      }
                    } // case path-ref
                    case path-request-ref {
                      leaf path-request-ref {
                        type leafref {
                          path "/te:tunnels-path-compute/"
                            + "te:path-compute-info/"
                            + "te-pc:path-request/"
                            + "te-pc:request-id";
                        }
                        mandatory true;
                        description
                          "The referenced primary path request";
                      }
                    } // case path-request-ref 
                  } // choice primary-path-exist
                } // container primary-reverse-path
              } // case primary-reverse-path
              case secondary-reverse-path {
                container secondary-reverse-path {
                  description
                    "TE secondary reverse path";
                  uses te:path-preference;
                  uses protection-restoration-properties;
                  list primary-reverse-path-ref {
                    min-elements 1;
                    description
                      "The list of primary reverse paths that
                      reference this path as a candidate
                      secondary reverse path";
                    choice primary-reverse-path-exist {
                      description
                        "Whether the path reference is to an existing
                        te-tunnel path or to another path request";
                      case path-ref {
                        leaf primary-path-ref {
                          type leafref {
                            path "/te:te/te:tunnels/te:tunnel"
                              + "[te:name=current()/../../../"
                              + "tunnel-ref]/te:primary-paths/"
                              + "te:primary-path/te:name";
                          }
                          must '../../../tunnel-ref' {
                            description
                              "The primary-path can be referenced
                              if also the tunnel is referenced.";
                          }
                          mandatory true;
                          description
                            "The referenced primary path";
                        }
                      } // case path-ref
                      case path-request-ref {
                        leaf path-request-ref {
                          type leafref {
                            path "/te:tunnels-path-compute/"
                              + "te:path-compute-info/"
                              + "te-pc:path-request/"
                              + "te-pc:request-id";
                          }
                          mandatory true;
                          description
                            "The referenced primary reverse path
                            request";
                        }
                      } // case path-request-ref 
                    } // choice primary-reverse-path-exist
                  } // list primary-reverse-path-ref
                } // container secondary-reverse-path
              } // case secondary-reverse-path
            } // choice tunnel-path-role
          }
        } // case reference
        case value {
          leaf tunnel-name {
            type string;
            description
              "TE tunnel name.";
          }
          leaf path-name {
            type string;
            description
              "TE path name.";
          }
          choice path-role {
            when 'not (./source) and not (./destination) and
                  not (./src-tunnel-tp-id) and
                  not (./dst-tunnel-tp-id)' {
              description
                "When the tunnel attributes are specified by value
                within this path computation, it is assumed that the
                requested path will be the only path of a tunnel.

                If the requested path is a transit segment path, it
                could be of any type. Otherwise it could only be a
                primary path.";
            }
            default primary-path;
            description
              "Indicates whether the requested path is a primary
              path, a secondary path, a reverse primary path or a
              reverse secondary path.";
            case primary-path {
              description
                "The requested path is a primary path.";
            }
            container secondary-path {
              presence
                "Indicates that the requested path is a secondary
                path.";
              description
                "The name of the primary path which the requested
                primary reverse path belongs to.";
              leaf primary-path-name {
                type string;
                description
                  "TE primary path name.";
              }
            } // container secondary-path
            container primary-reverse-path {
              presence
                "Indicates that the requested path is a primary
                reverse path.";
              description
                "The name of the primary path which the requested
                primary reverse path belongs to.";
              leaf primary-path-name {
                type string;
                description
                  "TE primary path name.";
              }
            } // container primary-reverse-path
            container secondary-reverse-path {
              presence
                "Indicates that the requested path is a secondary
                reverse path.";
              description
                "The names of the primary path and of the primary
                reverse path which the requested secondary reverse
                path belongs to.";
              leaf primary-path-name {
                type string;
                description
                  "TE primary path name.";
              }
              leaf primary-reverse-path-name {
                type string;
                description
                  "TE primary reverse path name.";
              }
            } // container primary-reverse-path
          } // choice path-role
          uses te:k-requested-paths;
          uses te:encoding-and-switching-type;
          uses te:tunnel-common-attributes;
          uses te-types:te-topology-identifier;
        } // case value
      } // choice tunnel-attributes
      uses te:path-compute-info;
      uses requested-info;
      uses requested-state;
    }
    list tunnel-attributes {
      key "tunnel-name";
      description
        "Tunnel attributes common to multiple request paths";
      leaf tunnel-name {
        type string;
        description
          "TE tunnel name.";
      }
      uses te:encoding-and-switching-type;
      uses te:tunnel-common-attributes;
      uses te:tunnel-associations-properties;
      uses protection-restoration-properties;
      uses te-types:tunnel-constraints;
      uses te:tunnel-hierarchy-properties {
        augment "hierarchy/dependency-tunnels" {
          description
            "Augment with the list of dependency tunnel requests.";
          list dependency-tunnel-attributes {
            key "name";
            description
              "A tunnel request entry that this tunnel request can
               potentially depend on.";
            leaf name {
              type leafref {
                path "/te:tunnels-path-compute/"
                   + "te:path-compute-info/te-pc:tunnel-attributes/"
                   + "te-pc:tunnel-name";
              }
              description
                "Dependency tunnel request name.";
            }
            uses te:encoding-and-switching-type;
          }
        }
      }
    }
    uses synchronization-info;
  } // path-compute rpc input

  augment "/te:tunnels-path-compute/te:output/"
        + "te:path-compute-result" {
    description
      "Path Computation RPC output";
    list response {
      key "response-id";
      config false;
      description
        "response";
      leaf response-id {
        type uint32;
        description
          "The response-id has the same value of the
           corresponding request-id.";
      }
      uses te:path-computation-response;
      uses reported-state;
    }
  } // path-compute rpc output

  augment "/te:tunnels-actions/te:input/te:tunnel-info/"
        + "te:filter-type" {
    description
      "Augment Tunnels Action RPC input filter types";
    case path-compute-transactions {
      when "derived-from-or-self(../te:action-info/te:action, "
         + "'tunnel-action-path-compute-delete')";
      description
        "Path Delete Action RPC";
      leaf-list path-compute-transaction-id {
        type string;
        description
          "The list of the transaction-id values of the
           transient states to be deleted";
      }
    }
  } // path-delete rpc input

  augment "/te:tunnels-actions/te:output" {
    description
      "Augment Tunnels Action RPC output with path delete result";
    container path-computed-delete-result {
      description
        "Path Delete RPC output";
      leaf-list path-compute-transaction-id {
        type string;
        description
          "The list of the transaction-id values of the
           transient states that have been successfully deleted";
      }
    }
  } // path-delete rpc output
}
]]></artwork></figure>

</section>
</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>This document describes use cases of requesting Path Computation
   using YANG data models, which could be used at the ABNO Control
   Interface <xref target="RFC7491"/> and/or between controllers in ACTN <xref target="RFC8453"/>. As
   such, it does not introduce any new security considerations compared
   to the ones related to YANG specification, ABNO specification and
   ACTN Framework defined in <xref target="RFC7950"/>, <xref target="RFC7491"/> and <xref target="RFC8453"/>.</t>

<t>The YANG module defined in this document is designed to be accessed via
   the NETCONF protocol <xref target="RFC6241"/> or RESTCONF protocol <xref target="RFC8040"/>. The
   lowest NETCONF layer is the secure transport layer, and the
   mandatory-to-implement secure transport is Secure Shell (SSH)
   <xref target="RFC6242"/>. The lowest RESTCONF layer is HTTPS, and the mandatory-to-
   implement secure transport is TLS <xref target="RFC8446"/>.</t>

<t>The Network Configuration Access Control Model (NACM) 
   <xref target="RFC8341"/> provides the means to
   restrict access for particular NETCONF or RESTCONF users to a
   preconfigured subset of all available NETCONF or RESTCONF protocol
   operations and content.</t>

<t>The YANG module defined in this document augments the "tunnels-path-compute" and the "tunnel-actions" RPCs defined in <xref target="I-D.ietf-teas-yang-te"/>. The security considerations provided in <xref target="I-D.ietf-teas-yang-te"/> are also applicable to the YANG module
   defined in this document.</t>

<t>Some of the RPC operations defined in this YANG module may be considered
   sensitive or vulnerable in some network environments.  It is thus
   important to control access to these operations. These are the
   operations and their sensitivity/vulnerability:</t>

<t>"te-pc:response/computed-paths-properties": provides the same information provided by the "te:computed-paths-properties" defined in <xref target="I-D.ietf-teas-yang-te"/>. The security considerations provided in <xref target="I-D.ietf-teas-yang-te"/> for the TE tunnel state apply also to this subtree.</t>

<t>"te-pc:response/te-pc:tunnel-ref", "te-pc:response/te-pc:primary-path-ref", "te-pc:response/te-pc:primary-reverse-path-ref", "te-pc:response/te-pc:secondary-path-ref" and "te-pc:response/te-pc:secondary-reverse-path-ref" provides a reference where the same information provided in "te-pc:response/computed-paths-properties" is temporarly stored with the operational datastore (see <xref target="temp-state"/>). Therefore access to this information does not provide any additional security issue that the information provided with "te-pc:response/computed-paths-properties".</t>

<t>"/te:tunnels-actions": the YANG model defined in this document augments this action with a new action type that allows deleting the transient states of computed paths (see <xref target="temp-state"/>). A malicious use of this action would have no impact on the paths carrying live traffic but it would preclude the client from using the "transient states" to request the set-up of exactly that path, if still available.</t>

<t>The security considerations spelled out in the
   YANG specification <xref target="RFC7950"/> apply for this document as well.</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>This document registers the following URIs in the "ns" subregistry
   within the "IETF XML registry" <xref target="RFC3688"/>.</t>

<figure><artwork><![CDATA[
      URI: urn:ietf:params:xml:ns:yang:ietf-te-path-computation
      Registrant Contact:  The IESG.
      XML: N/A, the requested URI is an XML namespace.
]]></artwork></figure>

<t>This document registers a YANG module in the "YANG Module Names"
   registry <xref target="RFC7950"/>.</t>

<figure><artwork><![CDATA[
      name:      ietf-te-path-computation
      namespace: urn:ietf:params:xml:ns:yang:ietf-te-path-computation
      prefix:    te-pc
      reference: this document
]]></artwork></figure>

</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference anchor='RFC6241' target='https://www.rfc-editor.org/info/rfc6241'>
<front>
<title>Network Configuration Protocol (NETCONF)</title>
<author fullname='R. Enns' initials='R.' role='editor' surname='Enns'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'><organization/></author>
<author fullname='A. Bierman' initials='A.' role='editor' surname='Bierman'><organization/></author>
<date month='June' year='2011'/>
<abstract><t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices.  It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages.  The NETCONF protocol operations are realized as remote procedure calls (RPCs).  This document obsoletes RFC 4741.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6241'/>
<seriesInfo name='DOI' value='10.17487/RFC6241'/>
</reference>



<reference anchor='RFC8040' target='https://www.rfc-editor.org/info/rfc8040'>
<front>
<title>RESTCONF Protocol</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<date month='January' year='2017'/>
<abstract><t>This document describes an HTTP-based protocol that provides a programmatic interface for accessing data defined in YANG, using the datastore concepts defined in the Network Configuration Protocol (NETCONF).</t></abstract>
</front>
<seriesInfo name='RFC' value='8040'/>
<seriesInfo name='DOI' value='10.17487/RFC8040'/>
</reference>



<reference anchor='RFC8795' target='https://www.rfc-editor.org/info/rfc8795'>
<front>
<title>YANG Data Model for Traffic Engineering (TE) Topologies</title>
<author fullname='X. Liu' initials='X.' surname='Liu'><organization/></author>
<author fullname='I. Bryskin' initials='I.' surname='Bryskin'><organization/></author>
<author fullname='V. Beeram' initials='V.' surname='Beeram'><organization/></author>
<author fullname='T. Saad' initials='T.' surname='Saad'><organization/></author>
<author fullname='H. Shah' initials='H.' surname='Shah'><organization/></author>
<author fullname='O. Gonzalez de Dios' initials='O.' surname='Gonzalez de Dios'><organization/></author>
<date month='August' year='2020'/>
<abstract><t>This document defines a YANG data model for representing, retrieving, and manipulating Traffic Engineering (TE) Topologies. The model serves as a base model that other technology-specific TE topology models can augment.</t></abstract>
</front>
<seriesInfo name='RFC' value='8795'/>
<seriesInfo name='DOI' value='10.17487/RFC8795'/>
</reference>


<reference anchor='I-D.ietf-teas-yang-te'>
   <front>
      <title>A YANG Data Model for Traffic Engineering Tunnels, Label Switched Paths and Interfaces</title>
      <author fullname='Tarek Saad'>
	 <organization>Juniper Networks</organization>
      </author>
      <author fullname='Rakesh Gandhi'>
	 <organization>Cisco Systems Inc</organization>
      </author>
      <author fullname='Xufeng Liu'>
	 <organization>Volta Networks</organization>
      </author>
      <author fullname='Vishnu Pavan Beeram'>
	 <organization>Juniper Networks</organization>
      </author>
      <author fullname='Igor Bryskin'>
	 <organization>Individual</organization>
      </author>
      <author fullname='Oscar Gonzalez de Dios'>
	 <organization>Telefonica</organization>
      </author>
      <date day='7' month='February' year='2022'/>
      <abstract>
	 <t>   This document defines a YANG data model for the provisioning and
   management of Traffic Engineering (TE) tunnels, Label Switched Paths
   (LSPs), and interfaces.  The model is divided into YANG modules that
   classify data into generic, device-specific, technology agnostic, and
   technology-specific elements.

   This model covers data for configuration, operational state, remote
   procedural calls, and event notifications.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-teas-yang-te-29'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-teas-yang-te-29.txt' type='TXT'/>
</reference>



<reference anchor='RFC7950' target='https://www.rfc-editor.org/info/rfc7950'>
<front>
<title>The YANG 1.1 Data Modeling Language</title>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<date month='August' year='2016'/>
<abstract><t>YANG is a data modeling language used to model configuration data, state data, Remote Procedure Calls, and notifications for network management protocols.  This document describes the syntax and semantics of version 1.1 of the YANG language.  YANG version 1.1 is a maintenance release of the YANG language, addressing ambiguities and defects in the original specification.  There are a small number of backward incompatibilities from YANG version 1.  This document also specifies the YANG mappings to the Network Configuration Protocol (NETCONF).</t></abstract>
</front>
<seriesInfo name='RFC' value='7950'/>
<seriesInfo name='DOI' value='10.17487/RFC7950'/>
</reference>



<reference anchor='RFC5440' target='https://www.rfc-editor.org/info/rfc5440'>
<front>
<title>Path Computation Element (PCE) Communication Protocol (PCEP)</title>
<author fullname='JP. Vasseur' initials='JP.' role='editor' surname='Vasseur'><organization/></author>
<author fullname='JL. Le Roux' initials='JL.' role='editor' surname='Le Roux'><organization/></author>
<date month='March' year='2009'/>
<abstract><t>This document specifies the Path Computation Element (PCE) Communication Protocol (PCEP) for communications between a Path Computation Client (PCC) and a PCE, or between two PCEs.  Such interactions include path computation requests and path computation replies as well as notifications of specific states related to the use of a PCE in the context of Multiprotocol Label Switching (MPLS) and Generalized MPLS (GMPLS) Traffic Engineering.  PCEP is designed to be flexible and extensible so as to easily allow for the addition of further messages and objects, should further requirements be expressed in the future.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5440'/>
<seriesInfo name='DOI' value='10.17487/RFC5440'/>
</reference>



<reference anchor='RFC7926' target='https://www.rfc-editor.org/info/rfc7926'>
<front>
<title>Problem Statement and Architecture for Information Exchange between Interconnected Traffic-Engineered Networks</title>
<author fullname='A. Farrel' initials='A.' role='editor' surname='Farrel'><organization/></author>
<author fullname='J. Drake' initials='J.' surname='Drake'><organization/></author>
<author fullname='N. Bitar' initials='N.' surname='Bitar'><organization/></author>
<author fullname='G. Swallow' initials='G.' surname='Swallow'><organization/></author>
<author fullname='D. Ceccarelli' initials='D.' surname='Ceccarelli'><organization/></author>
<author fullname='X. Zhang' initials='X.' surname='Zhang'><organization/></author>
<date month='July' year='2016'/>
<abstract><t>In Traffic-Engineered (TE) systems, it is sometimes desirable to establish an end-to-end TE path with a set of constraints (such as bandwidth) across one or more networks from a source to a destination.  TE information is the data relating to nodes and TE links that is used in the process of selecting a TE path.  TE information is usually only available within a network.  We call such a zone of visibility of TE information a domain.  An example of a domain may be an IGP area or an Autonomous System.</t><t>In order to determine the potential to establish a TE path through a series of connected networks, it is necessary to have available a certain amount of TE information about each network.  This need not be the full set of TE information available within each network but does need to express the potential of providing TE connectivity. This subset of TE information is called TE reachability information.</t><t>This document sets out the problem statement for the exchange of TE information between interconnected TE networks in support of end-to-end TE path establishment and describes the best current practice architecture to meet this problem statement.  For reasons that are explained in this document, this work is limited to simple TE constraints and information that determine TE reachability.</t></abstract>
</front>
<seriesInfo name='BCP' value='206'/>
<seriesInfo name='RFC' value='7926'/>
<seriesInfo name='DOI' value='10.17487/RFC7926'/>
</reference>



<reference anchor='RFC8340' target='https://www.rfc-editor.org/info/rfc8340'>
<front>
<title>YANG Tree Diagrams</title>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='L. Berger' initials='L.' role='editor' surname='Berger'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>This document captures the current syntax used in YANG module tree diagrams.  The purpose of this document is to provide a single location for this definition.  This syntax may be updated from time to time based on the evolution of the YANG language.</t></abstract>
</front>
<seriesInfo name='BCP' value='215'/>
<seriesInfo name='RFC' value='8340'/>
<seriesInfo name='DOI' value='10.17487/RFC8340'/>
</reference>



<reference anchor='RFC6991' target='https://www.rfc-editor.org/info/rfc6991'>
<front>
<title>Common YANG Data Types</title>
<author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'><organization/></author>
<date month='July' year='2013'/>
<abstract><t>This document introduces a collection of common data types to be used with the YANG data modeling language.  This document obsoletes RFC 6021.</t></abstract>
</front>
<seriesInfo name='RFC' value='6991'/>
<seriesInfo name='DOI' value='10.17487/RFC6991'/>
</reference>



<reference anchor='RFC8776' target='https://www.rfc-editor.org/info/rfc8776'>
<front>
<title>Common YANG Data Types for Traffic Engineering</title>
<author fullname='T. Saad' initials='T.' surname='Saad'><organization/></author>
<author fullname='R. Gandhi' initials='R.' surname='Gandhi'><organization/></author>
<author fullname='X. Liu' initials='X.' surname='Liu'><organization/></author>
<author fullname='V. Beeram' initials='V.' surname='Beeram'><organization/></author>
<author fullname='I. Bryskin' initials='I.' surname='Bryskin'><organization/></author>
<date month='June' year='2020'/>
<abstract><t>This document defines a collection of common data types and groupings in YANG data modeling language. These derived common types and groupings are intended to be imported by modules that model Traffic Engineering (TE) configuration and state capabilities.</t></abstract>
</front>
<seriesInfo name='RFC' value='8776'/>
<seriesInfo name='DOI' value='10.17487/RFC8776'/>
</reference>



<reference anchor='RFC5441' target='https://www.rfc-editor.org/info/rfc5441'>
<front>
<title>A Backward-Recursive PCE-Based Computation (BRPC) Procedure to Compute Shortest Constrained Inter-Domain Traffic Engineering Label Switched Paths</title>
<author fullname='JP. Vasseur' initials='JP.' role='editor' surname='Vasseur'><organization/></author>
<author fullname='R. Zhang' initials='R.' surname='Zhang'><organization/></author>
<author fullname='N. Bitar' initials='N.' surname='Bitar'><organization/></author>
<author fullname='JL. Le Roux' initials='JL.' surname='Le Roux'><organization/></author>
<date month='April' year='2009'/>
<abstract><t>The ability to compute shortest constrained Traffic Engineering Label Switched Paths (TE LSPs) in Multiprotocol Label Switching (MPLS) and Generalized MPLS (GMPLS) networks across multiple domains has been identified as a key requirement.  In this context, a domain is a collection of network elements within a common sphere of address management or path computational responsibility such as an IGP area or an Autonomous Systems.  This document specifies a procedure relying on the use of multiple Path Computation Elements (PCEs) to compute such inter-domain shortest constrained paths across a predetermined sequence of domains, using a backward-recursive path computation technique.  This technique preserves confidentiality across domains, which is sometimes required when domains are managed by different service providers.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5441'/>
<seriesInfo name='DOI' value='10.17487/RFC5441'/>
</reference>



<reference anchor='RFC5541' target='https://www.rfc-editor.org/info/rfc5541'>
<front>
<title>Encoding of Objective Functions in the Path Computation Element Communication Protocol (PCEP)</title>
<author fullname='JL. Le Roux' initials='JL.' surname='Le Roux'><organization/></author>
<author fullname='JP. Vasseur' initials='JP.' surname='Vasseur'><organization/></author>
<author fullname='Y. Lee' initials='Y.' surname='Lee'><organization/></author>
<date month='June' year='2009'/>
<abstract><t>The computation of one or a set of Traffic Engineering Label Switched Paths (TE LSPs) in MultiProtocol Label Switching (MPLS) and Generalized MPLS (GMPLS) networks is subject to a set of one or more specific optimization criteria, referred to as objective functions (e.g., minimum cost path, widest path, etc.).</t><t>In the Path Computation Element (PCE) architecture, a Path Computation Client (PCC) may want a path to be computed for one or more TE LSPs according to a specific objective function.  Thus, the PCC needs to instruct the PCE to use the correct objective function. Furthermore, it is possible that not all PCEs support the same set of objective functions; therefore, it is useful for the PCC to be able to automatically discover the set of objective functions supported by each PCE.</t><t>This document defines extensions to the PCE communication Protocol (PCEP) to allow a PCE to indicate the set of objective functions it supports.  Extensions are also defined so that a PCC can indicate in a path computation request the required objective function, and a PCE can report in a path computation reply the objective function that was used for path computation.</t><t>This document defines objective function code types for six objective functions previously listed in the PCE requirements work, and provides the definition of four new metric types that apply to a set of synchronized requests.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5541'/>
<seriesInfo name='DOI' value='10.17487/RFC5541'/>
</reference>



<reference anchor='RFC6242' target='https://www.rfc-editor.org/info/rfc6242'>
<front>
<title>Using the NETCONF Protocol over Secure Shell (SSH)</title>
<author fullname='M. Wasserman' initials='M.' surname='Wasserman'><organization/></author>
<date month='June' year='2011'/>
<abstract><t>This document describes a method for invoking and running the Network Configuration Protocol (NETCONF) within a Secure Shell (SSH) session as an SSH subsystem.  This document obsoletes RFC 4742.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6242'/>
<seriesInfo name='DOI' value='10.17487/RFC6242'/>
</reference>



<reference anchor='RFC8446' target='https://www.rfc-editor.org/info/rfc8446'>
<front>
<title>The Transport Layer Security (TLS) Protocol Version 1.3</title>
<author fullname='E. Rescorla' initials='E.' surname='Rescorla'><organization/></author>
<date month='August' year='2018'/>
<abstract><t>This document specifies version 1.3 of the Transport Layer Security (TLS) protocol.  TLS allows client/server applications to communicate over the Internet in a way that is designed to prevent eavesdropping, tampering, and message forgery.</t><t>This document updates RFCs 5705 and 6066, and obsoletes RFCs 5077, 5246, and 6961.  This document also specifies new requirements for TLS 1.2 implementations.</t></abstract>
</front>
<seriesInfo name='RFC' value='8446'/>
<seriesInfo name='DOI' value='10.17487/RFC8446'/>
</reference>



<reference anchor='RFC8341' target='https://www.rfc-editor.org/info/rfc8341'>
<front>
<title>Network Configuration Access Control Model</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>The standardization of network configuration interfaces for use with the Network Configuration Protocol (NETCONF) or the RESTCONF protocol requires a structured and secure operating environment that promotes human usability and multi-vendor interoperability.  There is a need for standard mechanisms to restrict NETCONF or RESTCONF protocol access for particular users to a preconfigured subset of all available NETCONF or RESTCONF protocol operations and content.  This document defines such an access control model.</t><t>This document obsoletes RFC 6536.</t></abstract>
</front>
<seriesInfo name='STD' value='91'/>
<seriesInfo name='RFC' value='8341'/>
<seriesInfo name='DOI' value='10.17487/RFC8341'/>
</reference>



<reference anchor='RFC3688' target='https://www.rfc-editor.org/info/rfc3688'>
<front>
<title>The IETF XML Registry</title>
<author fullname='M. Mealling' initials='M.' surname='Mealling'><organization/></author>
<date month='January' year='2004'/>
<abstract><t>This document describes an IANA maintained registry for IETF standards which use Extensible Markup Language (XML) related items such as Namespaces, Document Type Declarations (DTDs), Schemas, and Resource Description Framework (RDF) Schemas.</t></abstract>
</front>
<seriesInfo name='BCP' value='81'/>
<seriesInfo name='RFC' value='3688'/>
<seriesInfo name='DOI' value='10.17487/RFC3688'/>
</reference>




    </references>

    <references title='Informative References'>





<reference anchor='RFC7491' target='https://www.rfc-editor.org/info/rfc7491'>
<front>
<title>A PCE-Based Architecture for Application-Based Network Operations</title>
<author fullname='D. King' initials='D.' surname='King'><organization/></author>
<author fullname='A. Farrel' initials='A.' surname='Farrel'><organization/></author>
<date month='March' year='2015'/>
<abstract><t>Services such as content distribution, distributed databases, or inter-data center connectivity place a set of new requirements on the operation of networks.  They need on-demand and application-specific reservation of network connectivity, reliability, and resources (such as bandwidth) in a variety of network applications (such as point-to-point connectivity, network virtualization, or mobile back-haul) and in a range of network technologies from packet (IP/MPLS) down to optical.  An environment that operates to meet these types of requirements is said to have Application-Based Network Operations (ABNO).  ABNO brings together many existing technologies and may be seen as the use of a toolbox of existing components enhanced with a few new elements.</t><t>This document describes an architecture and framework for ABNO, showing how these components fit together.  It provides a cookbook of existing technologies to satisfy the architecture and meet the needs of the applications.</t></abstract>
</front>
<seriesInfo name='RFC' value='7491'/>
<seriesInfo name='DOI' value='10.17487/RFC7491'/>
</reference>



<reference anchor='RFC8453' target='https://www.rfc-editor.org/info/rfc8453'>
<front>
<title>Framework for Abstraction and Control of TE Networks (ACTN)</title>
<author fullname='D. Ceccarelli' initials='D.' role='editor' surname='Ceccarelli'><organization/></author>
<author fullname='Y. Lee' initials='Y.' role='editor' surname='Lee'><organization/></author>
<date month='August' year='2018'/>
<abstract><t>Traffic Engineered (TE) networks have a variety of mechanisms to facilitate the separation of the data plane and control plane.  They also have a range of management and provisioning protocols to configure and activate network resources.  These mechanisms represent key technologies for enabling flexible and dynamic networking.  The term &quot;Traffic Engineered network&quot; refers to a network that uses any connection-oriented technology under the control of a distributed or centralized control plane to support dynamic provisioning of end-to- end connectivity.</t><t>Abstraction of network resources is a technique that can be applied to a single network domain or across multiple domains to create a single virtualized network that is under the control of a network operator or the customer of the operator that actually owns the network resources.</t><t>This document provides a framework for Abstraction and Control of TE Networks (ACTN) to support virtual network services and connectivity services.</t></abstract>
</front>
<seriesInfo name='RFC' value='8453'/>
<seriesInfo name='DOI' value='10.17487/RFC8453'/>
</reference>



<reference anchor='RFC8454' target='https://www.rfc-editor.org/info/rfc8454'>
<front>
<title>Information Model for Abstraction and Control of TE Networks (ACTN)</title>
<author fullname='Y. Lee' initials='Y.' surname='Lee'><organization/></author>
<author fullname='S. Belotti' initials='S.' surname='Belotti'><organization/></author>
<author fullname='D. Dhody' initials='D.' surname='Dhody'><organization/></author>
<author fullname='D. Ceccarelli' initials='D.' surname='Ceccarelli'><organization/></author>
<author fullname='B. Yoon' initials='B.' surname='Yoon'><organization/></author>
<date month='September' year='2018'/>
<abstract><t>This document provides an information model for Abstraction and Control of TE Networks (ACTN).</t></abstract>
</front>
<seriesInfo name='RFC' value='8454'/>
<seriesInfo name='DOI' value='10.17487/RFC8454'/>
</reference>


<reference anchor='I-D.ietf-ccamp-otn-topo-yang'>
   <front>
      <title>A YANG Data Model for Optical Transport Network Topology</title>
      <author fullname='Haomian Zheng'>
	 <organization>Huawei Technologies</organization>
      </author>
      <author fullname='Italo Busi'>
	 <organization>Huawei Technologies</organization>
      </author>
      <author fullname='Xufeng Liu'>
	 <organization>Volta Networks</organization>
      </author>
      <author fullname='Sergio Belotti'>
	 <organization>Nokia</organization>
      </author>
      <author fullname='Oscar Gonzalez de Dios'>
	 <organization>Telefonica</organization>
      </author>
      <date day='12' month='July' year='2021'/>
      <abstract>
	 <t>   This document describes a YANG data model to describe the topologies
   of an Optical Transport Network (OTN).  It is independent of control
   plane protocols and captures topological and resource related
   information pertaining to OTN.  This model enables clients, which
   interact with a transport domain controller, for OTN topology related
   operations such as obtaining the relevant topology resource
   information.


	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-ccamp-otn-topo-yang-13'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-ccamp-otn-topo-yang-13.txt' type='TXT'/>
</reference>



<reference anchor='RFC4655' target='https://www.rfc-editor.org/info/rfc4655'>
<front>
<title>A Path Computation Element (PCE)-Based Architecture</title>
<author fullname='A. Farrel' initials='A.' surname='Farrel'><organization/></author>
<author fullname='J.-P. Vasseur' initials='J.-P.' surname='Vasseur'><organization/></author>
<author fullname='J. Ash' initials='J.' surname='Ash'><organization/></author>
<date month='August' year='2006'/>
<abstract><t>Constraint-based path computation is a fundamental building block for traffic engineering systems such as Multiprotocol Label Switching (MPLS) and Generalized Multiprotocol Label Switching (GMPLS) networks.  Path computation in large, multi-domain, multi-region, or multi-layer networks is complex and may require special computational components and cooperation between the different network domains.</t><t>This document specifies the architecture for a Path Computation Element (PCE)-based model to address this problem space.  This document does not attempt to provide a detailed description of all the architectural components, but rather it describes a set of building blocks for the PCE architecture from which solutions may be constructed.  This memo provides information for the Internet community.</t></abstract>
</front>
<seriesInfo name='RFC' value='4655'/>
<seriesInfo name='DOI' value='10.17487/RFC4655'/>
</reference>



<reference anchor='RFC8342' target='https://www.rfc-editor.org/info/rfc8342'>
<front>
<title>Network Management Datastore Architecture (NMDA)</title>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' surname='Schoenwaelder'><organization/></author>
<author fullname='P. Shafer' initials='P.' surname='Shafer'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<author fullname='R. Wilton' initials='R.' surname='Wilton'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>Datastores are a fundamental concept binding the data models written in the YANG data modeling language to network management protocols such as the Network Configuration Protocol (NETCONF) and RESTCONF. This document defines an architectural framework for datastores based on the experience gained with the initial simpler model, addressing requirements that were not well supported in the initial model.  This document updates RFC 7950.</t></abstract>
</front>
<seriesInfo name='RFC' value='8342'/>
<seriesInfo name='DOI' value='10.17487/RFC8342'/>
</reference>



<reference anchor='RFC6805' target='https://www.rfc-editor.org/info/rfc6805'>
<front>
<title>The Application of the Path Computation Element Architecture to the Determination of a Sequence of Domains in MPLS and GMPLS</title>
<author fullname='D. King' initials='D.' role='editor' surname='King'><organization/></author>
<author fullname='A. Farrel' initials='A.' role='editor' surname='Farrel'><organization/></author>
<date month='November' year='2012'/>
<abstract><t>Computing optimum routes for Label Switched Paths (LSPs) across multiple domains in MPLS Traffic Engineering (MPLS-TE) and GMPLS networks presents a problem because no single point of path computation is aware of all of the links and resources in each domain.  A solution may be achieved using the Path Computation Element (PCE) architecture.</t><t>Where the sequence of domains is known a priori, various techniques can be employed to derive an optimum path.  If the domains are simply connected, or if the preferred points of interconnection are also known, the Per-Domain Path Computation technique can be used.  Where there are multiple connections between domains and there is no preference for the choice of points of interconnection, the Backward-Recursive PCE-based Computation (BRPC) procedure can be used to derive an optimal path.</t><t>This document examines techniques to establish the optimum path when the sequence of domains is not known in advance.  The document shows how the PCE architecture can be extended to allow the optimum sequence of domains to be selected, and the optimum end-to-end path to be derived through the use of a hierarchical relationship between domains.  This document is not an Internet Standards Track  specification; it is published for informational purposes.</t></abstract>
</front>
<seriesInfo name='RFC' value='6805'/>
<seriesInfo name='DOI' value='10.17487/RFC6805'/>
</reference>



<reference anchor='RFC7446' target='https://www.rfc-editor.org/info/rfc7446'>
<front>
<title>Routing and Wavelength Assignment Information Model for Wavelength Switched Optical Networks</title>
<author fullname='Y. Lee' initials='Y.' role='editor' surname='Lee'><organization/></author>
<author fullname='G. Bernstein' initials='G.' role='editor' surname='Bernstein'><organization/></author>
<author fullname='D. Li' initials='D.' surname='Li'><organization/></author>
<author fullname='W. Imajuku' initials='W.' surname='Imajuku'><organization/></author>
<date month='February' year='2015'/>
<abstract><t>This document provides a model of information needed by the Routing and Wavelength Assignment (RWA) process in Wavelength Switched Optical Networks (WSONs).  The purpose of the information described in this model is to facilitate constrained optical path computation in WSONs.  This model takes into account compatibility constraints between WSON signal attributes and network elements but does not include constraints due to optical impairments.  Aspects of this information that may be of use to other technologies utilizing a GMPLS control plane are discussed.</t></abstract>
</front>
<seriesInfo name='RFC' value='7446'/>
<seriesInfo name='DOI' value='10.17487/RFC7446'/>
</reference>




    </references>


<section anchor="examples"><name>Examples</name>

<t>This section contains examples of use of the model with RESTCONF
<xref target="RFC8040"/> and JSON encoding.</t>

<t>These examples show how path computation can be requested for the tunnels configuration provided in Appendix A of <xref target="I-D.ietf-teas-yang-te"/>.</t>

<section anchor="basic-example"><name>Basic Path Computation</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 13.1 of of <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>In this case, the TE Tunnel has only one primary path with no specific constraints.</t>

<figure><artwork><![CDATA[
POST /restconf/operations/ietf-te:te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 1,
          "tunnel-name": "Example_LSP_Tunnel_A_2",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "10.0.0.1",
          "destination": "10.0.0.4",
          "bidirectional": "false",
          "signaling-type": "te-types:path-setup-rsvp"
        }
      ]
    }
  }
}
]]></artwork></figure>

</section>
<section anchor="transient-state-example"><name>Path Computation with transient state</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 13.1 of of <xref target="I-D.ietf-teas-yang-te"/> requesting some transient state to be reported within the operational datastore, as described <xref target="temp-state"/>.</t>

<t>In this case, the TE Tunnel has only one primary path with no specific constraints.</t>

<figure><artwork><![CDATA[
POST /restconf/operations/ietf-te:te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 2,
          "tunnel-name": "Example_LSP_Tunnel_A_2",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "10.0.0.1",
          "destination": "10.0.0.4",
          "bidirectional": "false",
          "signaling-type": "te-types:path-setup-rsvp",
          "requested-state": {
            "transaction-id": "example"
          }
        }
      ]
    }
  }
}
]]></artwork></figure>

</section>
<section anchor="global-path-constraint-example"><name>Path Computation with Global Path Constraint</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 13.3 of of <xref target="I-D.ietf-teas-yang-te"/>. The 'named path constraint' is created in section 13.2 of <xref target="I-D.ietf-teas-yang-te"/> applies to this path computation request.</t>

<figure><artwork><![CDATA[
POST /restconf/operations/ietf-te:te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 3,
          "tunnel-name": "Example_LSP_Tunnel_A_4_1",
          "path-name": "Simple_LSP_1",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "10.0.0.1",
          "destination": "10.0.0.4",
          "bidirectional": "false",
          "signaling-type": "path-setup-rsvp",
          "named-path-constraint": "max-hop-3",
          "requested-state": {}
        }
      ]
    }
  }
}
]]></artwork></figure>

</section>
<section anchor="tunnel-path-constraint-example"><name>Path Computation with Per-tunnel Path Constraint</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 13.4 of of <xref target="I-D.ietf-teas-yang-te"/>, using a per tunnel path constraint.</t>

<figure><artwork><![CDATA[
POST /restconf/operations/ietf-te:te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 4,
          "tunnel-name": "Example_LSP_Tunnel_A_4_2",
          "path-name": "path1",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "10.0.0.1",
          "destination": "10.0.0.4",
          "bidirectional": "false",
          "signaling-type": "te-types:path-setup-rsvp",
          "path-metric-bounds": {
            "path-metric-bound": [
              {
                "metric-type": "te-types:path-metric-hop",
                "upper-bound": "3"
              }
            ]
          }
        }
      ]
    }
  }
}
]]></artwork></figure>

</section>
<section anchor="path-computation-result"><name>Path Computation result</name>

<t>This example reports the output of the path computation RPC request described in <xref target="tunnel-path-constraint-example"/>.</t>

<figure><artwork><![CDATA[
HTTP/1.1 200 OK
Host: example.com
Content-Type: application/yang-data+json

{
  "ietf-te:output": {
    "path-compute-result": {
      "ietf-te-path-computation:response": [
        {
          "response-id": 3,
          "computed-paths-properties": {
            "computed-path-properties": [
              {
                "k-index": "1",
                "path-properties": {
                  "path-route-objects": {
                    "path-route-object": [
                      {
                        "index": "1",
                        "numbered-node-hop": {
                          "node-id": "10.0.0.2"
                        }
                      },
                      {
                        "index": "2",
                        "numbered-node-hop": {
                          "node-id": "10.0.0.4"
                        }
                      }
                    ]
                  }
                }
              }
            ]
          },
          "tunnel-ref": "Example_LSP_Tunnel_A_4_1",
          "primary-path-ref": "path1"
        }
      ]
    }
  }
}
]]></artwork></figure>

</section>
</section>
<section numbered="false" anchor="acknowledgments"><name>Acknowledgments</name>

<t>The authors would like to thank Igor Bryskin and Xian Zhang for
   participating in the initial discussions that have triggered this
   work and providing valuable insights.</t>

<t>The authors would like to thank the authors of the TE tunnel YANG
   data model <xref target="I-D.ietf-teas-yang-te"/>, in particular Igor Bryskin, Vishnu Pavan
   Beeram, Tarek Saad and Xufeng Liu, for their inputs to the
   discussions and support in having consistency between the Path
   Computation and TE tunnel YANG data models.</t>

<t>The authors would like to thank Adrian Farrel, Dhruv Dhody, Igor
   Bryskin, Julien Meuric and Lou Berger for their valuable input to the
   discussions that has clarified that the path being set up is not
   necessarily the same as the path that has been previously computed
   and, in particular to Dhruv Dhody, for his suggestion to describe the
   need for a path verification phase to check that the actual path
   being set up meets the required end-to-end metrics and constraints.</t>

<t>The authors would like to thank Aihua Guo, Lou Berger, Shaolong Gan,
   Martin Bjorklund and Tom Petch for their useful comments on how to
   define XPath statements in YANG RPCs.</t>

<t>The authors would like to thank Haomian Zheng, Yanlei Zheng, Tom
   Petch, Aihua Guo and Martin Bjorklund for their review and valuable
   comments to this document.</t>

<t>Previous versions of document were prepared using 2-Word-v2.0.template.dot.</t>

<t>This document was prepared using kramdown.</t>

</section>

    <section anchor="contributors" numbered="false" toc="include" removeInRFC="false">
        <name>Contributors</name>
    <contact initials="V." surname="Lopez" fullname="Victor Lopez">
      <organization>Nokia</organization>
      <address>
        <email>victor.lopez@nokia.com</email>
      </address>
    </contact>
    <contact initials="R." surname="Vilalta" fullname="Ricard Vilalta">
      <organization>CTTC</organization>
      <address>
        <email>ricard.vilalta@cttc.es</email>
      </address>
    </contact>
    <contact initials="K." surname="Sethuraman" fullname="Karthik Sethuraman">
      <organization>NEC</organization>
      <address>
        <email>karthik.sethuraman@necam.com</email>
      </address>
    </contact>
    <contact initials="M." surname="Scharf" fullname="Michael Scharf">
      <organization>Nokia</organization>
      <address>
        <email>michael.scharf@gmail.com</email>
      </address>
    </contact>
    <contact initials="D." surname="Beller" fullname="Dieter Beller">
      <organization>Nokia</organization>
      <address>
        <email>dieter.beller@nokia.com</email>
      </address>
    </contact>
    <contact initials="G." surname="Bruno" fullname="Gianmarco Bruno">
      <organization>Ericsson</organization>
      <address>
        <email>gianmarco.bruno@ericsson.com</email>
      </address>
    </contact>
    <contact initials="F." surname="Lazzeri" fullname="Francesco Lazzeri">
      <organization>Ericsson</organization>
      <address>
        <email>francesco.lazzeri@ericsson.com</email>
      </address>
    </contact>
    <contact initials="Y." surname="Lee" fullname="Young Lee">
      <organization>Samsung Electronics</organization>
      <address>
        <email>younglee.tx@gmail.com</email>
      </address>
    </contact>
    <contact initials="C." surname="Perocchio" fullname="Carlo Perocchio">
      <organization>Ericsson</organization>
      <address>
        <email>carlo.perocchio@ericsson.com</email>
      </address>
    </contact>
    <contact initials="O." surname="Dugeon" fullname="Olivier Dugeon">
      <organization>Orange Labs</organization>
      <address>
        <email>olivier.dugeon@orange.com</email>
      </address>
    </contact>
    <contact initials="J." surname="Meuric" fullname="Julien Meuric">
      <organization>Orange Labs</organization>
      <address>
        <email>julien.meuric@orange.com</email>
      </address>
    </contact>
    </section>

  </back>

<!-- ##markdown-source:
H4sIAJjWJWIAA+y9a3sbx5Ew+h2/opf5EDIGQOvmJHQSWyJpR2dtSUdU7M1Z
7dlnCAzJWYEY7MxANB3q/PbTdenu6tvMgFaur7HZhAL6Ul1dXbeurprNZpNF
vazWl0dq213MfjOZdFW3Ko/UU/Xnpy++VidFV6hv62W5Uhd1o5ryf7dl2+n2
alN0V2pRX2+2XdFV9XoyKc7Pm/L9kfpzoX+G1q+gybFosqwX6+Jaj75siotu
VpV6yq4s2tmt7jKDEWdixNmDX09u6ubdZVNvN0fqzenTM/W9/jfM/jV8N1kU
XXlZN7dHqu2Wk2rTHKmu2bbdw08//e2nDyeTtivWy/8uVvVaz3lbtpNNdaT+
s6sXU9XWTdeUF63+6/aa/tBTX5frrv0vvZRtd1U3RxOlZvr/lSKon3d6KPVs
21b4ZVMDospl1dUNflE3Go1/3BY3ZaXelIurdb2qLys9LfxYXhfV6khVMMb8
XI/x5RW2nOtpg3nOyuay0hOVq7rr+uZ6Ub+rCjl6iz3n59TzyzX8npjgZbso
GvV1vf6xWJU/qmWpTqqawKzWrf59nv4RJ31TrsqLel0tvJlrGHJ+yb2WGtK6
/bKzTRNAPF1vm+JSnV0VzXXhhv+6ri9XpRy6WLdXxZeX+H1iHE1uepDKjXB8
Va0L9Sc9LbZ1yLmqNJ09/u2XC2iwxd/ni3Uw3EmxrjTY6rhc6BWVq5UY+bSp
Fm1br+WoS2o/X9j2X5bcDIHV52vdNdX5tosJ6rtqob9V39Sb8seeXX2PzeYr
aJbd09cay81SD7kqVp3A5/GbN8dysAbbzd9Tuy8XXbeYI4nKwf69aLqr6p2m
xO5K79J1sRbgnXrjvaOm89Y2/XJdLorrBIjfVourQnOSM/0/zUXPgq+p4bzF
hl9ewreJ8U40AykbOCersu9ULLEdnArdLovAr6tifV00C33wmu267t/1S9N4
fg6N/S33x/2qKdaLstXjflP8+KNu2D/yhWk+X1HzvrH/XG81M/ymLN2YZ8V1
C1+erspF18Dh8/jPLfRYleW8+yGL1+Oi0XzuVdnUC31UBjCxgMbzjWncB+3L
VfW+0ht2sr0sa0FRL/WSL0uNnnMP1Jqaz5fY/MsaWyWG/b+2q6pcq2/LrZ56
cNT/wdbza2wtB53MZjOlG3dNsegm0OXNVdmUSh9q1S7KddFoljZV3e1Gn6DV
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
erqsVfYRzbPcUoNnpP1dzCdvzQXCLbqlUSkSHYPukfj1EaoS90Rxa+mdJbLN
GrfSMZ717KbMhbJp6gZTog8ZFq5l0jeo21MLKhW9MUwkpWPI5hCR0XbF9YY4
Ft54QvWAWQEVjKqw9Ijs2pRFK27SEuoPb7ZNWt73BizMbW67R7k/7Y82oaY0
g51SFKRX9ScPipAEA5qkk70Dh2lmv+gb2GbPTA7p5xwNoR0aMgWtiodOweuG
TpnmFILTern8eZuAEOGfF9Wq4wfb1jbn1LTGchfRPO2B2FuVa6WlraceD4BG
DgPpGZADL/WJWJXWgeDT1jgIsCgCFHMQxRqUJvVV+fu9ROEHr2rD3gdbBwKL
LGAdCCzhQFUWuOTC745fnpyqZ6dfP39x9gelkVqqvVz5hS8ffvrw4ezTB7OH
j7Gcw95koOiD+suETvYMCAC+eDB/8Ln+Di2RTbHQk22b9RH0P9oUGur26Ifr
1dG6PUJ+kBt3D8aAFNTVD3iltfgcKkNU11jJnjvh3KLV5/hPv6CCUnuvvzr+
s/4cqaeEnBOob/GtK6/RgFG7UKfrS613lA0WovPrMUHlrudrTYsXej0tgvYB
wDn8lXoBZVGwipWeRlG1FCzppeHYrGD5MDfW/cAKG6zkFC3c1pes+XFFMRih
hkIpSw1SN4tKAKlzfd40VqE0mW47/9VhjBOSFSFm6Ns8fn7z619/dgQVxK71
BjokvcGxMkiaOzzUzWVhrjhx1L0UUp/CtTTESGybElF6ZgIW1P6b06dnfH6/
r5t38N3X4CXBObBS34KO1973X6vvy/Mj/efvrrpuc3R42NX1qsWCSXMNyOHN
5SEg7fAPPNzX6puq7XSH310XmqHUR/Drl6b5HybUjHYOhn3eFataPdu2VeiS
NANU0GJ+rlt8ebUtbspqrrclHuisbC4rPVK5qrsuO1iLrebn1OrLdf2uKtLj
fVctgLi+qTflj7nR3mOb+Qra9I31sl0Ujfq6Xv9YrMof1bJUJ1Xd5katofX8
klsvy6Vu+yWU7Lmo19UiM8XT9bYpLtXZVdFcF7mRNVe8Kr68rOvLVZke5s+a
2M+u8ui7qvTpePzbLyFAothqcOrr+WIdj/NaA9osNRJXxarLwtNgq/l7avXl
ousW87KNR/v3oumuqnd6j7srvczrIvJfmxHfUct5a1t+uS4XxXV6td9Wi6tC
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
aRdJLSLTOaVb5Lj8ONViV8ViNLcbVCqMxtDPhzQXilSK3uDHsPfuUfCJEQZ0
iTzrk3rEWCViJxb4ExSIn6I+9Kx4JKsft8p7qQ1p4EaqDLspDLuqC/c5Prur
CvdTFO6jJuymJPwjUM2gcjCSenoVgx3VgoyHpEeaZF9wjPCYjJb7o7vs6kEZ
lP1/e09Kb0y/+/wVPSoSKeRZyfQWSkvGs5LpuMMGROqXh5+f/S8/+1+C/j/7
X372v6Q+P/tf/s/yv0jJ0jvA39dHE4uzUb6aUEsY77MZpcuNaJ64Obb3s6Kh
CD+1o8f3NPg1Rg15B0fGFySunrMXz31RyqfybV7+PV7vnfc9J87cdstpB266
MSD6l5D3ZX9+SE9rDjC3Jn+1xGygqHPi9wlaMp2bBassVFdvoPlS07XXPBZ/
Q7fs63tHj9HSe0LIMEC1wgxH22uIm+Db7WiQILoKy8ecU35XfN1J2htmHUE4
w0eQCt9BxvfmdDdOjyM7fXoosBJ+AdASlg3Hr8FU61t6uubibWE11MQ8OY3K
aHhisz94wsT6SQ1jNNW6iIEboSenFp92WBIKiuCGdSqCIzyTGMImghGiIIrk
kodDJvpDUfoXNQLLo6/5o+x1CVxnojMIpl2jSQYXjgyOI2i93XCJ4CwcWTr0
8va4gMUYnNiASQYV9YYVDWkHYYxJMsQo3MHxtxw7Xkj85B3P3QVInP+87+rj
7PugG2tnt9Rf8cR/BApokyQAOoX/fe/cKZKJvTxJhvXPSTR9SZj+uiB6aP/4
9B1mWQj1+VHhdqZRyQ/ssQ5pqzU4qB12GT2fM81ZwVxgNQkRtppo6yq1dvUG
i8vO7GuKxrV3NodUKhOmSxQ87jl+pZH9uWzgJ9HN/ITpKOg3zj8Mllz+eQY+
gUkFIKffwEQKNeEPPJA2Fal5YoE75b+DSZtXO6VgzZhUHwJUjqCGsZQQtDPZ
SOFZd8LXvptnPqAwA0n6wZaD4UoTXtEsrm7jqgnwsY+tbDttrG3KtSbaxS2b
Vu2exzayb9nMiy6bENV48N2I7p2F/5ySN77CFLfB9OmnQpYiE27UvoctAQT8
ZIPlHHjW/Z8XcWG/TQ2PEitM5krAKlepxS4FaDgflp53x93HBZfzu+XeEuQH
GXpjsNMz+pPcto8Ird+RVfe9Js68YTScEbmuxJ1qNgt6FTj6NSJVCRZ4TewI
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
zNZp/+g/oSBcTBFkAgA=

-->

</rfc>

