<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.17 (Ruby 2.7.0) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc comments="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-teas-yang-path-computation-20" category="std" consensus="true" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="Yang for Path Computation">A YANG Data Model for requesting path computation</title>

    <author initials="I." surname="Busi" fullname="Italo Busi" role="editor">
      <organization>Huawei Technologies</organization>
      <address>
        <email>italo.busi@huawei.com</email>
      </address>
    </author>
    <author initials="S." surname="Belotti" fullname="Sergio Belotti" role="editor">
      <organization>Nokia</organization>
      <address>
        <email>sergio.belotti@nokia.com</email>
      </address>
    </author>
    <author initials="O." surname="Gonzalez de Dios" fullname="Oscar Gonzalez de Dios">
      <organization>Telefonica</organization>
      <address>
        <email>oscar.gonzalezdedios@telefonica.com</email>
      </address>
    </author>
    <author initials="A." surname="Sharma" fullname="Anurag Sharma">
      <organization>Google</organization>
      <address>
        <email>ansha@google.com</email>
      </address>
    </author>
    <author initials="Y." surname="Shi" fullname="Yan Shi">
      <organization>China Unicom</organization>
      <address>
        <email>shiyan49@chinaunicom.cn</email>
      </address>
    </author>
    <author initials="D." surname="Ceccarelli" fullname="Daniele Ceccarelli">
      <organization>Ericsson</organization>
      <address>
        <email>daniele.ceccarelli@ericsson.com</email>
      </address>
    </author>

    <date year="2023" month="March" day="09"/>

    
    <workgroup>TEAS Working Group</workgroup>
    

    <abstract>


<t>There are scenarios, typically in a hierarchical Software-Defined
   Networking (SDN) context, where the topology information provided by
   a Traffic Engineering (TE) network provider may be insufficient for
   its client to perform multi-domain path computation. In these cases the
   client would need to request the TE network provider to compute some
   intra-domain paths to be used by the client to choose the optimal multi-domain paths.</t>

<t>This document provides a mechanism to request path computation by augmenting the Remote Procedure Calls (RPCs) defined in RFC YYYY.</t>

<t>[RFC EDITOR NOTE: Please replace RFC YYYY with the RFC number of
   draft-ietf-teas-yang-te once it has been published.</t>

<t>Moreover, this document describes some use cases where the path
   computation request, via YANG-based protocols (e.g., NETCONF or
   RESTCONF), can be needed.</t>



    </abstract>



  </front>

  <middle>


<section anchor="intro"><name>Introduction</name>

<t anchor="pc-model">There are scenarios, typically in a hierarchical Software-Defined
   Networking (SDN) context, where the topology information provided by
   a Traffic Engineering (TE) network provider may be insufficient for
   its client to perform multi-domain path computation. In these cases the
   client would need to request the TE network provider to compute some
   intra-domain paths that could be used together with its topology information
   to compute the multi-domain path.</t>

<t>These types of scenarios can be applied to different interfaces in
   different reference architectures:</t>

<t><list style="symbols">
  <t>Application-Based Network Operations (ABNO) control interface
<xref target="RFC7491"/>, in which an Application Service Coordinator can request the
ABNO controller to take in charge path calculation (see Figure 1
in <xref target="RFC7491"/>).</t>
  <t>Abstraction and Control of TE Networks (ACTN) <xref target="RFC8453"/>, where a
controller hierarchy is defined.
In the ACTN context, path computation is needed on the interface
between Customer Network Controller (CNC)  and Multi-Domain
Service Coordinator (MDSC), called CNC-MDSC Interface (CMI),
and on the interface between MSDC and Provisioning Network
Controller (PNC), called MDSC-PNC Interface  (MPI). 
<xref target="RFC8454"/> describes an information model for the Path
Computation request.  <vspace blankLines='1'/>
Multiple protocol solutions can be used for communication between
different controller hierarchical levels. This document assumes that
the controllers are communicating using YANG-based protocols (e.g.,
NETCONF <xref target="RFC6241"/> or RESTCONF <xref target="RFC8040"/>).  <vspace blankLines='1'/>
Path Computation Elements (PCEs), controllers and orchestrators
perform their operations based on Traffic Engineering Databases
(TED). Such TEDs can be described, in a technology agnostic way, with
the YANG data model for TE Topologies <xref target="RFC8795"/>. Furthermore, the
technology specific details of the TED are modelled in the technology
specific topology models, e.g., the <xref target="I-D.ietf-ccamp-otn-topo-yang"/> for Optical Transport
Network (OTN) Optical Data Unit (ODU) technologies, which augment the
common TE topology model in <xref target="RFC8795"/>.  <vspace blankLines='1'/>
The availability of such topology models allows the provisioning of
the TED using YANG-based protocols (e.g., NETCONF or RESTCONF).
Furthermore, it enables a PCE/controller performing the necessary
abstractions or modifications and offering this customized topology
to another PCE/controller or high level orchestrator.  <vspace blankLines='1'/>
The tunnels that can be provided over the networks described with the
topology models can be also set-up, deleted and modified via YANG-
based protocols (e.g., NETCONF or RESTCONF) using the TE tunnel YANG
data model <xref target="I-D.ietf-teas-yang-te"/>.  <vspace blankLines='1'/>
This document defines a YANG data model <xref target="RFC7950"/> that augments the RPC defined in <xref target="I-D.ietf-teas-yang-te"/>. The use of this RPC is complimentary to the configuration of a TE tunnel path in "compute-only" mode, as described in <xref target="I-D.ietf-teas-yang-te"/>.  <vspace blankLines='1'/>
The YANG data model definition does not make any assumption about
whether that the client or the server implement a "PCE"
functionality, as defined in <xref target="RFC4655"/>, and the Path Computation
Element Communication Protocol (PCEP) protocol, as defined in
<xref target="RFC5440"/>.  <vspace blankLines='1'/>
Moreover, this document describes some use cases where a path
computation request, via YANG-based protocols (e.g., NETCONF or
RESTCONF), can be needed.  <vspace blankLines='1'/>
The YANG data model defined in this document conforms to the Network
Management Datastore Architecture <xref target="RFC8342"/>.</t>
</list></t>

<section anchor="terminology"><name>Terminology</name>

<t>TED:</t>

<ul empty="true"><li>
  <t>The traffic engineering database is a collection of all TE
   information about all TE nodes and TE links in a given network.</t>
</li></ul>

<t>PCE:</t>

<ul empty="true"><li>
  <t>A Path Computation Element (PCE) is an entity that is capable of
   computing a network path or route based on a network graph, and of
   applying computational constraints during the computation.  The PCE
   entity is an application that can be located within a network node or
   component, on an out-of-network server, etc.  For example, a PCE
   would be able to compute the path of a TE Label Switched Path (LSP)
   by operating on the TED and considering bandwidth and other
   constraints applicable to the TE LSP service request. <xref target="RFC4655"/>.</t>
</li></ul>

<t>Domain:</t>

<ul empty="true"><li>
  <t>TE information is the data relating to nodes and TE links
   that is used in the process of selecting a TE path.  TE information
   is usually only available within a network.  We call such a zone of
   visibility of TE information a domain.  An example of a domain may be
   an IGP area or an Autonomous System. <xref target="RFC7926"/></t>
</li></ul>

<t>The terminology for describing YANG data models is found in
   <xref target="RFC7950"/>.</t>

</section>
<section anchor="tree-diagram"><name>Tree Diagram</name>

<t>Tree diagrams used in this document follow the notation defined in
   <xref target="RFC8340"/>.</t>

</section>
<section anchor="prefixes-in-data-node-names"><name>Prefixes in Data Node Names</name>

<t>In this document, names of data nodes and other data model objects
   are prefixed using the standard prefix associated with the
   corresponding YANG imported modules, as shown in <xref target="tab-prefix"/>.</t>

<texttable title="Prefixes and corresponding YANG modules" anchor="tab-prefix">
      <ttcol align='left'>Prefix</ttcol>
      <ttcol align='left'>YANG module</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>te-types</c>
      <c>ietf-te-types</c>
      <c>[RFCZZZZ]</c>
      <c>te</c>
      <c>ietf-te</c>
      <c>[RFCYYYY]</c>
      <c>te-pc</c>
      <c>ietf-te-path-computation</c>
      <c>RFCXXXX</c>
</texttable>

<t>RFC Editor Note:
Please replace XXXX with the RFC number assigned to this document.
Please replace YYYY with the RFC number of <xref target="I-D.ietf-teas-yang-te"/> once it has been published.
Please replace ZZZZ with the RFC number of <xref target="I-D.ietf-teas-rfc8776-update"/> once it has been published.
Please remove this note.</t>

</section>
</section>
<section anchor="use-cases"><name>Use Cases</name>

<t>This section presents some use cases, where a client needs to request
   underlying SDN controllers for path computation.</t>

<t>The use of the YANG data model defined in this document is not
   restricted to these use cases but can be used in any other use case
   when deemed useful.</t>

<t>The presented uses cases have been grouped, depending on the
   different underlying topologies: Packet/Optical Integration (<xref target="poi-uc"/>);
   multi-domain Traffic Engineered (TE) Networks (<xref target="md-uc"/>); and Data Center
   Interconnections (<xref target="dci-uc"/>). Use cases in <xref target="brpc-uc"/> and <xref target="hpce-uc"/>
   respectively present how to
   apply this YANG data model for standard multi-domain PCE i.e.
   Backward Recursive Path Computation <xref target="RFC5441"/> and Hierarchical PCE
   <xref target="RFC6805"/>.</t>

<section anchor="poi-uc"><name>Packet/Optical Integration</name>

<t>In this use case, an optical domain is used to provide connectivity
   to some nodes of a packet domain (see <xref target="fig-poi-uc"/>).</t>

<figure title="Packet/Optical Integration use case" anchor="fig-poi-uc"><artwork type="ascii-art" name="poi-use-case.txt"><![CDATA[
                                +----------------+
                                |                |
                                | Packet/Optical |
                                |  Coordinator   |
                                |                |
                                +---+------+-----+
                                    |      |
                       +------------+      |
                       |                   +-----------+
                +------V-----+                         |
                |            |                  +------V-----+
                | Packet     |                  |            |
                | Domain     |                  | Optical    |
                | Controller |                  | Domain     |
                |            |                  | Controller |
                +------+-----+                  +-------+----+
                       |                                |
              .........V.........................       |
              :          packet domain          :       |
          +----+                               +----+   |
          | R1 |= = = = = = = = = = = = = = = =| R2 |   |
          +-+--+                               +--+-+   |
            | :                                 : |     |
            | :................................ : |     |
            |                                     |     |
            |               +-----+               |     |
            |    ...........| Opt |...........    |     |
            |    :          |  C  |          :    |     |
            |    :         /+--+--+\         :    |     |
            |    :        /    |    \        :    |     |
            |    :       /     |     \       :    |     |
            |   +-----+ /   +--+--+   \ +-----+   |     |
            |   | Opt |/    | Opt |    \| Opt |   |     |
            +---|  A  |     |  D  |     |  B  |---+     |
                +-----+\    +--+--+    /+-----+         |
                 :      \      |      /      :          |
                 :       \     |     /       :          |
                 :        \ +--+--+  / optical<---------+
                 :         \| Opt |/  domain :
                 :..........|  E  |..........:
                            +-----+
]]></artwork></figure>

<t><xref target="fig-poi-uc"/> as well as <xref target="fig-poi-abstraction"/> describe two different
   examples of packet/optical topologies and only show a partial view of the
   packet network connectivity, before additional packet connectivity is
   provided by the optical network.</t>

<t>It is assumed that the Optical Domain Controller provides to the
   Packet/Optical Coordinator an abstracted view of the optical network.
   A possible abstraction could be to represent the whole optical
   network as one "virtual node" with "virtual ports" connected to the
   access links, as shown in <xref target="fig-poi-abstraction"/>.</t>

<t>It is also assumed that Packet Domain Controller can provide the
   Packet/Optical Coordinator the information it needs to set up
   connectivity between packet nodes through the optical network (e.g.,
   the access links).</t>

<t>The path computation request helps the Packet/Optical Coordinator to
   know the real connections that can be provided by the optical
   network.</t>

<figure title="Packet and Optical Topology Abstractions" anchor="fig-poi-abstraction"><artwork type="ascii-art" name="poi-topology-abstraction.txt"><![CDATA[
                       ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,.
                      ,  Packet/Optical Coordinator view          ,
                     ,                              +----+       , .
                    ,                               |    |      ,
                   ,                                | R2 |     ,   .
                  ,  +----+  +------------ +       /+----+    ,
                 ,   |    |  |             |/-----/ / /      ,     .
                ,    | R1 |--O VP1     VP4 O       / /      ,
               ,     |    |\ |             | /----/ /      ,       .
              ,      +----+ \|             |/      /      ,
             ,        /      O VP2     VP5 O      /      ,         .
            ,        /       |             |  +----+    ,
           ,        /        |             |  |    |   ,           .
          ,        /         O VP3     VP6 O--| R4 |  ,
         ,     +----+ /-----/|_____________|  +----+ ,             .
        ,      |    |/       +------------ +        ,
       ,       | R3 |                              ,               .
      ,        +----+                             ,,,,,,,,,,,,,,,,,
     ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,                ,.
     . Packet Domain Controller view                +----+       ,
       only packet nodes and packet links           |    |      ,  .
     . with access links to the optical network     | R2 |     ,
                  ,  +----+                        /+----+    ,    .
     .           ,   |    |                 /-----/ / /      ,
                ,    | R1 |---                     / /      ,      .
     .         ,     +----+\                 /----/ /      ,
              ,        /    \               /      /      ,        .
     .       ,        /                           /      ,
            ,        /                        +----+    ,          .
     .     ,        /                         |    |   ,
          ,        /                       ---| R4 |  ,            .
     .   ,     +----+ /-----/                 +----+ ,
        ,      |    |/                              ,              .
     . ,       | R3 |                              ,
      ,        +----+                             ,,,,,,,,,,,,,,,,,.
     .,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,                ,
       Optical Domain Controller view                            , .
     . only optical nodes,        +--+                          ,
       optical links and         /|OF|                         ,   .
     . access links from the  +--++--+             /          ,
       packet network         |OA|    \     /-----/ /        ,     .
     .          ,          ---+--+--\  +--+/       /        ,
               ,           \   |  \  \-|OE|-------/        ,       .
     .        ,             \  |   \ /-+--+               ,
             ,               \+--+  X    |               ,         .
     .      ,                 |OB|-/ \   |              ,
           ,                  +--+-\  \+--+            ,           .
     .    ,                  /   \  \--|OD|---        ,
         ,            /-----/     +--+ +--+          ,             .
     .  ,            /            |OC|/             ,
       ,                          +--+             ,               .
     .,                                           ,,,,,,,,,,,,,,,,,,
      ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,                ,
     . Actual Physical View                         +----+       ,
                    ,             +--+              |    |      ,
     .             ,             /|OF|              | R2 |     ,
                  ,  +----+   +--++--+             /+----+    ,
     .           ,   |    |   |OA|    \     /-----/ / /      ,
                ,    | R1 |---+--+--\  +--+/       / /      ,
     .         ,     +----+\   |  \  \-|OE|-------/ /      ,
              ,        /    \  |   \ /-+--+        /      ,
     .       ,        /      \+--+  X    |        /      ,
            ,        /        |OB|-/ \   |    +----+    ,
     .     ,        /         +--+-\  \+--+   |    |   ,
          ,        /         /   \  \--|OD|---| R4 |  ,
     .   ,     +----+ /-----/     +--+ +--+   +----+ ,
        ,      |    |/            |OC|/             ,
     . ,       | R3 |             +--+             ,
      ,        +----+                             ,
     .,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
]]></artwork></figure>

<t>In this use case, the Packet/Optical Coordinator needs to set up an
   optimal underlying path for an IP link between R1 and R2.</t>

<t>As depicted in <xref target="fig-poi-abstraction"/>, the Packet/Optical Coordinator has only an
   "abstracted view" of the physical network, and it does not know the
   feasibility or the cost of the possible optical paths (e.g., VP1-VP4
   and VP2-VP5), which depend on the current status of the physical
   resources within the optical network and on vendor-specific optical
   attributes.</t>

<t>The Packet/Optical Coordinator can request the underlying Optical
   Domain Controller to compute a set of potential optimal paths, taking
   into account optical constraints. Then, based on its own constraints,
   policy and knowledge (e.g. cost of the access links), it can choose
   which one of these potential paths to use to set up the optimal end-
   to-end path crossing optical network.</t>

<figure title="Packet/Optical Integration path computation example" anchor="fig-poi-example"><artwork type="ascii-art" name="poi-example.txt"><![CDATA[
                    ............................
                    :                          :
                    O VP1                  VP4 O
           cost=10 /:\                        /:\ cost=10
                  / : \----------------------/ : \
          +----+ /  :         cost=50          :  \ +----+
          |    |/   :                          :   \|    |
          | R1 |    :                          :    | R2 |
          |    |\   :                          :   /|    |
          +----+ \  :  /--------------------\  :  / +----+
                  \ : /       cost=55        \ : /
            cost=5 \:/                        \:/ cost=5
                    O VP2                  VP5 O
                    :                          :
                    :..........................:
]]></artwork></figure>

<t>For example, in <xref target="fig-poi-example"/>, the Packet/Optical Coordinator can request
   the Optical Domain Controller to compute the paths between VP1-VP4
   and VP2-VP5 and then decide to set up the optimal end-to-end path
   using the VP2-VP5 optical path even if this is not the optimal path
   from the optical domain perspective.</t>

<t>Considering the dynamicity of the connectivity constraints of an
   optical domain, it is possible that a path computed by the Optical
   Domain Controller when requested by the Packet/Optical Coordinator is
   no longer valid/available when the Packet/Optical Coordinator
   requests it to be set up. This is further discussed in <xref target="rpc-motivation"/>.</t>

</section>
<section anchor="md-uc"><name>Multi-domain TE networks</name>

<t>In this use case there are two TE domains which are interconnected
   together by multiple inter-domains links.</t>

<t>A possible example could be a multi-domain optical network.</t>

<figure title="Multi-domain multi-link interconnection" anchor="md-ml-connection"><artwork type="ascii-art" name="multi-domain-use-case.txt"><![CDATA[
                            +--------------+
                            | Multi-Domain |
                            | Controller   |
                            +---+------+---+
                                |      |
                   +------------+      |
                   |                   +-----------+
            +------V-----+                         |
            |            |                         |
            | TE Domain  |                  +------V-----+
            | Controller |                  |            |
            |      1     |                  | TE Domain  |
            +------+-----+                  | Controller |
                   |                        |      2     |
                   |                        +------+-----+
          .........V..........                     |
          :                  :                     |
         +-----+             :                     |
         |     |             :            .........V..........
         |  X  |             :            :                  :
         |     |          +-----+      +-----+                :
         +-----+          |     |      |     |               :
          :               |  C  |------|  E  |               :
      +-----+    +-----+ /|     |      |     |\ +-----+    +-----+
      |     |    |     |/ +-----+      +-----+ \|     |    |     |
      |  A  |----|  B  |     :            :     |  G  |----|  H  |
      |     |    |     |\    :            :    /|     |    |     |
      +-----+    +-----+ \+-----+      +-----+/ +-----+    +-----+
          :               |     |      |     |               :
          :               |  D  |------|  F  |               :
          :               |     |      |     |          +-----+
          :               +-----+      +-----+          |     |
          :                  :            :             |  Y  |
          :                  :            :             |     |
          :   TE domain 1    :            : TE domain 2 +-----+
          :..................:            :.................:
]]></artwork></figure>

<t>In order to set up an end-to-end multi-domain TE path (e.g., between
   nodes A and H), the Multi-Domain Controller needs to know the
   feasibility or the cost of the possible TE paths within the two TE
   domains, which depend on the current status of the physical resources
   within each TE domain. This is more challenging in case of optical
   networks because the optimal paths depend also on vendor-specific
   optical attributes (which may be different in the two domains if they
   are provided by different vendors).</t>

<t>In order to set up a multi-domain TE path (e.g., between nodes A and
   H), the Multi-Domain Controller can request the TE Domain Controllers
   to compute a set of intra-domain optimal paths and take decisions
   based on the information received. For example:</t>

<t><list style="symbols">
  <t>The Multi-Domain Controller asks TE Domain Controllers to provide
set of paths between A-C, A-D, E-H and F-H</t>
  <t>TE Domain Controllers return a set of feasible paths with the
associated costs: the path A-C is not part of this set (in optical
networks, it is typical to have some paths not being feasible due
to optical constraints that are known only by the Optical Domain
Controller)</t>
  <t>The Multi-Domain Controller will select the path A-D-F-H since it
is the only feasible multi-domain path and then request the TE
Domain Controllers to set up the A-D and F-H intra-domain paths</t>
  <t>If there are multiple feasible paths, the Multi-Domain Controller
can select the optimal path knowing the cost of the intra-domain
paths (provided by the TE domain controllers) and the cost of the
inter-domain links (known by the Multi-Domain Controller)  <vspace blankLines='1'/>
This approach may have some scalability issues when the number of TE
domains is quite big (e.g. 20).  <vspace blankLines='1'/>
In this case, it would be worthwhile using the abstract TE topology
information provided by the TE Domain Controllers to limit the number
of potential optimal end-to-end paths and then request path
computation from fewer TE Domain Controllers in order to decide what
the optimal path within this limited set is.  <vspace blankLines='1'/>
For more details, see <xref target="topo-pc-complement"/>.</t>
</list></t>

</section>
<section anchor="dci-uc"><name>Data Center Interconnections</name>

<t>In these use case, there is a TE domain which is used to provide
   connectivity between Data Centers which are connected with the TE
   domain using access links.</t>

<figure title="Data Center Interconnection use case" anchor="fig-dci-uc"><artwork type="ascii-art" name="dci-use-case.txt"><![CDATA[
                        +--------------+
                        | Cloud Network|
                        | Orchestrator |
                        +--------------+
                          |  |  |  |
            +-------------+  |  |  +------------------------+
            |                |  +------------------+        |
            |       +--------V---+                 |        |
            |       |            |                 |        |
            |       | TE Network |                 |        |
     +------V-----+ | Controller |          +------V-----+  |
     | DC         | +------------+          | DC         |  |
     | Controller |     |                   | Controller |  |
     +------------+     |   +-----+         +------------+  |
          |         ....V...|     |........         |       |
          |         :       |  P  |       :         |       |
     .....V.....    :      /+-----+\      :    .....V.....  |
     :         :  +-----+ /    |    \ +-----+  :         :  |
     :  DC1 || :  |     |/     |     \|     |  :  DC2 || :  |
     :    ||||----| PE1 |      |      | PE2 |----   |||| :  |
     : _|||||| :  |     |\     |     /|     |  : _|||||| :  |
     :         :  +-----+ \ +-----+ / +-----+  :         :  |
     :.........:    :      \|     |/      :    :.........:  |
                    :.......| PE3 |.......:                 |
                            |     |                         |
                            +-----+               +---------V--+
                          .....|.....             | DC         |
                          :         :             | Controller |
                          :  DC3 || :             +------------+
                          :    |||| :                  |
                          : _|||||| <------------------+
                          :         :
                          :.........:
]]></artwork></figure>

<t>In this use case, there is the need to transfer data from Data Center
   1 (DC1) to either DC2 or DC3 (e.g. workload migration).</t>

<t>The optimal decision depends both on the cost of the TE path (DC1-DC2
   or DC1-DC3) and of the Data Center resources within DC2 or DC3.</t>

<t>The Cloud Network Orchestrator needs to make a decision for optimal
   connection based on TE network constraints and Data Center resources.</t>

<t>It may not be able to make this decision because it has only an
   abstract view of the TE network (as in <xref target="poi-uc"/>).</t>

<t>The Cloud Network Orchestrator can request to the TE Network
   Controller to compute the cost of the possible TE paths (e.g., DC1-
   DC2 and DC1-DC3) and to the DC Controller to provide the information
   it needs about the required Data Center resources within DC2 and DC3
   and then it can take the decision about the optimal solution based on
   this information and its policy.</t>

</section>
<section anchor="brpc-uc"><name>Backward Recursive Path Computation scenario</name>

<t><xref target="RFC5441"/> has defined the Virtual Source Path Tree (VSPT) flag within the RP (Request Parameters) object in order to compute inter-domain paths following a
   "Backward Recursive Path Computation" (BRPC) method. The main
   principle is to forward the PCReq message up to the destination
   domain. Then, each PCE involved in the computation will compute its
   part of the path and send it back to the requester through PCE
   Response message. The resulting computation is spread from
   destination PCE to source PCE. Each PCE is in charge of merging the
   path it received with the one it calculated. At the end, the source
   PCE merges its local part of the path with the received one to
   achieve the end-to-end path.</t>

<t><xref target="fig-brpc-example"/> below show a typical BRPC scenario where 3 PCEs cooperate to
   compute inter-domain paths.</t>

<figure title="BRPC Scenario" anchor="fig-brpc-example"><artwork type="ascii-art" name="brpc-scenario.txt"><![CDATA[
                   +----------------+          +----------------+
                   |  Domain (B)    |          |  Domain (C)    |
                   |                |          |                |
                   |        /-------|---PCEP---|--------\       |
                   |       /        |          |         \      |
                   |   (PCE)        |          |   -    (PCE)   |
                   |    /           <---------->  |D|           |
                   |   /            |  Inter   |   -            |
                   +---|----^-------+  Domain  +----------------+
                       |    |          Link
                     PCEP   |
                       |    | Inter-domain Link
                       |    |
                   +---|----v-------+
                   |   |            |
                   |   | Domain (A) |
                   |   \            |
                   |  (PCE)    -    |
                   |          |S|   |
                   |           -    |
                   +----------------+
]]></artwork></figure>

<t>In this use case, a client can use the YANG data model defined in
   this document to request path computation from the PCE that controls
   the source of the tunnel. For example, a client can request to the
   PCE of domain A to compute a path from a source S, within domain A,
   to a destination D, within domain C. Then PCE of domain A will use
   PCEP protocol, as per <xref target="RFC5441"/>, to compute the path from S to D and
   in turn gives the final answer to the requester.</t>

</section>
<section anchor="hpce-uc"><name>Hierarchical PCE scenario</name>

<t><xref target="RFC6805"/> has defined an architecture and extensions to the PCE
   standard to compute inter-domain path following a hierarchical
   method. Two new roles have been defined: parent PCE and child PCE.
   The parent PCE is in charge to coordinate the end-to-end path
   computation. For that purpose it sends to each child PCE involved in
   the multi-domain path computation a PCE Request message to obtain the
   local part of the path. Once received all answer through PCE Response
   message, the parent PCE will merge the different local parts of the
   path to achieve the end-to-end path.</t>

<t><xref target="fig-hpce-example"/> below shows a typical hierarchical scenario where a parent
   PCE request end-to-end path to the different child PCE. Note that a
   PCE could take independently the role of child or parent PCE
   depending of which PCE will request the path.</t>

<figure title="Hierarchical domain topology from RFC6805" anchor="fig-hpce-example"><artwork type="ascii-art" name="hierarchical-domain-topology.txt"><![CDATA[
    -----------------------------------------------------------------
    |   Domain 5                                                      |
    |                              -----                              |
    |                             |PCE 5|                             |
    |                              -----                              |
    |                                                                 |
    |    ----------------     ----------------     ----------------   |
    |   | Domain 1       |   | Domain 2       |   | Domain 3       |  |
    |   |                |   |                |   |                |  |
    |   |        -----   |   |        -----   |   |        -----   |  |
    |   |       |PCE 1|  |   |       |PCE 2|  |   |       |PCE 3|  |  |
    |   |        -----   |   |        -----   |   |        -----   |  |
    |   |                |   |                |   |                |  |
    |   |            ----|   |----        ----|   |----            |  |
    |   |           |BN11+---+BN21|      |BN23+---+BN31|           |  |
    |   |   -        ----|   |----        ----|   |----        -   |  |
    |   |  |S|           |   |                |   |           |D|  |  |
    |   |   -        ----|   |----        ----|   |----        -   |  |
    |   |           |BN12+---+BN22|      |BN24+---+BN32|           |  |
    |   |            ----|   |----        ----|   |----            |  |
    |   |                |   |                |   |                |  |
    |   |         ----   |   |                |   |   ----         |  |
    |   |        |BN13|  |   |                |   |  |BN33|        |  |
    |    -----------+----     ----------------     ----+-----------   |
    |                \                                /               |
    |                 \       ----------------       /                |
    |                  \     |                |     /                 |
    |                   \    |----        ----|    /                  |
    |                    ----+BN41|      |BN42+----                   |
    |                        |----        ----|                       |
    |                        |                |                       |
    |                        |        -----   |                       |
    |                        |       |PCE 4|  |                       |
    |                        |        -----   |                       |
    |                        |                |                       |
    |                        | Domain 4       |                       |
    |                         ----------------                        |
    |                                                                 |
     -----------------------------------------------------------------
]]></artwork></figure>

<t>In this use case, a client can use the YANG data model defined in
   this document to request to the parent PCE a path from a source S to
   a destination D. The parent PCE will in turn contact the child PCEs
   through PCEP protocol to compute the end-to-end path and then return
   the computed path to the client, using the YANG data model defined in
   this document. For example the YANG data model can be used to request
   to PCE5 acting as parent PCE to compute a path from source S, within
   domain 1, to destination D, within domain 3. PCE5 will contact child
   PCEs of domain 1, 2 and 3 to obtain local part of the end-to-end path
   through the PCEP protocol. Once received the PCRep message, it
   merges the answers to compute the end-to-end path and send it back to
   the client.</t>

</section>
</section>
<section anchor="motivations"><name>Motivations</name>

<t>This section provides the motivation for the YANG data model defined
   in this document.</t>

<t><xref target="yang-motivation"/> describes the motivation for a YANG data model to request
   path computation.</t>

<t><xref target="topo-interaction"/> describes the motivation for a YANG data model which
   complements the TE topology YANG data model defined in <xref target="RFC8795"/>.</t>

<t><xref target="rpc-motivation"/> describes the motivation for a YANG RPC which complements
   the TE tunnel YANG data model defined in <xref target="I-D.ietf-teas-yang-te"/>.</t>

<section anchor="yang-motivation"><name>Motivation for a YANG Model</name>

<section anchor="benefits-of-common-data-models"><name>Benefits of common data models</name>

<t>The YANG data model for requesting path computation is closely
   aligned with the YANG data models that provide (abstract) TE topology
   information, i.e., <xref target="RFC8795"/> as well as that are used to configure
   and manage TE tunnels, i.e., <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>There are many benefits in aligning the data model used for path
   computation requests with the YANG data models used for TE topology
   information and for TE tunnels configuration and management:</t>

<t><list style="symbols">
  <t>There is no need for an error-prone mapping or correlation of
information.</t>
  <t>It is possible to use the same endpoint identifiers in path
computation requests and in the topology modeling.</t>
  <t>The attributes used for path computation constraints are the same
as those used when setting up a TE tunnel.</t>
</list></t>

</section>
<section anchor="benefits-of-a-single-interface"><name>Benefits of a single interface</name>

<t>The system integration effort is typically lower if a single,
   consistent interface is used by controllers, i.e., one data modeling
   language (i.e., YANG) and a common protocol (e.g., NETCONF or
   RESTCONF).</t>

<t>Practical benefits of using a single, consistent interface include:</t>

<t><list style="numbers">
  <t>Simple authentication and authorization: The interface between
different components has to be secured. If different protocols
have different security mechanisms, ensuring a common access
control model may result in overhead. For instance, there may be a
need to deal with different security mechanisms, e.g., different
credentials or keys. This can result in increased integration
effort.</t>
  <t>Consistency: Keeping data consistent over multiple different
interfaces or protocols is not trivial. For instance, the sequence
of actions can matter in certain use cases, or transaction
semantics could be desired. While ensuring consistency within one
protocol can already be challenging, it is typically cumbersome to
achieve that across different protocols.</t>
  <t>Testing: System integration requires comprehensive testing,
including corner cases. The more different technologies are
involved, the more difficult it is to run comprehensive test cases
and ensure proper integration.</t>
  <t>Middle-box friendliness: Provider and consumer of path computation
requests may be located in different networks, and middle-boxes
such as firewalls, NATs, or load balancers may be deployed. In
such environments it is simpler to deploy a single protocol. Also,
it may be easier to debug connectivity problems.</t>
  <t>Tooling reuse: Implementers may want to implement path computation
requests with tools and libraries that already exist in
controllers and/or orchestrators, e.g., leveraging the rapidly
growing eco-system for YANG tooling.</t>
</list></t>

</section>
<section anchor="extensibility"><name>Extensibility</name>

<t>Path computation is only a subset of the typical functionality of a
   controller. In many use cases, issuing path computation requests
   comes along with the need to access other functionality on the same
   system. In addition to obtaining TE topology, for instance also
   configuration of services (set-up/modification/deletion) may be
   required, as well as:</t>

<t><list style="numbers">
  <t>Receiving notifications for topology changes as well as
integration with fault management</t>
  <t>Performance management such as retrieving monitoring and telemetry
data</t>
  <t>Service assurance, e.g., by triggering OAM functionality</t>
  <t>Other fulfilment and provisioning actions beyond tunnels and
services, such as changing QoS configurations  <vspace blankLines='1'/>
YANG is a very extensible and flexible data modeling language that
can be used for all these use cases.</t>
</list></t>

</section>
</section>
<section anchor="topo-interaction"><name>Interactions with TE topology</name>

<t>The use cases described in <xref target="use-cases"/> have been described assuming
   that the topology view exported by each underlying controller to its
   client is aggregated using the "virtual node model", defined in
   <xref target="RFC7926"/>.</t>

<t>TE topology information, e.g., as provided by <xref target="RFC8795"/>, could in
   theory be used by an underlying controller to provide TE information
   to its client thus allowing a PCE available within its client to
   perform multi-domain path computation on its own, without requesting
   path computations to the underlying controllers.</t>

<t>In case the client does not implement a PCE function, as discussed in
   <xref target="intro"/>, it could not perform path computation based on TE topology
   information and would instead need to request path computation from
   the underlying controllers to get the information it needs to find
   the optimal end-to-end path.</t>

<t>In case the client implements a PCE function, as discussed in 
   <xref target="intro"/>, the TE topology information needs to be complete and accurate,
   which would bring to scalability issues.</t>

<t>Using TE topology to provide a "virtual link model" aggregation, as
   described in <xref target="RFC7926"/>, may be insufficient, unless the aggregation
   provides complete and accurate information, which would still cause
   scalability issues, as described in <xref target="topo-aggregation"/> below.</t>

<t>Using TE topology abstraction, as described in <xref target="RFC7926"/>, may lead to
   compute an unfeasible path, as described in <xref target="RFC7926"/> in 
   <xref target="topo-abstraction"/> below.</t>

<t>Therefore when computing an optimal multi-domain path, there is a
   scalability trade-off between providing complete and accurate TE
   information and the number of path computation requests to the
   underlying controllers.</t>

<t>The TE topology information used, in a complimentary way, to reduce
   the number for path computation requests to the underlying
   controllers, are described in <xref target="topo-pc-complement"/> below.</t>

<section anchor="topo-aggregation"><name>TE topology aggregation</name>

<t>Using the TE topology model, as defined in <xref target="RFC8795"/>, the underlying
   controller can export the whole TE domain as a single TE node with a
   "detailed connectivity matrix" (which provides specific TE
   attributes, such as delay, Shared Risk Link Groups (SRLGs) and other
   TE metrics, between each ingress and egress links).</t>

<t>The information provided by the "detailed connectivity matrix" would
   be equivalent to the information that should be provided by "virtual
   link model" as defined in <xref target="RFC7926"/>.</t>

<t>For example, in the Packet/Optical Integration use case, described in
   <xref target="poi-uc"/>, the Optical Domain Controller can make the information
   shown in <xref target="fig-poi-example"/> available to the Packet/Optical Coordinator as part
   of the TE topology information and the Packet/Optical Coordinator
   could use this information to calculate on its own the optimal path
   between R1 and R2, without requesting any additional information to
   the Optical Domain Controller.</t>

<t>However, when designing the amount of information to provide within
   the "detailed connectivity matrix", there is a tradeoff to be
   considered between accuracy (i.e., providing "all" the information
   that might be needed by the PCE available within the client) and
   scalability.</t>

<t><xref target="poi-multi-path"/> below shows another example, similar to <xref target="fig-poi-example"/>, where
   there are two possible Optical paths between VP1 and VP4 with
   different properties (e.g., available bandwidth and cost).</t>

<figure title="Packet/Optical Integration path computation Example with multiple choices" anchor="poi-multi-path"><artwork type="ascii-art" name="poi-example-multiple.txt"><![CDATA[
                    ............................
                    :  /--------------------\  :
                    : /       cost=65        \ :
                    :/    available-bw=10G    \:
                    O VP1                  VP4 O
           cost=10 /:\                        /:\ cost=10
                  / : \----------------------/ : \
          +----+ /  :         cost=50          :  \ +----+
          |    |/   :     available-bw=2G      :   \|    |
          | R1 |    :                          :    | R2 |
          |    |\   :                          :   /|    |
          +----+ \  :  /--------------------\  :  / +----+
                  \ : /       cost=55        \ : /
            cost=5 \:/    available-bw=3G     \:/ cost=5
                    O VP2                  VP5 O
                    :                          :
                    :..........................:
]]></artwork></figure>

<t>If the information in the "detailed connectivity matrix" is not
   complete/accurate, we can have the following drawbacks:</t>

<t><list style="symbols">
  <t>If only the VP1-VP4 path with available bandwidth of 2 Gb/s and
cost 50 is reported, the client's PCE will fail to compute a 5
Gb/s path between routers R1 and R2, although this would be
feasible;</t>
  <t>If only the VP1-VP4 path with available bandwidth of 10 Gb/s and
cost 65 is reported, the client's PCE will compute, as optimal,
the 1 Gb/s path between R1 and R2 going through the VP2-VP5 path
within the optical domain while the optimal path would actually be
the one going thought the VP1-VP4 sub-path (with cost 50) within
the optical domain.  <vspace blankLines='1'/>
Reporting all the information, as in <xref target="poi-multi-path"/>, using the "detailed
 connectivity matrix", is quite challenging from a scalability
 perspective. The amount of this information is not just based on
 number of end points (which would scale as N-square), but also on
 many other parameters, including client rate, user
 constraints/policies for the service, e.g. max latency &lt; N ms, max
 cost, etc., exclusion policies to route around busy links, min
 Optical Signal to Noise Ratio (OSNR) margin, max pre-Forward Error
 Correction (FEC) Bit Error Rate (BER) etc. All these constraints
 could be different based on connectivity requirements.  <vspace blankLines='1'/>
It is also worth noting that the "connectivity matrix" has been
 originally defined in Wavelength Switched Optical Networks (WSON),
 <xref target="RFC7446"/>, to report the connectivity constrains of a physical node
 within the Wavelength Division Multiplexing (WDM) network: the
 information it contains is pretty "static" and therefore, once taken
 and stored in the TE data base, it can be always being considered
 valid and up-to-date in path computation request.  <vspace blankLines='1'/>
The "connectivity matrix" is sometimes confused with "optical reach
 table" that contain multiple (e.g. k-shortest) regen-free reachable
 paths for every A-Z node combination in the network. Optical reach
 tables can be calculated offline, utilizing vendor optical design and
 planning tools, and periodically uploaded to the Controller: these
 optical path reach tables are fairly static. However, to get the
 connectivity matrix, between any two sites, either a regen free path
 can be used, if one is available, or multiple regen free paths are
 concatenated to get from the source to the destination, which can be
 a very large combination. Additionally, when the optical path within
 optical domain needs to be computed, it can result in different paths
 based on input objective, constraints, and network conditions. In
 summary, even though "optical reach table" is fairly static, which
 regen free paths to build the connectivity matrix between any source
 and destination is very dynamic, and is done using very sophisticated
 routing algorithms.  <vspace blankLines='1'/>
Using the "basic connectivity matrix" with an abstract node to
 abstract the information regarding the connectivity constraints of an
 Optical domain, would make this information more "dynamic" since the
 connectivity constraints of an optical domain can change over time
 because some optical paths that are feasible at a given time may
 become unfeasible at a later time when e.g., another optical path is
 established.  <vspace blankLines='1'/>
The information in the "detailed connectivity matrix" is even more
 dynamic since the establishment of another optical path may change
 some of the parameters (e.g., delay or available bandwidth) in the
 "detailed connectivity matrix" while not changing the feasibility of
 the path.  <vspace blankLines='1'/>
There is therefore the need to keep the information in the "detailed
 connectivity matrix" updated which means that there another tradeoff
 between the accuracy (i.e., providing "all" the information that
 might be needed by the client's PCE) and having up-to-date
 information. The more the information is provided and the longer it
 takes to keep it up-to-date which increases the likelihood that the
 client's PCE computes paths using not updated information.  <vspace blankLines='1'/>
It seems therefore quite challenging to have a "detailed connectivity
 matrix" that provides accurate, scalable and updated information to
 allow the client's PCE to take optimal decisions by its own.  <vspace blankLines='1'/>
Considering the example in <xref target="poi-multi-path"/> with the approach defined in this
 document, the client, when it needs to set up an end-to-end path, it
 can request the Optical Domain Controller to compute a set of optimal
 paths (e.g., for VP1-VP4 and VP2-VP5) and take decisions based on the
 information received:</t>
  <t>When setting up a 5 Gb/s path between routers R1 and R2, the
Optical Domain Controller may report only the VP1-VP4 path as the
only feasible path: the Packet/Optical Coordinator can
successfully set up the end-to-end path passing though this
optical path;</t>
  <t>When setting up a 1 Gb/s path between routers R1 and R2, the
Optical Domain Controller (knowing that the path requires only 1
Gb/s) can report both the VP1-VP4 path, with cost 50, and the VP2-
VP5 path, with cost 65. The Packet/Optical Coordinator can then
compute the optimal path which is passing thought the VP1-VP4 sub-
path (with cost 50) within the optical domain.</t>
</list></t>

</section>
<section anchor="topo-abstraction"><name>TE topology abstraction</name>

<t>Using the TE topology model, as defined in <xref target="RFC8795"/>, the underlying
   controller can export to its client an abstract TE topology, composed
   by a set of TE nodes and TE links, representing the abstract view of
   the topology under its control.</t>

<t>For example, in the multi-domain TE network use case, described in
   <xref target="md-uc"/>, the TE Domain Controller 1 can export a TE topology
   encompassing the TE nodes A, B, C and D and the TE links
   interconnecting them. In a similar way, the TE Domain Controller 2
   can export a TE topology encompassing the TE nodes E, F, G and H and
   the TE links interconnecting them.</t>

<t>In this example, for simplicity reasons, each abstract TE node maps
   with each physical node, but this is not necessary.</t>

<t>In order to set up a multi-domain TE path (e.g., between nodes A and
   H), the Multi-Domain Controller can compute by its own an optimal
   end-to-end path based on the abstract TE topology information
   provided by the domain controllers. For example:</t>

<t><list style="symbols">
  <t>Multi-Domain Controller can compute, based on its own TED data,
the optimal multi-domain path being A-B-C-E-G-H, and then request
the TE Domain Controllers to set up the A-B-C and E-G-H intra-
domain paths</t>
  <t>But, during path set-up, the TE Domain Controller may find out
that A-B-C intra-domain path is not feasible (as discussed in
<xref target="md-uc"/>, in optical networks it is typical to have some paths
not being feasible due to optical constraints that are known only
by the Optical Domain Controller), while only the path A-B-D is
feasible</t>
  <t>So what the Multi-Domain Controller has computed is not good and
it needs to re-start the path computation from scratch  <vspace blankLines='1'/>
As discussed in <xref target="topo-aggregation"/>, providing more extensive abstract
information from the TE Domain Controllers to the Multi-Domain
Controller may lead to scalability problems.  <vspace blankLines='1'/>
In a sense this is similar to the problem of routing and wavelength
assignment within an optical domain. It is possible to do first
routing (step 1) and then wavelength assignment (step 2), but the
chances of ending up with a good path is low. Alternatively, it is
possible to do combined routing and wavelength assignment, which is
known to be a more optimal and effective way for optical path set-up.
Similarly, it is possible to first compute an abstract end-to-end
path within the Multi-Domain Controller (step 1) and then compute an
intra-domain path within each optical domain (step 2), but there are
more chances not to find a path or to get a suboptimal path than by
performing multiple per-domain path computations and then stitching
them together.</t>
</list></t>

</section>
<section anchor="topo-pc-complement"><name>Complementary use of the TE topology</name>

<t>As discussed in <xref target="md-uc"/>, there are some scalability issues with
   path computation requests in a multi-domain TE network with many TE
   domains, in terms of the number of requests to send to the TE Domain
   Controllers. It would therefore be worthwhile using the abstract TE
   topology information provided by the TE Domain Controllers to limit
   the number of requests.</t>

<t>An example can be described considering the multi-domain abstract TE
   topology shown in <xref target="fig-topo-many-domains"/>. In this example, an end-to-end TE path
   between domains A and F needs to be set up. The transit TE domain
   should be selected between domains B, C, D and E.</t>

<figure title="Multi-domain with many domains (Topology information)" anchor="fig-topo-many-domains"><artwork type="ascii-art" name="many-domains-topology.txt"><![CDATA[
                          .........B.........
                          : _ _ _ _ _ _ _ _ :
                          :/               \:
                      +---O  NOT FEASIBLE   O---+
                cost=5|   :                 :   |
    ......A......     |   :.................:   |     ......F......
    :           :     |                         |     :           :
    :           O-----+   .........C.........   +-----O           :
    :           :         : /-------------\ :         :           :
    :           :         :/               \:         :           :
    :  cost<=20 O---------O   cost <= 30    O---------O cost<=20  :
    :          /: cost=5  :                 : cost=5  :\          :
    :  /------/ :         :.................:         : \------\  :
    : /         :                                     :         \ :
    :/ cost<=25 :         .........D.........         : cost<=25 \:
    O-----------O-------+ : /-------------\ : +-------O-----------O
    :\          : cost=5| :/               \: |cost=5 :          /:
    : \         :       +-O   cost <= 30    O-+       :         / :
    :  \------\ :         :                 :         : /------/  :
    : cost>=30 \:         :.................:         :/ cost>=30 :
    :           O-----+                         +-----O           :
    :...........:     |   .........E.........   |     :...........:
                      |   : /-------------\ :   |
                cost=5|   :/               \:   |cost=5
                      +---O   cost >= 30    O---+
                          :                 :
                          :.................:
]]></artwork></figure>

<t>The actual cost of each intra-domain path is not known a priori from
   the abstract topology information. The Multi-Domain Controller only
   knows, from the TE topology provided by the underlying domain
   controllers, the feasibility of some intra-domain paths and some
   upper-bound and/or lower-bound cost information. With this
   information, together with the cost of inter-domain links, the Multi-
   Domain Controller can understand by its own that:</t>

<t><list style="symbols">
  <t>Domain B cannot be selected as the path connecting domains A and F
is not feasible;</t>
  <t>Domain E cannot be selected as a transit domain since it is known
from the abstract topology information provided by domain
controllers that the cost of the multi-domain path A-E-F (which is
100, in the best case) will be always be higher than the cost of
the multi-domain paths A-D-F (which is 90, in the worst case) and
A-C-F (which is 80, in the worst case).  <vspace blankLines='1'/>
Therefore, the Multi-Domain Controller can understand by its own that
 the optimal multi-domain path could be either A-D-F or A-C-F but it
 cannot know which one of the two possible option actually provides
 the optimal end-to-end path.  <vspace blankLines='1'/>
The Multi-Domain Controller can therefore request path computation
 only to the TE Domain Controllers A, D, C and F (and not to all the
 possible TE Domain Controllers).</t>
</list></t>

<figure title="Multi-domain with many domains (Path Computation information)" anchor="fig-pc-many-domains"><artwork type="ascii-art" name="many-domain-path-computation.txt"><![CDATA[
                          .........B.........
                          :                 :
                      +---O                 O---+
    ......A......     |   :.................:   |     ......F......
    :           :     |                         |     :           :
    :           O-----+   .........C.........   +-----O           :
    :           :         : /-------------\ :         :           :
    :           :         :/               \:         :           :
    :  cost=15  O---------O    cost = 25    O---------O  cost=10  :
    :          /: cost=5  :                 : cost=5  :\          :
    :  /------/ :         :.................:         : \------\  :
    : /         :                                     :         \ :
    :/ cost=10  :         .........D.........         : cost=15  \:
    O-----------O-------+ : /-------------\ : +-------O-----------O
    :           : cost=5| :/               \: |cost=5 :           :
    :           :       +-O    cost = 15    O-+       :           :
    :           :         :                 :         :           :
    :           :         :.................:         :           :
    :           O-----+                         +-----O           :
    :...........:     |   .........E.........   |     :...........:
                      |   :                 :   |
                      +---O                 O---+
                          :.................:
]]></artwork></figure>

<t>Based on these requests, the Multi-Domain Controller can know the
   actual cost of each intra-domain paths which belongs to potential
   optimal end-to-end paths, as shown in <xref target="fig-pc-many-domains"/>, and then compute the
   optimal end-to-end path (e.g., A-D-F, having total cost of 50,
   instead of A-C-F having a total cost of 70).</t>

</section>
</section>
<section anchor="rpc-motivation"><name>Path Computation RPC</name>

<t>The TE tunnel YANG data model, defined in <xref target="I-D.ietf-teas-yang-te"/>, can support
   the need to request path computation, as described in section 5.1.2
   of <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>This solution is stateful since the state of each created "compute-
   only" TE tunnel path needs to be maintained, in the YANG datastores
   (at least in the running datastore and operational datastore), and
   updated, when underlying network conditions change.</t>

<t>The RPC mechanism allows requesting path computation using a simple
   atomic operation, without creating any state in the YANG datastores,
   and it is the natural option/choice, especially with stateless PCE.</t>

<t>It is very useful to provide both the options of using an RPC as well
   as of setting up TE tunnel paths in "compute-only" mode. It is
   suggested to use the RPC as much as possible and to rely on
   "compute-only" TE tunnel paths, when really needed.</t>

<t>Using the RPC solution would imply that the underlying controller
   (e.g., a PNC) computes a path twice during the process to set up an
   LSP: at time T1, when its client (e.g., an MDSC) sends a path
   computation RPC request to it, and later, at time T2, when the same
   client (MDSC) creates a TE tunnel requesting the set-up of the LSP.
   The underlying assumption is that, if network conditions have not
   changed, the same path that has been computed at time T1 is also
   computed at time T2 by the underlying controller (e.g. PNC) and
   therefore the path that is set up at time T2 is exactly the same path
   that has been computed at time T1.</t>

<t>However, since the operation is stateless, there is no guarantee that
   the returned path would still be available when path set-up is
   requested: this does not cause major issues when the time between
   path computation and path set-up is short (especially if compared
   with the time that would be needed to update the information of a
   very detailed connectivity matrix).</t>

<t>In most of the cases, there is even no need to guarantee that the
   path that has been set up is the exactly same as the path that has
   been returned by path computation, especially if it has the same or
   even better metrics. Depending on the abstraction level applied by
   the server, the client may also not know the actual computed path.</t>

<t>The most important requirement is that the required global objectives
   (e.g., multi-domain path metrics and constraints) are met. For this
   reason a path verification phase is always necessary to verify that
   the actual path that has been set up meets the global objectives (for
   example in a multi-domain network, the resulting end-to-end path
   meets the required end-to-end metrics and constraints).</t>

<t>In most of the cases, even if the path being set up is not exactly
   the same as the path returned by path computation, its metrics and
   constraints are "good enough" and the path verification passes
   successfully. In the few corner cases where the path verification
   fails, it is possible repeat the whole process (path computation,
   path set-up and path verification).</t>

<t>In case it is required to set up at T2 exactly the same path computed
   at T1, the RPC solution should not be used and, instead, a "compute-
   only" TE tunnel path should be set up, allowing also notifications in
   case the computed path has been changed.</t>

<t>In this case, at time T1, the client (MDSC) creates a TE tunnel in a
   compute-only mode in the running datastore and later, at time T2,
   changes the configuration of that TE tunnel (not to be any more in a
   compute-only mode) to trigger the set-up of the LSP over the path
   which have been computed at time T1 and reported in the operational
   datastore.</t>

<t>It is worth noting that also using the "compute-only" TE tunnel path,
   although increasing the likelihood that the computed path is
   available at path set-up, does not guarantee that because
   notifications may not be reliable or delivered on time. Path
   verification is needed also in this case.</t>

<t>The solution based on "compute-only" TE tunnel path has also the
   following drawbacks:</t>

<t><list style="symbols">
  <t>Several messages required for any path computation</t>
  <t>Requires persistent storage in the underlying controller</t>
  <t>Need for garbage collection for stranded paths</t>
  <t>Process burden to detect changes on the computed paths in order to
provide notifications update</t>
</list></t>

<section anchor="temp-state"><name>Temporary reporting of the computed path state</name>

<t>This section describes an optional extension to the stateless
   behavior of the path computation RPC, where the underlying
   controller, after having received a path computation RPC request,
   maintains some "transient state" associated with the computed path,
   allowing the client to request the set-up of exactly that path, if
   still available.</t>

<t>This is similar to the "compute-only" TE tunnel path solution but, to
   avoid the drawbacks of the stateful approach, is leveraging the path
   computation RPC and the separation between configuration and
   operational datastore, as defined in the NMDA architecture <xref target="RFC8342"/>.</t>

<t>The underlying controller, after having computed a path, as requested
   by a path computation RPC, also creates a TE tunnel instance within
   the operational datastore, to store that computed path. This would be
   similar to a "compute-only" TE tunnel path, with the only difference
   that there is no associated TE tunnel instance within the running
   datastore.</t>

<t>Since the underlying controller stores in the operational datastore
   the computed path based on an abstract topology it exposes, it also
   remembers, internally, which is the actual native path (physical
   path), within its native topology (physical topology), associated
   with that compute-only TE tunnel instance.</t>

<t>Afterwards, the client (e.g., MDSC) can request the set-up of that
   specific path by creating a TE tunnel instance (not in compute-only
   mode) in the running datastore using the same tunnel-name of
   the existing TE tunnel in the operational datastore: this will
   trigger the underlying controller to set up that path, if still
   available.</t>

<t>There are still cases where the path being set up is not exactly the
   same as the path that has been computed:</t>

<t><list style="symbols">
  <t>When the tunnel is configured with path constraints which are not
compatible with the computed path;</t>
  <t>When the tunnel set-up is requested after the resources of the
computed path are no longer available;</t>
  <t>When the tunnel set-up is requested after the computed path is no
longer known (e.g. due to a server reboot) by the underlying
controller.  <vspace blankLines='1'/>
In all these cases, the underlying controller should compute and set
 up a new path.  <vspace blankLines='1'/>
Therefore the "path verification" phase, as described in <xref target="rpc-motivation"/>
 above, is always needed to check that the path that has been set up
 is still "good enough".  <vspace blankLines='1'/>
Since this new approach is not completely stateless, garbage
 collection is implemented using a timeout that, when it expires,
 triggers the removal of the computed path from the operational
 datastore. This operation is fully controlled by the underlying
 controller without the need for any action to be taken by the client
 that is not able to act on the operational datastore. The default
 value of this timeout is 10 minutes but a different value may be
 configured by the client.  <vspace blankLines='1'/>
In addition, it is possible for the client to tag each path
 computation request with a transaction-id allowing for a faster
 removal of all the paths associated with a transaction-id, without
 waiting for their timers to expire.  <vspace blankLines='1'/>
The underlying controller can remove from the operational datastore
 all the paths computed with a given transaction-id which have not
 been set up either when it receives a Path Delete RPC request for
 that transaction-id or, automatically, right after the set-up up of a
 path that has been previously computed with that transaction-id.  <vspace blankLines='1'/>
This possibility is useful when multiple paths are computed but, at
 most, only one is set up (e.g., in multi-domain path computation
 scenario scenarios). After the selected path has been set up (e.g, in
 one domain during multi-domain path set-up), all the other
 alternative computed paths can be automatically deleted by the
 underlying controller (since no longer needed). The client can also
 request, using the Path Delete RPC request, the underlying controller
 to remove all the computed paths, if none of them is going to be set
 up (e.g., in a transit domain not being selected by multi-domain path
 computation and so not being automatically deleted).  <vspace blankLines='1'/>
This approach is complimentary and not alternative to the timer which
 is always needed to avoid stranded computed paths being stored in the
 operational datastore when no path is set up and no explicit Path
 Delete RPC request is received.</t>
</list></t>

</section>
</section>
</section>
<section anchor="path-computation-and-optimization-for-multiple-paths"><name>Path computation and optimization for multiple paths</name>

<t>There are use cases, where it is advantageous to request path
   computation for a set of paths, through a network or through a
   network domain, using a single request <xref target="RFC5440"/>.</t>

<t>In this case, sending a single request for multiple path
   computations, instead of sending multiple requests for each path
   computation, would reduce the protocol overhead and it would consume
   less resources (e.g., threads in the client and server).</t>

<t>In the context of a typical multi-domain TE network, there could
   multiple choices for the ingress/egress points of a domain and the
   Multi-Domain Controller needs to request path computation between all
   the ingress/egress pairs to select the best pair. For example, in the
   example of <xref target="md-uc"/>, the Multi-Domain Controller needs to request
   the TE Network Controller 1 to compute the A-C and the A-D paths and
   to the TE Network Controller 2 to compute the E-H and the F-H paths.</t>

<t>It is also possible that the Multi-Domain Controller receives a
   request to set up a group of multiple end to end connections. The
   Multi-Domain Controller needs to request each TE domain Controller to
   compute multiple paths, one (or more) for each end to end connection.</t>

<t>There are also scenarios where it can be needed to request path
   computation for a set of paths in a synchronized fashion.</t>

<t>One example could be computing multiple diverse paths. Computing a
   set of diverse paths in an unsynchronized fashion, leads to the
   possibility of not being able to satisfy the diversity requirement.
   In this case, it is preferable to compute a sub-optimal primary path
   for which a diversely routed secondary path exists.</t>

<t>There are also scenarios where it is needed to request optimizing a
   set of paths using objective functions that apply to the whole set of
   paths, see <xref target="RFC5541"/>, e.g. to minimize the sum of the costs of all
   the computed paths in the set.</t>

</section>
<section anchor="yang-data-model-for-requesting-path-computation"><name>YANG data model for requesting Path Computation</name>

<t>This document define a YANG RPC to request path computation as an
   "augmentation" of tunnel-rpc, defined in <xref target="I-D.ietf-teas-yang-te"/>. This model
   provides the RPC input attributes that are needed to request path
   computation and the RPC output attributes that are needed to report
   the computed paths.</t>

<figure><artwork type="ascii-art" name="overview.txt"><![CDATA[
  augment /te:tunnels-path-compute/te:input/te:path-compute-info:
    +-- path-request* [request-id]
    |  ...

  augment /te:tunnels-path-compute/te:output/te:path-compute-result:
    +--ro response* [response-id]
       +--ro response-id                         uint32
       +--ro computed-paths-properties
       |  +--ro computed-path-properties* [k-index]
       |     ...
]]></artwork></figure>

<t>This model extensively re-uses the grouping defined in <xref target="I-D.ietf-teas-yang-te"/>
   and <xref target="RFC8776"/> to ensure maximal syntax and semantics commonality.</t>

<t>This YANG data model allows one RPC to include multiple path
   requests, each path request being identified by a request-id.
   Therefore, one RPC can return multiple responses, one for each path
   request, being identified by a response-id equal to the corresponding
   request-id. Each response reports one or more computed paths, as
   requested by the k-requested-paths attribute. By default, each
   response reports one computed path.</t>

<section anchor="synchronization-of-multiple-path-computation-requests"><name>Synchronization of multiple path computation requests</name>

<t>The YANG data model permits the synchronization of a set of multiple
   path requests (identified by specific request-id) all related to a
   "svec" container emulating the syntax of the Synchronization VECtor
   (SVEC) PCEP object, defined in <xref target="RFC5440"/>.</t>

<figure><artwork type="ascii-art" name="synchronization.txt"><![CDATA[
    +-- synchronization* []
       +-- svec
       |  +-- relaxable?      boolean
       |  +-- disjointness?   te-path-disjointness
       |  +-- request-id*     uint32
       +-- svec-constraints
       |  +-- path-metric-bound* [metric-type]
       |     +-- metric-type    identityref
       |     +-- upper-bound?   uint64
       +-- path-srlgs-lists
       |  +-- path-srlgs-list* [usage]
       |     +-- usage     identityref
       |     +-- values*   srlg
       +-- path-srlgs-names
       |  +-- path-srlgs-name* [usage]
       |     +-- usage    identityref
       |     +-- names*   string
       +-- exclude-objects
       |  +-- excludes* []
       |     +-- (type)?
       |        +--:(numbered-node-hop)
       |        |  +-- numbered-node-hop
       |        |     +-- node-id     te-node-id
       |        |     +-- hop-type?   te-hop-type
       |        +--:(numbered-link-hop)
       |        |  +-- numbered-link-hop
       |        |     +-- link-tp-id    te-tp-id
       |        |     +-- hop-type?     te-hop-type
       |        |     +-- direction?    te-link-direction
       |        +--:(unnumbered-link-hop)
       |        |  +-- unnumbered-link-hop
       |        |     +-- link-tp-id    te-tp-id
       |        |     +-- node-id       te-node-id
       |        |     +-- hop-type?     te-hop-type
       |        |     +-- direction?    te-link-direction
       |        +--:(as-number)
       |        |  +-- as-number-hop
       |        |     +-- as-number    inet:as-number
       |        |     +-- hop-type?    te-hop-type
       |        +--:(label)
       |           +-- label-hop
       |              +-- te-label
       |                 ...
       +-- optimizations
          +-- (algorithm)?
             +--:(metric) {te-types:path-optimization-metric}?
             |  +-- optimization-metric* [metric-type]
             |     +-- metric-type    identityref
             |     +-- weight?        uint8
             +--:(objective-function)
                      {te-types:path-optimization-objective-function}?
                +-- objective-function
                   +-- objective-function-type?   identityref
]]></artwork></figure>

<t>The model, in addition to the metric types, defined in <xref target="RFC8776"/>,
   which can be applied to each individual path request, supports also
   additional metric types, which apply to a set of synchronized
   requests, as referenced in <xref target="RFC5541"/>. These additional metric types
   are defined by the following YANG identities:</t>

<t><list style="symbols">
  <t>svec-metric-type: base YANG identity from which cumulative metric
types identities are derived.</t>
  <t>svec-metric-cumul-te: cumulative TE cost metric type, as defined
in <xref target="RFC5541"/>.</t>
  <t>svec-metric-cumul-igp: cumulative IGP cost metric type, as defined
in <xref target="RFC5541"/>.</t>
  <t>svec-metric-cumul-hop: cumulative Hop metric type, representing
the cumulative version of the Hop metric type defined in
<xref target="RFC8776"/>.</t>
  <t>svec-metric-aggregate-bandwidth-consumption: aggregate bandwidth
consumption metric type, as defined in <xref target="RFC5541"/>.</t>
  <t>svec-metric-load-of-the-most-loaded-link: load of the most loaded
link metric type, as defined in <xref target="RFC5541"/>.</t>
</list></t>

</section>
<section anchor="returned-metric-values"><name>Returned metric values</name>

<t>This YANG data model provides a way to return the values of the
   metrics computed by the path computation in the output of RPC,
   together with other important information (e.g. SRLG, affinities,
   explicit route), emulating the syntax of the "C" flag of the "METRIC"
   PCEP object <xref target="RFC5440"/>:</t>

<figure><artwork type="ascii-art" name="returned-metrics.txt"><![CDATA[
       |     +--ro path-properties
       |        +--ro path-metric* [metric-type]
       |        |  +--ro metric-type           identityref
       |        |  +--ro accumulative-value?   uint64
       |        +--ro path-affinities-values
       |        |  +--ro path-affinities-value* [usage]
       |        |     +--ro usage    identityref
       |        |     +--ro value?   admin-groups
       |        +--ro path-affinity-names
       |        |  +--ro path-affinity-name* [usage]
       |        |     +--ro usage            identityref
       |        |     +--ro affinity-name* [name]
       |        |        +--ro name    string
       |        +--ro path-srlgs-lists
       |        |  +--ro path-srlgs-list* [usage]
       |        |     +--ro usage     identityref
       |        |     +--ro values*   srlg
       |        +--ro path-srlgs-names
       |        |  +--ro path-srlgs-name* [usage]
       |        |     +--ro usage    identityref
       |        |     +--ro names*   string
       |        +--ro path-route-objects
       |        |  ...
       |        +--ro te-bandwidth
       |        |  ...
       |        +--ro disjointness-type?
       |                te-types:te-path-disjointness
]]></artwork></figure>

<t>It also allows the client to request which information (metrics, SRLG
   and/or affinities) should be returned:</t>

<figure><artwork type="ascii-art" name="requested-metrics.txt"><![CDATA[
    |  +-- request-id                            uint32
    |  ...
    |  +-- requested-metrics* [metric-type]
    |  |  +-- metric-type    identityref
    |  +-- return-srlgs?                         boolean
    |  +-- return-affinities?                    boolean
    |  ...
]]></artwork></figure>

<t>This feature is essential for path computation in a multi-domain TE
   network as described in <xref target="md-uc"/>. In this case, the metrics
   returned by a path computation requested to a given underlying
   controller must be used by the client to compute the best end-to-end
   path. If they are missing, the client cannot compare different paths
   calculated by the underlying controllers and choose the best one for
   the optimal end-to-end (e2e) path.</t>

</section>
<section anchor="multiple-paths-requests-for-the-same-te-tunnel"><name>Multiple Paths Requests for the same TE tunnel</name>

<t>The YANG data model allows including multiple requests for different
   paths intended to be used within the same tunnel or within different
   tunnels.</t>

<t>When multiple requested paths are intended to be used within the same
   tunnel (e.g., requesting path computation for the primary and
   secondary paths of a protected tunnel), the set of attributes that
   are intended to be configured on per-tunnel basis rather than on per-
   path basis are common to all these path requests. These attributes
   includes both attributes which can be configured only a per-tunnel
   basis (e.g., tunnel-name, source/destination TTP, encoding and
   switching-type) as well attributes which can be configured both on a
   per-tunnel and on a per-path basis (e.g., the te-bandwidth or the
   associations).</t>

<t>Therefore, a tunnel-attributes list is defined, within the path
   computation request RPC:</t>

<figure><artwork type="ascii-art" name="tunnel-attributes-list.txt"><![CDATA[
    +-- tunnel-attributes* [tunnel-name]
    |  +-- tunnel-name               string
    |  +-- encoding?                 identityref
    |  +-- switching-type?           identityref
    |  +-- source?                   te-types:te-node-id
    |  +-- destination?              te-types:te-node-id
    |  +-- src-tunnel-tp-id?         binary
    |  +-- dst-tunnel-tp-id?         binary
    |  +-- bidirectional?            boolean
    |  +-- association-objects
    |  |  ...
    |  +-- protection-type?          identityref
    |  +-- restoration-type?         identityref
    |  +-- restoration-scheme?       identityref
    |  +-- te-topology-identifier
    |  |  +-- provider-id?   te-global-id
    |  |  +-- client-id?     te-global-id
    |  |  +-- topology-id?   te-topology-id
    |  +-- te-bandwidth
    |  |  ...
    |  +-- link-protection?          identityref
    |  +-- setup-priority?           uint8
    |  +-- hold-priority?            uint8
    |  +-- signaling-type?           identityref
    |  +-- hierarchy
    |     +-- dependency-tunnels
    |     |  ...
    |     +-- hierarchical-link
    |        ...
]]></artwork></figure>

<t>The path requests that are intended to be used within the same tunnel
   should reference the same entry in the tunnel-attributes list. This
   allows:</t>

<t><list style="symbols">
  <t>avoiding repeating the same set of per-tunnel parameters on
multiple requested paths;</t>
  <t>the server to understand what attributes are intended to be
configured on a per-tunnel basis (e.g., the te-bandwidth
configured in the tunnel-attributes) and what attributes are
intended to be configured on a per-path basis(e.g., the te-
bandwidth configured in the path-request). This could be useful
especially when the server also creates a TE tunnel instance
within the operational datastore to report the computed paths, as
described in <xref target="temp-state"/>: in this case, the tunnel-name is also
used as the suggested name for that TE tunnel instance.  <vspace blankLines='1'/>
The YANG data model allows also including requests for paths intended
 to modify existing tunnels (e.g., adding a protection path for an
 existing un-protected tunnel). In this case, the per-tunnel
 attributes are already provided in an existing TE tunnel instance and
 do not need to be re-configured in the path computation request RPC.
 Therefore, these requests should reference an existing TE tunnel
 instance.  <vspace blankLines='1'/>
It is also possible to request computing paths without indicating in
 which tunnel they are intended to be used (e.g., in case of an
 unprotected tunnel). In this case, the per-tunnel attributes could be
 provided together with the per-path attributes in the path request,
 without using the tunnel-attributes list.  <vspace blankLines='1'/>
The choices below are defined to distinguish the cases above:</t>
  <t>whether the per-tunnel attributes are configured by reference
(providing a leafref), to:  <list style="symbols">
      <t>either a TE tunnel instance, if it exists;</t>
      <t>or to an entry of the tunnel-attributes list, if the TE tunnel
instance does not exist;</t>
    </list></t>
  <t>or by value, providing the set of tunnel attributes within the
path request:</t>
</list></t>

<figure><artwork type="ascii-art" name="tunnel-attributes.txt"><![CDATA[
    |  +-- (tunnel-attributes)?
    |  |  +--:(reference)
    |  |  |  +-- tunnel-reference
    |  |  |     +-- (tunnel-exist)
    |  |  |     |  +--:(tunnel-ref)
    |  |  |     |  |  +-- tunnel-ref                te:tunnel-ref
    |  |  |     |  +--:(tunnel-attributes-ref)
    |  |  |     |     +-- tunnel-attributes-ref     leafref
    |  |  |     +-- path-name?                      string
    |  |  |     +-- (path-role)
    |  |  |        ...
    |  |  +--:(value)
    |  |     +-- tunnel-name?                    string
    |  |     +-- path-name?                      string
    |  |     +-- (path-role)?
    |  |     |  ...
    |  |     ...
    |  |     +-- encoding?                       identityref
    |  |     +-- switching-type?                 identityref
    |  |     ...
]]></artwork></figure>

<section anchor="tunnel-attributes-specified-by-value"><name>Tunnel attributes specified by value</name>

<t>The (value) case provides the set of attributes that are configured
   only on per-tunnel basis (e.g., tunnel-name, source/destination TTP,
   encoding and switching-type).</t>

<t>In this case, it is assumed that the requested path will be the only
   path within a tunnel.</t>

<t>If the only path within a tunnel is the transit segment of a multi-domain end-to-end path, it can be of any type (primary, secondary, reverse-primary
   or reverse-secondary). The (path-role) choice is used to specify its role in the path request:</t>

<figure><artwork type="ascii-art" name="tunnel-by-value.txt"><![CDATA[
    |  |     +-- (path-role)?
    |  |     |  +--:(primary-path)
    |  |     |  +--:(secondary-path)
    |  |     |  |  +-- secondary-path!
    |  |     |  |     +-- primary-path-name?   string
    |  |     |  +--:(primary-reverse-path)
    |  |     |  |  +-- primary-reverse-path!
    |  |     |  |     +-- primary-path-name?   string
    |  |     |  +--:(secondary-reverse-path)
    |  |     |     +-- secondary-reverse-path!
    |  |     |        +-- primary-path-name?           string
    |  |     |        +-- primary-reverse-path-name?   string
]]></artwork></figure>

<t>In all the other cases, the only path within a tunnel is a primary path.</t>

<t>The secondary-path, the primary-reverse-path and the secondary-
   reverse-path are presence container used to indicate the role of the
   path: by default, the path is assumed to be a primary path.</t>

<t>They optionally can contain the name of the primary-path under which
   the requested path could be associated within the YANG tree structure
   defined in <xref target="I-D.ietf-teas-yang-te"/>, which could be useful when the server also
   creates a TE tunnel instance within the operational datastore to
   report the computed paths, as described in <xref target="temp-state"/>: in this
   case, the tunnel-name and the path names are also used as the
   suggested name for that TE tunnel and path instances.</t>

</section>
<section anchor="tunnel-attributes-specified-by-reference"><name>Tunnel attributes specified by reference</name>

<t>The (reference) case provides the information needed to associate
   multiple path requests that are intended to be used within the same
   tunnel.</t>

<t>In order to indicate the role of the path being requested within the
   intended tunnel (e.g., primary or secondary path), the (path-role)
   choice is defined:</t>

<figure><artwork type="ascii-art" name="tunnel-by-reference.txt"><![CDATA[
    |  |  |     +-- (path-role)
    |  |  |        +--:(primary-path)
    |  |  |        |  +-- primary-path!
    |  |  |        |     ...
    |  |  |        +--:(secondary-path)
    |  |  |        |  +-- secondary-path
    |  |  |        |     ...
    |  |  |        +--:(primary-reverse-path)
    |  |  |        |  +-- primary-reverse-path
    |  |  |        |     ...
    |  |  |        +--:(secondary-reverse-path)
    |  |  |           +-- secondary-reverse-path
    |  |  |              ...
]]></artwork></figure>

<t>The primary-path is a presence container used to indicate that the
   requested path is intended to be used as a primary path. It can also
   contain some attributes which are configured only on primary paths
   (e.g., the k-requested-paths).</t>

<t>The secondary-path container indicates that the requested path is
   intended to be used as a secondary path and it contains at least
   references to one or more primary paths which can use it as a
   candidate secondary path:</t>

<figure><artwork type="ascii-art" name="secondary-path.txt"><![CDATA[
    |  |  |        |  +-- secondary-path
    |  |  |        |     ...
    |  |  |        |     +-- primary-path-ref* []
    |  |  |        |        +-- (primary-path-exist)
    |  |  |        |           +--:(path-ref)
    |  |  |        |           |  +-- primary-path-ref    leafref
    |  |  |        |           +--:(path-request-ref)
    |  |  |        |              +-- path-request-ref    leafref
]]></artwork></figure>

<t>A requested secondary path can reference any requested primary paths,
   and, in case they are intended to be used within an existing TE
   tunnel, it could also reference any existing primary-paths.</t>

<t>The secondary-path container can also contain some attributes which
   are configured only on secondary paths (e.g., the protection-type).</t>

<t>The primary-reverse-path container indicates that the requested path
   is intended to be used as a primary reverse path and it contains only
   the reference to the primary path which is intended to use it as a
   reverse path:</t>

<figure><artwork type="ascii-art" name="primary-reverse-path.txt"><![CDATA[
    |  |  |        |  +-- primary-reverse-path
    |  |  |        |     +-- (primary-path-exist)
    |  |  |        |        +--:(path-ref)
    |  |  |        |        |  +-- primary-path-ref    leafref
    |  |  |        |        +--:(path-request-ref)
    |  |  |        |           +-- path-request-ref    leafref
]]></artwork></figure>

<t>A requested primary reverse path can reference either a requested
   primary path, or, in case it is intended to be used within an
   existing TE tunnel, an existing primary-path.</t>

<t>The secondary-reverse-path container indicates that the requested
   path is intended to be used as a secondary reverse path and it
   contains at least references to one or more primary paths, whose
   primary reverse path can use it as a candidate secondary reverse
   path:</t>

<figure><artwork type="ascii-art" name="secondary-reverse-path.txt"><![CDATA[
    |  |  |           +-- secondary-reverse-path
    |  |  |              ...
    |  |  |              +-- primary-reverse-path* []
    |  |  |                 +-- (primary-reverse-path-exist)
    |  |  |                    +--:(path-ref)
    |  |  |                    |  +-- primary-path-ref    leafref
    |  |  |                    +--:(path-request-ref)
    |  |  |                       +-- path-request-ref    leafref
]]></artwork></figure>

<t>A requested secondary reverse path can reference any requested
   primary paths, and, in case they are intended to be used within an
   existing TE tunnel, it could reference also existing primary-paths.</t>

<t>The secondary-reverse-path container can also contain some attributes
   which are configured only on secondary reverse paths (e.g., the
   protection-type).</t>

<t>In case the requested path is a transit segment of a multi-domain
   end-to-end path, the primary-path may not be needed to be
   setup/computed. However, the request for path computation of a
   secondary-path or a primary-reverse or of a secondary-reverse-path
   requires that the primary-path exists or it is requested within the
   same RPC request. In the latter case, the path request for the
   primary-path should have an empty 'route-object-include-exclude' list,
   as described in section 5.1.1 of <xref target="I-D.ietf-teas-yang-te"/>, to indicate to the server that
   path computation is not requested and no path properties will
   therefore be returned in the RPC response.</t>

</section>
</section>
<section anchor="multi-layer-path-computation"><name>Multi-Layer Path Computation</name>

<t>The models supports requesting multi-layer path computation following
   the same approach based on dependency tunnels, as defined in <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>The tunnel-attributes of a given client-layer path request can
   reference server-layer TE tunnels which can already exist in the YANG
   datastore or be specified in the tunnel-attributes list, within the
   same RPC request:</t>

<figure><artwork type="ascii-art" name="dependency-tunnels.txt"><![CDATA[
    |     +-- dependency-tunnels
    |     |  +-- dependency-tunnel* [name]
    |     |  |  +-- name              -> /te:te/tunnels/tunnel/name
    |     |  |  +-- encoding?         identityref
    |     |  |  +-- switching-type?   identityref
    |     |  +-- dependency-tunnel-attributes* [name]
    |     |     +-- name              leafref
    |     |     +-- encoding?         identityref
    |     |     +-- switching-type?   identityref
]]></artwork></figure>

<t>In a similar way as in <xref target="I-D.ietf-teas-yang-te"/>, the server-layer tunnel
   attributes should provide the information of what would be the
   dynamic link in the client layer topology supported by that tunnel,
   if instantiated:</t>

<figure><artwork type="ascii-art" name="hierarchical-link.txt"><![CDATA[
    |     +-- hierarchical-link
    |        +-- enable?                   boolean
    |        +-- local-te-node-id?         te-types:te-node-id
    |        +-- local-te-link-tp-id?      te-types:te-tp-id
    |        +-- remote-te-node-id?        te-types:te-node-id
    |        +-- te-topology-identifier
    |           +-- provider-id?   te-global-id
    |           +-- client-id?     te-global-id
    |           +-- topology-id?   te-topology-id
]]></artwork></figure>

<t>It is worth noting that since path computation RPC is stateless, the
   dynamic hierarchical links configured for the server-layer tunnel
   attributes cannot be used for path computation of any client-layer
   path unless explicitly referenced in the dependency-tunnel-attributes
   list within the same RPC request.</t>

</section>
</section>
<section anchor="yang-data-model-for-te-path-computation"><name>YANG data model for TE path computation</name>

<section anchor="pc-tree"><name>Tree diagram</name>

<t><xref target="fig-pc-tree"/> below shows the tree diagram of the YANG data model defined
   in module ietf-te-path-computation.yang, defined in <xref target="pc-yang"/>.</t>

<figure title="TE path computation tree diagram" anchor="fig-pc-tree"><artwork type="ascii-art" name="ietf-te-path-computation.tree"><![CDATA[
module: ietf-te-path-computation

  augment /te:tunnels-path-compute/te:input/te:path-compute-info:
    +-- path-request* [request-id]
    |  +-- request-id                            uint32
    |  +-- (tunnel-attributes)?
    |  |  +--:(reference)
    |  |  |  +-- tunnel-reference
    |  |  |     +-- (tunnel-exist)
    |  |  |     |  +--:(tunnel-ref)
    |  |  |     |  |  +-- tunnel-ref                te:tunnel-ref
    |  |  |     |  +--:(tunnel-attributes-ref)
    |  |  |     |     +-- tunnel-attributes-ref     leafref
    |  |  |     +-- path-name?                      string
    |  |  |     +-- (path-role)
    |  |  |        +--:(primary-path)
    |  |  |        |  +-- primary-path!
    |  |  |        |     +-- preference?          uint8
    |  |  |        |     +-- co-routed?           empty
    |  |  |        |     +-- k-requested-paths?   uint8
    |  |  |        +--:(secondary-path)
    |  |  |        |  +-- secondary-path
    |  |  |        |     +-- preference?           uint8
    |  |  |        |     +-- co-routed?            empty
    |  |  |        |     +-- protection-type?      identityref
    |  |  |        |     +-- restoration-type?     identityref
    |  |  |        |     +-- restoration-scheme?   identityref
    |  |  |        |     +-- primary-path-ref* []
    |  |  |        |        +-- (primary-path-exist)
    |  |  |        |           +--:(path-ref)
    |  |  |        |           |  +-- primary-path-ref    leafref
    |  |  |        |           +--:(path-request-ref)
    |  |  |        |              +-- path-request-ref    leafref
    |  |  |        +--:(primary-reverse-path)
    |  |  |        |  +-- primary-reverse-path
    |  |  |        |     +-- (primary-path-exist)
    |  |  |        |        +--:(path-ref)
    |  |  |        |        |  +-- primary-path-ref    leafref
    |  |  |        |        +--:(path-request-ref)
    |  |  |        |           +-- path-request-ref    leafref
    |  |  |        +--:(secondary-reverse-path)
    |  |  |           +-- secondary-reverse-path
    |  |  |              +-- protection-type?        identityref
    |  |  |              +-- restoration-type?       identityref
    |  |  |              +-- restoration-scheme?     identityref
    |  |  |              +-- primary-reverse-path* []
    |  |  |                 +-- (primary-reverse-path-exist)
    |  |  |                    +--:(path-ref)
    |  |  |                    |  +-- primary-path-ref    leafref
    |  |  |                    +--:(path-request-ref)
    |  |  |                       +-- path-request-ref    leafref
    |  |  +--:(value)
    |  |     +-- tunnel-name?                    string
    |  |     +-- path-name?                      string
    |  |     +-- (path-role)?
    |  |     |  +--:(primary-path)
    |  |     |  +--:(secondary-path)
    |  |     |  |  +-- secondary-path!
    |  |     |  |     +-- primary-path-name?   string
    |  |     |  +--:(primary-reverse-path)
    |  |     |  |  +-- primary-reverse-path!
    |  |     |  |     +-- primary-path-name?   string
    |  |     |  +--:(secondary-reverse-path)
    |  |     |     +-- secondary-reverse-path!
    |  |     |        +-- primary-path-name?           string
    |  |     |        +-- primary-reverse-path-name?   string
    |  |     +-- k-requested-paths?              uint8
    |  |     +-- encoding?                       identityref
    |  |     +-- switching-type?                 identityref
    |  |     +-- source?                         te-types:te-node-id
    |  |     +-- destination?                    te-types:te-node-id
    |  |     +-- src-tunnel-tp-id?               binary
    |  |     +-- dst-tunnel-tp-id?               binary
    |  |     +-- bidirectional?                  boolean
    |  |     +-- te-topology-identifier
    |  |        +-- provider-id?   te-global-id
    |  |        +-- client-id?     te-global-id
    |  |        +-- topology-id?   te-topology-id
    |  +-- association-objects
    |  |  +-- association-object* [association-key]
    |  |  |  +-- association-key    string
    |  |  |  +-- type?              identityref
    |  |  |  +-- id?                uint16
    |  |  |  +-- source
    |  |  |     +-- id?     te-gen-node-id
    |  |  |     +-- type?   enumeration
    |  |  +-- association-object-extended* [association-key]
    |  |     +-- association-key    string
    |  |     +-- type?              identityref
    |  |     +-- id?                uint16
    |  |     +-- source
    |  |     |  +-- id?     te-gen-node-id
    |  |     |  +-- type?   enumeration
    |  |     +-- global-source?     uint32
    |  |     +-- extended-id?       yang:hex-string
    |  +-- optimizations
    |  |  +-- (algorithm)?
    |  |     +--:(metric) {path-optimization-metric}?
    |  |     |  +-- optimization-metric* [metric-type]
    |  |     |  |  +-- metric-type                       identityref
    |  |     |  |  +-- weight?                           uint8
    |  |     |  |  +-- explicit-route-exclude-objects
    |  |     |  |  |  +-- route-object-exclude-object* [index]
    |  |     |  |  |     +-- index                        uint32
    |  |     |  |  |     +-- (type)?
    |  |     |  |  |        +--:(numbered-node-hop)
    |  |     |  |  |        |  +-- numbered-node-hop
    |  |     |  |  |        |     +-- node-id     te-node-id
    |  |     |  |  |        |     +-- hop-type?   te-hop-type
    |  |     |  |  |        +--:(numbered-link-hop)
    |  |     |  |  |        |  +-- numbered-link-hop
    |  |     |  |  |        |     +-- link-tp-id    te-tp-id
    |  |     |  |  |        |     +-- hop-type?     te-hop-type
    |  |     |  |  |        |     +-- direction?    te-link-direction
    |  |     |  |  |        +--:(unnumbered-link-hop)
    |  |     |  |  |        |  +-- unnumbered-link-hop
    |  |     |  |  |        |     +-- link-tp-id    te-tp-id
    |  |     |  |  |        |     +-- node-id       te-node-id
    |  |     |  |  |        |     +-- hop-type?     te-hop-type
    |  |     |  |  |        |     +-- direction?    te-link-direction
    |  |     |  |  |        +--:(as-number)
    |  |     |  |  |        |  +-- as-number-hop
    |  |     |  |  |        |     +-- as-number    inet:as-number
    |  |     |  |  |        |     +-- hop-type?    te-hop-type
    |  |     |  |  |        +--:(label)
    |  |     |  |  |        |  +-- label-hop
    |  |     |  |  |        |     +-- te-label
    |  |     |  |  |        |        +-- (technology)?
    |  |     |  |  |        |        |  +--:(generic)
    |  |     |  |  |        |        |     +-- generic?
    |  |     |  |  |        |        |             rt-types:generalized-label
    |  |     |  |  |        |        +-- direction?
    |  |     |  |  |        |                te-label-direction
    |  |     |  |  |        +--:(srlg)
    |  |     |  |  |           +-- srlg
    |  |     |  |  |              +-- srlg?   uint32
    |  |     |  |  +-- explicit-route-include-objects
    |  |     |  |     +-- route-object-include-object* [index]
    |  |     |  |        +-- index                        uint32
    |  |     |  |        +-- (type)?
    |  |     |  |           +--:(numbered-node-hop)
    |  |     |  |           |  +-- numbered-node-hop
    |  |     |  |           |     +-- node-id     te-node-id
    |  |     |  |           |     +-- hop-type?   te-hop-type
    |  |     |  |           +--:(numbered-link-hop)
    |  |     |  |           |  +-- numbered-link-hop
    |  |     |  |           |     +-- link-tp-id    te-tp-id
    |  |     |  |           |     +-- hop-type?     te-hop-type
    |  |     |  |           |     +-- direction?    te-link-direction
    |  |     |  |           +--:(unnumbered-link-hop)
    |  |     |  |           |  +-- unnumbered-link-hop
    |  |     |  |           |     +-- link-tp-id    te-tp-id
    |  |     |  |           |     +-- node-id       te-node-id
    |  |     |  |           |     +-- hop-type?     te-hop-type
    |  |     |  |           |     +-- direction?    te-link-direction
    |  |     |  |           +--:(as-number)
    |  |     |  |           |  +-- as-number-hop
    |  |     |  |           |     +-- as-number    inet:as-number
    |  |     |  |           |     +-- hop-type?    te-hop-type
    |  |     |  |           +--:(label)
    |  |     |  |              +-- label-hop
    |  |     |  |                 +-- te-label
    |  |     |  |                    +-- (technology)?
    |  |     |  |                    |  +--:(generic)
    |  |     |  |                    |     +-- generic?
    |  |     |  |                    |             rt-types:generalized-label
    |  |     |  |                    +-- direction?
    |  |     |  |                            te-label-direction
    |  |     |  +-- tiebreakers
    |  |     |     +-- tiebreaker* [tiebreaker-type]
    |  |     |        +-- tiebreaker-type    identityref
    |  |     +--:(objective-function)
    |  |              {path-optimization-objective-function}?
    |  |        +-- objective-function
    |  |           +-- objective-function-type?   identityref
    |  +-- named-path-constraint?                leafref
    |  |       {te-types:named-path-constraints}?
    |  +-- te-bandwidth
    |  |  +-- (technology)?
    |  |     +--:(generic)
    |  |        +-- generic?   te-bandwidth
    |  +-- link-protection?                      identityref
    |  +-- setup-priority?                       uint8
    |  +-- hold-priority?                        uint8
    |  +-- signaling-type?                       identityref
    |  +-- path-metric-bounds
    |  |  +-- path-metric-bound* [metric-type]
    |  |     +-- metric-type    identityref
    |  |     +-- upper-bound?   uint64
    |  +-- path-affinities-values
    |  |  +-- path-affinities-value* [usage]
    |  |     +-- usage    identityref
    |  |     +-- value?   admin-groups
    |  +-- path-affinity-names
    |  |  +-- path-affinity-name* [usage]
    |  |     +-- usage            identityref
    |  |     +-- affinity-name* [name]
    |  |        +-- name    string
    |  +-- path-srlgs-lists
    |  |  +-- path-srlgs-list* [usage]
    |  |     +-- usage     identityref
    |  |     +-- values*   srlg
    |  +-- path-srlgs-names
    |  |  +-- path-srlgs-name* [usage]
    |  |     +-- usage    identityref
    |  |     +-- names*   string
    |  +-- disjointness?                         te-path-disjointness
    |  +-- explicit-route-objects-always
    |  |  +-- route-object-exclude-always* [index]
    |  |  |  +-- index                        uint32
    |  |  |  +-- (type)?
    |  |  |     +--:(numbered-node-hop)
    |  |  |     |  +-- numbered-node-hop
    |  |  |     |     +-- node-id     te-node-id
    |  |  |     |     +-- hop-type?   te-hop-type
    |  |  |     +--:(numbered-link-hop)
    |  |  |     |  +-- numbered-link-hop
    |  |  |     |     +-- link-tp-id    te-tp-id
    |  |  |     |     +-- hop-type?     te-hop-type
    |  |  |     |     +-- direction?    te-link-direction
    |  |  |     +--:(unnumbered-link-hop)
    |  |  |     |  +-- unnumbered-link-hop
    |  |  |     |     +-- link-tp-id    te-tp-id
    |  |  |     |     +-- node-id       te-node-id
    |  |  |     |     +-- hop-type?     te-hop-type
    |  |  |     |     +-- direction?    te-link-direction
    |  |  |     +--:(as-number)
    |  |  |     |  +-- as-number-hop
    |  |  |     |     +-- as-number    inet:as-number
    |  |  |     |     +-- hop-type?    te-hop-type
    |  |  |     +--:(label)
    |  |  |        +-- label-hop
    |  |  |           +-- te-label
    |  |  |              +-- (technology)?
    |  |  |              |  +--:(generic)
    |  |  |              |     +-- generic?
    |  |  |              |             rt-types:generalized-label
    |  |  |              +-- direction?       te-label-direction
    |  |  +-- route-object-include-exclude* [index]
    |  |     +-- explicit-route-usage?        identityref
    |  |     +-- index                        uint32
    |  |     +-- (type)?
    |  |        +--:(numbered-node-hop)
    |  |        |  +-- numbered-node-hop
    |  |        |     +-- node-id     te-node-id
    |  |        |     +-- hop-type?   te-hop-type
    |  |        +--:(numbered-link-hop)
    |  |        |  +-- numbered-link-hop
    |  |        |     +-- link-tp-id    te-tp-id
    |  |        |     +-- hop-type?     te-hop-type
    |  |        |     +-- direction?    te-link-direction
    |  |        +--:(unnumbered-link-hop)
    |  |        |  +-- unnumbered-link-hop
    |  |        |     +-- link-tp-id    te-tp-id
    |  |        |     +-- node-id       te-node-id
    |  |        |     +-- hop-type?     te-hop-type
    |  |        |     +-- direction?    te-link-direction
    |  |        +--:(as-number)
    |  |        |  +-- as-number-hop
    |  |        |     +-- as-number    inet:as-number
    |  |        |     +-- hop-type?    te-hop-type
    |  |        +--:(label)
    |  |        |  +-- label-hop
    |  |        |     +-- te-label
    |  |        |        +-- (technology)?
    |  |        |        |  +--:(generic)
    |  |        |        |     +-- generic?
    |  |        |        |             rt-types:generalized-label
    |  |        |        +-- direction?       te-label-direction
    |  |        +--:(srlg)
    |  |           +-- srlg
    |  |              +-- srlg?   uint32
    |  +-- path-in-segment!
    |  |  +-- label-restrictions
    |  |     +-- label-restriction* [index]
    |  |        +-- restriction?    enumeration
    |  |        +-- index           uint32
    |  |        +-- label-start
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-end
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-step
    |  |        |  +-- (technology)?
    |  |        |     +--:(generic)
    |  |        |        +-- generic?   int32
    |  |        +-- range-bitmap?   yang:hex-string
    |  +-- path-out-segment!
    |  |  +-- label-restrictions
    |  |     +-- label-restriction* [index]
    |  |        +-- restriction?    enumeration
    |  |        +-- index           uint32
    |  |        +-- label-start
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-end
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-step
    |  |        |  +-- (technology)?
    |  |        |     +--:(generic)
    |  |        |        +-- generic?   int32
    |  |        +-- range-bitmap?   yang:hex-string
    |  +-- requested-metrics* [metric-type]
    |  |  +-- metric-type    identityref
    |  +-- return-srlgs?                         boolean
    |  +-- return-affinities?                    boolean
    |  +-- requested-state!
    |     +-- timer?            uint16
    |     +-- transaction-id?   string
    +-- tunnel-attributes* [tunnel-name]
    |  +-- tunnel-name               string
    |  +-- encoding?                 identityref
    |  +-- switching-type?           identityref
    |  +-- source?                   te-types:te-node-id
    |  +-- destination?              te-types:te-node-id
    |  +-- src-tunnel-tp-id?         binary
    |  +-- dst-tunnel-tp-id?         binary
    |  +-- bidirectional?            boolean
    |  +-- association-objects
    |  |  +-- association-object* [association-key]
    |  |  |  +-- association-key    string
    |  |  |  +-- type?              identityref
    |  |  |  +-- id?                uint16
    |  |  |  +-- source
    |  |  |     +-- id?     te-gen-node-id
    |  |  |     +-- type?   enumeration
    |  |  +-- association-object-extended* [association-key]
    |  |     +-- association-key    string
    |  |     +-- type?              identityref
    |  |     +-- id?                uint16
    |  |     +-- source
    |  |     |  +-- id?     te-gen-node-id
    |  |     |  +-- type?   enumeration
    |  |     +-- global-source?     uint32
    |  |     +-- extended-id?       yang:hex-string
    |  +-- protection-type?          identityref
    |  +-- restoration-type?         identityref
    |  +-- restoration-scheme?       identityref
    |  +-- te-topology-identifier
    |  |  +-- provider-id?   te-global-id
    |  |  +-- client-id?     te-global-id
    |  |  +-- topology-id?   te-topology-id
    |  +-- te-bandwidth
    |  |  +-- (technology)?
    |  |     +--:(generic)
    |  |        +-- generic?   te-bandwidth
    |  +-- link-protection?          identityref
    |  +-- setup-priority?           uint8
    |  +-- hold-priority?            uint8
    |  +-- signaling-type?           identityref
    |  +-- hierarchy
    |     +-- dependency-tunnels
    |     |  +-- dependency-tunnel* [name]
    |     |  |  +-- name              -> /te:te/tunnels/tunnel/name
    |     |  |  +-- encoding?         identityref
    |     |  |  +-- switching-type?   identityref
    |     |  +-- dependency-tunnel-attributes* [name]
    |     |     +-- name              leafref
    |     |     +-- encoding?         identityref
    |     |     +-- switching-type?   identityref
    |     +-- hierarchical-link
    |        +-- enable?                   boolean
    |        +-- local-te-node-id?         te-types:te-node-id
    |        +-- local-te-link-tp-id?      te-types:te-tp-id
    |        +-- remote-te-node-id?        te-types:te-node-id
    |        +-- te-topology-identifier
    |           +-- provider-id?   te-global-id
    |           +-- client-id?     te-global-id
    |           +-- topology-id?   te-topology-id
    +-- synchronization* []
       +-- svec
       |  +-- relaxable?      boolean
       |  +-- disjointness?   te-path-disjointness
       |  +-- request-id*     uint32
       +-- svec-constraints
       |  +-- path-metric-bound* [metric-type]
       |     +-- metric-type    identityref
       |     +-- upper-bound?   uint64
       +-- path-srlgs-lists
       |  +-- path-srlgs-list* [usage]
       |     +-- usage     identityref
       |     +-- values*   srlg
       +-- path-srlgs-names
       |  +-- path-srlgs-name* [usage]
       |     +-- usage    identityref
       |     +-- names*   string
       +-- exclude-objects
       |  +-- excludes* []
       |     +-- (type)?
       |        +--:(numbered-node-hop)
       |        |  +-- numbered-node-hop
       |        |     +-- node-id     te-node-id
       |        |     +-- hop-type?   te-hop-type
       |        +--:(numbered-link-hop)
       |        |  +-- numbered-link-hop
       |        |     +-- link-tp-id    te-tp-id
       |        |     +-- hop-type?     te-hop-type
       |        |     +-- direction?    te-link-direction
       |        +--:(unnumbered-link-hop)
       |        |  +-- unnumbered-link-hop
       |        |     +-- link-tp-id    te-tp-id
       |        |     +-- node-id       te-node-id
       |        |     +-- hop-type?     te-hop-type
       |        |     +-- direction?    te-link-direction
       |        +--:(as-number)
       |        |  +-- as-number-hop
       |        |     +-- as-number    inet:as-number
       |        |     +-- hop-type?    te-hop-type
       |        +--:(label)
       |           +-- label-hop
       |              +-- te-label
       |                 +-- (technology)?
       |                 |  +--:(generic)
       |                 |     +-- generic?
       |                 |             rt-types:generalized-label
       |                 +-- direction?       te-label-direction
       +-- optimizations
          +-- (algorithm)?
             +--:(metric) {te-types:path-optimization-metric}?
             |  +-- optimization-metric* [metric-type]
             |     +-- metric-type    identityref
             |     +-- weight?        uint8
             +--:(objective-function)
                      {te-types:path-optimization-objective-function}?
                +-- objective-function
                   +-- objective-function-type?   identityref
  augment /te:tunnels-path-compute/te:output/te:path-compute-result:
    +--ro response* [response-id]
       +--ro response-id                         uint32
       +--ro computed-paths-properties
       |  +--ro computed-path-properties* [k-index]
       |     +--ro k-index            uint8
       |     +--ro path-properties
       |        +--ro path-metric* [metric-type]
       |        |  +--ro metric-type           identityref
       |        |  +--ro accumulative-value?   uint64
       |        +--ro path-affinities-values
       |        |  +--ro path-affinities-value* [usage]
       |        |     +--ro usage    identityref
       |        |     +--ro value?   admin-groups
       |        +--ro path-affinity-names
       |        |  +--ro path-affinity-name* [usage]
       |        |     +--ro usage            identityref
       |        |     +--ro affinity-name* [name]
       |        |        +--ro name    string
       |        +--ro path-srlgs-lists
       |        |  +--ro path-srlgs-list* [usage]
       |        |     +--ro usage     identityref
       |        |     +--ro values*   srlg
       |        +--ro path-srlgs-names
       |        |  +--ro path-srlgs-name* [usage]
       |        |     +--ro usage    identityref
       |        |     +--ro names*   string
       |        +--ro path-route-objects
       |        |  +--ro path-route-object* [index]
       |        |     +--ro index                        uint32
       |        |     +--ro (type)?
       |        |        +--:(numbered-node-hop)
       |        |        |  +--ro numbered-node-hop
       |        |        |     +--ro node-id     te-node-id
       |        |        |     +--ro hop-type?   te-hop-type
       |        |        +--:(numbered-link-hop)
       |        |        |  +--ro numbered-link-hop
       |        |        |     +--ro link-tp-id    te-tp-id
       |        |        |     +--ro hop-type?     te-hop-type
       |        |        |     +--ro direction?    te-link-direction
       |        |        +--:(unnumbered-link-hop)
       |        |        |  +--ro unnumbered-link-hop
       |        |        |     +--ro link-tp-id    te-tp-id
       |        |        |     +--ro node-id       te-node-id
       |        |        |     +--ro hop-type?     te-hop-type
       |        |        |     +--ro direction?    te-link-direction
       |        |        +--:(as-number)
       |        |        |  +--ro as-number-hop
       |        |        |     +--ro as-number    inet:as-number
       |        |        |     +--ro hop-type?    te-hop-type
       |        |        +--:(label)
       |        |           +--ro label-hop
       |        |              +--ro te-label
       |        |                 +--ro (technology)?
       |        |                 |  +--:(generic)
       |        |                 |     +--ro generic?
       |        |                 |             rt-types:generalized-label
       |        |                 +--ro direction?
       |        |                         te-label-direction
       |        +--ro te-bandwidth
       |        |  +--ro (technology)?
       |        |     +--:(generic)
       |        |        +--ro generic?   te-bandwidth
       |        +--ro disjointness-type?
       |                te-types:te-path-disjointness
       +--ro computed-path-error-infos
       |  +--ro computed-path-error-info* []
       |     +--ro error-description?   string
       |     +--ro error-timestamp?     yang:date-and-time
       |     +--ro error-reason?        identityref
       +--ro tunnel-ref?                         te:tunnel-ref
       +--ro (path-role)?
          +--:(primary)
          |  +--ro primary-path-ref?             leafref
          +--:(primary-reverse)
          |  +--ro primary-reverse-path-ref?     leafref
          +--:(secondary)
          |  +--ro secondary-path-ref?           leafref
          +--:(secondary-reverse)
             +--ro secondary-reverse-path-ref?   leafref
  augment /te:tunnels-actions/te:input/te:tunnel-info/te:filter-type:
    +--:(path-compute-transactions)
       +-- path-compute-transaction-id*   string
  augment /te:tunnels-actions/te:output:
    +--ro path-computed-delete-result
       +--ro path-compute-transaction-id*   string
]]></artwork></figure>

</section>
<section anchor="pc-yang"><name>YANG module</name>

<figure title="TE path computation YANG module" anchor="fig-pc-yang"><sourcecode type="yang" markers="true" name="ietf-te-path-computation@2022-10-21.yang"><![CDATA[
module ietf-te-path-computation {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-te-path-computation";
  prefix te-pc;

  import ietf-te {
    prefix te;
    reference
      "RFCYYYY: A YANG Data Model for Traffic Engineering Tunnels
       and Interfaces";
  }

  /* Note: The RFC Editor will replace YYYY with the number assigned
     to the RFC once draft-ietf-teas-yang-te becomes an RFC.*/

  import ietf-te-types {
    prefix te-types;
    reference
      "RFCZZZZ: Updated Common YANG Data Types for Traffic 
      Engineering";
  }

  /* Note: The RFC Editor will replace ZZZZ with the number assigned
     to the RFC once draft-ietf-teas-rfc8776-update becomes an RFC.*/

  organization
    "Traffic Engineering Architecture and Signaling (TEAS)
     Working Group";
  contact
    "WG Web: <https://datatracker.ietf.org/wg/teas/>
     WG List:  <mailto:teas@ietf.org>

     Editor:   Italo Busi
               <mailto:italo.busi@huawei.com>

     Editor:   Sergio Belotti
               <mailto:sergio.belotti@nokia.com>

     Editor:   Victor Lopez
               <mailto:victor.lopez@nokia.com>

     Editor:   Oscar Gonzalez de Dios
               <mailto:oscar.gonzalezdedios@telefonica.com>

     Editor:   Anurag Sharma
               <mailto:ansha@google.com>

     Editor:   Yan Shi
               <mailto:shiyan49@chinaunicom.cn>

     Editor:   Ricard Vilalta
               <mailto:ricard.vilalta@cttc.es>

     Editor:   Karthik Sethuraman
               <mailto:karthik.sethuraman@necam.com>

     Editor:   Michael Scharf
               <mailto:michael.scharf@gmail.com>

     Editor:   Daniele Ceccarelli
               <mailto:daniele.ceccarelli@ericsson.com>
     
    ";
  description
    "This module defines a YANG data model for requesting Traffic
     Engineering (TE) path computation. The YANG data model defined
     in this document augments the RPCs defined in the generic TE
     module (ietf-te).

     The model fully conforms to the
     Network Management Datastore Architecture (NMDA).

     Copyright (c) 2023 IETF Trust and the persons
     identified as authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with
     or without modification, is permitted pursuant to, and
     subject to the license terms contained in, the Revised
     BSD License set forth in Section 4.c of the IETF Trust's
     Legal Provisions Relating to IETF Documents
     (https://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC XXXX; see
     the RFC itself for full legal notices.

     The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL', 'SHALL
     NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'NOT RECOMMENDED',
     'MAY', and 'OPTIONAL' in this document are to be interpreted as
     described in BCP 14 (RFC 2119) (RFC 8174) when, and only when,
     they appear in all capitals, as shown here.";

  // RFC Ed.: replace XXXX with actual RFC number and remove
  // this note
  // replace the revision date with the module publication date
  // the format is (year-month-day)

  revision 2023-01-12 {
    description
      "Initial revision";
    reference
      "RFC XXXX: A YANG Data Model for requesting path computation";
  }

  // RFC Ed.: replace XXXX with actual RFC number and remove
  // this note

  /*
   * Identities
   */

  identity tunnel-action-path-compute-delete {
    base te-types:tunnel-actions-type;
    description
      "Action type to delete the transient states
      of computed paths, as described in section 3.3.1 of
      RFC XXXX.";
    reference
      "RFC XXXX: A YANG Data Model for requesting path computation";
  }

  /*
   * Groupings
   */

  grouping protection-restoration-properties {
    description
      "This grouping defines the restoration and protection types
       for a path in the path computation request.";
    leaf protection-type {
      type identityref {
        base te-types:lsp-protection-type;
      }
      default "te-types:lsp-protection-unprotected";
      description
        "LSP protection type.";
    }
    leaf restoration-type {
      type identityref {
        base te-types:lsp-restoration-type;
      }
      default "te-types:lsp-restoration-restore-any";
      description
        "LSP restoration type.";
    }
    leaf restoration-scheme {
      type identityref {
        base te-types:restoration-scheme-type;
      }
      default "te-types:restoration-scheme-preconfigured";
      description
        "LSP restoration scheme.";
    }
  } // grouping protection-restoration-properties

  grouping requested-info {
    description
      "This grouping defines the information which is requested
       (e.g., metrics), in the path computation request, to be
       returned in the path computation response.";
    list requested-metrics {
      key "metric-type";
      description
        "The list of the requested metrics.

         The metrics listed here MUST be returned in the response.
         Returning other metrics in the response is OPTIONAL.";
      leaf metric-type {
        type identityref {
          base te-types:path-metric-type;
        }
        description
          "The metric requested to be returned in the response";
      }
    }
    leaf return-srlgs {
      type boolean;
      default "false";
      description
        "If true, path Shared Risk Link Groups (SRLGs) MUST be
         returned in the response.
         If false, returning path SRLGs in the response OPTIONAL.";
    }
    leaf return-affinities {
      type boolean;
      default "false";
      description
        "If true, path affinities MUST be returned in the response.
         If false, returning path affinities in the response is
         OPTIONAL.";
    }
  } // grouping requested-info

  grouping requested-state {
    description
      "Configuration for the transient state used
       to report the computed path";
    container requested-state {
      presence
        "Request temporary reporting of the computed path state";
      description
        "Configures attributes for the temporary reporting of the
         computed path state (e.g., expiration timer).";
      leaf timer {
        type uint16;
        units "minutes";
        default "10";
        description
          "The timeout after which the transient state reporting
          the computed path SHOULD be removed.";
      }
      leaf transaction-id {
        type string;
        description
          "The transaction-id associated with this path computation
          to be used for fast deletion of the transient states
          associated with multiple path computations.

          This transaction-id can be used to explicitly delete all
          the transient states of all the computed paths associated
          with the same transaction-id.

          When one path associated with a transaction-id is setup,
          the transient states of all the other computed paths
          with the same transaction-id are automatically removed.

          If not specified, the transient state is removed only
          when the timer expires (when the timer is specified)
          or not created at all (stateless path computation,
          when the timer is not specified).";
      }
    }
  } // grouping requested-state

  grouping reported-state {
    description
      "This grouping defines the information, returned in the path
       computation response, reporting the transient state related
       to the computed path";
    leaf tunnel-ref {
      type te:tunnel-ref;
      description
        "
         Reference to the tunnel that reports the transient state
         of the computed path.

         If no transient state is created, this attribute is
         omitted.
        ";
    }
    choice path-role {
      description
        "The transient state of the computed path can be reported
         as a primary, primary-reverse, secondary or
         a secondary-reverse path of a te-tunnel";
      case primary {
        leaf primary-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:primary-paths/te:primary-path/"
               + "te:name";
          }
          must '../tunnel-ref' {
            description
              "The primary-path name can only be reported
               if the tunnel name is also reported.";
          }
          description
            "
             Reference to the primary-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case primary
      case primary-reverse {
        leaf primary-reverse-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:primary-paths/te:primary-path/"
               + "te:name";
          }
          must '../tunnel-ref' {
            description
              "The primary-reverse-path name can only be reported
               if the tunnel name is also reported.";
          }
          description
            "
             Reference to the primary-reverse-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case primary-reverse
      case secondary {
        leaf secondary-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:secondary-paths/te:secondary-path/"
               + "te:name";
          }
          must '../tunnel-ref' {
            description
              "The secondary-path name can only be reported
               if the tunnel name is also reported.";
          }
          description
            "
             Reference to the secondary-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case secondary
      case secondary-reverse {
        leaf secondary-reverse-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:secondary-reverse-paths/"
               + "te:secondary-reverse-path/te:name";
          }
          must '../tunnel-ref' {
            description
              "The secondary-reverse-path name can only be reported
               if the tunnel name is also reported.";
          }
          description
            "
             Reference to the secondary-reverse-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case secondary
    } // choice path
  } // grouping reported-state

  grouping synchronization-constraints {
    description
      "Global constraints applicable to synchronized path
       computation requests.";
    container svec-constraints {
      description
        "global svec constraints";
      list path-metric-bound {
        key "metric-type";
        description
          "list of bound metrics";
        leaf metric-type {
          type identityref {
            base te-types:svec-metric-type;
          }
          description
            "SVEC metric type.";
          reference
            "RFC5541: Encoding of Objective Functions in the Path
            Computation Element Communication Protocol (PCEP).";
        }
        leaf upper-bound {
          type uint64;
          description
            "Upper bound on SVEC metric";
        }
      }
    }
    uses te-types:generic-path-srlgs;
    container exclude-objects {
      description
        "Resources to be excluded";
      list excludes {
        description
          "List of Explicit Route Objects to always exclude
           from synchronized path computation";
        uses te-types:explicit-route-hop;
      }
    }
  } // grouping synchronization-constraints

  grouping synchronization-optimization {
    description
      "Optimizations applicable to synchronized path
       computation requests.";
    container optimizations {
      description
        "The objective function container that includes attributes
         to impose when computing a synchronized set of paths";
      choice algorithm {
        description
          "Optimizations algorithm.";
        case metric {
          if-feature "te-types:path-optimization-metric";
          list optimization-metric {
            key "metric-type";
            description
              "svec path metric type";
            leaf metric-type {
              type identityref {
                base te-types:svec-metric-type;
              }
              description
                "TE path metric type usable for computing a set of
                synchronized requests";
            }
            leaf weight {
              type uint8;
              description
                "Metric normalization weight";
            }
          }
        }
        case objective-function {
          if-feature
            "te-types:path-optimization-objective-function";
          container objective-function {
            description
              "The objective function container that includes
               attributes to impose when computing a TE path";
            leaf objective-function-type {
              type identityref {
                base te-types:svec-objective-function-type;
              }
              description
                "Objective function entry";
            }
          }
        }
      }
    }
  } // grouping synchronization-optimization

  grouping synchronization-info {
    description
      "Information for synchronized path computation requests.";
    list synchronization {
      description
        "List of Synchronization VECtors.";
      container svec {
        description
          "Synchronization VECtor";
        leaf relaxable {
          type boolean;
          default "true";
          description
            "If this leaf is true, taking into account this svec is
             OPTIONAL and the path computation process is
             free to ignore svec content.
             Otherwise, it MUST take into account this svec.";
        }
        uses te-types:generic-path-disjointness;
        leaf-list request-id {
          type uint32;
          description
            "This list reports the set of path computation
             requests that are requested to be synchronized.";
        }
      }
      uses synchronization-constraints;
      uses synchronization-optimization;
    }
  } // grouping synchronization-info

  /*
   * Augment TE RPCs
   */

  augment "/te:tunnels-path-compute/te:input/te:path-compute-info" {
    description
      "Augments Path Computation RPC input";
    list path-request {
      key "request-id";
      description
        "The list of the requested paths to be computed";
      leaf request-id {
        type uint32;
        mandatory true;
        description
          "Each path computation request is uniquely identified
           within the RPC request by the request-id.";
      }
      choice tunnel-attributes {
        default "value";
        description
          "Whether the tunnel attributes are specified by value
           within this path computation request or by reference.
           The reference could be either to an existing te-tunnel
           or to an entry in the tunnel-attributes list";
        case reference {
          container tunnel-reference {
            description
              "Attributes for a requested path that belongs to
              either an exiting te-tunnel or to an entry in the
              tunnel-attributes list.";
            choice tunnel-exist {
              mandatory true;
              description
                "Whether the tunnel reference is to an existing
                te-tunnel or to an entry in the tunnel-attributes
                list";
              case tunnel-ref {
                leaf tunnel-ref {
                  type te:tunnel-ref;
                  mandatory true;
                  description
                    "The referenced te-tunnel instance";
                }
              } // case tunnel-ref
              case tunnel-attributes-ref {
                leaf tunnel-attributes-ref {
                  type leafref {
                    path "/te:tunnels-path-compute/"
                      + "te:path-compute-info/"
                      + "te-pc:tunnel-attributes/te-pc:tunnel-name";
                  }
                  mandatory true;
                  description
                    "The referenced te-tunnel instance";
                }
              } // case tunnel-attributes-ref 
            } // choice tunnel-exist
            leaf path-name {
              type string;
              description
                "TE path name.";
            }
            choice path-role {
              mandatory true;
              description
                "Whether this path is a primary, or a reverse
                primary, or a secondary, or a reverse secondary
                path.";
              case primary-path {
                container primary-path {
                  presence "Indicates that the requested path
                            is a primary path";
                  description
                    "TE primary path";
                  uses te:path-forward-properties;
                  uses te:k-requested-paths;
                } // container primary-path
              } // case primary-path
              case secondary-path {
                container secondary-path {
                  description
                    "TE secondary path";
                  uses te:path-forward-properties;
                  uses protection-restoration-properties;
                  list primary-path-ref {
                    min-elements 1;
                    description
                      "The list of primary paths that reference
                      this path as a candidate secondary path";
                    choice primary-path-exist {
                      mandatory true;
                      description
                        "Whether the path reference is to an existing
                        te-tunnel path or to another path request";
                      case path-ref {
                        leaf primary-path-ref {
                          type leafref {
                            path "/te:te/te:tunnels/te:tunnel"
                              + "[te:name=current()/../../../"
                              + "tunnel-ref]/te:primary-paths/"
                              + "te:primary-path/te:name";
                          }
                          must '../../../tunnel-ref' {
                            description
                              "The primary-path can be referenced
                              if also the tunnel is referenced.";
                          }
                          mandatory true;
                          description
                            "The referenced primary path";
                        }
                      } // case path-ref
                      case path-request-ref {
                        leaf path-request-ref {
                          type leafref {
                            path "/te:tunnels-path-compute/"
                              + "te:path-compute-info/"
                              + "te-pc:path-request/"
                              + "te-pc:request-id";
                          }
                          mandatory true;
                          description
                            "The referenced primary path request";
                        }
                      } // case path-request-ref 
                    } // choice primary-path-exist
                  } // list primary-path-ref
                } // container secondary-path
              } // case secondary-path
              case primary-reverse-path {
                container primary-reverse-path {
                  description
                    "TE primary reverse path";
                  choice primary-path-exist {
                    mandatory true;
                    description
                      "Whether the path reference to the primary
                      paths for which this path is the reverse-path
                      is to an existing te-tunnel path or to
                      another path request.";
                    case path-ref {
                      leaf primary-path-ref {
                        type leafref {
                          path "/te:te/te:tunnels/te:tunnel[te:name"
                            + "=current()/../../tunnel-ref]/"
                            + "te:primary-paths/te:primary-path/"
                            + "te:name";
                        }
                        must '../../tunnel-ref' {
                          description
                            "The primary-path can be referenced
                            if also the tunnel is referenced.";
                        }
                        mandatory true;
                        description
                          "The referenced primary path";
                      }
                    } // case path-ref
                    case path-request-ref {
                      leaf path-request-ref {
                        type leafref {
                          path "/te:tunnels-path-compute/"
                            + "te:path-compute-info/"
                            + "te-pc:path-request/"
                            + "te-pc:request-id";
                        }
                        mandatory true;
                        description
                          "The referenced primary path request";
                      }
                    } // case path-request-ref 
                  } // choice primary-path-exist
                } // container primary-reverse-path
              } // case primary-reverse-path
              case secondary-reverse-path {
                container secondary-reverse-path {
                  description
                    "TE secondary reverse path";
                  // uses te:path-preference;
                  uses protection-restoration-properties;
                  list primary-reverse-path {
                    min-elements 1;
                    description
                      "The list of primary reverse paths that
                      reference this path as a candidate
                      secondary reverse path";
                    choice primary-reverse-path-exist {
                      mandatory true;
                      description
                        "Whether the path reference is to an existing
                        te-tunnel path or to another path request";
                      case path-ref {
                        leaf primary-path-ref {
                          type leafref {
                            path "/te:te/te:tunnels/te:tunnel"
                              + "[te:name=current()/../../../"
                              + "tunnel-ref]/te:primary-paths/"
                              + "te:primary-path/te:name";
                          }
                          must '../../../tunnel-ref' {
                            description
                              "The primary-path can be referenced
                              if also the tunnel is referenced.";
                          }
                          mandatory true;
                          description
                            "The referenced primary path";
                        }
                      } // case path-ref
                      case path-request-ref {
                        leaf path-request-ref {
                          type leafref {
                            path "/te:tunnels-path-compute/"
                              + "te:path-compute-info/"
                              + "te-pc:path-request/"
                              + "te-pc:request-id";
                          }
                          mandatory true;
                          description
                            "The referenced primary reverse path
                            request";
                        }
                      } // case path-request-ref 
                    } // choice primary-reverse-path-exist
                  } // list primary-reverse-path-ref
                } // container secondary-reverse-path
              } // case secondary-reverse-path
            } // choice tunnel-path-role
          }
        } // case reference
        case value {
          leaf tunnel-name {
            type string;
            description
              "TE tunnel name.";
          }
          leaf path-name {
            type string;
            description
              "TE path name.";
          }
          choice path-role {
            when 'not (./source) and not (./destination) and
                  not (./src-tunnel-tp-id) and
                  not (./dst-tunnel-tp-id)' {
              description
                "When the tunnel attributes are specified by value
                within this path computation, it is assumed that the
                requested path will be the only path of a tunnel.

                If the requested path is a transit segment path
                (i.e., the source, src-tp-id, destination and
                dst-tp-id attributes are empty), it
                could be of any type. Otherwise it could only be a
                primary path.";
            }
            default primary-path;
            description
              "Indicates whether the requested path is a primary
              path, a secondary path, a reverse primary path or a
              reverse secondary path.";
            case primary-path {
              description
                "The requested path is a primary path.";
            }
            container secondary-path {
              presence
                "Indicates that the requested path is a secondary
                path.";
              description
                "The name of the primary path which the requested
                secondary path belongs to.";
              leaf primary-path-name {
                type string;
                description
                  "TE primary path name.";
              }
            } // container secondary-path
            container primary-reverse-path {
              presence
                "Indicates that the requested path is a primary
                reverse path.";
              description
                "The name of the primary path which the requested
                primary reverse path belongs to.";
              leaf primary-path-name {
                type string;
                description
                  "TE primary path name.";
              }
            } // container primary-reverse-path
            container secondary-reverse-path {
              presence
                "Indicates that the requested path is a secondary
                reverse path.";
              description
                "The names of the primary path and of the primary
                reverse path which the requested secondary reverse
                path belongs to.";
              leaf primary-path-name {
                type string;
                description
                  "TE primary path name.";
              }
              leaf primary-reverse-path-name {
                type string;
                description
                  "TE primary reverse path name.";
              }
            } // container primary-reverse-path
          } // choice path-role
          uses te:k-requested-paths;
          uses te-types:encoding-and-switching-type;
          uses te:tunnel-common-attributes;
          uses te-types:te-topology-identifier;
        } // case value
      } // choice tunnel-attributes
      uses te:path-compute-info;
      uses requested-info;
      uses requested-state;
    }
    list tunnel-attributes {
      key "tunnel-name";
      description
        "Tunnel attributes common to multiple request paths";
      leaf tunnel-name {
        type string;
        description
          "TE tunnel name.";
      }
      uses te-types:encoding-and-switching-type;
      uses te:tunnel-common-attributes;
      uses te:tunnel-associations-properties;
      uses protection-restoration-properties;
      uses te-types:tunnel-constraints;
      uses te:tunnel-hierarchy-properties {
        augment "hierarchy/dependency-tunnels" {
          description
            "Augment with the list of dependency tunnel requests.";
          list dependency-tunnel-attributes {
            key "name";
            description
              "A tunnel request entry that this tunnel request can
               potentially depend on.";
            leaf name {
              type leafref {
                path "/te:tunnels-path-compute/"
                   + "te:path-compute-info/te-pc:tunnel-attributes/"
                   + "te-pc:tunnel-name";
              }
              description
                "Dependency tunnel request name.";
            }
            uses te-types:encoding-and-switching-type;
          }
        }
      }
    }
    uses synchronization-info;
  } // path-compute rpc input

  augment "/te:tunnels-path-compute/te:output/"
        + "te:path-compute-result" {
    description
      "Auguments Path Computation RPC output";
    list response {
      key "response-id";
      config false;
      description
        "response";
      leaf response-id {
        type uint32;
        description
          "The response-id has the same value of the
           corresponding request-id.";
      }
      uses te:path-computation-response;
      uses reported-state;
    }
  } // path-compute rpc output

  augment "/te:tunnels-actions/te:input/te:tunnel-info/"
        + "te:filter-type" {
    description
      "Augment Tunnels Action RPC input filter types";
    case path-compute-transactions {
      when "derived-from-or-self(../te:action-info/te:action, "
         + "'tunnel-action-path-compute-delete')";
      description
        "Path Delete RPC input";
      leaf-list path-compute-transaction-id {
        type string;
        description
          "The list of the transaction-id values of the
           transient states to be deleted";
      }
    }
  } // path-delete rpc input

  augment "/te:tunnels-actions/te:output" {
    description
      "Augment Tunnels Action RPC output with path delete result";
    container path-computed-delete-result {
      description
        "Path Delete RPC output";
      leaf-list path-compute-transaction-id {
        type string;
        description
          "The list of the transaction-id values of the
           transient states that have been successfully deleted";
      }
    }
  } // path-delete rpc output
}
]]></sourcecode></figure>

</section>
</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>This document describes use cases of requesting Path Computation
   using YANG data models, which could be used at the ABNO Control
   Interface <xref target="RFC7491"/> and/or between controllers in ACTN <xref target="RFC8453"/>. As
   such, it does not introduce any new security considerations compared
   to the ones related to YANG specification, ABNO specification and
   ACTN Framework defined in <xref target="RFC7950"/>, <xref target="RFC7491"/> and <xref target="RFC8453"/>.</t>

<t>The YANG module defined in this document is designed to be accessed via
   the NETCONF protocol <xref target="RFC6241"/> or RESTCONF protocol <xref target="RFC8040"/>. The
   lowest NETCONF layer is the secure transport layer, and the
   mandatory-to-implement secure transport is Secure Shell (SSH)
   <xref target="RFC6242"/>. The lowest RESTCONF layer is HTTPS, and the mandatory-to-
   implement secure transport is TLS <xref target="RFC8446"/>.</t>

<t>The Network Configuration Access Control Model (NACM) 
   <xref target="RFC8341"/> provides the means to
   restrict access for particular NETCONF or RESTCONF users to a
   preconfigured subset of all available NETCONF or RESTCONF protocol
   operations and content.</t>

<t>The YANG module defined in this document augments the "tunnels-path-compute" and the "tunnel-actions" RPCs defined in <xref target="I-D.ietf-teas-yang-te"/>. The security considerations provided in <xref target="I-D.ietf-teas-yang-te"/> are also applicable to the YANG module
   defined in this document.</t>

<t>Some of the RPC operations defined in this YANG module may be considered
   sensitive or vulnerable in some network environments.  It is thus
   important to control access to these operations. These are the
   operations and their sensitivity/vulnerability:</t>

<t>"te-pc:response/computed-paths-properties": provides the same information provided by the "te:computed-paths-properties" defined in <xref target="I-D.ietf-teas-yang-te"/>. The security considerations provided in <xref target="I-D.ietf-teas-yang-te"/> for the TE tunnel state apply also to this subtree.</t>

<t>"te-pc:response/te-pc:tunnel-ref", "te-pc:response/te-pc:primary-path-ref", "te-pc:response/te-pc:primary-reverse-path-ref", "te-pc:response/te-pc:secondary-path-ref" and "te-pc:response/te-pc:secondary-reverse-path-ref" provides a reference where the same information provided in "te-pc:response/computed-paths-properties" is temporarly stored with the operational datastore (see <xref target="temp-state"/>). Therefore access to this information does not provide any additional security issue that the information provided with "te-pc:response/computed-paths-properties".</t>

<t>"/te:tunnels-actions": the YANG model defined in this document augments this action with a new action type that allows deleting the transient states of computed paths (see <xref target="temp-state"/>). A malicious use of this action would have no impact on the paths carrying live traffic but it would preclude the client from using the "transient states" to request the set-up of exactly that path, if still available.</t>

<t>The security considerations spelled out in the
   YANG specification <xref target="RFC7950"/> apply for this document as well.</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>This document registers the following URIs in the "ns" subregistry
   within the "IETF XML registry" <xref target="RFC3688"/>.</t>

<figure><artwork><![CDATA[
      URI: urn:ietf:params:xml:ns:yang:ietf-te-path-computation
      Registrant Contact:  The IESG.
      XML: N/A, the requested URI is an XML namespace.
]]></artwork></figure>

<t>This document registers a YANG module in the "YANG Module Names"
   registry <xref target="RFC7950"/>.</t>

<figure><artwork><![CDATA[
      name:      ietf-te-path-computation
      namespace: urn:ietf:params:xml:ns:yang:ietf-te-path-computation
      prefix:    te-pc
      reference: this document
]]></artwork></figure>

</section>


  </middle>

  <back>


    <references title='Normative References'>





<reference anchor='RFC6241' target='https://www.rfc-editor.org/info/rfc6241'>
<front>
<title>Network Configuration Protocol (NETCONF)</title>
<author fullname='R. Enns' initials='R.' role='editor' surname='Enns'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'><organization/></author>
<author fullname='A. Bierman' initials='A.' role='editor' surname='Bierman'><organization/></author>
<date month='June' year='2011'/>
<abstract><t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices.  It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages.  The NETCONF protocol operations are realized as remote procedure calls (RPCs).  This document obsoletes RFC 4741.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6241'/>
<seriesInfo name='DOI' value='10.17487/RFC6241'/>
</reference>



<reference anchor='RFC8040' target='https://www.rfc-editor.org/info/rfc8040'>
<front>
<title>RESTCONF Protocol</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<date month='January' year='2017'/>
<abstract><t>This document describes an HTTP-based protocol that provides a programmatic interface for accessing data defined in YANG, using the datastore concepts defined in the Network Configuration Protocol (NETCONF).</t></abstract>
</front>
<seriesInfo name='RFC' value='8040'/>
<seriesInfo name='DOI' value='10.17487/RFC8040'/>
</reference>



<reference anchor='RFC8795' target='https://www.rfc-editor.org/info/rfc8795'>
<front>
<title>YANG Data Model for Traffic Engineering (TE) Topologies</title>
<author fullname='X. Liu' initials='X.' surname='Liu'><organization/></author>
<author fullname='I. Bryskin' initials='I.' surname='Bryskin'><organization/></author>
<author fullname='V. Beeram' initials='V.' surname='Beeram'><organization/></author>
<author fullname='T. Saad' initials='T.' surname='Saad'><organization/></author>
<author fullname='H. Shah' initials='H.' surname='Shah'><organization/></author>
<author fullname='O. Gonzalez de Dios' initials='O.' surname='Gonzalez de Dios'><organization/></author>
<date month='August' year='2020'/>
<abstract><t>This document defines a YANG data model for representing, retrieving, and manipulating Traffic Engineering (TE) Topologies. The model serves as a base model that other technology-specific TE topology models can augment.</t></abstract>
</front>
<seriesInfo name='RFC' value='8795'/>
<seriesInfo name='DOI' value='10.17487/RFC8795'/>
</reference>


<reference anchor='I-D.ietf-teas-yang-te' target='https://datatracker.ietf.org/doc/html/draft-ietf-teas-yang-te-31'>
   <front>
      <title>A YANG Data Model for Traffic Engineering Tunnels, Label Switched Paths and Interfaces</title>
      <author fullname='Tarek Saad' initials='T.' surname='Saad'>
         <organization>Cisco Systems Inc</organization>
      </author>
      <author fullname='Rakesh Gandhi' initials='R.' surname='Gandhi'>
         <organization>Cisco Systems Inc</organization>
      </author>
      <author fullname='Xufeng Liu' initials='X.' surname='Liu'>
         <organization>IBM Corporation</organization>
      </author>
      <author fullname='Vishnu Pavan Beeram' initials='V. P.' surname='Beeram'>
         <organization>Juniper Networks</organization>
      </author>
      <author fullname='Igor Bryskin' initials='I.' surname='Bryskin'>
         <organization>Individual</organization>
      </author>
      <author fullname='Oscar Gonzalez de Dios' initials='O. G.' surname='de Dios'>
         <organization>Telefonica</organization>
      </author>
      <date day='24' month='October' year='2022'/>
      <abstract>
	 <t>   This document defines a YANG data model for the provisioning and
   management of Traffic Engineering (TE) tunnels, Label Switched Paths
   (LSPs), and interfaces.  The model covers data that is independent of
   any technology or dataplane encapsulation and is divided into two
   YANG modules that cover device-specific, and device independent data.

   This model covers data for configuration, operational state, remote
   procedural calls, and event notifications.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-teas-yang-te-31'/>
   
</reference>



<reference anchor='RFC7950' target='https://www.rfc-editor.org/info/rfc7950'>
<front>
<title>The YANG 1.1 Data Modeling Language</title>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<date month='August' year='2016'/>
<abstract><t>YANG is a data modeling language used to model configuration data, state data, Remote Procedure Calls, and notifications for network management protocols.  This document describes the syntax and semantics of version 1.1 of the YANG language.  YANG version 1.1 is a maintenance release of the YANG language, addressing ambiguities and defects in the original specification.  There are a small number of backward incompatibilities from YANG version 1.  This document also specifies the YANG mappings to the Network Configuration Protocol (NETCONF).</t></abstract>
</front>
<seriesInfo name='RFC' value='7950'/>
<seriesInfo name='DOI' value='10.17487/RFC7950'/>
</reference>



<reference anchor='RFC5440' target='https://www.rfc-editor.org/info/rfc5440'>
<front>
<title>Path Computation Element (PCE) Communication Protocol (PCEP)</title>
<author fullname='JP. Vasseur' initials='JP.' role='editor' surname='Vasseur'><organization/></author>
<author fullname='JL. Le Roux' initials='JL.' role='editor' surname='Le Roux'><organization/></author>
<date month='March' year='2009'/>
<abstract><t>This document specifies the Path Computation Element (PCE) Communication Protocol (PCEP) for communications between a Path Computation Client (PCC) and a PCE, or between two PCEs.  Such interactions include path computation requests and path computation replies as well as notifications of specific states related to the use of a PCE in the context of Multiprotocol Label Switching (MPLS) and Generalized MPLS (GMPLS) Traffic Engineering.  PCEP is designed to be flexible and extensible so as to easily allow for the addition of further messages and objects, should further requirements be expressed in the future.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5440'/>
<seriesInfo name='DOI' value='10.17487/RFC5440'/>
</reference>



<reference anchor='RFC7926' target='https://www.rfc-editor.org/info/rfc7926'>
<front>
<title>Problem Statement and Architecture for Information Exchange between Interconnected Traffic-Engineered Networks</title>
<author fullname='A. Farrel' initials='A.' role='editor' surname='Farrel'><organization/></author>
<author fullname='J. Drake' initials='J.' surname='Drake'><organization/></author>
<author fullname='N. Bitar' initials='N.' surname='Bitar'><organization/></author>
<author fullname='G. Swallow' initials='G.' surname='Swallow'><organization/></author>
<author fullname='D. Ceccarelli' initials='D.' surname='Ceccarelli'><organization/></author>
<author fullname='X. Zhang' initials='X.' surname='Zhang'><organization/></author>
<date month='July' year='2016'/>
<abstract><t>In Traffic-Engineered (TE) systems, it is sometimes desirable to establish an end-to-end TE path with a set of constraints (such as bandwidth) across one or more networks from a source to a destination.  TE information is the data relating to nodes and TE links that is used in the process of selecting a TE path.  TE information is usually only available within a network.  We call such a zone of visibility of TE information a domain.  An example of a domain may be an IGP area or an Autonomous System.</t><t>In order to determine the potential to establish a TE path through a series of connected networks, it is necessary to have available a certain amount of TE information about each network.  This need not be the full set of TE information available within each network but does need to express the potential of providing TE connectivity. This subset of TE information is called TE reachability information.</t><t>This document sets out the problem statement for the exchange of TE information between interconnected TE networks in support of end-to-end TE path establishment and describes the best current practice architecture to meet this problem statement.  For reasons that are explained in this document, this work is limited to simple TE constraints and information that determine TE reachability.</t></abstract>
</front>
<seriesInfo name='BCP' value='206'/>
<seriesInfo name='RFC' value='7926'/>
<seriesInfo name='DOI' value='10.17487/RFC7926'/>
</reference>



<reference anchor='RFC8340' target='https://www.rfc-editor.org/info/rfc8340'>
<front>
<title>YANG Tree Diagrams</title>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='L. Berger' initials='L.' role='editor' surname='Berger'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>This document captures the current syntax used in YANG module tree diagrams.  The purpose of this document is to provide a single location for this definition.  This syntax may be updated from time to time based on the evolution of the YANG language.</t></abstract>
</front>
<seriesInfo name='BCP' value='215'/>
<seriesInfo name='RFC' value='8340'/>
<seriesInfo name='DOI' value='10.17487/RFC8340'/>
</reference>


<reference anchor='I-D.ietf-teas-rfc8776-update' target='https://datatracker.ietf.org/doc/html/draft-ietf-teas-rfc8776-update-01'>
   <front>
      <title>Updated Common YANG Data Types for Traffic Engineering</title>
      <author fullname='Italo Busi' initials='I.' surname='Busi'>
         <organization>Huawei</organization>
      </author>
      <author fullname='Aihua Guo' initials='A.' surname='Guo'>
         <organization>Futurewei Technologies</organization>
      </author>
      <author fullname='Xufeng Liu' initials='X.' surname='Liu'>
         <organization>IBM Corporation</organization>
      </author>
      <author fullname='Tarek Saad' initials='T.' surname='Saad'>
         <organization>Juniper Networks</organization>
      </author>
      <author fullname='Rakesh Gandhi' initials='R.' surname='Gandhi'>
         <organization>Cisco Systems, Inc.</organization>
      </author>
      <author fullname='Vishnu Pavan Beeram' initials='V. P.' surname='Beeram'>
         <organization>Juniper Networks</organization>
      </author>
      <author fullname='Igor Bryskin' initials='I.' surname='Bryskin'>
         <organization>Individual</organization>
      </author>
      <date day='24' month='October' year='2022'/>
      <abstract>
	 <t>   This document defines few additional common data types, identities,
   and groupings in YANG data modeling language to be imported by
   modules that model Traffic Engineering (TE) configuration and state
   capabilities.

   Editors&#39; note: Copy the text from [RFC8776] and merge it with the
   content of this section before WG LC if the RFC8876-bis approach is
   confirmed.

   This document updates RFC 8776 with a new revision of the module
   ietf-te-types.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-teas-rfc8776-update-01'/>
   
</reference>



<reference anchor='RFC5441' target='https://www.rfc-editor.org/info/rfc5441'>
<front>
<title>A Backward-Recursive PCE-Based Computation (BRPC) Procedure to Compute Shortest Constrained Inter-Domain Traffic Engineering Label Switched Paths</title>
<author fullname='JP. Vasseur' initials='JP.' role='editor' surname='Vasseur'><organization/></author>
<author fullname='R. Zhang' initials='R.' surname='Zhang'><organization/></author>
<author fullname='N. Bitar' initials='N.' surname='Bitar'><organization/></author>
<author fullname='JL. Le Roux' initials='JL.' surname='Le Roux'><organization/></author>
<date month='April' year='2009'/>
<abstract><t>The ability to compute shortest constrained Traffic Engineering Label Switched Paths (TE LSPs) in Multiprotocol Label Switching (MPLS) and Generalized MPLS (GMPLS) networks across multiple domains has been identified as a key requirement.  In this context, a domain is a collection of network elements within a common sphere of address management or path computational responsibility such as an IGP area or an Autonomous Systems.  This document specifies a procedure relying on the use of multiple Path Computation Elements (PCEs) to compute such inter-domain shortest constrained paths across a predetermined sequence of domains, using a backward-recursive path computation technique.  This technique preserves confidentiality across domains, which is sometimes required when domains are managed by different service providers.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5441'/>
<seriesInfo name='DOI' value='10.17487/RFC5441'/>
</reference>



<reference anchor='RFC5541' target='https://www.rfc-editor.org/info/rfc5541'>
<front>
<title>Encoding of Objective Functions in the Path Computation Element Communication Protocol (PCEP)</title>
<author fullname='JL. Le Roux' initials='JL.' surname='Le Roux'><organization/></author>
<author fullname='JP. Vasseur' initials='JP.' surname='Vasseur'><organization/></author>
<author fullname='Y. Lee' initials='Y.' surname='Lee'><organization/></author>
<date month='June' year='2009'/>
<abstract><t>The computation of one or a set of Traffic Engineering Label Switched Paths (TE LSPs) in MultiProtocol Label Switching (MPLS) and Generalized MPLS (GMPLS) networks is subject to a set of one or more specific optimization criteria, referred to as objective functions (e.g., minimum cost path, widest path, etc.).</t><t>In the Path Computation Element (PCE) architecture, a Path Computation Client (PCC) may want a path to be computed for one or more TE LSPs according to a specific objective function.  Thus, the PCC needs to instruct the PCE to use the correct objective function. Furthermore, it is possible that not all PCEs support the same set of objective functions; therefore, it is useful for the PCC to be able to automatically discover the set of objective functions supported by each PCE.</t><t>This document defines extensions to the PCE communication Protocol (PCEP) to allow a PCE to indicate the set of objective functions it supports.  Extensions are also defined so that a PCC can indicate in a path computation request the required objective function, and a PCE can report in a path computation reply the objective function that was used for path computation.</t><t>This document defines objective function code types for six objective functions previously listed in the PCE requirements work, and provides the definition of four new metric types that apply to a set of synchronized requests.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5541'/>
<seriesInfo name='DOI' value='10.17487/RFC5541'/>
</reference>



<reference anchor='RFC8776' target='https://www.rfc-editor.org/info/rfc8776'>
<front>
<title>Common YANG Data Types for Traffic Engineering</title>
<author fullname='T. Saad' initials='T.' surname='Saad'><organization/></author>
<author fullname='R. Gandhi' initials='R.' surname='Gandhi'><organization/></author>
<author fullname='X. Liu' initials='X.' surname='Liu'><organization/></author>
<author fullname='V. Beeram' initials='V.' surname='Beeram'><organization/></author>
<author fullname='I. Bryskin' initials='I.' surname='Bryskin'><organization/></author>
<date month='June' year='2020'/>
<abstract><t>This document defines a collection of common data types and groupings in YANG data modeling language. These derived common types and groupings are intended to be imported by modules that model Traffic Engineering (TE) configuration and state capabilities.</t></abstract>
</front>
<seriesInfo name='RFC' value='8776'/>
<seriesInfo name='DOI' value='10.17487/RFC8776'/>
</reference>



<reference anchor='RFC6242' target='https://www.rfc-editor.org/info/rfc6242'>
<front>
<title>Using the NETCONF Protocol over Secure Shell (SSH)</title>
<author fullname='M. Wasserman' initials='M.' surname='Wasserman'><organization/></author>
<date month='June' year='2011'/>
<abstract><t>This document describes a method for invoking and running the Network Configuration Protocol (NETCONF) within a Secure Shell (SSH) session as an SSH subsystem.  This document obsoletes RFC 4742.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6242'/>
<seriesInfo name='DOI' value='10.17487/RFC6242'/>
</reference>



<reference anchor='RFC8446' target='https://www.rfc-editor.org/info/rfc8446'>
<front>
<title>The Transport Layer Security (TLS) Protocol Version 1.3</title>
<author fullname='E. Rescorla' initials='E.' surname='Rescorla'><organization/></author>
<date month='August' year='2018'/>
<abstract><t>This document specifies version 1.3 of the Transport Layer Security (TLS) protocol.  TLS allows client/server applications to communicate over the Internet in a way that is designed to prevent eavesdropping, tampering, and message forgery.</t><t>This document updates RFCs 5705 and 6066, and obsoletes RFCs 5077, 5246, and 6961.  This document also specifies new requirements for TLS 1.2 implementations.</t></abstract>
</front>
<seriesInfo name='RFC' value='8446'/>
<seriesInfo name='DOI' value='10.17487/RFC8446'/>
</reference>



<reference anchor='RFC8341' target='https://www.rfc-editor.org/info/rfc8341'>
<front>
<title>Network Configuration Access Control Model</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>The standardization of network configuration interfaces for use with the Network Configuration Protocol (NETCONF) or the RESTCONF protocol requires a structured and secure operating environment that promotes human usability and multi-vendor interoperability.  There is a need for standard mechanisms to restrict NETCONF or RESTCONF protocol access for particular users to a preconfigured subset of all available NETCONF or RESTCONF protocol operations and content.  This document defines such an access control model.</t><t>This document obsoletes RFC 6536.</t></abstract>
</front>
<seriesInfo name='STD' value='91'/>
<seriesInfo name='RFC' value='8341'/>
<seriesInfo name='DOI' value='10.17487/RFC8341'/>
</reference>



<reference anchor='RFC3688' target='https://www.rfc-editor.org/info/rfc3688'>
<front>
<title>The IETF XML Registry</title>
<author fullname='M. Mealling' initials='M.' surname='Mealling'><organization/></author>
<date month='January' year='2004'/>
<abstract><t>This document describes an IANA maintained registry for IETF standards which use Extensible Markup Language (XML) related items such as Namespaces, Document Type Declarations (DTDs), Schemas, and Resource Description Framework (RDF) Schemas.</t></abstract>
</front>
<seriesInfo name='BCP' value='81'/>
<seriesInfo name='RFC' value='3688'/>
<seriesInfo name='DOI' value='10.17487/RFC3688'/>
</reference>




    </references>

    <references title='Informative References'>





<reference anchor='RFC7491' target='https://www.rfc-editor.org/info/rfc7491'>
<front>
<title>A PCE-Based Architecture for Application-Based Network Operations</title>
<author fullname='D. King' initials='D.' surname='King'><organization/></author>
<author fullname='A. Farrel' initials='A.' surname='Farrel'><organization/></author>
<date month='March' year='2015'/>
<abstract><t>Services such as content distribution, distributed databases, or inter-data center connectivity place a set of new requirements on the operation of networks.  They need on-demand and application-specific reservation of network connectivity, reliability, and resources (such as bandwidth) in a variety of network applications (such as point-to-point connectivity, network virtualization, or mobile back-haul) and in a range of network technologies from packet (IP/MPLS) down to optical.  An environment that operates to meet these types of requirements is said to have Application-Based Network Operations (ABNO).  ABNO brings together many existing technologies and may be seen as the use of a toolbox of existing components enhanced with a few new elements.</t><t>This document describes an architecture and framework for ABNO, showing how these components fit together.  It provides a cookbook of existing technologies to satisfy the architecture and meet the needs of the applications.</t></abstract>
</front>
<seriesInfo name='RFC' value='7491'/>
<seriesInfo name='DOI' value='10.17487/RFC7491'/>
</reference>



<reference anchor='RFC8453' target='https://www.rfc-editor.org/info/rfc8453'>
<front>
<title>Framework for Abstraction and Control of TE Networks (ACTN)</title>
<author fullname='D. Ceccarelli' initials='D.' role='editor' surname='Ceccarelli'><organization/></author>
<author fullname='Y. Lee' initials='Y.' role='editor' surname='Lee'><organization/></author>
<date month='August' year='2018'/>
<abstract><t>Traffic Engineered (TE) networks have a variety of mechanisms to facilitate the separation of the data plane and control plane.  They also have a range of management and provisioning protocols to configure and activate network resources.  These mechanisms represent key technologies for enabling flexible and dynamic networking.  The term &quot;Traffic Engineered network&quot; refers to a network that uses any connection-oriented technology under the control of a distributed or centralized control plane to support dynamic provisioning of end-to- end connectivity.</t><t>Abstraction of network resources is a technique that can be applied to a single network domain or across multiple domains to create a single virtualized network that is under the control of a network operator or the customer of the operator that actually owns the network resources.</t><t>This document provides a framework for Abstraction and Control of TE Networks (ACTN) to support virtual network services and connectivity services.</t></abstract>
</front>
<seriesInfo name='RFC' value='8453'/>
<seriesInfo name='DOI' value='10.17487/RFC8453'/>
</reference>



<reference anchor='RFC8454' target='https://www.rfc-editor.org/info/rfc8454'>
<front>
<title>Information Model for Abstraction and Control of TE Networks (ACTN)</title>
<author fullname='Y. Lee' initials='Y.' surname='Lee'><organization/></author>
<author fullname='S. Belotti' initials='S.' surname='Belotti'><organization/></author>
<author fullname='D. Dhody' initials='D.' surname='Dhody'><organization/></author>
<author fullname='D. Ceccarelli' initials='D.' surname='Ceccarelli'><organization/></author>
<author fullname='B. Yoon' initials='B.' surname='Yoon'><organization/></author>
<date month='September' year='2018'/>
<abstract><t>This document provides an information model for Abstraction and Control of TE Networks (ACTN).</t></abstract>
</front>
<seriesInfo name='RFC' value='8454'/>
<seriesInfo name='DOI' value='10.17487/RFC8454'/>
</reference>


<reference anchor='I-D.ietf-ccamp-otn-topo-yang' target='https://datatracker.ietf.org/doc/html/draft-ietf-ccamp-otn-topo-yang-16'>
   <front>
      <title>A YANG Data Model for Optical Transport Network Topology</title>
      <author fullname='Haomian Zheng' initials='H.' surname='Zheng'>
         <organization>Huawei Technologies</organization>
      </author>
      <author fullname='Italo Busi' initials='I.' surname='Busi'>
         <organization>Huawei Technologies</organization>
      </author>
      <author fullname='Xufeng Liu' initials='X.' surname='Liu'>
         <organization>IBM Corporation</organization>
      </author>
      <author fullname='Sergio Belotti' initials='S.' surname='Belotti'>
         <organization>Nokia</organization>
      </author>
      <author fullname='Oscar Gonzalez de Dios' initials='O. G.' surname='de Dios'>
         <organization>Telefonica</organization>
      </author>
      <date day='23' month='November' year='2022'/>
      <abstract>
	 <t>   This document describes a YANG data model to describe the topologies
   of an Optical Transport Network (OTN).  It is independent of control
   plane protocols and captures topological and resource-related
   information pertaining to OTN.  This model enables clients, which
   interact with a transport domain controller, for OTN topology-related
   operations such as obtaining the relevant topology resource
   information.


	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-ccamp-otn-topo-yang-16'/>
   
</reference>



<reference anchor='RFC4655' target='https://www.rfc-editor.org/info/rfc4655'>
<front>
<title>A Path Computation Element (PCE)-Based Architecture</title>
<author fullname='A. Farrel' initials='A.' surname='Farrel'><organization/></author>
<author fullname='J.-P. Vasseur' initials='J.-P.' surname='Vasseur'><organization/></author>
<author fullname='J. Ash' initials='J.' surname='Ash'><organization/></author>
<date month='August' year='2006'/>
<abstract><t>Constraint-based path computation is a fundamental building block for traffic engineering systems such as Multiprotocol Label Switching (MPLS) and Generalized Multiprotocol Label Switching (GMPLS) networks.  Path computation in large, multi-domain, multi-region, or multi-layer networks is complex and may require special computational components and cooperation between the different network domains.</t><t>This document specifies the architecture for a Path Computation Element (PCE)-based model to address this problem space.  This document does not attempt to provide a detailed description of all the architectural components, but rather it describes a set of building blocks for the PCE architecture from which solutions may be constructed.  This memo provides information for the Internet community.</t></abstract>
</front>
<seriesInfo name='RFC' value='4655'/>
<seriesInfo name='DOI' value='10.17487/RFC4655'/>
</reference>



<reference anchor='RFC8342' target='https://www.rfc-editor.org/info/rfc8342'>
<front>
<title>Network Management Datastore Architecture (NMDA)</title>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' surname='Schoenwaelder'><organization/></author>
<author fullname='P. Shafer' initials='P.' surname='Shafer'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<author fullname='R. Wilton' initials='R.' surname='Wilton'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>Datastores are a fundamental concept binding the data models written in the YANG data modeling language to network management protocols such as the Network Configuration Protocol (NETCONF) and RESTCONF. This document defines an architectural framework for datastores based on the experience gained with the initial simpler model, addressing requirements that were not well supported in the initial model.  This document updates RFC 7950.</t></abstract>
</front>
<seriesInfo name='RFC' value='8342'/>
<seriesInfo name='DOI' value='10.17487/RFC8342'/>
</reference>



<reference anchor='RFC6805' target='https://www.rfc-editor.org/info/rfc6805'>
<front>
<title>The Application of the Path Computation Element Architecture to the Determination of a Sequence of Domains in MPLS and GMPLS</title>
<author fullname='D. King' initials='D.' role='editor' surname='King'><organization/></author>
<author fullname='A. Farrel' initials='A.' role='editor' surname='Farrel'><organization/></author>
<date month='November' year='2012'/>
<abstract><t>Computing optimum routes for Label Switched Paths (LSPs) across multiple domains in MPLS Traffic Engineering (MPLS-TE) and GMPLS networks presents a problem because no single point of path computation is aware of all of the links and resources in each domain.  A solution may be achieved using the Path Computation Element (PCE) architecture.</t><t>Where the sequence of domains is known a priori, various techniques can be employed to derive an optimum path.  If the domains are simply connected, or if the preferred points of interconnection are also known, the Per-Domain Path Computation technique can be used.  Where there are multiple connections between domains and there is no preference for the choice of points of interconnection, the Backward-Recursive PCE-based Computation (BRPC) procedure can be used to derive an optimal path.</t><t>This document examines techniques to establish the optimum path when the sequence of domains is not known in advance.  The document shows how the PCE architecture can be extended to allow the optimum sequence of domains to be selected, and the optimum end-to-end path to be derived through the use of a hierarchical relationship between domains.  This document is not an Internet Standards Track  specification; it is published for informational purposes.</t></abstract>
</front>
<seriesInfo name='RFC' value='6805'/>
<seriesInfo name='DOI' value='10.17487/RFC6805'/>
</reference>



<reference anchor='RFC7446' target='https://www.rfc-editor.org/info/rfc7446'>
<front>
<title>Routing and Wavelength Assignment Information Model for Wavelength Switched Optical Networks</title>
<author fullname='Y. Lee' initials='Y.' role='editor' surname='Lee'><organization/></author>
<author fullname='G. Bernstein' initials='G.' role='editor' surname='Bernstein'><organization/></author>
<author fullname='D. Li' initials='D.' surname='Li'><organization/></author>
<author fullname='W. Imajuku' initials='W.' surname='Imajuku'><organization/></author>
<date month='February' year='2015'/>
<abstract><t>This document provides a model of information needed by the Routing and Wavelength Assignment (RWA) process in Wavelength Switched Optical Networks (WSONs).  The purpose of the information described in this model is to facilitate constrained optical path computation in WSONs.  This model takes into account compatibility constraints between WSON signal attributes and network elements but does not include constraints due to optical impairments.  Aspects of this information that may be of use to other technologies utilizing a GMPLS control plane are discussed.</t></abstract>
</front>
<seriesInfo name='RFC' value='7446'/>
<seriesInfo name='DOI' value='10.17487/RFC7446'/>
</reference>




    </references>


<section anchor="examples"><name>Examples</name>

<t>This section contains examples of use of the model with RESTCONF
<xref target="RFC8040"/> and JSON encoding.</t>

<t>These examples show how path computation can be requested for the tunnels configuration provided in Appendix A of <xref target="I-D.ietf-teas-yang-te"/>.</t>

<section anchor="basic-example"><name>Basic Path Computation</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 12.1 of of <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>In this case, the TE Tunnel has only one primary path with no specific constraints.</t>

<figure><artwork type="ascii-art"><![CDATA[
POST /restconf/operations/ietf-te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="basic.json"><![CDATA[
{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 1,
          "tunnel-name": "Example_LSP_Tunnel_A_2",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "192.0.2.1",
          "destination": "192.0.2.4",
          "bidirectional": "false",
          "signaling-type": "te-types:path-setup-rsvp"
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="transient-state-example"><name>Path Computation with transient state</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 12.1 of of <xref target="I-D.ietf-teas-yang-te"/> requesting some transient state to be reported within the operational datastore, as described <xref target="temp-state"/>.</t>

<t>In this case, the TE Tunnel has only one primary path with no specific constraints.</t>

<figure><artwork type="ascii-art"><![CDATA[
POST /restconf/operations/ietf-te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="transient-state.json"><![CDATA[
{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 2,
          "tunnel-name": "Example_LSP_Tunnel_A_2",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "192.0.2.1",
          "destination": "192.0.2.4",
          "bidirectional": "false",
          "signaling-type": "te-types:path-setup-rsvp",
          "requested-state": {
            "transaction-id": "example"
          }
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="global-path-constraint-example"><name>Path Computation with Global Path Constraint</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 12.3 of of <xref target="I-D.ietf-teas-yang-te"/>. The 'named path constraint' is created in section 12.2 of <xref target="I-D.ietf-teas-yang-te"/> applies to this path computation request.</t>

<figure><artwork type="ascii-art"><![CDATA[
POST /restconf/operations/ietf-te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="global-path-constraint.json"><![CDATA[
{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 3,
          "tunnel-name": "Example_LSP_Tunnel_A_4_1",
          "path-name": "Simple_LSP_1",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "192.0.2.1",
          "destination": "192.0.2.4",
          "bidirectional": "false",
          "signaling-type": "path-setup-rsvp",
          "named-path-constraint": "max-hop-3",
          "requested-state": {}
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="tunnel-path-constraint-example"><name>Path Computation with Per-tunnel Path Constraint</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 12.4 of of <xref target="I-D.ietf-teas-yang-te"/>, using a per tunnel path constraint.</t>

<figure><artwork type="ascii-art"><![CDATA[
POST /restconf/operations/ietf-te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="tunnel-path-constraint.json"><![CDATA[
{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 4,
          "tunnel-name": "Example_LSP_Tunnel_A_4_2",
          "path-name": "path1",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "192.0.2.1",
          "destination": "192.0.2.4",
          "bidirectional": "false",
          "signaling-type": "te-types:path-setup-rsvp",
          "path-metric-bounds": {
            "path-metric-bound": [
              {
                "metric-type": "te-types:path-metric-hop",
                "upper-bound": "3"
              }
            ]
          }
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="path-computation-result"><name>Path Computation result</name>

<t>This example reports the output of the path computation RPC request described in <xref target="tunnel-path-constraint-example"/>.</t>

<figure><artwork type="ascii-art"><![CDATA[
HTTP/1.1 200 OK
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="computed-path.json"><![CDATA[
{
  "ietf-te:output": {
    "path-compute-result": {
      "ietf-te-path-computation:response": [
        {
          "response-id": 3,
          "computed-paths-properties": {
            "computed-path-properties": [
              {
                "k-index": "1",
                "path-properties": {
                  "path-route-objects": {
                    "path-route-object": [
                      {
                        "index": "1",
                        "numbered-node-hop": {
                          "node-id": "192.0.2.2"
                        }
                      },
                      {
                        "index": "2",
                        "numbered-node-hop": {
                          "node-id": "192.0.2.4"
                        }
                      }
                    ]
                  }
                }
              }
            ]
          },
          "tunnel-ref": "Example_LSP_Tunnel_A_4_1",
          "primary-path-ref": "path1"
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="path-computation-with-primary-and-secondary-paths"><name>Path Computation with Primary and Secondary Paths</name>

<t>This section contains examples of use of the model to compute primary and secondary paths described in section 12.6 of <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>These examples consider the cases where:
- primary and reverse paths are unidirectional and not co-routed (example-1);
- primary and reverse paths are bidirectional (example-3);
- primary and reverse paths are unidirectional and co-routed (example-4).</t>

<figure><artwork type="ascii-art"><![CDATA[
POST /restconf/operations/ietf-te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

]]></artwork></figure>
<figure><sourcecode type="json" markers="false" name="primary-secondary-paths.json"><![CDATA[
{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 1,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "primary-1 (fwd)",
            "primary-path": {}
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 2,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "primary-2 (rev)",
            "primary-reverse-path": {
              "primary-path-request-ref": 1
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.3",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 3,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-1 (fwd)",
            "secondary-path": {
              "primary-path": [
                {
                  "path-request-ref": 1
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.1"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 4,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-2 (fwd)",
            "secondary-path": {
              "primary-path": [
                {
                  "path-request-ref": 1
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.5",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 5,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-3 (rev)",
            "secondary-reverse-path": {
              "primary-reverse-path": [
                {
                  "path-request-ref": 2
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.5"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.4",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 6,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-4 (rev)",
            "secondary-reverse-path": {
              "primary-reverse-path": [
                {
                  "path-request-ref": 2
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.4"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.3",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 7,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-5 (rev)",
            "secondary-reverse-path": {
              "primary-reverse-path": [
                {
                  "path-request-ref": 2
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.3"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.1",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 8,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-3",
            "path-name": "primary-1 (bidir)",
            "primary-path": {}
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 9,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-3",
            "path-name": "secondary-1 (bidir)",
            "secondary-path": {
              "primary-path": [
                {
                  "path-request-ref": 8
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.1"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 10,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-3",
            "path-name": "secondary-2 (bidir)",
            "secondary-path": {
              "primary-path": [
                {
                  "path-request-ref": 8
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.5",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 11,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-4",
            "path-name": "primary-1 (fwd)",
            "primary-path": {
              "co-routed": [null]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 12,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-4",
            "path-name": "primary-2 (rev)",
            "primary-reverse-path": {
              "primary-path-request-ref": 11
            }
          }
        },
        {
          "request-id": 13,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-4",
            "path-name": "secondary-1 (fwd)",
            "secondary-path": {
              "primary-path": [
                {
                  "co-routed": [null],
                  "path-request-ref": 11
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.1"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 14,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-4",
            "path-name": "secondary-2 (fwd)",
            "secondary-path": {
              "primary-path": [
                {
                  "co-routed": [null],
                  "path-request-ref": 11
                }
              ]
            }
          },
          "explicit-route-objects-always": {
            "route-object-include-exclude": [
              {
                "index": 1,
                "numbered-node-hop": {
                  "node-id": "192.0.2.2"
                }
              },
              {
                "index": 2,
                "numbered-node-hop": {
                  "node-id": "192.0.2.5",
                  "hop-type": "loose"
                }
              }
            ]
          }
        },
        {
          "request-id": 15,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-3 (rev)",
            "secondary-reverse-path": {
              "primary-reverse-path": [
                {
                  "path-request-ref": 12
                }
              ]
            }
          }
        },
        {
          "request-id": 16,
          "tunnel-reference": {
            "tunnel-attributes-ref": "example-1",
            "path-name": "secondary-4 (rev)",
            "secondary-reverse-path": {
              "primary-reverse-path": [
                {
                  "path-request-ref": 12
                }
              ]
            }
          }
        }
      ],
      "ietf-te-path-computation:tunnel-attributes": [
        {
          "tunnel-name": "example-1",
          "source": "192.0.2.1",
          "destination": "192.0.2.5",
          "bidirectional": "false"
        },
        {
          "tunnel-name": "example-3",
          "source": "192.0.2.1",
          "destination": "192.0.2.5",
          "bidirectional": "true"
        },
        {
          "tunnel-name": "example-4",
          "source": "192.0.2.1",
          "destination": "192.0.2.5",
          "bidirectional": "false"
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
</section>
<section numbered="false" anchor="acknowledgments"><name>Acknowledgments</name>

<t>The authors would like to thank Igor Bryskin and Xian Zhang for
   participating in the initial discussions that have triggered this
   work and providing valuable insights.</t>

<t>The authors would like to thank the authors of the TE tunnel YANG
   data model <xref target="I-D.ietf-teas-yang-te"/>, in particular Igor Bryskin, Vishnu Pavan
   Beeram, Tarek Saad and Xufeng Liu, for their inputs to the
   discussions and support in having consistency between the Path
   Computation and TE tunnel YANG data models.</t>

<t>The authors would like to thank Adrian Farrel, Dhruv Dhody, Igor
   Bryskin, Julien Meuric and Lou Berger for their valuable input to the
   discussions that has clarified that the path being set up is not
   necessarily the same as the path that has been previously computed
   and, in particular to Dhruv Dhody, for his suggestion to describe the
   need for a path verification phase to check that the actual path
   being set up meets the required end-to-end metrics and constraints.</t>

<t>The authors would like to thank Aihua Guo, Lou Berger, Shaolong Gan,
   Martin Bjorklund and Tom Petch for their useful comments on how to
   define XPath statements in YANG RPCs.</t>

<t>The authors would like to thank Haomian Zheng, Yanlei Zheng, Tom
   Petch, Aihua Guo and Martin Bjorklund for their review and valuable
   comments to this document.</t>

<t>Previous versions of document were prepared using 2-Word-v2.0.template.dot.</t>

<t>This document was prepared using kramdown.</t>

</section>

    <section anchor="contributors" numbered="false" toc="include" removeInRFC="false">
        <name>Contributors</name>
    <contact initials="V." surname="Lopez" fullname="Victor Lopez">
      <organization>Nokia</organization>
      <address>
        <email>victor.lopez@nokia.com</email>
      </address>
    </contact>
    <contact initials="R." surname="Vilalta" fullname="Ricard Vilalta">
      <organization>CTTC</organization>
      <address>
        <email>ricard.vilalta@cttc.es</email>
      </address>
    </contact>
    <contact initials="K." surname="Sethuraman" fullname="Karthik Sethuraman">
      <organization>NEC</organization>
      <address>
        <email>karthik.sethuraman@necam.com</email>
      </address>
    </contact>
    <contact initials="M." surname="Scharf" fullname="Michael Scharf">
      <organization>Nokia</organization>
      <address>
        <email>michael.scharf@gmail.com</email>
      </address>
    </contact>
    <contact initials="D." surname="Beller" fullname="Dieter Beller">
      <organization>Nokia</organization>
      <address>
        <email>dieter.beller@nokia.com</email>
      </address>
    </contact>
    <contact initials="G." surname="Bruno" fullname="Gianmarco Bruno">
      <organization>Ericsson</organization>
      <address>
        <email>gianmarco.bruno@ericsson.com</email>
      </address>
    </contact>
    <contact initials="F." surname="Lazzeri" fullname="Francesco Lazzeri">
      <organization>Ericsson</organization>
      <address>
        <email>francesco.lazzeri@ericsson.com</email>
      </address>
    </contact>
    <contact initials="Y." surname="Lee" fullname="Young Lee">
      <organization>Samsung Electronics</organization>
      <address>
        <email>younglee.tx@gmail.com</email>
      </address>
    </contact>
    <contact initials="C." surname="Perocchio" fullname="Carlo Perocchio">
      <organization>Ericsson</organization>
      <address>
        <email>carlo.perocchio@ericsson.com</email>
      </address>
    </contact>
    <contact initials="O." surname="Dugeon" fullname="Olivier Dugeon">
      <organization>Orange Labs</organization>
      <address>
        <email>olivier.dugeon@orange.com</email>
      </address>
    </contact>
    <contact initials="J." surname="Meuric" fullname="Julien Meuric">
      <organization>Orange Labs</organization>
      <address>
        <email>julien.meuric@orange.com</email>
      </address>
    </contact>
    </section>

  </back>

<!-- ##markdown-source:
H4sIAAAAAAAAA+y9aXccx5Eo+p3n8D/UwB8EWN0NcZFsQ7YlEIAkvhGXS9DS
eIZ+cwrdBaCGja6eqmpCkMD3219smRmZlVlVDcrrVd+5FtidS2RkZGREZCzT
6fT+vXm1KFcXB9mmPZ/+9v69+/fasl0WB9lh9ufD519nx3mbZ8+qRbHMzqs6
q4v/3RRNCz2ydd5eZvPqar1p87asVtg3Pzuri3cH2Z9zaIDtX2KjI91oUc1X
+RVMsKjz83ZaFjBvW+TN9Ab6THHQqRp0+vCT+/euq/rtRV1t1gfZ65PD0+x7
+DdC8DV+ByvI2+Kiqm8OsqZd3L9XruuDrK03Tfvwk09+98lDhKtp89Xiv/Nl
tYKJb4rm/r11eZD9V1vNJ1lT1W1dnDfw180V/wEAXBWrtvkLrWnTXlb1wf17
WTbF/8kyhv9pC+NlTzZNyd/WFaKtWJRtVfM3VQ14/WaTXxdl9rqYX66qZXVR
4uz4a3GVl8uDrMRhZmcwzJeX1HQGs3cmOy3qixJmK5ZV2/ZP+Lx6W+beFA11
np1x5y9X2CA6y4tmntfZ19Xqx3xZ/Jgtiuy4rATcctVAg1niV5r5dbEszqtV
Ofenr3DU2YX0WwDAVfNla9tGITlcber8Iju9zOurXE3xdVVdLAtv+HzVXOZf
XtAP0bGAGGGgUo1ydFmu8uxPMDs3d5i6LIEMH//uyzm22FCD2XzVGfI4X5Ww
gOyomMPaiuVSj35Sl/OmqVbeyAvuMZvbHl8W0o6BxpO4auvybNPGqO27cg7f
Z99W6+LH3s1+Rw1nS2zYs9WvAPP1AoZd5stWY/jo9esjb8CaWs7eccsv5207
nzENewP+e163l+VboNT2EvbuKl9pME/8Md9y41ljG3+5Kub5VRTUZ+X8Mgf+
cwr/qc97F3/FTWcNNf3yAr+NjnkMfKeo8Twti/7Ds6CWeHigZQ9Cvy7z1VVe
z+GQ1ptVNUQPF6b57AybB8QQjP1Vna/mRQNjf5v/+CM0HRr93HSYLblD//h/
rjbATr8tCjXuaX7V4Lcny2Le1nhSfb51g32WRTFrf+jB81FeA5N8WdTVHI7U
IFbm2Hy2Ns37oX6xLN+VsInHm4ui0tT2AlZ/UQCuznyQK+4wW1CHLytqFh36
/9ksy2KVPSs2AMCIkf+H2s+uqL038P170+k0g/Ztnc9b/Df0en1Z1EUGbCBr
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
YKYCAA==

-->

</rfc>

