<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.4.19 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc comments="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-teas-yang-path-computation-17" category="std">

  <front>
    <title abbrev="Yang for Path Computation">A YANG Data Model for requesting Path Computation</title>

    <author initials="I." surname="Busi" fullname="Italo Busi" role="editor">
      <organization>Huawei Technologies</organization>
      <address>
        <email>italo.busi@huawei.com</email>
      </address>
    </author>
    <author initials="S." surname="Belotti" fullname="Sergio Belotti" role="editor">
      <organization>Nokia</organization>
      <address>
        <email>sergio.belotti@nokia.com</email>
      </address>
    </author>
    <author initials="O." surname="Gonzalez de Dios" fullname="Oscar Gonzalez de Dios">
      <organization>Telefonica</organization>
      <address>
        <email>oscar.gonzalezdedios@telefonica.com</email>
      </address>
    </author>
    <author initials="A." surname="Sharma" fullname="Anurag Sharma">
      <organization>Google</organization>
      <address>
        <email>ansha@google.com</email>
      </address>
    </author>
    <author initials="Y." surname="Shi" fullname="Yan Shi">
      <organization>China Unicom</organization>
      <address>
        <email>shiyan49@chinaunicom.cn</email>
      </address>
    </author>
    <author initials="D." surname="Ceccarelli" fullname="Daniele Ceccarelli">
      <organization>Ericsson</organization>
      <address>
        <email>daniele.ceccarelli@ericsson.com</email>
      </address>
    </author>

    <date year="2022" month="January" day="13"/>

    
    <workgroup>TEAS Working Group</workgroup>
    

    <abstract>


<t>There are scenarios, typically in a hierarchical Software-Defined
   Networking (SDN) context, where the topology information provided by
   a Traffic Engineering (TE) network provider may be insufficient for
   its client to perform end-to-end path computation. In these cases the
   client would need to request the provider to calculate some (partial)
   feasible paths.</t>

<t>This document defines a YANG data model for a Remote Procedure Call
   (RPC) to request path computation. This model complements the
   solution, defined in RFC YYYY, to configure a TE tunnel path in
   "compute-only" mode.</t>

<t>[RFC EDITOR NOTE: Please replace RFC YYYY with the RFC number of
   draft-ietf-teas-yang-te once it has been published.</t>

<t>Moreover this document describes some use cases where a path
   computation request, via YANG-based protocols (e.g., NETCONF or
   RESTCONF), can be needed.</t>



    </abstract>


  </front>

  <middle>


<section anchor="intro"><name>Introduction</name>

<t anchor="pc-model">There are scenarios, typically in a hierarchical Software-Defined
   Networking (SDN) context, where the topology information provided by
   a Traffic Engineering (TE) network provider may be insufficient for
   its client to perform end-to-end path computation. In these cases the
   client would need to request the provider to calculate some (partial)
   feasible paths, complementing its topology knowledge, to make end-to-
   end path computation feasible.</t>

<t>These types of scenarios can be applied to different interfaces in
   different reference architectures:</t>

<t><list style="symbols">
  <t>Application-Based Network Operations (ABNO) control interface
<xref target="RFC7491"/>, in which an Application Service Coordinator can request
ABNO controller to take in charge path calculation (see Figure 1
in <xref target="RFC7491"/>).</t>
  <t>Abstraction and Control of TE Networks (ACTN) <xref target="RFC8453"/>, where a
controller hierarchy is defined, the need for path computation
arises on the interface between Customer Network Controller (CNC)
and Multi-Domain Service Coordinator (MDSC), called CNC-MDSC
Interface (CMI), and on the interface between MSDC and
Provisioning Network Controller (PNC), called MDSC-PNC Interface
(MPI). <xref target="RFC8454"/> describes an information model for the Path
Computation request.  <vspace blankLines='1'/>
Multiple protocol solutions can be used for communication between
different controller hierarchical levels. This document assumes that
the controllers are communicating using YANG-based protocols (e.g.,
NETCONF <xref target="RFC6241"/> or RESTCONF <xref target="RFC8040"/>).  <vspace blankLines='1'/>
Path Computation Elements (PCEs), controllers and orchestrators
perform their operations based on Traffic Engineering Databases
(TED). Such TEDs can be described, in a technology agnostic way, with
the YANG data model for TE Topologies <xref target="RFC8795"/>. Furthermore, the
technology specific details of the TED are modelled in the technology
specific topology models, e.g., the <xref target="I-D.ietf-ccamp-otn-topo-yang"/> for Optical Transport
Network (OTN) Optical Data Unit (ODU) technologies, which augment the
common TE topology model in <xref target="RFC8795"/>.  <vspace blankLines='1'/>
The availability of such topology models allows the provisioning of
the TED using YANG-based protocols (e.g., NETCONF or RESTCONF).
Furthermore, it enables a PCE/controller performing the necessary
abstractions or modifications and offering this customized topology
to another PCE/controller or high level orchestrator.  <vspace blankLines='1'/>
The tunnels that can be provided over the networks described with the
topology models can be also set-up, deleted and modified via YANG-
based protocols (e.g., NETCONF or RESTCONF) using the TE tunnel YANG
data model <xref target="I-D.ietf-teas-yang-te"/>.  <vspace blankLines='1'/>
This document defines a YANG data model <xref target="RFC7950"/> for an RPC to
request path computation, which complements the solution defined in
<xref target="I-D.ietf-teas-yang-te"/>, to configure a TE tunnel path in "compute-only" mode.  <vspace blankLines='1'/>
The YANG data model definition does not make any assumption about
whether that the client or the server implement a "PCE"
functionality, as defined in <xref target="RFC4655"/>, and the Path Computation
Element Communication Protocol (PCEP) protocol, as defined in
<xref target="RFC5440"/>.  <vspace blankLines='1'/>
Moreover, this document describes some use cases where a path
computation request, via YANG-based protocols (e.g., NETCONF or
RESTCONF), can be needed.  <vspace blankLines='1'/>
The YANG data model defined in this document conforms to the Network
Management Datastore Architecture <xref target="RFC8342"/>.</t>
</list></t>

<section anchor="terminology"><name>Terminology</name>

<t>TED:</t>

<t><list style='empty'>
  <t>The traffic engineering database is a collection of all TE
   information about all TE nodes and TE links in a given network.</t>
</list></t>

<t>PCE:</t>

<t><list style='empty'>
  <t>A Path Computation Element (PCE) is an entity that is capable of
   computing a network path or route based on a network graph, and of
   applying computational constraints during the computation.  The PCE
   entity is an application that can be located within a network node or
   component, on an out-of-network server, etc.  For example, a PCE
   would be able to compute the path of a TE Label Switched Path (LSP)
   by operating on the TED and considering bandwidth and other
   constraints applicable to the TE LSP service request. <xref target="RFC4655"/>.</t>
</list></t>

<t>Domain:</t>

<t><list style='empty'>
  <t>TE information is the data relating to nodes and TE links
   that is used in the process of selecting a TE path.  TE information
   is usually only available within a network.  We call such a zone of
   visibility of TE information a domain.  An example of a domain may be
   an IGP area or an Autonomous System. <xref target="RFC7926"/></t>
</list></t>

<t>The terminology for describing YANG data models is found in
   <xref target="RFC7950"/>.</t>

</section>
<section anchor="tree-diagram"><name>Tree Diagram</name>

<t>Tree diagrams used in this document follow the notation defined in
   <xref target="RFC8340"/>.</t>

</section>
<section anchor="prefixes-in-data-node-names"><name>Prefixes in Data Node Names</name>

<t>In this document, names of data nodes and other data model objects
   are prefixed using the standard prefix associated with the
   corresponding YANG imported modules, as shown in <xref target="tab-prefix"/>.</t>

<texttable title="Prefixes and corresponding YANG modules" anchor="tab-prefix">
      <ttcol align='left'>Prefix</ttcol>
      <ttcol align='left'>YANG module</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>inet</c>
      <c>ietf-inet-types</c>
      <c><xref target="RFC6991"/></c>
      <c>te-types</c>
      <c>ietf-te-types</c>
      <c><xref target="RFC8776"/></c>
      <c>te</c>
      <c>ietf-te</c>
      <c>[RFCYYYY]</c>
      <c>te-pc</c>
      <c>ietf-te-path-computation</c>
      <c>RFCXXXX</c>
</texttable>

<t>RFC Editor Note:
Please replace XXXX with the RFC number assigned to this document.
Please replace RFC YYYY with the RFC number of <xref target="I-D.ietf-teas-yang-te"/> once it has been published.
Please remove this note.</t>

</section>
</section>
<section anchor="use-cases"><name>Use Cases</name>

<t>This section presents some use cases, where a client needs to request
   underlying SDN controllers for path computation.</t>

<t>The use of the YANG data model defined in this document is not
   restricted to these use cases but can be used in any other use case
   when deemed useful.</t>

<t>The presented uses cases have been grouped, depending on the
   different underlying topologies: a) Packet/Optical Integration; b)
   multi-domain Traffic Engineered (TE) Networks; and c) Data Center
   Interconnections. Use cases d) and e) respectively present how to
   apply this YANG data model for standard multi-domain PCE i.e.
   Backward Recursive Path Computation <xref target="RFC5441"/> and Hierarchical PCE
   <xref target="RFC6805"/>.</t>

<section anchor="poi-uc"><name>Packet/Optical Integration</name>

<t>In this use case, an optical domain is used to provide connectivity
   to some nodes of a packet domain (see <xref target="fig-poi-uc"/>).</t>

<figure title="Packet/Optical Integration use case" anchor="fig-poi-uc"><artwork><![CDATA[
                                +----------------+
                                |                |
                                | Packet/Optical |
                                |  Coordinator   |
                                |                |
                                +---+------+-----+
                                    |      |
                       +------------+      |
                       |                   +-----------+
                +------V-----+                         |
                |            |                  +------V-----+
                | Packet     |                  |            |
                | Domain     |                  | Optical    |
                | Controller |                  | Domain     |
                |            |                  | Controller |
                +------+-----+                  +-------+----+
                       |                                |
              .........V.........................       |
              :          packet domain          :       |
          +----+                               +----+   |
          | R1 |= = = = = = = = = = = = = = = =| R2 |   |
          +-+--+                               +--+-+   |
            | :                                 : |     |
            | :................................ : |     |
            |                                     |     |
            |               +-----+               |     |
            |    ...........| Opt |...........    |     |
            |    :          |  C  |          :    |     |
            |    :         /+--+--+\         :    |     |
            |    :        /    |    \        :    |     |
            |    :       /     |     \       :    |     |
            |   +-----+ /   +--+--+   \ +-----+   |     |
            |   | Opt |/    | Opt |    \| Opt |   |     |
            +---|  A  |     |  D  |     |  B  |---+     |
                +-----+\    +--+--+    /+-----+         |
                 :      \      |      /      :          |
                 :       \     |     /       :          |
                 :        \ +--+--+  / optical<---------+
                 :         \| Opt |/  domain :
                 :..........|  E  |..........:
                            +-----+
]]></artwork></figure>

<t><xref target="fig-poi-uc"/> as well as <xref target="fig-poi-abstraction"/> below only show a partial view of the
   packet network connectivity, before additional packet connectivity is
   provided by the optical network.</t>

<t>It is assumed that the Optical Domain Controller provides to the
   Packet/Optical Coordinator an abstracted view of the optical network.
   A possible abstraction could be to represent the whole optical
   network as one "virtual node" with "virtual ports" connected to the
   access links, as shown in <xref target="fig-poi-abstraction"/>.</t>

<t>It is also assumed that Packet Domain Controller can provide the
   Packet/Optical Coordinator the information it needs to set up
   connectivity between packet nodes through the optical network (e.g.,
   the access links).</t>

<t>The path computation request helps the Packet/Optical Coordinator to
   know the real connections that can be provided by the optical
   network.</t>

<figure title="Packet and Optical Topology Abstractions" anchor="fig-poi-abstraction"><artwork><![CDATA[
                       ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,.
                      ,  Packet/Optical Coordinator view          ,
                     ,                              +----+       , .
                    ,                               |    |      ,
                   ,                                | R2 |     ,   .
                  ,  +----+  +------------ +       /+----+    ,
                 ,   |    |  |             |/-----/ / /      ,     .
                ,    | R1 |--O VP1     VP4 O       / /      ,
               ,     |    |\ |             | /----/ /      ,       .
              ,      +----+ \|             |/      /      ,
             ,        /      O VP2     VP5 O      /      ,         .
            ,        /       |             |  +----+    ,
           ,        /        |             |  |    |   ,           .
          ,        /         O VP3     VP6 O--| R4 |  ,
         ,     +----+ /-----/|_____________|  +----+ ,             .
        ,      |    |/       +------------ +        ,
       ,       | R3 |                              ,               .
      ,        +----+                             ,,,,,,,,,,,,,,,,,
     ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,                ,.
     . Packet Domain Controller view                +----+       ,
       only packet nodes and packet links           |    |      ,  .
     . with access links to the optical network     | R2 |     ,
                  ,  +----+                        /+----+    ,    .
     .           ,   |    |                 /-----/ / /      ,
                ,    | R1 |---                     / /      ,      .
     .         ,     +----+\                 /----/ /      ,
              ,        /    \               /      /      ,        .
     .       ,        /                           /      ,
            ,        /                        +----+    ,          .
     .     ,        /                         |    |   ,
          ,        /                       ---| R4 |  ,            .
     .   ,     +----+ /-----/                 +----+ ,
        ,      |    |/                              ,              .
     . ,       | R3 |                              ,
      ,        +----+                             ,,,,,,,,,,,,,,,,,.
     .,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,                ,
       Optical Domain Controller view                            , .
     . only optical nodes,        +--+                          ,
       optical links and         /|OF|                         ,   .
     . access links from the  +--++--+             /          ,
       packet network         |OA|    \     /-----/ /        ,     .
     .          ,          ---+--+--\  +--+/       /        ,
               ,           \   |  \  \-|OE|-------/        ,       .
     .        ,             \  |   \ /-+--+               ,
             ,               \+--+  X    |               ,         .
     .      ,                 |OB|-/ \   |              ,
           ,                  +--+-\  \+--+            ,           .
     .    ,                  /   \  \--|OD|---        ,
         ,            /-----/     +--+ +--+          ,             .
     .  ,            /            |OC|/             ,
       ,                          +--+             ,               .
     .,                                           ,,,,,,,,,,,,,,,,,,
      ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,                ,
     . Actual Physical View                         +----+       ,
                    ,             +--+              |    |      ,
     .             ,             /|OF|              | R2 |     ,
                  ,  +----+   +--++--+             /+----+    ,
     .           ,   |    |   |OA|    \     /-----/ / /      ,
                ,    | R1 |---+--+--\  +--+/       / /      ,
     .         ,     +----+\   |  \  \-|OE|-------/ /      ,
              ,        /    \  |   \ /-+--+        /      ,
     .       ,        /      \+--+  X    |        /      ,
            ,        /        |OB|-/ \   |    +----+    ,
     .     ,        /         +--+-\  \+--+   |    |   ,
          ,        /         /   \  \--|OD|---| R4 |  ,
     .   ,     +----+ /-----/     +--+ +--+   +----+ ,
        ,      |    |/            |OC|/             ,
     . ,       | R3 |             +--+             ,
      ,        +----+                             ,
     .,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
]]></artwork></figure>

<t>In this use case, the Packet/Optical Coordinator needs to set up an
   optimal underlying path for an IP link between R1 and R2.</t>

<t>As depicted in <xref target="fig-poi-abstraction"/>, the Packet/Optical Coordinator has only an
   "abstracted view" of the physical network, and it does not know the
   feasibility or the cost of the possible optical paths (e.g., VP1-VP4
   and VP2-VP5), which depend on the current status of the physical
   resources within the optical network and on vendor-specific optical
   attributes.</t>

<t>The Packet/Optical Coordinator can request the underlying Optical
   Domain Controller to compute a set of potential optimal paths, taking
   into account optical constraints. Then, based on its own constraints,
   policy and knowledge (e.g. cost of the access links), it can choose
   which one of these potential paths to use to set up the optimal end-
   to-end path crossing optical network.</t>

<figure title="Packet/Optical Integration path computation example" anchor="fig-poi-example"><artwork><![CDATA[
                    ............................
                    :                          :
                    O VP1                  VP4 O
           cost=10 /:\                        /:\ cost=10
                  / : \----------------------/ : \
          +----+ /  :         cost=50          :  \ +----+
          |    |/   :                          :   \|    |
          | R1 |    :                          :    | R2 |
          |    |\   :                          :   /|    |
          +----+ \  :  /--------------------\  :  / +----+
                  \ : /       cost=55        \ : /
            cost=5 \:/                        \:/ cost=5
                    O VP2                  VP5 O
                    :                          :
                    :..........................:
]]></artwork></figure>

<t>For example, in <xref target="fig-poi-example"/>, the Packet/Optical Coordinator can request
   the Optical Domain Controller to compute the paths between VP1-VP4
   and VP2-VP5 and then decide to set up the optimal end-to-end path
   using the VP2-VP5 optical path even if this is not the optimal path
   from the optical domain perspective.</t>

<t>Considering the dynamicity of the connectivity constraints of an
   optical domain, it is possible that a path computed by the Optical
   Domain Controller when requested by the Packet/Optical Coordinator is
   no longer valid/available when the Packet/Optical Coordinator
   requests it to be set up. This is further discussed in <xref target="rpc-motivation"/>.</t>

</section>
<section anchor="md-uc"><name>Multi-domain TE networks</name>

<t>In this use case there are two TE domains which are interconnected
   together by multiple inter-domains links.</t>

<t>A possible example could be a multi-domain optical network.</t>

<figure title="Multi-domain multi-link interconnection" anchor="md-ml-connection"><artwork><![CDATA[
                            +--------------+
                            | Multi-Domain |
                            | Controller   |
                            +---+------+---+
                                |      |
                   +------------+      |
                   |                   +-----------+
            +------V-----+                         |
            |            |                         |
            | TE Domain  |                  +------V-----+
            | Controller |                  |            |
            |      1     |                  | TE Domain  |
            +------+-----+                  | Controller |
                   |                        |      2     |
                   |                        +------+-----+
          .........V..........                     |
          :                  :                     |
         +-----+             :                     |
         |     |             :            .........V..........
         |  X  |             :            :                  :
         |     |          +-----+      +-----+                :
         +-----+          |     |      |     |               :
          :               |  C  |------|  E  |               :
      +-----+    +-----+ /|     |      |     |\ +-----+    +-----+
      |     |    |     |/ +-----+      +-----+ \|     |    |     |
      |  A  |----|  B  |     :            :     |  G  |----|  H  |
      |     |    |     |\    :            :    /|     |    |     |
      +-----+    +-----+ \+-----+      +-----+/ +-----+    +-----+
          :               |     |      |     |               :
          :               |  D  |------|  F  |               :
          :               |     |      |     |          +-----+
          :               +-----+      +-----+          |     |
          :                  :            :             |  Y  |
          :                  :            :             |     |
          :   TE domain 1    :            : TE domain 2 +-----+
          :..................:            :.................:
]]></artwork></figure>

<t>In order to set up an end-to-end multi-domain TE path (e.g., between
   nodes A and H), the Multi-Domain Controller needs to know the
   feasibility or the cost of the possible TE paths within the two TE
   domains, which depend on the current status of the physical resources
   within each TE domain. This is more challenging in case of optical
   networks because the optimal paths depend also on vendor-specific
   optical attributes (which may be different in the two domains if they
   are provided by different vendors).</t>

<t>In order to set up a multi-domain TE path (e.g., between nodes A and
   H), the Multi-Domain Controller can request the TE Domain Controllers
   to compute a set of intra-domain optimal paths and take decisions
   based on the information received. For example:</t>

<t><list style="symbols">
  <t>The Multi-Domain Controller asks TE Domain Controllers to provide
set of paths between A-C, A-D, E-H and F-H</t>
  <t>TE Domain Controllers return a set of feasible paths with the
associated costs: the path A-C is not part of this set (in optical
networks, it is typical to have some paths not being feasible due
to optical constraints that are known only by the Optical Domain
Controller)</t>
  <t>The Multi-Domain Controller will select the path A-D-F-H since it
is the only feasible multi-domain path and then request the TE
Domain Controllers to set up the A-D and F-H intra-domain paths</t>
  <t>If there are multiple feasible paths, the Multi-Domain Controller
can select the optimal path knowing the cost of the intra-domain
paths (provided by the TE domain controllers) and the cost of the
inter-domain links (known by the Multi-Domain Controller)  <vspace blankLines='1'/>
This approach may have some scalability issues when the number of TE
domains is quite big (e.g. 20).  <vspace blankLines='1'/>
In this case, it would be worthwhile using the abstract TE topology
information provided by the TE Domain Controllers to limit the number
of potential optimal end-to-end paths and then request path
computation from fewer TE Domain Controllers in order to decide what
the optimal path within this limited set is.  <vspace blankLines='1'/>
For more details, see <xref target="topo-pc-complement"/>.</t>
</list></t>

</section>
<section anchor="data-center-interconnections"><name>Data Center Interconnections</name>

<t>In these use case, there is a TE domain which is used to provide
   connectivity between Data Centers which are connected with the TE
   domain using access links.</t>

<figure title="Data Center Interconnection use case" anchor="fig-dci-uc"><artwork><![CDATA[
                        +--------------+
                        | Cloud Network|
                        | Orchestrator |
                        +--------------+
                          |  |  |  |
            +-------------+  |  |  +------------------------+
            |                |  +------------------+        |
            |       +--------V---+                 |        |
            |       |            |                 |        |
            |       | TE Network |                 |        |
     +------V-----+ | Controller |          +------V-----+  |
     | DC         | +------------+          | DC         |  |
     | Controller |     |                   | Controller |  |
     +------------+     |   +-----+         +------------+  |
          |         ....V...|     |........         |       |
          |         :       |  P  |       :         |       |
     .....V.....    :      /+-----+\      :    .....V.....  |
     :         :  +-----+ /    |    \ +-----+  :         :  |
     :  DC1 || :  |     |/     |     \|     |  :  DC2 || :  |
     :    ||||----| PE1 |      |      | PE2 |----   |||| :  |
     : _|||||| :  |     |\     |     /|     |  : _|||||| :  |
     :         :  +-----+ \ +-----+ / +-----+  :         :  |
     :.........:    :      \|     |/      :    :.........:  |
                    :.......| PE3 |.......:                 |
                            |     |                         |
                            +-----+               +---------V--+
                          .....|.....             | DC         |
                          :         :             | Controller |
                          :  DC3 || :             +------------+
                          :    |||| :                  |
                          : _|||||| <------------------+
                          :         :
                          :.........:
]]></artwork></figure>

<t>In this use case, there is the need to transfer data from Data Center
   1 (DC1) to either DC2 or DC3 (e.g. workload migration).</t>

<t>The optimal decision depends both on the cost of the TE path (DC1-DC2
   or DC1-DC3) and of the Data Center resources within DC2 or DC3.</t>

<t>The Cloud Network Orchestrator needs to make a decision for optimal
   connection based on TE network constraints and Data Center resources.</t>

<t>It may not be able to make this decision because it has only an
   abstract view of the TE network (as in <xref target="poi-uc"/>).</t>

<t>The Cloud Network Orchestrator can request to the TE Network
   Controller to compute the cost of the possible TE paths (e.g., DC1-
   DC2 and DC1-DC3) and to the DC Controller to provide the information
   it needs about the required Data Center resources within DC2 and DC3
   and then it can take the decision about the optimal solution based on
   this information and its policy.</t>

</section>
<section anchor="backward-recursive-path-computation-scenario"><name>Backward Recursive Path Computation scenario</name>

<t><xref target="RFC5441"/> has defined the Virtual Source Path Tree (VSPT) TLV within
   PCE Reply Object in order to compute inter-domain paths following a
   "Backward Recursive Path Computation" (BRPC) method. The main
   principle is to forward the PCE request message up to the destination
   domain. Then, each PCE involved in the computation will compute its
   part of the path and send it back to the requester through PCE
   Response message. The resulting computation is spread from
   destination PCE to source PCE. Each PCE is in charge of merging the
   path it received with the one it calculated. At the end, the source
   PCE merges its local part of the path with the received one to
   achieve the end-to-end path.</t>

<t><xref target="fig-brpc-example"/> below show a typical BRPC scenario where 3 PCEs cooperate to
   compute inter-domain paths.</t>

<figure title="BRPC Scenario" anchor="fig-brpc-example"><artwork><![CDATA[
                   +----------------+          +----------------+
                   |  Domain (B)    |          |  Domain (C)    |
                   |                |          |                |
                   |        /-------|---PCEP---|--------\       |
                   |       /        |          |         \      |
                   |   (PCE)        |          |   -    (PCE)   |
                   |    /           <---------->  |D|           |
                   |   /            |  Inter   |   -            |
                   +---|----^-------+  Domain  +----------------+
                       |    |          Link
                     PCEP   |
                       |    | Inter-domain Link
                       |    |
                   +---|----v-------+
                   |   |            |
                   |   | Domain (A) |
                   |   \            |
                   |  (PCE)    -    |
                   |          |S|   |
                   |           -    |
                   +----------------+
]]></artwork></figure>

<t>In this use case, a client can use the YANG data model defined in
   this document to request path computation from the PCE that controls
   the source of the tunnel. For example, a client can request to the
   PCE of domain A to compute a path from a source S, within domain A,
   to a destination D, within domain C. Then PCE of domain A will use
   PCEP protocol, as per <xref target="RFC5441"/>, to compute the path from S to D and
   in turn gives the final answer to the requester.</t>

</section>
<section anchor="hierarchical-pce-scenario"><name>Hierarchical PCE scenario</name>

<t><xref target="RFC6805"/> has defined an architecture and extensions to the PCE
   standard to compute inter-domain path following a hierarchical
   method. Two new roles have been defined: parent PCE and child PCE.
   The parent PCE is in charge to coordinate the end-to-end path
   computation. For that purpose it sends to each child PCE involved in
   the multi-domain path computation a PCE Request message to obtain the
   local part of the path. Once received all answer through PCE Response
   message, the parent PCE will merge the different local parts of the
   path to achieve the end-to-end path.</t>

<t><xref target="fig-hpce-example"/> below shows a typical hierarchical scenario where a parent
   PCE request end-to-end path to the different child PCE. Note that a
   PCE could take independently the role of child or parent PCE
   depending of which PCE will request the path.</t>

<figure title="Hierarchical domain topology from RFC6805" anchor="fig-hpce-example"><artwork><![CDATA[
    -----------------------------------------------------------------
    |   Domain 5                                                      |
    |                              -----                              |
    |                             |PCE 5|                             |
    |                              -----                              |
    |                                                                 |
    |    ----------------     ----------------     ----------------   |
    |   | Domain 1       |   | Domain 2       |   | Domain 3       |  |
    |   |                |   |                |   |                |  |
    |   |        -----   |   |        -----   |   |        -----   |  |
    |   |       |PCE 1|  |   |       |PCE 2|  |   |       |PCE 3|  |  |
    |   |        -----   |   |        -----   |   |        -----   |  |
    |   |                |   |                |   |                |  |
    |   |            ----|   |----        ----|   |----            |  |
    |   |           |BN11+---+BN21|      |BN23+---+BN31|           |  |
    |   |   -        ----|   |----        ----|   |----        -   |  |
    |   |  |S|           |   |                |   |           |D|  |  |
    |   |   -        ----|   |----        ----|   |----        -   |  |
    |   |           |BN12+---+BN22|      |BN24+---+BN32|           |  |
    |   |            ----|   |----        ----|   |----            |  |
    |   |                |   |                |   |                |  |
    |   |         ----   |   |                |   |   ----         |  |
    |   |        |BN13|  |   |                |   |  |BN33|        |  |
    |    -----------+----     ----------------     ----+-----------   |
    |                \                                /               |
    |                 \       ----------------       /                |
    |                  \     |                |     /                 |
    |                   \    |----        ----|    /                  |
    |                    ----+BN41|      |BN42+----                   |
    |                        |----        ----|                       |
    |                        |                |                       |
    |                        |        -----   |                       |
    |                        |       |PCE 4|  |                       |
    |                        |        -----   |                       |
    |                        |                |                       |
    |                        | Domain 4       |                       |
    |                         ----------------                        |
    |                                                                 |
     -----------------------------------------------------------------
]]></artwork></figure>

<t>In this use case, a client can use the YANG data model defined in
   this document to request to the parent PCE a path from a source S to
   a destination D. The parent PCE will in turn contact the child PCEs
   through PCEP protocol to compute the end-to-end path and then return
   the computed path to the client, using the YANG data model defined in
   this document. For example the YANG data model can be used to request
   to PCE5 acting as parent PCE to compute a path from source S, within
   domain 1, to destination D, within domain 3. PCE5 will contact child
   PCEs of domain 1, 2 and 3 to obtain local part of the end-to-end path
   through the PCEP protocol. Once received the PCE Response message, it
   merges the answers to compute the end-to-end path and send it back to
   the client.</t>

</section>
</section>
<section anchor="motivations"><name>Motivations</name>

<t>This section provides the motivation for the YANG data model defined
   in this document.</t>

<t><xref target="yang-motivation"/> describes the motivation for a YANG data model to request
   path computation.</t>

<t><xref target="topo-interaction"/> describes the motivation for a YANG data model which
   complements the TE topology YANG data model defined in <xref target="RFC8795"/>.</t>

<t><xref target="rpc-motivation"/> describes the motivation for a YANG RPC which complements
   the TE tunnel YANG data model defined in <xref target="I-D.ietf-teas-yang-te"/>.</t>

<section anchor="yang-motivation"><name>Motivation for a YANG Model</name>

<section anchor="benefits-of-common-data-models"><name>Benefits of common data models</name>

<t>The YANG data model for requesting path computation is closely
   aligned with the YANG data models that provide (abstract) TE topology
   information, i.e., <xref target="RFC8795"/> as well as that are used to configure
   and manage TE tunnels, i.e., <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>There are many benefits in aligning the data model used for path
   computation requests with the YANG data models used for TE topology
   information and for TE tunnels configuration and management:</t>

<t><list style="symbols">
  <t>There is no need for an error-prone mapping or correlation of
information.</t>
  <t>It is possible to use the same endpoint identifiers in path
computation requests and in the topology modeling.</t>
  <t>The attributes used for path computation constraints are the same
as those used when setting up a TE tunnel.</t>
</list></t>

</section>
<section anchor="benefits-of-a-single-interface"><name>Benefits of a single interface</name>

<t>The system integration effort is typically lower if a single,
   consistent interface is used by controllers, i.e., one data modeling
   language (i.e., YANG) and a common protocol (e.g., NETCONF or
   RESTCONF).</t>

<t>Practical benefits of using a single, consistent interface include:</t>

<t><list style="numbers">
  <t>Simple authentication and authorization: The interface between
different components has to be secured. If different protocols
have different security mechanisms, ensuring a common access
control model may result in overhead. For instance, there may be a
need to deal with different security mechanisms, e.g., different
credentials or keys. This can result in increased integration
effort.</t>
  <t>Consistency: Keeping data consistent over multiple different
interfaces or protocols is not trivial. For instance, the sequence
of actions can matter in certain use cases, or transaction
semantics could be desired. While ensuring consistency within one
protocol can already be challenging, it is typically cumbersome to
achieve that across different protocols.</t>
  <t>Testing: System integration requires comprehensive testing,
including corner cases. The more different technologies are
involved, the more difficult it is to run comprehensive test cases
and ensure proper integration.</t>
  <t>Middle-box friendliness: Provider and consumer of path computation
requests may be located in different networks, and middle-boxes
such as firewalls, NATs, or load balancers may be deployed. In
such environments it is simpler to deploy a single protocol. Also,
it may be easier to debug connectivity problems.</t>
  <t>Tooling reuse: Implementers may want to implement path computation
requests with tools and libraries that already exist in
controllers and/or orchestrators, e.g., leveraging the rapidly
growing eco-system for YANG tooling.</t>
</list></t>

</section>
<section anchor="extensibility"><name>Extensibility</name>

<t>Path computation is only a subset of the typical functionality of a
   controller. In many use cases, issuing path computation requests
   comes along with the need to access other functionality on the same
   system. In addition to obtaining TE topology, for instance also
   configuration of services (set-up/modification/deletion) may be
   required, as well as:</t>

<t><list style="numbers">
  <t>Receiving notifications for topology changes as well as
integration with fault management</t>
  <t>Performance management such as retrieving monitoring and telemetry
data</t>
  <t>Service assurance, e.g., by triggering OAM functionality</t>
  <t>Other fulfilment and provisioning actions beyond tunnels and
services, such as changing QoS configurations  <vspace blankLines='1'/>
YANG is a very extensible and flexible data modeling language that
can be used for all these use cases.</t>
</list></t>

</section>
</section>
<section anchor="topo-interaction"><name>Interactions with TE topology</name>

<t>The use cases described in <xref target="use-cases"/> have been described assuming
   that the topology view exported by each underlying controller to its
   client is aggregated using the "virtual node model", defined in
   <xref target="RFC7926"/>.</t>

<t>TE topology information, e.g., as provided by <xref target="RFC8795"/>, could in
   theory be used by an underlying controller to provide TE information
   to its client thus allowing a PCE available within its client to
   perform multi-domain path computation on its own, without requesting
   path computations to the underlying controllers.</t>

<t>In case the client does not implement a PCE function, as discussed in
   <xref target="intro"/>, it could not perform path computation based on TE topology
   information and would instead need to request path computation from
   the underlying controllers to get the information it needs to find
   the optimal end-to-end path.</t>

<t>In case the client implements a PCE function, as discussed in 
   <xref target="intro"/>, the TE topology information needs to be complete and accurate,
   which would bring to scalability issues.</t>

<t>Using TE topology to provide a "virtual link model" aggregation, as
   described in <xref target="RFC7926"/>, may be insufficient, unless the aggregation
   provides complete and accurate information, which would still cause
   scalability issues, as described in <xref target="topo-aggregation"/> below.</t>

<t>Using TE topology abstraction, as described in <xref target="RFC7926"/>, may lead to
   compute an unfeasible path, as described in <xref target="RFC7926"/> in 
   <xref target="topo-abstraction"/> below.</t>

<t>Therefore when computing an optimal multi-domain path, there is a
   scalability trade-off between providing complete and accurate TE
   information and the number of path computation requests to the
   underlying controllers.</t>

<t>The TE topology information used, in a complimentary way, to reduce
   the number for path computation requests to the underlying
   controllers, are described in <xref target="topo-pc-complement"/> below.</t>

<section anchor="topo-aggregation"><name>TE topology aggregation</name>

<t>Using the TE topology model, as defined in <xref target="RFC8795"/>, the underlying
   controller can export the whole TE domain as a single TE node with a
   "detailed connectivity matrix" (which provides specific TE
   attributes, such as delay, Shared Risk Link Groups (SRLGs) and other
   TE metrics, between each ingress and egress links).</t>

<t>The information provided by the "detailed connectivity matrix" would
   be equivalent to the information that should be provided by "virtual
   link model" as defined in <xref target="RFC7926"/>.</t>

<t>For example, in the Packet/Optical Integration use case, described in
   <xref target="poi-uc"/>, the Optical Domain Controller can make the information
   shown in <xref target="fig-poi-example"/> available to the Packet/Optical Coordinator as part
   of the TE topology information and the Packet/Optical Coordinator
   could use this information to calculate on its own the optimal path
   between R1 and R2, without requesting any additional information to
   the Optical Domain Controller.</t>

<t>However, when designing the amount of information to provide within
   the "detailed connectivity matrix", there is a tradeoff to be
   considered between accuracy (i.e., providing "all" the information
   that might be needed by the PCE available within the client) and
   scalability.</t>

<t><xref target="poi-multi-path"/> below shows another example, similar to <xref target="fig-poi-example"/>, where
   there are two possible Optical paths between VP1 and VP4 with
   different properties (e.g., available bandwidth and cost).</t>

<figure title="Packet/Optical Integration path computation Example with multiple choices" anchor="poi-multi-path"><artwork><![CDATA[
                    ............................
                    :  /--------------------\  :
                    : /       cost=65        \ :
                    :/    available-bw=10G    \:
                    O VP1                  VP4 O
           cost=10 /:\                        /:\ cost=10
                  / : \----------------------/ : \
          +----+ /  :         cost=50          :  \ +----+
          |    |/   :     available-bw=2G      :   \|    |
          | R1 |    :                          :    | R2 |
          |    |\   :                          :   /|    |
          +----+ \  :  /--------------------\  :  / +----+
                  \ : /       cost=55        \ : /
            cost=5 \:/    available-bw=3G     \:/ cost=5
                    O VP2                  VP5 O
                    :                          :
                    :..........................:
]]></artwork></figure>

<t>If the information in the "detailed connectivity matrix" is not
   complete/accurate, we can have the following drawbacks:</t>

<t><list style="symbols">
  <t>If only the VP1-VP4 path with available bandwidth of 2 Gb/s and
cost 50 is reported, the client's PCE will fail to compute a 5
Gb/s path between routers R1 and R2, although this would be
feasible;</t>
  <t>If only the VP1-VP4 path with available bandwidth of 10 Gb/s and
cost 60 is reported, the client's PCE will compute, as optimal,
the 1 Gb/s path between R1 and R2 going through the VP2-VP5 path
within the optical domain while the optimal path would actually be
the one going thought the VP1-VP4 sub-path (with cost 50) within
the optical domain.  <vspace blankLines='1'/>
Reporting all the information, as in <xref target="poi-multi-path"/>, using the "detailed
 connectivity matrix", is quite challenging from a scalability
 perspective. The amount of this information is not just based on
 number of end points (which would scale as N-square), but also on
 many other parameters, including client rate, user
 constraints/policies for the service, e.g. max latency &lt; N ms, max
 cost, etc., exclusion policies to route around busy links, min
 Optical Signal to Noise Ratio (OSNR) margin, max pre-Forward Error
 Correction (FEC) Bit Error Rate (BER) etc. All these constraints
 could be different based on connectivity requirements.  <vspace blankLines='1'/>
It is also worth noting that the "connectivity matrix" has been
 originally defined in Wavelength Switched Optical Networks (WSON),
 <xref target="RFC7446"/>, to report the connectivity constrains of a physical node
 within the Wavelength Division Multiplexing (WDM) network: the
 information it contains is pretty "static" and therefore, once taken
 and stored in the TE data base, it can be always being considered
 valid and up-to-date in path computation request.  <vspace blankLines='1'/>
The "connectivity matrix" is sometimes confused with "optical reach
 table" that contain multiple (e.g. k-shortest) regen-free reachable
 paths for every A-Z node combination in the network. Optical reach
 tables can be calculated offline, utilizing vendor optical design and
 planning tools, and periodically uploaded to the Controller: these
 optical path reach tables are fairly static. However, to get the
 connectivity matrix, between any two sites, either a regen free path
 can be used, if one is available, or multiple regen free paths are
 concatenated to get from the source to the destination, which can be
 a very large combination. Additionally, when the optical path within
 optical domain needs to be computed, it can result in different paths
 based on input objective, constraints, and network conditions. In
 summary, even though "optical reach table" is fairly static, which
 regen free paths to build the connectivity matrix between any source
 and destination is very dynamic, and is done using very sophisticated
 routing algorithms.  <vspace blankLines='1'/>
Using the "basic connectivity matrix" with an abstract node to
 abstract the information regarding the connectivity constraints of an
 Optical domain, would make this information more "dynamic" since the
 connectivity constraints of an optical domain can change over time
 because some optical paths that are feasible at a given time may
 become unfeasible at a later time when e.g., another optical path is
 established.  <vspace blankLines='1'/>
The information in the "detailed connectivity matrix" is even more
 dynamic since the establishment of another optical path may change
 some of the parameters (e.g., delay or available bandwidth) in the
 "detailed connectivity matrix" while not changing the feasibility of
 the path.  <vspace blankLines='1'/>
There is therefore the need to keep the information in the "detailed
 connectivity matrix" updated which means that there another tradeoff
 between the accuracy (i.e., providing "all" the information that
 might be needed by the client's PCE) and having up-to-date
 information. The more the information is provided and the longer it
 takes to keep it up-to-date which increases the likelihood that the
 client's PCE computes paths using not updated information.  <vspace blankLines='1'/>
It seems therefore quite challenging to have a "detailed connectivity
 matrix" that provides accurate, scalable and updated information to
 allow the client's PCE to take optimal decisions by its own.  <vspace blankLines='1'/>
Considering the example in <xref target="poi-multi-path"/> with the approach defined in this
 document, the client, when it needs to set up an end-to-end path, it
 can request the Optical Domain Controller to compute a set of optimal
 paths (e.g., for VP1-VP4 and VP2-VP5) and take decisions based on the
 information received:</t>
  <t>When setting up a 5 Gb/s path between routers R1 and R2, the
Optical Domain Controller may report only the VP1-VP4 path as the
only feasible path: the Packet/Optical Coordinator can
successfully set up the end-to-end path passing though this
optical path;</t>
  <t>When setting up a 1 Gb/s path between routers R1 and R2, the
Optical Domain Controller (knowing that the path requires only 1
Gb/s) can report both the VP1-VP4 path, with cost 50, and the VP2-
VP5 path, with cost 65. The Packet/Optical Coordinator can then
compute the optimal path which is passing thought the VP1-VP4 sub-
path (with cost 50) within the optical domain.</t>
</list></t>

</section>
<section anchor="topo-abstraction"><name>TE topology abstraction</name>

<t>Using the TE topology model, as defined in <xref target="RFC8795"/>, the underlying
   controller can export to its client an abstract TE topology, composed
   by a set of TE nodes and TE links, representing the abstract view of
   the topology under its control.</t>

<t>For example, in the multi-domain TE network use case, described in
   <xref target="md-uc"/>, the TE Domain Controller 1 can export a TE topology
   encompassing the TE nodes A, B, C and D and the TE links
   interconnecting them. In a similar way, the TE Domain Controller 2
   can export a TE topology encompassing the TE nodes E, F, G and H and
   the TE links interconnecting them.</t>

<t>In this example, for simplicity reasons, each abstract TE node maps
   with each physical node, but this is not necessary.</t>

<t>In order to set up a multi-domain TE path (e.g., between nodes A and
   H), the Multi-Domain Controller can compute by its own an optimal
   end-to-end path based on the abstract TE topology information
   provided by the domain controllers. For example:</t>

<t><list style="symbols">
  <t>Multi-Domain Controller can compute, based on its own TED data,
the optimal multi-domain path being A-B-C-E-G-H, and then request
the TE Domain Controllers to set up the A-B-C and E-G-H intra-
domain paths</t>
  <t>But, during path set-up, the TE Domain Controller may find out
that A-B-C intra-domain path is not feasible (as discussed in
<xref target="md-uc"/>, in optical networks it is typical to have some paths
not being feasible due to optical constraints that are known only
by the Optical Domain Controller), while only the path A-B-D is
feasible</t>
  <t>So what the Multi-Domain Controller has computed is not good and
it needs to re-start the path computation from scratch  <vspace blankLines='1'/>
As discussed in <xref target="topo-aggregation"/>, providing more extensive abstract
information from the TE Domain Controllers to the Multi-Domain
Controller may lead to scalability problems.  <vspace blankLines='1'/>
In a sense this is similar to the problem of routing and wavelength
assignment within an optical domain. It is possible to do first
routing (step 1) and then wavelength assignment (step 2), but the
chances of ending up with a good path is low. Alternatively, it is
possible to do combined routing and wavelength assignment, which is
known to be a more optimal and effective way for optical path set-up.
Similarly, it is possible to first compute an abstract end-to-end
path within the Multi-Domain Controller (step 1) and then compute an
intra-domain path within each optical domain (step 2), but there are
more chances not to find a path or to get a suboptimal path than by
performing multiple per-domain path computations and then stitching
them together.</t>
</list></t>

</section>
<section anchor="topo-pc-complement"><name>Complementary use of the TE topology</name>

<t>As discussed in <xref target="md-uc"/>, there are some scalability issues with
   path computation requests in a multi-domain TE network with many TE
   domains, in terms of the number of requests to send to the TE Domain
   Controllers. It would therefore be worthwhile using the abstract TE
   topology information provided by the TE Domain Controllers to limit
   the number of requests.</t>

<t>An example can be described considering the multi-domain abstract TE
   topology shown in <xref target="fig-topo-many-domains"/>. In this example, an end-to-end TE path
   between domains A and F needs to be set up. The transit TE domain
   should be selected between domains B, C, D and E.</t>

<figure title="Multi-domain with many domains (Topology information)" anchor="fig-topo-many-domains"><artwork><![CDATA[
                          .........B.........
                          : _ _ _ _ _ _ _ _ :
                          :/               \:
                      +---O  NOT FEASIBLE   O---+
                cost=5|   :                 :   |
    ......A......     |   :.................:   |     ......F......
    :           :     |                         |     :           :
    :           O-----+   .........C.........   +-----O           :
    :           :         : /-------------\ :         :           :
    :           :         :/               \:         :           :
    :  cost<=20 O---------O   cost <= 30    O---------O cost<=20  :
    :          /: cost=5  :                 : cost=5  :\          :
    :  /------/ :         :.................:         : \------\  :
    : /         :                                     :         \ :
    :/ cost<=25 :         .........D.........         : cost<=25 \:
    O-----------O-------+ : /-------------\ : +-------O-----------O
    :\          : cost=5| :/               \: |cost=5 :          /:
    : \         :       +-O   cost <= 30    O-+       :         / :
    :  \------\ :         :                 :         : /------/  :
    : cost>=30 \:         :.................:         :/ cost>=30 :
    :           O-----+                         +-----O           :
    :...........:     |   .........E.........   |     :...........:
                      |   : /-------------\ :   |
                cost=5|   :/               \:   |cost=5
                      +---O   cost >= 30    O---+
                          :                 :
                          :.................:
]]></artwork></figure>

<t>The actual cost of each intra-domain path is not known a priori from
   the abstract topology information. The Multi-Domain Controller only
   knows, from the TE topology provided by the underlying domain
   controllers, the feasibility of some intra-domain paths and some
   upper-bound and/or lower-bound cost information. With this
   information, together with the cost of inter-domain links, the Multi-
   Domain Controller can understand by its own that:</t>

<t><list style="symbols">
  <t>Domain B cannot be selected as the path connecting domains A and F
is not feasible;</t>
  <t>Domain E cannot be selected as a transit domain since it is known
from the abstract topology information provided by domain
controllers that the cost of the multi-domain path A-E-F (which is
100, in the best case) will be always be higher than the cost of
the multi-domain paths A-D-F (which is 90, in the worst case) and
A-C-F (which is 80, in the worst case).  <vspace blankLines='1'/>
Therefore, the Multi-Domain Controller can understand by its own that
 the optimal multi-domain path could be either A-D-F or A-C-F but it
 cannot know which one of the two possible option actually provides
 the optimal end-to-end path.  <vspace blankLines='1'/>
The Multi-Domain Controller can therefore request path computation
 only to the TE Domain Controllers A, D, C and F (and not to all the
 possible TE Domain Controllers).</t>
</list></t>

<figure title="Multi-domain with many domains (Path Computation information)" anchor="fig-pc-many-domains"><artwork><![CDATA[
                          .........B.........
                          :                 :
                      +---O                 O---+
    ......A......     |   :.................:   |     ......F......
    :           :     |                         |     :           :
    :           O-----+   .........C.........   +-----O           :
    :           :         : /-------------\ :         :           :
    :           :         :/               \:         :           :
    :  cost=15  O---------O    cost = 25    O---------O  cost=10  :
    :          /: cost=5  :                 : cost=5  :\          :
    :  /------/ :         :.................:         : \------\  :
    : /         :                                     :         \ :
    :/ cost=10  :         .........D.........         : cost=15  \:
    O-----------O-------+ : /-------------\ : +-------O-----------O
    :           : cost=5| :/               \: |cost=5 :           :
    :           :       +-O    cost = 15    O-+       :           :
    :           :         :                 :         :           :
    :           :         :.................:         :           :
    :           O-----+                         +-----O           :
    :...........:     |   .........E.........   |     :...........:
                      |   :                 :   |
                      +---O                 O---+
                          :.................:
]]></artwork></figure>

<t>Based on these requests, the Multi-Domain Controller can know the
   actual cost of each intra-domain paths which belongs to potential
   optimal end-to-end paths, as shown in <xref target="fig-pc-many-domains"/>, and then compute the
   optimal end-to-end path (e.g., A-D-F, having total cost of 50,
   instead of A-C-F having a total cost of 70).</t>

</section>
</section>
<section anchor="rpc-motivation"><name>Path Computation RPC</name>

<t>The TE tunnel YANG data model, defined in <xref target="I-D.ietf-teas-yang-te"/>, can support
   the need to request path computation, as described in section 5.1.2
   of <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>This solution is stateful since the state of each created "compute-
   only" TE tunnel path needs to be maintained, in the YANG datastores
   (at least in the running datastore and operational datastore), and
   updated, when underlying network conditions change.</t>

<t>The RPC mechanism allows requesting path computation using a simple
   atomic operation, without creating any state in the YANG datastores,
   and it is the natural option/choice, especially with stateless PCE.</t>

<t>It is very useful to provide both the options of using an RPC as well
   as of setting up TE tunnel paths in "compute-only" mode. It is
   suggested to use the RPC as much as possible and to rely on
   "compute-only" TE tunnel paths, when really needed.</t>

<t>Using the RPC solution would imply that the underlying controller
   (e.g., a PNC) computes a path twice during the process to set up an
   LSP: at time T1, when its client (e.g., an MDSC) sends a path
   computation RPC request to it, and later, at time T2, when the same
   client (MDSC) creates a TE tunnel requesting the set-up of the LSP.
   The underlying assumption is that, if network conditions have not
   changed, the same path that has been computed at time T1 is also
   computed at time T2 by the underlying controller (e.g. PNC) and
   therefore the path that is set up at time T2 is exactly the same path
   that has been computed at time T1.</t>

<t>However, since the operation is stateless, there is no guarantee that
   the returned path would still be available when path set-up is
   requested: this does not cause major issues when the time between
   path computation and path set-up is short (especially if compared
   with the time that would be needed to update the information of a
   very detailed connectivity matrix).</t>

<t>In most of the cases, there is even no need to guarantee that the
   path that has been set up is the exactly same as the path that has
   been returned by path computation, especially if it has the same or
   even better metrics. Depending on the abstraction level applied by
   the server, the client may also not know the actual computed path.</t>

<t>The most important requirement is that the required global objectives
   (e.g., multi-domain path metrics and constraints) are met. For this
   reason a path verification phase is always necessary to verify that
   the actual path that has been set up meets the global objectives (for
   example in a multi-domain network, the resulting end-to-end path
   meets the required end-to-end metrics and constraints).</t>

<t>In most of the cases, even if the path being set up is not exactly
   the same as the path returned by path computation, its metrics and
   constraints are "good enough" and the path verification passes
   successfully. In the few corner cases where the path verification
   fails, it is possible repeat the whole process (path computation,
   path set-up and path verification).</t>

<t>In case it is required to set up at T2 exactly the same path computed
   at T1, the RPC solution should not be used and, instead, a "compute-
   only" TE tunnel path should be set up, allowing also notifications in
   case the computed path has been changed.</t>

<t>In this case, at time T1, the client (MDSC) creates a TE tunnel in a
   compute-only mode in the running datastore and later, at time T2,
   changes the configuration of that TE tunnel (not to be any more in a
   compute-only mode) to trigger the set-up of the LSP over the path
   which have been computed at time T1 and reported in the operational
   datastore.</t>

<t>It is worth noting that also using the "compute-only" TE tunnel path,
   although increasing the likelihood that the computed path is
   available at path set-up, does not guarantee that because
   notifications may not be reliable or delivered on time. Path
   verification is needed also in this case.</t>

<t>The solution based on "compute-only" TE tunnel path has also the
   following drawbacks:</t>

<t><list style="symbols">
  <t>Several messages required for any path computation</t>
  <t>Requires persistent storage in the underlying controller</t>
  <t>Need for garbage collection for stranded paths</t>
  <t>Process burden to detect changes on the computed paths in order to
provide notifications update</t>
</list></t>

<section anchor="temp-state"><name>Temporary reporting of the computed path state</name>

<t>This section describes an optional extension to the stateless
   behavior of the path computation RPC, where the underlying
   controller, after having received a path computation RPC request,
   maintains some "transient state" associated with the computed path,
   allowing the client to request the set-up of exactly that path, if
   still available.</t>

<t>This is similar to the "compute-only" TE tunnel path solution but, to
   avoid the drawbacks of the stateful approach, is leveraging the path
   computation RPC and the separation between configuration and
   operational datastore, as defined in the NMDA architecture <xref target="RFC8342"/>.</t>

<t>The underlying controller, after having computed a path, as requested
   by a path computation RPC, also creates a TE tunnel instance within
   the operational datastore, to store that computed path. This would be
   similar to a "compute-only" TE tunnel path, with the only difference
   that there is no associated TE tunnel instance within the running
   datastore.</t>

<t>Since the underlying controller stores in the operational datastore
   the computed path based on an abstract topology it exposes, it also
   remembers, internally, which is the actual native path (physical
   path), within its native topology (physical topology), associated
   with that compute-only TE tunnel instance.</t>

<t>Afterwards, the client (e.g., MDSC) can request the set-up of that
   specific path by creating a TE tunnel instance (not in compute-only
   mode) in the running datastore using the same tunnel-name of
   the existing TE tunnel in the operational datastore: this will
   trigger the underlying controller to set up that path, if still
   available.</t>

<t>There are still cases where the path being set up is not exactly the
   same as the path that has been computed:</t>

<t><list style="symbols">
  <t>When the tunnel is configured with path constraints which are not
compatible with the computed path;</t>
  <t>When the tunnel set-up is requested after the resources of the
computed path are no longer available;</t>
  <t>When the tunnel set-up is requested after the computed path is no
longer known (e.g. due to a server reboot) by the underlying
controller.  <vspace blankLines='1'/>
In all these cases, the underlying controller should compute and set
 up a new path.  <vspace blankLines='1'/>
Therefore the "path verification" phase, as described in <xref target="rpc-motivation"/>
 above, is always needed to check that the path that has been set up
 is still "good enough".  <vspace blankLines='1'/>
Since this new approach is not completely stateless, garbage
 collection is implemented using a timeout that, when it expires,
 triggers the removal of the computed path from the operational
 datastore. This operation is fully controlled by the underlying
 controller without the need for any action to be taken by the client
 that is not able to act on the operational datastore. The default
 value of this timeout is 10 minutes but a different value may be
 configured by the client.  <vspace blankLines='1'/>
In addition, it is possible for the client to tag each path
 computation request with a transaction-id allowing for a faster
 removal of all the paths associated with a transaction-id, without
 waiting for their timers to expire.  <vspace blankLines='1'/>
The underlying controller can remove from the operational datastore
 all the paths computed with a given transaction-id which have not
 been set up either when it receives a Path Delete RPC request for
 that transaction-id or, automatically, right after the set-up up of a
 path that has been previously computed with that transaction-id.  <vspace blankLines='1'/>
This possibility is useful when multiple paths are computed but, at
 most, only one is set up (e.g., in multi-domain path computation
 scenario scenarios). After the selected path has been set up (e.g, in
 one domain during multi-domain path set-up), all the other
 alternative computed paths can be automatically deleted by the
 underlying controller (since no longer needed). The client can also
 request, using the Path Delete RPC request, the underlying controller
 to remove all the computed paths, if none of them is going to be set
 up (e.g., in a transit domain not being selected by multi-domain path
 computation and so not being automatically deleted).  <vspace blankLines='1'/>
This approach is complimentary and not alternative to the timer which
 is always needed to avoid stranded computed paths being stored in the
 operational datastore when no path is set up and no explicit Path
 Delete RPC request is received.</t>
</list></t>

</section>
</section>
</section>
<section anchor="path-computation-and-optimization-for-multiple-paths"><name>Path computation and optimization for multiple paths</name>

<t>There are use cases, where it is advantageous to request path
   computation for a set of paths, through a network or through a
   network domain, using a single request <xref target="RFC5440"/>.</t>

<t>In this case, sending a single request for multiple path
   computations, instead of sending multiple requests for each path
   computation, would reduce the protocol overhead and it would consume
   less resources (e.g., threads in the client and server).</t>

<t>In the context of a typical multi-domain TE network, there could
   multiple choices for the ingress/egress points of a domain and the
   Multi-Domain Controller needs to request path computation between all
   the ingress/egress pairs to select the best pair. For example, in the
   example of <xref target="md-uc"/>, the Multi-Domain Controller needs to request
   the TE Network Controller 1 to compute the A-C and the A-D paths and
   to the TE Network Controller 2 to compute the E-H and the F-H paths.</t>

<t>It is also possible that the Multi-Domain Controller receives a
   request to set up a group of multiple end to end connections. The
   Multi-Domain Controller needs to request each TE domain Controller to
   compute multiple paths, one (or more) for each end to end connection.</t>

<t>There are also scenarios where it can be needed to request path
   computation for a set of paths in a synchronized fashion.</t>

<t>One example could be computing multiple diverse paths. Computing a
   set of diverse paths in an unsynchronized fashion, leads to the
   possibility of not being able to satisfy the diversity requirement.
   In this case, it is preferable to compute a sub-optimal primary path
   for which a diversely routed secondary path exists.</t>

<t>There are also scenarios where it is needed to request optimizing a
   set of paths using objective functions that apply to the whole set of
   paths, see <xref target="RFC5541"/>, e.g. to minimize the sum of the costs of all
   the computed paths in the set.</t>

</section>
<section anchor="yang-data-model-for-requesting-path-computation"><name>YANG data model for requesting Path Computation</name>

<t>This document define a YANG RPC to request path computation as an
   "augmentation" of tunnel-rpc, defined in <xref target="I-D.ietf-teas-yang-te"/>. This model
   provides the RPC input attributes that are needed to request path
   computation and the RPC output attributes that are needed to report
   the computed paths.</t>

<figure><artwork><![CDATA[
     augment /te:tunnels-path-compute/te:input/te:path-compute-info:
       +-- path-request* [request-id]
       |  +-- request-id                            uint32
       |  ...........

     augment /te:tunnels-path-compute/te:output/te:path-compute-result:
       +--ro response* [response-id]
          +--ro response-id                         uint32
          +--ro computed-paths-properties
          |  +--ro computed-path-properties* [k-index]
          |     +--ro k-index            uint8
          |     +--ro path-properties
          |     ...........
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>This model extensively re-uses the grouping defined in <xref target="I-D.ietf-teas-yang-te"/>
   and <xref target="RFC8776"/> to ensure maximal syntax and semantics commonality.</t>

<t>This YANG data model allows one RPC to include multiple path
   requests, each path request being identified by a request-id.
   Therefore, one RPC can return multiple responses, one for each path
   request, being identified by a response-id equal to the corresponding
   request-id. Each response reports one or more computed paths, as
   requested by the k-requested-paths attribute. By default, each
   response reports one computed path.</t>

<section anchor="synchronization-of-multiple-path-computation-requests"><name>Synchronization of multiple path computation requests</name>

<t>The YANG data model permits the synchronization of a set of multiple
   path requests (identified by specific request-id) all related to a
   "svec" container emulating the syntax of the Synchronization VECtor
   (SVEC) PCEP object, defined in <xref target="RFC5440"/>.</t>

<figure><artwork><![CDATA[
       +-- synchronization* []
          +-- svec
          |  +-- relaxable?           boolean
          |  +-- disjointness?        te-path-disjointness
          |  +-- request-id-number*   uint32
          +-- svec-constraints
          |  +-- path-metric-bound* [metric-type]
          |     +-- metric-type    identityref
          |     +-- upper-bound?   uint64
          +-- path-srlgs-lists
          |  +-- path-srlgs-list* [usage]
          |     +-- usage     identityref
          |     +-- values*   srlg
          +-- path-srlgs-names
          |  +-- path-srlgs-name* [usage]
          |     +-- usage    identityref
          |     +-- names*   string
          +-- exclude-objects
          |  +-- excludes* []
          |     +-- (type)?
          |        +--:(numbered-node-hop)
          |        |  +-- numbered-node-hop
          |        |     +-- node-id     te-node-id
          |        |     +-- hop-type?   te-hop-type
          |        +--:(numbered-link-hop)
          |        |  +-- numbered-link-hop
          |        |     +-- link-tp-id    te-tp-id
          |        |     +-- hop-type?     te-hop-type
          |        |     +-- direction?    te-link-direction
          |        +--:(unnumbered-link-hop)
          |        |  +-- unnumbered-link-hop
          |        |     +-- link-tp-id    te-tp-id
          |        |     +-- node-id       te-node-id
          |        |     +-- hop-type?     te-hop-type
          |        |     +-- direction?    te-link-direction
          |        +--:(as-number)
          |        |  +-- as-number-hop
          |        |     +-- as-number    inet:as-number
          |        |     +-- hop-type?    te-hop-type
          |        +--:(label)
          |           +-- label-hop
          |              +-- te-label
          |                 +-- (technology)?
          |                 |  +--:(generic)
          |                 |     +-- generic?
          |                 |             rt-types:generalized-label
          |                 +-- direction?       te-label-direction
          +-- optimizations
             +-- (algorithm)?
                +--:(metric) {te-types:path-optimization-metric}?
                |  +-- optimization-metric* [metric-type]
                |     +-- metric-type    identityref
                |     +-- weight?        uint8
                +--:(objective-function)
                         {te-types:path-optimization-objective-
   function}?
                   +-- objective-function
                      +-- objective-function-type?   identityref
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>The model, in addition to the metric types, defined in <xref target="RFC8776"/>,
   which can be applied to each individual path request, supports also
   additional metric types, which apply to a set of synchronized
   requests, as referenced in <xref target="RFC5541"/>. These additional metric types
   are defined by the following YANG identities:</t>

<t><list style="symbols">
  <t>svec-metric-type: base YANG identity from which cumulative metric
types identities are derived.</t>
  <t>svec-metric-cumul-te: cumulative TE cost metric type, as defined
in <xref target="RFC5541"/>.</t>
  <t>svec-metric-cumul-igp: cumulative IGP cost metric type, as defined
in <xref target="RFC5541"/>.</t>
  <t>svec-metric-cumul-hop: cumulative Hop metric type, representing
the cumulative version of the Hop metric type defined in
<xref target="RFC8776"/>.</t>
  <t>svec-metric-aggregate-bandwidth-consumption: aggregate bandwidth
consumption metric type, as defined in <xref target="RFC5541"/>.</t>
  <t>svec-metric-load-of-the-most-loaded-link: load of the most loaded
link metric type, as defined in <xref target="RFC5541"/>.</t>
</list></t>

</section>
<section anchor="returned-metric-values"><name>Returned metric values</name>

<t>This YANG data model provides a way to return the values of the
   metrics computed by the path computation in the output of RPC,
   together with other important information (e.g. srlg, affinities,
   explicit route), emulating the syntax of the "C" flag of the "METRIC"
   PCEP object <xref target="RFC5440"/>:</t>

<figure><artwork><![CDATA[
          |     +--ro path-properties
          |        +--ro path-metric* [metric-type]
          |        |  +--ro metric-type           identityref
          |        |  +--ro accumulative-value?   uint64
          |        +--ro path-affinities-values
          |        |  +--ro path-affinities-value* [usage]
          |        |     +--ro usage    identityref
          |        |     +--ro value?   admin-groups
          |        +--ro path-affinity-names
          |        |  +--ro path-affinity-name* [usage]
          |        |     +--ro usage            identityref
          |        |     +--ro affinity-name* [name]
          |        |        +--ro name    string
          |        +--ro path-srlgs-lists
          |        |  +--ro path-srlgs-list* [usage]
          |        |     +--ro usage     identityref
          |        |     +--ro values*   srlg
          |        +--ro path-srlgs-names
          |        |  +--ro path-srlgs-name* [usage]
          |        |     +--ro usage    identityref
          |        |     +--ro names*   string
          |        +--ro path-route-objects
          |        ...........
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>It also allows the client to request which information (metrics, srlg
   and/or affinities) should be returned:</t>

<figure><artwork><![CDATA[
       |  +-- request-id                            uint32
       |  ...........
       |  +-- requested-metrics* [metric-type]
       |  |  +-- metric-type    identityref
       |  +-- return-srlgs?                         boolean
       |  +-- return-affinities?                    boolean
       |  ...........
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>This feature is essential for path computation in a multi-domain TE
   network as described in <xref target="md-uc"/>. In this case, the metrics
   returned by a path computation requested to a given underlying
   controller must be used by the client to compute the best end-to-end
   path. If they are missing, the client cannot compare different paths
   calculated by the underlying controllers and choose the best one for
   the optimal end-to-end (e2e) path.</t>

</section>
<section anchor="multiple-paths-requests-for-the-same-te-tunnel"><name>Multiple Paths Requests for the same TE tunnel</name>

<t>The YANG data model allows including multiple requests for different
   paths intended to be used within the same tunnel or within different
   tunnels.</t>

<t>When multiple requested paths are intended to be used within the same
   tunnel (e.g., requesting path computation for the primary and
   secondary paths of a protected tunnel), the set of attributes that
   are intended to be configured on per-tunnel basis rather than on per-
   path basis are common to all these path requests. These attributes
   includes both attributes which can be configured only a per-tunnel
   basis (e.g., tunnel-name, source/destination TTP, encoding and
   switching-type) as well attributes which can be configured both on a
   per-tunnel and on a per-path basis (e.g., the te-bandwidth or the
   associations).</t>

<t>Therefore, a tunnel-attributes list is defined, within the path
   computation request RPC:</t>

<figure><artwork><![CDATA[
       +-- tunnel-attributes* [tunnel-name]
       |  +-- tunnel-name               string
       |  +-- encoding?                 identityref
       |  +-- switching-type?           identityref
       |  ...........
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>The path requests that are intended to be used within the same tunnel
   should reference the same entry in the tunnel-attributes list. This
   allows:</t>

<t><list style="symbols">
  <t>avoiding repeating the same set of per-tunnel parameters on
multiple requested paths;</t>
  <t>the server to understand what attributes are intended to be
configured on a per-tunnel basis (e.g., the te-bandwidth
configured in the tunnel-attributes) and what attributes are
intended to be configured on a per-path basis(e.g., the te-
bandwidth configured in the path-request). This could be useful
especially when the server also creates a TE tunnel instance
within the operational datastore to report the computed paths, as
described in <xref target="temp-state"/>: in this case, the tunnel-name is also
used as the suggested name for that TE tunnel instance.  <vspace blankLines='1'/>
The YANG data model allows also including requests for paths intended
 to modify existing tunnels (e.g., adding a protection path for an
 existing un-protected tunnel). In this case, the per-tunnel
 attributes are already provided in an existing TE tunnel instance and
 do not need to be re-configured in the path computation request RPC.
 Therefore, these requests should reference an existing TE tunnel
 instance.  <vspace blankLines='1'/>
It is also possible to request computing paths without indicating in
 which tunnel they are intended to be used (e.g., in case of an
 unprotected tunnel). In this case, the per-tunnel attributes could be
 provided together with the per-path attributes in the path request,
 without using the tunnel-attributes list.  <vspace blankLines='1'/>
The choices below are defined to distinguish the cases above:</t>
  <t>whether the per-tunnel attributes are configured by reference
(providing a leafref), to:  <list style="symbols">
      <t>either a TE tunnel instance, if it exists;</t>
      <t>or to an entry of the tunnel-attributes list, if the TE tunnel
instance does not exist;</t>
    </list></t>
  <t>or by value, providing the set of tunnel attributes within the
path request:</t>
</list></t>

<figure><artwork><![CDATA[
       |  +-- (tunnel-attributes)?
       |  |  +--:(reference)
       |  |  |  +-- tunnel-reference
       |  |  |     +-- (tunnel-exist)?
       |  |  |     |  +--:(tunnel-ref)
       |  |  |     |  |  +-- tunnel-ref                te:tunnel-ref
       |  |  |     |  +--:(tunnel-attributes-ref)
       |  |  |     |     +-- tunnel-attributes-ref     leafref
       |  |  ...........
       |  |  +--:(value)
       |  |     +-- tunnel-name?                    string
       |  |     ...........
       |  |     +-- encoding?                       identityref
       |  |     +-- switching-type?                 identityref
       |  |     ...........
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<section anchor="tunnel-attributes-specified-by-value"><name>Tunnel attributes specified by value</name>

<t>The (value) case provides the set of attributes that are configured
   only on per-tunnel basis (e.g., tunnel-name, source/destination TTP,
   encoding and switching-type).</t>

<t>In this case, it is assumed that the requested path will be the only
   path within a tunnel.</t>

<t>If the requested path is a transit segment of a multi-domain end-to-
   end path, it can be of any type (primary, secondary, reverse-primary
   or reverse-secondary), as specified by the (path-role) choice:</t>

<figure><artwork><![CDATA[
       |  |     +-- (path-role)?
       |  |     |  +--:(primary-path)
       |  |     |  +--:(secondary-path)
       |  |     |  |  +-- secondary-path!
       |  |     |  |     +-- primary-path-name?   string
       |  |     |  +--:(primary-reverse-path)
       |  |     |  |  +-- primary-reverse-path!
       |  |     |  |     +-- primary-path-name?   string
       |  |     |  +--:(secondary-reverse-path)
       |  |     |     +-- secondary-reverse-path!
       |  |     |        +-- primary-path-name?           string
       |  |     |        +-- primary-reverse-path-name?   string
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>In all the other cases, the requested path can only be a primary
   path.</t>

<t>The secondary-path, the primary-reverse-path and the secondary-
   reverse-path are presence container used to indicate the role of the
   path: by default, the path is assumed to be a primary path.</t>

<t>They optionally can contain the name of the primary-path under which
   the requested path could be associated within the YANG tree structure
   defined in <xref target="I-D.ietf-teas-yang-te"/>, which could be useful when the server also
   creates a TE tunnel instance within the operational datastore to
   report the computed paths, as described in <xref target="temp-state"/>: in this
   case, the tunnel-name and the path names are also used as the
   suggested name for that TE tunnel and path instances.</t>

</section>
<section anchor="tunnel-attributes-specified-by-reference"><name>Tunnel attributes specified by reference</name>

<t>The (reference) case provides the information needed to associate
   multiple path requests that are intended to be used within the same
   tunnel.</t>

<t>In order to indicate the role of the path being requested within the
   intended tunnel (e.g., primary or secondary path), the (path-role)
   choice is defined:</t>

<figure><artwork><![CDATA[
       |  |  |     +-- (path-role)
       |  |  |        +--:(primary-path)
       |  |  |        |  +-- primary-path!
       |  |  |        |     ...........
       |  |  |        +--:(secondary-path)
       |  |  |        |  +-- secondary-path
       |  |  |        |     ...........
       |  |  |        +--:(primary-reverse-path)
       |  |  |        |  +-- primary-reverse-path
       |  |  |        |     ...........
       |  |  |        +--:(secondary-reverse-path)
       |  |  |           +-- secondary-reverse-path
       |  |  |              ...........
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>The primary-path is a presence container used to indicate that the
   requested path is intended to be used as a primary path. It can also
   contain some attributes which are configured only on primary paths
   (e.g., the k-requested-paths).</t>

<t>The secondary-path container indicates that the requested path is
   intended to be used as a secondary path and it contains at least
   references to one or more primary paths which can use it as a
   candidate secondary path:</t>

<figure><artwork><![CDATA[
       |  |  |        |  +-- secondary-path
       |  |  |        |     ...........
       |  |  |        |     +-- primary-path-ref* []
       |  |  |        |        +-- (primary-path-exist)?
       |  |  |        |           +--:(path-ref)
       |  |  |        |           |  +-- primary-path-ref    leafref
       |  |  |        |           +--:(path-request-ref)
       |  |  |        |              +-- path-request-ref    leafref
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>A requested secondary path can reference any requested primary paths,
   and, in case they are intended to be used within an existing TE
   tunnel, it could also reference any existing primary-paths.</t>

<t>The secondary-path container can also contain some attributes which
   are configured only on secondary paths (e.g., the protection-type).</t>

<t>The primary-reverse-path container indicates that the requested path
   is intended to be used as a primary reverse path and it contains only
   the reference to the primary path which is intended to use it as a
   reverse path:</t>

<figure><artwork><![CDATA[
       |  |  |        |  +-- primary-reverse-path
       |  |  |        |     +-- (primary-path-exist)?
       |  |  |        |        +--:(path-ref)
       |  |  |        |        |  +-- primary-path-ref    leafref
       |  |  |        |        +--:(path-request-ref)
       |  |  |        |           +-- path-request-ref    leafref
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>A requested primary reverse path can reference either a requested
   primary path, or, in case it is intended to be used within an
   existing TE tunnel, an existing primary-path.</t>

<t>The secondary-reverse-path container indicates that the requested
   path is intended to be used as a secondary reverse path and it
   contains at least references to one or more primary paths, whose
   primary reverse path can use it as a candidate secondary reverse
   path:</t>

<figure><artwork><![CDATA[
       |  |  |           +-- secondary-reverse-path
       |  |  |              ...........
       |  |  |              +-- primary-reverse-path-ref* []
       |  |  |                 +-- (primary-reverse-path-exist)?
       |  |  |                    +--:(path-ref)
       |  |  |                    |  +-- primary-path-ref    leafref
       |  |  |                    +--:(path-request-ref)
       |  |  |                       +-- path-request-ref    leafref
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>A requested secondary reverse path can reference any requested
   primary paths, and, in case they are intended to be used within an
   existing TE tunnel, it could reference also existing primary-paths.</t>

<t>The secondary-reverse-path container can also contain some attributes
   which are configured only on secondary reverse paths (e.g., the
   protection-type).</t>

<t>In case the requested path is a transit segment of a multi-domain
   end-to-end path, the primary-path may not be needed to be
   setup/computed. However, the request for path computation of a
   secondary-path or a primary-reverse or of a secondary-reverse-path
   requires that the primary-path exists or it is requested within the
   same RPC request. In the latter case, the path request for the
   primary-path should have an empty ERO to indicate to the server that
   path computation is not requested and no path properties will
   therefore be returned in the RPC response.</t>

</section>
</section>
<section anchor="multi-layer-path-computation"><name>Multi-Layer Path Computation</name>

<t>The models supports requesting multi-layer path computation following
   the same approach based on dependency tunnels, as defined in <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>The tunnel-attributes of a given client-layer path request can
   reference server-layer TE tunnels which can already exist in the YANG
   datastore or be specified in the tunnel-attributes list, within the
   same RPC request:</t>

<figure><artwork><![CDATA[
       |     +-- dependency-tunnels
       |     |  +-- dependency-tunnel* [name]
       |     |  |  +-- name              -> /te:te/tunnels/tunnel/name
       |     |  |  +-- encoding?         identityref
       |     |  |  +-- switching-type?   identityref
       |     |  +-- dependency-tunnel-attributes* [name]
       |     |     +-- name              leafref
       |     |     +-- encoding?         identityref
       |     |     +-- switching-type?   identityref
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>In a similar way as in <xref target="I-D.ietf-teas-yang-te"/>, the server-layer tunnel
   attributes should provide the information of what would be the
   dynamic link in the client layer topology supported by that tunnel,
   if instantiated:</t>

<figure><artwork><![CDATA[
       |     +-- hierarchical-link
       |        +-- local-te-node-id?         te-types:te-node-id
       |        +-- local-te-link-tp-id?      te-types:te-tp-id
       |        +-- remote-te-node-id?        te-types:te-node-id
       |        +-- te-topology-identifier
       |           +-- provider-id?   te-global-id
       |           +-- client-id?     te-global-id
       |           +-- topology-id?   te-topology-id
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>It is worth noting that since path computation RPC is stateless, the
   dynamic hierarchical links configured for the server-layer tunnel
   attributes cannot be used for path computation of any client-layer
   path unless explicitly referenced in the dependency-tunnel-attributes
   list within the same RPC request.</t>

</section>
</section>
<section anchor="yang-data-model-for-te-path-computation"><name>YANG data model for TE path computation</name>

<section anchor="pc-tree"><name>Tree diagram</name>

<t><xref target="fig-pc-tree"/> below shows the tree diagram of the YANG data model defined
   in module ietf-te-path-computation.yang, defined in <xref target="pc-yang"/>.</t>

<figure title="TE path computation tree diagram" anchor="fig-pc-tree"><artwork><![CDATA[
module: ietf-te-path-computation

  augment /te:tunnels-path-compute/te:input/te:path-compute-info:
    +-- path-request* [request-id]
    |  +-- request-id                            uint32
    |  +-- (tunnel-attributes)?
    |  |  +--:(reference)
    |  |  |  +-- tunnel-reference
    |  |  |     +-- (tunnel-exist)?
    |  |  |     |  +--:(tunnel-ref)
    |  |  |     |  |  +-- tunnel-ref                te:tunnel-ref
    |  |  |     |  +--:(tunnel-attributes-ref)
    |  |  |     |     +-- tunnel-attributes-ref     leafref
    |  |  |     +-- path-name?                      string
    |  |  |     +-- (path-role)
    |  |  |        +--:(primary-path)
    |  |  |        |  +-- primary-path!
    |  |  |        |     +-- preference?          uint8
    |  |  |        |     +-- k-requested-paths?   uint8
    |  |  |        +--:(secondary-path)
    |  |  |        |  +-- secondary-path
    |  |  |        |     +-- preference?           uint8
    |  |  |        |     +-- protection-type?      identityref
    |  |  |        |     +-- restoration-type?     identityref
    |  |  |        |     +-- restoration-scheme?   identityref
    |  |  |        |     +-- primary-path-ref* []
    |  |  |        |        +-- (primary-path-exist)?
    |  |  |        |           +--:(path-ref)
    |  |  |        |           |  +-- primary-path-ref    leafref
    |  |  |        |           +--:(path-request-ref)
    |  |  |        |              +-- path-request-ref    leafref
    |  |  |        +--:(primary-reverse-path)
    |  |  |        |  +-- primary-reverse-path
    |  |  |        |     +-- (primary-path-exist)?
    |  |  |        |        +--:(path-ref)
    |  |  |        |        |  +-- primary-path-ref    leafref
    |  |  |        |        +--:(path-request-ref)
    |  |  |        |           +-- path-request-ref    leafref
    |  |  |        +--:(secondary-reverse-path)
    |  |  |           +-- secondary-reverse-path
    |  |  |              +-- preference?                 uint8
    |  |  |              +-- protection-type?            identityref
    |  |  |              +-- restoration-type?           identityref
    |  |  |              +-- restoration-scheme?         identityref
    |  |  |              +-- primary-reverse-path-ref* []
    |  |  |                 +-- (primary-reverse-path-exist)?
    |  |  |                    +--:(path-ref)
    |  |  |                    |  +-- primary-path-ref    leafref
    |  |  |                    +--:(path-request-ref)
    |  |  |                       +-- path-request-ref    leafref
    |  |  +--:(value)
    |  |     +-- tunnel-name?                    string
    |  |     +-- path-name?                      string
    |  |     +-- (path-role)?
    |  |     |  +--:(primary-path)
    |  |     |  +--:(secondary-path)
    |  |     |  |  +-- secondary-path!
    |  |     |  |     +-- primary-path-name?   string
    |  |     |  +--:(primary-reverse-path)
    |  |     |  |  +-- primary-reverse-path!
    |  |     |  |     +-- primary-path-name?   string
    |  |     |  +--:(secondary-reverse-path)
    |  |     |     +-- secondary-reverse-path!
    |  |     |        +-- primary-path-name?           string
    |  |     |        +-- primary-reverse-path-name?   string
    |  |     +-- k-requested-paths?              uint8
    |  |     +-- encoding?                       identityref
    |  |     +-- switching-type?                 identityref
    |  |     +-- source?                         te-types:te-node-id
    |  |     +-- destination?                    te-types:te-node-id
    |  |     +-- src-tunnel-tp-id?               binary
    |  |     +-- dst-tunnel-tp-id?               binary
    |  |     +-- bidirectional?                  boolean
    |  |     +-- te-topology-identifier
    |  |        +-- provider-id?   te-global-id
    |  |        +-- client-id?     te-global-id
    |  |        +-- topology-id?   te-topology-id
    |  +-- association-objects
    |  |  +-- association-object* [association-key]
    |  |  |  +-- association-key    string
    |  |  |  +-- type?              identityref
    |  |  |  +-- id?                uint16
    |  |  |  +-- source
    |  |  |     +-- id?     te-gen-node-id
    |  |  |     +-- type?   enumeration
    |  |  +-- association-object-extended* [association-key]
    |  |     +-- association-key    string
    |  |     +-- type?              identityref
    |  |     +-- id?                uint16
    |  |     +-- source
    |  |     |  +-- id?     te-gen-node-id
    |  |     |  +-- type?   enumeration
    |  |     +-- global-source?     uint32
    |  |     +-- extended-id?       yang:hex-string
    |  +-- optimizations
    |  |  +-- (algorithm)?
    |  |     +--:(metric) {path-optimization-metric}?
    |  |     |  +-- optimization-metric* [metric-type]
    |  |     |  |  +-- metric-type                       identityref
    |  |     |  |  +-- weight?                           uint8
    |  |     |  |  +-- explicit-route-exclude-objects
    |  |     |  |  |  +-- route-object-exclude-object* [index]
    |  |     |  |  |     +-- index                        uint32
    |  |     |  |  |     +-- (type)?
    |  |     |  |  |        +--:(numbered-node-hop)
    |  |     |  |  |        |  +-- numbered-node-hop
    |  |     |  |  |        |     +-- node-id     te-node-id
    |  |     |  |  |        |     +-- hop-type?   te-hop-type
    |  |     |  |  |        +--:(numbered-link-hop)
    |  |     |  |  |        |  +-- numbered-link-hop
    |  |     |  |  |        |     +-- link-tp-id    te-tp-id
    |  |     |  |  |        |     +-- hop-type?     te-hop-type
    |  |     |  |  |        |     +-- direction?    te-link-direction
    |  |     |  |  |        +--:(unnumbered-link-hop)
    |  |     |  |  |        |  +-- unnumbered-link-hop
    |  |     |  |  |        |     +-- link-tp-id    te-tp-id
    |  |     |  |  |        |     +-- node-id       te-node-id
    |  |     |  |  |        |     +-- hop-type?     te-hop-type
    |  |     |  |  |        |     +-- direction?    te-link-direction
    |  |     |  |  |        +--:(as-number)
    |  |     |  |  |        |  +-- as-number-hop
    |  |     |  |  |        |     +-- as-number    inet:as-number
    |  |     |  |  |        |     +-- hop-type?    te-hop-type
    |  |     |  |  |        +--:(label)
    |  |     |  |  |        |  +-- label-hop
    |  |     |  |  |        |     +-- te-label
    |  |     |  |  |        |        +-- (technology)?
    |  |     |  |  |        |        |  +--:(generic)
    |  |     |  |  |        |        |     +-- generic?
    |  |     |  |  |        |        |             rt-types:generalized-label
    |  |     |  |  |        |        +-- direction?
    |  |     |  |  |        |                te-label-direction
    |  |     |  |  |        +--:(srlg)
    |  |     |  |  |           +-- srlg
    |  |     |  |  |              +-- srlg?   uint32
    |  |     |  |  +-- explicit-route-include-objects
    |  |     |  |     +-- route-object-include-object* [index]
    |  |     |  |        +-- index                        uint32
    |  |     |  |        +-- (type)?
    |  |     |  |           +--:(numbered-node-hop)
    |  |     |  |           |  +-- numbered-node-hop
    |  |     |  |           |     +-- node-id     te-node-id
    |  |     |  |           |     +-- hop-type?   te-hop-type
    |  |     |  |           +--:(numbered-link-hop)
    |  |     |  |           |  +-- numbered-link-hop
    |  |     |  |           |     +-- link-tp-id    te-tp-id
    |  |     |  |           |     +-- hop-type?     te-hop-type
    |  |     |  |           |     +-- direction?    te-link-direction
    |  |     |  |           +--:(unnumbered-link-hop)
    |  |     |  |           |  +-- unnumbered-link-hop
    |  |     |  |           |     +-- link-tp-id    te-tp-id
    |  |     |  |           |     +-- node-id       te-node-id
    |  |     |  |           |     +-- hop-type?     te-hop-type
    |  |     |  |           |     +-- direction?    te-link-direction
    |  |     |  |           +--:(as-number)
    |  |     |  |           |  +-- as-number-hop
    |  |     |  |           |     +-- as-number    inet:as-number
    |  |     |  |           |     +-- hop-type?    te-hop-type
    |  |     |  |           +--:(label)
    |  |     |  |              +-- label-hop
    |  |     |  |                 +-- te-label
    |  |     |  |                    +-- (technology)?
    |  |     |  |                    |  +--:(generic)
    |  |     |  |                    |     +-- generic?
    |  |     |  |                    |             rt-types:generalized-label
    |  |     |  |                    +-- direction?
    |  |     |  |                            te-label-direction
    |  |     |  +-- tiebreakers
    |  |     |     +-- tiebreaker* [tiebreaker-type]
    |  |     |        +-- tiebreaker-type    identityref
    |  |     +--:(objective-function)
    |  |              {path-optimization-objective-function}?
    |  |        +-- objective-function
    |  |           +-- objective-function-type?   identityref
    |  +-- named-path-constraint?                leafref
    |  |       {te-types:named-path-constraints}?
    |  +-- te-bandwidth
    |  |  +-- (technology)?
    |  |     +--:(generic)
    |  |        +-- generic?   te-bandwidth
    |  +-- link-protection?                      identityref
    |  +-- setup-priority?                       uint8
    |  +-- hold-priority?                        uint8
    |  +-- signaling-type?                       identityref
    |  +-- path-metric-bounds
    |  |  +-- path-metric-bound* [metric-type]
    |  |     +-- metric-type    identityref
    |  |     +-- upper-bound?   uint64
    |  +-- path-affinities-values
    |  |  +-- path-affinities-value* [usage]
    |  |     +-- usage    identityref
    |  |     +-- value?   admin-groups
    |  +-- path-affinity-names
    |  |  +-- path-affinity-name* [usage]
    |  |     +-- usage            identityref
    |  |     +-- affinity-name* [name]
    |  |        +-- name    string
    |  +-- path-srlgs-lists
    |  |  +-- path-srlgs-list* [usage]
    |  |     +-- usage     identityref
    |  |     +-- values*   srlg
    |  +-- path-srlgs-names
    |  |  +-- path-srlgs-name* [usage]
    |  |     +-- usage    identityref
    |  |     +-- names*   string
    |  +-- disjointness?                         te-path-disjointness
    |  +-- explicit-route-objects-always
    |  |  +-- route-object-exclude-always* [index]
    |  |  |  +-- index                        uint32
    |  |  |  +-- (type)?
    |  |  |     +--:(numbered-node-hop)
    |  |  |     |  +-- numbered-node-hop
    |  |  |     |     +-- node-id     te-node-id
    |  |  |     |     +-- hop-type?   te-hop-type
    |  |  |     +--:(numbered-link-hop)
    |  |  |     |  +-- numbered-link-hop
    |  |  |     |     +-- link-tp-id    te-tp-id
    |  |  |     |     +-- hop-type?     te-hop-type
    |  |  |     |     +-- direction?    te-link-direction
    |  |  |     +--:(unnumbered-link-hop)
    |  |  |     |  +-- unnumbered-link-hop
    |  |  |     |     +-- link-tp-id    te-tp-id
    |  |  |     |     +-- node-id       te-node-id
    |  |  |     |     +-- hop-type?     te-hop-type
    |  |  |     |     +-- direction?    te-link-direction
    |  |  |     +--:(as-number)
    |  |  |     |  +-- as-number-hop
    |  |  |     |     +-- as-number    inet:as-number
    |  |  |     |     +-- hop-type?    te-hop-type
    |  |  |     +--:(label)
    |  |  |        +-- label-hop
    |  |  |           +-- te-label
    |  |  |              +-- (technology)?
    |  |  |              |  +--:(generic)
    |  |  |              |     +-- generic?
    |  |  |              |             rt-types:generalized-label
    |  |  |              +-- direction?       te-label-direction
    |  |  +-- route-object-include-exclude* [index]
    |  |     +-- explicit-route-usage?        identityref
    |  |     +-- index                        uint32
    |  |     +-- (type)?
    |  |        +--:(numbered-node-hop)
    |  |        |  +-- numbered-node-hop
    |  |        |     +-- node-id     te-node-id
    |  |        |     +-- hop-type?   te-hop-type
    |  |        +--:(numbered-link-hop)
    |  |        |  +-- numbered-link-hop
    |  |        |     +-- link-tp-id    te-tp-id
    |  |        |     +-- hop-type?     te-hop-type
    |  |        |     +-- direction?    te-link-direction
    |  |        +--:(unnumbered-link-hop)
    |  |        |  +-- unnumbered-link-hop
    |  |        |     +-- link-tp-id    te-tp-id
    |  |        |     +-- node-id       te-node-id
    |  |        |     +-- hop-type?     te-hop-type
    |  |        |     +-- direction?    te-link-direction
    |  |        +--:(as-number)
    |  |        |  +-- as-number-hop
    |  |        |     +-- as-number    inet:as-number
    |  |        |     +-- hop-type?    te-hop-type
    |  |        +--:(label)
    |  |        |  +-- label-hop
    |  |        |     +-- te-label
    |  |        |        +-- (technology)?
    |  |        |        |  +--:(generic)
    |  |        |        |     +-- generic?
    |  |        |        |             rt-types:generalized-label
    |  |        |        +-- direction?       te-label-direction
    |  |        +--:(srlg)
    |  |           +-- srlg
    |  |              +-- srlg?   uint32
    |  +-- path-in-segment!
    |  |  +-- label-restrictions
    |  |     +-- label-restriction* [index]
    |  |        +-- restriction?    enumeration
    |  |        +-- index           uint32
    |  |        +-- label-start
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-end
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-step
    |  |        |  +-- (technology)?
    |  |        |     +--:(generic)
    |  |        |        +-- generic?   int32
    |  |        +-- range-bitmap?   yang:hex-string
    |  +-- path-out-segment!
    |  |  +-- label-restrictions
    |  |     +-- label-restriction* [index]
    |  |        +-- restriction?    enumeration
    |  |        +-- index           uint32
    |  |        +-- label-start
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-end
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-step
    |  |        |  +-- (technology)?
    |  |        |     +--:(generic)
    |  |        |        +-- generic?   int32
    |  |        +-- range-bitmap?   yang:hex-string
    |  +-- requested-metrics* [metric-type]
    |  |  +-- metric-type    identityref
    |  +-- return-srlgs?                         boolean
    |  +-- return-affinities?                    boolean
    |  +-- requested-state!
    |     +-- timer?            uint16
    |     +-- transaction-id?   string
    +-- tunnel-attributes* [tunnel-name]
    |  +-- tunnel-name               string
    |  +-- encoding?                 identityref
    |  +-- switching-type?           identityref
    |  +-- source?                   te-types:te-node-id
    |  +-- destination?              te-types:te-node-id
    |  +-- src-tunnel-tp-id?         binary
    |  +-- dst-tunnel-tp-id?         binary
    |  +-- bidirectional?            boolean
    |  +-- association-objects
    |  |  +-- association-object* [association-key]
    |  |  |  +-- association-key    string
    |  |  |  +-- type?              identityref
    |  |  |  +-- id?                uint16
    |  |  |  +-- source
    |  |  |     +-- id?     te-gen-node-id
    |  |  |     +-- type?   enumeration
    |  |  +-- association-object-extended* [association-key]
    |  |     +-- association-key    string
    |  |     +-- type?              identityref
    |  |     +-- id?                uint16
    |  |     +-- source
    |  |     |  +-- id?     te-gen-node-id
    |  |     |  +-- type?   enumeration
    |  |     +-- global-source?     uint32
    |  |     +-- extended-id?       yang:hex-string
    |  +-- protection-type?          identityref
    |  +-- restoration-type?         identityref
    |  +-- restoration-scheme?       identityref
    |  +-- te-topology-identifier
    |  |  +-- provider-id?   te-global-id
    |  |  +-- client-id?     te-global-id
    |  |  +-- topology-id?   te-topology-id
    |  +-- te-bandwidth
    |  |  +-- (technology)?
    |  |     +--:(generic)
    |  |        +-- generic?   te-bandwidth
    |  +-- link-protection?          identityref
    |  +-- setup-priority?           uint8
    |  +-- hold-priority?            uint8
    |  +-- signaling-type?           identityref
    |  +-- hierarchy
    |     +-- dependency-tunnels
    |     |  +-- dependency-tunnel* [name]
    |     |  |  +-- name              -> /te:te/tunnels/tunnel/name
    |     |  |  +-- encoding?         identityref
    |     |  |  +-- switching-type?   identityref
    |     |  +-- dependency-tunnel-attributes* [name]
    |     |     +-- name              leafref
    |     |     +-- encoding?         identityref
    |     |     +-- switching-type?   identityref
    |     +-- hierarchical-link
    |        +-- local-te-node-id?         te-types:te-node-id
    |        +-- local-te-link-tp-id?      te-types:te-tp-id
    |        +-- remote-te-node-id?        te-types:te-node-id
    |        +-- te-topology-identifier
    |           +-- provider-id?   te-global-id
    |           +-- client-id?     te-global-id
    |           +-- topology-id?   te-topology-id
    +-- synchronization* []
       +-- svec
       |  +-- relaxable?           boolean
       |  +-- disjointness?        te-path-disjointness
       |  +-- request-id-number*   uint32
       +-- svec-constraints
       |  +-- path-metric-bound* [metric-type]
       |     +-- metric-type    identityref
       |     +-- upper-bound?   uint64
       +-- path-srlgs-lists
       |  +-- path-srlgs-list* [usage]
       |     +-- usage     identityref
       |     +-- values*   srlg
       +-- path-srlgs-names
       |  +-- path-srlgs-name* [usage]
       |     +-- usage    identityref
       |     +-- names*   string
       +-- exclude-objects
       |  +-- excludes* []
       |     +-- (type)?
       |        +--:(numbered-node-hop)
       |        |  +-- numbered-node-hop
       |        |     +-- node-id     te-node-id
       |        |     +-- hop-type?   te-hop-type
       |        +--:(numbered-link-hop)
       |        |  +-- numbered-link-hop
       |        |     +-- link-tp-id    te-tp-id
       |        |     +-- hop-type?     te-hop-type
       |        |     +-- direction?    te-link-direction
       |        +--:(unnumbered-link-hop)
       |        |  +-- unnumbered-link-hop
       |        |     +-- link-tp-id    te-tp-id
       |        |     +-- node-id       te-node-id
       |        |     +-- hop-type?     te-hop-type
       |        |     +-- direction?    te-link-direction
       |        +--:(as-number)
       |        |  +-- as-number-hop
       |        |     +-- as-number    inet:as-number
       |        |     +-- hop-type?    te-hop-type
       |        +--:(label)
       |           +-- label-hop
       |              +-- te-label
       |                 +-- (technology)?
       |                 |  +--:(generic)
       |                 |     +-- generic?
       |                 |             rt-types:generalized-label
       |                 +-- direction?       te-label-direction
       +-- optimizations
          +-- (algorithm)?
             +--:(metric) {te-types:path-optimization-metric}?
             |  +-- optimization-metric* [metric-type]
             |     +-- metric-type    identityref
             |     +-- weight?        uint8
             +--:(objective-function)
                      {te-types:path-optimization-objective-function}?
                +-- objective-function
                   +-- objective-function-type?   identityref
  augment /te:tunnels-path-compute/te:output/te:path-compute-result:
    +--ro response* [response-id]
       +--ro response-id                         uint32
       +--ro computed-paths-properties
       |  +--ro computed-path-properties* [k-index]
       |     +--ro k-index            uint8
       |     +--ro path-properties
       |        +--ro path-metric* [metric-type]
       |        |  +--ro metric-type           identityref
       |        |  +--ro accumulative-value?   uint64
       |        +--ro path-affinities-values
       |        |  +--ro path-affinities-value* [usage]
       |        |     +--ro usage    identityref
       |        |     +--ro value?   admin-groups
       |        +--ro path-affinity-names
       |        |  +--ro path-affinity-name* [usage]
       |        |     +--ro usage            identityref
       |        |     +--ro affinity-name* [name]
       |        |        +--ro name    string
       |        +--ro path-srlgs-lists
       |        |  +--ro path-srlgs-list* [usage]
       |        |     +--ro usage     identityref
       |        |     +--ro values*   srlg
       |        +--ro path-srlgs-names
       |        |  +--ro path-srlgs-name* [usage]
       |        |     +--ro usage    identityref
       |        |     +--ro names*   string
       |        +--ro path-route-objects
       |        |  +--ro path-route-object* [index]
       |        |     +--ro index                        uint32
       |        |     +--ro (type)?
       |        |        +--:(numbered-node-hop)
       |        |        |  +--ro numbered-node-hop
       |        |        |     +--ro node-id     te-node-id
       |        |        |     +--ro hop-type?   te-hop-type
       |        |        +--:(numbered-link-hop)
       |        |        |  +--ro numbered-link-hop
       |        |        |     +--ro link-tp-id    te-tp-id
       |        |        |     +--ro hop-type?     te-hop-type
       |        |        |     +--ro direction?    te-link-direction
       |        |        +--:(unnumbered-link-hop)
       |        |        |  +--ro unnumbered-link-hop
       |        |        |     +--ro link-tp-id    te-tp-id
       |        |        |     +--ro node-id       te-node-id
       |        |        |     +--ro hop-type?     te-hop-type
       |        |        |     +--ro direction?    te-link-direction
       |        |        +--:(as-number)
       |        |        |  +--ro as-number-hop
       |        |        |     +--ro as-number    inet:as-number
       |        |        |     +--ro hop-type?    te-hop-type
       |        |        +--:(label)
       |        |           +--ro label-hop
       |        |              +--ro te-label
       |        |                 +--ro (technology)?
       |        |                 |  +--:(generic)
       |        |                 |     +--ro generic?
       |        |                 |             rt-types:generalized-label
       |        |                 +--ro direction?
       |        |                         te-label-direction
       |        +--ro te-bandwidth
       |        |  +--ro (technology)?
       |        |     +--:(generic)
       |        |        +--ro generic?   te-bandwidth
       |        +--ro disjointness-type?
       |                te-types:te-path-disjointness
       +--ro computed-path-error-infos
       |  +--ro computed-path-error-info* []
       |     +--ro error-description?   string
       |     +--ro error-timestamp?     yang:date-and-time
       |     +--ro error-reason?        identityref
       +--ro tunnel-ref?                         te:tunnel-ref
       +--ro (path-role)?
          +--:(primary)
          |  +--ro primary-path-ref?             leafref
          +--:(primary-reverse)
          |  +--ro primary-reverse-path-ref?     leafref
          +--:(secondary)
          |  +--ro secondary-path-ref?           leafref
          +--:(secondary-reverse)
             +--ro secondary-reverse-path-ref?   leafref
  augment /te:tunnels-actions/te:input/te:tunnel-info/te:filter-type:
    +--:(path-compute-transactions)
       +-- path-compute-transaction-id*   string
  augment /te:tunnels-actions/te:output:
    +--ro path-computed-delete-result
       +--ro path-compute-transaction-id*   string
]]></artwork></figure>

</section>
<section anchor="pc-yang"><name>YANG module</name>

<figure title="TE path computation YANG module" anchor="fig-pc-yang"><artwork><![CDATA[
<CODE BEGINS> file "ietf-te-path-computation@2022-01-13.yang"
module ietf-te-path-computation {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-te-path-computation";
  prefix te-pc;

  import ietf-te {
    prefix te;
    revision-date "2021-02-20";
    reference
      "RFCYYYY: A YANG Data Model for Traffic Engineering Tunnels
       and Interfaces";
  }

  /* Note: The RFC Editor will replace YYYY with the number assigned
     to the RFC once draft-ietf-teas-yang-te becomes an RFC.*/

  import ietf-te-types {
    prefix te-types;
    reference
      "RFC8776: Common YANG Data Types for Traffic Engineering.";
  }

  organization
    "Traffic Engineering Architecture and Signaling (TEAS)
     Working Group";
  contact
    "WG Web:   <http://tools.ietf.org/wg/teas/>
     WG List:  <mailto:teas@ietf.org>

     Editor:   Italo Busi
               <mailto:italo.busi@huawei.com>

     Editor:   Sergio Belotti
               <mailto:sergio.belotti@nokia.com>

     Editor:   Victor Lopez
               <mailto:victor.lopez@nokia.com>

     Editor:   Oscar Gonzalez de Dios
               <mailto:oscar.gonzalezdedios@telefonica.com>

     Editor:   Anurag Sharma
               <mailto:ansha@google.com>

     Editor:   Yan Shi
               <mailto:shiyan49@chinaunicom.cn>

     Editor:   Ricard Vilalta
               <mailto:ricard.vilalta@cttc.es>

     Editor:   Karthik Sethuraman
               <mailto:karthik.sethuraman@necam.com>

     Editor:   Michael Scharf
               <mailto:michael.scharf@gmail.com>

     Editor:   Daniele Ceccarelli
               <mailto:daniele.ceccarelli@ericsson.com>
     
    ";
  description
    "This module defines a YANG data model for requesting Traffic
     Engineering (TE) path computation. The YANG model defined in
     this document is based on RPCs augmenting the RPCs defined in
     the generic TE module (ietf-te).
     The model fully conforms to the
     Network Management Datastore Architecture (NMDA).

     Copyright (c) 2022 IETF Trust and the persons
     identified as authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject
     to the license terms contained in, the Simplified BSD License
     set forth in Section 4.c of the IETF Trust's Legal Provisions

     Relating to IETF Documents
     (http://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC XXXX; see
     the RFC itself for full legal notices.";

  // RFC Ed.: replace XXXX with actual RFC number and remove
  // this note
  // replace the revision date with the module publication date
  // the format is (year-month-day)

<<<<<<< Updated upstream
  revision 2021-08-04 {
=======
  revision 2022-01-13 {
>>>>>>> Stashed changes
    description
      "Initial revision";
    reference
      "RFC XXXX: A YANG Data Model for requesting Path Computation";
  }

  // RFC Ed.: replace XXXX with actual RFC number and remove
  // this note

  /*
   * Identities
   */

  identity svec-metric-type {
    description
      "Base identity for SVEC metric type.";
    reference
      "RFC5541: Encoding of Objective Functions in the Path
       Computation Element Communication Protocol (PCEP).";
  }

  identity svec-metric-cumul-te {
    base svec-metric-type;
    description
      "Cumulative TE cost.";
    reference
      "RFC5541: Encoding of Objective Functions in the Path
       Computation Element Communication Protocol (PCEP).";
  }

  identity svec-metric-cumul-igp {
    base svec-metric-type;
    description
      "Cumulative IGP cost.";
    reference
      "RFC5541: Encoding of Objective Functions in the Path
       Computation Element Communication Protocol (PCEP).";
  }

  identity svec-metric-cumul-hop {
    base svec-metric-type;
    description
      "Cumulative Hop path metric.";
    reference
      "RFC8776: Common YANG Data Types for Traffic Engineering.";
  }

  identity svec-metric-aggregate-bandwidth-consumption {
    base svec-metric-type;
    description
      "Aggregate bandwidth consumption.";
    reference
      "RFC5541: Encoding of Objective Functions in the Path
       Computation Element Communication Protocol (PCEP).";
  }

  identity svec-metric-load-of-the-most-loaded-link {
    base svec-metric-type;
    description
      "Load of the most loaded link.";
    reference
      "RFC5541: Encoding of Objective Functions in the Path
       Computation Element Communication Protocol (PCEP).";
  }

  identity tunnel-action-path-compute-delete {
    base te:tunnel-actions-type;
    description
      "Action type to delete the transient states
       of computed paths, as described in section 3.3.1 of
       RFC XXXX.";
    reference
      "RFC XXXX: A YANG Data Model for requesting Path Computation";
  }

  /*
   * Groupings
   */

  grouping protection-restoration-properties {
    description
      "This grouping defines the restoration and protection types
       for a path in the path computation request.";
    leaf protection-type {
      type identityref {
        base te-types:lsp-protection-type;
      }
      default "te-types:lsp-protection-unprotected";
      description
        "LSP protection type.";
    }
    leaf restoration-type {
      type identityref {
        base te-types:lsp-restoration-type;
      }
      default "te-types:lsp-restoration-restore-any";
      description
        "LSP restoration type.";
    }
    leaf restoration-scheme {
      type identityref {
        base te-types:restoration-scheme-type;
      }
      default "te-types:restoration-scheme-preconfigured";
      description
        "LSP restoration scheme.";
    }
  } // grouping protection-restoration-properties

  grouping requested-info {
    description
      "This grouping defines the information (e.g., metrics)
       which is requested, in the path computation request, to be
       returned in the path computation response.";
    list requested-metrics {
      key "metric-type";
      description
        "The list of the requested metrics.
         The metrics listed here must be returned in the response.
         Returning other metrics in the response is optional.";
      leaf metric-type {
        type identityref {
          base te-types:path-metric-type;
        }
        description
          "The metric that must be returned in the response";
      }
    }
    leaf return-srlgs {
      type boolean;
      default "false";
      description
        "If true, path srlgs must be returned in the response.
         If false, returning path srlgs in the response optional.";
    }
    leaf return-affinities {
      type boolean;
      default "false";
      description
        "If true, path affinities must be returned in the response.
         If false, returning path affinities in the response is
         optional.";
    }
  } // grouping requested-info

  grouping requested-state {
    description
      "Configuration for the transient state used
       to report the computed path";
    container requested-state {
      presence
        "Request temporary reporting of the computed path state";
      description
        "Configures attributes for the temporary reporting of the
         computed path state (e.g., expiration timer).";
      leaf timer {
        type uint16;
        units "minutes";
        default "10";
        description
          "The timeout after which the transient state reporting
          the computed path should be removed.";
      }
      leaf transaction-id {
        type string;
        description
          "The transaction-id associated with this path computation
          to be used for fast deletion of the transient states
          associated with multiple path computations.

          This transaction-id can be used to explicitly delete all
          the transient states of all the computed paths associated
          with the same transaction-id.

          When one path associated with a transaction-id is setup,
          the transient states of all the other computed paths
          with the same transaction-id are automatically removed.

          If not specified, the transient state is removed only
          when the timer expires (when the timer is specified)
          or not created at all (stateless path computation,
          when the timer is not specified).";
      }
    }
  } // grouping requested-state

  grouping reported-state {
    description
      "This grouping defines the information, returned in the path
       computation response, reporting the transient state related
       to the computed path";
    leaf tunnel-ref {
      type te:tunnel-ref;
      description
        "
         Reference to the tunnel that reports the transient state
         of the computed path.

         If no transient state is created, this attribute is
         omitted.
        ";
    }
    choice path-role {
      description
        "The transient state of the computed path can be reported
         as a primary, primary-reverse, secondary or
         a secondary-reverse path of a te-tunnel";
      case primary {
        leaf primary-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:primary-paths/te:primary-path/"
               + "te:name";
          }
          must '../tunnel-ref' {
            description
              "The primary-path name can only be reported
               if also the tunnel name is reported.";
          }
          description
            "
             Reference to the primary-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case primary
      case primary-reverse {
        leaf primary-reverse-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:primary-paths/te:primary-path/"
               + "te:name";
          }
          must '../tunnel-ref' {
            description
              "The primary-reverse-path name can only be reported
               if also the tunnel name is reported.";
          }
          description
            "
             Reference to the primary-reverse-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case primary-reverse
      case secondary {
        leaf secondary-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:secondary-paths/te:secondary-path/"
               + "te:name";
          }
          must '../tunnel-ref' {
            description
              "The secondary-path name can only be reported
               if also the tunnel name is reported.";
          }
          description
            "
             Reference to the secondary-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case secondary
      case secondary-reverse {
        leaf secondary-reverse-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:secondary-reverse-paths/"
               + "te:secondary-reverse-path/te:name";
          }
          must '../tunnel-ref' {
            description
              "The secondary-reverse-path name can only be reported
               if also the tunnel name is reported.";
          }
          description
            "
             Reference to the secondary-reverse-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case secondary
    } // choice path
  } // grouping reported-state

  grouping synchronization-constraints {
    description
      "Global constraints applicable to synchronized path
       computation requests.";
    container svec-constraints {
      description
        "global svec constraints";
      list path-metric-bound {
        key "metric-type";
        description
          "list of bound metrics";
        leaf metric-type {
          type identityref {
            base svec-metric-type;
          }
          description
            "SVEC metric type.";
          reference
            "RFC5541: Encoding of Objective Functions in the Path
            Computation Element Communication Protocol (PCEP).";
        }
        leaf upper-bound {
          type uint64;
          description
            "Upper bound on SVEC metric";
        }
      }
    }
    uses te-types:generic-path-srlgs;
    container exclude-objects {
      description
        "Resources to be excluded";
      list excludes {
        description
          "List of Explicit Route Objects to always exclude
           from synchronized path computation";
        uses te-types:explicit-route-hop;
      }
    }
  } // grouping synchronization-constraints

  grouping synchronization-optimization {
    description
      "Optimizations applicable to synchronized path
       computation requests.";
    container optimizations {
      description
        "The objective function container that includes attributes
         to impose when computing a synchronized set of paths";
      choice algorithm {
        description
          "Optimizations algorithm.";
        case metric {
          if-feature "te-types:path-optimization-metric";
          list optimization-metric {
            key "metric-type";
            description
              "svec path metric type";
            leaf metric-type {
              type identityref {
                base svec-metric-type;
              }
              description
                "TE path metric type usable for computing a set of
                synchronized requests";
            }
            leaf weight {
              type uint8;
              description
                "Metric normalization weight";
            }
          }
        }
        case objective-function {
          if-feature
            "te-types:path-optimization-objective-function";
          container objective-function {
            description
              "The objective function container that includes
               attributes to impose when computing a TE path";
            leaf objective-function-type {
              type identityref {
                base te-types:objective-function-type;
              }
              default "te-types:of-minimize-cost-path";
              description
                "Objective function entry";
            }
          }
        }
      }
    }
  } // grouping synchronization-optimization

  grouping synchronization-info {
    description
      "Information for synchronized path computation requests.";
    list synchronization {
      description
        "List of Synchronization VECtors.";
      container svec {
        description
          "Synchronization VECtor";
        leaf relaxable {
          type boolean;
          default "true";
          description
            "If this leaf is true, path computation process is
             free to ignore svec content.
             Otherwise, it must take into account this svec.";
        }
        uses te-types:generic-path-disjointness;
        leaf-list request-id-number {
          type uint32;
          description
            "This list reports the set of path computation
             requests that must be synchronized.";
        }
      }
      uses synchronization-constraints;
      uses synchronization-optimization;
    }
  } // grouping synchronization-info

  grouping encoding-and-switching-type {
    description
      "Common grouping to define the LSP encoding and
       switching types";
    leaf encoding {
      type identityref {
        base te-types:lsp-encoding-types;
      }
      default "te-types:lsp-encoding-packet";
      description
        "LSP encoding type.";
      reference
        "RFC3945";
    }
    leaf switching-type {
      type identityref {
        base te-types:switching-capabilities;
      }
      default "te-types:switching-psc1";
      description
        "LSP switching type.";
      reference
        "RFC3945";
    }
  }

  grouping tunnel-common-attributes {
    description
      "Common grouping to define the TE tunnel parameters";
    uses encoding-and-switching-type;
    leaf source {
      type te-types:te-node-id;
      description
        "TE tunnel source node ID.";
    }
    leaf destination {
      type te-types:te-node-id;
      description
        "TE tunnel destination node identifier.";
    }
    leaf src-tunnel-tp-id {
      type binary;
      description
        "TE tunnel source termination point identifier.";
    }
    leaf dst-tunnel-tp-id {
      type binary;
      description
        "TE tunnel destination termination point identifier.";
    }
    leaf bidirectional {
      type boolean;
      default "false";
      description
        "Indicates a bidirectional co-routed LSP.";
    }
  }

  /*
   * Augment TE RPCs
   */

  augment "/te:tunnels-path-compute/te:input/te:path-compute-info" {
    description
      "Path Computation RPC input";
    list path-request {
      key "request-id";
      description
        "The list of the requested paths to be computed";
      leaf request-id {
        type uint32;
        mandatory true;
        description
          "Each path computation request is uniquely identified
           within the RPC request by the request-id-number.";
      }
      choice tunnel-attributes {
        default "value";
        description
          "Whether the tunnel attributes are specified by value
           within this path computation request or by reference.
           The reference could be either to an existing te-tunnel
           or to an entry in the tunnel-attributes list";
        case reference {
          container tunnel-reference {
            description
              "Attributes for a requested path that belongs to
              either an exiting te-tunnel or to an entry in the
              tunnel-attributes list.";
            choice tunnel-exist {
              description
                "Whether the tunnel reference is to an existing
                te-tunnel or to an entry in the tunnel-attributes
                list";
              case tunnel-ref {
                leaf tunnel-ref {
                  type te:tunnel-ref;
                  mandatory true;
                  description
                    "The referenced te-tunnel instance";
                }
              } // case tunnel-ref
              case tunnel-attributes-ref {
                leaf tunnel-attributes-ref {
                  type leafref {
                    path "/te:tunnels-path-compute/"
                      + "te:path-compute-info/"
                      + "te-pc:tunnel-attributes/te-pc:tunnel-name";
                  }
                  mandatory true;
                  description
                    "The referenced te-tunnel instance";
                }
              } // case tunnel-attributes-ref 
            } // choice tunnel-exist
            leaf path-name {
              type string;
              description
                "TE path name.";
            }
            choice path-role {
              mandatory true;
              description
                "Whether this path is a primary, or a reverse
                primary, or a secondary, or a reverse secondary
                path.";
              case primary-path {
                container primary-path {
                  presence "Indicates that the requested path
                            is a primary path";
                  description
                    "TE primary path";
                  uses te:path-preference;
                  uses te:k-requested-paths;
                } // container primary-path
              } // case primary-path
              case secondary-path {
                container secondary-path {
                  description
                    "TE secondary path";
                  uses te:path-preference;
                  uses protection-restoration-properties;
                  list primary-path-ref {
                    min-elements 1;
                    description
                      "The list of primary paths that reference
                      this path as a candidate secondary path";
                    choice primary-path-exist {
                      description
                        "Whether the path reference is to an existing
                        te-tunnel path or to another path request";
                      case path-ref {
                        leaf primary-path-ref {
                          type leafref {
                            path "/te:te/te:tunnels/te:tunnel"
                              + "[te:name=current()/../../../"
                              + "tunnel-ref]/te:primary-paths/"
                              + "te:primary-path/te:name";
                          }
                          must '../../../tunnel-ref' {
                            description
                              "The primary-path can be referenced
                              if also the tunnel is referenced.";
                          }
                          mandatory true;
                          description
                            "The referenced primary path";
                        }
                      } // case path-ref
                      case path-request-ref {
                        leaf path-request-ref {
                          type leafref {
                            path "/te:tunnels-path-compute/"
                              + "te:path-compute-info/"
                              + "te-pc:path-request/"
                              + "te-pc:request-id";
                          }
                          mandatory true;
                          description
                            "The referenced primary path request";
                        }
                      } // case path-request-ref 
                    } // choice primary-path-exist
                  } // list primary-path-ref
                } // container secondary-path
              } // case secondary-path
              case primary-reverse-path {
                container primary-reverse-path {
                  description
                    "TE primary reverse path";
                  choice primary-path-exist {
                    description
                      "Whether the path reference to the primary
                      paths for which this path is the reverse-path
                      is to an existing te-tunnel path or to
                      another path request.";
                    case path-ref {
                      leaf primary-path-ref {
                        type leafref {
                          path "/te:te/te:tunnels/te:tunnel[te:name"
                            + "=current()/../../tunnel-ref]/"
                            + "te:primary-paths/te:primary-path/"
                            + "te:name";
                        }
                        must '../../tunnel-ref' {
                          description
                            "The primary-path can be referenced
                            if also the tunnel is referenced.";
                        }
                        mandatory true;
                        description
                          "The referenced primary path";
                      }
                    } // case path-ref
                    case path-request-ref {
                      leaf path-request-ref {
                        type leafref {
                          path "/te:tunnels-path-compute/"
                            + "te:path-compute-info/"
                            + "te-pc:path-request/"
                            + "te-pc:request-id";
                        }
                        mandatory true;
                        description
                          "The referenced primary path request";
                      }
                    } // case path-request-ref 
                  } // choice primary-path-exist
                } // container primary-reverse-path
              } // case primary-reverse-path
              case secondary-reverse-path {
                container secondary-reverse-path {
                  description
                    "TE secondary reverse path";
                  uses te:path-preference;
                  uses protection-restoration-properties;
                  list primary-reverse-path-ref {
                    min-elements 1;
                    description
                      "The list of primary reverse paths that
                      reference this path as a candidate
                      secondary reverse path";
                    choice primary-reverse-path-exist {
                      description
                        "Whether the path reference is to an existing
                        te-tunnel path or to another path request";
                      case path-ref {
                        leaf primary-path-ref {
                          type leafref {
                            path "/te:te/te:tunnels/te:tunnel"
                              + "[te:name=current()/../../../"
                              + "tunnel-ref]/te:primary-paths/"
                              + "te:primary-path/te:name";
                          }
                          must '../../../tunnel-ref' {
                            description
                              "The primary-path can be referenced
                              if also the tunnel is referenced.";
                          }
                          mandatory true;
                          description
                            "The referenced primary path";
                        }
                      } // case path-ref
                      case path-request-ref {
                        leaf path-request-ref {
                          type leafref {
                            path "/te:tunnels-path-compute/"
                              + "te:path-compute-info/"
                              + "te-pc:path-request/"
                              + "te-pc:request-id";
                          }
                          mandatory true;
                          description
                            "The referenced primary reverse path
                            request";
                        }
                      } // case path-request-ref 
                    } // choice primary-reverse-path-exist
                  } // list primary-reverse-path-ref
                } // container secondary-reverse-path
              } // case secondary-reverse-path
            } // choice tunnel-path-role
          }
        } // case reference
        case value {
          leaf tunnel-name {
            type string;
            description
              "TE tunnel name.";
          }
          leaf path-name {
            type string;
            description
              "TE path name.";
          }
          choice path-role {
            when 'not (./source) and not (./destination) and
                  not (./src-tunnel-tp-id) and
                  not (./dst-tunnel-tp-id)' {
              description
                "When the tunnel attributes are specified by value
                within this path computation, it is assumed that the
                requested path will be the only path of a tunnel.

                If the requested path is a transit segment path, it
                could be of any type. Otherwise it could only be a
                primary path.";
            }
            default primary-path;
            description
              "Indicates whether the requested path is a primary
              path, a secondary path, a reverse primary path or a
              reverse secondary path.";
            case primary-path {
              description
                "The requested path is a primary path.";
            }
            container secondary-path {
              presence
                "Indicates that the requested path is a secondary
                path.";
              description
                "The name of the primary path which the requested
                primary reverse path belongs to.";
              leaf primary-path-name {
                type string;
                description
                  "TE primary path name.";
              }
            } // container secondary-path
            container primary-reverse-path {
              presence
                "Indicates that the requested path is a primary
                reverse path.";
              description
                "The name of the primary path which the requested
                primary reverse path belongs to.";
              leaf primary-path-name {
                type string;
                description
                  "TE primary path name.";
              }
            } // container primary-reverse-path
            container secondary-reverse-path {
              presence
                "Indicates that the requested path is a secondary
                reverse path.";
              description
                "The names of the primary path and of the primary
                reverse path which the requested secondary reverse
                path belongs to.";
              leaf primary-path-name {
                type string;
                description
                  "TE primary path name.";
              }
              leaf primary-reverse-path-name {
                type string;
                description
                  "TE primary reverse path name.";
              }
            } // container primary-reverse-path
          } // choice path-role
          uses te:k-requested-paths;
          uses tunnel-common-attributes;
          uses te-types:te-topology-identifier;
        } // case value
      } // choice tunnel-attributes
      uses te:path-compute-info;
      uses requested-info;
      uses requested-state;
    }
    list tunnel-attributes {
      key "tunnel-name";
      description
        "Tunnel attributes common to multiple request paths";
      leaf tunnel-name {
        type string;
        description
          "TE tunnel name.";
      }
      uses tunnel-common-attributes;
      uses te:tunnel-associations-properties;
      uses protection-restoration-properties;
      uses te-types:tunnel-constraints;
      uses te:tunnel-hierarchy-properties {
        augment "hierarchy/dependency-tunnels" {
          description
            "Augment with the list of dependency tunnel requests.";
          list dependency-tunnel-attributes {
            key "name";
            description
              "A tunnel request entry that this tunnel request can
               potentially depend on.";
            leaf name {
              type leafref {
                path "/te:tunnels-path-compute/"
                   + "te:path-compute-info/te-pc:tunnel-attributes/"
                   + "te-pc:tunnel-name";
              }
              description
                "Dependency tunnel request name.";
            }
            uses encoding-and-switching-type;
          }
        }
      }
    }
    uses synchronization-info;
  } // path-compute rpc input

  augment "/te:tunnels-path-compute/te:output/"
        + "te:path-compute-result" {
    description
      "Path Computation RPC output";
    list response {
      key "response-id";
      config false;
      description
        "response";
      leaf response-id {
        type uint32;
        description
          "The response-id has the same value of the
           corresponding request-id.";
      }
      uses te:path-computation-response;
      uses reported-state;
    }
  } // path-compute rpc output

  augment "/te:tunnels-actions/te:input/te:tunnel-info/"
        + "te:filter-type" {
    description
      "Augment Tunnels Action RPC input filter types";
    case path-compute-transactions {
      when "derived-from-or-self(../te:action-info/te:action, "
         + "'tunnel-action-path-compute-delete')";
      description
        "Path Delete Action RPC";
      leaf-list path-compute-transaction-id {
        type string;
        description
          "The list of the transaction-id values of the
           transient states to be deleted";
      }
    }
  } // path-delete rpc input

  augment "/te:tunnels-actions/te:output" {
    description
      "Augment Tunnels Action RPC output with path delete result";
    container path-computed-delete-result {
      description
        "Path Delete RPC output";
      leaf-list path-compute-transaction-id {
        type string;
        description
          "The list of the transaction-id values of the
           transient states that have been successfully deleted";
      }
    }
  } // path-delete rpc output
}
]]></artwork></figure>

</section>
</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>This document describes use cases of requesting Path Computation
   using YANG data models, which could be used at the ABNO Control
   Interface <xref target="RFC7491"/> and/or between controllers in ACTN <xref target="RFC8453"/>. As
   such, it does not introduce any new security considerations compared
   to the ones related to YANG specification, ABNO specification and
   ACTN Framework defined in <xref target="RFC7950"/>, <xref target="RFC7491"/> and <xref target="RFC8453"/>.</t>

<t>The YANG module defined in this draft is designed to be accessed via
   the NETCONF protocol <xref target="RFC6241"/> or RESTCONF protocol <xref target="RFC8040"/>. The
   lowest NETCONF layer is the secure transport layer, and the
   mandatory-to-implement secure transport is Secure Shell (SSH)
   <xref target="RFC6242"/>. The lowest RESTCONF layer is HTTPS, and the mandatory-to-
   implement secure transport is TLS <xref target="RFC8446"/>.</t>

<t>The Network Configuration Access Control Model (NACM) 
   <xref target="RFC8341"/> provides the means to
   restrict access for particular NETCONF or RESTCONF users to a
   preconfigured subset of all available NETCONF or RESTCONF protocol
   operations and content.</t>

<t>The YANG module defined in this document augments the "tunnels-path-compute" and the "tunnel-actions" RPCs defined in <xref target="I-D.ietf-teas-yang-te"/>. The security considerations provided <xref target="I-D.ietf-teas-yang-te"/> are applicable to the YANG module
   defined int his document.</t>

<t>Some of the RPC operations defined in this YANG module may be considered
   sensitive or vulnerable in some network environments.  It is thus
   important to control access to these operations. These are the
   operations and their sensitivity/vulnerability:</t>

<t>"te-pc:response/computed-paths-properties": provides the same information provided by the readable data nodes of the "te:computed-paths-properties" defined in <xref target="I-D.ietf-teas-yang-te"/>. The security considerations provided in <xref target="I-D.ietf-teas-yang-te"/> apply also to this subtree.</t>

<t>[Editors' note] There are no security considerations for the "te:computed-paths-properties" in the version -28 of <xref target="I-D.ietf-teas-yang-te"/></t>

<t>"te-pc:response/te-pc:tunnel-ref", "te-pc:response/te-pc:primary-path-ref", "te-pc:response/te-pc:primary-reverse-path-ref", "te-pc:response/te-pc:secondary-path-ref" and "te-pc:response/te-pc:secondary-reverse-path-ref" provides a reference where the same information provided in "te-pc:response/computed-paths-properties" is temporarly stored with the operational datastore (see <xref target="temp-state"/>). Therefore access to this information does not provide any additional security issue that the information provided with "te-pc:response/computed-paths-properties".</t>

<t>"/te:tunnels-actions": the YANG model defined in this document augments this action with a new action type that allows deleting the transient states of computed paths (see <xref target="temp-state"/>). A malicious use of this action would have no impact on the paths carrying live traffic but it would preclude the client from using this "transient state" to request the set-up of exactly that path, if still available.</t>

<t>The security considerations spelled out in the
   YANG specification <xref target="RFC7950"/> apply for this document as well.</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>This document registers the following URIs in the "ns" subregistry
   within the "IETF XML registry" <xref target="RFC3688"/>.</t>

<figure><artwork><![CDATA[
      URI: urn:ietf:params:xml:ns:yang:ietf-te-path-computation
      Registrant Contact:  The IESG.
      XML: N/A, the requested URI is an XML namespace.
]]></artwork></figure>

<t>This document registers a YANG module in the "YANG Module Names"
   registry <xref target="RFC7950"/>.</t>

<figure><artwork><![CDATA[
      name:      ietf-te-path-computation
      namespace: urn:ietf:params:xml:ns:yang:ietf-te-path-computation
      prefix:    te-pc
      reference: this document
]]></artwork></figure>

</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference anchor='RFC6241' target='https://www.rfc-editor.org/info/rfc6241'>
<front>
<title>Network Configuration Protocol (NETCONF)</title>
<author fullname='R. Enns' initials='R.' role='editor' surname='Enns'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'><organization/></author>
<author fullname='A. Bierman' initials='A.' role='editor' surname='Bierman'><organization/></author>
<date month='June' year='2011'/>
<abstract><t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices.  It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages.  The NETCONF protocol operations are realized as remote procedure calls (RPCs).  This document obsoletes RFC 4741.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6241'/>
<seriesInfo name='DOI' value='10.17487/RFC6241'/>
</reference>



<reference anchor='RFC8040' target='https://www.rfc-editor.org/info/rfc8040'>
<front>
<title>RESTCONF Protocol</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<date month='January' year='2017'/>
<abstract><t>This document describes an HTTP-based protocol that provides a programmatic interface for accessing data defined in YANG, using the datastore concepts defined in the Network Configuration Protocol (NETCONF).</t></abstract>
</front>
<seriesInfo name='RFC' value='8040'/>
<seriesInfo name='DOI' value='10.17487/RFC8040'/>
</reference>



<reference anchor='RFC8795' target='https://www.rfc-editor.org/info/rfc8795'>
<front>
<title>YANG Data Model for Traffic Engineering (TE) Topologies</title>
<author fullname='X. Liu' initials='X.' surname='Liu'><organization/></author>
<author fullname='I. Bryskin' initials='I.' surname='Bryskin'><organization/></author>
<author fullname='V. Beeram' initials='V.' surname='Beeram'><organization/></author>
<author fullname='T. Saad' initials='T.' surname='Saad'><organization/></author>
<author fullname='H. Shah' initials='H.' surname='Shah'><organization/></author>
<author fullname='O. Gonzalez de Dios' initials='O.' surname='Gonzalez de Dios'><organization/></author>
<date month='August' year='2020'/>
<abstract><t>This document defines a YANG data model for representing, retrieving, and manipulating Traffic Engineering (TE) Topologies. The model serves as a base model that other technology-specific TE topology models can augment.</t></abstract>
</front>
<seriesInfo name='RFC' value='8795'/>
<seriesInfo name='DOI' value='10.17487/RFC8795'/>
</reference>


<reference anchor='I-D.ietf-teas-yang-te'>
   <front>
      <title>A YANG Data Model for Traffic Engineering Tunnels, Label Switched Paths and Interfaces</title>
      <author fullname='Tarek Saad'>
	 <organization>Juniper Networks</organization>
      </author>
      <author fullname='Rakesh Gandhi'>
	 <organization>Cisco Systems Inc</organization>
      </author>
      <author fullname='Xufeng Liu'>
	 <organization>Volta Networks</organization>
      </author>
      <author fullname='Vishnu Pavan Beeram'>
	 <organization>Juniper Networks</organization>
      </author>
      <author fullname='Igor Bryskin'>
	 <organization>Individual</organization>
      </author>
      <author fullname='Oscar Gonzalez de Dios'>
	 <organization>Telefonica</organization>
      </author>
      <date day='25' month='October' year='2021'/>
      <abstract>
	 <t>   This document defines a YANG data model for the provisioning and
   management of Traffic Engineering (TE) tunnels, Label Switched Paths
   (LSPs), and interfaces.  The model is divided into YANG modules that
   classify data into generic, device-specific, technology agnostic, and
   technology-specific elements.

   This model covers data for configuration, operational state, remote
   procedural calls, and event notifications.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-teas-yang-te-28'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-teas-yang-te-28.txt' type='TXT'/>
</reference>



<reference anchor='RFC7950' target='https://www.rfc-editor.org/info/rfc7950'>
<front>
<title>The YANG 1.1 Data Modeling Language</title>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<date month='August' year='2016'/>
<abstract><t>YANG is a data modeling language used to model configuration data, state data, Remote Procedure Calls, and notifications for network management protocols.  This document describes the syntax and semantics of version 1.1 of the YANG language.  YANG version 1.1 is a maintenance release of the YANG language, addressing ambiguities and defects in the original specification.  There are a small number of backward incompatibilities from YANG version 1.  This document also specifies the YANG mappings to the Network Configuration Protocol (NETCONF).</t></abstract>
</front>
<seriesInfo name='RFC' value='7950'/>
<seriesInfo name='DOI' value='10.17487/RFC7950'/>
</reference>



<reference anchor='RFC5440' target='https://www.rfc-editor.org/info/rfc5440'>
<front>
<title>Path Computation Element (PCE) Communication Protocol (PCEP)</title>
<author fullname='JP. Vasseur' initials='JP.' role='editor' surname='Vasseur'><organization/></author>
<author fullname='JL. Le Roux' initials='JL.' role='editor' surname='Le Roux'><organization/></author>
<date month='March' year='2009'/>
<abstract><t>This document specifies the Path Computation Element (PCE) Communication Protocol (PCEP) for communications between a Path Computation Client (PCC) and a PCE, or between two PCEs.  Such interactions include path computation requests and path computation replies as well as notifications of specific states related to the use of a PCE in the context of Multiprotocol Label Switching (MPLS) and Generalized MPLS (GMPLS) Traffic Engineering.  PCEP is designed to be flexible and extensible so as to easily allow for the addition of further messages and objects, should further requirements be expressed in the future.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5440'/>
<seriesInfo name='DOI' value='10.17487/RFC5440'/>
</reference>



<reference anchor='RFC7926' target='https://www.rfc-editor.org/info/rfc7926'>
<front>
<title>Problem Statement and Architecture for Information Exchange between Interconnected Traffic-Engineered Networks</title>
<author fullname='A. Farrel' initials='A.' role='editor' surname='Farrel'><organization/></author>
<author fullname='J. Drake' initials='J.' surname='Drake'><organization/></author>
<author fullname='N. Bitar' initials='N.' surname='Bitar'><organization/></author>
<author fullname='G. Swallow' initials='G.' surname='Swallow'><organization/></author>
<author fullname='D. Ceccarelli' initials='D.' surname='Ceccarelli'><organization/></author>
<author fullname='X. Zhang' initials='X.' surname='Zhang'><organization/></author>
<date month='July' year='2016'/>
<abstract><t>In Traffic-Engineered (TE) systems, it is sometimes desirable to establish an end-to-end TE path with a set of constraints (such as bandwidth) across one or more networks from a source to a destination.  TE information is the data relating to nodes and TE links that is used in the process of selecting a TE path.  TE information is usually only available within a network.  We call such a zone of visibility of TE information a domain.  An example of a domain may be an IGP area or an Autonomous System.</t><t>In order to determine the potential to establish a TE path through a series of connected networks, it is necessary to have available a certain amount of TE information about each network.  This need not be the full set of TE information available within each network but does need to express the potential of providing TE connectivity. This subset of TE information is called TE reachability information.</t><t>This document sets out the problem statement for the exchange of TE information between interconnected TE networks in support of end-to-end TE path establishment and describes the best current practice architecture to meet this problem statement.  For reasons that are explained in this document, this work is limited to simple TE constraints and information that determine TE reachability.</t></abstract>
</front>
<seriesInfo name='BCP' value='206'/>
<seriesInfo name='RFC' value='7926'/>
<seriesInfo name='DOI' value='10.17487/RFC7926'/>
</reference>



<reference anchor='RFC8340' target='https://www.rfc-editor.org/info/rfc8340'>
<front>
<title>YANG Tree Diagrams</title>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='L. Berger' initials='L.' role='editor' surname='Berger'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>This document captures the current syntax used in YANG module tree diagrams.  The purpose of this document is to provide a single location for this definition.  This syntax may be updated from time to time based on the evolution of the YANG language.</t></abstract>
</front>
<seriesInfo name='BCP' value='215'/>
<seriesInfo name='RFC' value='8340'/>
<seriesInfo name='DOI' value='10.17487/RFC8340'/>
</reference>



<reference anchor='RFC6991' target='https://www.rfc-editor.org/info/rfc6991'>
<front>
<title>Common YANG Data Types</title>
<author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'><organization/></author>
<date month='July' year='2013'/>
<abstract><t>This document introduces a collection of common data types to be used with the YANG data modeling language.  This document obsoletes RFC 6021.</t></abstract>
</front>
<seriesInfo name='RFC' value='6991'/>
<seriesInfo name='DOI' value='10.17487/RFC6991'/>
</reference>



<reference anchor='RFC8776' target='https://www.rfc-editor.org/info/rfc8776'>
<front>
<title>Common YANG Data Types for Traffic Engineering</title>
<author fullname='T. Saad' initials='T.' surname='Saad'><organization/></author>
<author fullname='R. Gandhi' initials='R.' surname='Gandhi'><organization/></author>
<author fullname='X. Liu' initials='X.' surname='Liu'><organization/></author>
<author fullname='V. Beeram' initials='V.' surname='Beeram'><organization/></author>
<author fullname='I. Bryskin' initials='I.' surname='Bryskin'><organization/></author>
<date month='June' year='2020'/>
<abstract><t>This document defines a collection of common data types and groupings in YANG data modeling language. These derived common types and groupings are intended to be imported by modules that model Traffic Engineering (TE) configuration and state capabilities.</t></abstract>
</front>
<seriesInfo name='RFC' value='8776'/>
<seriesInfo name='DOI' value='10.17487/RFC8776'/>
</reference>



<reference anchor='RFC5441' target='https://www.rfc-editor.org/info/rfc5441'>
<front>
<title>A Backward-Recursive PCE-Based Computation (BRPC) Procedure to Compute Shortest Constrained Inter-Domain Traffic Engineering Label Switched Paths</title>
<author fullname='JP. Vasseur' initials='JP.' role='editor' surname='Vasseur'><organization/></author>
<author fullname='R. Zhang' initials='R.' surname='Zhang'><organization/></author>
<author fullname='N. Bitar' initials='N.' surname='Bitar'><organization/></author>
<author fullname='JL. Le Roux' initials='JL.' surname='Le Roux'><organization/></author>
<date month='April' year='2009'/>
<abstract><t>The ability to compute shortest constrained Traffic Engineering Label Switched Paths (TE LSPs) in Multiprotocol Label Switching (MPLS) and Generalized MPLS (GMPLS) networks across multiple domains has been identified as a key requirement.  In this context, a domain is a collection of network elements within a common sphere of address management or path computational responsibility such as an IGP area or an Autonomous Systems.  This document specifies a procedure relying on the use of multiple Path Computation Elements (PCEs) to compute such inter-domain shortest constrained paths across a predetermined sequence of domains, using a backward-recursive path computation technique.  This technique preserves confidentiality across domains, which is sometimes required when domains are managed by different service providers.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5441'/>
<seriesInfo name='DOI' value='10.17487/RFC5441'/>
</reference>



<reference anchor='RFC5541' target='https://www.rfc-editor.org/info/rfc5541'>
<front>
<title>Encoding of Objective Functions in the Path Computation Element Communication Protocol (PCEP)</title>
<author fullname='JL. Le Roux' initials='JL.' surname='Le Roux'><organization/></author>
<author fullname='JP. Vasseur' initials='JP.' surname='Vasseur'><organization/></author>
<author fullname='Y. Lee' initials='Y.' surname='Lee'><organization/></author>
<date month='June' year='2009'/>
<abstract><t>The computation of one or a set of Traffic Engineering Label Switched Paths (TE LSPs) in MultiProtocol Label Switching (MPLS) and Generalized MPLS (GMPLS) networks is subject to a set of one or more specific optimization criteria, referred to as objective functions (e.g., minimum cost path, widest path, etc.).</t><t>In the Path Computation Element (PCE) architecture, a Path Computation Client (PCC) may want a path to be computed for one or more TE LSPs according to a specific objective function.  Thus, the PCC needs to instruct the PCE to use the correct objective function. Furthermore, it is possible that not all PCEs support the same set of objective functions; therefore, it is useful for the PCC to be able to automatically discover the set of objective functions supported by each PCE.</t><t>This document defines extensions to the PCE communication Protocol (PCEP) to allow a PCE to indicate the set of objective functions it supports.  Extensions are also defined so that a PCC can indicate in a path computation request the required objective function, and a PCE can report in a path computation reply the objective function that was used for path computation.</t><t>This document defines objective function code types for six objective functions previously listed in the PCE requirements work, and provides the definition of four new metric types that apply to a set of synchronized requests.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5541'/>
<seriesInfo name='DOI' value='10.17487/RFC5541'/>
</reference>



<reference anchor='RFC6242' target='https://www.rfc-editor.org/info/rfc6242'>
<front>
<title>Using the NETCONF Protocol over Secure Shell (SSH)</title>
<author fullname='M. Wasserman' initials='M.' surname='Wasserman'><organization/></author>
<date month='June' year='2011'/>
<abstract><t>This document describes a method for invoking and running the Network Configuration Protocol (NETCONF) within a Secure Shell (SSH) session as an SSH subsystem.  This document obsoletes RFC 4742.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6242'/>
<seriesInfo name='DOI' value='10.17487/RFC6242'/>
</reference>



<reference anchor='RFC8446' target='https://www.rfc-editor.org/info/rfc8446'>
<front>
<title>The Transport Layer Security (TLS) Protocol Version 1.3</title>
<author fullname='E. Rescorla' initials='E.' surname='Rescorla'><organization/></author>
<date month='August' year='2018'/>
<abstract><t>This document specifies version 1.3 of the Transport Layer Security (TLS) protocol.  TLS allows client/server applications to communicate over the Internet in a way that is designed to prevent eavesdropping, tampering, and message forgery.</t><t>This document updates RFCs 5705 and 6066, and obsoletes RFCs 5077, 5246, and 6961.  This document also specifies new requirements for TLS 1.2 implementations.</t></abstract>
</front>
<seriesInfo name='RFC' value='8446'/>
<seriesInfo name='DOI' value='10.17487/RFC8446'/>
</reference>



<reference anchor='RFC8341' target='https://www.rfc-editor.org/info/rfc8341'>
<front>
<title>Network Configuration Access Control Model</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>The standardization of network configuration interfaces for use with the Network Configuration Protocol (NETCONF) or the RESTCONF protocol requires a structured and secure operating environment that promotes human usability and multi-vendor interoperability.  There is a need for standard mechanisms to restrict NETCONF or RESTCONF protocol access for particular users to a preconfigured subset of all available NETCONF or RESTCONF protocol operations and content.  This document defines such an access control model.</t><t>This document obsoletes RFC 6536.</t></abstract>
</front>
<seriesInfo name='STD' value='91'/>
<seriesInfo name='RFC' value='8341'/>
<seriesInfo name='DOI' value='10.17487/RFC8341'/>
</reference>



<reference anchor='RFC3688' target='https://www.rfc-editor.org/info/rfc3688'>
<front>
<title>The IETF XML Registry</title>
<author fullname='M. Mealling' initials='M.' surname='Mealling'><organization/></author>
<date month='January' year='2004'/>
<abstract><t>This document describes an IANA maintained registry for IETF standards which use Extensible Markup Language (XML) related items such as Namespaces, Document Type Declarations (DTDs), Schemas, and Resource Description Framework (RDF) Schemas.</t></abstract>
</front>
<seriesInfo name='BCP' value='81'/>
<seriesInfo name='RFC' value='3688'/>
<seriesInfo name='DOI' value='10.17487/RFC3688'/>
</reference>




    </references>

    <references title='Informative References'>





<reference anchor='RFC7491' target='https://www.rfc-editor.org/info/rfc7491'>
<front>
<title>A PCE-Based Architecture for Application-Based Network Operations</title>
<author fullname='D. King' initials='D.' surname='King'><organization/></author>
<author fullname='A. Farrel' initials='A.' surname='Farrel'><organization/></author>
<date month='March' year='2015'/>
<abstract><t>Services such as content distribution, distributed databases, or inter-data center connectivity place a set of new requirements on the operation of networks.  They need on-demand and application-specific reservation of network connectivity, reliability, and resources (such as bandwidth) in a variety of network applications (such as point-to-point connectivity, network virtualization, or mobile back-haul) and in a range of network technologies from packet (IP/MPLS) down to optical.  An environment that operates to meet these types of requirements is said to have Application-Based Network Operations (ABNO).  ABNO brings together many existing technologies and may be seen as the use of a toolbox of existing components enhanced with a few new elements.</t><t>This document describes an architecture and framework for ABNO, showing how these components fit together.  It provides a cookbook of existing technologies to satisfy the architecture and meet the needs of the applications.</t></abstract>
</front>
<seriesInfo name='RFC' value='7491'/>
<seriesInfo name='DOI' value='10.17487/RFC7491'/>
</reference>



<reference anchor='RFC8453' target='https://www.rfc-editor.org/info/rfc8453'>
<front>
<title>Framework for Abstraction and Control of TE Networks (ACTN)</title>
<author fullname='D. Ceccarelli' initials='D.' role='editor' surname='Ceccarelli'><organization/></author>
<author fullname='Y. Lee' initials='Y.' role='editor' surname='Lee'><organization/></author>
<date month='August' year='2018'/>
<abstract><t>Traffic Engineered (TE) networks have a variety of mechanisms to facilitate the separation of the data plane and control plane.  They also have a range of management and provisioning protocols to configure and activate network resources.  These mechanisms represent key technologies for enabling flexible and dynamic networking.  The term &quot;Traffic Engineered network&quot; refers to a network that uses any connection-oriented technology under the control of a distributed or centralized control plane to support dynamic provisioning of end-to- end connectivity.</t><t>Abstraction of network resources is a technique that can be applied to a single network domain or across multiple domains to create a single virtualized network that is under the control of a network operator or the customer of the operator that actually owns the network resources.</t><t>This document provides a framework for Abstraction and Control of TE Networks (ACTN) to support virtual network services and connectivity services.</t></abstract>
</front>
<seriesInfo name='RFC' value='8453'/>
<seriesInfo name='DOI' value='10.17487/RFC8453'/>
</reference>



<reference anchor='RFC8454' target='https://www.rfc-editor.org/info/rfc8454'>
<front>
<title>Information Model for Abstraction and Control of TE Networks (ACTN)</title>
<author fullname='Y. Lee' initials='Y.' surname='Lee'><organization/></author>
<author fullname='S. Belotti' initials='S.' surname='Belotti'><organization/></author>
<author fullname='D. Dhody' initials='D.' surname='Dhody'><organization/></author>
<author fullname='D. Ceccarelli' initials='D.' surname='Ceccarelli'><organization/></author>
<author fullname='B. Yoon' initials='B.' surname='Yoon'><organization/></author>
<date month='September' year='2018'/>
<abstract><t>This document provides an information model for Abstraction and Control of TE Networks (ACTN).</t></abstract>
</front>
<seriesInfo name='RFC' value='8454'/>
<seriesInfo name='DOI' value='10.17487/RFC8454'/>
</reference>


<reference anchor='I-D.ietf-ccamp-otn-topo-yang'>
   <front>
      <title>A YANG Data Model for Optical Transport Network Topology</title>
      <author fullname='Haomian Zheng'>
	 <organization>Huawei Technologies</organization>
      </author>
      <author fullname='Italo Busi'>
	 <organization>Huawei Technologies</organization>
      </author>
      <author fullname='Xufeng Liu'>
	 <organization>Volta Networks</organization>
      </author>
      <author fullname='Sergio Belotti'>
	 <organization>Nokia</organization>
      </author>
      <author fullname='Oscar Gonzalez de Dios'>
	 <organization>Telefonica</organization>
      </author>
      <date day='12' month='July' year='2021'/>
      <abstract>
	 <t>   This document describes a YANG data model to describe the topologies
   of an Optical Transport Network (OTN).  It is independent of control
   plane protocols and captures topological and resource related
   information pertaining to OTN.  This model enables clients, which
   interact with a transport domain controller, for OTN topology related
   operations such as obtaining the relevant topology resource
   information.


	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-ccamp-otn-topo-yang-13'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-ccamp-otn-topo-yang-13.txt' type='TXT'/>
</reference>



<reference anchor='RFC4655' target='https://www.rfc-editor.org/info/rfc4655'>
<front>
<title>A Path Computation Element (PCE)-Based Architecture</title>
<author fullname='A. Farrel' initials='A.' surname='Farrel'><organization/></author>
<author fullname='J.-P. Vasseur' initials='J.-P.' surname='Vasseur'><organization/></author>
<author fullname='J. Ash' initials='J.' surname='Ash'><organization/></author>
<date month='August' year='2006'/>
<abstract><t>Constraint-based path computation is a fundamental building block for traffic engineering systems such as Multiprotocol Label Switching (MPLS) and Generalized Multiprotocol Label Switching (GMPLS) networks.  Path computation in large, multi-domain, multi-region, or multi-layer networks is complex and may require special computational components and cooperation between the different network domains.</t><t>This document specifies the architecture for a Path Computation Element (PCE)-based model to address this problem space.  This document does not attempt to provide a detailed description of all the architectural components, but rather it describes a set of building blocks for the PCE architecture from which solutions may be constructed.  This memo provides information for the Internet community.</t></abstract>
</front>
<seriesInfo name='RFC' value='4655'/>
<seriesInfo name='DOI' value='10.17487/RFC4655'/>
</reference>



<reference anchor='RFC8342' target='https://www.rfc-editor.org/info/rfc8342'>
<front>
<title>Network Management Datastore Architecture (NMDA)</title>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' surname='Schoenwaelder'><organization/></author>
<author fullname='P. Shafer' initials='P.' surname='Shafer'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<author fullname='R. Wilton' initials='R.' surname='Wilton'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>Datastores are a fundamental concept binding the data models written in the YANG data modeling language to network management protocols such as the Network Configuration Protocol (NETCONF) and RESTCONF. This document defines an architectural framework for datastores based on the experience gained with the initial simpler model, addressing requirements that were not well supported in the initial model.  This document updates RFC 7950.</t></abstract>
</front>
<seriesInfo name='RFC' value='8342'/>
<seriesInfo name='DOI' value='10.17487/RFC8342'/>
</reference>



<reference anchor='RFC6805' target='https://www.rfc-editor.org/info/rfc6805'>
<front>
<title>The Application of the Path Computation Element Architecture to the Determination of a Sequence of Domains in MPLS and GMPLS</title>
<author fullname='D. King' initials='D.' role='editor' surname='King'><organization/></author>
<author fullname='A. Farrel' initials='A.' role='editor' surname='Farrel'><organization/></author>
<date month='November' year='2012'/>
<abstract><t>Computing optimum routes for Label Switched Paths (LSPs) across multiple domains in MPLS Traffic Engineering (MPLS-TE) and GMPLS networks presents a problem because no single point of path computation is aware of all of the links and resources in each domain.  A solution may be achieved using the Path Computation Element (PCE) architecture.</t><t>Where the sequence of domains is known a priori, various techniques can be employed to derive an optimum path.  If the domains are simply connected, or if the preferred points of interconnection are also known, the Per-Domain Path Computation technique can be used.  Where there are multiple connections between domains and there is no preference for the choice of points of interconnection, the Backward-Recursive PCE-based Computation (BRPC) procedure can be used to derive an optimal path.</t><t>This document examines techniques to establish the optimum path when the sequence of domains is not known in advance.  The document shows how the PCE architecture can be extended to allow the optimum sequence of domains to be selected, and the optimum end-to-end path to be derived through the use of a hierarchical relationship between domains.  This document is not an Internet Standards Track  specification; it is published for informational purposes.</t></abstract>
</front>
<seriesInfo name='RFC' value='6805'/>
<seriesInfo name='DOI' value='10.17487/RFC6805'/>
</reference>



<reference anchor='RFC7446' target='https://www.rfc-editor.org/info/rfc7446'>
<front>
<title>Routing and Wavelength Assignment Information Model for Wavelength Switched Optical Networks</title>
<author fullname='Y. Lee' initials='Y.' role='editor' surname='Lee'><organization/></author>
<author fullname='G. Bernstein' initials='G.' role='editor' surname='Bernstein'><organization/></author>
<author fullname='D. Li' initials='D.' surname='Li'><organization/></author>
<author fullname='W. Imajuku' initials='W.' surname='Imajuku'><organization/></author>
<date month='February' year='2015'/>
<abstract><t>This document provides a model of information needed by the Routing and Wavelength Assignment (RWA) process in Wavelength Switched Optical Networks (WSONs).  The purpose of the information described in this model is to facilitate constrained optical path computation in WSONs.  This model takes into account compatibility constraints between WSON signal attributes and network elements but does not include constraints due to optical impairments.  Aspects of this information that may be of use to other technologies utilizing a GMPLS control plane are discussed.</t></abstract>
</front>
<seriesInfo name='RFC' value='7446'/>
<seriesInfo name='DOI' value='10.17487/RFC7446'/>
</reference>




    </references>


<section anchor="examples"><name>Examples</name>

<t>This section contains examples of use of the model with RESTCONF
<xref target="RFC8040"/> and JSON encoding.</t>

<t>These examples show how path computation can be requested for the tunnels configuration provided in Appendix A of <xref target="I-D.ietf-teas-yang-te"/>.</t>

<section anchor="basic-example"><name>Basic Path Computation</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 13.1 of of <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>In this case, the TE Tunnel has only one primary path with no specific constraints.</t>

<figure><artwork><![CDATA[
POST /restconf/operations/ietf-te:te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 1,
          "tunnel-name": "Example_LSP_Tunnel_A_2",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "10.0.0.1",
          "destination": "10.0.0.4",
          "bidirectional": "false"
        }
      ]
    }
  }
}
]]></artwork></figure>

</section>
<section anchor="global-path-constraint-example"><name>Path Computation with Global Path Constraint</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 13.3 of of <xref target="I-D.ietf-teas-yang-te"/>. The 'named path constraint' is created in section 13.2 of <xref target="I-D.ietf-teas-yang-te"/> applies to this path computation request.</t>

<figure><artwork><![CDATA[
POST /restconf/operations/ietf-te:te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 1,
          "tunnel-name": "Example_LSP_Tunnel_A_4_1",
          "path-name": "Simple_LSP_1",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "10.0.0.1",
          "destination": "10.0.0.4",
          "bidirectional": "false",
          "named-path-constraint": "max-hop-3"
        }
      ]
    }
  }
}
]]></artwork></figure>

</section>
<section anchor="tunnel-path-constraint-example"><name>Path Computation with Per-tunnel Path Constraint</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 13.4 of of <xref target="I-D.ietf-teas-yang-te"/>, using a per tunnel path constraint.</t>

<figure><artwork><![CDATA[
POST /restconf/operations/ietf-te:te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 1,
          "tunnel-name": "Example_LSP_Tunnel_A_4_2",
          "path-name": "path1",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "10.0.0.1",
          "destination": "10.0.0.4",
          "bidirectional": "false",
          "named-path-constraint": "max-hop-3",
          "path-metric-bounds": {
            "path-metric-bound": [
              {
                "metric-type": "te-types:path-metric-hop",
                "upper-bound": "3"
              }
            ]
          }
        }
      ]
    }
  }
}
]]></artwork></figure>

</section>
<section anchor="path-computation-result"><name>Path Computation result</name>

<t>This example reports the output of the path computation RPC request described in <xref target="tunnel-path-constraint-example"/>.</t>

<figure><artwork><![CDATA[
HTTP/1.1 200 OK
Host: example.com
Content-Type: application/yang-data+json

{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 1,
          "tunnel-name": "Example_LSP_Tunnel_A_4_2",
          "path-name": "path1",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "10.0.0.1",
          "destination": "10.0.0.4",
          "bidirectional": "false",
          "named-path-constraint": "max-hop-3",
          "path-metric-bounds": {
            "path-metric-bound": [
              {
                "metric-type": "te-types:path-metric-hop",
                "upper-bound": "3"
              }
            ]
          }
        }
      ]
    }
  }
}
]]></artwork></figure>

</section>
</section>
<section numbered="false" anchor="acknowledgments"><name>Acknowledgments</name>

<t>The authors would like to thank Igor Bryskin and Xian Zhang for
   participating in the initial discussions that have triggered this
   work and providing valuable insights.</t>

<t>The authors would like to thank the authors of the TE tunnel YANG
   data model <xref target="I-D.ietf-teas-yang-te"/>, in particular Igor Bryskin, Vishnu Pavan
   Beeram, Tarek Saad and Xufeng Liu, for their inputs to the
   discussions and support in having consistency between the Path
   Computation and TE tunnel YANG data models.</t>

<t>The authors would like to thank Adrian Farrel, Dhruv Dhody, Igor
   Bryskin, Julien Meuric and Lou Berger for their valuable input to the
   discussions that has clarified that the path being set up is not
   necessarily the same as the path that has been previously computed
   and, in particular to Dhruv Dhody, for his suggestion to describe the
   need for a path verification phase to check that the actual path
   being set up meets the required end-to-end metrics and constraints.</t>

<t>The authors would like to thank Aihua Guo, Lou Berger, Shaolong Gan,
   Martin Bjorklund and Tom Petch for their useful comments on how to
   define XPath statements in YANG RPCs.</t>

<t>The authors would like to thank Haomian Zheng, Yanlei Zheng, Tom
   Petch, Aihua Guo and Martin Bjorklund for their review and valuable
   comments to this document.</t>

<t>Previous versions of document were prepared using 2-Word-v2.0.template.dot.</t>

<t>This document was prepared using kramdown.</t>

</section>

    <section anchor="contributors" numbered="false" toc="include" removeInRFC="false">
        <name>Contributors</name>
    <contact initials="V." surname="Lopez" fullname="Victor Lopez">
      <organization>Nokia</organization>
      <address>
        <email>victor.lopez@nokia.com</email>
      </address>
    </contact>
    <contact initials="R." surname="Vilalta" fullname="Ricard Vilalta">
      <organization>CTTC</organization>
      <address>
        <email>ricard.vilalta@cttc.es</email>
      </address>
    </contact>
    <contact initials="K." surname="Sethuraman" fullname="Karthik Sethuraman">
      <organization>NEC</organization>
      <address>
        <email>karthik.sethuraman@necam.com</email>
      </address>
    </contact>
    <contact initials="M." surname="Scharf" fullname="Michael Scharf">
      <organization>Nokia</organization>
      <address>
        <email>michael.scharf@gmail.com</email>
      </address>
    </contact>
    <contact initials="D." surname="Beller" fullname="Dieter Beller">
      <organization>Nokia</organization>
      <address>
        <email>dieter.beller@nokia.com</email>
      </address>
    </contact>
    <contact initials="G." surname="Bruno" fullname="Gianmarco Bruno">
      <organization>Ericsson</organization>
      <address>
        <email>gianmarco.bruno@ericsson.com</email>
      </address>
    </contact>
    <contact initials="F." surname="Lazzeri" fullname="Francesco Lazzeri">
      <organization>Ericsson</organization>
      <address>
        <email>francesco.lazzeri@ericsson.com</email>
      </address>
    </contact>
    <contact initials="Y." surname="Lee" fullname="Young Lee">
      <organization>Samsung Electronics</organization>
      <address>
        <email>younglee.tx@gmail.com</email>
      </address>
    </contact>
    <contact initials="C." surname="Perocchio" fullname="Carlo Perocchio">
      <organization>Ericsson</organization>
      <address>
        <email>carlo.perocchio@ericsson.com</email>
      </address>
    </contact>
    <contact initials="O." surname="Dugeon" fullname="Olivier Dugeon">
      <organization>Orange Labs</organization>
      <address>
        <email>olivier.dugeon@orange.com</email>
      </address>
    </contact>
    <contact initials="J." surname="Meuric" fullname="Julien Meuric">
      <organization>Orange Labs</organization>
      <address>
        <email>julien.meuric@orange.com</email>
      </address>
    </contact>
    </section>

  </back>

<!-- ##markdown-source:
H4sIAPKH4GEAA+y9a3sbx5Ew+h2/Ypb5EDIGQF2dhI5jSxTt6Kwt6YiKvTmr
PfsMgSE5KxCDnRmIpkOd337q1t3VPd0zA1pJnLzGXkwBfamurq5bV1fNZrPJ
olqW64ujbNuez343mbRluyqOsifZX568+Dp7lrd59m21LFbZeVVndfG/26Jp
oX32Km8vs+PqarNt87as1pNJfnZWF++Psr/k8DO27jRZVot1fgWjL+v8vJ2V
BUzZFnkzu4Eusw00ny1c89n9306uq/rdRV1tN0fZm5Mnp9n38G+c/Wv8brLI
2+Kiqm+OsqZdTspNfZS19bZpH9y79/t7DyaTps3Xy//OV9Ua5rwpmsmmPMr+
s60W06yp6rYuzhv46+aK/4Cpr4p12/wXLGXbXlb10STLZvB/WcZQP29hqOzp
tinpy7pCRBXLsq1q+qKqAY1/2ubXRZm9KRaX62pVXZQwLf5YXOXl6igrcYz5
GYzx5SW1nMO0wTynRX1RwkTFqmrbvrleVO/KXI/eUM/5Gff8co2/RyZ42Szy
Ovu6Wv+Yr4ofs2WRPSsrBrNcN/D7PP4jTfqmWBXn1bpceDNXOOT8QnotAdKq
+bK1TSNAPFlv6/wiO73M66vcDf91VV2sCj10vm4u8y8v6PvIOEBuMEjpRji+
LNd59meYlto65FyWQGePfv/lAhts6ff5Yh0M9yxflwB2dlwsYEXFaqVGPqnL
RdNUaz3qktvPF7b9l4U0I2DhfK3bujzbtl2C+q5cwLfZN9Wm+LFnV99Ts/kK
myX39DVguV7CkKt81Sp8Hr95c6wHq6nd/D23+3LRtos5kage7N/zur0s3wEl
tpewS1f5WoF34o33jpvOG9v0y3WxyK8iIH5bLi5z4CSn8J/6vGfBV9xw3lDD
Ly/w28h4z4CBFDWek1XRdyqW1A5PBbRLIvDrMl9f5fUCDl69XVf9u35hGs/P
sLG/5f64X9X5elE0MO43+Y8/QsP+kc9N8/mKm/eN/ZdqC8zwm6JwY57mVw1+
ebIqFm2Nh8/jPzfYY1UU8/aHJF6P8xr43KuirhZwVAYwscDG841p3Afty1X5
voQNe7a9KCpFUS9hyRcFoOfMA7Xi5vMlNf+yolaRYf+v7aos1tm3xRamHhz1
f6j1/Ipa60Ens9ksg8ZtnS/aCXZ5c1nURQaHOmsWxTqvgaVNs/ZmAydotboB
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
710EvgIPiylQg0BEIg/EsKkK/uHDvKsX+k4B0cq0O8uUM+PamV95LnxXNb3g
l6tl6+JnyX9oAz+5NJyKqDPjovY9FdX7ZLjkuA1UedofCMafo+y/g//prfwR
JsNKRHRxTNHLLHvx8k321cmT0+dPvzmBb19Gw4c40uc2i8Xp4Dccq8RLeaLq
FlGPbnxOZlIi8b+/Ujg4CkbuS550q1pJj84YL2ccOqWwfmz/ykzG5pe9Y+g6
M4dB1FW8Bk3vGN0d6h8Dkf+Hzx/ck7UYeMnm/8Pn2cN7bp38m+3QhePwyMR2
RXfS/qbC9+wYhy4Oz/4W3Vsz2tsgbvFIZWrriffyILJIMmMcmuU9Vr/a6Z/p
vdWrog5yFl6qHTR/fxLd20+CVvQ3w6ExZM9HbG9vBaneLgg+3qox+PNJdG8/
CVpRoKTZl7cO3i7eut8cuY20Y+B8f/wcZns7cm8PXZe+Mxf/JM9cZy484far
E723tx0YU3zuVq/ZO7fdFO6Kz0VP6W1PyKPlqLx7f9Qnc1xFJx8bidbdXfFz
unVEZrRotVNdTKv9NxF14UACHCk8i6LUMlOQR15oJMxg1shzrMdS1aX3nM/d
x0YmZDmc0pnJis1Y3wc1S5tsdrBQwVFvkZxM997/dC/qWGHslpnlUJqKL2C3
G1SBzyguS17lU54Y+Yrw5K3se74OKZvgcmBqlWJ3Y2Kw3C0Hq51JOFDcPUOr
pgzw2qeETgHy7Einp9hW6kVZ5YZvCYxObP1ygQ41Cfwdn6lhTxLD5lbBkgWZ
6sFINUQxE7ulvVTil9jmXfWehhrPhK4e1fVAPZmdzL4y4YKwLffv3bMe3jOT
VuOAA0Z1dFR2WV7Qzell7pUbm0SnabhYspsn+72bBvR4Ow96RZ7Mjr2mv4s2
DR4MDvsX0+RgTmXaT2fD+iTyh1dT4R8IK1qc9gbOHH0xzjHow+SH0C8ycDJK
1iNxr+ZGMwQm+la3j0HI9YrYSanXxRTUQy6uqscGejLFZIbHYjLsU1QOG9AS
QEuWoypJ1h2j910IfywbH2kLjJUVnwQSlj9OFvFUv+jqfwNd/fP7j7NAV2cO
8Xn24LFbp/xmnsz86+rqvDr7q50+qasTAj+mrh7B22hdvYc+PvH29r7sbVdX
H6LTNCZHj9G7t31j/Bx19fAT19UdfH18Lv4Z1KIxf+gddOhOvcWILv1UXd01
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

-->

</rfc>

