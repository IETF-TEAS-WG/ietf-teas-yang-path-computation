<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.4.19 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc comments="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-teas-yang-path-computation-17" category="std">

  <front>
    <title abbrev="Yang for Path Computation">YANG Data Model for requesting Path Computation</title>

    <author initials="I." surname="Busi" fullname="Italo Busi" role="editor">
      <organization>Huawei Technologies</organization>
      <address>
        <email>italo.busi@huawei.com</email>
      </address>
    </author>
    <author initials="S." surname="Belotti" fullname="Sergio Belotti" role="editor">
      <organization>Nokia</organization>
      <address>
        <email>sergio.belotti@nokia.com</email>
      </address>
    </author>
    <author initials="O." surname="Gonzalez de Dios" fullname="Oscar Gonzalez de Dios">
      <organization>Telefonica</organization>
      <address>
        <email>oscar.gonzalezdedios@telefonica.com</email>
      </address>
    </author>
    <author initials="A." surname="Sharma" fullname="Anurag Sharma">
      <organization>Google</organization>
      <address>
        <email>ansha@google.com</email>
      </address>
    </author>
    <author initials="Y." surname="Shi" fullname="Yan Shi">
      <organization>China Unicom</organization>
      <address>
        <email>shiyan49@chinaunicom.cn</email>
      </address>
    </author>
    <author initials="D." surname="Ceccarelli" fullname="Daniele Ceccarelli">
      <organization>Ericsson</organization>
      <address>
        <email>daniele.ceccarelli@ericsson.com</email>
      </address>
    </author>

    <date year="2021" month="October" day="28"/>

    
    <workgroup>TEAS Working Group</workgroup>
    

    <abstract>


<t>There are scenarios, typically in a hierarchical Software-Defined
   Networking (SDN) context, where the topology information provided by
   a Traffic Engineering (TE) network provider may be insufficient for
   its client to perform end-to-end path computation. In these cases the
   client would need to request the provider to calculate some (partial)
   feasible paths.</t>

<t>This document defines a YANG data model for a Remote Procedure Call
   (RPC) to request path computation. This model complements the
   solution, defined in RFC YYYY, to configure a TE tunnel path in
   "compute-only" mode.</t>

<t>[RFC EDITOR NOTE: Please replace RFC YYYY with the RFC number of
   draft-ietf-teas-yang-te once it has been published.</t>

<t>Moreover this document describes some use cases where a path
   computation request, via YANG-based protocols (e.g., NETCONF or
   RESTCONF), can be needed.</t>



    </abstract>


  </front>

  <middle>


<section anchor="intro"><name>Introduction</name>

<t anchor="pc-model">There are scenarios, typically in a hierarchical Software-Defined
   Networking (SDN) context, where the topology information provided by
   a Traffic Engineering (TE) network provider may be insufficient for
   its client to perform end-to-end path computation. In these cases the
   client would need to request the provider to calculate some (partial)
   feasible paths, complementing its topology knowledge, to make end-to-
   end path computation feasible.</t>

<t>These types of scenarios can be applied to different interfaces in
   different reference architectures:</t>

<t><list style="symbols">
  <t>Application-Based Network Operations (ABNO) control interface
<xref target="RFC7491"/>, in which an Application Service Coordinator can request
ABNO controller to take in charge path calculation (see Figure 1
in <xref target="RFC7491"/>).</t>
  <t>Abstraction and Control of TE Networks (ACTN) <xref target="RFC8453"/>, where a
controller hierarchy is defined, the need for path computation
arises on the interface between Customer Network Controller (CNC)
and Multi-Domain Service Coordinator (MDSC), called CNC-MDSC
Interface (CMI), and on the interface between MSDC and
Provisioning Network Controller (PNC), called MDSC-PNC Interface
(MPI). <xref target="RFC8454"/> describes an information model for the Path
Computation request.  <vspace blankLines='1'/>
Multiple protocol solutions can be used for communication between
different controller hierarchical levels. This document assumes that
the controllers are communicating using YANG-based protocols (e.g.,
NETCONF <xref target="RFC6241"/> or RESTCONF <xref target="RFC8040"/>).  <vspace blankLines='1'/>
Path Computation Elements (PCEs), controllers and orchestrators
perform their operations based on Traffic Engineering Databases
(TED). Such TEDs can be described, in a technology agnostic way, with
the YANG data model for TE Topologies <xref target="RFC8795"/>. Furthermore, the
technology specific details of the TED are modelled in the technology
specific topology models, e.g., the <xref target="I-D.ietf-ccamp-otn-topo-yang"/> for Optical Transport
Network (OTN) Optical Data Unit (ODU) technologies, which augment the
common TE topology model in <xref target="RFC8795"/>.  <vspace blankLines='1'/>
The availability of such topology models allows the provisioning of
the TED using YANG-based protocols (e.g., NETCONF or RESTCONF).
Furthermore, it enables a PCE/controller performing the necessary
abstractions or modifications and offering this customized topology
to another PCE/controller or high level orchestrator.  <vspace blankLines='1'/>
The tunnels that can be provided over the networks described with the
topology models can be also set-up, deleted and modified via YANG-
based protocols (e.g., NETCONF or RESTCONF) using the TE tunnel YANG
data model <xref target="I-D.ietf-teas-yang-te"/>.  <vspace blankLines='1'/>
This document defines a YANG data model <xref target="RFC7950"/> for an RPC to
request path computation, which complements the solution defined in
<xref target="I-D.ietf-teas-yang-te"/>, to configure a TE tunnel path in "compute-only" mode.  <vspace blankLines='1'/>
The YANG data model definition does not make any assumption about
whether that the client or the server implement a "PCE"
functionality, as defined in <xref target="RFC4655"/>, and the Path Computation
Element Communication Protocol (PCEP) protocol, as defined in
<xref target="RFC5440"/>.  <vspace blankLines='1'/>
Moreover, this document describes some use cases where a path
computation request, via YANG-based protocols (e.g., NETCONF or
RESTCONF), can be needed.  <vspace blankLines='1'/>
The YANG data model defined in this document conforms to the Network
Management Datastore Architecture <xref target="RFC8342"/>.</t>
</list></t>

<section anchor="terminology"><name>Terminology</name>

<t>TED:</t>

<t><list style='empty'>
  <t>The traffic engineering database is a collection of all TE
   information about all TE nodes and TE links in a given network.</t>
</list></t>

<t>PCE:</t>

<t><list style='empty'>
  <t>A Path Computation Element (PCE) is an entity that is capable of
   computing a network path or route based on a network graph, and of
   applying computational constraints during the computation.  The PCE
   entity is an application that can be located within a network node or
   component, on an out-of-network server, etc.  For example, a PCE
   would be able to compute the path of a TE Label Switched Path (LSP)
   by operating on the TED and considering bandwidth and other
   constraints applicable to the TE LSP service request. <xref target="RFC4655"/>.</t>
</list></t>

<t>Domain:</t>

<t><list style='empty'>
  <t>TE information is the data relating to nodes and TE links
   that is used in the process of selecting a TE path.  TE information
   is usually only available within a network.  We call such a zone of
   visibility of TE information a domain.  An example of a domain may be
   an IGP area or an Autonomous System. <xref target="RFC7926"/></t>
</list></t>

<t>The terminology for describing YANG data models is found in
   <xref target="RFC7950"/>.</t>

</section>
<section anchor="tree-diagram"><name>Tree Diagram</name>

<t>Tree diagrams used in this document follow the notation defined in
   <xref target="RFC8340"/>.</t>

</section>
<section anchor="prefixes-in-data-node-names"><name>Prefixes in Data Node Names</name>

<t>In this document, names of data nodes and other data model objects
   are prefixed using the standard prefix associated with the
   corresponding YANG imported modules, as shown in <xref target="tab-prefix"/>.</t>

<texttable title="Prefixes and corresponding YANG modules" anchor="tab-prefix">
      <ttcol align='left'>Prefix</ttcol>
      <ttcol align='left'>YANG module</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>inet</c>
      <c>ietf-inet-types</c>
      <c><xref target="RFC6991"/></c>
      <c>te-types</c>
      <c>ietf-te-types</c>
      <c><xref target="RFC8776"/></c>
      <c>te</c>
      <c>ietf-te</c>
      <c>[RFCYYYY]</c>
      <c>te-pc</c>
      <c>ietf-te-path-computation</c>
      <c>RFCXXXX</c>
</texttable>

<t>RFC Editor Note:
Please replace XXXX with the RFC number assigned to this document.
Please replace RFC YYYY with the RFC number of <xref target="I-D.ietf-teas-yang-te"/> once it has been published.
Please remove this note.</t>

</section>
</section>
<section anchor="use-cases"><name>Use Cases</name>

<t>This section presents some use cases, where a client needs to request
   underlying SDN controllers for path computation.</t>

<t>The use of the YANG data model defined in this document is not
   restricted to these use cases but can be used in any other use case
   when deemed useful.</t>

<t>The presented uses cases have been grouped, depending on the
   different underlying topologies: a) Packet/Optical Integration; b)
   multi-domain Traffic Engineered (TE) Networks; and c) Data Center
   Interconnections. Use cases d) and e) respectively present how to
   apply this YANG data model for standard multi-domain PCE i.e.
   Backward Recursive Path Computation <xref target="RFC5441"/> and Hierarchical PCE
   <xref target="RFC6805"/>.</t>

<section anchor="poi-uc"><name>Packet/Optical Integration</name>

<t>In this use case, an optical domain is used to provide connectivity
   to some nodes of a packet domain (see <xref target="fig-poi-uc"/>).</t>

<figure title="Packet/Optical Integration use case" anchor="fig-poi-uc"><artwork><![CDATA[
                                +----------------+
                                |                |
                                | Packet/Optical |
                                |  Coordinator   |
                                |                |
                                +---+------+-----+
                                    |      |
                       +------------+      |
                       |                   +-----------+
                +------V-----+                         |
                |            |                  +------V-----+
                | Packet     |                  |            |
                | Domain     |                  | Optical    |
                | Controller |                  | Domain     |
                |            |                  | Controller |
                +------+-----+                  +-------+----+
                       |                                |
              .........V.........................       |
              :          packet domain          :       |
          +----+                               +----+   |
          | R1 |= = = = = = = = = = = = = = = =| R2 |   |
          +-+--+                               +--+-+   |
            | :                                 : |     |
            | :................................ : |     |
            |                                     |     |
            |               +-----+               |     |
            |    ...........| Opt |...........    |     |
            |    :          |  C  |          :    |     |
            |    :         /+--+--+\         :    |     |
            |    :        /    |    \        :    |     |
            |    :       /     |     \       :    |     |
            |   +-----+ /   +--+--+   \ +-----+   |     |
            |   | Opt |/    | Opt |    \| Opt |   |     |
            +---|  A  |     |  D  |     |  B  |---+     |
                +-----+\    +--+--+    /+-----+         |
                 :      \      |      /      :          |
                 :       \     |     /       :          |
                 :        \ +--+--+  / optical<---------+
                 :         \| Opt |/  domain :
                 :..........|  E  |..........:
                            +-----+
]]></artwork></figure>

<t><xref target="fig-poi-uc"/> as well as <xref target="fig-poi-abstraction"/> below only show a partial view of the
   packet network connectivity, before additional packet connectivity is
   provided by the optical network.</t>

<t>It is assumed that the Optical Domain Controller provides to the
   Packet/Optical Coordinator an abstracted view of the optical network.
   A possible abstraction could be to represent the whole optical
   network as one "virtual node" with "virtual ports" connected to the
   access links, as shown in <xref target="fig-poi-abstraction"/>.</t>

<t>It is also assumed that Packet Domain Controller can provide the
   Packet/Optical Coordinator the information it needs to set up
   connectivity between packet nodes through the optical network (e.g.,
   the access links).</t>

<t>The path computation request helps the Packet/Optical Coordinator to
   know the real connections that can be provided by the optical
   network.</t>

<figure title="Packet and Optical Topology Abstractions" anchor="fig-poi-abstraction"><artwork><![CDATA[
                       ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,.
                      ,  Packet/Optical Coordinator view          ,
                     ,                              +----+       , .
                    ,                               |    |      ,
                   ,                                | R2 |     ,   .
                  ,  +----+  +------------ +       /+----+    ,
                 ,   |    |  |             |/-----/ / /      ,     .
                ,    | R1 |--O VP1     VP4 O       / /      ,
               ,     |    |\ |             | /----/ /      ,       .
              ,      +----+ \|             |/      /      ,
             ,        /      O VP2     VP5 O      /      ,         .
            ,        /       |             |  +----+    ,
           ,        /        |             |  |    |   ,           .
          ,        /         O VP3     VP6 O--| R4 |  ,
         ,     +----+ /-----/|_____________|  +----+ ,             .
        ,      |    |/       +------------ +        ,
       ,       | R3 |                              ,               .
      ,        +----+                             ,,,,,,,,,,,,,,,,,
     ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,                ,.
     . Packet Domain Controller view                +----+       ,
       only packet nodes and packet links           |    |      ,  .
     . with access links to the optical network     | R2 |     ,
                  ,  +----+                        /+----+    ,    .
     .           ,   |    |                 /-----/ / /      ,
                ,    | R1 |---                     / /      ,      .
     .         ,     +----+\                 /----/ /      ,
              ,        /    \               /      /      ,        .
     .       ,        /                           /      ,
            ,        /                        +----+    ,          .
     .     ,        /                         |    |   ,
          ,        /                       ---| R4 |  ,            .
     .   ,     +----+ /-----/                 +----+ ,
        ,      |    |/                              ,              .
     . ,       | R3 |                              ,
      ,        +----+                             ,,,,,,,,,,,,,,,,,.
     .,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,                ,
       Optical Domain Controller view                            , .
     . only optical nodes,        +--+                          ,
       optical links and         /|OF|                         ,   .
     . access links from the  +--++--+             /          ,
       packet network         |OA|    \     /-----/ /        ,     .
     .          ,          ---+--+--\  +--+/       /        ,
               ,           \   |  \  \-|OE|-------/        ,       .
     .        ,             \  |   \ /-+--+               ,
             ,               \+--+  X    |               ,         .
     .      ,                 |OB|-/ \   |              ,
           ,                  +--+-\  \+--+            ,           .
     .    ,                  /   \  \--|OD|---        ,
         ,            /-----/     +--+ +--+          ,             .
     .  ,            /            |OC|/             ,
       ,                          +--+             ,               .
     .,                                           ,,,,,,,,,,,,,,,,,,
      ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,                ,
     . Actual Physical View                         +----+       ,
                    ,             +--+              |    |      ,
     .             ,             /|OF|              | R2 |     ,
                  ,  +----+   +--++--+             /+----+    ,
     .           ,   |    |   |OA|    \     /-----/ / /      ,
                ,    | R1 |---+--+--\  +--+/       / /      ,
     .         ,     +----+\   |  \  \-|OE|-------/ /      ,
              ,        /    \  |   \ /-+--+        /      ,
     .       ,        /      \+--+  X    |        /      ,
            ,        /        |OB|-/ \   |    +----+    ,
     .     ,        /         +--+-\  \+--+   |    |   ,
          ,        /         /   \  \--|OD|---| R4 |  ,
     .   ,     +----+ /-----/     +--+ +--+   +----+ ,
        ,      |    |/            |OC|/             ,
     . ,       | R3 |             +--+             ,
      ,        +----+                             ,
     .,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
]]></artwork></figure>

<t>In this use case, the Packet/Optical Coordinator needs to set up an
   optimal underlying path for an IP link between R1 and R2.</t>

<t>As depicted in <xref target="fig-poi-abstraction"/>, the Packet/Optical Coordinator has only an
   "abstracted view" of the physical network, and it does not know the
   feasibility or the cost of the possible optical paths (e.g., VP1-VP4
   and VP2-VP5), which depend on the current status of the physical
   resources within the optical network and on vendor-specific optical
   attributes.</t>

<t>The Packet/Optical Coordinator can request the underlying Optical
   Domain Controller to compute a set of potential optimal paths, taking
   into account optical constraints. Then, based on its own constraints,
   policy and knowledge (e.g. cost of the access links), it can choose
   which one of these potential paths to use to set up the optimal end-
   to-end path crossing optical network.</t>

<figure title="Packet/Optical Integration path computation example" anchor="fig-poi-example"><artwork><![CDATA[
                    ............................
                    :                          :
                    O VP1                  VP4 O
           cost=10 /:\                        /:\ cost=10
                  / : \----------------------/ : \
          +----+ /  :         cost=50          :  \ +----+
          |    |/   :                          :   \|    |
          | R1 |    :                          :    | R2 |
          |    |\   :                          :   /|    |
          +----+ \  :  /--------------------\  :  / +----+
                  \ : /       cost=55        \ : /
            cost=5 \:/                        \:/ cost=5
                    O VP2                  VP5 O
                    :                          :
                    :..........................:
]]></artwork></figure>

<t>For example, in <xref target="fig-poi-example"/>, the Packet/Optical Coordinator can request
   the Optical Domain Controller to compute the paths between VP1-VP4
   and VP2-VP5 and then decide to set up the optimal end-to-end path
   using the VP2-VP5 optical path even if this is not the optimal path
   from the optical domain perspective.</t>

<t>Considering the dynamicity of the connectivity constraints of an
   optical domain, it is possible that a path computed by the Optical
   Domain Controller when requested by the Packet/Optical Coordinator is
   no longer valid/available when the Packet/Optical Coordinator
   requests it to be set up. This is further discussed in <xref target="rpc-motivation"/>.</t>

</section>
<section anchor="md-uc"><name>Multi-domain TE networks</name>

<t>In this use case there are two TE domains which are interconnected
   together by multiple inter-domains links.</t>

<t>A possible example could be a multi-domain optical network.</t>

<figure title="Multi-domain multi-link interconnection" anchor="md-ml-connection"><artwork><![CDATA[
                            +--------------+
                            | Multi-Domain |
                            | Controller   |
                            +---+------+---+
                                |      |
                   +------------+      |
                   |                   +-----------+
            +------V-----+                         |
            |            |                         |
            | TE Domain  |                  +------V-----+
            | Controller |                  |            |
            |      1     |                  | TE Domain  |
            +------+-----+                  | Controller |
                   |                        |      2     |
                   |                        +------+-----+
          .........V..........                     |
          :                  :                     |
         +-----+             :                     |
         |     |             :            .........V..........
         |  X  |             :            :                  :
         |     |          +-----+      +-----+                :
         +-----+          |     |      |     |               :
          :               |  C  |------|  E  |               :
      +-----+    +-----+ /|     |      |     |\ +-----+    +-----+
      |     |    |     |/ +-----+      +-----+ \|     |    |     |
      |  A  |----|  B  |     :            :     |  G  |----|  H  |
      |     |    |     |\    :            :    /|     |    |     |
      +-----+    +-----+ \+-----+      +-----+/ +-----+    +-----+
          :               |     |      |     |               :
          :               |  D  |------|  F  |               :
          :               |     |      |     |          +-----+
          :               +-----+      +-----+          |     |
          :                  :            :             |  Y  |
          :                  :            :             |     |
          :   TE domain 1    :            : TE domain 2 +-----+
          :..................:            :.................:
]]></artwork></figure>

<t>In order to set up an end-to-end multi-domain TE path (e.g., between
   nodes A and H), the Multi-Domain Controller needs to know the
   feasibility or the cost of the possible TE paths within the two TE
   domains, which depend on the current status of the physical resources
   within each TE domain. This is more challenging in case of optical
   networks because the optimal paths depend also on vendor-specific
   optical attributes (which may be different in the two domains if they
   are provided by different vendors).</t>

<t>In order to set up a multi-domain TE path (e.g., between nodes A and
   H), the Multi-Domain Controller can request the TE Domain Controllers
   to compute a set of intra-domain optimal paths and take decisions
   based on the information received. For example:</t>

<t><list style="symbols">
  <t>The Multi-Domain Controller asks TE Domain Controllers to provide
set of paths between A-C, A-D, E-H and F-H</t>
  <t>TE Domain Controllers return a set of feasible paths with the
associated costs: the path A-C is not part of this set (in optical
networks, it is typical to have some paths not being feasible due
to optical constraints that are known only by the Optical Domain
Controller)</t>
  <t>The Multi-Domain Controller will select the path A-D-F-H since it
is the only feasible multi-domain path and then request the TE
Domain Controllers to set up the A-D and F-H intra-domain paths</t>
  <t>If there are multiple feasible paths, the Multi-Domain Controller
can select the optimal path knowing the cost of the intra-domain
paths (provided by the TE domain controllers) and the cost of the
inter-domain links (known by the Multi-Domain Controller)  <vspace blankLines='1'/>
This approach may have some scalability issues when the number of TE
domains is quite big (e.g. 20).  <vspace blankLines='1'/>
In this case, it would be worthwhile using the abstract TE topology
information provided by the TE Domain Controllers to limit the number
of potential optimal end-to-end paths and then request path
computation from fewer TE Domain Controllers in order to decide what
the optimal path within this limited set is.  <vspace blankLines='1'/>
For more details, see <xref target="topo-pc-complement"/>.</t>
</list></t>

</section>
<section anchor="data-center-interconnections"><name>Data Center Interconnections</name>

<t>In these use case, there is a TE domain which is used to provide
   connectivity between Data Centers which are connected with the TE
   domain using access links.</t>

<figure title="Data Center Interconnection use case" anchor="fig-dci-uc"><artwork><![CDATA[
                        +--------------+
                        | Cloud Network|
                        | Orchestrator |
                        +--------------+
                          |  |  |  |
            +-------------+  |  |  +------------------------+
            |                |  +------------------+        |
            |       +--------V---+                 |        |
            |       |            |                 |        |
            |       | TE Network |                 |        |
     +------V-----+ | Controller |          +------V-----+  |
     | DC         | +------------+          | DC         |  |
     | Controller |     |                   | Controller |  |
     +------------+     |   +-----+         +------------+  |
          |         ....V...|     |........         |       |
          |         :       |  P  |       :         |       |
     .....V.....    :      /+-----+\      :    .....V.....  |
     :         :  +-----+ /    |    \ +-----+  :         :  |
     :  DC1 || :  |     |/     |     \|     |  :  DC2 || :  |
     :    ||||----| PE1 |      |      | PE2 |----   |||| :  |
     : _|||||| :  |     |\     |     /|     |  : _|||||| :  |
     :         :  +-----+ \ +-----+ / +-----+  :         :  |
     :.........:    :      \|     |/      :    :.........:  |
                    :.......| PE3 |.......:                 |
                            |     |                         |
                            +-----+               +---------V--+
                          .....|.....             | DC         |
                          :         :             | Controller |
                          :  DC3 || :             +------------+
                          :    |||| :                  |
                          : _|||||| <------------------+
                          :         :
                          :.........:
]]></artwork></figure>

<t>In this use case, there is the need to transfer data from Data Center
   1 (DC1) to either DC2 or DC3 (e.g. workload migration).</t>

<t>The optimal decision depends both on the cost of the TE path (DC1-DC2
   or DC1-DC3) and of the Data Center resources within DC2 or DC3.</t>

<t>The Cloud Network Orchestrator needs to make a decision for optimal
   connection based on TE network constraints and Data Center resources.</t>

<t>It may not be able to make this decision because it has only an
   abstract view of the TE network (as in <xref target="poi-uc"/>).</t>

<t>The Cloud Network Orchestrator can request to the TE Network
   Controller to compute the cost of the possible TE paths (e.g., DC1-
   DC2 and DC1-DC3) and to the DC Controller to provide the information
   it needs about the required Data Center resources within DC2 and DC3
   and then it can take the decision about the optimal solution based on
   this information and its policy.</t>

</section>
<section anchor="backward-recursive-path-computation-scenario"><name>Backward Recursive Path Computation scenario</name>

<t><xref target="RFC5441"/> has defined the Virtual Source Path Tree (VSPT) TLV within
   PCE Reply Object in order to compute inter-domain paths following a
   "Backward Recursive Path Computation" (BRPC) method. The main
   principle is to forward the PCE request message up to the destination
   domain. Then, each PCE involved in the computation will compute its
   part of the path and send it back to the requester through PCE
   Response message. The resulting computation is spread from
   destination PCE to source PCE. Each PCE is in charge of merging the
   path it received with the one it calculated. At the end, the source
   PCE merges its local part of the path with the received one to
   achieve the end-to-end path.</t>

<t><xref target="fig-brpc-example"/> below show a typical BRPC scenario where 3 PCEs cooperate to
   compute inter-domain paths.</t>

<figure title="BRPC Scenario" anchor="fig-brpc-example"><artwork><![CDATA[
                   +----------------+          +----------------+
                   |  Domain (B)    |          |  Domain (C)    |
                   |                |          |                |
                   |        /-------|---PCEP---|--------\       |
                   |       /        |          |         \      |
                   |   (PCE)        |          |   -    (PCE)   |
                   |    /           <---------->  |D|           |
                   |   /            |  Inter   |   -            |
                   +---|----^-------+  Domain  +----------------+
                       |    |          Link
                     PCEP   |
                       |    | Inter-domain Link
                       |    |
                   +---|----v-------+
                   |   |            |
                   |   | Domain (A) |
                   |   \            |
                   |  (PCE)    -    |
                   |          |S|   |
                   |           -    |
                   +----------------+
]]></artwork></figure>

<t>In this use case, a client can use the YANG data model defined in
   this document to request path computation from the PCE that controls
   the source of the tunnel. For example, a client can request to the
   PCE of domain A to compute a path from a source S, within domain A,
   to a destination D, within domain C. Then PCE of domain A will use
   PCEP protocol, as per <xref target="RFC5441"/>, to compute the path from S to D and
   in turn gives the final answer to the requester.</t>

</section>
<section anchor="hierarchical-pce-scenario"><name>Hierarchical PCE scenario</name>

<t><xref target="RFC6805"/> has defined an architecture and extensions to the PCE
   standard to compute inter-domain path following a hierarchical
   method. Two new roles have been defined: parent PCE and child PCE.
   The parent PCE is in charge to coordinate the end-to-end path
   computation. For that purpose it sends to each child PCE involved in
   the multi-domain path computation a PCE Request message to obtain the
   local part of the path. Once received all answer through PCE Response
   message, the parent PCE will merge the different local parts of the
   path to achieve the end-to-end path.</t>

<t><xref target="fig-hpce-example"/> below shows a typical hierarchical scenario where a parent
   PCE request end-to-end path to the different child PCE. Note that a
   PCE could take independently the role of child or parent PCE
   depending of which PCE will request the path.</t>

<figure title="Hierarchical domain topology from RFC6805" anchor="fig-hpce-example"><artwork><![CDATA[
    -----------------------------------------------------------------
    |   Domain 5                                                      |
    |                              -----                              |
    |                             |PCE 5|                             |
    |                              -----                              |
    |                                                                 |
    |    ----------------     ----------------     ----------------   |
    |   | Domain 1       |   | Domain 2       |   | Domain 3       |  |
    |   |                |   |                |   |                |  |
    |   |        -----   |   |        -----   |   |        -----   |  |
    |   |       |PCE 1|  |   |       |PCE 2|  |   |       |PCE 3|  |  |
    |   |        -----   |   |        -----   |   |        -----   |  |
    |   |                |   |                |   |                |  |
    |   |            ----|   |----        ----|   |----            |  |
    |   |           |BN11+---+BN21|      |BN23+---+BN31|           |  |
    |   |   -        ----|   |----        ----|   |----        -   |  |
    |   |  |S|           |   |                |   |           |D|  |  |
    |   |   -        ----|   |----        ----|   |----        -   |  |
    |   |           |BN12+---+BN22|      |BN24+---+BN32|           |  |
    |   |            ----|   |----        ----|   |----            |  |
    |   |                |   |                |   |                |  |
    |   |         ----   |   |                |   |   ----         |  |
    |   |        |BN13|  |   |                |   |  |BN33|        |  |
    |    -----------+----     ----------------     ----+-----------   |
    |                \                                /               |
    |                 \       ----------------       /                |
    |                  \     |                |     /                 |
    |                   \    |----        ----|    /                  |
    |                    ----+BN41|      |BN42+----                   |
    |                        |----        ----|                       |
    |                        |                |                       |
    |                        |        -----   |                       |
    |                        |       |PCE 4|  |                       |
    |                        |        -----   |                       |
    |                        |                |                       |
    |                        | Domain 4       |                       |
    |                         ----------------                        |
    |                                                                 |
     -----------------------------------------------------------------
]]></artwork></figure>

<t>In this use case, a client can use the YANG data model defined in
   this document to request to the parent PCE a path from a source S to
   a destination D. The parent PCE will in turn contact the child PCEs
   through PCEP protocol to compute the end-to-end path and then return
   the computed path to the client, using the YANG data model defined in
   this document. For example the YANG data model can be used to request
   to PCE5 acting as parent PCE to compute a path from source S, within
   domain 1, to destination D, within domain 3. PCE5 will contact child
   PCEs of domain 1, 2 and 3 to obtain local part of the end-to-end path
   through the PCEP protocol. Once received the PCE Response message, it
   merges the answers to compute the end-to-end path and send it back to
   the client.</t>

</section>
</section>
<section anchor="motivations"><name>Motivations</name>

<t>This section provides the motivation for the YANG data model defined
   in this document.</t>

<t><xref target="yang-motivation"/> describes the motivation for a YANG data model to request
   path computation.</t>

<t><xref target="topo-interaction"/> describes the motivation for a YANG data model which
   complements the TE topology YANG data model defined in <xref target="RFC8795"/>.</t>

<t><xref target="rpc-motivation"/> describes the motivation for a YANG RPC which complements
   the TE tunnel YANG data model defined in <xref target="I-D.ietf-teas-yang-te"/>.</t>

<section anchor="yang-motivation"><name>Motivation for a YANG Model</name>

<section anchor="benefits-of-common-data-models"><name>Benefits of common data models</name>

<t>The YANG data model for requesting path computation is closely
   aligned with the YANG data models that provide (abstract) TE topology
   information, i.e., <xref target="RFC8795"/> as well as that are used to configure
   and manage TE tunnels, i.e., <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>There are many benefits in aligning the data model used for path
   computation requests with the YANG data models used for TE topology
   information and for TE tunnels configuration and management:</t>

<t><list style="symbols">
  <t>There is no need for an error-prone mapping or correlation of
information.</t>
  <t>It is possible to use the same endpoint identifiers in path
computation requests and in the topology modeling.</t>
  <t>The attributes used for path computation constraints are the same
as those used when setting up a TE tunnel.</t>
</list></t>

</section>
<section anchor="benefits-of-a-single-interface"><name>Benefits of a single interface</name>

<t>The system integration effort is typically lower if a single,
   consistent interface is used by controllers, i.e., one data modeling
   language (i.e., YANG) and a common protocol (e.g., NETCONF or
   RESTCONF).</t>

<t>Practical benefits of using a single, consistent interface include:</t>

<t><list style="numbers">
  <t>Simple authentication and authorization: The interface between
different components has to be secured. If different protocols
have different security mechanisms, ensuring a common access
control model may result in overhead. For instance, there may be a
need to deal with different security mechanisms, e.g., different
credentials or keys. This can result in increased integration
effort.</t>
  <t>Consistency: Keeping data consistent over multiple different
interfaces or protocols is not trivial. For instance, the sequence
of actions can matter in certain use cases, or transaction
semantics could be desired. While ensuring consistency within one
protocol can already be challenging, it is typically cumbersome to
achieve that across different protocols.</t>
  <t>Testing: System integration requires comprehensive testing,
including corner cases. The more different technologies are
involved, the more difficult it is to run comprehensive test cases
and ensure proper integration.</t>
  <t>Middle-box friendliness: Provider and consumer of path computation
requests may be located in different networks, and middle-boxes
such as firewalls, NATs, or load balancers may be deployed. In
such environments it is simpler to deploy a single protocol. Also,
it may be easier to debug connectivity problems.</t>
  <t>Tooling reuse: Implementers may want to implement path computation
requests with tools and libraries that already exist in
controllers and/or orchestrators, e.g., leveraging the rapidly
growing eco-system for YANG tooling.</t>
</list></t>

</section>
<section anchor="extensibility"><name>Extensibility</name>

<t>Path computation is only a subset of the typical functionality of a
   controller. In many use cases, issuing path computation requests
   comes along with the need to access other functionality on the same
   system. In addition to obtaining TE topology, for instance also
   configuration of services (set-up/modification/deletion) may be
   required, as well as:</t>

<t><list style="numbers">
  <t>Receiving notifications for topology changes as well as
integration with fault management</t>
  <t>Performance management such as retrieving monitoring and telemetry
data</t>
  <t>Service assurance, e.g., by triggering OAM functionality</t>
  <t>Other fulfilment and provisioning actions beyond tunnels and
services, such as changing QoS configurations  <vspace blankLines='1'/>
YANG is a very extensible and flexible data modeling language that
can be used for all these use cases.</t>
</list></t>

</section>
</section>
<section anchor="topo-interaction"><name>Interactions with TE topology</name>

<t>The use cases described in <xref target="use-cases"/> have been described assuming
   that the topology view exported by each underlying controller to its
   client is aggregated using the "virtual node model", defined in
   <xref target="RFC7926"/>.</t>

<t>TE topology information, e.g., as provided by <xref target="RFC8795"/>, could in
   theory be used by an underlying controller to provide TE information
   to its client thus allowing a PCE available within its client to
   perform multi-domain path computation on its own, without requesting
   path computations to the underlying controllers.</t>

<t>In case the client does not implement a PCE function, as discussed in
   <xref target="intro"/>, it could not perform path computation based on TE topology
   information and would instead need to request path computation from
   the underlying controllers to get the information it needs to find
   the optimal end-to-end path.</t>

<t>In case the client implements a PCE function, as discussed in 
   <xref target="intro"/>, the TE topology information needs to be complete and accurate,
   which would bring to scalability issues.</t>

<t>Using TE topology to provide a "virtual link model" aggregation, as
   described in <xref target="RFC7926"/>, may be insufficient, unless the aggregation
   provides complete and accurate information, which would still cause
   scalability issues, as described in <xref target="topo-aggregation"/> below.</t>

<t>Using TE topology abstraction, as described in <xref target="RFC7926"/>, may lead to
   compute an unfeasible path, as described in <xref target="RFC7926"/> in 
   <xref target="topo-abstraction"/> below.</t>

<t>Therefore when computing an optimal multi-domain path, there is a
   scalability trade-off between providing complete and accurate TE
   information and the number of path computation requests to the
   underlying controllers.</t>

<t>The TE topology information used, in a complimentary way, to reduce
   the number for path computation requests to the underlying
   controllers, are described in <xref target="topo-pc-complement"/> below.</t>

<section anchor="topo-aggregation"><name>TE topology aggregation</name>

<t>Using the TE topology model, as defined in <xref target="RFC8795"/>, the underlying
   controller can export the whole TE domain as a single TE node with a
   "detailed connectivity matrix" (which provides specific TE
   attributes, such as delay, Shared Risk Link Groups (SRLGs) and other
   TE metrics, between each ingress and egress links).</t>

<t>The information provided by the "detailed connectivity matrix" would
   be equivalent to the information that should be provided by "virtual
   link model" as defined in <xref target="RFC7926"/>.</t>

<t>For example, in the Packet/Optical Integration use case, described in
   <xref target="poi-uc"/>, the Optical Domain Controller can make the information
   shown in <xref target="fig-poi-example"/> available to the Packet/Optical Coordinator as part
   of the TE topology information and the Packet/Optical Coordinator
   could use this information to calculate on its own the optimal path
   between R1 and R2, without requesting any additional information to
   the Optical Domain Controller.</t>

<t>However, when designing the amount of information to provide within
   the "detailed connectivity matrix", there is a tradeoff to be
   considered between accuracy (i.e., providing "all" the information
   that might be needed by the PCE available within the client) and
   scalability.</t>

<t><xref target="poi-multi-path"/> below shows another example, similar to <xref target="fig-poi-example"/>, where
   there are two possible Optical paths between VP1 and VP4 with
   different properties (e.g., available bandwidth and cost).</t>

<figure title="Packet/Optical Integration path computation Example with multiple choices" anchor="poi-multi-path"><artwork><![CDATA[
                    ............................
                    :  /--------------------\  :
                    : /       cost=65        \ :
                    :/    available-bw=10G    \:
                    O VP1                  VP4 O
           cost=10 /:\                        /:\ cost=10
                  / : \----------------------/ : \
          +----+ /  :         cost=50          :  \ +----+
          |    |/   :     available-bw=2G      :   \|    |
          | R1 |    :                          :    | R2 |
          |    |\   :                          :   /|    |
          +----+ \  :  /--------------------\  :  / +----+
                  \ : /       cost=55        \ : /
            cost=5 \:/    available-bw=3G     \:/ cost=5
                    O VP2                  VP5 O
                    :                          :
                    :..........................:
]]></artwork></figure>

<t>If the information in the "detailed connectivity matrix" is not
   complete/accurate, we can have the following drawbacks:</t>

<t><list style="symbols">
  <t>If only the VP1-VP4 path with available bandwidth of 2 Gb/s and
cost 50 is reported, the client's PCE will fail to compute a 5
Gb/s path between routers R1 and R2, although this would be
feasible;</t>
  <t>If only the VP1-VP4 path with available bandwidth of 10 Gb/s and
cost 60 is reported, the client's PCE will compute, as optimal,
the 1 Gb/s path between R1 and R2 going through the VP2-VP5 path
within the optical domain while the optimal path would actually be
the one going thought the VP1-VP4 sub-path (with cost 50) within
the optical domain.  <vspace blankLines='1'/>
Reporting all the information, as in <xref target="poi-multi-path"/>, using the "detailed
 connectivity matrix", is quite challenging from a scalability
 perspective. The amount of this information is not just based on
 number of end points (which would scale as N-square), but also on
 many other parameters, including client rate, user
 constraints/policies for the service, e.g. max latency &lt; N ms, max
 cost, etc., exclusion policies to route around busy links, min
 Optical Signal to Noise Ratio (OSNR) margin, max pre-Forward Error
 Correction (FEC) Bit Error Rate (BER) etc. All these constraints
 could be different based on connectivity requirements.  <vspace blankLines='1'/>
It is also worth noting that the "connectivity matrix" has been
 originally defined in Wavelength Switched Optical Networks (WSON),
 <xref target="RFC7446"/>, to report the connectivity constrains of a physical node
 within the Wavelength Division Multiplexing (WDM) network: the
 information it contains is pretty "static" and therefore, once taken
 and stored in the TE data base, it can be always being considered
 valid and up-to-date in path computation request.  <vspace blankLines='1'/>
The "connectivity matrix" is sometimes confused with "optical reach
 table" that contain multiple (e.g. k-shortest) regen-free reachable
 paths for every A-Z node combination in the network. Optical reach
 tables can be calculated offline, utilizing vendor optical design and
 planning tools, and periodically uploaded to the Controller: these
 optical path reach tables are fairly static. However, to get the
 connectivity matrix, between any two sites, either a regen free path
 can be used, if one is available, or multiple regen free paths are
 concatenated to get from the source to the destination, which can be
 a very large combination. Additionally, when the optical path within
 optical domain needs to be computed, it can result in different paths
 based on input objective, constraints, and network conditions. In
 summary, even though "optical reach table" is fairly static, which
 regen free paths to build the connectivity matrix between any source
 and destination is very dynamic, and is done using very sophisticated
 routing algorithms.  <vspace blankLines='1'/>
Using the "basic connectivity matrix" with an abstract node to
 abstract the information regarding the connectivity constraints of an
 Optical domain, would make this information more "dynamic" since the
 connectivity constraints of an optical domain can change over time
 because some optical paths that are feasible at a given time may
 become unfeasible at a later time when e.g., another optical path is
 established.  <vspace blankLines='1'/>
The information in the "detailed connectivity matrix" is even more
 dynamic since the establishment of another optical path may change
 some of the parameters (e.g., delay or available bandwidth) in the
 "detailed connectivity matrix" while not changing the feasibility of
 the path.  <vspace blankLines='1'/>
There is therefore the need to keep the information in the "detailed
 connectivity matrix" updated which means that there another tradeoff
 between the accuracy (i.e., providing "all" the information that
 might be needed by the client's PCE) and having up-to-date
 information. The more the information is provided and the longer it
 takes to keep it up-to-date which increases the likelihood that the
 client's PCE computes paths using not updated information.  <vspace blankLines='1'/>
It seems therefore quite challenging to have a "detailed connectivity
 matrix" that provides accurate, scalable and updated information to
 allow the client's PCE to take optimal decisions by its own.  <vspace blankLines='1'/>
Considering the example in <xref target="poi-multi-path"/> with the approach defined in this
 document, the client, when it needs to set up an end-to-end path, it
 can request the Optical Domain Controller to compute a set of optimal
 paths (e.g., for VP1-VP4 and VP2-VP5) and take decisions based on the
 information received:</t>
  <t>When setting up a 5 Gb/s path between routers R1 and R2, the
Optical Domain Controller may report only the VP1-VP4 path as the
only feasible path: the Packet/Optical Coordinator can
successfully set up the end-to-end path passing though this
optical path;</t>
  <t>When setting up a 1 Gb/s path between routers R1 and R2, the
Optical Domain Controller (knowing that the path requires only 1
Gb/s) can report both the VP1-VP4 path, with cost 50, and the VP2-
VP5 path, with cost 65. The Packet/Optical Coordinator can then
compute the optimal path which is passing thought the VP1-VP4 sub-
path (with cost 50) within the optical domain.</t>
</list></t>

</section>
<section anchor="topo-abstraction"><name>TE topology abstraction</name>

<t>Using the TE topology model, as defined in <xref target="RFC8795"/>, the underlying
   controller can export to its client an abstract TE topology, composed
   by a set of TE nodes and TE links, representing the abstract view of
   the topology under its control.</t>

<t>For example, in the multi-domain TE network use case, described in
   <xref target="md-uc"/>, the TE Domain Controller 1 can export a TE topology
   encompassing the TE nodes A, B, C and D and the TE links
   interconnecting them. In a similar way, the TE Domain Controller 2
   can export a TE topology encompassing the TE nodes E, F, G and H and
   the TE links interconnecting them.</t>

<t>In this example, for simplicity reasons, each abstract TE node maps
   with each physical node, but this is not necessary.</t>

<t>In order to set up a multi-domain TE path (e.g., between nodes A and
   H), the Multi-Domain Controller can compute by its own an optimal
   end-to-end path based on the abstract TE topology information
   provided by the domain controllers. For example:</t>

<t><list style="symbols">
  <t>Multi-Domain Controller can compute, based on its own TED data,
the optimal multi-domain path being A-B-C-E-G-H, and then request
the TE Domain Controllers to set up the A-B-C and E-G-H intra-
domain paths</t>
  <t>But, during path set-up, the TE Domain Controller may find out
that A-B-C intra-domain path is not feasible (as discussed in
<xref target="md-uc"/>, in optical networks it is typical to have some paths
not being feasible due to optical constraints that are known only
by the Optical Domain Controller), while only the path A-B-D is
feasible</t>
  <t>So what the Multi-Domain Controller has computed is not good and
it needs to re-start the path computation from scratch  <vspace blankLines='1'/>
As discussed in <xref target="topo-aggregation"/>, providing more extensive abstract
information from the TE Domain Controllers to the Multi-Domain
Controller may lead to scalability problems.  <vspace blankLines='1'/>
In a sense this is similar to the problem of routing and wavelength
assignment within an optical domain. It is possible to do first
routing (step 1) and then wavelength assignment (step 2), but the
chances of ending up with a good path is low. Alternatively, it is
possible to do combined routing and wavelength assignment, which is
known to be a more optimal and effective way for optical path set-up.
Similarly, it is possible to first compute an abstract end-to-end
path within the Multi-Domain Controller (step 1) and then compute an
intra-domain path within each optical domain (step 2), but there are
more chances not to find a path or to get a suboptimal path than by
performing multiple per-domain path computations and then stitching
them together.</t>
</list></t>

</section>
<section anchor="topo-pc-complement"><name>Complementary use of the TE topology</name>

<t>As discussed in <xref target="md-uc"/>, there are some scalability issues with
   path computation requests in a multi-domain TE network with many TE
   domains, in terms of the number of requests to send to the TE Domain
   Controllers. It would therefore be worthwhile using the abstract TE
   topology information provided by the TE Domain Controllers to limit
   the number of requests.</t>

<t>An example can be described considering the multi-domain abstract TE
   topology shown in <xref target="fig-topo-many-domains"/>. In this example, an end-to-end TE path
   between domains A and F needs to be set up. The transit TE domain
   should be selected between domains B, C, D and E.</t>

<figure title="Multi-domain with many domains (Topology information)" anchor="fig-topo-many-domains"><artwork><![CDATA[
                          .........B.........
                          : _ _ _ _ _ _ _ _ :
                          :/               \:
                      +---O  NOT FEASIBLE   O---+
                cost=5|   :                 :   |
    ......A......     |   :.................:   |     ......F......
    :           :     |                         |     :           :
    :           O-----+   .........C.........   +-----O           :
    :           :         : /-------------\ :         :           :
    :           :         :/               \:         :           :
    :  cost<=20 O---------O   cost <= 30    O---------O cost<=20  :
    :          /: cost=5  :                 : cost=5  :\          :
    :  /------/ :         :.................:         : \------\  :
    : /         :                                     :         \ :
    :/ cost<=25 :         .........D.........         : cost<=25 \:
    O-----------O-------+ : /-------------\ : +-------O-----------O
    :\          : cost=5| :/               \: |cost=5 :          /:
    : \         :       +-O   cost <= 30    O-+       :         / :
    :  \------\ :         :                 :         : /------/  :
    : cost>=30 \:         :.................:         :/ cost>=30 :
    :           O-----+                         +-----O           :
    :...........:     |   .........E.........   |     :...........:
                      |   : /-------------\ :   |
                cost=5|   :/               \:   |cost=5
                      +---O   cost >= 30    O---+
                          :                 :
                          :.................:
]]></artwork></figure>

<t>The actual cost of each intra-domain path is not known a priori from
   the abstract topology information. The Multi-Domain Controller only
   knows, from the TE topology provided by the underlying domain
   controllers, the feasibility of some intra-domain paths and some
   upper-bound and/or lower-bound cost information. With this
   information, together with the cost of inter-domain links, the Multi-
   Domain Controller can understand by its own that:</t>

<t><list style="symbols">
  <t>Domain B cannot be selected as the path connecting domains A and F
is not feasible;</t>
  <t>Domain E cannot be selected as a transit domain since it is known
from the abstract topology information provided by domain
controllers that the cost of the multi-domain path A-E-F (which is
100, in the best case) will be always be higher than the cost of
the multi-domain paths A-D-F (which is 90, in the worst case) and
A-C-F (which is 80, in the worst case).  <vspace blankLines='1'/>
Therefore, the Multi-Domain Controller can understand by its own that
 the optimal multi-domain path could be either A-D-F or A-C-F but it
 cannot know which one of the two possible option actually provides
 the optimal end-to-end path.  <vspace blankLines='1'/>
The Multi-Domain Controller can therefore request path computation
 only to the TE Domain Controllers A, D, C and F (and not to all the
 possible TE Domain Controllers).</t>
</list></t>

<figure title="Multi-domain with many domains (Path Computation information)" anchor="fig-pc-many-domains"><artwork><![CDATA[
                          .........B.........
                          :                 :
                      +---O                 O---+
    ......A......     |   :.................:   |     ......F......
    :           :     |                         |     :           :
    :           O-----+   .........C.........   +-----O           :
    :           :         : /-------------\ :         :           :
    :           :         :/               \:         :           :
    :  cost=15  O---------O    cost = 25    O---------O  cost=10  :
    :          /: cost=5  :                 : cost=5  :\          :
    :  /------/ :         :.................:         : \------\  :
    : /         :                                     :         \ :
    :/ cost=10  :         .........D.........         : cost=15  \:
    O-----------O-------+ : /-------------\ : +-------O-----------O
    :           : cost=5| :/               \: |cost=5 :           :
    :           :       +-O    cost = 15    O-+       :           :
    :           :         :                 :         :           :
    :           :         :.................:         :           :
    :           O-----+                         +-----O           :
    :...........:     |   .........E.........   |     :...........:
                      |   :                 :   |
                      +---O                 O---+
                          :.................:
]]></artwork></figure>

<t>Based on these requests, the Multi-Domain Controller can know the
   actual cost of each intra-domain paths which belongs to potential
   optimal end-to-end paths, as shown in <xref target="fig-pc-many-domains"/>, and then compute the
   optimal end-to-end path (e.g., A-D-F, having total cost of 50,
   instead of A-C-F having a total cost of 70).</t>

</section>
</section>
<section anchor="rpc-motivation"><name>Path Computation RPC</name>

<t>The TE tunnel YANG data model, defined in <xref target="I-D.ietf-teas-yang-te"/>, can support
   the need to request path computation, as described in section 5.1.2
   of <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>This solution is stateful since the state of each created "compute-
   only" TE tunnel path needs to be maintained, in the YANG datastores
   (at least in the running datastore and operational datastore), and
   updated, when underlying network conditions change.</t>

<t>The RPC mechanism allows requesting path computation using a simple
   atomic operation, without creating any state in the YANG datastores,
   and it is the natural option/choice, especially with stateless PCE.</t>

<t>It is very useful to provide both the options of using an RPC as well
   as of setting up TE tunnel paths in "compute-only" mode. It is
   suggested to use the RPC as much as possible and to rely on
   "compute-only" TE tunnel paths, when really needed.</t>

<t>Using the RPC solution would imply that the underlying controller
   (e.g., a PNC) computes a path twice during the process to set up an
   LSP: at time T1, when its client (e.g., an MDSC) sends a path
   computation RPC request to it, and later, at time T2, when the same
   client (MDSC) creates a TE tunnel requesting the set-up of the LSP.
   The underlying assumption is that, if network conditions have not
   changed, the same path that has been computed at time T1 is also
   computed at time T2 by the underlying controller (e.g. PNC) and
   therefore the path that is set up at time T2 is exactly the same path
   that has been computed at time T1.</t>

<t>However, since the operation is stateless, there is no guarantee that
   the returned path would still be available when path set-up is
   requested: this does not cause major issues when the time between
   path computation and path set-up is short (especially if compared
   with the time that would be needed to update the information of a
   very detailed connectivity matrix).</t>

<t>In most of the cases, there is even no need to guarantee that the
   path that has been set up is the exactly same as the path that has
   been returned by path computation, especially if it has the same or
   even better metrics. Depending on the abstraction level applied by
   the server, the client may also not know the actual computed path.</t>

<t>The most important requirement is that the required global objectives
   (e.g., multi-domain path metrics and constraints) are met. For this
   reason a path verification phase is always necessary to verify that
   the actual path that has been set up meets the global objectives (for
   example in a multi-domain network, the resulting end-to-end path
   meets the required end-to-end metrics and constraints).</t>

<t>In most of the cases, even if the path being set up is not exactly
   the same as the path returned by path computation, its metrics and
   constraints are "good enough" and the path verification passes
   successfully. In the few corner cases where the path verification
   fails, it is possible repeat the whole process (path computation,
   path set-up and path verification).</t>

<t>In case it is required to set up at T2 exactly the same path computed
   at T1, the RPC solution should not be used and, instead, a "compute-
   only" TE tunnel path should be set up, allowing also notifications in
   case the computed path has been changed.</t>

<t>In this case, at time T1, the client (MDSC) creates a TE tunnel in a
   compute-only mode in the running datastore and later, at time T2,
   changes the configuration of that TE tunnel (not to be any more in a
   compute-only mode) to trigger the set-up of the LSP over the path
   which have been computed at time T1 and reported in the operational
   datastore.</t>

<t>It is worth noting that also using the "compute-only" TE tunnel path,
   although increasing the likelihood that the computed path is
   available at path set-up, does not guarantee that because
   notifications may not be reliable or delivered on time. Path
   verification is needed also in this case.</t>

<t>The solution based on "compute-only" TE tunnel path has also the
   following drawbacks:</t>

<t><list style="symbols">
  <t>Several messages required for any path computation</t>
  <t>Requires persistent storage in the underlying controller</t>
  <t>Need for garbage collection for stranded paths</t>
  <t>Process burden to detect changes on the computed paths in order to
provide notifications update</t>
</list></t>

<section anchor="temp-state"><name>Temporary reporting of the computed path state</name>

<t>This section describes an optional extension to the stateless
   behavior of the path computation RPC, where the underlying
   controller, after having received a path computation RPC request,
   maintains some "transient state" associated with the computed path,
   allowing the client to request the set-up of exactly that path, if
   still available.</t>

<t>This is similar to the "compute-only" TE tunnel path solution but, to
   avoid the drawbacks of the stateful approach, is leveraging the path
   computation RPC and the separation between configuration and
   operational datastore, as defined in the NMDA architecture <xref target="RFC8342"/>.</t>

<t>The underlying controller, after having computed a path, as requested
   by a path computation RPC, also creates a TE tunnel instance within
   the operational datastore, to store that computed path. This would be
   similar to a "compute-only" TE tunnel path, with the only difference
   that there is no associated TE tunnel instance within the running
   datastore.</t>

<t>Since the underlying controller stores in the operational datastore
   the computed path based on an abstract topology it exposes, it also
   remembers, internally, which is the actual native path (physical
   path), within its native topology (physical topology), associated
   with that compute-only TE tunnel instance.</t>

<t>Afterwards, the client (e.g., MDSC) can request the set-up of that
   specific path by creating a TE tunnel instance (not in compute-only
   mode) in the running datastore using the same tunnel-name of
   the existing TE tunnel in the operational datastore: this will
   trigger the underlying controller to set up that path, if still
   available.</t>

<t>There are still cases where the path being set up is not exactly the
   same as the path that has been computed:</t>

<t><list style="symbols">
  <t>When the tunnel is configured with path constraints which are not
compatible with the computed path;</t>
  <t>When the tunnel set-up is requested after the resources of the
computed path are no longer available;</t>
  <t>When the tunnel set-up is requested after the computed path is no
longer known (e.g. due to a server reboot) by the underlying
controller.  <vspace blankLines='1'/>
In all these cases, the underlying controller should compute and set
 up a new path.  <vspace blankLines='1'/>
Therefore the "path verification" phase, as described in <xref target="rpc-motivation"/>
 above, is always needed to check that the path that has been set up
 is still "good enough".  <vspace blankLines='1'/>
Since this new approach is not completely stateless, garbage
 collection is implemented using a timeout that, when it expires,
 triggers the removal of the computed path from the operational
 datastore. This operation is fully controlled by the underlying
 controller without the need for any action to be taken by the client
 that is not able to act on the operational datastore. The default
 value of this timeout is 10 minutes but a different value may be
 configured by the client.  <vspace blankLines='1'/>
In addition, it is possible for the client to tag each path
 computation request with a transaction-id allowing for a faster
 removal of all the paths associated with a transaction-id, without
 waiting for their timers to expire.  <vspace blankLines='1'/>
The underlying controller can remove from the operational datastore
 all the paths computed with a given transaction-id which have not
 been set up either when it receives a Path Delete RPC request for
 that transaction-id or, automatically, right after the set-up up of a
 path that has been previously computed with that transaction-id.  <vspace blankLines='1'/>
This possibility is useful when multiple paths are computed but, at
 most, only one is set up (e.g., in multi-domain path computation
 scenario scenarios). After the selected path has been set up (e.g, in
 one domain during multi-domain path set-up), all the other
 alternative computed paths can be automatically deleted by the
 underlying controller (since no longer needed). The client can also
 request, using the Path Delete RPC request, the underlying controller
 to remove all the computed paths, if none of them is going to be set
 up (e.g., in a transit domain not being selected by multi-domain path
 computation and so not being automatically deleted).  <vspace blankLines='1'/>
This approach is complimentary and not alternative to the timer which
 is always needed to avoid stranded computed paths being stored in the
 operational datastore when no path is set up and no explicit Path
 Delete RPC request is received.</t>
</list></t>

</section>
</section>
</section>
<section anchor="path-computation-and-optimization-for-multiple-paths"><name>Path computation and optimization for multiple paths</name>

<t>There are use cases, where it is advantageous to request path
   computation for a set of paths, through a network or through a
   network domain, using a single request <xref target="RFC5440"/>.</t>

<t>In this case, sending a single request for multiple path
   computations, instead of sending multiple requests for each path
   computation, would reduce the protocol overhead and it would consume
   less resources (e.g., threads in the client and server).</t>

<t>In the context of a typical multi-domain TE network, there could
   multiple choices for the ingress/egress points of a domain and the
   Multi-Domain Controller needs to request path computation between all
   the ingress/egress pairs to select the best pair. For example, in the
   example of <xref target="md-uc"/>, the Multi-Domain Controller needs to request
   the TE Network Controller 1 to compute the A-C and the A-D paths and
   to the TE Network Controller 2 to compute the E-H and the F-H paths.</t>

<t>It is also possible that the Multi-Domain Controller receives a
   request to set up a group of multiple end to end connections. The
   Multi-Domain Controller needs to request each TE domain Controller to
   compute multiple paths, one (or more) for each end to end connection.</t>

<t>There are also scenarios where it can be needed to request path
   computation for a set of paths in a synchronized fashion.</t>

<t>One example could be computing multiple diverse paths. Computing a
   set of diverse paths in an unsynchronized fashion, leads to the
   possibility of not being able to satisfy the diversity requirement.
   In this case, it is preferable to compute a sub-optimal primary path
   for which a diversely routed secondary path exists.</t>

<t>There are also scenarios where it is needed to request optimizing a
   set of paths using objective functions that apply to the whole set of
   paths, see <xref target="RFC5541"/>, e.g. to minimize the sum of the costs of all
   the computed paths in the set.</t>

</section>
<section anchor="yang-data-model-for-requesting-path-computation"><name>YANG data model for requesting Path Computation</name>

<t>This document define a YANG RPC to request path computation as an
   "augmentation" of tunnel-rpc, defined in <xref target="I-D.ietf-teas-yang-te"/>. This model
   provides the RPC input attributes that are needed to request path
   computation and the RPC output attributes that are needed to report
   the computed paths.</t>

<figure><artwork><![CDATA[
     augment /te:tunnels-path-compute/te:input/te:path-compute-info:
       +-- path-request* [request-id]
       |  +-- request-id                            uint32
       |  ...........

     augment /te:tunnels-path-compute/te:output/te:path-compute-result:
       +--ro response* [response-id]
          +--ro response-id                         uint32
          +--ro computed-paths-properties
          |  +--ro computed-path-properties* [k-index]
          |     +--ro k-index            uint8
          |     +--ro path-properties
          |     ...........
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>This model extensively re-uses the grouping defined in <xref target="I-D.ietf-teas-yang-te"/>
   and <xref target="RFC8776"/> to ensure maximal syntax and semantics commonality.</t>

<t>This YANG data model allows one RPC to include multiple path
   requests, each path request being identified by a request-id.
   Therefore, one RPC can return multiple responses, one for each path
   request, being identified by a response-id equal to the corresponding
   request-id. Each response reports one or more computed paths, as
   requested by the k-requested-paths attribute. By default, each
   response reports one computed path.</t>

<section anchor="synchronization-of-multiple-path-computation-requests"><name>Synchronization of multiple path computation requests</name>

<t>The YANG data model permits the synchronization of a set of multiple
   path requests (identified by specific request-id) all related to a
   "svec" container emulating the syntax of the Synchronization VECtor
   (SVEC) PCEP object, defined in <xref target="RFC5440"/>.</t>

<figure><artwork><![CDATA[
       +-- synchronization* []
          +-- svec
          |  +-- relaxable?           boolean
          |  +-- disjointness?        te-path-disjointness
          |  +-- request-id-number*   uint32
          +-- svec-constraints
          |  +-- path-metric-bound* [metric-type]
          |     +-- metric-type    identityref
          |     +-- upper-bound?   uint64
          +-- path-srlgs-lists
          |  +-- path-srlgs-list* [usage]
          |     +-- usage     identityref
          |     +-- values*   srlg
          +-- path-srlgs-names
          |  +-- path-srlgs-name* [usage]
          |     +-- usage    identityref
          |     +-- names*   string
          +-- exclude-objects
          |  +-- excludes* []
          |     +-- (type)?
          |        +--:(numbered-node-hop)
          |        |  +-- numbered-node-hop
          |        |     +-- node-id     te-node-id
          |        |     +-- hop-type?   te-hop-type
          |        +--:(numbered-link-hop)
          |        |  +-- numbered-link-hop
          |        |     +-- link-tp-id    te-tp-id
          |        |     +-- hop-type?     te-hop-type
          |        |     +-- direction?    te-link-direction
          |        +--:(unnumbered-link-hop)
          |        |  +-- unnumbered-link-hop
          |        |     +-- link-tp-id    te-tp-id
          |        |     +-- node-id       te-node-id
          |        |     +-- hop-type?     te-hop-type
          |        |     +-- direction?    te-link-direction
          |        +--:(as-number)
          |        |  +-- as-number-hop
          |        |     +-- as-number    inet:as-number
          |        |     +-- hop-type?    te-hop-type
          |        +--:(label)
          |           +-- label-hop
          |              +-- te-label
          |                 +-- (technology)?
          |                 |  +--:(generic)
          |                 |     +-- generic?
          |                 |             rt-types:generalized-label
          |                 +-- direction?       te-label-direction
          +-- optimizations
             +-- (algorithm)?
                +--:(metric) {te-types:path-optimization-metric}?
                |  +-- optimization-metric* [metric-type]
                |     +-- metric-type    identityref
                |     +-- weight?        uint8
                +--:(objective-function)
                         {te-types:path-optimization-objective-
   function}?
                   +-- objective-function
                      +-- objective-function-type?   identityref
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>The model, in addition to the metric types, defined in <xref target="RFC8776"/>,
   which can be applied to each individual path request, supports also
   additional metric types, which apply to a set of synchronized
   requests, as referenced in <xref target="RFC5541"/>. These additional metric types
   are defined by the following YANG identities:</t>

<t><list style="symbols">
  <t>svec-metric-type: base YANG identity from which cumulative metric
types identities are derived.</t>
  <t>svec-metric-cumul-te: cumulative TE cost metric type, as defined
in <xref target="RFC5541"/>.</t>
  <t>svec-metric-cumul-igp: cumulative IGP cost metric type, as defined
in <xref target="RFC5541"/>.</t>
  <t>svec-metric-cumul-hop: cumulative Hop metric type, representing
the cumulative version of the Hop metric type defined in
<xref target="RFC8776"/>.</t>
  <t>svec-metric-aggregate-bandwidth-consumption: aggregate bandwidth
consumption metric type, as defined in <xref target="RFC5541"/>.</t>
  <t>svec-metric-load-of-the-most-loaded-link: load of the most loaded
link metric type, as defined in <xref target="RFC5541"/>.</t>
</list></t>

</section>
<section anchor="returned-metric-values"><name>Returned metric values</name>

<t>This YANG data model provides a way to return the values of the
   metrics computed by the path computation in the output of RPC,
   together with other important information (e.g. srlg, affinities,
   explicit route), emulating the syntax of the "C" flag of the "METRIC"
   PCEP object <xref target="RFC5440"/>:</t>

<figure><artwork><![CDATA[
          |     +--ro path-properties
          |        +--ro path-metric* [metric-type]
          |        |  +--ro metric-type           identityref
          |        |  +--ro accumulative-value?   uint64
          |        +--ro path-affinities-values
          |        |  +--ro path-affinities-value* [usage]
          |        |     +--ro usage    identityref
          |        |     +--ro value?   admin-groups
          |        +--ro path-affinity-names
          |        |  +--ro path-affinity-name* [usage]
          |        |     +--ro usage            identityref
          |        |     +--ro affinity-name* [name]
          |        |        +--ro name    string
          |        +--ro path-srlgs-lists
          |        |  +--ro path-srlgs-list* [usage]
          |        |     +--ro usage     identityref
          |        |     +--ro values*   srlg
          |        +--ro path-srlgs-names
          |        |  +--ro path-srlgs-name* [usage]
          |        |     +--ro usage    identityref
          |        |     +--ro names*   string
          |        +--ro path-route-objects
          |        ...........
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>It also allows the client to request which information (metrics, srlg
   and/or affinities) should be returned:</t>

<figure><artwork><![CDATA[
       |  +-- request-id                            uint32
       |  ...........
       |  +-- requested-metrics* [metric-type]
       |  |  +-- metric-type    identityref
       |  +-- return-srlgs?                         boolean
       |  +-- return-affinities?                    boolean
       |  ...........
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>This feature is essential for path computation in a multi-domain TE
   network as described in <xref target="md-uc"/>. In this case, the metrics
   returned by a path computation requested to a given underlying
   controller must be used by the client to compute the best end-to-end
   path. If they are missing, the client cannot compare different paths
   calculated by the underlying controllers and choose the best one for
   the optimal end-to-end (e2e) path.</t>

</section>
<section anchor="multiple-paths-requests-for-the-same-te-tunnel"><name>Multiple Paths Requests for the same TE tunnel</name>

<t>The YANG data model allows including multiple requests for different
   paths intended to be used within the same tunnel or within different
   tunnels.</t>

<t>When multiple requested paths are intended to be used within the same
   tunnel (e.g., requesting path computation for the primary and
   secondary paths of a protected tunnel), the set of attributes that
   are intended to be configured on per-tunnel basis rather than on per-
   path basis are common to all these path requests. These attributes
   includes both attributes which can be configured only a per-tunnel
   basis (e.g., tunnel-name, source/destination TTP, encoding and
   switching-type) as well attributes which can be configured both on a
   per-tunnel and on a per-path basis (e.g., the te-bandwidth or the
   associations).</t>

<t>Therefore, a tunnel-attributes list is defined, within the path
   computation request RPC:</t>

<figure><artwork><![CDATA[
       +-- tunnel-attributes* [tunnel-name]
       |  +-- tunnel-name               string
       |  +-- encoding?                 identityref
       |  +-- switching-type?           identityref
       |  ...........
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>The path requests that are intended to be used within the same tunnel
   should reference the same entry in the tunnel-attributes list. This
   allows:</t>

<t><list style="symbols">
  <t>avoiding repeating the same set of per-tunnel parameters on
multiple requested paths;</t>
  <t>the server to understand what attributes are intended to be
configured on a per-tunnel basis (e.g., the te-bandwidth
configured in the tunnel-attributes) and what attributes are
intended to be configured on a per-path basis(e.g., the te-
bandwidth configured in the path-request). This could be useful
especially when the server also creates a TE tunnel instance
within the operational datastore to report the computed paths, as
described in <xref target="temp-state"/>: in this case, the tunnel-name is also
used as the suggested name for that TE tunnel instance.  <vspace blankLines='1'/>
The YANG data model allows also including requests for paths intended
 to modify existing tunnels (e.g., adding a protection path for an
 existing un-protected tunnel). In this case, the per-tunnel
 attributes are already provided in an existing TE tunnel instance and
 do not need to be re-configured in the path computation request RPC.
 Therefore, these requests should reference an existing TE tunnel
 instance.  <vspace blankLines='1'/>
It is also possible to request computing paths without indicating in
 which tunnel they are intended to be used (e.g., in case of an
 unprotected tunnel). In this case, the per-tunnel attributes could be
 provided together with the per-path attributes in the path request,
 without using the tunnel-attributes list.  <vspace blankLines='1'/>
The choices below are defined to distinguish the cases above:</t>
  <t>whether the per-tunnel attributes are configured by reference
(providing a leafref), to:  <list style="symbols">
      <t>either a TE tunnel instance, if it exists;</t>
      <t>or to an entry of the tunnel-attributes list, if the TE tunnel
instance does not exist;</t>
    </list></t>
  <t>or by value, providing the set of tunnel attributes within the
path request:</t>
</list></t>

<figure><artwork><![CDATA[
       |  +-- (tunnel-attributes)?
       |  |  +--:(reference)
       |  |  |  +-- tunnel-reference
       |  |  |     +-- (tunnel-exist)?
       |  |  |     |  +--:(tunnel-ref)
       |  |  |     |  |  +-- tunnel-ref                te:tunnel-ref
       |  |  |     |  +--:(tunnel-attributes-ref)
       |  |  |     |     +-- tunnel-attributes-ref     leafref
       |  |  ...........
       |  |  +--:(value)
       |  |     +-- tunnel-name?                    string
       |  |     ...........
       |  |     +-- encoding?                       identityref
       |  |     +-- switching-type?                 identityref
       |  |     ...........
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<section anchor="tunnel-attributes-specified-by-value"><name>Tunnel attributes specified by value</name>

<t>The (value) case provides the set of attributes that are configured
   only on per-tunnel basis (e.g., tunnel-name, source/destination TTP,
   encoding and switching-type).</t>

<t>In this case, it is assumed that the requested path will be the only
   path within a tunnel.</t>

<t>If the requested path is a transit segment of a multi-domain end-to-
   end path, it can be of any type (primary, secondary, reverse-primary
   or reverse-secondary), as specified by the (path-role) choice:</t>

<figure><artwork><![CDATA[
       |  |     +-- (path-role)?
       |  |     |  +--:(primary-path)
       |  |     |  +--:(secondary-path)
       |  |     |  |  +-- secondary-path!
       |  |     |  |     +-- primary-path-name?   string
       |  |     |  +--:(primary-reverse-path)
       |  |     |  |  +-- primary-reverse-path!
       |  |     |  |     +-- primary-path-name?   string
       |  |     |  +--:(secondary-reverse-path)
       |  |     |     +-- secondary-reverse-path!
       |  |     |        +-- primary-path-name?           string
       |  |     |        +-- primary-reverse-path-name?   string
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>In all the other cases, the requested path can only be a primary
   path.</t>

<t>The secondary-path, the primary-reverse-path and the secondary-
   reverse-path are presence container used to indicate the role of the
   path: by default, the path is assumed to be a primary path.</t>

<t>They optionally can contain the name of the primary-path under which
   the requested path could be associated within the YANG tree structure
   defined in <xref target="I-D.ietf-teas-yang-te"/>, which could be useful when the server also
   creates a TE tunnel instance within the operational datastore to
   report the computed paths, as described in <xref target="temp-state"/>: in this
   case, the tunnel-name and the path names are also used as the
   suggested name for that TE tunnel and path instances.</t>

</section>
<section anchor="tunnel-attributes-specified-by-reference"><name>Tunnel attributes specified by reference</name>

<t>The (reference) case provides the information needed to associate
   multiple path requests that are intended to be used within the same
   tunnel.</t>

<t>In order to indicate the role of the path being requested within the
   intended tunnel (e.g., primary or secondary path), the (path-role)
   choice is defined:</t>

<figure><artwork><![CDATA[
       |  |  |     +-- (path-role)
       |  |  |        +--:(primary-path)
       |  |  |        |  +-- primary-path!
       |  |  |        |     ...........
       |  |  |        +--:(secondary-path)
       |  |  |        |  +-- secondary-path
       |  |  |        |     ...........
       |  |  |        +--:(primary-reverse-path)
       |  |  |        |  +-- primary-reverse-path
       |  |  |        |     ...........
       |  |  |        +--:(secondary-reverse-path)
       |  |  |           +-- secondary-reverse-path
       |  |  |              ...........
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>The primary-path is a presence container used to indicate that the
   requested path is intended to be used as a primary path. It can also
   contain some attributes which are configured only on primary paths
   (e.g., the k-requested-paths).</t>

<t>The secondary-path container indicates that the requested path is
   intended to be used as a secondary path and it contains at least
   references to one or more primary paths which can use it as a
   candidate secondary path:</t>

<figure><artwork><![CDATA[
       |  |  |        |  +-- secondary-path
       |  |  |        |     ...........
       |  |  |        |     +-- primary-path-ref* []
       |  |  |        |        +-- (primary-path-exist)?
       |  |  |        |           +--:(path-ref)
       |  |  |        |           |  +-- primary-path-ref    leafref
       |  |  |        |           +--:(path-request-ref)
       |  |  |        |              +-- path-request-ref    leafref
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>A requested secondary path can reference any requested primary paths,
   and, in case they are intended to be used within an existing TE
   tunnel, it could also reference any existing primary-paths.</t>

<t>The secondary-path container can also contain some attributes which
   are configured only on secondary paths (e.g., the protection-type).</t>

<t>The primary-reverse-path container indicates that the requested path
   is intended to be used as a primary reverse path and it contains only
   the reference to the primary path which is intended to use it as a
   reverse path:</t>

<figure><artwork><![CDATA[
       |  |  |        |  +-- primary-reverse-path
       |  |  |        |     +-- (primary-path-exist)?
       |  |  |        |        +--:(path-ref)
       |  |  |        |        |  +-- primary-path-ref    leafref
       |  |  |        |        +--:(path-request-ref)
       |  |  |        |           +-- path-request-ref    leafref
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>A requested primary reverse path can reference either a requested
   primary path, or, in case it is intended to be used within an
   existing TE tunnel, an existing primary-path.</t>

<t>The secondary-reverse-path container indicates that the requested
   path is intended to be used as a secondary reverse path and it
   contains at least references to one or more primary paths, whose
   primary reverse path can use it as a candidate secondary reverse
   path:</t>

<figure><artwork><![CDATA[
       |  |  |           +-- secondary-reverse-path
       |  |  |              ...........
       |  |  |              +-- primary-reverse-path-ref* []
       |  |  |                 +-- (primary-reverse-path-exist)?
       |  |  |                    +--:(path-ref)
       |  |  |                    |  +-- primary-path-ref    leafref
       |  |  |                    +--:(path-request-ref)
       |  |  |                       +-- path-request-ref    leafref
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>A requested secondary reverse path can reference any requested
   primary paths, and, in case they are intended to be used within an
   existing TE tunnel, it could reference also existing primary-paths.</t>

<t>The secondary-reverse-path container can also contain some attributes
   which are configured only on secondary reverse paths (e.g., the
   protection-type).</t>

<t>In case the requested path is a transit segment of a multi-domain
   end-to-end path, the primary-path may not be needed to be
   setup/computed. However, the request for path computation of a
   secondary-path or a primary-reverse or of a secondary-reverse-path
   requires that the primary-path exists or it is requested within the
   same RPC request. In the latter case, the path request for the
   primary-path should have an empty ERO to indicate to the server that
   path computation is not requested and no path properties will
   therefore be returned in the RPC response.</t>

</section>
</section>
<section anchor="multi-layer-path-computation"><name>Multi-Layer Path Computation</name>

<t>The models supports requesting multi-layer path computation following
   the same approach based on dependency tunnels, as defined in <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>The tunnel-attributes of a given client-layer path request can
   reference server-layer TE tunnels which can already exist in the YANG
   datastore or be specified in the tunnel-attributes list, within the
   same RPC request:</t>

<figure><artwork><![CDATA[
       |     +-- dependency-tunnels
       |     |  +-- dependency-tunnel* [name]
       |     |  |  +-- name              -> /te:te/tunnels/tunnel/name
       |     |  |  +-- encoding?         identityref
       |     |  |  +-- switching-type?   identityref
       |     |  +-- dependency-tunnel-attributes* [name]
       |     |     +-- name              leafref
       |     |     +-- encoding?         identityref
       |     |     +-- switching-type?   identityref
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>In a similar way as in <xref target="I-D.ietf-teas-yang-te"/>, the server-layer tunnel
   attributes should provide the information of what would be the
   dynamic link in the client layer topology supported by that tunnel,
   if instantiated:</t>

<figure><artwork><![CDATA[
       |     +-- hierarchical-link
       |        +-- local-te-node-id?         te-types:te-node-id
       |        +-- local-te-link-tp-id?      te-types:te-tp-id
       |        +-- remote-te-node-id?        te-types:te-node-id
       |        +-- te-topology-identifier
       |           +-- provider-id?   te-global-id
       |           +-- client-id?     te-global-id
       |           +-- topology-id?   te-topology-id
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>It is worth noting that since path computation RPC is stateless, the
   dynamic hierarchical links configured for the server-layer tunnel
   attributes cannot be used for path computation of any client-layer
   path unless explicitly referenced in the dependency-tunnel-attributes
   list within the same RPC request.</t>

</section>
</section>
<section anchor="yang-data-model-for-te-path-computation"><name>YANG data model for TE path computation</name>

<section anchor="pc-tree"><name>Tree diagram</name>

<t><xref target="fig-pc-tree"/> below shows the tree diagram of the YANG data model defined
   in module ietf-te-path-computation.yang, defined in <xref target="pc-yang"/>.</t>

<figure title="TE path computation tree diagram" anchor="fig-pc-tree"><artwork><![CDATA[
module: ietf-te-path-computation

  augment /te:tunnels-path-compute/te:input/te:path-compute-info:
    +-- path-request* [request-id]
    |  +-- request-id                            uint32
    |  +-- (tunnel-attributes)?
    |  |  +--:(reference)
    |  |  |  +-- tunnel-reference
    |  |  |     +-- (tunnel-exist)?
    |  |  |     |  +--:(tunnel-ref)
    |  |  |     |  |  +-- tunnel-ref                te:tunnel-ref
    |  |  |     |  +--:(tunnel-attributes-ref)
    |  |  |     |     +-- tunnel-attributes-ref     leafref
    |  |  |     +-- path-name?                      string
    |  |  |     +-- (path-role)
    |  |  |        +--:(primary-path)
    |  |  |        |  +-- primary-path!
    |  |  |        |     +-- preference?          uint8
    |  |  |        |     +-- k-requested-paths?   uint8
    |  |  |        +--:(secondary-path)
    |  |  |        |  +-- secondary-path
    |  |  |        |     +-- preference?           uint8
    |  |  |        |     +-- protection-type?      identityref
    |  |  |        |     +-- restoration-type?     identityref
    |  |  |        |     +-- restoration-scheme?   identityref
    |  |  |        |     +-- primary-path-ref* []
    |  |  |        |        +-- (primary-path-exist)?
    |  |  |        |           +--:(path-ref)
    |  |  |        |           |  +-- primary-path-ref    leafref
    |  |  |        |           +--:(path-request-ref)
    |  |  |        |              +-- path-request-ref    leafref
    |  |  |        +--:(primary-reverse-path)
    |  |  |        |  +-- primary-reverse-path
    |  |  |        |     +-- (primary-path-exist)?
    |  |  |        |        +--:(path-ref)
    |  |  |        |        |  +-- primary-path-ref    leafref
    |  |  |        |        +--:(path-request-ref)
    |  |  |        |           +-- path-request-ref    leafref
    |  |  |        +--:(secondary-reverse-path)
    |  |  |           +-- secondary-reverse-path
    |  |  |              +-- preference?                 uint8
    |  |  |              +-- protection-type?            identityref
    |  |  |              +-- restoration-type?           identityref
    |  |  |              +-- restoration-scheme?         identityref
    |  |  |              +-- primary-reverse-path-ref* []
    |  |  |                 +-- (primary-reverse-path-exist)?
    |  |  |                    +--:(path-ref)
    |  |  |                    |  +-- primary-path-ref    leafref
    |  |  |                    +--:(path-request-ref)
    |  |  |                       +-- path-request-ref    leafref
    |  |  +--:(value)
    |  |     +-- tunnel-name?                    string
    |  |     +-- path-name?                      string
    |  |     +-- (path-role)?
    |  |     |  +--:(primary-path)
    |  |     |  +--:(secondary-path)
    |  |     |  |  +-- secondary-path!
    |  |     |  |     +-- primary-path-name?   string
    |  |     |  +--:(primary-reverse-path)
    |  |     |  |  +-- primary-reverse-path!
    |  |     |  |     +-- primary-path-name?   string
    |  |     |  +--:(secondary-reverse-path)
    |  |     |     +-- secondary-reverse-path!
    |  |     |        +-- primary-path-name?           string
    |  |     |        +-- primary-reverse-path-name?   string
    |  |     +-- k-requested-paths?              uint8
    |  |     +-- encoding?                       identityref
    |  |     +-- switching-type?                 identityref
    |  |     +-- source?                         te-types:te-node-id
    |  |     +-- destination?                    te-types:te-node-id
    |  |     +-- src-tunnel-tp-id?               binary
    |  |     +-- dst-tunnel-tp-id?               binary
    |  |     +-- bidirectional?                  boolean
    |  |     +-- te-topology-identifier
    |  |        +-- provider-id?   te-global-id
    |  |        +-- client-id?     te-global-id
    |  |        +-- topology-id?   te-topology-id
    |  +-- association-objects
    |  |  +-- association-object* [association-key]
    |  |  |  +-- association-key    string
    |  |  |  +-- type?              identityref
    |  |  |  +-- id?                uint16
    |  |  |  +-- source
    |  |  |     +-- id?     te-gen-node-id
    |  |  |     +-- type?   enumeration
    |  |  +-- association-object-extended* [association-key]
    |  |     +-- association-key    string
    |  |     +-- type?              identityref
    |  |     +-- id?                uint16
    |  |     +-- source
    |  |     |  +-- id?     te-gen-node-id
    |  |     |  +-- type?   enumeration
    |  |     +-- global-source?     uint32
    |  |     +-- extended-id?       yang:hex-string
    |  +-- optimizations
    |  |  +-- (algorithm)?
    |  |     +--:(metric) {path-optimization-metric}?
    |  |     |  +-- optimization-metric* [metric-type]
    |  |     |  |  +-- metric-type                       identityref
    |  |     |  |  +-- weight?                           uint8
    |  |     |  |  +-- explicit-route-exclude-objects
    |  |     |  |  |  +-- route-object-exclude-object* [index]
    |  |     |  |  |     +-- index                        uint32
    |  |     |  |  |     +-- (type)?
    |  |     |  |  |        +--:(numbered-node-hop)
    |  |     |  |  |        |  +-- numbered-node-hop
    |  |     |  |  |        |     +-- node-id     te-node-id
    |  |     |  |  |        |     +-- hop-type?   te-hop-type
    |  |     |  |  |        +--:(numbered-link-hop)
    |  |     |  |  |        |  +-- numbered-link-hop
    |  |     |  |  |        |     +-- link-tp-id    te-tp-id
    |  |     |  |  |        |     +-- hop-type?     te-hop-type
    |  |     |  |  |        |     +-- direction?    te-link-direction
    |  |     |  |  |        +--:(unnumbered-link-hop)
    |  |     |  |  |        |  +-- unnumbered-link-hop
    |  |     |  |  |        |     +-- link-tp-id    te-tp-id
    |  |     |  |  |        |     +-- node-id       te-node-id
    |  |     |  |  |        |     +-- hop-type?     te-hop-type
    |  |     |  |  |        |     +-- direction?    te-link-direction
    |  |     |  |  |        +--:(as-number)
    |  |     |  |  |        |  +-- as-number-hop
    |  |     |  |  |        |     +-- as-number    inet:as-number
    |  |     |  |  |        |     +-- hop-type?    te-hop-type
    |  |     |  |  |        +--:(label)
    |  |     |  |  |        |  +-- label-hop
    |  |     |  |  |        |     +-- te-label
    |  |     |  |  |        |        +-- (technology)?
    |  |     |  |  |        |        |  +--:(generic)
    |  |     |  |  |        |        |     +-- generic?
    |  |     |  |  |        |        |             rt-types:generalized-label
    |  |     |  |  |        |        +-- direction?
    |  |     |  |  |        |                te-label-direction
    |  |     |  |  |        +--:(srlg)
    |  |     |  |  |           +-- srlg
    |  |     |  |  |              +-- srlg?   uint32
    |  |     |  |  +-- explicit-route-include-objects
    |  |     |  |     +-- route-object-include-object* [index]
    |  |     |  |        +-- index                        uint32
    |  |     |  |        +-- (type)?
    |  |     |  |           +--:(numbered-node-hop)
    |  |     |  |           |  +-- numbered-node-hop
    |  |     |  |           |     +-- node-id     te-node-id
    |  |     |  |           |     +-- hop-type?   te-hop-type
    |  |     |  |           +--:(numbered-link-hop)
    |  |     |  |           |  +-- numbered-link-hop
    |  |     |  |           |     +-- link-tp-id    te-tp-id
    |  |     |  |           |     +-- hop-type?     te-hop-type
    |  |     |  |           |     +-- direction?    te-link-direction
    |  |     |  |           +--:(unnumbered-link-hop)
    |  |     |  |           |  +-- unnumbered-link-hop
    |  |     |  |           |     +-- link-tp-id    te-tp-id
    |  |     |  |           |     +-- node-id       te-node-id
    |  |     |  |           |     +-- hop-type?     te-hop-type
    |  |     |  |           |     +-- direction?    te-link-direction
    |  |     |  |           +--:(as-number)
    |  |     |  |           |  +-- as-number-hop
    |  |     |  |           |     +-- as-number    inet:as-number
    |  |     |  |           |     +-- hop-type?    te-hop-type
    |  |     |  |           +--:(label)
    |  |     |  |              +-- label-hop
    |  |     |  |                 +-- te-label
    |  |     |  |                    +-- (technology)?
    |  |     |  |                    |  +--:(generic)
    |  |     |  |                    |     +-- generic?
    |  |     |  |                    |             rt-types:generalized-label
    |  |     |  |                    +-- direction?
    |  |     |  |                            te-label-direction
    |  |     |  +-- tiebreakers
    |  |     |     +-- tiebreaker* [tiebreaker-type]
    |  |     |        +-- tiebreaker-type    identityref
    |  |     +--:(objective-function)
    |  |              {path-optimization-objective-function}?
    |  |        +-- objective-function
    |  |           +-- objective-function-type?   identityref
    |  +-- named-path-constraint?                leafref
    |  |       {te-types:named-path-constraints}?
    |  +-- te-bandwidth
    |  |  +-- (technology)?
    |  |     +--:(generic)
    |  |        +-- generic?   te-bandwidth
    |  +-- link-protection?                      identityref
    |  +-- setup-priority?                       uint8
    |  +-- hold-priority?                        uint8
    |  +-- signaling-type?                       identityref
    |  +-- path-metric-bounds
    |  |  +-- path-metric-bound* [metric-type]
    |  |     +-- metric-type    identityref
    |  |     +-- upper-bound?   uint64
    |  +-- path-affinities-values
    |  |  +-- path-affinities-value* [usage]
    |  |     +-- usage    identityref
    |  |     +-- value?   admin-groups
    |  +-- path-affinity-names
    |  |  +-- path-affinity-name* [usage]
    |  |     +-- usage            identityref
    |  |     +-- affinity-name* [name]
    |  |        +-- name    string
    |  +-- path-srlgs-lists
    |  |  +-- path-srlgs-list* [usage]
    |  |     +-- usage     identityref
    |  |     +-- values*   srlg
    |  +-- path-srlgs-names
    |  |  +-- path-srlgs-name* [usage]
    |  |     +-- usage    identityref
    |  |     +-- names*   string
    |  +-- disjointness?                         te-path-disjointness
    |  +-- explicit-route-objects-always
    |  |  +-- route-object-exclude-always* [index]
    |  |  |  +-- index                        uint32
    |  |  |  +-- (type)?
    |  |  |     +--:(numbered-node-hop)
    |  |  |     |  +-- numbered-node-hop
    |  |  |     |     +-- node-id     te-node-id
    |  |  |     |     +-- hop-type?   te-hop-type
    |  |  |     +--:(numbered-link-hop)
    |  |  |     |  +-- numbered-link-hop
    |  |  |     |     +-- link-tp-id    te-tp-id
    |  |  |     |     +-- hop-type?     te-hop-type
    |  |  |     |     +-- direction?    te-link-direction
    |  |  |     +--:(unnumbered-link-hop)
    |  |  |     |  +-- unnumbered-link-hop
    |  |  |     |     +-- link-tp-id    te-tp-id
    |  |  |     |     +-- node-id       te-node-id
    |  |  |     |     +-- hop-type?     te-hop-type
    |  |  |     |     +-- direction?    te-link-direction
    |  |  |     +--:(as-number)
    |  |  |     |  +-- as-number-hop
    |  |  |     |     +-- as-number    inet:as-number
    |  |  |     |     +-- hop-type?    te-hop-type
    |  |  |     +--:(label)
    |  |  |        +-- label-hop
    |  |  |           +-- te-label
    |  |  |              +-- (technology)?
    |  |  |              |  +--:(generic)
    |  |  |              |     +-- generic?
    |  |  |              |             rt-types:generalized-label
    |  |  |              +-- direction?       te-label-direction
    |  |  +-- route-object-include-exclude* [index]
    |  |     +-- explicit-route-usage?        identityref
    |  |     +-- index                        uint32
    |  |     +-- (type)?
    |  |        +--:(numbered-node-hop)
    |  |        |  +-- numbered-node-hop
    |  |        |     +-- node-id     te-node-id
    |  |        |     +-- hop-type?   te-hop-type
    |  |        +--:(numbered-link-hop)
    |  |        |  +-- numbered-link-hop
    |  |        |     +-- link-tp-id    te-tp-id
    |  |        |     +-- hop-type?     te-hop-type
    |  |        |     +-- direction?    te-link-direction
    |  |        +--:(unnumbered-link-hop)
    |  |        |  +-- unnumbered-link-hop
    |  |        |     +-- link-tp-id    te-tp-id
    |  |        |     +-- node-id       te-node-id
    |  |        |     +-- hop-type?     te-hop-type
    |  |        |     +-- direction?    te-link-direction
    |  |        +--:(as-number)
    |  |        |  +-- as-number-hop
    |  |        |     +-- as-number    inet:as-number
    |  |        |     +-- hop-type?    te-hop-type
    |  |        +--:(label)
    |  |        |  +-- label-hop
    |  |        |     +-- te-label
    |  |        |        +-- (technology)?
    |  |        |        |  +--:(generic)
    |  |        |        |     +-- generic?
    |  |        |        |             rt-types:generalized-label
    |  |        |        +-- direction?       te-label-direction
    |  |        +--:(srlg)
    |  |           +-- srlg
    |  |              +-- srlg?   uint32
    |  +-- path-in-segment!
    |  |  +-- label-restrictions
    |  |     +-- label-restriction* [index]
    |  |        +-- restriction?    enumeration
    |  |        +-- index           uint32
    |  |        +-- label-start
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-end
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-step
    |  |        |  +-- (technology)?
    |  |        |     +--:(generic)
    |  |        |        +-- generic?   int32
    |  |        +-- range-bitmap?   yang:hex-string
    |  +-- path-out-segment!
    |  |  +-- label-restrictions
    |  |     +-- label-restriction* [index]
    |  |        +-- restriction?    enumeration
    |  |        +-- index           uint32
    |  |        +-- label-start
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-end
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-step
    |  |        |  +-- (technology)?
    |  |        |     +--:(generic)
    |  |        |        +-- generic?   int32
    |  |        +-- range-bitmap?   yang:hex-string
    |  +-- requested-metrics* [metric-type]
    |  |  +-- metric-type    identityref
    |  +-- return-srlgs?                         boolean
    |  +-- return-affinities?                    boolean
    |  +-- requested-state!
    |     +-- timer?            uint16
    |     +-- transaction-id?   string
    +-- tunnel-attributes* [tunnel-name]
    |  +-- tunnel-name               string
    |  +-- encoding?                 identityref
    |  +-- switching-type?           identityref
    |  +-- source?                   te-types:te-node-id
    |  +-- destination?              te-types:te-node-id
    |  +-- src-tunnel-tp-id?         binary
    |  +-- dst-tunnel-tp-id?         binary
    |  +-- bidirectional?            boolean
    |  +-- association-objects
    |  |  +-- association-object* [association-key]
    |  |  |  +-- association-key    string
    |  |  |  +-- type?              identityref
    |  |  |  +-- id?                uint16
    |  |  |  +-- source
    |  |  |     +-- id?     te-gen-node-id
    |  |  |     +-- type?   enumeration
    |  |  +-- association-object-extended* [association-key]
    |  |     +-- association-key    string
    |  |     +-- type?              identityref
    |  |     +-- id?                uint16
    |  |     +-- source
    |  |     |  +-- id?     te-gen-node-id
    |  |     |  +-- type?   enumeration
    |  |     +-- global-source?     uint32
    |  |     +-- extended-id?       yang:hex-string
    |  +-- protection-type?          identityref
    |  +-- restoration-type?         identityref
    |  +-- restoration-scheme?       identityref
    |  +-- te-topology-identifier
    |  |  +-- provider-id?   te-global-id
    |  |  +-- client-id?     te-global-id
    |  |  +-- topology-id?   te-topology-id
    |  +-- te-bandwidth
    |  |  +-- (technology)?
    |  |     +--:(generic)
    |  |        +-- generic?   te-bandwidth
    |  +-- link-protection?          identityref
    |  +-- setup-priority?           uint8
    |  +-- hold-priority?            uint8
    |  +-- signaling-type?           identityref
    |  +-- hierarchy
    |     +-- dependency-tunnels
    |     |  +-- dependency-tunnel* [name]
    |     |  |  +-- name              -> /te:te/tunnels/tunnel/name
    |     |  |  +-- encoding?         identityref
    |     |  |  +-- switching-type?   identityref
    |     |  +-- dependency-tunnel-attributes* [name]
    |     |     +-- name              leafref
    |     |     +-- encoding?         identityref
    |     |     +-- switching-type?   identityref
    |     +-- hierarchical-link
    |        +-- local-te-node-id?         te-types:te-node-id
    |        +-- local-te-link-tp-id?      te-types:te-tp-id
    |        +-- remote-te-node-id?        te-types:te-node-id
    |        +-- te-topology-identifier
    |           +-- provider-id?   te-global-id
    |           +-- client-id?     te-global-id
    |           +-- topology-id?   te-topology-id
    +-- synchronization* []
       +-- svec
       |  +-- relaxable?           boolean
       |  +-- disjointness?        te-path-disjointness
       |  +-- request-id-number*   uint32
       +-- svec-constraints
       |  +-- path-metric-bound* [metric-type]
       |     +-- metric-type    identityref
       |     +-- upper-bound?   uint64
       +-- path-srlgs-lists
       |  +-- path-srlgs-list* [usage]
       |     +-- usage     identityref
       |     +-- values*   srlg
       +-- path-srlgs-names
       |  +-- path-srlgs-name* [usage]
       |     +-- usage    identityref
       |     +-- names*   string
       +-- exclude-objects
       |  +-- excludes* []
       |     +-- (type)?
       |        +--:(numbered-node-hop)
       |        |  +-- numbered-node-hop
       |        |     +-- node-id     te-node-id
       |        |     +-- hop-type?   te-hop-type
       |        +--:(numbered-link-hop)
       |        |  +-- numbered-link-hop
       |        |     +-- link-tp-id    te-tp-id
       |        |     +-- hop-type?     te-hop-type
       |        |     +-- direction?    te-link-direction
       |        +--:(unnumbered-link-hop)
       |        |  +-- unnumbered-link-hop
       |        |     +-- link-tp-id    te-tp-id
       |        |     +-- node-id       te-node-id
       |        |     +-- hop-type?     te-hop-type
       |        |     +-- direction?    te-link-direction
       |        +--:(as-number)
       |        |  +-- as-number-hop
       |        |     +-- as-number    inet:as-number
       |        |     +-- hop-type?    te-hop-type
       |        +--:(label)
       |           +-- label-hop
       |              +-- te-label
       |                 +-- (technology)?
       |                 |  +--:(generic)
       |                 |     +-- generic?
       |                 |             rt-types:generalized-label
       |                 +-- direction?       te-label-direction
       +-- optimizations
          +-- (algorithm)?
             +--:(metric) {te-types:path-optimization-metric}?
             |  +-- optimization-metric* [metric-type]
             |     +-- metric-type    identityref
             |     +-- weight?        uint8
             +--:(objective-function)
                      {te-types:path-optimization-objective-function}?
                +-- objective-function
                   +-- objective-function-type?   identityref
  augment /te:tunnels-path-compute/te:output/te:path-compute-result:
    +--ro response* [response-id]
       +--ro response-id                         uint32
       +--ro computed-paths-properties
       |  +--ro computed-path-properties* [k-index]
       |     +--ro k-index            uint8
       |     +--ro path-properties
       |        +--ro path-metric* [metric-type]
       |        |  +--ro metric-type           identityref
       |        |  +--ro accumulative-value?   uint64
       |        +--ro path-affinities-values
       |        |  +--ro path-affinities-value* [usage]
       |        |     +--ro usage    identityref
       |        |     +--ro value?   admin-groups
       |        +--ro path-affinity-names
       |        |  +--ro path-affinity-name* [usage]
       |        |     +--ro usage            identityref
       |        |     +--ro affinity-name* [name]
       |        |        +--ro name    string
       |        +--ro path-srlgs-lists
       |        |  +--ro path-srlgs-list* [usage]
       |        |     +--ro usage     identityref
       |        |     +--ro values*   srlg
       |        +--ro path-srlgs-names
       |        |  +--ro path-srlgs-name* [usage]
       |        |     +--ro usage    identityref
       |        |     +--ro names*   string
       |        +--ro path-route-objects
       |        |  +--ro path-route-object* [index]
       |        |     +--ro index                        uint32
       |        |     +--ro (type)?
       |        |        +--:(numbered-node-hop)
       |        |        |  +--ro numbered-node-hop
       |        |        |     +--ro node-id     te-node-id
       |        |        |     +--ro hop-type?   te-hop-type
       |        |        +--:(numbered-link-hop)
       |        |        |  +--ro numbered-link-hop
       |        |        |     +--ro link-tp-id    te-tp-id
       |        |        |     +--ro hop-type?     te-hop-type
       |        |        |     +--ro direction?    te-link-direction
       |        |        +--:(unnumbered-link-hop)
       |        |        |  +--ro unnumbered-link-hop
       |        |        |     +--ro link-tp-id    te-tp-id
       |        |        |     +--ro node-id       te-node-id
       |        |        |     +--ro hop-type?     te-hop-type
       |        |        |     +--ro direction?    te-link-direction
       |        |        +--:(as-number)
       |        |        |  +--ro as-number-hop
       |        |        |     +--ro as-number    inet:as-number
       |        |        |     +--ro hop-type?    te-hop-type
       |        |        +--:(label)
       |        |           +--ro label-hop
       |        |              +--ro te-label
       |        |                 +--ro (technology)?
       |        |                 |  +--:(generic)
       |        |                 |     +--ro generic?
       |        |                 |             rt-types:generalized-label
       |        |                 +--ro direction?
       |        |                         te-label-direction
       |        +--ro te-bandwidth
       |        |  +--ro (technology)?
       |        |     +--:(generic)
       |        |        +--ro generic?   te-bandwidth
       |        +--ro disjointness-type?
       |                te-types:te-path-disjointness
       +--ro computed-path-error-infos
       |  +--ro computed-path-error-info* []
       |     +--ro error-description?   string
       |     +--ro error-timestamp?     yang:date-and-time
       |     +--ro error-reason?        identityref
       +--ro tunnel-ref?                         te:tunnel-ref
       +--ro (path-role)?
          +--:(primary)
          |  +--ro primary-path-ref?             leafref
          +--:(primary-reverse)
          |  +--ro primary-reverse-path-ref?     leafref
          +--:(secondary)
          |  +--ro secondary-path-ref?           leafref
          +--:(secondary-reverse)
             +--ro secondary-reverse-path-ref?   leafref
  augment /te:tunnels-actions/te:input/te:tunnel-info/te:filter-type:
    +--:(path-compute-transactions)
       +-- path-compute-transaction-id*   string
  augment /te:tunnels-actions/te:output:
    +--ro path-computed-delete-result
       +--ro path-compute-transaction-id*   string
]]></artwork></figure>

</section>
<section anchor="pc-yang"><name>YANG module</name>

<figure title="TE path computation YANG module" anchor="fig-pc-yang"><artwork><![CDATA[
<CODE BEGINS> file "ietf-te-path-computation@2021-10-28.yang"
module ietf-te-path-computation {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-te-path-computation";
  prefix te-pc;

  import ietf-te {
    prefix te;
    reference
      "RFCYYYY: A YANG Data Model for Traffic Engineering Tunnels
       and Interfaces";
  }

  /* Note: The RFC Editor will replace YYYY with the number assigned
     to the RFC once draft-ietf-teas-yang-te becomes an RFC.*/

  import ietf-te-types {
    prefix te-types;
    reference
      "RFC8776: Common YANG Data Types for Traffic Engineering.";
  }

  organization
    "Traffic Engineering Architecture and Signaling (TEAS)
     Working Group";
  contact
    "WG Web:   <http://tools.ietf.org/wg/teas/>
     WG List:  <mailto:teas@ietf.org>

     Editor:   Italo Busi
               <mailto:italo.busi@huawei.com>

     Editor:   Sergio Belotti
               <mailto:sergio.belotti@nokia.com>

     Editor:   Victor Lopez
               <mailto:victor.lopez@nokia.com>

     Editor:   Oscar Gonzalez de Dios
               <mailto:oscar.gonzalezdedios@telefonica.com>

     Editor:   Anurag Sharma
               <mailto:ansha@google.com>

     Editor:   Yan Shi
               <mailto:shiyan49@chinaunicom.cn>

     Editor:   Ricard Vilalta
               <mailto:ricard.vilalta@cttc.es>

     Editor:   Karthik Sethuraman
               <mailto:karthik.sethuraman@necam.com>

     Editor:   Michael Scharf
               <mailto:michael.scharf@gmail.com>

     Editor:   Daniele Ceccarelli
               <mailto:daniele.ceccarelli@ericsson.com>
     
    ";
  description
    "This module defines a YANG data model for requesting Traffic
     Engineering (TE) path computation. The YANG model defined in
     this document is based on RPCs augmenting the RPCs defined in
     the generic TE module (ietf-te).
     The model fully conforms to the
     Network Management Datastore Architecture (NMDA).

     Copyright (c) 2021 IETF Trust and the persons
     identified as authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject
     to the license terms contained in, the Simplified BSD License
     set forth in Section 4.c of the IETF Trust's Legal Provisions

     Relating to IETF Documents
     (http://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC XXXX; see
     the RFC itself for full legal notices.";

  // RFC Ed.: replace XXXX with actual RFC number and remove
  // this note
  // replace the revision date with the module publication date
  // the format is (year-month-day)

  revision 2021-10-28 {
    description
      "Initial revision";
    reference
      "RFC XXXX: YANG Data Model for requesting Path Computation";
  }

  // RFC Ed.: replace XXXX with actual RFC number and remove
  // this note

  /*
   * Identities
   */

  identity svec-metric-type {
    description
      "Base identity for SVEC metric type.";
    reference
      "RFC5541: Encoding of Objective Functions in the Path
       Computation Element Communication Protocol (PCEP).";
  }

  identity svec-metric-cumul-te {
    base svec-metric-type;
    description
      "Cumulative TE cost.";
    reference
      "RFC5541: Encoding of Objective Functions in the Path
       Computation Element Communication Protocol (PCEP).";
  }

  identity svec-metric-cumul-igp {
    base svec-metric-type;
    description
      "Cumulative IGP cost.";
    reference
      "RFC5541: Encoding of Objective Functions in the Path
       Computation Element Communication Protocol (PCEP).";
  }

  identity svec-metric-cumul-hop {
    base svec-metric-type;
    description
      "Cumulative Hop path metric.";
    reference
      "RFC8776: Common YANG Data Types for Traffic Engineering.";
  }

  identity svec-metric-aggregate-bandwidth-consumption {
    base svec-metric-type;
    description
      "Aggregate bandwidth consumption.";
    reference
      "RFC5541: Encoding of Objective Functions in the Path
       Computation Element Communication Protocol (PCEP).";
  }

  identity svec-metric-load-of-the-most-loaded-link {
    base svec-metric-type;
    description
      "Load of the most loaded link.";
    reference
      "RFC5541: Encoding of Objective Functions in the Path
       Computation Element Communication Protocol (PCEP).";
  }

  identity tunnel-action-path-compute-delete {
    base te:tunnel-actions-type;
    description
      "Action type to delete the transient states
       of computed paths, as described in section 3.3.1 of
       RFC XXXX.";
    reference
      "RFC XXXX: YANG Data Model for requesting Path Computation";
  }

  /*
   * Groupings
   */

  grouping protection-restoration-properties {
    description
      "This grouping defines the restoration and protection types
       for a path in the path computation request.";
    leaf protection-type {
      type identityref {
        base te-types:lsp-protection-type;
      }
      default "te-types:lsp-protection-unprotected";
      description
        "LSP protection type.";
    }
    leaf restoration-type {
      type identityref {
        base te-types:lsp-restoration-type;
      }
      default "te-types:lsp-restoration-restore-any";
      description
        "LSP restoration type.";
    }
    leaf restoration-scheme {
      type identityref {
        base te-types:restoration-scheme-type;
      }
      default "te-types:restoration-scheme-preconfigured";
      description
        "LSP restoration scheme.";
    }
  } // grouping protection-restoration-properties

  grouping requested-info {
    description
      "This grouping defines the information (e.g., metrics)
       which is requested, in the path computation request, to be
       returned in the path computation response.";
    list requested-metrics {
      key "metric-type";
      description
        "The list of the requested metrics.
         The metrics listed here must be returned in the response.
         Returning other metrics in the response is optional.";
      leaf metric-type {
        type identityref {
          base te-types:path-metric-type;
        }
        description
          "The metric that must be returned in the response";
      }
    }
    leaf return-srlgs {
      type boolean;
      default "false";
      description
        "If true, path srlgs must be returned in the response.
         If false, returning path srlgs in the response optional.";
    }
    leaf return-affinities {
      type boolean;
      default "false";
      description
        "If true, path affinities must be returned in the response.
         If false, returning path affinities in the response is
         optional.";
    }
  } // grouping requested-info

  grouping requested-state {
    description
      "Configuration for the transient state used
       to report the computed path";
    container requested-state {
      presence
        "Request temporary reporting of the computed path state";
      description
        "Configures attributes for the temporary reporting of the
         computed path state (e.g., expiration timer).";
      leaf timer {
        type uint16;
        units "minutes";
        default "10";
        description
          "The timeout after which the transient state reporting
          the computed path should be removed.";
      }
      leaf transaction-id {
        type string;
        description
          "The transaction-id associated with this path computation
          to be used for fast deletion of the transient states
          associated with multiple path computations.

          This transaction-id can be used to explicitly delete all
          the transient states of all the computed paths associated
          with the same transaction-id.

          When one path associated with a transaction-id is setup,
          the transient states of all the other computed paths
          with the same transaction-id are automatically removed.

          If not specified, the transient state is removed only
          when the timer expires (when the timer is specified)
          or not created at all (stateless path computation,
          when the timer is not specified).";
      }
    }
  } // grouping requested-state

  grouping reported-state {
    description
      "This grouping defines the information, returned in the path
       computation response, reporting the transient state related
       to the computed path";
    leaf tunnel-ref {
      type te:tunnel-ref;
      description
        "
         Reference to the tunnel that reports the transient state
         of the computed path.

         If no transient state is created, this attribute is
         omitted.
        ";
    }
    choice path-role {
      description
        "The transient state of the computed path can be reported
         as a primary, primary-reverse, secondary or
         a secondary-reverse path of a te-tunnel";
      case primary {
        leaf primary-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:primary-paths/te:primary-path/"
               + "te:name";
          }
          must '../tunnel-ref' {
            description
              "The primary-path name can only be reported
               if also the tunnel name is reported.";
          }
          description
            "
             Reference to the primary-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case primary
      case primary-reverse {
        leaf primary-reverse-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:primary-paths/te:primary-path/"
               + "te:name";
          }
          must '../tunnel-ref' {
            description
              "The primary-reverse-path name can only be reported
               if also the tunnel name is reported.";
          }
          description
            "
             Reference to the primary-reverse-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case primary-reverse
      case secondary {
        leaf secondary-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:secondary-paths/te:secondary-path/"
               + "te:name";
          }
          must '../tunnel-ref' {
            description
              "The secondary-path name can only be reported
               if also the tunnel name is reported.";
          }
          description
            "
             Reference to the secondary-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case secondary
      case secondary-reverse {
        leaf secondary-reverse-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:secondary-reverse-paths/"
               + "te:secondary-reverse-path/te:name";
          }
          must '../tunnel-ref' {
            description
              "The secondary-reverse-path name can only be reported
               if also the tunnel name is reported.";
          }
          description
            "
             Reference to the secondary-reverse-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case secondary
    } // choice path
  } // grouping reported-state

  grouping synchronization-constraints {
    description
      "Global constraints applicable to synchronized path
       computation requests.";
    container svec-constraints {
      description
        "global svec constraints";
      list path-metric-bound {
        key "metric-type";
        description
          "list of bound metrics";
        leaf metric-type {
          type identityref {
            base svec-metric-type;
          }
          description
            "SVEC metric type.";
          reference
            "RFC5541: Encoding of Objective Functions in the Path
            Computation Element Communication Protocol (PCEP).";
        }
        leaf upper-bound {
          type uint64;
          description
            "Upper bound on SVEC metric";
        }
      }
    }
    uses te-types:generic-path-srlgs;
    container exclude-objects {
      description
        "Resources to be excluded";
      list excludes {
        description
          "List of Explicit Route Objects to always exclude
           from synchronized path computation";
        uses te-types:explicit-route-hop;
      }
    }
  } // grouping synchronization-constraints

  grouping synchronization-optimization {
    description
      "Optimizations applicable to synchronized path
       computation requests.";
    container optimizations {
      description
        "The objective function container that includes attributes
         to impose when computing a synchronized set of paths";
      choice algorithm {
        description
          "Optimizations algorithm.";
        case metric {
          if-feature "te-types:path-optimization-metric";
          list optimization-metric {
            key "metric-type";
            description
              "svec path metric type";
            leaf metric-type {
              type identityref {
                base svec-metric-type;
              }
              description
                "TE path metric type usable for computing a set of
                synchronized requests";
            }
            leaf weight {
              type uint8;
              description
                "Metric normalization weight";
            }
          }
        }
        case objective-function {
          if-feature
            "te-types:path-optimization-objective-function";
          container objective-function {
            description
              "The objective function container that includes
               attributes to impose when computing a TE path";
            leaf objective-function-type {
              type identityref {
                base te-types:objective-function-type;
              }
              default "te-types:of-minimize-cost-path";
              description
                "Objective function entry";
            }
          }
        }
      }
    }
  } // grouping synchronization-optimization

  grouping synchronization-info {
    description
      "Information for synchronized path computation requests.";
    list synchronization {
      description
        "List of Synchronization VECtors.";
      container svec {
        description
          "Synchronization VECtor";
        leaf relaxable {
          type boolean;
          default "true";
          description
            "If this leaf is true, path computation process is
             free to ignore svec content.
             Otherwise, it must take into account this svec.";
        }
        uses te-types:generic-path-disjointness;
        leaf-list request-id-number {
          type uint32;
          description
            "This list reports the set of path computation
             requests that must be synchronized.";
        }
      }
      uses synchronization-constraints;
      uses synchronization-optimization;
    }
  } // grouping synchronization-info

  /*
   * Augment TE RPCs
   */

  augment "/te:tunnels-path-compute/te:input/te:path-compute-info" {
    description
      "Path Computation RPC input";
    list path-request {
      key "request-id";
      description
        "The list of the requested paths to be computed";
      leaf request-id {
        type uint32;
        mandatory true;
        description
          "Each path computation request is uniquely identified
           within the RPC request by the request-id-number.";
      }
      choice tunnel-attributes {
        default "value";
        description
          "Whether the tunnel attributes are specified by value
           within this path computation request or by reference.
           The reference could be either to an existing te-tunnel
           or to an entry in the tunnel-attributes list";
        case reference {
          container tunnel-reference {
            description
              "Attributes for a requested path that belongs to
              either an exiting te-tunnel or to an entry in the
              tunnel-attributes list.";
            choice tunnel-exist {
              description
                "Whether the tunnel reference is to an existing
                te-tunnel or to an entry in the tunnel-attributes
                list";
              case tunnel-ref {
                leaf tunnel-ref {
                  type te:tunnel-ref;
                  mandatory true;
                  description
                    "The referenced te-tunnel instance";
                }
              } // case tunnel-ref
              case tunnel-attributes-ref {
                leaf tunnel-attributes-ref {
                  type leafref {
                    path "/te:tunnels-path-compute/"
                      + "te:path-compute-info/"
                      + "te-pc:tunnel-attributes/te-pc:tunnel-name";
                  }
                  mandatory true;
                  description
                    "The referenced te-tunnel instance";
                }
              } // case tunnel-attributes-ref 
            } // choice tunnel-exist
            leaf path-name {
              type string;
              description
                "TE path name.";
            }
            choice path-role {
              mandatory true;
              description
                "Whether this path is a primary, or a reverse
                primary, or a secondary, or a reverse secondary
                path.";
              case primary-path {
                container primary-path {
                  presence "Indicates that the requested path
                            is a primary path";
                  description
                    "TE primary path";
                  uses te:path-preference;
                  uses te:k-requested-paths;
                } // container primary-path
              } // case primary-path
              case secondary-path {
                container secondary-path {
                  description
                    "TE secondary path";
                  uses te:path-preference;
                  uses protection-restoration-properties;
                  list primary-path-ref {
                    min-elements 1;
                    description
                      "The list of primary paths that reference
                      this path as a candidate secondary path";
                    choice primary-path-exist {
                      description
                        "Whether the path reference is to an existing
                        te-tunnel path or to another path request";
                      case path-ref {
                        leaf primary-path-ref {
                          type leafref {
                            path "/te:te/te:tunnels/te:tunnel"
                              + "[te:name=current()/../../../"
                              + "tunnel-ref]/te:primary-paths/"
                              + "te:primary-path/te:name";
                          }
                          must '../../../tunnel-ref' {
                            description
                              "The primary-path can be referenced
                              if also the tunnel is referenced.";
                          }
                          mandatory true;
                          description
                            "The referenced primary path";
                        }
                      } // case path-ref
                      case path-request-ref {
                        leaf path-request-ref {
                          type leafref {
                            path "/te:tunnels-path-compute/"
                              + "te:path-compute-info/"
                              + "te-pc:path-request/"
                              + "te-pc:request-id";
                          }
                          mandatory true;
                          description
                            "The referenced primary path request";
                        }
                      } // case path-request-ref 
                    } // choice primary-path-exist
                  } // list primary-path-ref
                } // container secondary-path
              } // case secondary-path
              case primary-reverse-path {
                container primary-reverse-path {
                  description
                    "TE primary reverse path";
                  choice primary-path-exist {
                    description
                      "Whether the path reference to the primary
                      paths for which this path is the reverse-path
                      is to an existing te-tunnel path or to
                      another path request.";
                    case path-ref {
                      leaf primary-path-ref {
                        type leafref {
                          path "/te:te/te:tunnels/te:tunnel[te:name"
                            + "=current()/../../tunnel-ref]/"
                            + "te:primary-paths/te:primary-path/"
                            + "te:name";
                        }
                        must '../../tunnel-ref' {
                          description
                            "The primary-path can be referenced
                            if also the tunnel is referenced.";
                        }
                        mandatory true;
                        description
                          "The referenced primary path";
                      }
                    } // case path-ref
                    case path-request-ref {
                      leaf path-request-ref {
                        type leafref {
                          path "/te:tunnels-path-compute/"
                            + "te:path-compute-info/"
                            + "te-pc:path-request/"
                            + "te-pc:request-id";
                        }
                        mandatory true;
                        description
                          "The referenced primary path request";
                      }
                    } // case path-request-ref 
                  } // choice primary-path-exist
                } // container primary-reverse-path
              } // case primary-reverse-path
              case secondary-reverse-path {
                container secondary-reverse-path {
                  description
                    "TE secondary reverse path";
                  uses te:path-preference;
                  uses protection-restoration-properties;
                  list primary-reverse-path-ref {
                    min-elements 1;
                    description
                      "The list of primary reverse paths that
                      reference this path as a candidate
                      secondary reverse path";
                    choice primary-reverse-path-exist {
                      description
                        "Whether the path reference is to an existing
                        te-tunnel path or to another path request";
                      case path-ref {
                        leaf primary-path-ref {
                          type leafref {
                            path "/te:te/te:tunnels/te:tunnel"
                              + "[te:name=current()/../../../"
                              + "tunnel-ref]/te:primary-paths/"
                              + "te:primary-path/te:name";
                          }
                          must '../../../tunnel-ref' {
                            description
                              "The primary-path can be referenced
                              if also the tunnel is referenced.";
                          }
                          mandatory true;
                          description
                            "The referenced primary path";
                        }
                      } // case path-ref
                      case path-request-ref {
                        leaf path-request-ref {
                          type leafref {
                            path "/te:tunnels-path-compute/"
                              + "te:path-compute-info/"
                              + "te-pc:path-request/"
                              + "te-pc:request-id";
                          }
                          mandatory true;
                          description
                            "The referenced primary reverse path
                            request";
                        }
                      } // case path-request-ref 
                    } // choice primary-reverse-path-exist
                  } // list primary-reverse-path-ref
                } // container secondary-reverse-path
              } // case secondary-reverse-path
            } // choice tunnel-path-role
          }
        } // case reference
        case value {
          leaf tunnel-name {
            type string;
            description
              "TE tunnel name.";
          }
          leaf path-name {
            type string;
            description
              "TE path name.";
          }
          choice path-role {
            when 'not (./source) and not (./destination) and
                  not (./src-tunnel-tp-id) and
                  not (./dst-tunnel-tp-id)' {
              description
                "When the tunnel attributes are specified by value
                within this path computation, it is assumed that the
                requested path will be the only path of a tunnel.

                If the requested path is a transit segment path, it
                could be of any type. Otherwise it could only be a
                primary path.";
            }
            default primary-path;
            description
              "Indicates whether the requested path is a primary
              path, a secondary path, a reverse primary path or a
              reverse secondary path.";
            case primary-path {
              description
                "The requested path is a primary path.";
            }
            container secondary-path {
              presence
                "Indicates that the requested path is a secondary
                path.";
              description
                "The name of the primary path which the requested
                primary reverse path belongs to.";
              leaf primary-path-name {
                type string;
                description
                  "TE primary path name.";
              }
            } // container secondary-path
            container primary-reverse-path {
              presence
                "Indicates that the requested path is a primary
                reverse path.";
              description
                "The name of the primary path which the requested
                primary reverse path belongs to.";
              leaf primary-path-name {
                type string;
                description
                  "TE primary path name.";
              }
            } // container primary-reverse-path
            container secondary-reverse-path {
              presence
                "Indicates that the requested path is a secondary
                reverse path.";
              description
                "The names of the primary path and of the primary
                reverse path which the requested secondary reverse
                path belongs to.";
              leaf primary-path-name {
                type string;
                description
                  "TE primary path name.";
              }
              leaf primary-reverse-path-name {
                type string;
                description
                  "TE primary reverse path name.";
              }
            } // container primary-reverse-path
          } // choice path-role
          uses te:k-requested-paths;
          uses te:encoding-and-switching-type;
          uses te:tunnel-common-attributes;
          uses te-types:te-topology-identifier;
        } // case value
      } // choice tunnel-attributes
      uses te:path-compute-info;
      uses requested-info;
      uses requested-state;
    }
    list tunnel-attributes {
      key "tunnel-name";
      description
        "Tunnel attributes common to multiple request paths";
      leaf tunnel-name {
        type string;
        description
          "TE tunnel name.";
      }
      uses te:encoding-and-switching-type;
      uses te:tunnel-common-attributes;
      uses te:tunnel-associations-properties;
      uses protection-restoration-properties;
      uses te-types:tunnel-constraints;
      uses te:tunnel-hierarchy-properties {
        augment "hierarchy/dependency-tunnels" {
          description
            "Augment with the list of dependency tunnel requests.";
          list dependency-tunnel-attributes {
            key "name";
            description
              "A tunnel request entry that this tunnel request can
               potentially depend on.";
            leaf name {
              type leafref {
                path "/te:tunnels-path-compute/"
                   + "te:path-compute-info/te-pc:tunnel-attributes/"
                   + "te-pc:tunnel-name";
              }
              description
                "Dependency tunnel request name.";
            }
            uses te:encoding-and-switching-type;
          }
        }
      }
    }
    uses synchronization-info;
  } // path-compute rpc input

  augment "/te:tunnels-path-compute/te:output/"
        + "te:path-compute-result" {
    description
      "Path Computation RPC output";
    list response {
      key "response-id";
      config false;
      description
        "response";
      leaf response-id {
        type uint32;
        description
          "The response-id has the same value of the
           corresponding request-id.";
      }
      uses te:path-computation-response;
      uses reported-state;
    }
  } // path-compute rpc output

  augment "/te:tunnels-actions/te:input/te:tunnel-info/"
        + "te:filter-type" {
    description
      "Augment Tunnels Action RPC input filter types";
    case path-compute-transactions {
      when "derived-from-or-self(../te:action-info/te:action, "
         + "'tunnel-action-path-compute-delete')";
      description
        "Path Delete Action RPC";
      leaf-list path-compute-transaction-id {
        type string;
        description
          "The list of the transaction-id values of the
           transient states to be deleted";
      }
    }
  } // path-delete rpc input

  augment "/te:tunnels-actions/te:output" {
    description
      "Augment Tunnels Action RPC output with path delete result";
    container path-computed-delete-result {
      description
        "Path Delete RPC output";
      leaf-list path-compute-transaction-id {
        type string;
        description
          "The list of the transaction-id values of the
           transient states that have been successfully deleted";
      }
    }
  } // path-delete rpc output
}
]]></artwork></figure>

</section>
</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>This document describes use cases of requesting Path Computation
   using YANG data models, which could be used at the ABNO Control
   Interface <xref target="RFC7491"/> and/or between controllers in ACTN <xref target="RFC8453"/>. As
   such, it does not introduce any new security considerations compared
   to the ones related to YANG specification, ABNO specification and
   ACTN Framework defined in <xref target="RFC7950"/>, <xref target="RFC7491"/> and <xref target="RFC8453"/>.</t>

<t>The YANG module defined in this draft is designed to be accessed via
   the NETCONF protocol <xref target="RFC6241"/> or RESTCONF protocol <xref target="RFC8040"/>. The
   lowest NETCONF layer is the secure transport layer, and the
   mandatory-to-implement secure transport is Secure Shell (SSH)
   <xref target="RFC6242"/>. The lowest RESTCONF layer is HTTPS, and the mandatory-to-
   implement secure transport is TLS <xref target="RFC8446"/>.</t>

<t>This document also defines common data types using the YANG data
   modeling language. The definitions themselves have no security impact
   on the Internet, but the usage of these definitions in concrete YANG
   modules might have. The security considerations spelled out in the
   YANG specification <xref target="RFC7950"/> apply for this document as well.</t>

<t>The NETCONF access control model <xref target="RFC8341"/> provides the means to
   restrict access for particular NETCONF or RESTCONF users to a
   preconfigured subset of all available NETCONF or RESTCONF protocol
   operations and content.</t>

<t>Note - The security analysis of each leaf is for further study.</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>This document registers the following URIs in the "ns" subregistry
   within the "IETF XML registry" <xref target="RFC3688"/>.</t>

<figure><artwork><![CDATA[
      URI: urn:ietf:params:xml:ns:yang:ietf-te-path-computation
      Registrant Contact:  The IESG.
      XML: N/A, the requested URI is an XML namespace.
]]></artwork></figure>

<t>This document registers a YANG module in the "YANG Module Names"
   registry <xref target="RFC7950"/>.</t>

<figure><artwork><![CDATA[
      name:      ietf-te-path-computation
      namespace: urn:ietf:params:xml:ns:yang:ietf-te-path-computation
      prefix:    te-pc
      reference: this document
]]></artwork></figure>

</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference anchor='RFC6241' target='https://www.rfc-editor.org/info/rfc6241'>
<front>
<title>Network Configuration Protocol (NETCONF)</title>
<author fullname='R. Enns' initials='R.' role='editor' surname='Enns'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'><organization/></author>
<author fullname='A. Bierman' initials='A.' role='editor' surname='Bierman'><organization/></author>
<date month='June' year='2011'/>
<abstract><t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices.  It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages.  The NETCONF protocol operations are realized as remote procedure calls (RPCs).  This document obsoletes RFC 4741.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6241'/>
<seriesInfo name='DOI' value='10.17487/RFC6241'/>
</reference>



<reference anchor='RFC8040' target='https://www.rfc-editor.org/info/rfc8040'>
<front>
<title>RESTCONF Protocol</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<date month='January' year='2017'/>
<abstract><t>This document describes an HTTP-based protocol that provides a programmatic interface for accessing data defined in YANG, using the datastore concepts defined in the Network Configuration Protocol (NETCONF).</t></abstract>
</front>
<seriesInfo name='RFC' value='8040'/>
<seriesInfo name='DOI' value='10.17487/RFC8040'/>
</reference>



<reference anchor='RFC8795' target='https://www.rfc-editor.org/info/rfc8795'>
<front>
<title>YANG Data Model for Traffic Engineering (TE) Topologies</title>
<author fullname='X. Liu' initials='X.' surname='Liu'><organization/></author>
<author fullname='I. Bryskin' initials='I.' surname='Bryskin'><organization/></author>
<author fullname='V. Beeram' initials='V.' surname='Beeram'><organization/></author>
<author fullname='T. Saad' initials='T.' surname='Saad'><organization/></author>
<author fullname='H. Shah' initials='H.' surname='Shah'><organization/></author>
<author fullname='O. Gonzalez de Dios' initials='O.' surname='Gonzalez de Dios'><organization/></author>
<date month='August' year='2020'/>
<abstract><t>This document defines a YANG data model for representing, retrieving, and manipulating Traffic Engineering (TE) Topologies. The model serves as a base model that other technology-specific TE topology models can augment.</t></abstract>
</front>
<seriesInfo name='RFC' value='8795'/>
<seriesInfo name='DOI' value='10.17487/RFC8795'/>
</reference>


<reference anchor='I-D.ietf-teas-yang-te'>
   <front>
      <title>A YANG Data Model for Traffic Engineering Tunnels, Label Switched Paths and Interfaces</title>
      <author fullname='Tarek Saad'>
	 <organization>Juniper Networks</organization>
      </author>
      <author fullname='Rakesh Gandhi'>
	 <organization>Cisco Systems Inc</organization>
      </author>
      <author fullname='Xufeng Liu'>
	 <organization>Volta Networks</organization>
      </author>
      <author fullname='Vishnu Pavan Beeram'>
	 <organization>Juniper Networks</organization>
      </author>
      <author fullname='Igor Bryskin'>
	 <organization>Individual</organization>
      </author>
      <author fullname='Oscar Gonzalez de Dios'>
	 <organization>Telefonica</organization>
      </author>
      <date day='25' month='October' year='2021'/>
      <abstract>
	 <t>   This document defines a YANG data model for the provisioning and
   management of Traffic Engineering (TE) tunnels, Label Switched Paths
   (LSPs), and interfaces.  The model is divided into YANG modules that
   classify data into generic, device-specific, technology agnostic, and
   technology-specific elements.

   This model covers data for configuration, operational state, remote
   procedural calls, and event notifications.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-teas-yang-te-28'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-teas-yang-te-28.txt' type='TXT'/>
</reference>



<reference anchor='RFC7950' target='https://www.rfc-editor.org/info/rfc7950'>
<front>
<title>The YANG 1.1 Data Modeling Language</title>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<date month='August' year='2016'/>
<abstract><t>YANG is a data modeling language used to model configuration data, state data, Remote Procedure Calls, and notifications for network management protocols.  This document describes the syntax and semantics of version 1.1 of the YANG language.  YANG version 1.1 is a maintenance release of the YANG language, addressing ambiguities and defects in the original specification.  There are a small number of backward incompatibilities from YANG version 1.  This document also specifies the YANG mappings to the Network Configuration Protocol (NETCONF).</t></abstract>
</front>
<seriesInfo name='RFC' value='7950'/>
<seriesInfo name='DOI' value='10.17487/RFC7950'/>
</reference>



<reference anchor='RFC5440' target='https://www.rfc-editor.org/info/rfc5440'>
<front>
<title>Path Computation Element (PCE) Communication Protocol (PCEP)</title>
<author fullname='JP. Vasseur' initials='JP.' role='editor' surname='Vasseur'><organization/></author>
<author fullname='JL. Le Roux' initials='JL.' role='editor' surname='Le Roux'><organization/></author>
<date month='March' year='2009'/>
<abstract><t>This document specifies the Path Computation Element (PCE) Communication Protocol (PCEP) for communications between a Path Computation Client (PCC) and a PCE, or between two PCEs.  Such interactions include path computation requests and path computation replies as well as notifications of specific states related to the use of a PCE in the context of Multiprotocol Label Switching (MPLS) and Generalized MPLS (GMPLS) Traffic Engineering.  PCEP is designed to be flexible and extensible so as to easily allow for the addition of further messages and objects, should further requirements be expressed in the future.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5440'/>
<seriesInfo name='DOI' value='10.17487/RFC5440'/>
</reference>



<reference anchor='RFC7926' target='https://www.rfc-editor.org/info/rfc7926'>
<front>
<title>Problem Statement and Architecture for Information Exchange between Interconnected Traffic-Engineered Networks</title>
<author fullname='A. Farrel' initials='A.' role='editor' surname='Farrel'><organization/></author>
<author fullname='J. Drake' initials='J.' surname='Drake'><organization/></author>
<author fullname='N. Bitar' initials='N.' surname='Bitar'><organization/></author>
<author fullname='G. Swallow' initials='G.' surname='Swallow'><organization/></author>
<author fullname='D. Ceccarelli' initials='D.' surname='Ceccarelli'><organization/></author>
<author fullname='X. Zhang' initials='X.' surname='Zhang'><organization/></author>
<date month='July' year='2016'/>
<abstract><t>In Traffic-Engineered (TE) systems, it is sometimes desirable to establish an end-to-end TE path with a set of constraints (such as bandwidth) across one or more networks from a source to a destination.  TE information is the data relating to nodes and TE links that is used in the process of selecting a TE path.  TE information is usually only available within a network.  We call such a zone of visibility of TE information a domain.  An example of a domain may be an IGP area or an Autonomous System.</t><t>In order to determine the potential to establish a TE path through a series of connected networks, it is necessary to have available a certain amount of TE information about each network.  This need not be the full set of TE information available within each network but does need to express the potential of providing TE connectivity. This subset of TE information is called TE reachability information.</t><t>This document sets out the problem statement for the exchange of TE information between interconnected TE networks in support of end-to-end TE path establishment and describes the best current practice architecture to meet this problem statement.  For reasons that are explained in this document, this work is limited to simple TE constraints and information that determine TE reachability.</t></abstract>
</front>
<seriesInfo name='BCP' value='206'/>
<seriesInfo name='RFC' value='7926'/>
<seriesInfo name='DOI' value='10.17487/RFC7926'/>
</reference>



<reference anchor='RFC8340' target='https://www.rfc-editor.org/info/rfc8340'>
<front>
<title>YANG Tree Diagrams</title>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='L. Berger' initials='L.' role='editor' surname='Berger'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>This document captures the current syntax used in YANG module tree diagrams.  The purpose of this document is to provide a single location for this definition.  This syntax may be updated from time to time based on the evolution of the YANG language.</t></abstract>
</front>
<seriesInfo name='BCP' value='215'/>
<seriesInfo name='RFC' value='8340'/>
<seriesInfo name='DOI' value='10.17487/RFC8340'/>
</reference>



<reference anchor='RFC6991' target='https://www.rfc-editor.org/info/rfc6991'>
<front>
<title>Common YANG Data Types</title>
<author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'><organization/></author>
<date month='July' year='2013'/>
<abstract><t>This document introduces a collection of common data types to be used with the YANG data modeling language.  This document obsoletes RFC 6021.</t></abstract>
</front>
<seriesInfo name='RFC' value='6991'/>
<seriesInfo name='DOI' value='10.17487/RFC6991'/>
</reference>



<reference anchor='RFC8776' target='https://www.rfc-editor.org/info/rfc8776'>
<front>
<title>Common YANG Data Types for Traffic Engineering</title>
<author fullname='T. Saad' initials='T.' surname='Saad'><organization/></author>
<author fullname='R. Gandhi' initials='R.' surname='Gandhi'><organization/></author>
<author fullname='X. Liu' initials='X.' surname='Liu'><organization/></author>
<author fullname='V. Beeram' initials='V.' surname='Beeram'><organization/></author>
<author fullname='I. Bryskin' initials='I.' surname='Bryskin'><organization/></author>
<date month='June' year='2020'/>
<abstract><t>This document defines a collection of common data types and groupings in YANG data modeling language. These derived common types and groupings are intended to be imported by modules that model Traffic Engineering (TE) configuration and state capabilities.</t></abstract>
</front>
<seriesInfo name='RFC' value='8776'/>
<seriesInfo name='DOI' value='10.17487/RFC8776'/>
</reference>



<reference anchor='RFC5441' target='https://www.rfc-editor.org/info/rfc5441'>
<front>
<title>A Backward-Recursive PCE-Based Computation (BRPC) Procedure to Compute Shortest Constrained Inter-Domain Traffic Engineering Label Switched Paths</title>
<author fullname='JP. Vasseur' initials='JP.' role='editor' surname='Vasseur'><organization/></author>
<author fullname='R. Zhang' initials='R.' surname='Zhang'><organization/></author>
<author fullname='N. Bitar' initials='N.' surname='Bitar'><organization/></author>
<author fullname='JL. Le Roux' initials='JL.' surname='Le Roux'><organization/></author>
<date month='April' year='2009'/>
<abstract><t>The ability to compute shortest constrained Traffic Engineering Label Switched Paths (TE LSPs) in Multiprotocol Label Switching (MPLS) and Generalized MPLS (GMPLS) networks across multiple domains has been identified as a key requirement.  In this context, a domain is a collection of network elements within a common sphere of address management or path computational responsibility such as an IGP area or an Autonomous Systems.  This document specifies a procedure relying on the use of multiple Path Computation Elements (PCEs) to compute such inter-domain shortest constrained paths across a predetermined sequence of domains, using a backward-recursive path computation technique.  This technique preserves confidentiality across domains, which is sometimes required when domains are managed by different service providers.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5441'/>
<seriesInfo name='DOI' value='10.17487/RFC5441'/>
</reference>



<reference anchor='RFC5541' target='https://www.rfc-editor.org/info/rfc5541'>
<front>
<title>Encoding of Objective Functions in the Path Computation Element Communication Protocol (PCEP)</title>
<author fullname='JL. Le Roux' initials='JL.' surname='Le Roux'><organization/></author>
<author fullname='JP. Vasseur' initials='JP.' surname='Vasseur'><organization/></author>
<author fullname='Y. Lee' initials='Y.' surname='Lee'><organization/></author>
<date month='June' year='2009'/>
<abstract><t>The computation of one or a set of Traffic Engineering Label Switched Paths (TE LSPs) in MultiProtocol Label Switching (MPLS) and Generalized MPLS (GMPLS) networks is subject to a set of one or more specific optimization criteria, referred to as objective functions (e.g., minimum cost path, widest path, etc.).</t><t>In the Path Computation Element (PCE) architecture, a Path Computation Client (PCC) may want a path to be computed for one or more TE LSPs according to a specific objective function.  Thus, the PCC needs to instruct the PCE to use the correct objective function. Furthermore, it is possible that not all PCEs support the same set of objective functions; therefore, it is useful for the PCC to be able to automatically discover the set of objective functions supported by each PCE.</t><t>This document defines extensions to the PCE communication Protocol (PCEP) to allow a PCE to indicate the set of objective functions it supports.  Extensions are also defined so that a PCC can indicate in a path computation request the required objective function, and a PCE can report in a path computation reply the objective function that was used for path computation.</t><t>This document defines objective function code types for six objective functions previously listed in the PCE requirements work, and provides the definition of four new metric types that apply to a set of synchronized requests.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5541'/>
<seriesInfo name='DOI' value='10.17487/RFC5541'/>
</reference>



<reference anchor='RFC6242' target='https://www.rfc-editor.org/info/rfc6242'>
<front>
<title>Using the NETCONF Protocol over Secure Shell (SSH)</title>
<author fullname='M. Wasserman' initials='M.' surname='Wasserman'><organization/></author>
<date month='June' year='2011'/>
<abstract><t>This document describes a method for invoking and running the Network Configuration Protocol (NETCONF) within a Secure Shell (SSH) session as an SSH subsystem.  This document obsoletes RFC 4742.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6242'/>
<seriesInfo name='DOI' value='10.17487/RFC6242'/>
</reference>



<reference anchor='RFC8446' target='https://www.rfc-editor.org/info/rfc8446'>
<front>
<title>The Transport Layer Security (TLS) Protocol Version 1.3</title>
<author fullname='E. Rescorla' initials='E.' surname='Rescorla'><organization/></author>
<date month='August' year='2018'/>
<abstract><t>This document specifies version 1.3 of the Transport Layer Security (TLS) protocol.  TLS allows client/server applications to communicate over the Internet in a way that is designed to prevent eavesdropping, tampering, and message forgery.</t><t>This document updates RFCs 5705 and 6066, and obsoletes RFCs 5077, 5246, and 6961.  This document also specifies new requirements for TLS 1.2 implementations.</t></abstract>
</front>
<seriesInfo name='RFC' value='8446'/>
<seriesInfo name='DOI' value='10.17487/RFC8446'/>
</reference>



<reference anchor='RFC8341' target='https://www.rfc-editor.org/info/rfc8341'>
<front>
<title>Network Configuration Access Control Model</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>The standardization of network configuration interfaces for use with the Network Configuration Protocol (NETCONF) or the RESTCONF protocol requires a structured and secure operating environment that promotes human usability and multi-vendor interoperability.  There is a need for standard mechanisms to restrict NETCONF or RESTCONF protocol access for particular users to a preconfigured subset of all available NETCONF or RESTCONF protocol operations and content.  This document defines such an access control model.</t><t>This document obsoletes RFC 6536.</t></abstract>
</front>
<seriesInfo name='STD' value='91'/>
<seriesInfo name='RFC' value='8341'/>
<seriesInfo name='DOI' value='10.17487/RFC8341'/>
</reference>



<reference anchor='RFC3688' target='https://www.rfc-editor.org/info/rfc3688'>
<front>
<title>The IETF XML Registry</title>
<author fullname='M. Mealling' initials='M.' surname='Mealling'><organization/></author>
<date month='January' year='2004'/>
<abstract><t>This document describes an IANA maintained registry for IETF standards which use Extensible Markup Language (XML) related items such as Namespaces, Document Type Declarations (DTDs), Schemas, and Resource Description Framework (RDF) Schemas.</t></abstract>
</front>
<seriesInfo name='BCP' value='81'/>
<seriesInfo name='RFC' value='3688'/>
<seriesInfo name='DOI' value='10.17487/RFC3688'/>
</reference>




    </references>

    <references title='Informative References'>





<reference anchor='RFC7491' target='https://www.rfc-editor.org/info/rfc7491'>
<front>
<title>A PCE-Based Architecture for Application-Based Network Operations</title>
<author fullname='D. King' initials='D.' surname='King'><organization/></author>
<author fullname='A. Farrel' initials='A.' surname='Farrel'><organization/></author>
<date month='March' year='2015'/>
<abstract><t>Services such as content distribution, distributed databases, or inter-data center connectivity place a set of new requirements on the operation of networks.  They need on-demand and application-specific reservation of network connectivity, reliability, and resources (such as bandwidth) in a variety of network applications (such as point-to-point connectivity, network virtualization, or mobile back-haul) and in a range of network technologies from packet (IP/MPLS) down to optical.  An environment that operates to meet these types of requirements is said to have Application-Based Network Operations (ABNO).  ABNO brings together many existing technologies and may be seen as the use of a toolbox of existing components enhanced with a few new elements.</t><t>This document describes an architecture and framework for ABNO, showing how these components fit together.  It provides a cookbook of existing technologies to satisfy the architecture and meet the needs of the applications.</t></abstract>
</front>
<seriesInfo name='RFC' value='7491'/>
<seriesInfo name='DOI' value='10.17487/RFC7491'/>
</reference>



<reference anchor='RFC8453' target='https://www.rfc-editor.org/info/rfc8453'>
<front>
<title>Framework for Abstraction and Control of TE Networks (ACTN)</title>
<author fullname='D. Ceccarelli' initials='D.' role='editor' surname='Ceccarelli'><organization/></author>
<author fullname='Y. Lee' initials='Y.' role='editor' surname='Lee'><organization/></author>
<date month='August' year='2018'/>
<abstract><t>Traffic Engineered (TE) networks have a variety of mechanisms to facilitate the separation of the data plane and control plane.  They also have a range of management and provisioning protocols to configure and activate network resources.  These mechanisms represent key technologies for enabling flexible and dynamic networking.  The term &quot;Traffic Engineered network&quot; refers to a network that uses any connection-oriented technology under the control of a distributed or centralized control plane to support dynamic provisioning of end-to- end connectivity.</t><t>Abstraction of network resources is a technique that can be applied to a single network domain or across multiple domains to create a single virtualized network that is under the control of a network operator or the customer of the operator that actually owns the network resources.</t><t>This document provides a framework for Abstraction and Control of TE Networks (ACTN) to support virtual network services and connectivity services.</t></abstract>
</front>
<seriesInfo name='RFC' value='8453'/>
<seriesInfo name='DOI' value='10.17487/RFC8453'/>
</reference>



<reference anchor='RFC8454' target='https://www.rfc-editor.org/info/rfc8454'>
<front>
<title>Information Model for Abstraction and Control of TE Networks (ACTN)</title>
<author fullname='Y. Lee' initials='Y.' surname='Lee'><organization/></author>
<author fullname='S. Belotti' initials='S.' surname='Belotti'><organization/></author>
<author fullname='D. Dhody' initials='D.' surname='Dhody'><organization/></author>
<author fullname='D. Ceccarelli' initials='D.' surname='Ceccarelli'><organization/></author>
<author fullname='B. Yoon' initials='B.' surname='Yoon'><organization/></author>
<date month='September' year='2018'/>
<abstract><t>This document provides an information model for Abstraction and Control of TE Networks (ACTN).</t></abstract>
</front>
<seriesInfo name='RFC' value='8454'/>
<seriesInfo name='DOI' value='10.17487/RFC8454'/>
</reference>


<reference anchor='I-D.ietf-ccamp-otn-topo-yang'>
   <front>
      <title>A YANG Data Model for Optical Transport Network Topology</title>
      <author fullname='Haomian Zheng'>
	 <organization>Huawei Technologies</organization>
      </author>
      <author fullname='Italo Busi'>
	 <organization>Huawei Technologies</organization>
      </author>
      <author fullname='Xufeng Liu'>
	 <organization>Volta Networks</organization>
      </author>
      <author fullname='Sergio Belotti'>
	 <organization>Nokia</organization>
      </author>
      <author fullname='Oscar Gonzalez de Dios'>
	 <organization>Telefonica</organization>
      </author>
      <date day='12' month='July' year='2021'/>
      <abstract>
	 <t>   This document describes a YANG data model to describe the topologies
   of an Optical Transport Network (OTN).  It is independent of control
   plane protocols and captures topological and resource related
   information pertaining to OTN.  This model enables clients, which
   interact with a transport domain controller, for OTN topology related
   operations such as obtaining the relevant topology resource
   information.


	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-ccamp-otn-topo-yang-13'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-ccamp-otn-topo-yang-13.txt' type='TXT'/>
</reference>



<reference anchor='RFC4655' target='https://www.rfc-editor.org/info/rfc4655'>
<front>
<title>A Path Computation Element (PCE)-Based Architecture</title>
<author fullname='A. Farrel' initials='A.' surname='Farrel'><organization/></author>
<author fullname='J.-P. Vasseur' initials='J.-P.' surname='Vasseur'><organization/></author>
<author fullname='J. Ash' initials='J.' surname='Ash'><organization/></author>
<date month='August' year='2006'/>
<abstract><t>Constraint-based path computation is a fundamental building block for traffic engineering systems such as Multiprotocol Label Switching (MPLS) and Generalized Multiprotocol Label Switching (GMPLS) networks.  Path computation in large, multi-domain, multi-region, or multi-layer networks is complex and may require special computational components and cooperation between the different network domains.</t><t>This document specifies the architecture for a Path Computation Element (PCE)-based model to address this problem space.  This document does not attempt to provide a detailed description of all the architectural components, but rather it describes a set of building blocks for the PCE architecture from which solutions may be constructed.  This memo provides information for the Internet community.</t></abstract>
</front>
<seriesInfo name='RFC' value='4655'/>
<seriesInfo name='DOI' value='10.17487/RFC4655'/>
</reference>



<reference anchor='RFC8342' target='https://www.rfc-editor.org/info/rfc8342'>
<front>
<title>Network Management Datastore Architecture (NMDA)</title>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' surname='Schoenwaelder'><organization/></author>
<author fullname='P. Shafer' initials='P.' surname='Shafer'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<author fullname='R. Wilton' initials='R.' surname='Wilton'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>Datastores are a fundamental concept binding the data models written in the YANG data modeling language to network management protocols such as the Network Configuration Protocol (NETCONF) and RESTCONF. This document defines an architectural framework for datastores based on the experience gained with the initial simpler model, addressing requirements that were not well supported in the initial model.  This document updates RFC 7950.</t></abstract>
</front>
<seriesInfo name='RFC' value='8342'/>
<seriesInfo name='DOI' value='10.17487/RFC8342'/>
</reference>



<reference anchor='RFC6805' target='https://www.rfc-editor.org/info/rfc6805'>
<front>
<title>The Application of the Path Computation Element Architecture to the Determination of a Sequence of Domains in MPLS and GMPLS</title>
<author fullname='D. King' initials='D.' role='editor' surname='King'><organization/></author>
<author fullname='A. Farrel' initials='A.' role='editor' surname='Farrel'><organization/></author>
<date month='November' year='2012'/>
<abstract><t>Computing optimum routes for Label Switched Paths (LSPs) across multiple domains in MPLS Traffic Engineering (MPLS-TE) and GMPLS networks presents a problem because no single point of path computation is aware of all of the links and resources in each domain.  A solution may be achieved using the Path Computation Element (PCE) architecture.</t><t>Where the sequence of domains is known a priori, various techniques can be employed to derive an optimum path.  If the domains are simply connected, or if the preferred points of interconnection are also known, the Per-Domain Path Computation technique can be used.  Where there are multiple connections between domains and there is no preference for the choice of points of interconnection, the Backward-Recursive PCE-based Computation (BRPC) procedure can be used to derive an optimal path.</t><t>This document examines techniques to establish the optimum path when the sequence of domains is not known in advance.  The document shows how the PCE architecture can be extended to allow the optimum sequence of domains to be selected, and the optimum end-to-end path to be derived through the use of a hierarchical relationship between domains.  This document is not an Internet Standards Track  specification; it is published for informational purposes.</t></abstract>
</front>
<seriesInfo name='RFC' value='6805'/>
<seriesInfo name='DOI' value='10.17487/RFC6805'/>
</reference>



<reference anchor='RFC7446' target='https://www.rfc-editor.org/info/rfc7446'>
<front>
<title>Routing and Wavelength Assignment Information Model for Wavelength Switched Optical Networks</title>
<author fullname='Y. Lee' initials='Y.' role='editor' surname='Lee'><organization/></author>
<author fullname='G. Bernstein' initials='G.' role='editor' surname='Bernstein'><organization/></author>
<author fullname='D. Li' initials='D.' surname='Li'><organization/></author>
<author fullname='W. Imajuku' initials='W.' surname='Imajuku'><organization/></author>
<date month='February' year='2015'/>
<abstract><t>This document provides a model of information needed by the Routing and Wavelength Assignment (RWA) process in Wavelength Switched Optical Networks (WSONs).  The purpose of the information described in this model is to facilitate constrained optical path computation in WSONs.  This model takes into account compatibility constraints between WSON signal attributes and network elements but does not include constraints due to optical impairments.  Aspects of this information that may be of use to other technologies utilizing a GMPLS control plane are discussed.</t></abstract>
</front>
<seriesInfo name='RFC' value='7446'/>
<seriesInfo name='DOI' value='10.17487/RFC7446'/>
</reference>




    </references>


<section numbered="false" anchor="acknowledgments"><name>Acknowledgments</name>

<t>The authors would like to thank Igor Bryskin and Xian Zhang for
   participating in the initial discussions that have triggered this
   work and providing valuable insights.</t>

<t>The authors would like to thank the authors of the TE tunnel YANG
   data model <xref target="I-D.ietf-teas-yang-te"/>, in particular Igor Bryskin, Vishnu Pavan
   Beeram, Tarek Saad and Xufeng Liu, for their inputs to the
   discussions and support in having consistency between the Path
   Computation and TE tunnel YANG data models.</t>

<t>The authors would like to thank Adrian Farrel, Dhruv Dhody, Igor
   Bryskin, Julien Meuric and Lou Berger for their valuable input to the
   discussions that has clarified that the path being set up is not
   necessarily the same as the path that has been previously computed
   and, in particular to Dhruv Dhody, for his suggestion to describe the
   need for a path verification phase to check that the actual path
   being set up meets the required end-to-end metrics and constraints.</t>

<t>The authors would like to thank Aihua Guo, Lou Berger, Shaolong Gan,
   Martin Bjorklund and Tom Petch for their useful comments on how to
   define XPath statements in YANG RPCs.</t>

<t>The authors would like to thank Haomian Zheng, Yanlei Zheng, Tom
   Petch, Aihua Guo and Martin Bjorklund for their review and valuable
   comments to this document.</t>

<t>Previous versions of document were prepared using 2-Word-v2.0.template.dot.</t>

<t>This document was prepared using kramdown.</t>

</section>

    <section anchor="contributors" numbered="false" toc="include" removeInRFC="false">
        <name>Contributors</name>
    <contact initials="V." surname="Lopez" fullname="Victor Lopez">
      <organization>Nokia</organization>
      <address>
        <email>victor.lopez@nokia.com</email>
      </address>
    </contact>
    <contact initials="R." surname="Vilalta" fullname="Ricard Vilalta">
      <organization>CTTC</organization>
      <address>
        <email>ricard.vilalta@cttc.es</email>
      </address>
    </contact>
    <contact initials="K." surname="Sethuraman" fullname="Karthik Sethuraman">
      <organization>NEC</organization>
      <address>
        <email>karthik.sethuraman@necam.com</email>
      </address>
    </contact>
    <contact initials="M." surname="Scharf" fullname="Michael Scharf">
      <organization>Nokia</organization>
      <address>
        <email>michael.scharf@gmail.com</email>
      </address>
    </contact>
    <contact initials="D." surname="Beller" fullname="Dieter Beller">
      <organization>Nokia</organization>
      <address>
        <email>dieter.beller@nokia.com</email>
      </address>
    </contact>
    <contact initials="G." surname="Bruno" fullname="Gianmarco Bruno">
      <organization>Ericsson</organization>
      <address>
        <email>gianmarco.bruno@ericsson.com</email>
      </address>
    </contact>
    <contact initials="F." surname="Lazzeri" fullname="Francesco Lazzeri">
      <organization>Ericsson</organization>
      <address>
        <email>francesco.lazzeri@ericsson.com</email>
      </address>
    </contact>
    <contact initials="Y." surname="Lee" fullname="Young Lee">
      <organization>Samsung Electronics</organization>
      <address>
        <email>younglee.tx@gmail.com</email>
      </address>
    </contact>
    <contact initials="C." surname="Perocchio" fullname="Carlo Perocchio">
      <organization>Ericsson</organization>
      <address>
        <email>carlo.perocchio@ericsson.com</email>
      </address>
    </contact>
    <contact initials="O." surname="Dugeon" fullname="Olivier Dugeon">
      <organization>Orange Labs</organization>
      <address>
        <email>olivier.dugeon@orange.com</email>
      </address>
    </contact>
    <contact initials="J." surname="Meuric" fullname="Julien Meuric">
      <organization>Orange Labs</organization>
      <address>
        <email>julien.meuric@orange.com</email>
      </address>
    </contact>
    </section>

  </back>

<!-- ##markdown-source:
H4sIAMXVemEAA+y9a3sbx5Ew+h2/Ypb5EDIGQOvmJHQSWyJpR2dtSUdU7M1Z
7dlnCAzJWYEY7MxANB3q/PZTt+6u7umeGdBK1tnX2IspoC/V1dV16+qq2Ww2
WVTLcn15lG3bi9nvJpO2bFfFUfbXpy++zk7yNs++rZbFKruo6qwu/ntbNC20
zl7l7VV2XF1vtm3eltV6MsnPz+viPXTM4Wds3WmyrBbr/BrGXtb5RTsrC5iw
LfJmdgtdZhtoPlu45rMHv53cVPW7y7rabo6yN6dPz7Lv4d84+9f43WSRt8Vl
Vd8eZU27nJSb+ihr623TPvz0099/+nAyadp8vfzPfFWtYc7boplsyqPs39tq
Mc2aqm7r4qKBv26v+Q+Y+rpYt81/wFK27VVVH02ybAb/l2UM9fMWhsqebZuS
vqwrRFOxLNuqpi+qGpD4521+U5TZm2Jxta5W1WUJ0+KPxXVero6yEseYn8MY
X15RyzlMG8xzVtSXJUxUrKq27ZvrRfWuzPXoDfWcn3PPL9f4e2SCl80ir7Ov
q/WP+ar4MVsW2UlZMZjluoHf5/EfadI3xaq4qNblwpu5wiHnl9JrCZBWzZet
bRoB4ul6W+eX2dlVXl/nbvivq+pyVeih83VzlX95Sd9HxgFyg0FKN8LxVbnO
s7/AtNTWIeeqBDp7/PsvF9hgS7/PF+tguJN8XQLY2XGxgBUVq5Ua+bQuF01T
rfWoS24/X9j2XxbSjICF07Vu6/J823YJ6rtyAd9m31Sb4seeXX1PzeYrbJbc
09eA5XoJQ67yVavwefzmzbEerKZ28/fc7stF2y7mRKJ6sH/N6/aqfAeU2F7B
Ll3nawXeqTfeO246b2zTL9fFIr+OgPhtubjKgZOcwX/qi54FX3PDeUMNv7zE
byPjnQADKWo8J6ui71QsqR2eCmiXRODXZb6+zusFHLx6u676d/3SNJ6fY2N/
y/1xv6rz9aJoYNxv8h9/hIb9I1+Y5vMVN+8b+6/VFpjhN0XhxjzLrxv88nRV
LNoaD5/Hf26xx6oo5u0PSbwe5zXwuVdFXS3gqAxgYoGN5xvTuA/al6vyfQkb
drK9LCpFUS9hyZcFoOfcA7Xi5vMlNf+yolaRYf+v7aos1tm3xRamHhz1v6j1
/Jpa60Ens9ksg8ZtnS/aCXZ5c1XURQaHOmsWxTqvgaVNs/Z2AydotboFVpnl
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
adtqmQk6c2W/2OjSRVikAW1MFwWQzKK++UnPg6I1vzjrc0fMUIq8sAKppkVN
JESYXjEJ+4Zh8EjIswyjfSb1G9Bvtbyxcn27puy15mnoSl05WenQx8hwIIoJ
D4OSteqSyoYIkiwElmtYbRYzvIWkAlbZG7yPXJb5ZZ1f017YGujU5oOExmGJ
dL4Ea1UHc/sUTm8eYeO5xiqOyy3WkWTWpDPuEVBz5FTBU36YHr912aZ4jKPk
IAj6x8hNGBpNkcSEd/d8TnY3EOlmpWEnzO1Oi8pojJu2BFMBbrqNmSiMbgva
dKYMl9cNbeuZJRbXFjTPvAkHgtrCRUcDMdRHxWR08BXcUgaWdeKKst/J6O4n
k67Fjd1FBbJLEJLs17kb+qKvX/KSMw5/5GZltwWMWUFg50rvUKtKdgebBksJ
Bv3v1b1ZXBXXUZWzB/jEJVG0RzbkRk71Mlvne516Wo90OY2cL/A39fTKunxz
xLwDl9/9h6vjY0xu1u543wHpPxHj90P3fXHdd7sftM8GfbrdDlkfS+BPkjHo
7jHGwJ+BA+oGibOHnzCIYxI7DjLoto72zMb6rFO9szFUrD/3I+TUfP20HFnp
OHIOY9TtoDsGqHv9dtYaskRIr/31LuBt4SlTTdJSWS86GskbNMsiGxiJl00C
mWIJHhzpAN6PBM0wi8r0+H1xu0HzPoj6tjrauy9it4OEqLKmPiFTzO73MsLr
vOuzCL8zPRpIp51IOTC8QdSTg+hIowZp6oUxirUHxn7OYQYOVQ4mBy5yn37n
pc1dmK8iYOukGT7zSftq7jo01O+oCdsPeWnC9v0uGumBDdXzdC//y11PCxBb
+st3xW0gxcJu0AJ/j5leBGyXOpOiFdt3t5KOz4PPuk2ZiqPWnsZlsY6Qn9pY
AbBYb68lUnoQSTNKV78slv3YysZjK9sRW9l4bGUJbGUdnCexlXW2M44tmUrI
V3MZ30uieKAgUh1hdAsdXRU/zHwkYetuflG3S53konoelVmUOHo6oWi44JHZ
RCOiNJ5PbdTWukGC1KKRT0S4uO7GLylJoGJZsoNe0lEnjQq6wfJVpYlud9nZ
TrmJEOiQHMIBdELuaCOztYnM3Kk+ssJ4iu6eTgJWT67u4c59SbvHrdFPXj12
jV4O62Ewe5JZ77bG8at0/cckqu7FVTLV9wC2Ujm//8746s0C/k+A7iBB+ACS
u5nCh0EcShm+I5J2OngqifjAyvxs4sMweWnF+5tnhiOG+cUHu93JMrxE42N6
yZRexvGR/cxnIPX4qCU76hzXx3wSqcp7txpz8fUjKDNGy6prQ951oDBNjes+
LvAiYlpybfWJ6Swipv1uvWLaAXhPMe0G6BHTGhNjxbT93O0gpnWnbFcxHem8
g5hOrLFX8CTX2Cd2ImCOFzsDaxy/Stf/HnLDx9VYMR1ia6SY/tj42kVM/xzR
3S+mQyQPiukIiDuK6SEk7XTw0mI685v2i+ms275PTHc/o8R093M3QkxHe2XD
YjrVz3x2E9PxJfeL6fRnhJimPSiL87rI3xV1VxhmYRPMgWj/kTDRs0i/ZNLe
OzVPuoRHd6kRV0O3c+h2ELAS9Tq6pD+2WIfCJrqzlyZuxtRB67gYupczvCjr
1o0O07j1yOFx2QPdSAOnpOcoZD69Mwl1prDM3t01JlwoCRRRMDzmjUGP0m3K
/eK5Xph/rZaDvbrdmvISC08mffm9oNIG6Gp1oWOs06DXfxXxXPV6INOF7PT0
8RT/d/2N/Bzq/qyprOleq3Ti/si0OlV/HLBYcv44VD1bpsRlMgF/SO2RlPsa
vDDJ/l3q51GgD2PUT53fnSqJx1R6/HtsbSwF/p2RRZEqkp1PsqzkXdQkE1Ns
lq9u8ttwcVFnKbeMWWF397G8LNcMrS3FMnstLE+g9llVoWQdtKTCDsPWUwzm
mA0Qhzmi9YcgDGr6fTD3Q+36jFfJ1XoHrB5vxf2Wzk9e8wiL5n8MTVFrxUNO
ykIJpx9nlfQudJCIO9aHx75jFodtkCWtDN0k69eZgqZ3aRWq2zJLWhDRtuYz
ymqILGFsUcEEdzU+LuGyCSdXhIGTWLHioP9SdVeXWNINlo10fdk9G3J3eVs2
xsXldRjl1urAnHDORGCOu2M8EMa4YJIw90N9H46j1jvsjnIrHnRB/bQ1j3M1
/c+gKeVGcsjpcR150492F6UXOkjEMbeQgzThCvLmi7t/Mn+iPmM268zbY9tG
AIi7drptzWesOydcwm6MWeE4cm3iRu1elXR+7l6PWIMBjDZ58K4j/tzWYQAv
4CYMB8kSbRLSQpqrhoSCZIhLFhcTMcngQdK0ed2maHGAzsYS2UgK65JXdg/K
+QlkIyiREkq/IMTRSBHlRmOXO5K9BAtNU26dry+L2XnZXucbbNkTnMXezm37
y5H9X02hvxzZACH/xEd2VH1Dd4KH/cI86K6VDf2OO5Q17CyDHoxbxiMIaUtg
Ct5YfoysaYYpdnK+QeFoVIUwajCm2tad17a/1Ja0HV9nSzqML7JlOiTj/XuC
9OlkJGP8Bzqm4/r9yHyaJBnL322bjt+P0MUv8e+/xL/bpv8b4t/TTyeTvDj1
THJEB/9JZKLD4LsYgXvEixhsOe4tDE089hXMz/IOeud75x3umne4X06AYbKr
WNabGXEQTUzlnZD+rFS2qbS+T0qqcIzh3E1hj+FkVP1LSmWiChXT/jRUYesd
1pHttg69p35aJV+f3TmnUrz7yIRKvta6czYlr3s/G8p00xHMyGs/giV57YcZ
E23d7XpxVVdriQzSSU7p5/fFwvzbsuZV/kN+vvIOcLxAePQKPHnjracwGW/E
EfubLKyXboDTMT/BKKMCTjJNm6OqpkvbdMBJpqYPYyIC6FIxEf5MyZgIr1kk
JqILiYuJiELSjYmIQ9ILSCwmIjNqRjei3AEivzZBpt3MCEl3s5X5xy55s6Xb
GU4fvdkKGpqVpG+24h36brbSMPv3PH0we7c8cRB6bnmGYe6HWgngEVc2nfUm
b7YiK07dbH2kNffebP0Poym42Yogp3uzFZ9+6GZrxEIHiVjdbOnfMu2ZikHp
2njeum6TLKUiR5vexTTmVMvMV6CH2prPgG8vuYSx7j1p3n1krLARPjLWv6pH
xlZnGXhtHOBv7GvjCDKHRWjYI3ha7KwGf02peOfup2/VycDncLMSgc+jWia0
4DFZA6ttG0sbCObwdtXaxIF1ZXMtU9pA/tPmDew06ksd2FGr6soWYeMsIjOX
C9oX2GFL1RDAejdTNyZ6x6Gb/BbC8btY22DkGBsyrXopNeCi0Cf+Mj6p2+iu
+WKxvd6uctp3G9/rK4ExCOMByNEpRsQiZzEGXlcj9LSgQzpCuX8dtx2FsmcR
sbjlwRWM3BXbMR3N3O1hO0UCmxPrjuvzsUUPqvbJFe+0aR2FPw31mK0aNANS
UI8FOmEcxKD2Ip4H4NZt/bvaFCBjo+tS/VPmyH3skmBFY02UELW7WCtB37GG
y30smNTqBhT7AMKddPye1Y1cn+6+qxp/P7MnQNN4C+gjImpHu+jnhOZ+sylA
7hgLKoBud2OqDzvjz1jCwAosLdz3pK3VNbqgedLsihovxPD6LLB7mGI9NhlM
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
lkcCAA==

-->

</rfc>

