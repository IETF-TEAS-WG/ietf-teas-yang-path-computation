<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.6.5 (Ruby 2.7.2) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc comments="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-teas-yang-path-computation-17" category="std" consensus="true" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="Yang for Path Computation">A YANG Data Model for requesting path computation</title>

    <author initials="I." surname="Busi" fullname="Italo Busi" role="editor">
      <organization>Huawei Technologies</organization>
      <address>
        <email>italo.busi@huawei.com</email>
      </address>
    </author>
    <author initials="S." surname="Belotti" fullname="Sergio Belotti" role="editor">
      <organization>Nokia</organization>
      <address>
        <email>sergio.belotti@nokia.com</email>
      </address>
    </author>
    <author initials="O." surname="Gonzalez de Dios" fullname="Oscar Gonzalez de Dios">
      <organization>Telefonica</organization>
      <address>
        <email>oscar.gonzalezdedios@telefonica.com</email>
      </address>
    </author>
    <author initials="A." surname="Sharma" fullname="Anurag Sharma">
      <organization>Google</organization>
      <address>
        <email>ansha@google.com</email>
      </address>
    </author>
    <author initials="Y." surname="Shi" fullname="Yan Shi">
      <organization>China Unicom</organization>
      <address>
        <email>shiyan49@chinaunicom.cn</email>
      </address>
    </author>
    <author initials="D." surname="Ceccarelli" fullname="Daniele Ceccarelli">
      <organization>Ericsson</organization>
      <address>
        <email>daniele.ceccarelli@ericsson.com</email>
      </address>
    </author>

    <date year="2022" month="March" day="11"/>

    
    <workgroup>TEAS Working Group</workgroup>
    

    <abstract>


<t>There are scenarios, typically in a hierarchical Software-Defined
   Networking (SDN) context, where the topology information provided by
   a Traffic Engineering (TE) network provider may be insufficient for
   its client to perform multi-domain path computation. In these cases the
   client would need to request the TE network provider to compute some
   intra-domain paths.</t>

<t>This document defines a YANG data model which contains Remote Procedure Calls
   (RPCs) to request path computation. This model complements the
   solution, defined in RFC YYYY, to configure a TE tunnel path in
   "compute-only" mode.</t>

<t>[RFC EDITOR NOTE: Please replace RFC YYYY with the RFC number of
   draft-ietf-teas-yang-te once it has been published.</t>

<t>Moreover, this document describes some use cases where the path
   computation request, via YANG-based protocols (e.g., NETCONF or
   RESTCONF), can be needed.</t>



    </abstract>



  </front>

  <middle>


<section anchor="intro"><name>Introduction</name>

<t anchor="pc-model">There are scenarios, typically in a hierarchical Software-Defined
   Networking (SDN) context, where the topology information provided by
   a Traffic Engineering (TE) network provider may be insufficient for
   its client to perform multi-domain path computation. In these cases the
   client would need to request the TE network provider to compute some
   intra-domain paths that could be used together with its topology information
   to compute the multi-domain path.</t>

<t>These types of scenarios can be applied to different interfaces in
   different reference architectures:</t>

<t><list style="symbols">
  <t>Application-Based Network Operations (ABNO) control interface
<xref target="RFC7491"/>, in which an Application Service Coordinator can request the
ABNO controller to take in charge path calculation (see Figure 1
in <xref target="RFC7491"/>).</t>
  <t>Abstraction and Control of TE Networks (ACTN) <xref target="RFC8453"/>, where a
controller hierarchy is defined.
In the ACTN context, path computation is needed on the interface
between Customer Network Controller (CNC)  and Multi-Domain
Service Coordinator (MDSC), called CNC-MDSC Interface (CMI),
and on the interface between MSDC and Provisioning Network
Controller (PNC), called MDSC-PNC Interface  (MPI). 
<xref target="RFC8454"/> describes an information model for the Path
Computation request.  <vspace blankLines='1'/>
Multiple protocol solutions can be used for communication between
different controller hierarchical levels. This document assumes that
the controllers are communicating using YANG-based protocols (e.g.,
NETCONF <xref target="RFC6241"/> or RESTCONF <xref target="RFC8040"/>).  <vspace blankLines='1'/>
Path Computation Elements (PCEs), controllers and orchestrators
perform their operations based on Traffic Engineering Databases
(TED). Such TEDs can be described, in a technology agnostic way, with
the YANG data model for TE Topologies <xref target="RFC8795"/>. Furthermore, the
technology specific details of the TED are modelled in the technology
specific topology models, e.g., the <xref target="I-D.ietf-ccamp-otn-topo-yang"/> for Optical Transport
Network (OTN) Optical Data Unit (ODU) technologies, which augment the
common TE topology model in <xref target="RFC8795"/>.  <vspace blankLines='1'/>
The availability of such topology models allows the provisioning of
the TED using YANG-based protocols (e.g., NETCONF or RESTCONF).
Furthermore, it enables a PCE/controller performing the necessary
abstractions or modifications and offering this customized topology
to another PCE/controller or high level orchestrator.  <vspace blankLines='1'/>
The tunnels that can be provided over the networks described with the
topology models can be also set-up, deleted and modified via YANG-
based protocols (e.g., NETCONF or RESTCONF) using the TE tunnel YANG
data model <xref target="I-D.ietf-teas-yang-te"/>.  <vspace blankLines='1'/>
This document defines a YANG data model <xref target="RFC7950"/> for an RPC to
request path computation, which complements the solution defined in
<xref target="I-D.ietf-teas-yang-te"/>, to configure a TE tunnel path in "compute-only" mode.  <vspace blankLines='1'/>
The YANG data model definition does not make any assumption about
whether that the client or the server implement a "PCE"
functionality, as defined in <xref target="RFC4655"/>, and the Path Computation
Element Communication Protocol (PCEP) protocol, as defined in
<xref target="RFC5440"/>.  <vspace blankLines='1'/>
Moreover, this document describes some use cases where a path
computation request, via YANG-based protocols (e.g., NETCONF or
RESTCONF), can be needed.  <vspace blankLines='1'/>
The YANG data model defined in this document conforms to the Network
Management Datastore Architecture <xref target="RFC8342"/>.</t>
</list></t>

<section anchor="terminology"><name>Terminology</name>

<t>TED:</t>

<ul empty="true"><li>
  <t>The traffic engineering database is a collection of all TE
   information about all TE nodes and TE links in a given network.</t>
</li></ul>

<t>PCE:</t>

<ul empty="true"><li>
  <t>A Path Computation Element (PCE) is an entity that is capable of
   computing a network path or route based on a network graph, and of
   applying computational constraints during the computation.  The PCE
   entity is an application that can be located within a network node or
   component, on an out-of-network server, etc.  For example, a PCE
   would be able to compute the path of a TE Label Switched Path (LSP)
   by operating on the TED and considering bandwidth and other
   constraints applicable to the TE LSP service request. <xref target="RFC4655"/>.</t>
</li></ul>

<t>Domain:</t>

<ul empty="true"><li>
  <t>TE information is the data relating to nodes and TE links
   that is used in the process of selecting a TE path.  TE information
   is usually only available within a network.  We call such a zone of
   visibility of TE information a domain.  An example of a domain may be
   an IGP area or an Autonomous System. <xref target="RFC7926"/></t>
</li></ul>

<t>The terminology for describing YANG data models is found in
   <xref target="RFC7950"/>.</t>

</section>
<section anchor="tree-diagram"><name>Tree Diagram</name>

<t>Tree diagrams used in this document follow the notation defined in
   <xref target="RFC8340"/>.</t>

</section>
<section anchor="prefixes-in-data-node-names"><name>Prefixes in Data Node Names</name>

<t>In this document, names of data nodes and other data model objects
   are prefixed using the standard prefix associated with the
   corresponding YANG imported modules, as shown in <xref target="tab-prefix"/>.</t>

<texttable title="Prefixes and corresponding YANG modules" anchor="tab-prefix">
      <ttcol align='left'>Prefix</ttcol>
      <ttcol align='left'>YANG module</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>inet</c>
      <c>ietf-inet-types</c>
      <c><xref target="RFC6991"/></c>
      <c>te-types</c>
      <c>ietf-te-types</c>
      <c><xref target="RFC8776"/></c>
      <c>te</c>
      <c>ietf-te</c>
      <c>[RFCYYYY]</c>
      <c>te-pc</c>
      <c>ietf-te-path-computation</c>
      <c>RFCXXXX</c>
</texttable>

<t>RFC Editor Note:
Please replace XXXX with the RFC number assigned to this document.
Please replace RFC YYYY with the RFC number of <xref target="I-D.ietf-teas-yang-te"/> once it has been published.
Please remove this note.</t>

</section>
</section>
<section anchor="use-cases"><name>Use Cases</name>

<t>This section presents some use cases, where a client needs to request
   underlying SDN controllers for path computation.</t>

<t>The use of the YANG data model defined in this document is not
   restricted to these use cases but can be used in any other use case
   when deemed useful.</t>

<t>The presented uses cases have been grouped, depending on the
   different underlying topologies: a) Packet/Optical Integration; b)
   multi-domain Traffic Engineered (TE) Networks; and c) Data Center
   Interconnections. Use cases d) and e) respectively present how to
   apply this YANG data model for standard multi-domain PCE i.e.
   Backward Recursive Path Computation <xref target="RFC5441"/> and Hierarchical PCE
   <xref target="RFC6805"/>.</t>

<section anchor="poi-uc"><name>Packet/Optical Integration</name>

<t>In this use case, an optical domain is used to provide connectivity
   to some nodes of a packet domain (see <xref target="fig-poi-uc"/>).</t>

<figure title="Packet/Optical Integration use case" anchor="fig-poi-uc"><artwork><![CDATA[
                                +----------------+
                                |                |
                                | Packet/Optical |
                                |  Coordinator   |
                                |                |
                                +---+------+-----+
                                    |      |
                       +------------+      |
                       |                   +-----------+
                +------V-----+                         |
                |            |                  +------V-----+
                | Packet     |                  |            |
                | Domain     |                  | Optical    |
                | Controller |                  | Domain     |
                |            |                  | Controller |
                +------+-----+                  +-------+----+
                       |                                |
              .........V.........................       |
              :          packet domain          :       |
          +----+                               +----+   |
          | R1 |= = = = = = = = = = = = = = = =| R2 |   |
          +-+--+                               +--+-+   |
            | :                                 : |     |
            | :................................ : |     |
            |                                     |     |
            |               +-----+               |     |
            |    ...........| Opt |...........    |     |
            |    :          |  C  |          :    |     |
            |    :         /+--+--+\         :    |     |
            |    :        /    |    \        :    |     |
            |    :       /     |     \       :    |     |
            |   +-----+ /   +--+--+   \ +-----+   |     |
            |   | Opt |/    | Opt |    \| Opt |   |     |
            +---|  A  |     |  D  |     |  B  |---+     |
                +-----+\    +--+--+    /+-----+         |
                 :      \      |      /      :          |
                 :       \     |     /       :          |
                 :        \ +--+--+  / optical<---------+
                 :         \| Opt |/  domain :
                 :..........|  E  |..........:
                            +-----+
]]></artwork></figure>

<t><xref target="fig-poi-uc"/> as well as <xref target="fig-poi-abstraction"/> below only show a partial view of the
   packet network connectivity, before additional packet connectivity is
   provided by the optical network.</t>

<t>It is assumed that the Optical Domain Controller provides to the
   Packet/Optical Coordinator an abstracted view of the optical network.
   A possible abstraction could be to represent the whole optical
   network as one "virtual node" with "virtual ports" connected to the
   access links, as shown in <xref target="fig-poi-abstraction"/>.</t>

<t>It is also assumed that Packet Domain Controller can provide the
   Packet/Optical Coordinator the information it needs to set up
   connectivity between packet nodes through the optical network (e.g.,
   the access links).</t>

<t>The path computation request helps the Packet/Optical Coordinator to
   know the real connections that can be provided by the optical
   network.</t>

<figure title="Packet and Optical Topology Abstractions" anchor="fig-poi-abstraction"><artwork><![CDATA[
                       ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,.
                      ,  Packet/Optical Coordinator view          ,
                     ,                              +----+       , .
                    ,                               |    |      ,
                   ,                                | R2 |     ,   .
                  ,  +----+  +------------ +       /+----+    ,
                 ,   |    |  |             |/-----/ / /      ,     .
                ,    | R1 |--O VP1     VP4 O       / /      ,
               ,     |    |\ |             | /----/ /      ,       .
              ,      +----+ \|             |/      /      ,
             ,        /      O VP2     VP5 O      /      ,         .
            ,        /       |             |  +----+    ,
           ,        /        |             |  |    |   ,           .
          ,        /         O VP3     VP6 O--| R4 |  ,
         ,     +----+ /-----/|_____________|  +----+ ,             .
        ,      |    |/       +------------ +        ,
       ,       | R3 |                              ,               .
      ,        +----+                             ,,,,,,,,,,,,,,,,,
     ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,                ,.
     . Packet Domain Controller view                +----+       ,
       only packet nodes and packet links           |    |      ,  .
     . with access links to the optical network     | R2 |     ,
                  ,  +----+                        /+----+    ,    .
     .           ,   |    |                 /-----/ / /      ,
                ,    | R1 |---                     / /      ,      .
     .         ,     +----+\                 /----/ /      ,
              ,        /    \               /      /      ,        .
     .       ,        /                           /      ,
            ,        /                        +----+    ,          .
     .     ,        /                         |    |   ,
          ,        /                       ---| R4 |  ,            .
     .   ,     +----+ /-----/                 +----+ ,
        ,      |    |/                              ,              .
     . ,       | R3 |                              ,
      ,        +----+                             ,,,,,,,,,,,,,,,,,.
     .,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,                ,
       Optical Domain Controller view                            , .
     . only optical nodes,        +--+                          ,
       optical links and         /|OF|                         ,   .
     . access links from the  +--++--+             /          ,
       packet network         |OA|    \     /-----/ /        ,     .
     .          ,          ---+--+--\  +--+/       /        ,
               ,           \   |  \  \-|OE|-------/        ,       .
     .        ,             \  |   \ /-+--+               ,
             ,               \+--+  X    |               ,         .
     .      ,                 |OB|-/ \   |              ,
           ,                  +--+-\  \+--+            ,           .
     .    ,                  /   \  \--|OD|---        ,
         ,            /-----/     +--+ +--+          ,             .
     .  ,            /            |OC|/             ,
       ,                          +--+             ,               .
     .,                                           ,,,,,,,,,,,,,,,,,,
      ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,                ,
     . Actual Physical View                         +----+       ,
                    ,             +--+              |    |      ,
     .             ,             /|OF|              | R2 |     ,
                  ,  +----+   +--++--+             /+----+    ,
     .           ,   |    |   |OA|    \     /-----/ / /      ,
                ,    | R1 |---+--+--\  +--+/       / /      ,
     .         ,     +----+\   |  \  \-|OE|-------/ /      ,
              ,        /    \  |   \ /-+--+        /      ,
     .       ,        /      \+--+  X    |        /      ,
            ,        /        |OB|-/ \   |    +----+    ,
     .     ,        /         +--+-\  \+--+   |    |   ,
          ,        /         /   \  \--|OD|---| R4 |  ,
     .   ,     +----+ /-----/     +--+ +--+   +----+ ,
        ,      |    |/            |OC|/             ,
     . ,       | R3 |             +--+             ,
      ,        +----+                             ,
     .,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
]]></artwork></figure>

<t>In this use case, the Packet/Optical Coordinator needs to set up an
   optimal underlying path for an IP link between R1 and R2.</t>

<t>As depicted in <xref target="fig-poi-abstraction"/>, the Packet/Optical Coordinator has only an
   "abstracted view" of the physical network, and it does not know the
   feasibility or the cost of the possible optical paths (e.g., VP1-VP4
   and VP2-VP5), which depend on the current status of the physical
   resources within the optical network and on vendor-specific optical
   attributes.</t>

<t>The Packet/Optical Coordinator can request the underlying Optical
   Domain Controller to compute a set of potential optimal paths, taking
   into account optical constraints. Then, based on its own constraints,
   policy and knowledge (e.g. cost of the access links), it can choose
   which one of these potential paths to use to set up the optimal end-
   to-end path crossing optical network.</t>

<figure title="Packet/Optical Integration path computation example" anchor="fig-poi-example"><artwork><![CDATA[
                    ............................
                    :                          :
                    O VP1                  VP4 O
           cost=10 /:\                        /:\ cost=10
                  / : \----------------------/ : \
          +----+ /  :         cost=50          :  \ +----+
          |    |/   :                          :   \|    |
          | R1 |    :                          :    | R2 |
          |    |\   :                          :   /|    |
          +----+ \  :  /--------------------\  :  / +----+
                  \ : /       cost=55        \ : /
            cost=5 \:/                        \:/ cost=5
                    O VP2                  VP5 O
                    :                          :
                    :..........................:
]]></artwork></figure>

<t>For example, in <xref target="fig-poi-example"/>, the Packet/Optical Coordinator can request
   the Optical Domain Controller to compute the paths between VP1-VP4
   and VP2-VP5 and then decide to set up the optimal end-to-end path
   using the VP2-VP5 optical path even if this is not the optimal path
   from the optical domain perspective.</t>

<t>Considering the dynamicity of the connectivity constraints of an
   optical domain, it is possible that a path computed by the Optical
   Domain Controller when requested by the Packet/Optical Coordinator is
   no longer valid/available when the Packet/Optical Coordinator
   requests it to be set up. This is further discussed in <xref target="rpc-motivation"/>.</t>

</section>
<section anchor="md-uc"><name>Multi-domain TE networks</name>

<t>In this use case there are two TE domains which are interconnected
   together by multiple inter-domains links.</t>

<t>A possible example could be a multi-domain optical network.</t>

<figure title="Multi-domain multi-link interconnection" anchor="md-ml-connection"><artwork><![CDATA[
                            +--------------+
                            | Multi-Domain |
                            | Controller   |
                            +---+------+---+
                                |      |
                   +------------+      |
                   |                   +-----------+
            +------V-----+                         |
            |            |                         |
            | TE Domain  |                  +------V-----+
            | Controller |                  |            |
            |      1     |                  | TE Domain  |
            +------+-----+                  | Controller |
                   |                        |      2     |
                   |                        +------+-----+
          .........V..........                     |
          :                  :                     |
         +-----+             :                     |
         |     |             :            .........V..........
         |  X  |             :            :                  :
         |     |          +-----+      +-----+                :
         +-----+          |     |      |     |               :
          :               |  C  |------|  E  |               :
      +-----+    +-----+ /|     |      |     |\ +-----+    +-----+
      |     |    |     |/ +-----+      +-----+ \|     |    |     |
      |  A  |----|  B  |     :            :     |  G  |----|  H  |
      |     |    |     |\    :            :    /|     |    |     |
      +-----+    +-----+ \+-----+      +-----+/ +-----+    +-----+
          :               |     |      |     |               :
          :               |  D  |------|  F  |               :
          :               |     |      |     |          +-----+
          :               +-----+      +-----+          |     |
          :                  :            :             |  Y  |
          :                  :            :             |     |
          :   TE domain 1    :            : TE domain 2 +-----+
          :..................:            :.................:
]]></artwork></figure>

<t>In order to set up an end-to-end multi-domain TE path (e.g., between
   nodes A and H), the Multi-Domain Controller needs to know the
   feasibility or the cost of the possible TE paths within the two TE
   domains, which depend on the current status of the physical resources
   within each TE domain. This is more challenging in case of optical
   networks because the optimal paths depend also on vendor-specific
   optical attributes (which may be different in the two domains if they
   are provided by different vendors).</t>

<t>In order to set up a multi-domain TE path (e.g., between nodes A and
   H), the Multi-Domain Controller can request the TE Domain Controllers
   to compute a set of intra-domain optimal paths and take decisions
   based on the information received. For example:</t>

<t><list style="symbols">
  <t>The Multi-Domain Controller asks TE Domain Controllers to provide
set of paths between A-C, A-D, E-H and F-H</t>
  <t>TE Domain Controllers return a set of feasible paths with the
associated costs: the path A-C is not part of this set (in optical
networks, it is typical to have some paths not being feasible due
to optical constraints that are known only by the Optical Domain
Controller)</t>
  <t>The Multi-Domain Controller will select the path A-D-F-H since it
is the only feasible multi-domain path and then request the TE
Domain Controllers to set up the A-D and F-H intra-domain paths</t>
  <t>If there are multiple feasible paths, the Multi-Domain Controller
can select the optimal path knowing the cost of the intra-domain
paths (provided by the TE domain controllers) and the cost of the
inter-domain links (known by the Multi-Domain Controller)  <vspace blankLines='1'/>
This approach may have some scalability issues when the number of TE
domains is quite big (e.g. 20).  <vspace blankLines='1'/>
In this case, it would be worthwhile using the abstract TE topology
information provided by the TE Domain Controllers to limit the number
of potential optimal end-to-end paths and then request path
computation from fewer TE Domain Controllers in order to decide what
the optimal path within this limited set is.  <vspace blankLines='1'/>
For more details, see <xref target="topo-pc-complement"/>.</t>
</list></t>

</section>
<section anchor="data-center-interconnections"><name>Data Center Interconnections</name>

<t>In these use case, there is a TE domain which is used to provide
   connectivity between Data Centers which are connected with the TE
   domain using access links.</t>

<figure title="Data Center Interconnection use case" anchor="fig-dci-uc"><artwork><![CDATA[
                        +--------------+
                        | Cloud Network|
                        | Orchestrator |
                        +--------------+
                          |  |  |  |
            +-------------+  |  |  +------------------------+
            |                |  +------------------+        |
            |       +--------V---+                 |        |
            |       |            |                 |        |
            |       | TE Network |                 |        |
     +------V-----+ | Controller |          +------V-----+  |
     | DC         | +------------+          | DC         |  |
     | Controller |     |                   | Controller |  |
     +------------+     |   +-----+         +------------+  |
          |         ....V...|     |........         |       |
          |         :       |  P  |       :         |       |
     .....V.....    :      /+-----+\      :    .....V.....  |
     :         :  +-----+ /    |    \ +-----+  :         :  |
     :  DC1 || :  |     |/     |     \|     |  :  DC2 || :  |
     :    ||||----| PE1 |      |      | PE2 |----   |||| :  |
     : _|||||| :  |     |\     |     /|     |  : _|||||| :  |
     :         :  +-----+ \ +-----+ / +-----+  :         :  |
     :.........:    :      \|     |/      :    :.........:  |
                    :.......| PE3 |.......:                 |
                            |     |                         |
                            +-----+               +---------V--+
                          .....|.....             | DC         |
                          :         :             | Controller |
                          :  DC3 || :             +------------+
                          :    |||| :                  |
                          : _|||||| <------------------+
                          :         :
                          :.........:
]]></artwork></figure>

<t>In this use case, there is the need to transfer data from Data Center
   1 (DC1) to either DC2 or DC3 (e.g. workload migration).</t>

<t>The optimal decision depends both on the cost of the TE path (DC1-DC2
   or DC1-DC3) and of the Data Center resources within DC2 or DC3.</t>

<t>The Cloud Network Orchestrator needs to make a decision for optimal
   connection based on TE network constraints and Data Center resources.</t>

<t>It may not be able to make this decision because it has only an
   abstract view of the TE network (as in <xref target="poi-uc"/>).</t>

<t>The Cloud Network Orchestrator can request to the TE Network
   Controller to compute the cost of the possible TE paths (e.g., DC1-
   DC2 and DC1-DC3) and to the DC Controller to provide the information
   it needs about the required Data Center resources within DC2 and DC3
   and then it can take the decision about the optimal solution based on
   this information and its policy.</t>

</section>
<section anchor="backward-recursive-path-computation-scenario"><name>Backward Recursive Path Computation scenario</name>

<t><xref target="RFC5441"/> has defined the Virtual Source Path Tree (VSPT) TLV within
   PCE Reply Object in order to compute inter-domain paths following a
   "Backward Recursive Path Computation" (BRPC) method. The main
   principle is to forward the PCE request message up to the destination
   domain. Then, each PCE involved in the computation will compute its
   part of the path and send it back to the requester through PCE
   Response message. The resulting computation is spread from
   destination PCE to source PCE. Each PCE is in charge of merging the
   path it received with the one it calculated. At the end, the source
   PCE merges its local part of the path with the received one to
   achieve the end-to-end path.</t>

<t><xref target="fig-brpc-example"/> below show a typical BRPC scenario where 3 PCEs cooperate to
   compute inter-domain paths.</t>

<figure title="BRPC Scenario" anchor="fig-brpc-example"><artwork><![CDATA[
                   +----------------+          +----------------+
                   |  Domain (B)    |          |  Domain (C)    |
                   |                |          |                |
                   |        /-------|---PCEP---|--------\       |
                   |       /        |          |         \      |
                   |   (PCE)        |          |   -    (PCE)   |
                   |    /           <---------->  |D|           |
                   |   /            |  Inter   |   -            |
                   +---|----^-------+  Domain  +----------------+
                       |    |          Link
                     PCEP   |
                       |    | Inter-domain Link
                       |    |
                   +---|----v-------+
                   |   |            |
                   |   | Domain (A) |
                   |   \            |
                   |  (PCE)    -    |
                   |          |S|   |
                   |           -    |
                   +----------------+
]]></artwork></figure>

<t>In this use case, a client can use the YANG data model defined in
   this document to request path computation from the PCE that controls
   the source of the tunnel. For example, a client can request to the
   PCE of domain A to compute a path from a source S, within domain A,
   to a destination D, within domain C. Then PCE of domain A will use
   PCEP protocol, as per <xref target="RFC5441"/>, to compute the path from S to D and
   in turn gives the final answer to the requester.</t>

</section>
<section anchor="hierarchical-pce-scenario"><name>Hierarchical PCE scenario</name>

<t><xref target="RFC6805"/> has defined an architecture and extensions to the PCE
   standard to compute inter-domain path following a hierarchical
   method. Two new roles have been defined: parent PCE and child PCE.
   The parent PCE is in charge to coordinate the end-to-end path
   computation. For that purpose it sends to each child PCE involved in
   the multi-domain path computation a PCE Request message to obtain the
   local part of the path. Once received all answer through PCE Response
   message, the parent PCE will merge the different local parts of the
   path to achieve the end-to-end path.</t>

<t><xref target="fig-hpce-example"/> below shows a typical hierarchical scenario where a parent
   PCE request end-to-end path to the different child PCE. Note that a
   PCE could take independently the role of child or parent PCE
   depending of which PCE will request the path.</t>

<figure title="Hierarchical domain topology from RFC6805" anchor="fig-hpce-example"><artwork><![CDATA[
    -----------------------------------------------------------------
    |   Domain 5                                                      |
    |                              -----                              |
    |                             |PCE 5|                             |
    |                              -----                              |
    |                                                                 |
    |    ----------------     ----------------     ----------------   |
    |   | Domain 1       |   | Domain 2       |   | Domain 3       |  |
    |   |                |   |                |   |                |  |
    |   |        -----   |   |        -----   |   |        -----   |  |
    |   |       |PCE 1|  |   |       |PCE 2|  |   |       |PCE 3|  |  |
    |   |        -----   |   |        -----   |   |        -----   |  |
    |   |                |   |                |   |                |  |
    |   |            ----|   |----        ----|   |----            |  |
    |   |           |BN11+---+BN21|      |BN23+---+BN31|           |  |
    |   |   -        ----|   |----        ----|   |----        -   |  |
    |   |  |S|           |   |                |   |           |D|  |  |
    |   |   -        ----|   |----        ----|   |----        -   |  |
    |   |           |BN12+---+BN22|      |BN24+---+BN32|           |  |
    |   |            ----|   |----        ----|   |----            |  |
    |   |                |   |                |   |                |  |
    |   |         ----   |   |                |   |   ----         |  |
    |   |        |BN13|  |   |                |   |  |BN33|        |  |
    |    -----------+----     ----------------     ----+-----------   |
    |                \                                /               |
    |                 \       ----------------       /                |
    |                  \     |                |     /                 |
    |                   \    |----        ----|    /                  |
    |                    ----+BN41|      |BN42+----                   |
    |                        |----        ----|                       |
    |                        |                |                       |
    |                        |        -----   |                       |
    |                        |       |PCE 4|  |                       |
    |                        |        -----   |                       |
    |                        |                |                       |
    |                        | Domain 4       |                       |
    |                         ----------------                        |
    |                                                                 |
     -----------------------------------------------------------------
]]></artwork></figure>

<t>In this use case, a client can use the YANG data model defined in
   this document to request to the parent PCE a path from a source S to
   a destination D. The parent PCE will in turn contact the child PCEs
   through PCEP protocol to compute the end-to-end path and then return
   the computed path to the client, using the YANG data model defined in
   this document. For example the YANG data model can be used to request
   to PCE5 acting as parent PCE to compute a path from source S, within
   domain 1, to destination D, within domain 3. PCE5 will contact child
   PCEs of domain 1, 2 and 3 to obtain local part of the end-to-end path
   through the PCEP protocol. Once received the PCE Response message, it
   merges the answers to compute the end-to-end path and send it back to
   the client.</t>

</section>
</section>
<section anchor="motivations"><name>Motivations</name>

<t>This section provides the motivation for the YANG data model defined
   in this document.</t>

<t><xref target="yang-motivation"/> describes the motivation for a YANG data model to request
   path computation.</t>

<t><xref target="topo-interaction"/> describes the motivation for a YANG data model which
   complements the TE topology YANG data model defined in <xref target="RFC8795"/>.</t>

<t><xref target="rpc-motivation"/> describes the motivation for a YANG RPC which complements
   the TE tunnel YANG data model defined in <xref target="I-D.ietf-teas-yang-te"/>.</t>

<section anchor="yang-motivation"><name>Motivation for a YANG Model</name>

<section anchor="benefits-of-common-data-models"><name>Benefits of common data models</name>

<t>The YANG data model for requesting path computation is closely
   aligned with the YANG data models that provide (abstract) TE topology
   information, i.e., <xref target="RFC8795"/> as well as that are used to configure
   and manage TE tunnels, i.e., <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>There are many benefits in aligning the data model used for path
   computation requests with the YANG data models used for TE topology
   information and for TE tunnels configuration and management:</t>

<t><list style="symbols">
  <t>There is no need for an error-prone mapping or correlation of
information.</t>
  <t>It is possible to use the same endpoint identifiers in path
computation requests and in the topology modeling.</t>
  <t>The attributes used for path computation constraints are the same
as those used when setting up a TE tunnel.</t>
</list></t>

</section>
<section anchor="benefits-of-a-single-interface"><name>Benefits of a single interface</name>

<t>The system integration effort is typically lower if a single,
   consistent interface is used by controllers, i.e., one data modeling
   language (i.e., YANG) and a common protocol (e.g., NETCONF or
   RESTCONF).</t>

<t>Practical benefits of using a single, consistent interface include:</t>

<t><list style="numbers">
  <t>Simple authentication and authorization: The interface between
different components has to be secured. If different protocols
have different security mechanisms, ensuring a common access
control model may result in overhead. For instance, there may be a
need to deal with different security mechanisms, e.g., different
credentials or keys. This can result in increased integration
effort.</t>
  <t>Consistency: Keeping data consistent over multiple different
interfaces or protocols is not trivial. For instance, the sequence
of actions can matter in certain use cases, or transaction
semantics could be desired. While ensuring consistency within one
protocol can already be challenging, it is typically cumbersome to
achieve that across different protocols.</t>
  <t>Testing: System integration requires comprehensive testing,
including corner cases. The more different technologies are
involved, the more difficult it is to run comprehensive test cases
and ensure proper integration.</t>
  <t>Middle-box friendliness: Provider and consumer of path computation
requests may be located in different networks, and middle-boxes
such as firewalls, NATs, or load balancers may be deployed. In
such environments it is simpler to deploy a single protocol. Also,
it may be easier to debug connectivity problems.</t>
  <t>Tooling reuse: Implementers may want to implement path computation
requests with tools and libraries that already exist in
controllers and/or orchestrators, e.g., leveraging the rapidly
growing eco-system for YANG tooling.</t>
</list></t>

</section>
<section anchor="extensibility"><name>Extensibility</name>

<t>Path computation is only a subset of the typical functionality of a
   controller. In many use cases, issuing path computation requests
   comes along with the need to access other functionality on the same
   system. In addition to obtaining TE topology, for instance also
   configuration of services (set-up/modification/deletion) may be
   required, as well as:</t>

<t><list style="numbers">
  <t>Receiving notifications for topology changes as well as
integration with fault management</t>
  <t>Performance management such as retrieving monitoring and telemetry
data</t>
  <t>Service assurance, e.g., by triggering OAM functionality</t>
  <t>Other fulfilment and provisioning actions beyond tunnels and
services, such as changing QoS configurations  <vspace blankLines='1'/>
YANG is a very extensible and flexible data modeling language that
can be used for all these use cases.</t>
</list></t>

</section>
</section>
<section anchor="topo-interaction"><name>Interactions with TE topology</name>

<t>The use cases described in <xref target="use-cases"/> have been described assuming
   that the topology view exported by each underlying controller to its
   client is aggregated using the "virtual node model", defined in
   <xref target="RFC7926"/>.</t>

<t>TE topology information, e.g., as provided by <xref target="RFC8795"/>, could in
   theory be used by an underlying controller to provide TE information
   to its client thus allowing a PCE available within its client to
   perform multi-domain path computation on its own, without requesting
   path computations to the underlying controllers.</t>

<t>In case the client does not implement a PCE function, as discussed in
   <xref target="intro"/>, it could not perform path computation based on TE topology
   information and would instead need to request path computation from
   the underlying controllers to get the information it needs to find
   the optimal end-to-end path.</t>

<t>In case the client implements a PCE function, as discussed in 
   <xref target="intro"/>, the TE topology information needs to be complete and accurate,
   which would bring to scalability issues.</t>

<t>Using TE topology to provide a "virtual link model" aggregation, as
   described in <xref target="RFC7926"/>, may be insufficient, unless the aggregation
   provides complete and accurate information, which would still cause
   scalability issues, as described in <xref target="topo-aggregation"/> below.</t>

<t>Using TE topology abstraction, as described in <xref target="RFC7926"/>, may lead to
   compute an unfeasible path, as described in <xref target="RFC7926"/> in 
   <xref target="topo-abstraction"/> below.</t>

<t>Therefore when computing an optimal multi-domain path, there is a
   scalability trade-off between providing complete and accurate TE
   information and the number of path computation requests to the
   underlying controllers.</t>

<t>The TE topology information used, in a complimentary way, to reduce
   the number for path computation requests to the underlying
   controllers, are described in <xref target="topo-pc-complement"/> below.</t>

<section anchor="topo-aggregation"><name>TE topology aggregation</name>

<t>Using the TE topology model, as defined in <xref target="RFC8795"/>, the underlying
   controller can export the whole TE domain as a single TE node with a
   "detailed connectivity matrix" (which provides specific TE
   attributes, such as delay, Shared Risk Link Groups (SRLGs) and other
   TE metrics, between each ingress and egress links).</t>

<t>The information provided by the "detailed connectivity matrix" would
   be equivalent to the information that should be provided by "virtual
   link model" as defined in <xref target="RFC7926"/>.</t>

<t>For example, in the Packet/Optical Integration use case, described in
   <xref target="poi-uc"/>, the Optical Domain Controller can make the information
   shown in <xref target="fig-poi-example"/> available to the Packet/Optical Coordinator as part
   of the TE topology information and the Packet/Optical Coordinator
   could use this information to calculate on its own the optimal path
   between R1 and R2, without requesting any additional information to
   the Optical Domain Controller.</t>

<t>However, when designing the amount of information to provide within
   the "detailed connectivity matrix", there is a tradeoff to be
   considered between accuracy (i.e., providing "all" the information
   that might be needed by the PCE available within the client) and
   scalability.</t>

<t><xref target="poi-multi-path"/> below shows another example, similar to <xref target="fig-poi-example"/>, where
   there are two possible Optical paths between VP1 and VP4 with
   different properties (e.g., available bandwidth and cost).</t>

<figure title="Packet/Optical Integration path computation Example with multiple choices" anchor="poi-multi-path"><artwork><![CDATA[
                    ............................
                    :  /--------------------\  :
                    : /       cost=65        \ :
                    :/    available-bw=10G    \:
                    O VP1                  VP4 O
           cost=10 /:\                        /:\ cost=10
                  / : \----------------------/ : \
          +----+ /  :         cost=50          :  \ +----+
          |    |/   :     available-bw=2G      :   \|    |
          | R1 |    :                          :    | R2 |
          |    |\   :                          :   /|    |
          +----+ \  :  /--------------------\  :  / +----+
                  \ : /       cost=55        \ : /
            cost=5 \:/    available-bw=3G     \:/ cost=5
                    O VP2                  VP5 O
                    :                          :
                    :..........................:
]]></artwork></figure>

<t>If the information in the "detailed connectivity matrix" is not
   complete/accurate, we can have the following drawbacks:</t>

<t><list style="symbols">
  <t>If only the VP1-VP4 path with available bandwidth of 2 Gb/s and
cost 50 is reported, the client's PCE will fail to compute a 5
Gb/s path between routers R1 and R2, although this would be
feasible;</t>
  <t>If only the VP1-VP4 path with available bandwidth of 10 Gb/s and
cost 60 is reported, the client's PCE will compute, as optimal,
the 1 Gb/s path between R1 and R2 going through the VP2-VP5 path
within the optical domain while the optimal path would actually be
the one going thought the VP1-VP4 sub-path (with cost 50) within
the optical domain.  <vspace blankLines='1'/>
Reporting all the information, as in <xref target="poi-multi-path"/>, using the "detailed
 connectivity matrix", is quite challenging from a scalability
 perspective. The amount of this information is not just based on
 number of end points (which would scale as N-square), but also on
 many other parameters, including client rate, user
 constraints/policies for the service, e.g. max latency &lt; N ms, max
 cost, etc., exclusion policies to route around busy links, min
 Optical Signal to Noise Ratio (OSNR) margin, max pre-Forward Error
 Correction (FEC) Bit Error Rate (BER) etc. All these constraints
 could be different based on connectivity requirements.  <vspace blankLines='1'/>
It is also worth noting that the "connectivity matrix" has been
 originally defined in Wavelength Switched Optical Networks (WSON),
 <xref target="RFC7446"/>, to report the connectivity constrains of a physical node
 within the Wavelength Division Multiplexing (WDM) network: the
 information it contains is pretty "static" and therefore, once taken
 and stored in the TE data base, it can be always being considered
 valid and up-to-date in path computation request.  <vspace blankLines='1'/>
The "connectivity matrix" is sometimes confused with "optical reach
 table" that contain multiple (e.g. k-shortest) regen-free reachable
 paths for every A-Z node combination in the network. Optical reach
 tables can be calculated offline, utilizing vendor optical design and
 planning tools, and periodically uploaded to the Controller: these
 optical path reach tables are fairly static. However, to get the
 connectivity matrix, between any two sites, either a regen free path
 can be used, if one is available, or multiple regen free paths are
 concatenated to get from the source to the destination, which can be
 a very large combination. Additionally, when the optical path within
 optical domain needs to be computed, it can result in different paths
 based on input objective, constraints, and network conditions. In
 summary, even though "optical reach table" is fairly static, which
 regen free paths to build the connectivity matrix between any source
 and destination is very dynamic, and is done using very sophisticated
 routing algorithms.  <vspace blankLines='1'/>
Using the "basic connectivity matrix" with an abstract node to
 abstract the information regarding the connectivity constraints of an
 Optical domain, would make this information more "dynamic" since the
 connectivity constraints of an optical domain can change over time
 because some optical paths that are feasible at a given time may
 become unfeasible at a later time when e.g., another optical path is
 established.  <vspace blankLines='1'/>
The information in the "detailed connectivity matrix" is even more
 dynamic since the establishment of another optical path may change
 some of the parameters (e.g., delay or available bandwidth) in the
 "detailed connectivity matrix" while not changing the feasibility of
 the path.  <vspace blankLines='1'/>
There is therefore the need to keep the information in the "detailed
 connectivity matrix" updated which means that there another tradeoff
 between the accuracy (i.e., providing "all" the information that
 might be needed by the client's PCE) and having up-to-date
 information. The more the information is provided and the longer it
 takes to keep it up-to-date which increases the likelihood that the
 client's PCE computes paths using not updated information.  <vspace blankLines='1'/>
It seems therefore quite challenging to have a "detailed connectivity
 matrix" that provides accurate, scalable and updated information to
 allow the client's PCE to take optimal decisions by its own.  <vspace blankLines='1'/>
Considering the example in <xref target="poi-multi-path"/> with the approach defined in this
 document, the client, when it needs to set up an end-to-end path, it
 can request the Optical Domain Controller to compute a set of optimal
 paths (e.g., for VP1-VP4 and VP2-VP5) and take decisions based on the
 information received:</t>
  <t>When setting up a 5 Gb/s path between routers R1 and R2, the
Optical Domain Controller may report only the VP1-VP4 path as the
only feasible path: the Packet/Optical Coordinator can
successfully set up the end-to-end path passing though this
optical path;</t>
  <t>When setting up a 1 Gb/s path between routers R1 and R2, the
Optical Domain Controller (knowing that the path requires only 1
Gb/s) can report both the VP1-VP4 path, with cost 50, and the VP2-
VP5 path, with cost 65. The Packet/Optical Coordinator can then
compute the optimal path which is passing thought the VP1-VP4 sub-
path (with cost 50) within the optical domain.</t>
</list></t>

</section>
<section anchor="topo-abstraction"><name>TE topology abstraction</name>

<t>Using the TE topology model, as defined in <xref target="RFC8795"/>, the underlying
   controller can export to its client an abstract TE topology, composed
   by a set of TE nodes and TE links, representing the abstract view of
   the topology under its control.</t>

<t>For example, in the multi-domain TE network use case, described in
   <xref target="md-uc"/>, the TE Domain Controller 1 can export a TE topology
   encompassing the TE nodes A, B, C and D and the TE links
   interconnecting them. In a similar way, the TE Domain Controller 2
   can export a TE topology encompassing the TE nodes E, F, G and H and
   the TE links interconnecting them.</t>

<t>In this example, for simplicity reasons, each abstract TE node maps
   with each physical node, but this is not necessary.</t>

<t>In order to set up a multi-domain TE path (e.g., between nodes A and
   H), the Multi-Domain Controller can compute by its own an optimal
   end-to-end path based on the abstract TE topology information
   provided by the domain controllers. For example:</t>

<t><list style="symbols">
  <t>Multi-Domain Controller can compute, based on its own TED data,
the optimal multi-domain path being A-B-C-E-G-H, and then request
the TE Domain Controllers to set up the A-B-C and E-G-H intra-
domain paths</t>
  <t>But, during path set-up, the TE Domain Controller may find out
that A-B-C intra-domain path is not feasible (as discussed in
<xref target="md-uc"/>, in optical networks it is typical to have some paths
not being feasible due to optical constraints that are known only
by the Optical Domain Controller), while only the path A-B-D is
feasible</t>
  <t>So what the Multi-Domain Controller has computed is not good and
it needs to re-start the path computation from scratch  <vspace blankLines='1'/>
As discussed in <xref target="topo-aggregation"/>, providing more extensive abstract
information from the TE Domain Controllers to the Multi-Domain
Controller may lead to scalability problems.  <vspace blankLines='1'/>
In a sense this is similar to the problem of routing and wavelength
assignment within an optical domain. It is possible to do first
routing (step 1) and then wavelength assignment (step 2), but the
chances of ending up with a good path is low. Alternatively, it is
possible to do combined routing and wavelength assignment, which is
known to be a more optimal and effective way for optical path set-up.
Similarly, it is possible to first compute an abstract end-to-end
path within the Multi-Domain Controller (step 1) and then compute an
intra-domain path within each optical domain (step 2), but there are
more chances not to find a path or to get a suboptimal path than by
performing multiple per-domain path computations and then stitching
them together.</t>
</list></t>

</section>
<section anchor="topo-pc-complement"><name>Complementary use of the TE topology</name>

<t>As discussed in <xref target="md-uc"/>, there are some scalability issues with
   path computation requests in a multi-domain TE network with many TE
   domains, in terms of the number of requests to send to the TE Domain
   Controllers. It would therefore be worthwhile using the abstract TE
   topology information provided by the TE Domain Controllers to limit
   the number of requests.</t>

<t>An example can be described considering the multi-domain abstract TE
   topology shown in <xref target="fig-topo-many-domains"/>. In this example, an end-to-end TE path
   between domains A and F needs to be set up. The transit TE domain
   should be selected between domains B, C, D and E.</t>

<figure title="Multi-domain with many domains (Topology information)" anchor="fig-topo-many-domains"><artwork><![CDATA[
                          .........B.........
                          : _ _ _ _ _ _ _ _ :
                          :/               \:
                      +---O  NOT FEASIBLE   O---+
                cost=5|   :                 :   |
    ......A......     |   :.................:   |     ......F......
    :           :     |                         |     :           :
    :           O-----+   .........C.........   +-----O           :
    :           :         : /-------------\ :         :           :
    :           :         :/               \:         :           :
    :  cost<=20 O---------O   cost <= 30    O---------O cost<=20  :
    :          /: cost=5  :                 : cost=5  :\          :
    :  /------/ :         :.................:         : \------\  :
    : /         :                                     :         \ :
    :/ cost<=25 :         .........D.........         : cost<=25 \:
    O-----------O-------+ : /-------------\ : +-------O-----------O
    :\          : cost=5| :/               \: |cost=5 :          /:
    : \         :       +-O   cost <= 30    O-+       :         / :
    :  \------\ :         :                 :         : /------/  :
    : cost>=30 \:         :.................:         :/ cost>=30 :
    :           O-----+                         +-----O           :
    :...........:     |   .........E.........   |     :...........:
                      |   : /-------------\ :   |
                cost=5|   :/               \:   |cost=5
                      +---O   cost >= 30    O---+
                          :                 :
                          :.................:
]]></artwork></figure>

<t>The actual cost of each intra-domain path is not known a priori from
   the abstract topology information. The Multi-Domain Controller only
   knows, from the TE topology provided by the underlying domain
   controllers, the feasibility of some intra-domain paths and some
   upper-bound and/or lower-bound cost information. With this
   information, together with the cost of inter-domain links, the Multi-
   Domain Controller can understand by its own that:</t>

<t><list style="symbols">
  <t>Domain B cannot be selected as the path connecting domains A and F
is not feasible;</t>
  <t>Domain E cannot be selected as a transit domain since it is known
from the abstract topology information provided by domain
controllers that the cost of the multi-domain path A-E-F (which is
100, in the best case) will be always be higher than the cost of
the multi-domain paths A-D-F (which is 90, in the worst case) and
A-C-F (which is 80, in the worst case).  <vspace blankLines='1'/>
Therefore, the Multi-Domain Controller can understand by its own that
 the optimal multi-domain path could be either A-D-F or A-C-F but it
 cannot know which one of the two possible option actually provides
 the optimal end-to-end path.  <vspace blankLines='1'/>
The Multi-Domain Controller can therefore request path computation
 only to the TE Domain Controllers A, D, C and F (and not to all the
 possible TE Domain Controllers).</t>
</list></t>

<figure title="Multi-domain with many domains (Path Computation information)" anchor="fig-pc-many-domains"><artwork><![CDATA[
                          .........B.........
                          :                 :
                      +---O                 O---+
    ......A......     |   :.................:   |     ......F......
    :           :     |                         |     :           :
    :           O-----+   .........C.........   +-----O           :
    :           :         : /-------------\ :         :           :
    :           :         :/               \:         :           :
    :  cost=15  O---------O    cost = 25    O---------O  cost=10  :
    :          /: cost=5  :                 : cost=5  :\          :
    :  /------/ :         :.................:         : \------\  :
    : /         :                                     :         \ :
    :/ cost=10  :         .........D.........         : cost=15  \:
    O-----------O-------+ : /-------------\ : +-------O-----------O
    :           : cost=5| :/               \: |cost=5 :           :
    :           :       +-O    cost = 15    O-+       :           :
    :           :         :                 :         :           :
    :           :         :.................:         :           :
    :           O-----+                         +-----O           :
    :...........:     |   .........E.........   |     :...........:
                      |   :                 :   |
                      +---O                 O---+
                          :.................:
]]></artwork></figure>

<t>Based on these requests, the Multi-Domain Controller can know the
   actual cost of each intra-domain paths which belongs to potential
   optimal end-to-end paths, as shown in <xref target="fig-pc-many-domains"/>, and then compute the
   optimal end-to-end path (e.g., A-D-F, having total cost of 50,
   instead of A-C-F having a total cost of 70).</t>

</section>
</section>
<section anchor="rpc-motivation"><name>Path Computation RPC</name>

<t>The TE tunnel YANG data model, defined in <xref target="I-D.ietf-teas-yang-te"/>, can support
   the need to request path computation, as described in section 5.1.2
   of <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>This solution is stateful since the state of each created "compute-
   only" TE tunnel path needs to be maintained, in the YANG datastores
   (at least in the running datastore and operational datastore), and
   updated, when underlying network conditions change.</t>

<t>The RPC mechanism allows requesting path computation using a simple
   atomic operation, without creating any state in the YANG datastores,
   and it is the natural option/choice, especially with stateless PCE.</t>

<t>It is very useful to provide both the options of using an RPC as well
   as of setting up TE tunnel paths in "compute-only" mode. It is
   suggested to use the RPC as much as possible and to rely on
   "compute-only" TE tunnel paths, when really needed.</t>

<t>Using the RPC solution would imply that the underlying controller
   (e.g., a PNC) computes a path twice during the process to set up an
   LSP: at time T1, when its client (e.g., an MDSC) sends a path
   computation RPC request to it, and later, at time T2, when the same
   client (MDSC) creates a TE tunnel requesting the set-up of the LSP.
   The underlying assumption is that, if network conditions have not
   changed, the same path that has been computed at time T1 is also
   computed at time T2 by the underlying controller (e.g. PNC) and
   therefore the path that is set up at time T2 is exactly the same path
   that has been computed at time T1.</t>

<t>However, since the operation is stateless, there is no guarantee that
   the returned path would still be available when path set-up is
   requested: this does not cause major issues when the time between
   path computation and path set-up is short (especially if compared
   with the time that would be needed to update the information of a
   very detailed connectivity matrix).</t>

<t>In most of the cases, there is even no need to guarantee that the
   path that has been set up is the exactly same as the path that has
   been returned by path computation, especially if it has the same or
   even better metrics. Depending on the abstraction level applied by
   the server, the client may also not know the actual computed path.</t>

<t>The most important requirement is that the required global objectives
   (e.g., multi-domain path metrics and constraints) are met. For this
   reason a path verification phase is always necessary to verify that
   the actual path that has been set up meets the global objectives (for
   example in a multi-domain network, the resulting end-to-end path
   meets the required end-to-end metrics and constraints).</t>

<t>In most of the cases, even if the path being set up is not exactly
   the same as the path returned by path computation, its metrics and
   constraints are "good enough" and the path verification passes
   successfully. In the few corner cases where the path verification
   fails, it is possible repeat the whole process (path computation,
   path set-up and path verification).</t>

<t>In case it is required to set up at T2 exactly the same path computed
   at T1, the RPC solution should not be used and, instead, a "compute-
   only" TE tunnel path should be set up, allowing also notifications in
   case the computed path has been changed.</t>

<t>In this case, at time T1, the client (MDSC) creates a TE tunnel in a
   compute-only mode in the running datastore and later, at time T2,
   changes the configuration of that TE tunnel (not to be any more in a
   compute-only mode) to trigger the set-up of the LSP over the path
   which have been computed at time T1 and reported in the operational
   datastore.</t>

<t>It is worth noting that also using the "compute-only" TE tunnel path,
   although increasing the likelihood that the computed path is
   available at path set-up, does not guarantee that because
   notifications may not be reliable or delivered on time. Path
   verification is needed also in this case.</t>

<t>The solution based on "compute-only" TE tunnel path has also the
   following drawbacks:</t>

<t><list style="symbols">
  <t>Several messages required for any path computation</t>
  <t>Requires persistent storage in the underlying controller</t>
  <t>Need for garbage collection for stranded paths</t>
  <t>Process burden to detect changes on the computed paths in order to
provide notifications update</t>
</list></t>

<section anchor="temp-state"><name>Temporary reporting of the computed path state</name>

<t>This section describes an optional extension to the stateless
   behavior of the path computation RPC, where the underlying
   controller, after having received a path computation RPC request,
   maintains some "transient state" associated with the computed path,
   allowing the client to request the set-up of exactly that path, if
   still available.</t>

<t>This is similar to the "compute-only" TE tunnel path solution but, to
   avoid the drawbacks of the stateful approach, is leveraging the path
   computation RPC and the separation between configuration and
   operational datastore, as defined in the NMDA architecture <xref target="RFC8342"/>.</t>

<t>The underlying controller, after having computed a path, as requested
   by a path computation RPC, also creates a TE tunnel instance within
   the operational datastore, to store that computed path. This would be
   similar to a "compute-only" TE tunnel path, with the only difference
   that there is no associated TE tunnel instance within the running
   datastore.</t>

<t>Since the underlying controller stores in the operational datastore
   the computed path based on an abstract topology it exposes, it also
   remembers, internally, which is the actual native path (physical
   path), within its native topology (physical topology), associated
   with that compute-only TE tunnel instance.</t>

<t>Afterwards, the client (e.g., MDSC) can request the set-up of that
   specific path by creating a TE tunnel instance (not in compute-only
   mode) in the running datastore using the same tunnel-name of
   the existing TE tunnel in the operational datastore: this will
   trigger the underlying controller to set up that path, if still
   available.</t>

<t>There are still cases where the path being set up is not exactly the
   same as the path that has been computed:</t>

<t><list style="symbols">
  <t>When the tunnel is configured with path constraints which are not
compatible with the computed path;</t>
  <t>When the tunnel set-up is requested after the resources of the
computed path are no longer available;</t>
  <t>When the tunnel set-up is requested after the computed path is no
longer known (e.g. due to a server reboot) by the underlying
controller.  <vspace blankLines='1'/>
In all these cases, the underlying controller should compute and set
 up a new path.  <vspace blankLines='1'/>
Therefore the "path verification" phase, as described in <xref target="rpc-motivation"/>
 above, is always needed to check that the path that has been set up
 is still "good enough".  <vspace blankLines='1'/>
Since this new approach is not completely stateless, garbage
 collection is implemented using a timeout that, when it expires,
 triggers the removal of the computed path from the operational
 datastore. This operation is fully controlled by the underlying
 controller without the need for any action to be taken by the client
 that is not able to act on the operational datastore. The default
 value of this timeout is 10 minutes but a different value may be
 configured by the client.  <vspace blankLines='1'/>
In addition, it is possible for the client to tag each path
 computation request with a transaction-id allowing for a faster
 removal of all the paths associated with a transaction-id, without
 waiting for their timers to expire.  <vspace blankLines='1'/>
The underlying controller can remove from the operational datastore
 all the paths computed with a given transaction-id which have not
 been set up either when it receives a Path Delete RPC request for
 that transaction-id or, automatically, right after the set-up up of a
 path that has been previously computed with that transaction-id.  <vspace blankLines='1'/>
This possibility is useful when multiple paths are computed but, at
 most, only one is set up (e.g., in multi-domain path computation
 scenario scenarios). After the selected path has been set up (e.g, in
 one domain during multi-domain path set-up), all the other
 alternative computed paths can be automatically deleted by the
 underlying controller (since no longer needed). The client can also
 request, using the Path Delete RPC request, the underlying controller
 to remove all the computed paths, if none of them is going to be set
 up (e.g., in a transit domain not being selected by multi-domain path
 computation and so not being automatically deleted).  <vspace blankLines='1'/>
This approach is complimentary and not alternative to the timer which
 is always needed to avoid stranded computed paths being stored in the
 operational datastore when no path is set up and no explicit Path
 Delete RPC request is received.</t>
</list></t>

</section>
</section>
</section>
<section anchor="path-computation-and-optimization-for-multiple-paths"><name>Path computation and optimization for multiple paths</name>

<t>There are use cases, where it is advantageous to request path
   computation for a set of paths, through a network or through a
   network domain, using a single request <xref target="RFC5440"/>.</t>

<t>In this case, sending a single request for multiple path
   computations, instead of sending multiple requests for each path
   computation, would reduce the protocol overhead and it would consume
   less resources (e.g., threads in the client and server).</t>

<t>In the context of a typical multi-domain TE network, there could
   multiple choices for the ingress/egress points of a domain and the
   Multi-Domain Controller needs to request path computation between all
   the ingress/egress pairs to select the best pair. For example, in the
   example of <xref target="md-uc"/>, the Multi-Domain Controller needs to request
   the TE Network Controller 1 to compute the A-C and the A-D paths and
   to the TE Network Controller 2 to compute the E-H and the F-H paths.</t>

<t>It is also possible that the Multi-Domain Controller receives a
   request to set up a group of multiple end to end connections. The
   Multi-Domain Controller needs to request each TE domain Controller to
   compute multiple paths, one (or more) for each end to end connection.</t>

<t>There are also scenarios where it can be needed to request path
   computation for a set of paths in a synchronized fashion.</t>

<t>One example could be computing multiple diverse paths. Computing a
   set of diverse paths in an unsynchronized fashion, leads to the
   possibility of not being able to satisfy the diversity requirement.
   In this case, it is preferable to compute a sub-optimal primary path
   for which a diversely routed secondary path exists.</t>

<t>There are also scenarios where it is needed to request optimizing a
   set of paths using objective functions that apply to the whole set of
   paths, see <xref target="RFC5541"/>, e.g. to minimize the sum of the costs of all
   the computed paths in the set.</t>

</section>
<section anchor="yang-data-model-for-requesting-path-computation"><name>YANG data model for requesting Path Computation</name>

<t>This document define a YANG RPC to request path computation as an
   "augmentation" of tunnel-rpc, defined in <xref target="I-D.ietf-teas-yang-te"/>. This model
   provides the RPC input attributes that are needed to request path
   computation and the RPC output attributes that are needed to report
   the computed paths.</t>

<figure><artwork><![CDATA[
     augment /te:tunnels-path-compute/te:input/te:path-compute-info:
       +-- path-request* [request-id]
       |  +-- request-id                            uint32
       |  ...........

     augment /te:tunnels-path-compute/te:output/te:path-compute-result:
       +--ro response* [response-id]
          +--ro response-id                         uint32
          +--ro computed-paths-properties
          |  +--ro computed-path-properties* [k-index]
          |     +--ro k-index            uint8
          |     +--ro path-properties
          |     ...........
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>This model extensively re-uses the grouping defined in <xref target="I-D.ietf-teas-yang-te"/>
   and <xref target="RFC8776"/> to ensure maximal syntax and semantics commonality.</t>

<t>This YANG data model allows one RPC to include multiple path
   requests, each path request being identified by a request-id.
   Therefore, one RPC can return multiple responses, one for each path
   request, being identified by a response-id equal to the corresponding
   request-id. Each response reports one or more computed paths, as
   requested by the k-requested-paths attribute. By default, each
   response reports one computed path.</t>

<section anchor="synchronization-of-multiple-path-computation-requests"><name>Synchronization of multiple path computation requests</name>

<t>The YANG data model permits the synchronization of a set of multiple
   path requests (identified by specific request-id) all related to a
   "svec" container emulating the syntax of the Synchronization VECtor
   (SVEC) PCEP object, defined in <xref target="RFC5440"/>.</t>

<figure><artwork><![CDATA[
       +-- synchronization* []
          +-- svec
          |  +-- relaxable?           boolean
          |  +-- disjointness?        te-path-disjointness
          |  +-- request-id-number*   uint32
          +-- svec-constraints
          |  +-- path-metric-bound* [metric-type]
          |     +-- metric-type    identityref
          |     +-- upper-bound?   uint64
          +-- path-srlgs-lists
          |  +-- path-srlgs-list* [usage]
          |     +-- usage     identityref
          |     +-- values*   srlg
          +-- path-srlgs-names
          |  +-- path-srlgs-name* [usage]
          |     +-- usage    identityref
          |     +-- names*   string
          +-- exclude-objects
          |  +-- excludes* []
          |     +-- (type)?
          |        +--:(numbered-node-hop)
          |        |  +-- numbered-node-hop
          |        |     +-- node-id     te-node-id
          |        |     +-- hop-type?   te-hop-type
          |        +--:(numbered-link-hop)
          |        |  +-- numbered-link-hop
          |        |     +-- link-tp-id    te-tp-id
          |        |     +-- hop-type?     te-hop-type
          |        |     +-- direction?    te-link-direction
          |        +--:(unnumbered-link-hop)
          |        |  +-- unnumbered-link-hop
          |        |     +-- link-tp-id    te-tp-id
          |        |     +-- node-id       te-node-id
          |        |     +-- hop-type?     te-hop-type
          |        |     +-- direction?    te-link-direction
          |        +--:(as-number)
          |        |  +-- as-number-hop
          |        |     +-- as-number    inet:as-number
          |        |     +-- hop-type?    te-hop-type
          |        +--:(label)
          |           +-- label-hop
          |              +-- te-label
          |                 +-- (technology)?
          |                 |  +--:(generic)
          |                 |     +-- generic?
          |                 |             rt-types:generalized-label
          |                 +-- direction?       te-label-direction
          +-- optimizations
             +-- (algorithm)?
                +--:(metric) {te-types:path-optimization-metric}?
                |  +-- optimization-metric* [metric-type]
                |     +-- metric-type    identityref
                |     +-- weight?        uint8
                +--:(objective-function)
                         {te-types:path-optimization-objective-
   function}?
                   +-- objective-function
                      +-- objective-function-type?   identityref
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>The model, in addition to the metric types, defined in <xref target="RFC8776"/>,
   which can be applied to each individual path request, supports also
   additional metric types, which apply to a set of synchronized
   requests, as referenced in <xref target="RFC5541"/>. These additional metric types
   are defined by the following YANG identities:</t>

<t><list style="symbols">
  <t>svec-metric-type: base YANG identity from which cumulative metric
types identities are derived.</t>
  <t>svec-metric-cumul-te: cumulative TE cost metric type, as defined
in <xref target="RFC5541"/>.</t>
  <t>svec-metric-cumul-igp: cumulative IGP cost metric type, as defined
in <xref target="RFC5541"/>.</t>
  <t>svec-metric-cumul-hop: cumulative Hop metric type, representing
the cumulative version of the Hop metric type defined in
<xref target="RFC8776"/>.</t>
  <t>svec-metric-aggregate-bandwidth-consumption: aggregate bandwidth
consumption metric type, as defined in <xref target="RFC5541"/>.</t>
  <t>svec-metric-load-of-the-most-loaded-link: load of the most loaded
link metric type, as defined in <xref target="RFC5541"/>.</t>
</list></t>

</section>
<section anchor="returned-metric-values"><name>Returned metric values</name>

<t>This YANG data model provides a way to return the values of the
   metrics computed by the path computation in the output of RPC,
   together with other important information (e.g. srlg, affinities,
   explicit route), emulating the syntax of the "C" flag of the "METRIC"
   PCEP object <xref target="RFC5440"/>:</t>

<figure><artwork><![CDATA[
          |     +--ro path-properties
          |        +--ro path-metric* [metric-type]
          |        |  +--ro metric-type           identityref
          |        |  +--ro accumulative-value?   uint64
          |        +--ro path-affinities-values
          |        |  +--ro path-affinities-value* [usage]
          |        |     +--ro usage    identityref
          |        |     +--ro value?   admin-groups
          |        +--ro path-affinity-names
          |        |  +--ro path-affinity-name* [usage]
          |        |     +--ro usage            identityref
          |        |     +--ro affinity-name* [name]
          |        |        +--ro name    string
          |        +--ro path-srlgs-lists
          |        |  +--ro path-srlgs-list* [usage]
          |        |     +--ro usage     identityref
          |        |     +--ro values*   srlg
          |        +--ro path-srlgs-names
          |        |  +--ro path-srlgs-name* [usage]
          |        |     +--ro usage    identityref
          |        |     +--ro names*   string
          |        +--ro path-route-objects
          |        ...........
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>It also allows the client to request which information (metrics, srlg
   and/or affinities) should be returned:</t>

<figure><artwork><![CDATA[
       |  +-- request-id                            uint32
       |  ...........
       |  +-- requested-metrics* [metric-type]
       |  |  +-- metric-type    identityref
       |  +-- return-srlgs?                         boolean
       |  +-- return-affinities?                    boolean
       |  ...........
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>This feature is essential for path computation in a multi-domain TE
   network as described in <xref target="md-uc"/>. In this case, the metrics
   returned by a path computation requested to a given underlying
   controller must be used by the client to compute the best end-to-end
   path. If they are missing, the client cannot compare different paths
   calculated by the underlying controllers and choose the best one for
   the optimal end-to-end (e2e) path.</t>

</section>
<section anchor="multiple-paths-requests-for-the-same-te-tunnel"><name>Multiple Paths Requests for the same TE tunnel</name>

<t>The YANG data model allows including multiple requests for different
   paths intended to be used within the same tunnel or within different
   tunnels.</t>

<t>When multiple requested paths are intended to be used within the same
   tunnel (e.g., requesting path computation for the primary and
   secondary paths of a protected tunnel), the set of attributes that
   are intended to be configured on per-tunnel basis rather than on per-
   path basis are common to all these path requests. These attributes
   includes both attributes which can be configured only a per-tunnel
   basis (e.g., tunnel-name, source/destination TTP, encoding and
   switching-type) as well attributes which can be configured both on a
   per-tunnel and on a per-path basis (e.g., the te-bandwidth or the
   associations).</t>

<t>Therefore, a tunnel-attributes list is defined, within the path
   computation request RPC:</t>

<figure><artwork><![CDATA[
       +-- tunnel-attributes* [tunnel-name]
       |  +-- tunnel-name               string
       |  +-- encoding?                 identityref
       |  +-- switching-type?           identityref
       |  ...........
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>The path requests that are intended to be used within the same tunnel
   should reference the same entry in the tunnel-attributes list. This
   allows:</t>

<t><list style="symbols">
  <t>avoiding repeating the same set of per-tunnel parameters on
multiple requested paths;</t>
  <t>the server to understand what attributes are intended to be
configured on a per-tunnel basis (e.g., the te-bandwidth
configured in the tunnel-attributes) and what attributes are
intended to be configured on a per-path basis(e.g., the te-
bandwidth configured in the path-request). This could be useful
especially when the server also creates a TE tunnel instance
within the operational datastore to report the computed paths, as
described in <xref target="temp-state"/>: in this case, the tunnel-name is also
used as the suggested name for that TE tunnel instance.  <vspace blankLines='1'/>
The YANG data model allows also including requests for paths intended
 to modify existing tunnels (e.g., adding a protection path for an
 existing un-protected tunnel). In this case, the per-tunnel
 attributes are already provided in an existing TE tunnel instance and
 do not need to be re-configured in the path computation request RPC.
 Therefore, these requests should reference an existing TE tunnel
 instance.  <vspace blankLines='1'/>
It is also possible to request computing paths without indicating in
 which tunnel they are intended to be used (e.g., in case of an
 unprotected tunnel). In this case, the per-tunnel attributes could be
 provided together with the per-path attributes in the path request,
 without using the tunnel-attributes list.  <vspace blankLines='1'/>
The choices below are defined to distinguish the cases above:</t>
  <t>whether the per-tunnel attributes are configured by reference
(providing a leafref), to:  <list style="symbols">
      <t>either a TE tunnel instance, if it exists;</t>
      <t>or to an entry of the tunnel-attributes list, if the TE tunnel
instance does not exist;</t>
    </list></t>
  <t>or by value, providing the set of tunnel attributes within the
path request:</t>
</list></t>

<figure><artwork><![CDATA[
       |  +-- (tunnel-attributes)?
       |  |  +--:(reference)
       |  |  |  +-- tunnel-reference
       |  |  |     +-- (tunnel-exist)?
       |  |  |     |  +--:(tunnel-ref)
       |  |  |     |  |  +-- tunnel-ref                te:tunnel-ref
       |  |  |     |  +--:(tunnel-attributes-ref)
       |  |  |     |     +-- tunnel-attributes-ref     leafref
       |  |  ...........
       |  |  +--:(value)
       |  |     +-- tunnel-name?                    string
       |  |     ...........
       |  |     +-- encoding?                       identityref
       |  |     +-- switching-type?                 identityref
       |  |     ...........
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<section anchor="tunnel-attributes-specified-by-value"><name>Tunnel attributes specified by value</name>

<t>The (value) case provides the set of attributes that are configured
   only on per-tunnel basis (e.g., tunnel-name, source/destination TTP,
   encoding and switching-type).</t>

<t>In this case, it is assumed that the requested path will be the only
   path within a tunnel.</t>

<t>If the requested path is a transit segment of a multi-domain end-to-
   end path, it can be of any type (primary, secondary, reverse-primary
   or reverse-secondary), as specified by the (path-role) choice:</t>

<figure><artwork><![CDATA[
       |  |     +-- (path-role)?
       |  |     |  +--:(primary-path)
       |  |     |  +--:(secondary-path)
       |  |     |  |  +-- secondary-path!
       |  |     |  |     +-- primary-path-name?   string
       |  |     |  +--:(primary-reverse-path)
       |  |     |  |  +-- primary-reverse-path!
       |  |     |  |     +-- primary-path-name?   string
       |  |     |  +--:(secondary-reverse-path)
       |  |     |     +-- secondary-reverse-path!
       |  |     |        +-- primary-path-name?           string
       |  |     |        +-- primary-reverse-path-name?   string
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>In all the other cases, the requested path can only be a primary
   path.</t>

<t>The secondary-path, the primary-reverse-path and the secondary-
   reverse-path are presence container used to indicate the role of the
   path: by default, the path is assumed to be a primary path.</t>

<t>They optionally can contain the name of the primary-path under which
   the requested path could be associated within the YANG tree structure
   defined in <xref target="I-D.ietf-teas-yang-te"/>, which could be useful when the server also
   creates a TE tunnel instance within the operational datastore to
   report the computed paths, as described in <xref target="temp-state"/>: in this
   case, the tunnel-name and the path names are also used as the
   suggested name for that TE tunnel and path instances.</t>

</section>
<section anchor="tunnel-attributes-specified-by-reference"><name>Tunnel attributes specified by reference</name>

<t>The (reference) case provides the information needed to associate
   multiple path requests that are intended to be used within the same
   tunnel.</t>

<t>In order to indicate the role of the path being requested within the
   intended tunnel (e.g., primary or secondary path), the (path-role)
   choice is defined:</t>

<figure><artwork><![CDATA[
       |  |  |     +-- (path-role)
       |  |  |        +--:(primary-path)
       |  |  |        |  +-- primary-path!
       |  |  |        |     ...........
       |  |  |        +--:(secondary-path)
       |  |  |        |  +-- secondary-path
       |  |  |        |     ...........
       |  |  |        +--:(primary-reverse-path)
       |  |  |        |  +-- primary-reverse-path
       |  |  |        |     ...........
       |  |  |        +--:(secondary-reverse-path)
       |  |  |           +-- secondary-reverse-path
       |  |  |              ...........
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>The primary-path is a presence container used to indicate that the
   requested path is intended to be used as a primary path. It can also
   contain some attributes which are configured only on primary paths
   (e.g., the k-requested-paths).</t>

<t>The secondary-path container indicates that the requested path is
   intended to be used as a secondary path and it contains at least
   references to one or more primary paths which can use it as a
   candidate secondary path:</t>

<figure><artwork><![CDATA[
       |  |  |        |  +-- secondary-path
       |  |  |        |     ...........
       |  |  |        |     +-- primary-path-ref* []
       |  |  |        |        +-- (primary-path-exist)?
       |  |  |        |           +--:(path-ref)
       |  |  |        |           |  +-- primary-path-ref    leafref
       |  |  |        |           +--:(path-request-ref)
       |  |  |        |              +-- path-request-ref    leafref
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>A requested secondary path can reference any requested primary paths,
   and, in case they are intended to be used within an existing TE
   tunnel, it could also reference any existing primary-paths.</t>

<t>The secondary-path container can also contain some attributes which
   are configured only on secondary paths (e.g., the protection-type).</t>

<t>The primary-reverse-path container indicates that the requested path
   is intended to be used as a primary reverse path and it contains only
   the reference to the primary path which is intended to use it as a
   reverse path:</t>

<figure><artwork><![CDATA[
       |  |  |        |  +-- primary-reverse-path
       |  |  |        |     +-- (primary-path-exist)?
       |  |  |        |        +--:(path-ref)
       |  |  |        |        |  +-- primary-path-ref    leafref
       |  |  |        |        +--:(path-request-ref)
       |  |  |        |           +-- path-request-ref    leafref
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>A requested primary reverse path can reference either a requested
   primary path, or, in case it is intended to be used within an
   existing TE tunnel, an existing primary-path.</t>

<t>The secondary-reverse-path container indicates that the requested
   path is intended to be used as a secondary reverse path and it
   contains at least references to one or more primary paths, whose
   primary reverse path can use it as a candidate secondary reverse
   path:</t>

<figure><artwork><![CDATA[
       |  |  |           +-- secondary-reverse-path
       |  |  |              ...........
       |  |  |              +-- primary-reverse-path-ref* []
       |  |  |                 +-- (primary-reverse-path-exist)?
       |  |  |                    +--:(path-ref)
       |  |  |                    |  +-- primary-path-ref    leafref
       |  |  |                    +--:(path-request-ref)
       |  |  |                       +-- path-request-ref    leafref
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>A requested secondary reverse path can reference any requested
   primary paths, and, in case they are intended to be used within an
   existing TE tunnel, it could reference also existing primary-paths.</t>

<t>The secondary-reverse-path container can also contain some attributes
   which are configured only on secondary reverse paths (e.g., the
   protection-type).</t>

<t>In case the requested path is a transit segment of a multi-domain
   end-to-end path, the primary-path may not be needed to be
   setup/computed. However, the request for path computation of a
   secondary-path or a primary-reverse or of a secondary-reverse-path
   requires that the primary-path exists or it is requested within the
   same RPC request. In the latter case, the path request for the
   primary-path should have an empty ERO to indicate to the server that
   path computation is not requested and no path properties will
   therefore be returned in the RPC response.</t>

</section>
</section>
<section anchor="multi-layer-path-computation"><name>Multi-Layer Path Computation</name>

<t>The models supports requesting multi-layer path computation following
   the same approach based on dependency tunnels, as defined in <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>The tunnel-attributes of a given client-layer path request can
   reference server-layer TE tunnels which can already exist in the YANG
   datastore or be specified in the tunnel-attributes list, within the
   same RPC request:</t>

<figure><artwork><![CDATA[
       |     +-- dependency-tunnels
       |     |  +-- dependency-tunnel* [name]
       |     |  |  +-- name              -> /te:te/tunnels/tunnel/name
       |     |  |  +-- encoding?         identityref
       |     |  |  +-- switching-type?   identityref
       |     |  +-- dependency-tunnel-attributes* [name]
       |     |     +-- name              leafref
       |     |     +-- encoding?         identityref
       |     |     +-- switching-type?   identityref
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>In a similar way as in <xref target="I-D.ietf-teas-yang-te"/>, the server-layer tunnel
   attributes should provide the information of what would be the
   dynamic link in the client layer topology supported by that tunnel,
   if instantiated:</t>

<figure><artwork><![CDATA[
       |     +-- hierarchical-link
       |        +-- local-te-node-id?         te-types:te-node-id
       |        +-- local-te-link-tp-id?      te-types:te-tp-id
       |        +-- remote-te-node-id?        te-types:te-node-id
       |        +-- te-topology-identifier
       |           +-- provider-id?   te-global-id
       |           +-- client-id?     te-global-id
       |           +-- topology-id?   te-topology-id
]]></artwork></figure>

<t>[Editors' note:] Update the model snapshot</t>

<t>It is worth noting that since path computation RPC is stateless, the
   dynamic hierarchical links configured for the server-layer tunnel
   attributes cannot be used for path computation of any client-layer
   path unless explicitly referenced in the dependency-tunnel-attributes
   list within the same RPC request.</t>

</section>
</section>
<section anchor="yang-data-model-for-te-path-computation"><name>YANG data model for TE path computation</name>

<section anchor="pc-tree"><name>Tree diagram</name>

<t><xref target="fig-pc-tree"/> below shows the tree diagram of the YANG data model defined
   in module ietf-te-path-computation.yang, defined in <xref target="pc-yang"/>.</t>

<figure title="TE path computation tree diagram" anchor="fig-pc-tree"><artwork><![CDATA[
module: ietf-te-path-computation

  augment /te:tunnels-path-compute/te:input/te:path-compute-info:
    +-- path-request* [request-id]
    |  +-- request-id                            uint32
    |  +-- (tunnel-attributes)?
    |  |  +--:(reference)
    |  |  |  +-- tunnel-reference
    |  |  |     +-- (tunnel-exist)?
    |  |  |     |  +--:(tunnel-ref)
    |  |  |     |  |  +-- tunnel-ref                te:tunnel-ref
    |  |  |     |  +--:(tunnel-attributes-ref)
    |  |  |     |     +-- tunnel-attributes-ref     leafref
    |  |  |     +-- path-name?                      string
    |  |  |     +-- (path-role)
    |  |  |        +--:(primary-path)
    |  |  |        |  +-- primary-path!
    |  |  |        |     +-- preference?          uint8
    |  |  |        |     +-- k-requested-paths?   uint8
    |  |  |        +--:(secondary-path)
    |  |  |        |  +-- secondary-path
    |  |  |        |     +-- preference?           uint8
    |  |  |        |     +-- protection-type?      identityref
    |  |  |        |     +-- restoration-type?     identityref
    |  |  |        |     +-- restoration-scheme?   identityref
    |  |  |        |     +-- primary-path-ref* []
    |  |  |        |        +-- (primary-path-exist)?
    |  |  |        |           +--:(path-ref)
    |  |  |        |           |  +-- primary-path-ref    leafref
    |  |  |        |           +--:(path-request-ref)
    |  |  |        |              +-- path-request-ref    leafref
    |  |  |        +--:(primary-reverse-path)
    |  |  |        |  +-- primary-reverse-path
    |  |  |        |     +-- (primary-path-exist)?
    |  |  |        |        +--:(path-ref)
    |  |  |        |        |  +-- primary-path-ref    leafref
    |  |  |        |        +--:(path-request-ref)
    |  |  |        |           +-- path-request-ref    leafref
    |  |  |        +--:(secondary-reverse-path)
    |  |  |           +-- secondary-reverse-path
    |  |  |              +-- preference?                 uint8
    |  |  |              +-- protection-type?            identityref
    |  |  |              +-- restoration-type?           identityref
    |  |  |              +-- restoration-scheme?         identityref
    |  |  |              +-- primary-reverse-path-ref* []
    |  |  |                 +-- (primary-reverse-path-exist)?
    |  |  |                    +--:(path-ref)
    |  |  |                    |  +-- primary-path-ref    leafref
    |  |  |                    +--:(path-request-ref)
    |  |  |                       +-- path-request-ref    leafref
    |  |  +--:(value)
    |  |     +-- tunnel-name?                    string
    |  |     +-- path-name?                      string
    |  |     +-- (path-role)?
    |  |     |  +--:(primary-path)
    |  |     |  +--:(secondary-path)
    |  |     |  |  +-- secondary-path!
    |  |     |  |     +-- primary-path-name?   string
    |  |     |  +--:(primary-reverse-path)
    |  |     |  |  +-- primary-reverse-path!
    |  |     |  |     +-- primary-path-name?   string
    |  |     |  +--:(secondary-reverse-path)
    |  |     |     +-- secondary-reverse-path!
    |  |     |        +-- primary-path-name?           string
    |  |     |        +-- primary-reverse-path-name?   string
    |  |     +-- k-requested-paths?              uint8
    |  |     +-- encoding?                       identityref
    |  |     +-- switching-type?                 identityref
    |  |     +-- source?                         te-types:te-node-id
    |  |     +-- destination?                    te-types:te-node-id
    |  |     +-- src-tunnel-tp-id?               binary
    |  |     +-- dst-tunnel-tp-id?               binary
    |  |     +-- bidirectional?                  boolean
    |  |     +-- te-topology-identifier
    |  |        +-- provider-id?   te-global-id
    |  |        +-- client-id?     te-global-id
    |  |        +-- topology-id?   te-topology-id
    |  +-- association-objects
    |  |  +-- association-object* [association-key]
    |  |  |  +-- association-key    string
    |  |  |  +-- type?              identityref
    |  |  |  +-- id?                uint16
    |  |  |  +-- source
    |  |  |     +-- id?     te-gen-node-id
    |  |  |     +-- type?   enumeration
    |  |  +-- association-object-extended* [association-key]
    |  |     +-- association-key    string
    |  |     +-- type?              identityref
    |  |     +-- id?                uint16
    |  |     +-- source
    |  |     |  +-- id?     te-gen-node-id
    |  |     |  +-- type?   enumeration
    |  |     +-- global-source?     uint32
    |  |     +-- extended-id?       yang:hex-string
    |  +-- optimizations
    |  |  +-- (algorithm)?
    |  |     +--:(metric) {path-optimization-metric}?
    |  |     |  +-- optimization-metric* [metric-type]
    |  |     |  |  +-- metric-type                       identityref
    |  |     |  |  +-- weight?                           uint8
    |  |     |  |  +-- explicit-route-exclude-objects
    |  |     |  |  |  +-- route-object-exclude-object* [index]
    |  |     |  |  |     +-- index                        uint32
    |  |     |  |  |     +-- (type)?
    |  |     |  |  |        +--:(numbered-node-hop)
    |  |     |  |  |        |  +-- numbered-node-hop
    |  |     |  |  |        |     +-- node-id     te-node-id
    |  |     |  |  |        |     +-- hop-type?   te-hop-type
    |  |     |  |  |        +--:(numbered-link-hop)
    |  |     |  |  |        |  +-- numbered-link-hop
    |  |     |  |  |        |     +-- link-tp-id    te-tp-id
    |  |     |  |  |        |     +-- hop-type?     te-hop-type
    |  |     |  |  |        |     +-- direction?    te-link-direction
    |  |     |  |  |        +--:(unnumbered-link-hop)
    |  |     |  |  |        |  +-- unnumbered-link-hop
    |  |     |  |  |        |     +-- link-tp-id    te-tp-id
    |  |     |  |  |        |     +-- node-id       te-node-id
    |  |     |  |  |        |     +-- hop-type?     te-hop-type
    |  |     |  |  |        |     +-- direction?    te-link-direction
    |  |     |  |  |        +--:(as-number)
    |  |     |  |  |        |  +-- as-number-hop
    |  |     |  |  |        |     +-- as-number    inet:as-number
    |  |     |  |  |        |     +-- hop-type?    te-hop-type
    |  |     |  |  |        +--:(label)
    |  |     |  |  |        |  +-- label-hop
    |  |     |  |  |        |     +-- te-label
    |  |     |  |  |        |        +-- (technology)?
    |  |     |  |  |        |        |  +--:(generic)
    |  |     |  |  |        |        |     +-- generic?
    |  |     |  |  |        |        |             rt-types:generalized-label
    |  |     |  |  |        |        +-- direction?
    |  |     |  |  |        |                te-label-direction
    |  |     |  |  |        +--:(srlg)
    |  |     |  |  |           +-- srlg
    |  |     |  |  |              +-- srlg?   uint32
    |  |     |  |  +-- explicit-route-include-objects
    |  |     |  |     +-- route-object-include-object* [index]
    |  |     |  |        +-- index                        uint32
    |  |     |  |        +-- (type)?
    |  |     |  |           +--:(numbered-node-hop)
    |  |     |  |           |  +-- numbered-node-hop
    |  |     |  |           |     +-- node-id     te-node-id
    |  |     |  |           |     +-- hop-type?   te-hop-type
    |  |     |  |           +--:(numbered-link-hop)
    |  |     |  |           |  +-- numbered-link-hop
    |  |     |  |           |     +-- link-tp-id    te-tp-id
    |  |     |  |           |     +-- hop-type?     te-hop-type
    |  |     |  |           |     +-- direction?    te-link-direction
    |  |     |  |           +--:(unnumbered-link-hop)
    |  |     |  |           |  +-- unnumbered-link-hop
    |  |     |  |           |     +-- link-tp-id    te-tp-id
    |  |     |  |           |     +-- node-id       te-node-id
    |  |     |  |           |     +-- hop-type?     te-hop-type
    |  |     |  |           |     +-- direction?    te-link-direction
    |  |     |  |           +--:(as-number)
    |  |     |  |           |  +-- as-number-hop
    |  |     |  |           |     +-- as-number    inet:as-number
    |  |     |  |           |     +-- hop-type?    te-hop-type
    |  |     |  |           +--:(label)
    |  |     |  |              +-- label-hop
    |  |     |  |                 +-- te-label
    |  |     |  |                    +-- (technology)?
    |  |     |  |                    |  +--:(generic)
    |  |     |  |                    |     +-- generic?
    |  |     |  |                    |             rt-types:generalized-label
    |  |     |  |                    +-- direction?
    |  |     |  |                            te-label-direction
    |  |     |  +-- tiebreakers
    |  |     |     +-- tiebreaker* [tiebreaker-type]
    |  |     |        +-- tiebreaker-type    identityref
    |  |     +--:(objective-function)
    |  |              {path-optimization-objective-function}?
    |  |        +-- objective-function
    |  |           +-- objective-function-type?   identityref
    |  +-- named-path-constraint?                leafref
    |  |       {te-types:named-path-constraints}?
    |  +-- te-bandwidth
    |  |  +-- (technology)?
    |  |     +--:(generic)
    |  |        +-- generic?   te-bandwidth
    |  +-- link-protection?                      identityref
    |  +-- setup-priority?                       uint8
    |  +-- hold-priority?                        uint8
    |  +-- signaling-type?                       identityref
    |  +-- path-metric-bounds
    |  |  +-- path-metric-bound* [metric-type]
    |  |     +-- metric-type    identityref
    |  |     +-- upper-bound?   uint64
    |  +-- path-affinities-values
    |  |  +-- path-affinities-value* [usage]
    |  |     +-- usage    identityref
    |  |     +-- value?   admin-groups
    |  +-- path-affinity-names
    |  |  +-- path-affinity-name* [usage]
    |  |     +-- usage            identityref
    |  |     +-- affinity-name* [name]
    |  |        +-- name    string
    |  +-- path-srlgs-lists
    |  |  +-- path-srlgs-list* [usage]
    |  |     +-- usage     identityref
    |  |     +-- values*   srlg
    |  +-- path-srlgs-names
    |  |  +-- path-srlgs-name* [usage]
    |  |     +-- usage    identityref
    |  |     +-- names*   string
    |  +-- disjointness?                         te-path-disjointness
    |  +-- explicit-route-objects-always
    |  |  +-- route-object-exclude-always* [index]
    |  |  |  +-- index                        uint32
    |  |  |  +-- (type)?
    |  |  |     +--:(numbered-node-hop)
    |  |  |     |  +-- numbered-node-hop
    |  |  |     |     +-- node-id     te-node-id
    |  |  |     |     +-- hop-type?   te-hop-type
    |  |  |     +--:(numbered-link-hop)
    |  |  |     |  +-- numbered-link-hop
    |  |  |     |     +-- link-tp-id    te-tp-id
    |  |  |     |     +-- hop-type?     te-hop-type
    |  |  |     |     +-- direction?    te-link-direction
    |  |  |     +--:(unnumbered-link-hop)
    |  |  |     |  +-- unnumbered-link-hop
    |  |  |     |     +-- link-tp-id    te-tp-id
    |  |  |     |     +-- node-id       te-node-id
    |  |  |     |     +-- hop-type?     te-hop-type
    |  |  |     |     +-- direction?    te-link-direction
    |  |  |     +--:(as-number)
    |  |  |     |  +-- as-number-hop
    |  |  |     |     +-- as-number    inet:as-number
    |  |  |     |     +-- hop-type?    te-hop-type
    |  |  |     +--:(label)
    |  |  |        +-- label-hop
    |  |  |           +-- te-label
    |  |  |              +-- (technology)?
    |  |  |              |  +--:(generic)
    |  |  |              |     +-- generic?
    |  |  |              |             rt-types:generalized-label
    |  |  |              +-- direction?       te-label-direction
    |  |  +-- route-object-include-exclude* [index]
    |  |     +-- explicit-route-usage?        identityref
    |  |     +-- index                        uint32
    |  |     +-- (type)?
    |  |        +--:(numbered-node-hop)
    |  |        |  +-- numbered-node-hop
    |  |        |     +-- node-id     te-node-id
    |  |        |     +-- hop-type?   te-hop-type
    |  |        +--:(numbered-link-hop)
    |  |        |  +-- numbered-link-hop
    |  |        |     +-- link-tp-id    te-tp-id
    |  |        |     +-- hop-type?     te-hop-type
    |  |        |     +-- direction?    te-link-direction
    |  |        +--:(unnumbered-link-hop)
    |  |        |  +-- unnumbered-link-hop
    |  |        |     +-- link-tp-id    te-tp-id
    |  |        |     +-- node-id       te-node-id
    |  |        |     +-- hop-type?     te-hop-type
    |  |        |     +-- direction?    te-link-direction
    |  |        +--:(as-number)
    |  |        |  +-- as-number-hop
    |  |        |     +-- as-number    inet:as-number
    |  |        |     +-- hop-type?    te-hop-type
    |  |        +--:(label)
    |  |        |  +-- label-hop
    |  |        |     +-- te-label
    |  |        |        +-- (technology)?
    |  |        |        |  +--:(generic)
    |  |        |        |     +-- generic?
    |  |        |        |             rt-types:generalized-label
    |  |        |        +-- direction?       te-label-direction
    |  |        +--:(srlg)
    |  |           +-- srlg
    |  |              +-- srlg?   uint32
    |  +-- path-in-segment!
    |  |  +-- label-restrictions
    |  |     +-- label-restriction* [index]
    |  |        +-- restriction?    enumeration
    |  |        +-- index           uint32
    |  |        +-- label-start
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-end
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-step
    |  |        |  +-- (technology)?
    |  |        |     +--:(generic)
    |  |        |        +-- generic?   int32
    |  |        +-- range-bitmap?   yang:hex-string
    |  +-- path-out-segment!
    |  |  +-- label-restrictions
    |  |     +-- label-restriction* [index]
    |  |        +-- restriction?    enumeration
    |  |        +-- index           uint32
    |  |        +-- label-start
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-end
    |  |        |  +-- te-label
    |  |        |     +-- (technology)?
    |  |        |     |  +--:(generic)
    |  |        |     |     +-- generic?   rt-types:generalized-label
    |  |        |     +-- direction?       te-label-direction
    |  |        +-- label-step
    |  |        |  +-- (technology)?
    |  |        |     +--:(generic)
    |  |        |        +-- generic?   int32
    |  |        +-- range-bitmap?   yang:hex-string
    |  +-- requested-metrics* [metric-type]
    |  |  +-- metric-type    identityref
    |  +-- return-srlgs?                         boolean
    |  +-- return-affinities?                    boolean
    |  +-- requested-state!
    |     +-- timer?            uint16
    |     +-- transaction-id?   string
    +-- tunnel-attributes* [tunnel-name]
    |  +-- tunnel-name               string
    |  +-- encoding?                 identityref
    |  +-- switching-type?           identityref
    |  +-- source?                   te-types:te-node-id
    |  +-- destination?              te-types:te-node-id
    |  +-- src-tunnel-tp-id?         binary
    |  +-- dst-tunnel-tp-id?         binary
    |  +-- bidirectional?            boolean
    |  +-- association-objects
    |  |  +-- association-object* [association-key]
    |  |  |  +-- association-key    string
    |  |  |  +-- type?              identityref
    |  |  |  +-- id?                uint16
    |  |  |  +-- source
    |  |  |     +-- id?     te-gen-node-id
    |  |  |     +-- type?   enumeration
    |  |  +-- association-object-extended* [association-key]
    |  |     +-- association-key    string
    |  |     +-- type?              identityref
    |  |     +-- id?                uint16
    |  |     +-- source
    |  |     |  +-- id?     te-gen-node-id
    |  |     |  +-- type?   enumeration
    |  |     +-- global-source?     uint32
    |  |     +-- extended-id?       yang:hex-string
    |  +-- protection-type?          identityref
    |  +-- restoration-type?         identityref
    |  +-- restoration-scheme?       identityref
    |  +-- te-topology-identifier
    |  |  +-- provider-id?   te-global-id
    |  |  +-- client-id?     te-global-id
    |  |  +-- topology-id?   te-topology-id
    |  +-- te-bandwidth
    |  |  +-- (technology)?
    |  |     +--:(generic)
    |  |        +-- generic?   te-bandwidth
    |  +-- link-protection?          identityref
    |  +-- setup-priority?           uint8
    |  +-- hold-priority?            uint8
    |  +-- signaling-type?           identityref
    |  +-- hierarchy
    |     +-- dependency-tunnels
    |     |  +-- dependency-tunnel* [name]
    |     |  |  +-- name              -> /te:te/tunnels/tunnel/name
    |     |  |  +-- encoding?         identityref
    |     |  |  +-- switching-type?   identityref
    |     |  +-- dependency-tunnel-attributes* [name]
    |     |     +-- name              leafref
    |     |     +-- encoding?         identityref
    |     |     +-- switching-type?   identityref
    |     +-- hierarchical-link
    |        +-- local-te-node-id?         te-types:te-node-id
    |        +-- local-te-link-tp-id?      te-types:te-tp-id
    |        +-- remote-te-node-id?        te-types:te-node-id
    |        +-- te-topology-identifier
    |           +-- provider-id?   te-global-id
    |           +-- client-id?     te-global-id
    |           +-- topology-id?   te-topology-id
    +-- synchronization* []
       +-- svec
       |  +-- relaxable?           boolean
       |  +-- disjointness?        te-path-disjointness
       |  +-- request-id-number*   uint32
       +-- svec-constraints
       |  +-- path-metric-bound* [metric-type]
       |     +-- metric-type    identityref
       |     +-- upper-bound?   uint64
       +-- path-srlgs-lists
       |  +-- path-srlgs-list* [usage]
       |     +-- usage     identityref
       |     +-- values*   srlg
       +-- path-srlgs-names
       |  +-- path-srlgs-name* [usage]
       |     +-- usage    identityref
       |     +-- names*   string
       +-- exclude-objects
       |  +-- excludes* []
       |     +-- (type)?
       |        +--:(numbered-node-hop)
       |        |  +-- numbered-node-hop
       |        |     +-- node-id     te-node-id
       |        |     +-- hop-type?   te-hop-type
       |        +--:(numbered-link-hop)
       |        |  +-- numbered-link-hop
       |        |     +-- link-tp-id    te-tp-id
       |        |     +-- hop-type?     te-hop-type
       |        |     +-- direction?    te-link-direction
       |        +--:(unnumbered-link-hop)
       |        |  +-- unnumbered-link-hop
       |        |     +-- link-tp-id    te-tp-id
       |        |     +-- node-id       te-node-id
       |        |     +-- hop-type?     te-hop-type
       |        |     +-- direction?    te-link-direction
       |        +--:(as-number)
       |        |  +-- as-number-hop
       |        |     +-- as-number    inet:as-number
       |        |     +-- hop-type?    te-hop-type
       |        +--:(label)
       |           +-- label-hop
       |              +-- te-label
       |                 +-- (technology)?
       |                 |  +--:(generic)
       |                 |     +-- generic?
       |                 |             rt-types:generalized-label
       |                 +-- direction?       te-label-direction
       +-- optimizations
          +-- (algorithm)?
             +--:(metric) {te-types:path-optimization-metric}?
             |  +-- optimization-metric* [metric-type]
             |     +-- metric-type    identityref
             |     +-- weight?        uint8
             +--:(objective-function)
                      {te-types:path-optimization-objective-function}?
                +-- objective-function
                   +-- objective-function-type?   identityref
  augment /te:tunnels-path-compute/te:output/te:path-compute-result:
    +--ro response* [response-id]
       +--ro response-id                         uint32
       +--ro computed-paths-properties
       |  +--ro computed-path-properties* [k-index]
       |     +--ro k-index            uint8
       |     +--ro path-properties
       |        +--ro path-metric* [metric-type]
       |        |  +--ro metric-type           identityref
       |        |  +--ro accumulative-value?   uint64
       |        +--ro path-affinities-values
       |        |  +--ro path-affinities-value* [usage]
       |        |     +--ro usage    identityref
       |        |     +--ro value?   admin-groups
       |        +--ro path-affinity-names
       |        |  +--ro path-affinity-name* [usage]
       |        |     +--ro usage            identityref
       |        |     +--ro affinity-name* [name]
       |        |        +--ro name    string
       |        +--ro path-srlgs-lists
       |        |  +--ro path-srlgs-list* [usage]
       |        |     +--ro usage     identityref
       |        |     +--ro values*   srlg
       |        +--ro path-srlgs-names
       |        |  +--ro path-srlgs-name* [usage]
       |        |     +--ro usage    identityref
       |        |     +--ro names*   string
       |        +--ro path-route-objects
       |        |  +--ro path-route-object* [index]
       |        |     +--ro index                        uint32
       |        |     +--ro (type)?
       |        |        +--:(numbered-node-hop)
       |        |        |  +--ro numbered-node-hop
       |        |        |     +--ro node-id     te-node-id
       |        |        |     +--ro hop-type?   te-hop-type
       |        |        +--:(numbered-link-hop)
       |        |        |  +--ro numbered-link-hop
       |        |        |     +--ro link-tp-id    te-tp-id
       |        |        |     +--ro hop-type?     te-hop-type
       |        |        |     +--ro direction?    te-link-direction
       |        |        +--:(unnumbered-link-hop)
       |        |        |  +--ro unnumbered-link-hop
       |        |        |     +--ro link-tp-id    te-tp-id
       |        |        |     +--ro node-id       te-node-id
       |        |        |     +--ro hop-type?     te-hop-type
       |        |        |     +--ro direction?    te-link-direction
       |        |        +--:(as-number)
       |        |        |  +--ro as-number-hop
       |        |        |     +--ro as-number    inet:as-number
       |        |        |     +--ro hop-type?    te-hop-type
       |        |        +--:(label)
       |        |           +--ro label-hop
       |        |              +--ro te-label
       |        |                 +--ro (technology)?
       |        |                 |  +--:(generic)
       |        |                 |     +--ro generic?
       |        |                 |             rt-types:generalized-label
       |        |                 +--ro direction?
       |        |                         te-label-direction
       |        +--ro te-bandwidth
       |        |  +--ro (technology)?
       |        |     +--:(generic)
       |        |        +--ro generic?   te-bandwidth
       |        +--ro disjointness-type?
       |                te-types:te-path-disjointness
       +--ro computed-path-error-infos
       |  +--ro computed-path-error-info* []
       |     +--ro error-description?   string
       |     +--ro error-timestamp?     yang:date-and-time
       |     +--ro error-reason?        identityref
       +--ro tunnel-ref?                         te:tunnel-ref
       +--ro (path-role)?
          +--:(primary)
          |  +--ro primary-path-ref?             leafref
          +--:(primary-reverse)
          |  +--ro primary-reverse-path-ref?     leafref
          +--:(secondary)
          |  +--ro secondary-path-ref?           leafref
          +--:(secondary-reverse)
             +--ro secondary-reverse-path-ref?   leafref
  augment /te:tunnels-actions/te:input/te:tunnel-info/te:filter-type:
    +--:(path-compute-transactions)
       +-- path-compute-transaction-id*   string
  augment /te:tunnels-actions/te:output:
    +--ro path-computed-delete-result
       +--ro path-compute-transaction-id*   string
]]></artwork></figure>

</section>
<section anchor="pc-yang"><name>YANG module</name>

<figure title="TE path computation YANG module" anchor="fig-pc-yang"><sourcecode type="yang" markers="true" name="ietf-te-path-computation@2022-01-24.yang"><![CDATA[
module ietf-te-path-computation {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-te-path-computation";
  prefix te-pc;

  import ietf-te {
    prefix te;
    reference
      "RFCYYYY: A YANG Data Model for Traffic Engineering Tunnels
       and Interfaces";
  }

  /* Note: The RFC Editor will replace YYYY with the number assigned
     to the RFC once draft-ietf-teas-yang-te becomes an RFC.*/

  import ietf-te-types {
    prefix te-types;
    reference
      "RFC8776: Common YANG Data Types for Traffic Engineering.";
  }

  organization
    "Traffic Engineering Architecture and Signaling (TEAS)
     Working Group";
  contact
    "WG Web:   <http://tools.ietf.org/wg/teas/>
     WG List:  <mailto:teas@ietf.org>

     Editor:   Italo Busi
               <mailto:italo.busi@huawei.com>

     Editor:   Sergio Belotti
               <mailto:sergio.belotti@nokia.com>

     Editor:   Victor Lopez
               <mailto:victor.lopez@nokia.com>

     Editor:   Oscar Gonzalez de Dios
               <mailto:oscar.gonzalezdedios@telefonica.com>

     Editor:   Anurag Sharma
               <mailto:ansha@google.com>

     Editor:   Yan Shi
               <mailto:shiyan49@chinaunicom.cn>

     Editor:   Ricard Vilalta
               <mailto:ricard.vilalta@cttc.es>

     Editor:   Karthik Sethuraman
               <mailto:karthik.sethuraman@necam.com>

     Editor:   Michael Scharf
               <mailto:michael.scharf@gmail.com>

     Editor:   Daniele Ceccarelli
               <mailto:daniele.ceccarelli@ericsson.com>
     
    ";
  description
    "This module defines a YANG data model for requesting Traffic
     Engineering (TE) path computation. The YANG model defined in
     this document is based on RPCs augmenting the RPCs defined in
     the generic TE module (ietf-te).
     The model fully conforms to the
     Network Management Datastore Architecture (NMDA).

     Copyright (c) 2022 IETF Trust and the persons
     identified as authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject
     to the license terms contained in, the Simplified BSD License
     set forth in Section 4.c of the IETF Trust's Legal Provisions

     Relating to IETF Documents
     (http://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC XXXX; see
     the RFC itself for full legal notices.";

  // RFC Ed.: replace XXXX with actual RFC number and remove
  // this note
  // replace the revision date with the module publication date
  // the format is (year-month-day)

  revision 2022-01-24 {
    description
      "Initial revision";
    reference
      "RFC XXXX: A YANG Data Model for requesting path computation";
  }

  // RFC Ed.: replace XXXX with actual RFC number and remove
  // this note

  /*
   * Identities
   */

  identity svec-metric-type {
    description
      "Base identity for SVEC metric type.";
    reference
      "RFC5541: Encoding of Objective Functions in the Path
       Computation Element Communication Protocol (PCEP).";
  }

  identity svec-metric-cumul-te {
    base svec-metric-type;
    description
      "Cumulative TE cost.";
    reference
      "RFC5541: Encoding of Objective Functions in the Path
       Computation Element Communication Protocol (PCEP).";
  }

  identity svec-metric-cumul-igp {
    base svec-metric-type;
    description
      "Cumulative IGP cost.";
    reference
      "RFC5541: Encoding of Objective Functions in the Path
       Computation Element Communication Protocol (PCEP).";
  }

  identity svec-metric-cumul-hop {
    base svec-metric-type;
    description
      "Cumulative Hop path metric.";
    reference
      "RFC8776: Common YANG Data Types for Traffic Engineering.";
  }

  identity svec-metric-aggregate-bandwidth-consumption {
    base svec-metric-type;
    description
      "Aggregate bandwidth consumption.";
    reference
      "RFC5541: Encoding of Objective Functions in the Path
       Computation Element Communication Protocol (PCEP).";
  }

  identity svec-metric-load-of-the-most-loaded-link {
    base svec-metric-type;
    description
      "Load of the most loaded link.";
    reference
      "RFC5541: Encoding of Objective Functions in the Path
       Computation Element Communication Protocol (PCEP).";
  }

  identity tunnel-action-path-compute-delete {
    base te:tunnel-actions-type;
    description
      "Action type to delete the transient states
       of computed paths, as described in section 3.3.1 of
       RFC XXXX.";
    reference
      "RFC XXXX: A YANG Data Model for requesting path computation";
  }

  /*
   * Groupings
   */

  grouping protection-restoration-properties {
    description
      "This grouping defines the restoration and protection types
       for a path in the path computation request.";
    leaf protection-type {
      type identityref {
        base te-types:lsp-protection-type;
      }
      default "te-types:lsp-protection-unprotected";
      description
        "LSP protection type.";
    }
    leaf restoration-type {
      type identityref {
        base te-types:lsp-restoration-type;
      }
      default "te-types:lsp-restoration-restore-any";
      description
        "LSP restoration type.";
    }
    leaf restoration-scheme {
      type identityref {
        base te-types:restoration-scheme-type;
      }
      default "te-types:restoration-scheme-preconfigured";
      description
        "LSP restoration scheme.";
    }
  } // grouping protection-restoration-properties

  grouping requested-info {
    description
      "This grouping defines the information (e.g., metrics)
       which is requested, in the path computation request, to be
       returned in the path computation response.";
    list requested-metrics {
      key "metric-type";
      description
        "The list of the requested metrics.
         The metrics listed here must be returned in the response.
         Returning other metrics in the response is optional.";
      leaf metric-type {
        type identityref {
          base te-types:path-metric-type;
        }
        description
          "The metric that must be returned in the response";
      }
    }
    leaf return-srlgs {
      type boolean;
      default "false";
      description
        "If true, path srlgs must be returned in the response.
         If false, returning path srlgs in the response optional.";
    }
    leaf return-affinities {
      type boolean;
      default "false";
      description
        "If true, path affinities must be returned in the response.
         If false, returning path affinities in the response is
         optional.";
    }
  } // grouping requested-info

  grouping requested-state {
    description
      "Configuration for the transient state used
       to report the computed path";
    container requested-state {
      presence
        "Request temporary reporting of the computed path state";
      description
        "Configures attributes for the temporary reporting of the
         computed path state (e.g., expiration timer).";
      leaf timer {
        type uint16;
        units "minutes";
        default "10";
        description
          "The timeout after which the transient state reporting
          the computed path should be removed.";
      }
      leaf transaction-id {
        type string;
        description
          "The transaction-id associated with this path computation
          to be used for fast deletion of the transient states
          associated with multiple path computations.

          This transaction-id can be used to explicitly delete all
          the transient states of all the computed paths associated
          with the same transaction-id.

          When one path associated with a transaction-id is setup,
          the transient states of all the other computed paths
          with the same transaction-id are automatically removed.

          If not specified, the transient state is removed only
          when the timer expires (when the timer is specified)
          or not created at all (stateless path computation,
          when the timer is not specified).";
      }
    }
  } // grouping requested-state

  grouping reported-state {
    description
      "This grouping defines the information, returned in the path
       computation response, reporting the transient state related
       to the computed path";
    leaf tunnel-ref {
      type te:tunnel-ref;
      description
        "
         Reference to the tunnel that reports the transient state
         of the computed path.

         If no transient state is created, this attribute is
         omitted.
        ";
    }
    choice path-role {
      description
        "The transient state of the computed path can be reported
         as a primary, primary-reverse, secondary or
         a secondary-reverse path of a te-tunnel";
      case primary {
        leaf primary-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:primary-paths/te:primary-path/"
               + "te:name";
          }
          must '../tunnel-ref' {
            description
              "The primary-path name can only be reported
               if also the tunnel name is reported.";
          }
          description
            "
             Reference to the primary-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case primary
      case primary-reverse {
        leaf primary-reverse-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:primary-paths/te:primary-path/"
               + "te:name";
          }
          must '../tunnel-ref' {
            description
              "The primary-reverse-path name can only be reported
               if also the tunnel name is reported.";
          }
          description
            "
             Reference to the primary-reverse-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case primary-reverse
      case secondary {
        leaf secondary-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:secondary-paths/te:secondary-path/"
               + "te:name";
          }
          must '../tunnel-ref' {
            description
              "The secondary-path name can only be reported
               if also the tunnel name is reported.";
          }
          description
            "
             Reference to the secondary-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case secondary
      case secondary-reverse {
        leaf secondary-reverse-path-ref {
          type leafref {
            path "/te:te/te:tunnels/"
               + "te:tunnel[te:name=current()/../tunnel-ref]/"
               + "te:secondary-reverse-paths/"
               + "te:secondary-reverse-path/te:name";
          }
          must '../tunnel-ref' {
            description
              "The secondary-reverse-path name can only be reported
               if also the tunnel name is reported.";
          }
          description
            "
             Reference to the secondary-reverse-path that reports
             the transient state of the computed path.

             If no transient state is created,
             this attribute is omitted.
            ";
        }
      } // case secondary
    } // choice path
  } // grouping reported-state

  grouping synchronization-constraints {
    description
      "Global constraints applicable to synchronized path
       computation requests.";
    container svec-constraints {
      description
        "global svec constraints";
      list path-metric-bound {
        key "metric-type";
        description
          "list of bound metrics";
        leaf metric-type {
          type identityref {
            base svec-metric-type;
          }
          description
            "SVEC metric type.";
          reference
            "RFC5541: Encoding of Objective Functions in the Path
            Computation Element Communication Protocol (PCEP).";
        }
        leaf upper-bound {
          type uint64;
          description
            "Upper bound on SVEC metric";
        }
      }
    }
    uses te-types:generic-path-srlgs;
    container exclude-objects {
      description
        "Resources to be excluded";
      list excludes {
        description
          "List of Explicit Route Objects to always exclude
           from synchronized path computation";
        uses te-types:explicit-route-hop;
      }
    }
  } // grouping synchronization-constraints

  grouping synchronization-optimization {
    description
      "Optimizations applicable to synchronized path
       computation requests.";
    container optimizations {
      description
        "The objective function container that includes attributes
         to impose when computing a synchronized set of paths";
      choice algorithm {
        description
          "Optimizations algorithm.";
        case metric {
          if-feature "te-types:path-optimization-metric";
          list optimization-metric {
            key "metric-type";
            description
              "svec path metric type";
            leaf metric-type {
              type identityref {
                base svec-metric-type;
              }
              description
                "TE path metric type usable for computing a set of
                synchronized requests";
            }
            leaf weight {
              type uint8;
              description
                "Metric normalization weight";
            }
          }
        }
        case objective-function {
          if-feature
            "te-types:path-optimization-objective-function";
          container objective-function {
            description
              "The objective function container that includes
               attributes to impose when computing a TE path";
            leaf objective-function-type {
              type identityref {
                base te-types:objective-function-type;
              }
              default "te-types:of-minimize-cost-path";
              description
                "Objective function entry";
            }
          }
        }
      }
    }
  } // grouping synchronization-optimization

  grouping synchronization-info {
    description
      "Information for synchronized path computation requests.";
    list synchronization {
      description
        "List of Synchronization VECtors.";
      container svec {
        description
          "Synchronization VECtor";
        leaf relaxable {
          type boolean;
          default "true";
          description
            "If this leaf is true, path computation process is
             free to ignore svec content.
             Otherwise, it must take into account this svec.";
        }
        uses te-types:generic-path-disjointness;
        leaf-list request-id-number {
          type uint32;
          description
            "This list reports the set of path computation
             requests that must be synchronized.";
        }
      }
      uses synchronization-constraints;
      uses synchronization-optimization;
    }
  } // grouping synchronization-info

  /*
   * Augment TE RPCs
   */

  augment "/te:tunnels-path-compute/te:input/te:path-compute-info" {
    description
      "Path Computation RPC input";
    list path-request {
      key "request-id";
      description
        "The list of the requested paths to be computed";
      leaf request-id {
        type uint32;
        mandatory true;
        description
          "Each path computation request is uniquely identified
           within the RPC request by the request-id-number.";
      }
      choice tunnel-attributes {
        default "value";
        description
          "Whether the tunnel attributes are specified by value
           within this path computation request or by reference.
           The reference could be either to an existing te-tunnel
           or to an entry in the tunnel-attributes list";
        case reference {
          container tunnel-reference {
            description
              "Attributes for a requested path that belongs to
              either an exiting te-tunnel or to an entry in the
              tunnel-attributes list.";
            choice tunnel-exist {
              description
                "Whether the tunnel reference is to an existing
                te-tunnel or to an entry in the tunnel-attributes
                list";
              case tunnel-ref {
                leaf tunnel-ref {
                  type te:tunnel-ref;
                  mandatory true;
                  description
                    "The referenced te-tunnel instance";
                }
              } // case tunnel-ref
              case tunnel-attributes-ref {
                leaf tunnel-attributes-ref {
                  type leafref {
                    path "/te:tunnels-path-compute/"
                      + "te:path-compute-info/"
                      + "te-pc:tunnel-attributes/te-pc:tunnel-name";
                  }
                  mandatory true;
                  description
                    "The referenced te-tunnel instance";
                }
              } // case tunnel-attributes-ref 
            } // choice tunnel-exist
            leaf path-name {
              type string;
              description
                "TE path name.";
            }
            choice path-role {
              mandatory true;
              description
                "Whether this path is a primary, or a reverse
                primary, or a secondary, or a reverse secondary
                path.";
              case primary-path {
                container primary-path {
                  presence "Indicates that the requested path
                            is a primary path";
                  description
                    "TE primary path";
                  uses te:path-preference;
                  uses te:k-requested-paths;
                } // container primary-path
              } // case primary-path
              case secondary-path {
                container secondary-path {
                  description
                    "TE secondary path";
                  uses te:path-preference;
                  uses protection-restoration-properties;
                  list primary-path-ref {
                    min-elements 1;
                    description
                      "The list of primary paths that reference
                      this path as a candidate secondary path";
                    choice primary-path-exist {
                      description
                        "Whether the path reference is to an existing
                        te-tunnel path or to another path request";
                      case path-ref {
                        leaf primary-path-ref {
                          type leafref {
                            path "/te:te/te:tunnels/te:tunnel"
                              + "[te:name=current()/../../../"
                              + "tunnel-ref]/te:primary-paths/"
                              + "te:primary-path/te:name";
                          }
                          must '../../../tunnel-ref' {
                            description
                              "The primary-path can be referenced
                              if also the tunnel is referenced.";
                          }
                          mandatory true;
                          description
                            "The referenced primary path";
                        }
                      } // case path-ref
                      case path-request-ref {
                        leaf path-request-ref {
                          type leafref {
                            path "/te:tunnels-path-compute/"
                              + "te:path-compute-info/"
                              + "te-pc:path-request/"
                              + "te-pc:request-id";
                          }
                          mandatory true;
                          description
                            "The referenced primary path request";
                        }
                      } // case path-request-ref 
                    } // choice primary-path-exist
                  } // list primary-path-ref
                } // container secondary-path
              } // case secondary-path
              case primary-reverse-path {
                container primary-reverse-path {
                  description
                    "TE primary reverse path";
                  choice primary-path-exist {
                    description
                      "Whether the path reference to the primary
                      paths for which this path is the reverse-path
                      is to an existing te-tunnel path or to
                      another path request.";
                    case path-ref {
                      leaf primary-path-ref {
                        type leafref {
                          path "/te:te/te:tunnels/te:tunnel[te:name"
                            + "=current()/../../tunnel-ref]/"
                            + "te:primary-paths/te:primary-path/"
                            + "te:name";
                        }
                        must '../../tunnel-ref' {
                          description
                            "The primary-path can be referenced
                            if also the tunnel is referenced.";
                        }
                        mandatory true;
                        description
                          "The referenced primary path";
                      }
                    } // case path-ref
                    case path-request-ref {
                      leaf path-request-ref {
                        type leafref {
                          path "/te:tunnels-path-compute/"
                            + "te:path-compute-info/"
                            + "te-pc:path-request/"
                            + "te-pc:request-id";
                        }
                        mandatory true;
                        description
                          "The referenced primary path request";
                      }
                    } // case path-request-ref 
                  } // choice primary-path-exist
                } // container primary-reverse-path
              } // case primary-reverse-path
              case secondary-reverse-path {
                container secondary-reverse-path {
                  description
                    "TE secondary reverse path";
                  uses te:path-preference;
                  uses protection-restoration-properties;
                  list primary-reverse-path-ref {
                    min-elements 1;
                    description
                      "The list of primary reverse paths that
                      reference this path as a candidate
                      secondary reverse path";
                    choice primary-reverse-path-exist {
                      description
                        "Whether the path reference is to an existing
                        te-tunnel path or to another path request";
                      case path-ref {
                        leaf primary-path-ref {
                          type leafref {
                            path "/te:te/te:tunnels/te:tunnel"
                              + "[te:name=current()/../../../"
                              + "tunnel-ref]/te:primary-paths/"
                              + "te:primary-path/te:name";
                          }
                          must '../../../tunnel-ref' {
                            description
                              "The primary-path can be referenced
                              if also the tunnel is referenced.";
                          }
                          mandatory true;
                          description
                            "The referenced primary path";
                        }
                      } // case path-ref
                      case path-request-ref {
                        leaf path-request-ref {
                          type leafref {
                            path "/te:tunnels-path-compute/"
                              + "te:path-compute-info/"
                              + "te-pc:path-request/"
                              + "te-pc:request-id";
                          }
                          mandatory true;
                          description
                            "The referenced primary reverse path
                            request";
                        }
                      } // case path-request-ref 
                    } // choice primary-reverse-path-exist
                  } // list primary-reverse-path-ref
                } // container secondary-reverse-path
              } // case secondary-reverse-path
            } // choice tunnel-path-role
          }
        } // case reference
        case value {
          leaf tunnel-name {
            type string;
            description
              "TE tunnel name.";
          }
          leaf path-name {
            type string;
            description
              "TE path name.";
          }
          choice path-role {
            when 'not (./source) and not (./destination) and
                  not (./src-tunnel-tp-id) and
                  not (./dst-tunnel-tp-id)' {
              description
                "When the tunnel attributes are specified by value
                within this path computation, it is assumed that the
                requested path will be the only path of a tunnel.

                If the requested path is a transit segment path, it
                could be of any type. Otherwise it could only be a
                primary path.";
            }
            default primary-path;
            description
              "Indicates whether the requested path is a primary
              path, a secondary path, a reverse primary path or a
              reverse secondary path.";
            case primary-path {
              description
                "The requested path is a primary path.";
            }
            container secondary-path {
              presence
                "Indicates that the requested path is a secondary
                path.";
              description
                "The name of the primary path which the requested
                primary reverse path belongs to.";
              leaf primary-path-name {
                type string;
                description
                  "TE primary path name.";
              }
            } // container secondary-path
            container primary-reverse-path {
              presence
                "Indicates that the requested path is a primary
                reverse path.";
              description
                "The name of the primary path which the requested
                primary reverse path belongs to.";
              leaf primary-path-name {
                type string;
                description
                  "TE primary path name.";
              }
            } // container primary-reverse-path
            container secondary-reverse-path {
              presence
                "Indicates that the requested path is a secondary
                reverse path.";
              description
                "The names of the primary path and of the primary
                reverse path which the requested secondary reverse
                path belongs to.";
              leaf primary-path-name {
                type string;
                description
                  "TE primary path name.";
              }
              leaf primary-reverse-path-name {
                type string;
                description
                  "TE primary reverse path name.";
              }
            } // container primary-reverse-path
          } // choice path-role
          uses te:k-requested-paths;
          uses te:encoding-and-switching-type;
          uses te:tunnel-common-attributes;
          uses te-types:te-topology-identifier;
        } // case value
      } // choice tunnel-attributes
      uses te:path-compute-info;
      uses requested-info;
      uses requested-state;
    }
    list tunnel-attributes {
      key "tunnel-name";
      description
        "Tunnel attributes common to multiple request paths";
      leaf tunnel-name {
        type string;
        description
          "TE tunnel name.";
      }
      uses te:encoding-and-switching-type;
      uses te:tunnel-common-attributes;
      uses te:tunnel-associations-properties;
      uses protection-restoration-properties;
      uses te-types:tunnel-constraints;
      uses te:tunnel-hierarchy-properties {
        augment "hierarchy/dependency-tunnels" {
          description
            "Augment with the list of dependency tunnel requests.";
          list dependency-tunnel-attributes {
            key "name";
            description
              "A tunnel request entry that this tunnel request can
               potentially depend on.";
            leaf name {
              type leafref {
                path "/te:tunnels-path-compute/"
                   + "te:path-compute-info/te-pc:tunnel-attributes/"
                   + "te-pc:tunnel-name";
              }
              description
                "Dependency tunnel request name.";
            }
            uses te:encoding-and-switching-type;
          }
        }
      }
    }
    uses synchronization-info;
  } // path-compute rpc input

  augment "/te:tunnels-path-compute/te:output/"
        + "te:path-compute-result" {
    description
      "Path Computation RPC output";
    list response {
      key "response-id";
      config false;
      description
        "response";
      leaf response-id {
        type uint32;
        description
          "The response-id has the same value of the
           corresponding request-id.";
      }
      uses te:path-computation-response;
      uses reported-state;
    }
  } // path-compute rpc output

  augment "/te:tunnels-actions/te:input/te:tunnel-info/"
        + "te:filter-type" {
    description
      "Augment Tunnels Action RPC input filter types";
    case path-compute-transactions {
      when "derived-from-or-self(../te:action-info/te:action, "
         + "'tunnel-action-path-compute-delete')";
      description
        "Path Delete Action RPC";
      leaf-list path-compute-transaction-id {
        type string;
        description
          "The list of the transaction-id values of the
           transient states to be deleted";
      }
    }
  } // path-delete rpc input

  augment "/te:tunnels-actions/te:output" {
    description
      "Augment Tunnels Action RPC output with path delete result";
    container path-computed-delete-result {
      description
        "Path Delete RPC output";
      leaf-list path-compute-transaction-id {
        type string;
        description
          "The list of the transaction-id values of the
           transient states that have been successfully deleted";
      }
    }
  } // path-delete rpc output
}
]]></sourcecode></figure>

</section>
</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>This document describes use cases of requesting Path Computation
   using YANG data models, which could be used at the ABNO Control
   Interface <xref target="RFC7491"/> and/or between controllers in ACTN <xref target="RFC8453"/>. As
   such, it does not introduce any new security considerations compared
   to the ones related to YANG specification, ABNO specification and
   ACTN Framework defined in <xref target="RFC7950"/>, <xref target="RFC7491"/> and <xref target="RFC8453"/>.</t>

<t>The YANG module defined in this document is designed to be accessed via
   the NETCONF protocol <xref target="RFC6241"/> or RESTCONF protocol <xref target="RFC8040"/>. The
   lowest NETCONF layer is the secure transport layer, and the
   mandatory-to-implement secure transport is Secure Shell (SSH)
   <xref target="RFC6242"/>. The lowest RESTCONF layer is HTTPS, and the mandatory-to-
   implement secure transport is TLS <xref target="RFC8446"/>.</t>

<t>The Network Configuration Access Control Model (NACM) 
   <xref target="RFC8341"/> provides the means to
   restrict access for particular NETCONF or RESTCONF users to a
   preconfigured subset of all available NETCONF or RESTCONF protocol
   operations and content.</t>

<t>The YANG module defined in this document augments the "tunnels-path-compute" and the "tunnel-actions" RPCs defined in <xref target="I-D.ietf-teas-yang-te"/>. The security considerations provided in <xref target="I-D.ietf-teas-yang-te"/> are also applicable to the YANG module
   defined in this document.</t>

<t>Some of the RPC operations defined in this YANG module may be considered
   sensitive or vulnerable in some network environments.  It is thus
   important to control access to these operations. These are the
   operations and their sensitivity/vulnerability:</t>

<t>"te-pc:response/computed-paths-properties": provides the same information provided by the "te:computed-paths-properties" defined in <xref target="I-D.ietf-teas-yang-te"/>. The security considerations provided in <xref target="I-D.ietf-teas-yang-te"/> for the TE tunnel state apply also to this subtree.</t>

<t>"te-pc:response/te-pc:tunnel-ref", "te-pc:response/te-pc:primary-path-ref", "te-pc:response/te-pc:primary-reverse-path-ref", "te-pc:response/te-pc:secondary-path-ref" and "te-pc:response/te-pc:secondary-reverse-path-ref" provides a reference where the same information provided in "te-pc:response/computed-paths-properties" is temporarly stored with the operational datastore (see <xref target="temp-state"/>). Therefore access to this information does not provide any additional security issue that the information provided with "te-pc:response/computed-paths-properties".</t>

<t>"/te:tunnels-actions": the YANG model defined in this document augments this action with a new action type that allows deleting the transient states of computed paths (see <xref target="temp-state"/>). A malicious use of this action would have no impact on the paths carrying live traffic but it would preclude the client from using the "transient states" to request the set-up of exactly that path, if still available.</t>

<t>The security considerations spelled out in the
   YANG specification <xref target="RFC7950"/> apply for this document as well.</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>This document registers the following URIs in the "ns" subregistry
   within the "IETF XML registry" <xref target="RFC3688"/>.</t>

<figure><artwork><![CDATA[
      URI: urn:ietf:params:xml:ns:yang:ietf-te-path-computation
      Registrant Contact:  The IESG.
      XML: N/A, the requested URI is an XML namespace.
]]></artwork></figure>

<t>This document registers a YANG module in the "YANG Module Names"
   registry <xref target="RFC7950"/>.</t>

<figure><artwork><![CDATA[
      name:      ietf-te-path-computation
      namespace: urn:ietf:params:xml:ns:yang:ietf-te-path-computation
      prefix:    te-pc
      reference: this document
]]></artwork></figure>

</section>


  </middle>

  <back>


    <references title='Normative References'>





<reference anchor='RFC6241' target='https://www.rfc-editor.org/info/rfc6241'>
<front>
<title>Network Configuration Protocol (NETCONF)</title>
<author fullname='R. Enns' initials='R.' role='editor' surname='Enns'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'><organization/></author>
<author fullname='A. Bierman' initials='A.' role='editor' surname='Bierman'><organization/></author>
<date month='June' year='2011'/>
<abstract><t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices.  It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages.  The NETCONF protocol operations are realized as remote procedure calls (RPCs).  This document obsoletes RFC 4741.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6241'/>
<seriesInfo name='DOI' value='10.17487/RFC6241'/>
</reference>



<reference anchor='RFC8040' target='https://www.rfc-editor.org/info/rfc8040'>
<front>
<title>RESTCONF Protocol</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<date month='January' year='2017'/>
<abstract><t>This document describes an HTTP-based protocol that provides a programmatic interface for accessing data defined in YANG, using the datastore concepts defined in the Network Configuration Protocol (NETCONF).</t></abstract>
</front>
<seriesInfo name='RFC' value='8040'/>
<seriesInfo name='DOI' value='10.17487/RFC8040'/>
</reference>



<reference anchor='RFC8795' target='https://www.rfc-editor.org/info/rfc8795'>
<front>
<title>YANG Data Model for Traffic Engineering (TE) Topologies</title>
<author fullname='X. Liu' initials='X.' surname='Liu'><organization/></author>
<author fullname='I. Bryskin' initials='I.' surname='Bryskin'><organization/></author>
<author fullname='V. Beeram' initials='V.' surname='Beeram'><organization/></author>
<author fullname='T. Saad' initials='T.' surname='Saad'><organization/></author>
<author fullname='H. Shah' initials='H.' surname='Shah'><organization/></author>
<author fullname='O. Gonzalez de Dios' initials='O.' surname='Gonzalez de Dios'><organization/></author>
<date month='August' year='2020'/>
<abstract><t>This document defines a YANG data model for representing, retrieving, and manipulating Traffic Engineering (TE) Topologies. The model serves as a base model that other technology-specific TE topology models can augment.</t></abstract>
</front>
<seriesInfo name='RFC' value='8795'/>
<seriesInfo name='DOI' value='10.17487/RFC8795'/>
</reference>


<reference anchor='I-D.ietf-teas-yang-te'>
   <front>
      <title>A YANG Data Model for Traffic Engineering Tunnels, Label Switched Paths and Interfaces</title>
      <author fullname='Tarek Saad'>
	 <organization>Juniper Networks</organization>
      </author>
      <author fullname='Rakesh Gandhi'>
	 <organization>Cisco Systems Inc</organization>
      </author>
      <author fullname='Xufeng Liu'>
	 <organization>Volta Networks</organization>
      </author>
      <author fullname='Vishnu Pavan Beeram'>
	 <organization>Juniper Networks</organization>
      </author>
      <author fullname='Igor Bryskin'>
	 <organization>Individual</organization>
      </author>
      <author fullname='Oscar Gonzalez de Dios'>
	 <organization>Telefonica</organization>
      </author>
      <date day='7' month='February' year='2022'/>
      <abstract>
	 <t>   This document defines a YANG data model for the provisioning and
   management of Traffic Engineering (TE) tunnels, Label Switched Paths
   (LSPs), and interfaces.  The model is divided into YANG modules that
   classify data into generic, device-specific, technology agnostic, and
   technology-specific elements.

   This model covers data for configuration, operational state, remote
   procedural calls, and event notifications.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-teas-yang-te-29'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-teas-yang-te-29.txt' type='TXT'/>
</reference>



<reference anchor='RFC7950' target='https://www.rfc-editor.org/info/rfc7950'>
<front>
<title>The YANG 1.1 Data Modeling Language</title>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<date month='August' year='2016'/>
<abstract><t>YANG is a data modeling language used to model configuration data, state data, Remote Procedure Calls, and notifications for network management protocols.  This document describes the syntax and semantics of version 1.1 of the YANG language.  YANG version 1.1 is a maintenance release of the YANG language, addressing ambiguities and defects in the original specification.  There are a small number of backward incompatibilities from YANG version 1.  This document also specifies the YANG mappings to the Network Configuration Protocol (NETCONF).</t></abstract>
</front>
<seriesInfo name='RFC' value='7950'/>
<seriesInfo name='DOI' value='10.17487/RFC7950'/>
</reference>



<reference anchor='RFC5440' target='https://www.rfc-editor.org/info/rfc5440'>
<front>
<title>Path Computation Element (PCE) Communication Protocol (PCEP)</title>
<author fullname='JP. Vasseur' initials='JP.' role='editor' surname='Vasseur'><organization/></author>
<author fullname='JL. Le Roux' initials='JL.' role='editor' surname='Le Roux'><organization/></author>
<date month='March' year='2009'/>
<abstract><t>This document specifies the Path Computation Element (PCE) Communication Protocol (PCEP) for communications between a Path Computation Client (PCC) and a PCE, or between two PCEs.  Such interactions include path computation requests and path computation replies as well as notifications of specific states related to the use of a PCE in the context of Multiprotocol Label Switching (MPLS) and Generalized MPLS (GMPLS) Traffic Engineering.  PCEP is designed to be flexible and extensible so as to easily allow for the addition of further messages and objects, should further requirements be expressed in the future.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5440'/>
<seriesInfo name='DOI' value='10.17487/RFC5440'/>
</reference>



<reference anchor='RFC7926' target='https://www.rfc-editor.org/info/rfc7926'>
<front>
<title>Problem Statement and Architecture for Information Exchange between Interconnected Traffic-Engineered Networks</title>
<author fullname='A. Farrel' initials='A.' role='editor' surname='Farrel'><organization/></author>
<author fullname='J. Drake' initials='J.' surname='Drake'><organization/></author>
<author fullname='N. Bitar' initials='N.' surname='Bitar'><organization/></author>
<author fullname='G. Swallow' initials='G.' surname='Swallow'><organization/></author>
<author fullname='D. Ceccarelli' initials='D.' surname='Ceccarelli'><organization/></author>
<author fullname='X. Zhang' initials='X.' surname='Zhang'><organization/></author>
<date month='July' year='2016'/>
<abstract><t>In Traffic-Engineered (TE) systems, it is sometimes desirable to establish an end-to-end TE path with a set of constraints (such as bandwidth) across one or more networks from a source to a destination.  TE information is the data relating to nodes and TE links that is used in the process of selecting a TE path.  TE information is usually only available within a network.  We call such a zone of visibility of TE information a domain.  An example of a domain may be an IGP area or an Autonomous System.</t><t>In order to determine the potential to establish a TE path through a series of connected networks, it is necessary to have available a certain amount of TE information about each network.  This need not be the full set of TE information available within each network but does need to express the potential of providing TE connectivity. This subset of TE information is called TE reachability information.</t><t>This document sets out the problem statement for the exchange of TE information between interconnected TE networks in support of end-to-end TE path establishment and describes the best current practice architecture to meet this problem statement.  For reasons that are explained in this document, this work is limited to simple TE constraints and information that determine TE reachability.</t></abstract>
</front>
<seriesInfo name='BCP' value='206'/>
<seriesInfo name='RFC' value='7926'/>
<seriesInfo name='DOI' value='10.17487/RFC7926'/>
</reference>



<reference anchor='RFC8340' target='https://www.rfc-editor.org/info/rfc8340'>
<front>
<title>YANG Tree Diagrams</title>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='L. Berger' initials='L.' role='editor' surname='Berger'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>This document captures the current syntax used in YANG module tree diagrams.  The purpose of this document is to provide a single location for this definition.  This syntax may be updated from time to time based on the evolution of the YANG language.</t></abstract>
</front>
<seriesInfo name='BCP' value='215'/>
<seriesInfo name='RFC' value='8340'/>
<seriesInfo name='DOI' value='10.17487/RFC8340'/>
</reference>



<reference anchor='RFC6991' target='https://www.rfc-editor.org/info/rfc6991'>
<front>
<title>Common YANG Data Types</title>
<author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'><organization/></author>
<date month='July' year='2013'/>
<abstract><t>This document introduces a collection of common data types to be used with the YANG data modeling language.  This document obsoletes RFC 6021.</t></abstract>
</front>
<seriesInfo name='RFC' value='6991'/>
<seriesInfo name='DOI' value='10.17487/RFC6991'/>
</reference>



<reference anchor='RFC8776' target='https://www.rfc-editor.org/info/rfc8776'>
<front>
<title>Common YANG Data Types for Traffic Engineering</title>
<author fullname='T. Saad' initials='T.' surname='Saad'><organization/></author>
<author fullname='R. Gandhi' initials='R.' surname='Gandhi'><organization/></author>
<author fullname='X. Liu' initials='X.' surname='Liu'><organization/></author>
<author fullname='V. Beeram' initials='V.' surname='Beeram'><organization/></author>
<author fullname='I. Bryskin' initials='I.' surname='Bryskin'><organization/></author>
<date month='June' year='2020'/>
<abstract><t>This document defines a collection of common data types and groupings in YANG data modeling language. These derived common types and groupings are intended to be imported by modules that model Traffic Engineering (TE) configuration and state capabilities.</t></abstract>
</front>
<seriesInfo name='RFC' value='8776'/>
<seriesInfo name='DOI' value='10.17487/RFC8776'/>
</reference>



<reference anchor='RFC5441' target='https://www.rfc-editor.org/info/rfc5441'>
<front>
<title>A Backward-Recursive PCE-Based Computation (BRPC) Procedure to Compute Shortest Constrained Inter-Domain Traffic Engineering Label Switched Paths</title>
<author fullname='JP. Vasseur' initials='JP.' role='editor' surname='Vasseur'><organization/></author>
<author fullname='R. Zhang' initials='R.' surname='Zhang'><organization/></author>
<author fullname='N. Bitar' initials='N.' surname='Bitar'><organization/></author>
<author fullname='JL. Le Roux' initials='JL.' surname='Le Roux'><organization/></author>
<date month='April' year='2009'/>
<abstract><t>The ability to compute shortest constrained Traffic Engineering Label Switched Paths (TE LSPs) in Multiprotocol Label Switching (MPLS) and Generalized MPLS (GMPLS) networks across multiple domains has been identified as a key requirement.  In this context, a domain is a collection of network elements within a common sphere of address management or path computational responsibility such as an IGP area or an Autonomous Systems.  This document specifies a procedure relying on the use of multiple Path Computation Elements (PCEs) to compute such inter-domain shortest constrained paths across a predetermined sequence of domains, using a backward-recursive path computation technique.  This technique preserves confidentiality across domains, which is sometimes required when domains are managed by different service providers.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5441'/>
<seriesInfo name='DOI' value='10.17487/RFC5441'/>
</reference>



<reference anchor='RFC5541' target='https://www.rfc-editor.org/info/rfc5541'>
<front>
<title>Encoding of Objective Functions in the Path Computation Element Communication Protocol (PCEP)</title>
<author fullname='JL. Le Roux' initials='JL.' surname='Le Roux'><organization/></author>
<author fullname='JP. Vasseur' initials='JP.' surname='Vasseur'><organization/></author>
<author fullname='Y. Lee' initials='Y.' surname='Lee'><organization/></author>
<date month='June' year='2009'/>
<abstract><t>The computation of one or a set of Traffic Engineering Label Switched Paths (TE LSPs) in MultiProtocol Label Switching (MPLS) and Generalized MPLS (GMPLS) networks is subject to a set of one or more specific optimization criteria, referred to as objective functions (e.g., minimum cost path, widest path, etc.).</t><t>In the Path Computation Element (PCE) architecture, a Path Computation Client (PCC) may want a path to be computed for one or more TE LSPs according to a specific objective function.  Thus, the PCC needs to instruct the PCE to use the correct objective function. Furthermore, it is possible that not all PCEs support the same set of objective functions; therefore, it is useful for the PCC to be able to automatically discover the set of objective functions supported by each PCE.</t><t>This document defines extensions to the PCE communication Protocol (PCEP) to allow a PCE to indicate the set of objective functions it supports.  Extensions are also defined so that a PCC can indicate in a path computation request the required objective function, and a PCE can report in a path computation reply the objective function that was used for path computation.</t><t>This document defines objective function code types for six objective functions previously listed in the PCE requirements work, and provides the definition of four new metric types that apply to a set of synchronized requests.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5541'/>
<seriesInfo name='DOI' value='10.17487/RFC5541'/>
</reference>



<reference anchor='RFC6242' target='https://www.rfc-editor.org/info/rfc6242'>
<front>
<title>Using the NETCONF Protocol over Secure Shell (SSH)</title>
<author fullname='M. Wasserman' initials='M.' surname='Wasserman'><organization/></author>
<date month='June' year='2011'/>
<abstract><t>This document describes a method for invoking and running the Network Configuration Protocol (NETCONF) within a Secure Shell (SSH) session as an SSH subsystem.  This document obsoletes RFC 4742.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6242'/>
<seriesInfo name='DOI' value='10.17487/RFC6242'/>
</reference>



<reference anchor='RFC8446' target='https://www.rfc-editor.org/info/rfc8446'>
<front>
<title>The Transport Layer Security (TLS) Protocol Version 1.3</title>
<author fullname='E. Rescorla' initials='E.' surname='Rescorla'><organization/></author>
<date month='August' year='2018'/>
<abstract><t>This document specifies version 1.3 of the Transport Layer Security (TLS) protocol.  TLS allows client/server applications to communicate over the Internet in a way that is designed to prevent eavesdropping, tampering, and message forgery.</t><t>This document updates RFCs 5705 and 6066, and obsoletes RFCs 5077, 5246, and 6961.  This document also specifies new requirements for TLS 1.2 implementations.</t></abstract>
</front>
<seriesInfo name='RFC' value='8446'/>
<seriesInfo name='DOI' value='10.17487/RFC8446'/>
</reference>



<reference anchor='RFC8341' target='https://www.rfc-editor.org/info/rfc8341'>
<front>
<title>Network Configuration Access Control Model</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>The standardization of network configuration interfaces for use with the Network Configuration Protocol (NETCONF) or the RESTCONF protocol requires a structured and secure operating environment that promotes human usability and multi-vendor interoperability.  There is a need for standard mechanisms to restrict NETCONF or RESTCONF protocol access for particular users to a preconfigured subset of all available NETCONF or RESTCONF protocol operations and content.  This document defines such an access control model.</t><t>This document obsoletes RFC 6536.</t></abstract>
</front>
<seriesInfo name='STD' value='91'/>
<seriesInfo name='RFC' value='8341'/>
<seriesInfo name='DOI' value='10.17487/RFC8341'/>
</reference>



<reference anchor='RFC3688' target='https://www.rfc-editor.org/info/rfc3688'>
<front>
<title>The IETF XML Registry</title>
<author fullname='M. Mealling' initials='M.' surname='Mealling'><organization/></author>
<date month='January' year='2004'/>
<abstract><t>This document describes an IANA maintained registry for IETF standards which use Extensible Markup Language (XML) related items such as Namespaces, Document Type Declarations (DTDs), Schemas, and Resource Description Framework (RDF) Schemas.</t></abstract>
</front>
<seriesInfo name='BCP' value='81'/>
<seriesInfo name='RFC' value='3688'/>
<seriesInfo name='DOI' value='10.17487/RFC3688'/>
</reference>




    </references>

    <references title='Informative References'>





<reference anchor='RFC7491' target='https://www.rfc-editor.org/info/rfc7491'>
<front>
<title>A PCE-Based Architecture for Application-Based Network Operations</title>
<author fullname='D. King' initials='D.' surname='King'><organization/></author>
<author fullname='A. Farrel' initials='A.' surname='Farrel'><organization/></author>
<date month='March' year='2015'/>
<abstract><t>Services such as content distribution, distributed databases, or inter-data center connectivity place a set of new requirements on the operation of networks.  They need on-demand and application-specific reservation of network connectivity, reliability, and resources (such as bandwidth) in a variety of network applications (such as point-to-point connectivity, network virtualization, or mobile back-haul) and in a range of network technologies from packet (IP/MPLS) down to optical.  An environment that operates to meet these types of requirements is said to have Application-Based Network Operations (ABNO).  ABNO brings together many existing technologies and may be seen as the use of a toolbox of existing components enhanced with a few new elements.</t><t>This document describes an architecture and framework for ABNO, showing how these components fit together.  It provides a cookbook of existing technologies to satisfy the architecture and meet the needs of the applications.</t></abstract>
</front>
<seriesInfo name='RFC' value='7491'/>
<seriesInfo name='DOI' value='10.17487/RFC7491'/>
</reference>



<reference anchor='RFC8453' target='https://www.rfc-editor.org/info/rfc8453'>
<front>
<title>Framework for Abstraction and Control of TE Networks (ACTN)</title>
<author fullname='D. Ceccarelli' initials='D.' role='editor' surname='Ceccarelli'><organization/></author>
<author fullname='Y. Lee' initials='Y.' role='editor' surname='Lee'><organization/></author>
<date month='August' year='2018'/>
<abstract><t>Traffic Engineered (TE) networks have a variety of mechanisms to facilitate the separation of the data plane and control plane.  They also have a range of management and provisioning protocols to configure and activate network resources.  These mechanisms represent key technologies for enabling flexible and dynamic networking.  The term &quot;Traffic Engineered network&quot; refers to a network that uses any connection-oriented technology under the control of a distributed or centralized control plane to support dynamic provisioning of end-to- end connectivity.</t><t>Abstraction of network resources is a technique that can be applied to a single network domain or across multiple domains to create a single virtualized network that is under the control of a network operator or the customer of the operator that actually owns the network resources.</t><t>This document provides a framework for Abstraction and Control of TE Networks (ACTN) to support virtual network services and connectivity services.</t></abstract>
</front>
<seriesInfo name='RFC' value='8453'/>
<seriesInfo name='DOI' value='10.17487/RFC8453'/>
</reference>



<reference anchor='RFC8454' target='https://www.rfc-editor.org/info/rfc8454'>
<front>
<title>Information Model for Abstraction and Control of TE Networks (ACTN)</title>
<author fullname='Y. Lee' initials='Y.' surname='Lee'><organization/></author>
<author fullname='S. Belotti' initials='S.' surname='Belotti'><organization/></author>
<author fullname='D. Dhody' initials='D.' surname='Dhody'><organization/></author>
<author fullname='D. Ceccarelli' initials='D.' surname='Ceccarelli'><organization/></author>
<author fullname='B. Yoon' initials='B.' surname='Yoon'><organization/></author>
<date month='September' year='2018'/>
<abstract><t>This document provides an information model for Abstraction and Control of TE Networks (ACTN).</t></abstract>
</front>
<seriesInfo name='RFC' value='8454'/>
<seriesInfo name='DOI' value='10.17487/RFC8454'/>
</reference>


<reference anchor='I-D.ietf-ccamp-otn-topo-yang'>
   <front>
      <title>A YANG Data Model for Optical Transport Network Topology</title>
      <author fullname='Haomian Zheng'>
	 <organization>Huawei Technologies</organization>
      </author>
      <author fullname='Italo Busi'>
	 <organization>Huawei Technologies</organization>
      </author>
      <author fullname='Xufeng Liu'>
	 <organization>Volta Networks</organization>
      </author>
      <author fullname='Sergio Belotti'>
	 <organization>Nokia</organization>
      </author>
      <author fullname='Oscar Gonzalez de Dios'>
	 <organization>Telefonica</organization>
      </author>
      <date day='7' month='March' year='2022'/>
      <abstract>
	 <t>   This document describes a YANG data model to describe the topologies
   of an Optical Transport Network (OTN).  It is independent of control
   plane protocols and captures topological and resource related
   information pertaining to OTN.  This model enables clients, which
   interact with a transport domain controller, for OTN topology related
   operations such as obtaining the relevant topology resource
   information.


	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-ccamp-otn-topo-yang-14'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-ccamp-otn-topo-yang-14.txt' type='TXT'/>
</reference>



<reference anchor='RFC4655' target='https://www.rfc-editor.org/info/rfc4655'>
<front>
<title>A Path Computation Element (PCE)-Based Architecture</title>
<author fullname='A. Farrel' initials='A.' surname='Farrel'><organization/></author>
<author fullname='J.-P. Vasseur' initials='J.-P.' surname='Vasseur'><organization/></author>
<author fullname='J. Ash' initials='J.' surname='Ash'><organization/></author>
<date month='August' year='2006'/>
<abstract><t>Constraint-based path computation is a fundamental building block for traffic engineering systems such as Multiprotocol Label Switching (MPLS) and Generalized Multiprotocol Label Switching (GMPLS) networks.  Path computation in large, multi-domain, multi-region, or multi-layer networks is complex and may require special computational components and cooperation between the different network domains.</t><t>This document specifies the architecture for a Path Computation Element (PCE)-based model to address this problem space.  This document does not attempt to provide a detailed description of all the architectural components, but rather it describes a set of building blocks for the PCE architecture from which solutions may be constructed.  This memo provides information for the Internet community.</t></abstract>
</front>
<seriesInfo name='RFC' value='4655'/>
<seriesInfo name='DOI' value='10.17487/RFC4655'/>
</reference>



<reference anchor='RFC8342' target='https://www.rfc-editor.org/info/rfc8342'>
<front>
<title>Network Management Datastore Architecture (NMDA)</title>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' surname='Schoenwaelder'><organization/></author>
<author fullname='P. Shafer' initials='P.' surname='Shafer'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<author fullname='R. Wilton' initials='R.' surname='Wilton'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>Datastores are a fundamental concept binding the data models written in the YANG data modeling language to network management protocols such as the Network Configuration Protocol (NETCONF) and RESTCONF. This document defines an architectural framework for datastores based on the experience gained with the initial simpler model, addressing requirements that were not well supported in the initial model.  This document updates RFC 7950.</t></abstract>
</front>
<seriesInfo name='RFC' value='8342'/>
<seriesInfo name='DOI' value='10.17487/RFC8342'/>
</reference>



<reference anchor='RFC6805' target='https://www.rfc-editor.org/info/rfc6805'>
<front>
<title>The Application of the Path Computation Element Architecture to the Determination of a Sequence of Domains in MPLS and GMPLS</title>
<author fullname='D. King' initials='D.' role='editor' surname='King'><organization/></author>
<author fullname='A. Farrel' initials='A.' role='editor' surname='Farrel'><organization/></author>
<date month='November' year='2012'/>
<abstract><t>Computing optimum routes for Label Switched Paths (LSPs) across multiple domains in MPLS Traffic Engineering (MPLS-TE) and GMPLS networks presents a problem because no single point of path computation is aware of all of the links and resources in each domain.  A solution may be achieved using the Path Computation Element (PCE) architecture.</t><t>Where the sequence of domains is known a priori, various techniques can be employed to derive an optimum path.  If the domains are simply connected, or if the preferred points of interconnection are also known, the Per-Domain Path Computation technique can be used.  Where there are multiple connections between domains and there is no preference for the choice of points of interconnection, the Backward-Recursive PCE-based Computation (BRPC) procedure can be used to derive an optimal path.</t><t>This document examines techniques to establish the optimum path when the sequence of domains is not known in advance.  The document shows how the PCE architecture can be extended to allow the optimum sequence of domains to be selected, and the optimum end-to-end path to be derived through the use of a hierarchical relationship between domains.  This document is not an Internet Standards Track  specification; it is published for informational purposes.</t></abstract>
</front>
<seriesInfo name='RFC' value='6805'/>
<seriesInfo name='DOI' value='10.17487/RFC6805'/>
</reference>



<reference anchor='RFC7446' target='https://www.rfc-editor.org/info/rfc7446'>
<front>
<title>Routing and Wavelength Assignment Information Model for Wavelength Switched Optical Networks</title>
<author fullname='Y. Lee' initials='Y.' role='editor' surname='Lee'><organization/></author>
<author fullname='G. Bernstein' initials='G.' role='editor' surname='Bernstein'><organization/></author>
<author fullname='D. Li' initials='D.' surname='Li'><organization/></author>
<author fullname='W. Imajuku' initials='W.' surname='Imajuku'><organization/></author>
<date month='February' year='2015'/>
<abstract><t>This document provides a model of information needed by the Routing and Wavelength Assignment (RWA) process in Wavelength Switched Optical Networks (WSONs).  The purpose of the information described in this model is to facilitate constrained optical path computation in WSONs.  This model takes into account compatibility constraints between WSON signal attributes and network elements but does not include constraints due to optical impairments.  Aspects of this information that may be of use to other technologies utilizing a GMPLS control plane are discussed.</t></abstract>
</front>
<seriesInfo name='RFC' value='7446'/>
<seriesInfo name='DOI' value='10.17487/RFC7446'/>
</reference>




    </references>


<section anchor="examples"><name>Examples</name>

<t>This section contains examples of use of the model with RESTCONF
<xref target="RFC8040"/> and JSON encoding.</t>

<t>These examples show how path computation can be requested for the tunnels configuration provided in Appendix A of <xref target="I-D.ietf-teas-yang-te"/>.</t>

<section anchor="basic-example"><name>Basic Path Computation</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 13.1 of of <xref target="I-D.ietf-teas-yang-te"/>.</t>

<t>In this case, the TE Tunnel has only one primary path with no specific constraints.</t>

<figure><artwork><![CDATA[
POST /restconf/operations/ietf-te:te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 1,
          "tunnel-name": "Example_LSP_Tunnel_A_2",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "10.0.0.1",
          "destination": "10.0.0.4",
          "bidirectional": "false",
          "signaling-type": "te-types:path-setup-rsvp"
        }
      ]
    }
  }
}
]]></artwork></figure>

</section>
<section anchor="transient-state-example"><name>Path Computation with transient state</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 13.1 of of <xref target="I-D.ietf-teas-yang-te"/> requesting some transient state to be reported within the operational datastore, as described <xref target="temp-state"/>.</t>

<t>In this case, the TE Tunnel has only one primary path with no specific constraints.</t>

<figure><artwork><![CDATA[
POST /restconf/operations/ietf-te:te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 2,
          "tunnel-name": "Example_LSP_Tunnel_A_2",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "10.0.0.1",
          "destination": "10.0.0.4",
          "bidirectional": "false",
          "signaling-type": "te-types:path-setup-rsvp",
          "requested-state": {
            "transaction-id": "example"
          }
        }
      ]
    }
  }
}
]]></artwork></figure>

</section>
<section anchor="global-path-constraint-example"><name>Path Computation with Global Path Constraint</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 13.3 of of <xref target="I-D.ietf-teas-yang-te"/>. The 'named path constraint' is created in section 13.2 of <xref target="I-D.ietf-teas-yang-te"/> applies to this path computation request.</t>

<figure><artwork><![CDATA[
POST /restconf/operations/ietf-te:te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 3,
          "tunnel-name": "Example_LSP_Tunnel_A_4_1",
          "path-name": "Simple_LSP_1",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "10.0.0.1",
          "destination": "10.0.0.4",
          "bidirectional": "false",
          "signaling-type": "path-setup-rsvp",
          "named-path-constraint": "max-hop-3",
          "requested-state": {}
        }
      ]
    }
  }
}
]]></artwork></figure>

</section>
<section anchor="tunnel-path-constraint-example"><name>Path Computation with Per-tunnel Path Constraint</name>

<t>This example uses the path computation RPC defined in this document to request the computation of the path for the tunnel defined in section 13.4 of of <xref target="I-D.ietf-teas-yang-te"/>, using a per tunnel path constraint.</t>

<figure><artwork><![CDATA[
POST /restconf/operations/ietf-te:te:tunnels-path-compute HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

{
  "ietf-te:input": {
    "path-compute-info": {
      "ietf-te-path-computation:path-request": [
        {
          "request-id": 4,
          "tunnel-name": "Example_LSP_Tunnel_A_4_2",
          "path-name": "path1",
          "encoding": "te-types:lsp-encoding-packet",
          "source": "10.0.0.1",
          "destination": "10.0.0.4",
          "bidirectional": "false",
          "signaling-type": "te-types:path-setup-rsvp",
          "path-metric-bounds": {
            "path-metric-bound": [
              {
                "metric-type": "te-types:path-metric-hop",
                "upper-bound": "3"
              }
            ]
          }
        }
      ]
    }
  }
}
]]></artwork></figure>

</section>
<section anchor="path-computation-result"><name>Path Computation result</name>

<t>This example reports the output of the path computation RPC request described in <xref target="tunnel-path-constraint-example"/>.</t>

<figure><artwork><![CDATA[
HTTP/1.1 200 OK
Host: example.com
Content-Type: application/yang-data+json

{
  "ietf-te:output": {
    "path-compute-result": {
      "ietf-te-path-computation:response": [
        {
          "response-id": 3,
          "computed-paths-properties": {
            "computed-path-properties": [
              {
                "k-index": "1",
                "path-properties": {
                  "path-route-objects": {
                    "path-route-object": [
                      {
                        "index": "1",
                        "numbered-node-hop": {
                          "node-id": "10.0.0.2"
                        }
                      },
                      {
                        "index": "2",
                        "numbered-node-hop": {
                          "node-id": "10.0.0.4"
                        }
                      }
                    ]
                  }
                }
              }
            ]
          },
          "tunnel-ref": "Example_LSP_Tunnel_A_4_1",
          "primary-path-ref": "path1"
        }
      ]
    }
  }
}
]]></artwork></figure>

</section>
</section>
<section numbered="false" anchor="acknowledgments"><name>Acknowledgments</name>

<t>The authors would like to thank Igor Bryskin and Xian Zhang for
   participating in the initial discussions that have triggered this
   work and providing valuable insights.</t>

<t>The authors would like to thank the authors of the TE tunnel YANG
   data model <xref target="I-D.ietf-teas-yang-te"/>, in particular Igor Bryskin, Vishnu Pavan
   Beeram, Tarek Saad and Xufeng Liu, for their inputs to the
   discussions and support in having consistency between the Path
   Computation and TE tunnel YANG data models.</t>

<t>The authors would like to thank Adrian Farrel, Dhruv Dhody, Igor
   Bryskin, Julien Meuric and Lou Berger for their valuable input to the
   discussions that has clarified that the path being set up is not
   necessarily the same as the path that has been previously computed
   and, in particular to Dhruv Dhody, for his suggestion to describe the
   need for a path verification phase to check that the actual path
   being set up meets the required end-to-end metrics and constraints.</t>

<t>The authors would like to thank Aihua Guo, Lou Berger, Shaolong Gan,
   Martin Bjorklund and Tom Petch for their useful comments on how to
   define XPath statements in YANG RPCs.</t>

<t>The authors would like to thank Haomian Zheng, Yanlei Zheng, Tom
   Petch, Aihua Guo and Martin Bjorklund for their review and valuable
   comments to this document.</t>

<t>Previous versions of document were prepared using 2-Word-v2.0.template.dot.</t>

<t>This document was prepared using kramdown.</t>

</section>

    <section anchor="contributors" numbered="false" toc="include" removeInRFC="false">
        <name>Contributors</name>
    <contact initials="V." surname="Lopez" fullname="Victor Lopez">
      <organization>Nokia</organization>
      <address>
        <email>victor.lopez@nokia.com</email>
      </address>
    </contact>
    <contact initials="R." surname="Vilalta" fullname="Ricard Vilalta">
      <organization>CTTC</organization>
      <address>
        <email>ricard.vilalta@cttc.es</email>
      </address>
    </contact>
    <contact initials="K." surname="Sethuraman" fullname="Karthik Sethuraman">
      <organization>NEC</organization>
      <address>
        <email>karthik.sethuraman@necam.com</email>
      </address>
    </contact>
    <contact initials="M." surname="Scharf" fullname="Michael Scharf">
      <organization>Nokia</organization>
      <address>
        <email>michael.scharf@gmail.com</email>
      </address>
    </contact>
    <contact initials="D." surname="Beller" fullname="Dieter Beller">
      <organization>Nokia</organization>
      <address>
        <email>dieter.beller@nokia.com</email>
      </address>
    </contact>
    <contact initials="G." surname="Bruno" fullname="Gianmarco Bruno">
      <organization>Ericsson</organization>
      <address>
        <email>gianmarco.bruno@ericsson.com</email>
      </address>
    </contact>
    <contact initials="F." surname="Lazzeri" fullname="Francesco Lazzeri">
      <organization>Ericsson</organization>
      <address>
        <email>francesco.lazzeri@ericsson.com</email>
      </address>
    </contact>
    <contact initials="Y." surname="Lee" fullname="Young Lee">
      <organization>Samsung Electronics</organization>
      <address>
        <email>younglee.tx@gmail.com</email>
      </address>
    </contact>
    <contact initials="C." surname="Perocchio" fullname="Carlo Perocchio">
      <organization>Ericsson</organization>
      <address>
        <email>carlo.perocchio@ericsson.com</email>
      </address>
    </contact>
    <contact initials="O." surname="Dugeon" fullname="Olivier Dugeon">
      <organization>Orange Labs</organization>
      <address>
        <email>olivier.dugeon@orange.com</email>
      </address>
    </contact>
    <contact initials="J." surname="Meuric" fullname="Julien Meuric">
      <organization>Orange Labs</organization>
      <address>
        <email>julien.meuric@orange.com</email>
      </address>
    </contact>
    </section>

  </back>

<!-- ##markdown-source:
H4sIABGHK2IAA+y9a3sbx5Ew+h2/opf5EDIGQOtiJ6Hj2BRFOzprSzqiYm/O
as8+Q2BIzgrEYGcGoulQ57efrkt3V99mBrSSOHmNzSYU0Jfq6uq6dXXVbDab
LOpltb48UtvuYva7yaSrulV5pI7VX46ff62eFl2hvq2X5Upd1I1qyv/dlm2n
26tN0V2pRX292XZFV9XryaQ4P2/Kd0fqL4X+GVq/hCYnosmyXqyLaz36siku
ullV6im7smhnt7rLDEaciRFnD347uambt5dNvd0cqdenx2fqe/1vmP1r+G6y
KLrysm5uj1TbLSfVpjlSXbNtu4cff/z7jx9OJm1XrJf/XazqtZ7ztmwnm+pI
/WdXL6aqrZuuKS9a/dftNf2hp74u1137X3op2+6qbo4mSs30/ytFUD/r9FDq
ybat8MumBkSVy6qrG/yibjQa/7QtbspKvS4XV+t6VV9Welr4sbwuqtWRqmCM
+bke48srbDnX0wbznJXNZaUnKld11/XN9bx+WxVy9BZ7zs+p55dr+D0xwYt2
UTTq63r9Y7Eqf1TLUj2tagKzWrf693n6R5z0dbkqL+p1tfBmrmHI+SX3WmpI
6/bLzjZNAHG83jbFpTq7Kprrwg3/dV1frko5dLFur4ovL/H7xDia3PQglRvh
5KpaF+rPelps65BzVWk6e/z7LxfQYIu/zxfrYLinxbrSYKuTcqFXVK5WYuTT
plq0bb2Woy6p/Xxh239ZcjMEVp+vdddU59suJqjvqoX+Vn1Tb8ofe3b1HTab
r6BZdk9faSw3Sz3kqlh1Ap8nr1+fyMEabDd/R+2+XHTdYo4kKgf796Lprqq3
mhK7K71L18VagHfqjfeWms5b2/TLdbkorhMgflstrgrNSc70/zQXPQu+pobz
Fht+eQnfJsZ7qhlI2cA5WZV9p2KJ7eBU6HZZBH5dFevrolnog9ds13X/rl+a
xvNzaOxvuT/uV02xXpStHveb4scfdcP+kS9M8/mKmveN/Zd6q5nhN2Xpxjwr
rlv48nRVLroGDp/Hf26hx6os590PWbyeFI3mcy/Lpl7oozKAiQU0nm9M4z5o
X6yqd5XesKfby7IWFPVCL/my1Og590Ctqfl8ic2/rLFVYtj/a7uqyrX6ttzq
qQdH/R9sPb/G1nLQyWw2U7px1xSLbgJdXl+VTan0oVbtolwXjWZpU9XdbvQJ
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
pcLudiuxZbS1eAFcmHvtCnKT79/pvYvAV+BhMQdqEIiI5AEYNlXB37+fx3qh
7xRgrUy6s0w5M6qd+ZXnwndV00t6uVp1Ln4W/Yc28JNKw4mIOjMuaN9TVr1P
h0uO20CVJ/2BYPQ5Uv8d/F9v5Y8wGVYmootiil4o9fzFa/XV6fHZsyffnOpv
XyTDhyjS506l4nTgG4pVoqUci7pF2COOz1EmJRL9+yuBg6Ng5L7kSXeiFfeI
xngxo9ApgfUT+5cyGZtf9I4h68wcBlFX6Ro0vWPEO9Q/BiD/D58//JjXYuBF
m/8Pn6tHH7t10m+2QwzH4ZGJ7UrupP1NhO/ZMQ5dHJ79Lbm3ZrQ3QdzikcjU
1hPv5UFkkWTGODTL+0T8aqd/KvdWrgo78Fl4IXbQ/P1Rcm8/Clrh3wSHxJA9
H6m9vWOkervA+HgjxqDPR8m9/ShohYGSZl/eOHhjvMXfHLmNtGPAfH/8XM/2
ZuTeHroufWcu/cmeuWguOOH2q1O5t3cRjDk+dyfX7J3bOIW74HPJU3rXE/Jo
OSrt3h/lyRxX0cnHRqZ1vCt+TrdIZCaLVjvVxbTaf51QFw44wBHDszBKTZmC
PPxCI2MGk0ZeQD2Wuqm853zuPjYxIcnhnM6MVqwifV+rWdJks4OFCo54i+Rk
uvf+J76oI4UxLjNLoTQ1XcBuN6ACn2NcFr/Kxzwx/BXiyVvZ93QdUrXB5cDU
KsXuxsRgOS4HK51JMFDaPYOrxgzw0qcETgH07HCnJ9CW60VZ5YZuCYxObP1y
gQ41Cfwdn4lhTzPDFlbB4gWZ6sFANUgxE7ulvVTil9imXfWehhrPhKweFXug
jmens69MuKDelgcff2w9vOcmrcYBBYzK6Ch1VV3izelV4ZUbmySnaalYsptH
/d5No/V4Ow94RY5nJ17T3yWbBg8Gh/2LeXIwpzLvp7NhfRz5Q6up4Q+AFSxO
ewNnjj4b5xD0YfJDyBcZMBkm6+G4V3OjGQKTfKvbxyD4eoXtpNzrYgzqQRdX
3WMDHU8hmeEJmwz7GJVDBjQH0KLlKEqSxWP0vguhj2XjI22BsbLio0DC0sfJ
IprqF139b6Crf/7gExXo6sQhPlcPP3Hr5N/Mk5l/XV2dVmd/tdNndXVE4IfU
1RN4G62r99DHR97ePuC9jXX1ITrNY3L0GL172zfGz1FXDz9pXd3B18fn0p9B
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
Cc4ib+e2++XI/ktT6C9HNkDIP/GRHVXf0J3gYb8wDbprZUO/4w5lDaNl4INx
y3gYIV2lmYI3lh8ja5pBip2CblAoGlUgDBuMqbZ157XtL7XFbcfX2eIO44ts
mQ7ZeP+eIH08GdkY/4GO+bh+PzIfJ8nG8sdt8/H7Cbr4Jf79l/h32/RfIf49
/3Qyy4tzzyRHdPCfRGY6DL6LYbhHvIiBluPewuDEY1/B/CzvoHe+d97hrnmH
++UMGCa7imW9yoiDZGIq74T0Z6WyTbn1fVJShWMM524Kewwno+pfUi4TVaiY
9qehClvvsA612zrknvpplXx9duecSunuIxMq+VrrztmUvO79bEjJpiOYkdd+
BEvy2g8zJty62/XiqqnXHBkkk5ziz+/Khfm3Zc2r4ofifOUd4HSB8OQVePbG
W05hMt6wI/Y3KqyXboCTMT/BKKMCTpSkzVFV07ltPuBEienDmIgAulxMhD9T
NibCa5aIiYghcTERSUjimIg0JL2ApGIilFEz4ohyBwj/2gaZdpURku5mS/nH
LnuzJdsZTp+82QoampXkb7bSHfputvIw+/c8fTB7tzxpEHpueYZh7odaCOAR
VzbRerM3W4kV5262PtCae2+2/sFoCm62EsiJb7bS0w/dbI1Y6CARi5st+ZuS
nqkUlK6N562Lm6icipxsepfSmHMtla9AD7U1nwHfXnYJY9173Dx+ZCywET4y
lr+KR8ZWZxl4bRzgb+xr4wQyh0Vo2CN4WuysBn9NuXjn+NO36mzgc7hZmcDn
US0zWvCYrIH1tkulDdTm8HbV2cSBTW1zLWPaQPrT5g2MGvWlDozUqqa2Rdgo
i8jM5YL2BXbYUjTUYL2diRsTueO6G/8WwvG7VNtg5BQbMq16KTXgorpP+mV8
VreRXYvFYnu9XRW47za+11cCUxCmA5CTU4yIRVYpBt7UI/S0oEM+Qrl/HbeR
QtmziFTc8uAKRu6K7ZiPZo572E6JwObMutP6fGrRg6p9dsU7bVqk8OehHrNV
g2ZADuqxQGeMgxTUXsTzANyyrX9XmwNkbHRdrn/OHLmPXRKsaKyJEqJ2F2sl
6DvWcLmPBZNb3YBiH0C4k47fs7qR65Pdd1Xj72f2BGgabwF9QETtaBf9nNDc
bzYFyB1jQQXQ7W5M9WFn/BnLGFiBpQX7nrW1YqNLN8+aXUnjBRlenwV2D1Os
xybT02Wtsg9onuWWGjwj7e9iPnlrLhBu0S2NSpHoGHSPxK+PUJW4J4pbS+8s
kW3WuJWO8axnN2UulE1TN5gSfciwcC2TvkHdnlpQqeiNYSIpHUM2h4iMtiuu
N8Sx8MYTqgfMCqhgVIWlR2TXpixacZOWUH94s23S8r43YGFuc9s9yv1pf7QJ
NaUZ7JSiIL2qP3lQhCQY0CSd7B04TDP7Rd/ANntmckg/52gI7dCQKWhVPHQK
Xjd0yjSnEJzWy+XP2wSECP+8qFYdP9i2tjmnpjWWu4jmaQ/E3qpcKy1tPfV4
ADRyGEjPgBx4qU/EqrQOBJ+2xkGARRGgmIMo1qA0qa/Kz/cShR+8qg17720d
CCyygHUgsIQDVVmgkgt47iYDtRvUXyd0QGewj/DFg/mDz/R3aFBsikWp9rbN
+gj6H20KPXl79MP16mjdHuGxzo27B2NAJunqB7yZWnwGBR6qayxIz51wbtHq
M/ynXxdBqb1XX538RX+O1DGt8SmUqfjWVclowDZdqNP1pVYfygbryflllaAA
17O1JqkLvZ4WQXsP4Bz+Rj2H6iZYjEpPo6joCVbm0nBsVrB8mBvLd2ChDNZV
ihYu3UtW4LgwGIxQQ72TpQapm0WVfNS5PjYaq1BhTLed/+Ywxgmx/BAz9G0e
P7/77W8/PYJCYNd6Ax2SXuNYGSTNHR7q5rIwN5U46l4KqcdwuwyhDtumRJSe
mbgDtf/69PiMj+H3dfMWvvsanB04BxbcW9Ap2fv+a/V9eX6k//zDVddtjg4P
u7petVj3aK4BOby5PASkHf6Rh/tafaONfd3hD9eF5gv1Efz6pWn+xwk1o52D
YZ91xapWT7ZtFXoWzQAVtJif6xZfXm2Lm7Ka622JBzorm8tKj1Su6q7LDtZi
q/k5tfpyXb+tivR431ULIK5v6k35Y260d9hmvoI2fWO9aBdFo76u1z8Wq/JH
tSzV06puc6PW0Hp+ya2X5VK3/RIq71zU62qRmeJ4vW2KS3V2VTTXRW5kzdyu
ii8v6/pyVaaH+Ysm9rOrPPquKn06Hv/+S4hzKLYanPp6vljH47zSgDZLjcRV
seqy8DTYav6OWn256LrFvGzj0f69aLqr6q3e4+5KL/O6iNzQZsS31HLe2pZf
rstFcZ1e7bfV4qrQjOlM/09zkRvzmlrNW2z15SV8nR7vqT6Xep/USbnQCytX
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
Xp07A00TpKuke/A/U+Z/Ji1kAgA=

-->

</rfc>

