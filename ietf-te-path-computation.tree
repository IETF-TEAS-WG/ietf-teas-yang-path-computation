module: ietf-te-path-computation
    +--rw paths
    |  +--ro path* [path-id]
    |     +--ro _telink* [link-ref]
    |     |  +--ro link-ref       -> /nd:networks/network[nd:network-id=current()/../network-ref]/lnk:link/link-id
    |     |  +--ro network-ref?   -> /nd:networks/network/network-id
    |     +--ro _routingConstraint
    |     |  +--ro requestedCapacity?   tet:te-bandwidth
    |     |  +--ro pathConstraints
    |     |  |  +--ro path-constraints
    |     |  |     +--ro topology-id?       te-types:te-topology-id
    |     |  |     +--ro cost-limit?        uint32
    |     |  |     +--ro hop-limit?         uint8
    |     |  |     +--ro metric-type?       identityref
    |     |  |     +--ro tiebreaker-type?   identityref
    |     |  |     +--ro ignore-overload?   boolean
    |     |  |     +--ro path-affinities {named-path-affinities}?
    |     |  |     |  +--ro (style)?
    |     |  |     |     +--:(values)
    |     |  |     |     |  +--ro value?         uint32
    |     |  |     |     |  +--ro mask?          uint32
    |     |  |     |     +--:(named)
    |     |  |     |        +--ro constraints* [usage]
    |     |  |     |           +--ro usage         identityref
    |     |  |     |           +--ro constraint
    |     |  |     |              +--ro affinity-names* [name]
    |     |  |     |                 +--ro name    string
    |     |  |     +--ro path-srlgs
    |     |  |        +--ro (style)?
    |     |  |           +--:(values)
    |     |  |           |  +--ro usage?         identityref
    |     |  |           |  +--ro values*        te-types:srlg
    |     |  |           +--:(named)
    |     |  |              +--ro constraints* [usage]
    |     |  |                 +--ro usage         identityref
    |     |  |                 +--ro constraint
    |     |  |                    +--ro srlg-names* [name]
    |     |  |                       +--ro name    string
    |     |  +--ro _avoidTopology
    |     |     +--ro provider-ref?      -> /nw:networks/network[nw:network-id = current()/../network-ref]/tet:provider-id
    |     |     +--ro client-ref?        -> /nw:networks/network[nw:network-id = current()/../network-ref]/tet:client-id
    |     |     +--ro te-topology-ref?   -> /nw:networks/network[nw:network-id = current()/../network-ref]/tet:te-topology-id
    |     |     +--ro network-ref?       -> /nw:networks/network/network-id
    |     +--ro path-id               yang-types:uuid
    +--rw pathComputationService
       +--ro _path-ref*                 -> /path/path-id
       +--rw _servicePort
       |  +--rw source?          inet:ip-address
       |  +--rw destination?     inet:ip-address
       |  +--rw src-tp-id?       binary
       |  +--rw dst-tp-id?       binary
       |  +--rw bidirectional
       |     +--rw association
       |        +--rw id?              uint16
       |        +--rw source?          inet:ip-address
       |        +--rw global-source?   inet:ip-address
       |        +--rw type?            identityref
       |        +--rw provisioing?     identityref
       +--rw _routingConstraint
       |  +--ro requestedCapacity?   tet:te-bandwidth
       |  +--ro pathConstraints
       |  |  +--ro path-constraints
       |  |     +--ro topology-id?       te-types:te-topology-id
       |  |     +--ro cost-limit?        uint32
       |  |     +--ro hop-limit?         uint8
       |  |     +--ro metric-type?       identityref
       |  |     +--ro tiebreaker-type?   identityref
       |  |     +--ro ignore-overload?   boolean
       |  |     +--ro path-affinities {named-path-affinities}?
       |  |     |  +--ro (style)?
       |  |     |     +--:(values)
       |  |     |     |  +--ro value?         uint32
       |  |     |     |  +--ro mask?          uint32
       |  |     |     +--:(named)
       |  |     |        +--ro constraints* [usage]
       |  |     |           +--ro usage         identityref
       |  |     |           +--ro constraint
       |  |     |              +--ro affinity-names* [name]
       |  |     |                 +--ro name    string
       |  |     +--ro path-srlgs
       |  |        +--ro (style)?
       |  |           +--:(values)
       |  |           |  +--ro usage?         identityref
       |  |           |  +--ro values*        te-types:srlg
       |  |           +--:(named)
       |  |              +--ro constraints* [usage]
       |  |                 +--ro usage         identityref
       |  |                 +--ro constraint
       |  |                    +--ro srlg-names* [name]
       |  |                       +--ro name    string
       |  +--ro _avoidTopology
       |     +--ro provider-ref?      -> /nw:networks/network[nw:network-id = current()/../network-ref]/tet:provider-id
       |     +--ro client-ref?        -> /nw:networks/network[nw:network-id = current()/../network-ref]/tet:client-id
       |     +--ro te-topology-ref?   -> /nw:networks/network[nw:network-id = current()/../network-ref]/tet:te-topology-id
       |     +--ro network-ref?       -> /nw:networks/network/network-id
       +--rw _objectiveFunction
       |  +--ro objectiveFunction?   ObjectiveFunction
       +--rw _optimizationConstraint
          +--ro trafficInterruption?   DirectiveValue

  rpcs:
    +---x statelessComputeP2PPath
    |  +---w input
    |  |  +---w servicePort*
    |  |  |  +---w source?          inet:ip-address
    |  |  |  +---w destination?     inet:ip-address
    |  |  |  +---w src-tp-id?       binary
    |  |  |  +---w dst-tp-id?       binary
    |  |  |  +---w bidirectional
    |  |  |     +---w association
    |  |  |        +---w id?              uint16
    |  |  |        +---w source?          inet:ip-address
    |  |  |        +---w global-source?   inet:ip-address
    |  |  |        +---w type?            identityref
    |  |  |        +---w provisioing?     identityref
    |  |  +---w routingConstraint
    |  |  |  +---w requestedCapacity?   tet:te-bandwidth
    |  |  |  +---w pathConstraints
    |  |  |  |  +---w path-constraints
    |  |  |  |     +---w topology-id?       te-types:te-topology-id
    |  |  |  |     +---w cost-limit?        uint32
    |  |  |  |     +---w hop-limit?         uint8
    |  |  |  |     +---w metric-type?       identityref
    |  |  |  |     +---w tiebreaker-type?   identityref
    |  |  |  |     +---w ignore-overload?   boolean
    |  |  |  |     +---w path-affinities {named-path-affinities}?
    |  |  |  |     |  +---w (style)?
    |  |  |  |     |     +--:(values)
    |  |  |  |     |     |  +---w value?         uint32
    |  |  |  |     |     |  +---w mask?          uint32
    |  |  |  |     |     +--:(named)
    |  |  |  |     |        +---w constraints* [usage]
    |  |  |  |     |           +---w usage         identityref
    |  |  |  |     |           +---w constraint
    |  |  |  |     |              +---w affinity-names* [name]
    |  |  |  |     |                 +---w name    string
    |  |  |  |     +---w path-srlgs
    |  |  |  |        +---w (style)?
    |  |  |  |           +--:(values)
    |  |  |  |           |  +---w usage?         identityref
    |  |  |  |           |  +---w values*        te-types:srlg
    |  |  |  |           +--:(named)
    |  |  |  |              +---w constraints* [usage]
    |  |  |  |                 +---w usage         identityref
    |  |  |  |                 +---w constraint
    |  |  |  |                    +---w srlg-names* [name]
    |  |  |  |                       +---w name    string
    |  |  |  +---w _avoidTopology
    |  |  |     +---w provider-ref?      -> /nw:networks/network[nw:network-id = current()/../network-ref]/tet:provider-id
    |  |  |     +---w client-ref?        -> /nw:networks/network[nw:network-id = current()/../network-ref]/tet:client-id
    |  |  |     +---w te-topology-ref?   -> /nw:networks/network[nw:network-id = current()/../network-ref]/tet:te-topology-id
    |  |  |     +---w network-ref?       -> /nw:networks/network/network-id
    |  |  +---w objectiveFunction
    |  |     +---w objectiveFunction?   ObjectiveFunction
    |  +--ro output
    |     +--ro pathCompService
    |        +--ro _path-ref*                 -> /path/path-id
    |        +--ro _servicePort
    |        |  +--ro source?          inet:ip-address
    |        |  +--ro destination?     inet:ip-address
    |        |  +--ro src-tp-id?       binary
    |        |  +--ro dst-tp-id?       binary
    |        |  +--ro bidirectional
    |        |     +--ro association
    |        |        +--ro id?              uint16
    |        |        +--ro source?          inet:ip-address
    |        |        +--ro global-source?   inet:ip-address
    |        |        +--ro type?            identityref
    |        |        +--ro provisioing?     identityref
    |        +--ro _routingConstraint
    |        |  +--ro requestedCapacity?   tet:te-bandwidth
    |        |  +--ro pathConstraints
    |        |  |  +--ro path-constraints
    |        |  |     +--ro topology-id?       te-types:te-topology-id
    |        |  |     +--ro cost-limit?        uint32
    |        |  |     +--ro hop-limit?         uint8
    |        |  |     +--ro metric-type?       identityref
    |        |  |     +--ro tiebreaker-type?   identityref
    |        |  |     +--ro ignore-overload?   boolean
    |        |  |     +--ro path-affinities {named-path-affinities}?
    |        |  |     |  +--ro (style)?
    |        |  |     |     +--:(values)
    |        |  |     |     |  +--ro value?         uint32
    |        |  |     |     |  +--ro mask?          uint32
    |        |  |     |     +--:(named)
    |        |  |     |        +--ro constraints* [usage]
    |        |  |     |           +--ro usage         identityref
    |        |  |     |           +--ro constraint
    |        |  |     |              +--ro affinity-names* [name]
    |        |  |     |                 +--ro name    string
    |        |  |     +--ro path-srlgs
    |        |  |        +--ro (style)?
    |        |  |           +--:(values)
    |        |  |           |  +--ro usage?         identityref
    |        |  |           |  +--ro values*        te-types:srlg
    |        |  |           +--:(named)
    |        |  |              +--ro constraints* [usage]
    |        |  |                 +--ro usage         identityref
    |        |  |                 +--ro constraint
    |        |  |                    +--ro srlg-names* [name]
    |        |  |                       +--ro name    string
    |        |  +--ro _avoidTopology
    |        |     +--ro provider-ref?      -> /nw:networks/network[nw:network-id = current()/../network-ref]/tet:provider-id
    |        |     +--ro client-ref?        -> /nw:networks/network[nw:network-id = current()/../network-ref]/tet:client-id
    |        |     +--ro te-topology-ref?   -> /nw:networks/network[nw:network-id = current()/../network-ref]/tet:te-topology-id
    |        |     +--ro network-ref?       -> /nw:networks/network/network-id
    |        +--ro _objectiveFunction
    |        |  +--ro objectiveFunction?   ObjectiveFunction
    |        +--ro _optimizationConstraint
    |           +--ro trafficInterruption?   DirectiveValue
    +---x optimizeP2PPath
       +---w input
       |  +---w pathIdOrName?             string
       |  +---w routingConstraint
       |  |  +---w requestedCapacity?   tet:te-bandwidth
       |  |  +---w pathConstraints
       |  |  |  +---w path-constraints
       |  |  |     +---w topology-id?       te-types:te-topology-id
       |  |  |     +---w cost-limit?        uint32
       |  |  |     +---w hop-limit?         uint8
       |  |  |     +---w metric-type?       identityref
       |  |  |     +---w tiebreaker-type?   identityref
       |  |  |     +---w ignore-overload?   boolean
       |  |  |     +---w path-affinities {named-path-affinities}?
       |  |  |     |  +---w (style)?
       |  |  |     |     +--:(values)
       |  |  |     |     |  +---w value?         uint32
       |  |  |     |     |  +---w mask?          uint32
       |  |  |     |     +--:(named)
       |  |  |     |        +---w constraints* [usage]
       |  |  |     |           +---w usage         identityref
       |  |  |     |           +---w constraint
       |  |  |     |              +---w affinity-names* [name]
       |  |  |     |                 +---w name    string
       |  |  |     +---w path-srlgs
       |  |  |        +---w (style)?
       |  |  |           +--:(values)
       |  |  |           |  +---w usage?         identityref
       |  |  |           |  +---w values*        te-types:srlg
       |  |  |           +--:(named)
       |  |  |              +---w constraints* [usage]
       |  |  |                 +---w usage         identityref
       |  |  |                 +---w constraint
       |  |  |                    +---w srlg-names* [name]
       |  |  |                       +---w name    string
       |  |  +---w _avoidTopology
       |  |     +---w provider-ref?      -> /nw:networks/network[nw:network-id = current()/../network-ref]/tet:provider-id
       |  |     +---w client-ref?        -> /nw:networks/network[nw:network-id = current()/../network-ref]/tet:client-id
       |  |     +---w te-topology-ref?   -> /nw:networks/network[nw:network-id = current()/../network-ref]/tet:te-topology-id
       |  |     +---w network-ref?       -> /nw:networks/network/network-id
       |  +---w optimizationConstraint
       |  |  +---w trafficInterruption?   DirectiveValue
       |  +---w objectiveFunction
       |     +---w objectiveFunction?   ObjectiveFunction
       +--ro output
          +--ro pathCompService
             +--ro _path-ref*                 -> /path/path-id
             +--ro _servicePort
             |  +--ro source?          inet:ip-address
             |  +--ro destination?     inet:ip-address
             |  +--ro src-tp-id?       binary
             |  +--ro dst-tp-id?       binary
             |  +--ro bidirectional
             |     +--ro association
             |        +--ro id?              uint16
             |        +--ro source?          inet:ip-address
             |        +--ro global-source?   inet:ip-address
             |        +--ro type?            identityref
             |        +--ro provisioing?     identityref
             +--ro _routingConstraint
             |  +--ro requestedCapacity?   tet:te-bandwidth
             |  +--ro pathConstraints
             |  |  +--ro path-constraints
             |  |     +--ro topology-id?       te-types:te-topology-id
             |  |     +--ro cost-limit?        uint32
             |  |     +--ro hop-limit?         uint8
             |  |     +--ro metric-type?       identityref
             |  |     +--ro tiebreaker-type?   identityref
             |  |     +--ro ignore-overload?   boolean
             |  |     +--ro path-affinities {named-path-affinities}?
             |  |     |  +--ro (style)?
             |  |     |     +--:(values)
             |  |     |     |  +--ro value?         uint32
             |  |     |     |  +--ro mask?          uint32
             |  |     |     +--:(named)
             |  |     |        +--ro constraints* [usage]
             |  |     |           +--ro usage         identityref
             |  |     |           +--ro constraint
             |  |     |              +--ro affinity-names* [name]
             |  |     |                 +--ro name    string
             |  |     +--ro path-srlgs
             |  |        +--ro (style)?
             |  |           +--:(values)
             |  |           |  +--ro usage?         identityref
             |  |           |  +--ro values*        te-types:srlg
             |  |           +--:(named)
             |  |              +--ro constraints* [usage]
             |  |                 +--ro usage         identityref
             |  |                 +--ro constraint
             |  |                    +--ro srlg-names* [name]
             |  |                       +--ro name    string
             |  +--ro _avoidTopology
             |     +--ro provider-ref?      -> /nw:networks/network[nw:network-id = current()/../network-ref]/tet:provider-id
             |     +--ro client-ref?        -> /nw:networks/network[nw:network-id = current()/../network-ref]/tet:client-id
             |     +--ro te-topology-ref?   -> /nw:networks/network[nw:network-id = current()/../network-ref]/tet:te-topology-id
             |     +--ro network-ref?       -> /nw:networks/network/network-id
             +--ro _objectiveFunction
             |  +--ro objectiveFunction?   ObjectiveFunction
             +--ro _optimizationConstraint
                +--ro trafficInterruption?   DirectiveValue
